[3e4c1beccfe47ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf50000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c1beccff9b8d] jit-backend-dump}
[3e4c1becd035c2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf500b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c1becd038f3c] jit-backend-dump}
[3e4c1becd04646b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf50180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c1becd0481d9] jit-backend-dump}
[3e4c1becd04f0b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf501f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c1becd050b35] jit-backend-dump}
[3e4c1becd05a200] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf50270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c1becd05bc21] jit-backend-dump}
[3e4c1becd065d6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf502f
[3e4c1becd0699ee] jit-backend-dump}
[3e4c1becd06f3e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf
[3e4c1becd07181e] jit-backend-dump}
[3e4c1becd07631c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf
[3e4c1becd078942] jit-backend-dump}
[3e4c1becd10458c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf
[3e4c1becd10781a] jit-backend-dump}
[3e4c1becd10e3f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf508f
[3e4c1becd110b39] jit-backend-dump}
[3e4c1becd115d06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf50a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c1becd117973] jit-backend-dump}
[3e4c1becd12cec2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf50af
[3e4c1becd1300c6] jit-backend-dump}
[3e4c1becd1381b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf50ce
[3e4c1becd13b28e] jit-backend-dump}
[3e4c1becd14309a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf50ee
[3e4c1becd146377] jit-backend-dump}
[3e4c1becd14c82e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf510d
[3e4c1becd14f742] jit-backend-dump}
[3e4c1becd1596aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf512c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB7002F5AC217F000041FFD3E99CFFFFFF
[3e4c1becd15b90d] jit-backend-dump}
[3e4c1becd160cf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB7002F5AC217F000041FFD3E9BCFFFFFF
[3e4c1becd162514] jit-backend-dump}
[3e4c1becd1678fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf
[3e4c1becd16a4cf] jit-backend-dump}
[3e4c1becd16f885] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf515c
[3e4c1becd1720d2] jit-backend-dump}
[3e4c1becd18354f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB700AF5AC217F000041FFE3
[3e4c1becd184d07] jit-backend-dump}
[3e4c1becd8affee] {jit-backend
[3e4c1becd960158] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf
[3e4c1becd967961] jit-backend-dump}
[3e4c1becd9773aa] {jit-backend-addr
Loop 4 ((if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))) has address 0x7f21acf51a1d to 0x7f21acf51b50 (bootstrap 0x7f21acf51990)
       gc table: 0x7f21acf51910
       function: 0x7f21acf51990
         resops: 0x7f21acf51a1d
       failures: 0x7f21acf51b50
            end: 0x7f21acf51cea
[3e4c1becd97baaa] jit-backend-addr}
[3e4c1becd980d4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51a47 +0  17010000
[3e4c1becd9820d9] jit-backend-dump}
[3e4c1becd985594] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51a5d +0  1D010000
[3e4c1becd9864b4] jit-backend-dump}
[3e4c1becd9896dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51a6d +0  29010000
[3e4c1becd98a521] jit-backend-dump}
[3e4c1becd98d530] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51a80 +0  32010000
[3e4c1becd98e34c] jit-backend-dump}
[3e4c1becd991352] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51a96 +0  38010000
[3e4c1becd9920d2] jit-backend-dump}
[3e4c1becd99501a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51aac +0  3E010000
[3e4c1becd995dad] jit-backend-dump}
[3e4c1becd998c86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51ab5 +0  51010000
[3e4c1becd999a35] jit-backend-dump}
[3e4c1becd99cbc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51acb +0  73010000
[3e4c1becd99d93c] jit-backend-dump}
[3e4c1becd9a08f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51ae1 +0  79010000
[3e4c1becd9a1685] jit-backend-dump}
[3e4c1becd9a45f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51af5 +0  81010000
[3e4c1becd9a53af] jit-backend-dump}
[3e4c1becd9a83a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51b2a +0  84010000
[3e4c1becd9a911f] jit-backend-dump}
[3e4c1becd9ac0fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51b40 +0  8A010000
[3e4c1becd9ace9c] jit-backend-dump}
[3e4c1becd9b096c] jit-backend}
[3e4c1becd9b4744] {jit-log-opt-loop
# Loop 4 ((if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))) : loop with 38 ops
[p0, p1]
+277: label(p0, p1, descr=TargetToken(55799264))
+296: guard_class(p0, 16500016, descr=<Guard0x34fc440>) [p1, p0]
+315: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+319: guard_nonnull_class(p3, 16471056, descr=<Guard0x34fc4a0>) [p1, p0]
+344: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+347: guard_false(i6, descr=<Guard0x3553a90>) [p1, p0]
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
+353: guard_class(p1, 16435920, descr=<Guard0x3553ad8>) [p1, p0]
+372: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+376: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x34fc500>) [p1, p0]
debug_merge_point(0, 0, '(null? x4848)')
+394: p10 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+398: guard_nonnull_class(p10, 16471056, descr=<Guard0x34fc560>) [p1, p0]
+416: i13 = instance_ptr_eq(p10, ConstPtr(ptr12))
+419: guard_false(i13, descr=<Guard0x3553b20>) [p1, p0]
+425: guard_not_invalidated(descr=<Guard0x3553b68>) [p1, p0]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+425: p14 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+429: guard_nonnull_class(p14, 16471056, descr=<Guard0x34fc5c0>) [p1, p0]
+447: p16 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+451: guard_nonnull_class(p16, 16471056, descr=<Guard0x34fc620>) [p1, p0]
+469: p18 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+480: i20 = instance_ptr_eq(p18, ConstPtr(ptr19))
+483: guard_true(i20, descr=<Guard0x3553bb0>) [p1, p0]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+489: label(p18, p14, p16, p1, p8, descr=TargetToken(55799344))
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
+520: guard_not_invalidated(descr=<Guard0x34fc680>) [p1, p8, p16, p14, p18]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+520: p21 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+524: guard_nonnull_class(p21, 16471056, descr=<Guard0x34fc6e0>) [p1, p8, p16, p14, p18]
+542: p23 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+546: guard_nonnull_class(p23, 16471056, descr=<Guard0x34fc740>) [p1, p8, p16, p14, p18]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+564: jump(p18, p21, p23, p1, p8, descr=TargetToken(55799344))
+576: --end of the loop--
[3e4c1becd9e15e3] jit-log-opt-loop}
[3e4c1becdde7a11] {jit-backend
[3e4c1becde7249c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51e
[3e4c1becde7ac86] jit-backend-dump}
[3e4c1becde85861] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51f24 +0  1F000000
[3e4c1becde86da0] jit-backend-dump}
[3e4c1becde8ab87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52135 +0  1F000000
[3e4c1becde8bae8] jit-backend-dump}
[3e4c1becde8ec07] {jit-backend-addr
bridge out of Guard 0x34fc560 has address 0x7f21acf51f20 to 0x7f21acf52130
       gc table: 0x7f21acf51e60
    jump target: 0x7f21acf51f20
         resops: 0x7f21acf51f2e
       failures: 0x7f21acf52130
            end: 0x7f21acf523a3
[3e4c1becde91234] jit-backend-addr}
[3e4c1becde94536] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51f3e +0  31020000
[3e4c1becde9541c] jit-backend-dump}
[3e4c1becde98496] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51f4b +0  40020000
[3e4c1becde992ce] jit-backend-dump}
[3e4c1becde9c3ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51f5b +0  4C020000
[3e4c1becde9d13f] jit-backend-dump}
[3e4c1becdea011a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51f67 +0  5C020000
[3e4c1becdea0e73] jit-backend-dump}
[3e4c1becdea3e7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51f7e +0  61020000
[3e4c1becdea4be6] jit-backend-dump}
[3e4c1becdea7af1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51f8b +0  70020000
[3e4c1becdea881c] jit-backend-dump}
[3e4c1becdeab7f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51f94 +0  83020000
[3e4c1becdeac54f] jit-backend-dump}
[3e4c1becdeaf579] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51fa8 +0  A7020000
[3e4c1becdeb02f3] jit-backend-dump}
[3e4c1becdeb3339] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51fbe +0  AD020000
[3e4c1becdeb40db] jit-backend-dump}
[3e4c1becdeb7054] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51fd6 +0  B1020000
[3e4c1becdeb7db9] jit-backend-dump}
[3e4c1becdebad22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51fe3 +0  C0020000
[3e4c1becdebbab8] jit-backend-dump}
[3e4c1becdebea28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51ffa +0  C5020000
[3e4c1becdebf7a2] jit-backend-dump}
[3e4c1becdec2764] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52011 +0  CA020000
[3e4c1becdec34a4] jit-backend-dump}
[3e4c1becdec637e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52028 +0  CF020000
[3e4c1becdec70a6] jit-backend-dump}
[3e4c1becdeca006] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52035 +0  DE020000
[3e4c1becdecad52] jit-backend-dump}
[3e4c1becdecdbfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52049 +0  E6020000
[3e4c1becdece91d] jit-backend-dump}
[3e4c1becded1821] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52055 +0  F6020000
[3e4c1becded257a] jit-backend-dump}
[3e4c1becded542f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5206b +0  FC020000
[3e4c1becded6154] jit-backend-dump}
[3e4c1becded9077] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52081 +0  02030000
[3e4c1becded9dab] jit-backend-dump}
[3e4c1becdedea70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51aac +0  70040000
[3e4c1becdedf8f1] jit-backend-dump}
[3e4c1becdee6aa2] jit-backend}
[3e4c1becdeea55f] {jit-log-opt-bridge
# bridge out of Guard 0x34fc560 with 68 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x34fc980>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+230: guard_nonnull(p3, descr=<Guard0x35a1cd0>) [p0, p1]
+246: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+249: guard_false(i5, descr=<Guard0x35a1d18>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
+255: guard_class(p0, 16435920, descr=<Guard0x35a1d60>) [p0, p1]
+267: p7 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+271: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x34fc9e0>) [p0, p1]
debug_merge_point(0, 0, '(null? x4848)')
+290: p9 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull(p9, descr=<Guard0x35a1da8>) [p0, p1]
+303: i11 = instance_ptr_eq(p9, ConstPtr(ptr10))
+306: guard_true(i11, descr=<Guard0x35a1df0>) [p0, p1]
+312: guard_not_invalidated(descr=<Guard0x35a1e38>) [p0, p1]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, 'or-part')
+312: p12 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+323: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x35a1e80>) [p0, p1]
+332: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+336: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (null? x4848)')
debug_merge_point(0, 0, '(let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))')
+340: guard_class(p15, 16435920, descr=<Guard0x35a1ec8>) [p0, p1]
+354: p17 = getfield_gc_r(p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+358: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x34fca40>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr x) y z)')
+378: guard_class(p14, 16500368, descr=<Guard0x35a1f10>) [p0, p1]
+391: p20 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+395: guard_nonnull_class(p20, 16471056, descr=<Guard0x34fcaa0>) [p0, p1]
+414: p22 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+418: guard_nonnull_class(p22, 16471056, descr=<Guard0x34fcb00>) [p0, p1]
+437: p24 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+441: guard_nonnull_class(p24, 16471056, descr=<Guard0x34fcb60>) [p0, p1]
+460: p26 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+464: guard_nonnull(p26, descr=<Guard0x35a1f58>) [p0, p1]
+473: p27 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+484: i29 = instance_ptr_eq(p27, ConstPtr(ptr28))
+487: guard_true(i29, descr=<Guard0x35a1fa0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr x) y z)')
debug_merge_point(0, 0, '(shorterp y x)')
+493: guard_class(p27, 16505296, descr=<Guard0x35bc020>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+505: p31 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+509: guard_nonnull_class(p31, 16471056, descr=<Guard0x34fcbc0>) [p0, p1]
+527: p33 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+531: guard_nonnull_class(p33, 16471056, descr=<Guard0x34fcc20>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+549: p35 = new_with_vtable(descr=<SizeDescr 40>)
+593: p36 = new_with_vtable(descr=<SizeDescr 40>)
+604: setfield_gc(p36, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+608: setfield_gc(p36, p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+612: setfield_gc(p36, p24, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+616: setfield_gc(p36, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+620: p37 = new_with_vtable(descr=<SizeDescr 40>)
+631: setfield_gc(p37, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+635: setfield_gc(p37, p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p37, p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p35, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+658: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+662: setfield_gc(p35, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+666: setfield_gc(p35, p37, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+670: jump(ConstPtr(ptr40), p31, p33, p35, p17, descr=TargetToken(55799344))
+720: --end of the loop--
[3e4c1becdf29660] jit-log-opt-bridge}
[3e4c1bece0b038b] {jit-backend
[3e4c1bece115b72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52530 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C4202000048FF0425809BCC018139700B01000F85000000004C8B79184D85FF0F84000000004C8B350AFFFFFF4D39F70F85000000004C8BB53801000041813E101100000F85000000004D8B7E204C8B2DFAFEFFFF4D39EF0F85000000004D8B7E104D8B661841813FD00C01000F85000000004D8B57204983FA01720741813A509A00000F850000000041813C24101100000F85000000004D8B7C24204C8B0DDBFEFFFF4D39CF0F85000000004D8B4C24104D8B7C241841813FA81600000F85000000004D8B67084983FC01720841813C24900F00000F8500000000418139D00C01000F85000000004D8B41184983F8017207418138509A00000F8500000000498B78104883FF017206813F509A00000F85000000004D8B41204983F8017207418138509A00000F8500000000498B71104885F60F8400000000498B5908488B1582FEFFFF4839D30F8500000000813B102001000F8500000000498B40104883F80172068138509A00000F85000000004C89A5300100004C8B67104983FC01720841813C24509A00000F85000000004989D6488B0C25F091F900488D9180000000483B14251092F9000F87BE00000048891425F091F90048C70110110000488D512848C702D00C010048895A0848897A104C89421848897220488D722848C706A81600004C8B85300100004C8946084C894E104C897E184C8B3DF1FDFFFF4C897E204C8956284C89692048895110488971184C8941084C89B5300100004889C24C89E748898D380100004C89854001000049BB101BF5AC217F000041FFE3660F1F84000000000048C7442408FFFFFF0049BBB823F5AC217F00004C895D204D8D9B38DFFFFF41FFD3E998FDFFFF49BB1825F5AC217F00004C895D204D8D9BD8E5FFFF41FFD3E92DFFFFFFFF3597FCFFFF49BBC823F5AC217F000041534D8D9B38DCFFFF41FFE3FF3583FCFFFF49BBD823F5AC217F000041534D8D9B28DCFFFF41FFE3FF3577FCFFFF49BBE823F5AC217F000041534D8D9B18DCFFFF41FFE3FF3563FCFFFF49BBF823F5AC217F000041534D8D9B08DCFFFF41FFE3FF3557FCFFFF49BB0824F5AC217F000041534D8D9BF8DBFFFF41FFE3FF3543FCFFFF49BB1824F5AC217F000041534D8D9BE8DBFFFF41FFE3FF352FFCFFFF49BB2824F5AC217F000041534D8D9BD8DBFFFF41FFE3FF351BFCFFFF49BB3824F5AC217F000041534D8D9BC8DBFFFF41FFE3FF3507FCFFFF49BB4824F5AC217F000041534D8D9BB8DBFFFF41FFE3FF35FBFBFFFF49BB5824F5AC217F000041534D8D9BA8DBFFFF41FFE3FF35E7FBFFFF49BB6824F5AC217F000041534D8D9B98DBFFFF41FFE3FF35D3FBFFFF49BB7824F5AC217F000041534D8D9B88DBFFFF41FFE3FF35BFFBFFFF49BB8824F5AC217F000041534D8D9B78DBFFFF41FFE3FF35ABFBFFFF49BB9824F5AC217F000041534D8D9B68DBFFFF41FFE3FF3597FBFFFF49BBA824F5AC217F000041534D8D9B58DBFFFF41FFE3FF3583FBFFFF49BBB824F5AC217F000041534D8D9B48DBFFFF41FFE3FF356FFBFFFF49BBC824F5AC217F000041534D8D9B38DBFFFF41FFE3FF3563FBFFFF49BBD824F5AC217F000041534D8D9B28DBFFFF41FFE3FF354FFBFFFF49BBE824F5AC217F000041534D8D9B18DBFFFF41FFE3FF353BFBFFFF49BBF824F5AC217F000041534D8D9B08DBFFFF41FFE3FF3527FBFFFF49BB0825F5AC217F000041534D8D9BF8DAFFFF41FFE3
[3e4c1bece11ec7d] jit-backend-dump}
[3e4c1bece128ab9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52604 +0  1F000000
[3e4c1bece129d78] jit-backend-dump}
[3e4c1bece12da1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52855 +0  1F000000
[3e4c1bece12e91a] jit-backend-dump}
[3e4c1bece131b22] {jit-backend-addr
bridge out of Guard 0x34fc4a0 has address 0x7f21acf52600 to 0x7f21acf52850
       gc table: 0x7f21acf52530
    jump target: 0x7f21acf52600
         resops: 0x7f21acf5260e
       failures: 0x7f21acf52850
            end: 0x7f21acf52adf
[3e4c1bece13408e] jit-backend-addr}
[3e4c1bece137508] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5261e +0  71020000
[3e4c1bece138306] jit-backend-dump}
[3e4c1bece13b459] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5262b +0  80020000
[3e4c1bece13c1ec] jit-backend-dump}
[3e4c1bece13f225] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5263b +0  8C020000
[3e4c1bece13ff56] jit-backend-dump}
[3e4c1bece142ef4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5264f +0  94020000
[3e4c1bece143c00] jit-backend-dump}
[3e4c1bece146b97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52663 +0  9C020000
[3e4c1bece14786c] jit-backend-dump}
[3e4c1bece14a92c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52678 +0  BF020000
[3e4c1bece14b629] jit-backend-dump}
[3e4c1bece14e574] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5268f +0  C4020000
[3e4c1bece14f24f] jit-backend-dump}
[3e4c1bece1521ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5269d +0  D2020000
[3e4c1bece152ed1] jit-backend-dump}
[3e4c1bece155e13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf526b2 +0  D9020000
[3e4c1bece156b10] jit-backend-dump}
[3e4c1bece159a1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf526c9 +0  DE020000
[3e4c1bece15a70e] jit-backend-dump}
[3e4c1bece15d61f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf526e1 +0  E2020000
[3e4c1bece15e2fa] jit-backend-dump}
[3e4c1bece16123c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf526ee +0  F1020000
[3e4c1bece161f14] jit-backend-dump}
[3e4c1bece164e31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52705 +0  F6020000
[3e4c1bece165b28] jit-backend-dump}
[3e4c1bece168a2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5271b +0  FC020000
[3e4c1bece16970b] jit-backend-dump}
[3e4c1bece16c662] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52732 +0  01030000
[3e4c1bece16d343] jit-backend-dump}
[3e4c1bece170251] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5273f +0  10030000
[3e4c1bece170f29] jit-backend-dump}
[3e4c1bece173e86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52753 +0  18030000
[3e4c1bece174b6b] jit-backend-dump}
[3e4c1bece177a97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5275f +0  28030000
[3e4c1bece17876c] jit-backend-dump}
[3e4c1bece17b683] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52775 +0  2E030000
[3e4c1bece17c355] jit-backend-dump}
[3e4c1bece17f24d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52794 +0  2B030000
[3e4c1bece17ff35] jit-backend-dump}
[3e4c1bece1830e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51a5d +0  9F0B0000
[3e4c1bece183db2] jit-backend-dump}
[3e4c1bece187b8b] jit-backend}
[3e4c1bece18b46b] {jit-log-opt-bridge
# bridge out of Guard 0x34fc4a0 with 68 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x34fcc80>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+246: guard_nonnull(p3, descr=<Guard0x35bc068>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x35bc0b0>) [p0, p1]
debug_merge_point(0, 0, '#f')
+271: guard_class(p0, 16435920, descr=<Guard0x35bc0f8>) [p0, p1]
+291: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+302: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35bc140>) [p0, p1]
+311: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+315: guard_not_invalidated(descr=<Guard0x35bc188>) [p0, p1]
+315: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+319: guard_class(p9, 16500368, descr=<Guard0x35bc1d0>) [p0, p1]
+332: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+336: guard_nonnull_class(p12, 16471056, descr=<Guard0x34fcce0>) [p0, p1]
+355: guard_class(p10, 16435920, descr=<Guard0x35bc218>) [p0, p1]
+369: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+381: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35bc260>) [p0, p1]
+390: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+395: p18 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+400: guard_class(p18, 16437352, descr=<Guard0x35bc2a8>) [p0, p1]
+413: p20 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+417: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x34fcd40>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr y) z x) from (shorterp (cdr x4848) (cdr y4850))')
+437: guard_class(p17, 16500368, descr=<Guard0x35bc2f0>) [p0, p1]
+450: p23 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+454: guard_nonnull_class(p23, 16471056, descr=<Guard0x34fcda0>) [p0, p1]
+473: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+477: guard_nonnull_class(p25, 16471056, descr=<Guard0x34fce00>) [p0, p1]
+495: p27 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+499: guard_nonnull_class(p27, 16471056, descr=<Guard0x34fce60>) [p0, p1]
+518: p29 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+522: guard_nonnull(p29, descr=<Guard0x35bc338>) [p0, p1]
+531: p30 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+542: i32 = instance_ptr_eq(p30, ConstPtr(ptr31))
+545: guard_true(i32, descr=<Guard0x35bc380>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr y) z x)')
debug_merge_point(0, 0, '(shorterp y x)')
+551: guard_class(p30, 16505296, descr=<Guard0x35bc3c8>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+563: p34 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+567: guard_nonnull_class(p34, 16471056, descr=<Guard0x34fcec0>) [p0, p1]
+585: p36 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+596: guard_nonnull_class(p36, 16471056, descr=<Guard0x34fcf20>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+616: p38 = new_with_vtable(descr=<SizeDescr 40>)
+663: p39 = new_with_vtable(descr=<SizeDescr 40>)
+674: setfield_gc(p39, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+678: setfield_gc(p39, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+682: setfield_gc(p39, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+686: setfield_gc(p39, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+690: p40 = new_with_vtable(descr=<SizeDescr 48>)
+701: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+712: setfield_gc(p40, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+716: setfield_gc(p40, p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+727: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+731: setfield_gc(p40, p12, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+735: setfield_gc(p38, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+739: setfield_gc(p38, p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+743: setfield_gc(p38, p40, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+747: setfield_gc(p38, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+751: jump(ConstPtr(ptr43), p34, p36, p38, p20, descr=TargetToken(55799344))
+800: --end of the loop--
[3e4c1bece1c2604] jit-log-opt-bridge}
[3e4c1bece2e9cf9] {jit-backend
[3e4c1bece31205e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52b50 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CA200000048FF042550555E024C8B7A104983FF01720741813F40D202000F85000000004C8B77104983FE01720741813E40D202000F85000000004C8B2D9DFFFFFF4C39AD300100000F8500000000488B0C25F091F900488D5120483B14251092F9000F876400000048891425F091F90048C701700B0100488B9530010000488951084C8979104C89711848898D3001000049BB301AF5AC217F000041FFE30F1F84000000000048C7442408FFFFFF0049BBE82AF5AC217F00004C895D204D8D9B08D8FFFF41FFD3E938FFFFFF49BB382BF5AC217F00004C895D204D8D9BB8DFFFFF41FFD3E987FFFFFFFF35D7FEFFFF49BBF82AF5AC217F000041534D8D9B08D5FFFF41FFE3FF35C3FEFFFF49BB082BF5AC217F000041534D8D9BF8D4FFFF41FFE3FF35AFFEFFFF49BB182BF5AC217F000041534D8D9BE8D4FFFF41FFE3FF35A3FEFFFF49BB282BF5AC217F000041534D8D9BD8D4FFFF41FFE3
[3e4c1bece316527] jit-backend-dump}
[3e4c1bece31fbf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52b84 +0  1F000000
[3e4c1bece320dd5] jit-backend-dump}
[3e4c1bece3246f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52c35 +0  1F000000
[3e4c1bece325536] jit-backend-dump}
[3e4c1bece32862d] {jit-backend-addr
bridge out of Guard 0x34fc6e0 has address 0x7f21acf52b80 to 0x7f21acf52c30
       gc table: 0x7f21acf52b50
    jump target: 0x7f21acf52b80
         resops: 0x7f21acf52b8e
       failures: 0x7f21acf52c30
            end: 0x7f21acf52ce3
[3e4c1bece32aa24] jit-backend-addr}
[3e4c1bece32e265] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52ba9 +0  E2000000
[3e4c1bece32f051] jit-backend-dump}
[3e4c1bece3321bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52bc0 +0  E7000000
[3e4c1bece332ebc] jit-backend-dump}
[3e4c1bece335f0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52bd4 +0  EF000000
[3e4c1bece336c1d] jit-backend-dump}
[3e4c1bece339eae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51b2a +0  52100000
[3e4c1bece33ab62] jit-backend-dump}
[3e4c1bece33e9d0] jit-backend}
[3e4c1bece3422a4] {jit-log-opt-bridge
# bridge out of Guard 0x34fc6e0 with 15 ops
[p0, p1, p2, p3, p4]
+70: guard_not_invalidated(descr=<Guard0x34fcf80>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+70: p5 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+74: guard_nonnull_class(p5, 16616448, descr=<Guard0x34fcfe0>) [p0, p1, p2, p3, p4]
+93: p7 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+97: guard_nonnull_class(p7, 16616448, descr=<Guard0x34fd040>) [p0, p1, p2, p3, p4]
+123: i10 = instance_ptr_eq(p4, ConstPtr(ptr9))
+130: guard_true(i10, descr=<Guard0x35bc410>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+136: p11 = new_with_vtable(descr=<SizeDescr 32>)
+177: setfield_gc(p11, p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+188: setfield_gc(p11, p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+192: setfield_gc(p11, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+196: jump(p11, p0, descr=TargetToken(55799264))
+224: --end of the loop--
[3e4c1bece35532c] jit-log-opt-bridge}
[3e4c1bece44ada4] {jit-backend
[3e4c1bece47691f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52db
[3e4c1bece47ce2e] jit-backend-dump}
[3e4c1bece4864ff] {jit-backend-addr
Loop 8 ((if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)) has address 0x7f21acf52ead to 0x7f21acf52fa0 (bootstrap 0x7f21acf52e20)
       gc table: 0x7f21acf52db0
       function: 0x7f21acf52e20
         resops: 0x7f21acf52ead
       failures: 0x7f21acf52fa0
            end: 0x7f21acf530e6
[3e4c1bece48901e] jit-backend-addr}
[3e4c1bece48cc87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52ec4 +0  EA000000
[3e4c1bece48dd57] jit-backend-dump}
[3e4c1bece491062] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52eda +0  F0000000
[3e4c1bece491e42] jit-backend-dump}
[3e4c1bece494ee6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52eea +0  FC000000
[3e4c1bece498f63] jit-backend-dump}
[3e4c1bece49cac2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52efd +0  05010000
[3e4c1bece49d8a1] jit-backend-dump}
[3e4c1bece4a0a22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52f13 +0  0B010000
[3e4c1bece4a17b8] jit-backend-dump}
[3e4c1bece4a4810] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52f29 +0  11010000
[3e4c1bece4a554a] jit-backend-dump}
[3e4c1bece4a85a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52f32 +0  24010000
[3e4c1bece4a92c7] jit-backend-dump}
[3e4c1bece4ac548] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52f48 +0  46010000
[3e4c1bece4ad264] jit-backend-dump}
[3e4c1bece4b02ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52f5e +0  4C010000
[3e4c1bece4b0fe7] jit-backend-dump}
[3e4c1bece4b3f53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52f72 +0  54010000
[3e4c1bece4b4c4a] jit-backend-dump}
[3e4c1bece4b8612] jit-backend}
[3e4c1bece4bc1ac] {jit-log-opt-loop
# Loop 8 ((if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)) : entry bridge with 27 ops
[p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
+261: guard_class(p0, 16500016, descr=<Guard0x34fd0a0>) [p1, p0]
+280: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+284: guard_nonnull_class(p3, 16471056, descr=<Guard0x34fd100>) [p1, p0]
+309: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+312: guard_false(i6, descr=<Guard0x35bc458>) [p1, p0]
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
+318: guard_class(p1, 16435920, descr=<Guard0x35bc4a0>) [p1, p0]
+337: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+341: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x34fd160>) [p1, p0]
debug_merge_point(0, 0, '(null? x4848)')
+359: p10 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+363: guard_nonnull_class(p10, 16471056, descr=<Guard0x34fd1c0>) [p1, p0]
+381: i13 = instance_ptr_eq(p10, ConstPtr(ptr12))
+384: guard_false(i13, descr=<Guard0x35bc4e8>) [p1, p0]
+390: guard_not_invalidated(descr=<Guard0x35bc530>) [p1, p0]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+390: p14 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+394: guard_nonnull_class(p14, 16471056, descr=<Guard0x34fd220>) [p1, p0]
+412: p16 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+416: guard_nonnull_class(p16, 16471056, descr=<Guard0x34fd280>) [p1, p0]
+434: p18 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+445: i20 = instance_ptr_eq(p18, ConstPtr(ptr19))
+448: guard_true(i20, descr=<Guard0x35bc578>) [p1, p0]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+454: jump(p18, p14, p16, p1, p8, descr=TargetToken(55799344))
+496: --end of the loop--
[3e4c1bece4d716e] jit-log-opt-loop}
[3e4c1bece61e4d6] {jit-backend
[3e4c1bece67d4a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53280 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5202000048FF0425901A5E028139700B01000F85000000004C8B79184D85FF0F84000000004C8B2DFAFEFFFF4D39EF0F850000000041813E101100000F85000000004D8B6E204C8B3DF1FEFFFF4D39FD0F85000000004D8B6E104D8B661841817D00D00C01000F85000000004D8B55204983FA01720741813A509A00000F850000000041813C24A81600000F85000000004D8B6C24204C8B0DD1FEFFFF4D39CD0F85000000004D8B4C24284D8B6C24104D8B44241841817D00D00C01000F85000000004D8B650841813C24102001000F85000000004983F9017207418139509A00000F8500000000418138C81800000F8500000000498B78084883FF017206813F900F00000F8500000000498B75204883FE017206813E509A00000F8500000000488B5E104883FB017206813B509A00000F8500000000498B75104883FE017206813E509A00000F8500000000498B55184885D20F84000000004C8B2D65FEFFFF4D39EC0F8500000000488B46104883F80172068138509A00000F85000000004889BD30010000488B7B104883FF017206813F509A00000F85000000004989D6488B0C25F091F900488D9188000000483B14251092F9000F87BF00000048891425F091F90048C70110110000488D512848C702D00C01004C89620848895A10488972184C8972204C8D722849C706C8180000488BB530010000498976084D8966104D8946184C8B05DAFDFFFF4D8946204D894E284D8956304C897920488951104C897118488971084C89AD300100004889C248898D380100004889B54001000049BB101BF5AC217F000041FFE3660F1F84000000000048C7442408FFFFFF0049BBF830F5AC217F00004C895D204D8D9BF8D1FFFF41FFD3E988FDFFFF49BB6832F5AC217F00004C895D204D8D9B88D8FFFF41FFD3E92CFFFFFFFF3577FCFFFF49BB0831F5AC217F000041534D8D9BF8CEFFFF41FFE3FF3563FCFFFF49BB1831F5AC217F000041534D8D9BE8CEFFFF41FFE3FF3557FCFFFF49BB2831F5AC217F000041534D8D9BD8CEFFFF41FFE3FF3543FCFFFF49BB3831F5AC217F000041534D8D9BC8CEFFFF41FFE3FF3537FCFFFF49BB4831F5AC217F000041534D8D9BB8CEFFFF41FFE3FF3523FCFFFF49BB5831F5AC217F000041534D8D9BA8CEFFFF41FFE3FF350FFCFFFF49BB6831F5AC217F000041534D8D9B98CEFFFF41FFE3FF35FBFBFFFF49BB7831F5AC217F000041534D8D9B88CEFFFF41FFE3FF35E7FBFFFF49BB8831F5AC217F000041534D8D9B78CEFFFF41FFE3FF35DBFBFFFF49BB9831F5AC217F000041534D8D9B68CEFFFF41FFE3FF35C7FBFFFF49BBA831F5AC217F000041534D8D9B58CEFFFF41FFE3FF35B3FBFFFF49BBB831F5AC217F000041534D8D9B48CEFFFF41FFE3FF359FFBFFFF49BBC831F5AC217F000041534D8D9B38CEFFFF41FFE3FF358BFBFFFF49BBD831F5AC217F000041534D8D9B28CEFFFF41FFE3FF3577FBFFFF49BBE831F5AC217F000041534D8D9B18CEFFFF41FFE3FF3563FBFFFF49BBF831F5AC217F000041534D8D9B08CEFFFF41FFE3FF354FFBFFFF49BB0832F5AC217F000041534D8D9BF8CDFFFF41FFE3FF353BFBFFFF49BB1832F5AC217F000041534D8D9BE8CDFFFF41FFE3FF3527FBFFFF49BB2832F5AC217F000041534D8D9BD8CDFFFF41FFE3FF351BFBFFFF49BB3832F5AC217F000041534D8D9BC8CDFFFF41FFE3FF3507FBFFFF49BB4832F5AC217F000041534D8D9BB8CDFFFF41FFE3FF35F3FAFFFF49BB5832F5AC217F000041534D8D9BA8CDFFFF41FFE3
[3e4c1bece686ab7] jit-backend-dump}
[3e4c1bece69079c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53364 +0  1F000000
[3e4c1bece691be3] jit-backend-dump}
[3e4c1bece6955d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf535c5 +0  1F000000
[3e4c1bece69639d] jit-backend-dump}
[3e4c1bece6993d6] {jit-backend-addr
bridge out of Guard 0x35bc218 has address 0x7f21acf53360 to 0x7f21acf535c0
       gc table: 0x7f21acf53280
    jump target: 0x7f21acf53360
         resops: 0x7f21acf5336e
       failures: 0x7f21acf535c0
            end: 0x7f21acf5386b
[3e4c1bece69b6b1] jit-backend-addr}
[3e4c1bece69e99b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5337e +0  81020000
[3e4c1bece69f7c6] jit-backend-dump}
[3e4c1bece6a2987] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5338b +0  90020000
[3e4c1bece6a370b] jit-backend-dump}
[3e4c1bece6a675d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5339b +0  9C020000
[3e4c1bece6a7491] jit-backend-dump}
[3e4c1bece6aa4af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf533a8 +0  AB020000
[3e4c1bece6ab207] jit-backend-dump}
[3e4c1bece6ae247] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf533bc +0  B3020000
[3e4c1bece6af008] jit-backend-dump}
[3e4c1bece6b21bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf533d2 +0  D5020000
[3e4c1bece6b2f49] jit-backend-dump}
[3e4c1bece6b5f42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf533e9 +0  DA020000
[3e4c1bece6b6c82] jit-backend-dump}
[3e4c1bece6b9c04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf533f7 +0  E8020000
[3e4c1bece6ba96f] jit-backend-dump}
[3e4c1bece6bd8b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5340c +0  EF020000
[3e4c1bece6be5dc] jit-backend-dump}
[3e4c1bece6c14e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53429 +0  EE020000
[3e4c1bece6c222d] jit-backend-dump}
[3e4c1bece6c5207] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5343b +0  F8020000
[3e4c1bece6c5f7f] jit-backend-dump}
[3e4c1bece6c8ed0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5344e +0  01030000
[3e4c1bece6c9c38] jit-backend-dump}
[3e4c1bece6ccb8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5345b +0  10030000
[3e4c1bece6cd8de] jit-backend-dump}
[3e4c1bece6d07c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53471 +0  16030000
[3e4c1bece6d1535] jit-backend-dump}
[3e4c1bece6d43f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53487 +0  1C030000
[3e4c1bece6d5121] jit-backend-dump}
[3e4c1bece6d7ff8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5349d +0  22030000
[3e4c1bece6d8d41] jit-backend-dump}
[3e4c1bece6dbc8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf534b3 +0  28030000
[3e4c1bece6dc9c0] jit-backend-dump}
[3e4c1bece6df884] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf534c0 +0  37030000
[3e4c1bece6e05c8] jit-backend-dump}
[3e4c1bece6e3483] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf534d0 +0  43030000
[3e4c1bece6e41bd] jit-backend-dump}
[3e4c1bece6e7072] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf534e6 +0  49030000
[3e4c1bece6e7dc1] jit-backend-dump}
[3e4c1bece6eacaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53503 +0  48030000
[3e4c1bece6eb9e1] jit-backend-dump}
[3e4c1bece6eeb77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5269d +0  BF0C0000
[3e4c1bece6ef8c7] jit-backend-dump}
[3e4c1bece6f3720] jit-backend}
[3e4c1bece6f7006] {jit-log-opt-bridge
# bridge out of Guard 0x35bc218 with 71 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x34fd2e0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+262: guard_nonnull(p3, descr=<Guard0x35bc5c0>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x35bc608>) [p0, p1]
debug_merge_point(0, 0, '#f')
+287: guard_class(p0, 16435920, descr=<Guard0x35bc650>) [p0, p1]
+300: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+311: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35bc698>) [p0, p1]
+320: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+324: guard_not_invalidated(descr=<Guard0x35bc6e0>) [p0, p1]
+324: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+328: guard_class(p9, 16500368, descr=<Guard0x35bc728>) [p0, p1]
+342: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+346: guard_nonnull_class(p12, 16471056, descr=<Guard0x34fd340>) [p0, p1]
+365: guard_class(p10, 16437352, descr=<Guard0x35bc770>) [p0, p1]
+379: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+391: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35bc7b8>) [p0, p1]
+400: p17 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+405: p18 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+410: p19 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+415: guard_class(p18, 16500368, descr=<Guard0x35bc800>) [p0, p1]
+429: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+433: guard_class(p21, 16505296, descr=<Guard0x35bc848>) [p0, p1]
+447: guard_nonnull_class(p17, 16471056, descr=<Guard0x34fd3a0>) [p0, p1]
+466: guard_class(p19, 16437896, descr=<Guard0x35bc890>) [p0, p1]
+479: p25 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+483: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x34fd400>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr z) x y) from (shorterp (cdr x4848) (cdr y4850))')
+501: p27 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+505: guard_nonnull_class(p27, 16471056, descr=<Guard0x34fd460>) [p0, p1]
+523: p29 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+527: guard_nonnull_class(p29, 16471056, descr=<Guard0x34fd4c0>) [p0, p1]
+545: p31 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+549: guard_nonnull_class(p31, 16471056, descr=<Guard0x34fd520>) [p0, p1]
+567: p33 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+571: guard_nonnull(p33, descr=<Guard0x35bc8d8>) [p0, p1]
+587: i35 = instance_ptr_eq(p21, ConstPtr(ptr34))
+590: guard_true(i35, descr=<Guard0x35bc920>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr z) x y)')
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+596: p36 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+600: guard_nonnull_class(p36, 16471056, descr=<Guard0x34fd580>) [p0, p1]
+618: p38 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+629: guard_nonnull_class(p38, 16471056, descr=<Guard0x34fd5e0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+647: p40 = new_with_vtable(descr=<SizeDescr 40>)
+694: p41 = new_with_vtable(descr=<SizeDescr 40>)
+705: setfield_gc(p41, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+709: setfield_gc(p41, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+713: setfield_gc(p41, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+717: setfield_gc(p41, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+721: p42 = new_with_vtable(descr=<SizeDescr 56>)
+732: setfield_gc(p42, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+743: setfield_gc(p42, p21, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+747: setfield_gc(p42, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+758: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+762: setfield_gc(p42, p17, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+766: setfield_gc(p42, p12, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+770: setfield_gc(p40, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+774: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+778: setfield_gc(p40, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+782: setfield_gc(p40, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+786: jump(ConstPtr(ptr45), p36, p38, p40, p25, descr=TargetToken(55799344))
+832: --end of the loop--
[3e4c1bece732df3] jit-log-opt-bridge}
[3e4c1bece7d0dfc] {jit-backend
[3e4c1bece7f66f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf538e
[3e4c1bece7faccc] jit-backend-dump}
[3e4c1bece804b0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53914 +0  1F000000
[3e4c1bece805d47] jit-backend-dump}
[3e4c1bece8096b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf539c5 +0  1F000000
[3e4c1bece80a572] jit-backend-dump}
[3e4c1bece80d721] {jit-backend-addr
bridge out of Guard 0x34fc740 has address 0x7f21acf53910 to 0x7f21acf539c0
       gc table: 0x7f21acf538e0
    jump target: 0x7f21acf53910
         resops: 0x7f21acf5391e
       failures: 0x7f21acf539c0
            end: 0x7f21acf53a73
[3e4c1bece80f925] jit-backend-addr}
[3e4c1bece812e57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53939 +0  E2000000
[3e4c1bece813c74] jit-backend-dump}
[3e4c1bece816e84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53950 +0  E7000000
[3e4c1bece817ba9] jit-backend-dump}
[3e4c1bece81ac0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53964 +0  EF000000
[3e4c1bece81b90a] jit-backend-dump}
[3e4c1bece81eb30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51b40 +0  CC1D0000
[3e4c1bece81f824] jit-backend-dump}
[3e4c1bece82372e] jit-backend}
[3e4c1bece82700e] {jit-log-opt-bridge
# bridge out of Guard 0x34fc740 with 15 ops
[p0, p1, p2, p3, p4]
+70: guard_not_invalidated(descr=<Guard0x34fd640>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+70: p5 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+74: guard_nonnull_class(p5, 16471056, descr=<Guard0x34fd6a0>) [p0, p1, p2, p3, p4]
+93: p7 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+97: guard_nonnull_class(p7, 16616448, descr=<Guard0x34fd700>) [p0, p1, p2, p3, p4]
+123: i10 = instance_ptr_eq(p4, ConstPtr(ptr9))
+130: guard_true(i10, descr=<Guard0x35bc968>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+136: p11 = new_with_vtable(descr=<SizeDescr 32>)
+177: setfield_gc(p11, p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+188: setfield_gc(p11, p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+192: setfield_gc(p11, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+196: jump(p11, p0, descr=TargetToken(55799264))
+224: --end of the loop--
[3e4c1bece83797b] jit-log-opt-bridge}
[3e4c1bece969ccb] {jit-backend
[3e4c1bece9c9c5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53bd
[3e4c1bece9d2dbd] jit-backend-dump}
[3e4c1bece9dc4f8] {jit-backend-addr
Loop 11 ((if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))) has address 0x7f21acf53d1d to 0x7f21acf53f30 (bootstrap 0x7f21acf53c90)
       gc table: 0x7f21acf53bd0
       function: 0x7f21acf53c90
         resops: 0x7f21acf53d1d
       failures: 0x7f21acf53f30
            end: 0x7f21acf54173
[3e4c1bece9df0eb] jit-backend-addr}
[3e4c1bece9e2d9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53d34 +0  27020000
[3e4c1bece9e3d91] jit-backend-dump}
[3e4c1bece9e70e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53d41 +0  36020000
[3e4c1bece9e7e63] jit-backend-dump}
[3e4c1bece9eaf14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53d51 +0  42020000
[3e4c1bece9ebc26] jit-backend-dump}
[3e4c1bece9eed17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53d61 +0  4E020000
[3e4c1bece9ef9be] jit-backend-dump}
[3e4c1bece9f29fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53d77 +0  54020000
[3e4c1bece9f3699] jit-backend-dump}
[3e4c1bece9f66b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53d8a +0  5D020000
[3e4c1bece9f734c] jit-backend-dump}
[3e4c1bece9fa376] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53d9e +0  65020000
[3e4c1bece9fb04b] jit-backend-dump}
[3e4c1bece9fe0c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53db2 +0  6D020000
[3e4c1bece9fed94] jit-backend-dump}
[3e4c1becea01db5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53dc8 +0  73020000
[3e4c1becea02a65] jit-backend-dump}
[3e4c1becea05bef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53dd4 +0  9F020000
[3e4c1becea068a3] jit-backend-dump}
[3e4c1becea0993b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53deb +0  A4020000
[3e4c1becea0a604] jit-backend-dump}
[3e4c1becea0d603] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53e02 +0  A9020000
[3e4c1becea0e2bd] jit-backend-dump}
[3e4c1becea11276] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53e19 +0  AE020000
[3e4c1becea11f20] jit-backend-dump}
[3e4c1becea14fc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53e26 +0  BD020000
[3e4c1becea15c72] jit-backend-dump}
[3e4c1becea18c43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53e3a +0  C5020000
[3e4c1becea198f1] jit-backend-dump}
[3e4c1becea1c8c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53e48 +0  D3020000
[3e4c1becea1d576] jit-backend-dump}
[3e4c1becea2053b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53e5f +0  D8020000
[3e4c1becea211e2] jit-backend-dump}
[3e4c1becea241a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53e76 +0  DD020000
[3e4c1becea24e4c] jit-backend-dump}
[3e4c1becea288cc] jit-backend}
[3e4c1becea2c453] {jit-log-opt-loop
# Loop 11 ((if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))) : entry bridge with 63 ops
[p0, p1]
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
+341: guard_class(p0, 16499664, descr=<Guard0x34fd760>) [p1, p0]
+360: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+364: guard_nonnull(p3, descr=<Guard0x35bc9b0>) [p1, p0]
+380: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+383: guard_true(i5, descr=<Guard0x35bc9f8>) [p1, p0]
debug_merge_point(0, 0, 'z')
+389: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+393: guard_class(p6, 16500368, descr=<Guard0x35bca40>) [p1, p0]
+405: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+409: guard_nonnull_class(p8, 16471056, descr=<Guard0x34fd7c0>) [p1, p0]
+427: guard_class(p1, 16435920, descr=<Guard0x35bca88>) [p1, p0]
+446: p11 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+457: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x35bcad0>) [p1, p0]
+466: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+470: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+474: guard_class(p14, 16435920, descr=<Guard0x35bcb18>) [p1, p0]
+486: p16 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+490: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x34fd820>) [p1, p0]
debug_merge_point(0, 0, '(mas (cdr y) z x) from (shorterp (cdr x4848) (cdr y4850))')
+508: guard_not_invalidated(descr=<Guard0x35bcb60>) [p1, p0]
+508: guard_class(p13, 16500368, descr=<Guard0x35bcba8>) [p1, p0]
+520: p19 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+524: guard_nonnull_class(p19, 16471056, descr=<Guard0x34fd880>) [p1, p0]
+543: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+547: guard_nonnull_class(p21, 16471056, descr=<Guard0x34fd8e0>) [p1, p0]
+566: p23 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+570: guard_nonnull_class(p23, 16471056, descr=<Guard0x34fd940>) [p1, p0]
+589: p25 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+593: guard_nonnull(p25, descr=<Guard0x35bcbf0>) [p1, p0]
+602: p26 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+613: i28 = instance_ptr_eq(p26, ConstPtr(ptr27))
+616: guard_true(i28, descr=<Guard0x35bcc38>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr y) z x)')
debug_merge_point(0, 0, '(shorterp y x)')
+622: guard_class(p26, 16505296, descr=<Guard0x35bcc80>) [p1, p0]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+636: p30 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+640: guard_nonnull_class(p30, 16471056, descr=<Guard0x34fd9a0>) [p1, p0]
+659: p32 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+663: guard_nonnull_class(p32, 16471056, descr=<Guard0x34fda00>) [p1, p0]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+682: p34 = new_with_vtable(descr=<SizeDescr 40>)
+726: p35 = new_with_vtable(descr=<SizeDescr 40>)
+737: setfield_gc(p35, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+741: setfield_gc(p35, p21, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+745: setfield_gc(p35, p23, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+749: setfield_gc(p35, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+753: p36 = new_with_vtable(descr=<SizeDescr 48>)
+764: setfield_gc(p36, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+768: setfield_gc(p36, p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+772: setfield_gc(p36, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+783: setfield_gc(p36, ConstPtr(ptr37), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+787: setfield_gc(p36, p8, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+798: setfield_gc(p34, ConstPtr(ptr38), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+802: setfield_gc(p34, p35, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+806: setfield_gc(p34, p36, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+810: setfield_gc(p34, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+814: jump(ConstPtr(ptr39), p30, p32, p34, p16, descr=TargetToken(55799344))
+864: --end of the loop--
[3e4c1becea60d8c] jit-log-opt-loop}
[3e4c1becec3f337] {jit-backend
[3e4c1becec9d4e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf542f0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C2202000048FF0425504DFC028139100A01000F85000000004C8B79104D85FF0F84000000004C8B350AFFFFFF4D39F70F85000000004C8B710841813ED00C01000F85000000004D8B7E204983FF01720741813F509A00000F8500000000813AA81600000F85000000004C8B72204C8B2DEAFEFFFF4D39EE0F85000000004C8B6A284C8B72104C8B621841813ED00C01000F85000000004D8B560841813A102001000F85000000004983FD01720841817D00509A00000F850000000041813C24101100000F85000000004D8B4C24084983F9017207418139900F00000F85000000004D8B46204983F8017207418138509A00000F8500000000498B78104883FF017206813F509A00000F85000000004D8B46104983F8017207418138509A00000F8500000000498B76184885F60F84000000004C8B3585FEFFFF4D39F20F8500000000498B58104883FB017206813B509A00000F8500000000488B47104883F80172068138509A00000F8500000000488B0C25F091F900488D9188000000483B14251092F9000F87C100000048891425F091F90048C70110110000488D512848C702D00C01004C89520848897A104C89421848897220488D722848C706C81800004C894E084C8956104C8966184C8B250BFEFFFF4C8966204C896E284C897E304C8B3D00FEFFFF4C89792048895110488971184C8949084C89B5300100004889DA4889C748898D380100004C898D4001000049BB101BF5AC217F000041FFE30F1F84000000000048C7442408FFFFFF0049BB8841F5AC217F00004C895D204D8D9B68C1FFFF41FFD3E9B8FDFFFF49BBD842F5AC217F00004C895D204D8D9B18C8FFFF41FFD3E92AFFFFFFFF35B7FCFFFF49BB9841F5AC217F000041534D8D9B68BEFFFF41FFE3FF35A3FCFFFF49BBA841F5AC217F000041534D8D9B58BEFFFF41FFE3FF3597FCFFFF49BBB841F5AC217F000041534D8D9B48BEFFFF41FFE3FF3583FCFFFF49BBC841F5AC217F000041534D8D9B38BEFFFF41FFE3FF356FFCFFFF49BBD841F5AC217F000041534D8D9B28BEFFFF41FFE3FF355BFCFFFF49BBE841F5AC217F000041534D8D9B18BEFFFF41FFE3FF354FFCFFFF49BBF841F5AC217F000041534D8D9B08BEFFFF41FFE3FF353BFCFFFF49BB0842F5AC217F000041534D8D9BF8BDFFFF41FFE3FF3527FCFFFF49BB1842F5AC217F000041534D8D9BE8BDFFFF41FFE3FF3513FCFFFF49BB2842F5AC217F000041534D8D9BD8BDFFFF41FFE3FF35FFFBFFFF49BB3842F5AC217F000041534D8D9BC8BDFFFF41FFE3FF35EBFBFFFF49BB4842F5AC217F000041534D8D9BB8BDFFFF41FFE3FF35D7FBFFFF49BB5842F5AC217F000041534D8D9BA8BDFFFF41FFE3FF35C3FBFFFF49BB6842F5AC217F000041534D8D9B98BDFFFF41FFE3FF35AFFBFFFF49BB7842F5AC217F000041534D8D9B88BDFFFF41FFE3FF359BFBFFFF49BB8842F5AC217F000041534D8D9B78BDFFFF41FFE3FF3587FBFFFF49BB9842F5AC217F000041534D8D9B68BDFFFF41FFE3FF357BFBFFFF49BBA842F5AC217F000041534D8D9B58BDFFFF41FFE3FF3567FBFFFF49BBB842F5AC217F000041534D8D9B48BDFFFF41FFE3FF3553FBFFFF49BBC842F5AC217F000041534D8D9B38BDFFFF41FFE3
[3e4c1bececa6374] jit-backend-dump}
[3e4c1bececb082a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf543c4 +0  1F000000
[3e4c1bececb1bcf] jit-backend-dump}
[3e4c1bececb58c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf545f5 +0  1F000000
[3e4c1bececb6796] jit-backend-dump}
[3e4c1bececb9916] {jit-backend-addr
bridge out of Guard 0x35bca88 has address 0x7f21acf543c0 to 0x7f21acf545f0
       gc table: 0x7f21acf542f0
    jump target: 0x7f21acf543c0
         resops: 0x7f21acf543ce
       failures: 0x7f21acf545f0
            end: 0x7f21acf54863
[3e4c1bececbbd72] jit-backend-addr}
[3e4c1bececbf194] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf543de +0  51020000
[3e4c1bececc0031] jit-backend-dump}
[3e4c1bececc319c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf543eb +0  60020000
[3e4c1bececc3eb8] jit-backend-dump}
[3e4c1bececc6e24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf543fb +0  6C020000
[3e4c1bececc7b2a] jit-backend-dump}
[3e4c1bececcaa9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5440c +0  77020000
[3e4c1bececcb7f6] jit-backend-dump}
[3e4c1bececce71f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54423 +0  7C020000
[3e4c1bececcf3fd] jit-backend-dump}
[3e4c1bececd2440] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5442f +0  8C020000
[3e4c1bececd3183] jit-backend-dump}
[3e4c1bececd6182] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54443 +0  94020000
[3e4c1bececd6e7c] jit-backend-dump}
[3e4c1bececd9d6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5445c +0  97020000
[3e4c1bececdaa7b] jit-backend-dump}
[3e4c1bececdd98b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5446d +0  A2020000
[3e4c1bececde682] jit-backend-dump}
[3e4c1becece15a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54481 +0  AA020000
[3e4c1becece229f] jit-backend-dump}
[3e4c1becece5166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5448f +0  B8020000
[3e4c1becece5e57] jit-backend-dump}
[3e4c1becece8d46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf544a7 +0  BC020000
[3e4c1becece9a3d] jit-backend-dump}
[3e4c1becececa02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf544be +0  DD020000
[3e4c1bececed6f3] jit-backend-dump}
[3e4c1bececf0616] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf544d4 +0  E3020000
[3e4c1bececf130a] jit-backend-dump}
[3e4c1bececf42cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf544eb +0  E8020000
[3e4c1bececf4fd8] jit-backend-dump}
[3e4c1bececf7ef5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf544f8 +0  F7020000
[3e4c1bececf8bec] jit-backend-dump}
[3e4c1bececfbad8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54508 +0  03030000
[3e4c1bececfc7d5] jit-backend-dump}
[3e4c1bececff6e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5451e +0  09030000
[3e4c1beced003e2] jit-backend-dump}
[3e4c1beced0331b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54534 +0  0F030000
[3e4c1beced0400c] jit-backend-dump}
[3e4c1beced07168] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53d8a +0  32060000
[3e4c1beced07e68] jit-backend-dump}
[3e4c1beced0bdcb] jit-backend}
[3e4c1beced0f624] {jit-log-opt-bridge
# bridge out of Guard 0x35bca88 with 65 ops
[p0, p1]
+230: guard_class(p1, 16499664, descr=<Guard0x34fda60>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x35bccc8>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x35bcd10>) [p0, p1]
debug_merge_point(0, 0, 'z')
+271: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+275: guard_class(p6, 16500368, descr=<Guard0x35bcd58>) [p0, p1]
+288: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+292: guard_nonnull_class(p8, 16471056, descr=<Guard0x34fdac0>) [p0, p1]
+311: guard_class(p0, 16437352, descr=<Guard0x35bcda0>) [p0, p1]
+323: p11 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+334: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x35bcde8>) [p0, p1]
+343: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+347: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+351: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+355: guard_class(p14, 16500368, descr=<Guard0x35bce30>) [p0, p1]
+368: p17 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+372: guard_class(p17, 16505296, descr=<Guard0x35bce78>) [p0, p1]
+385: guard_nonnull_class(p13, 16471056, descr=<Guard0x34fdb20>) [p0, p1]
+405: guard_class(p15, 16435920, descr=<Guard0x35bcec0>) [p0, p1]
+419: p21 = getfield_gc_r(p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+424: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x34fdb80>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr z) x y) from (shorterp (cdr x4848) (cdr y4850))')
+443: guard_not_invalidated(descr=<Guard0x35bcf08>) [p0, p1]
+443: p23 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+447: guard_nonnull_class(p23, 16471056, descr=<Guard0x34fdbe0>) [p0, p1]
+466: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+470: guard_nonnull_class(p25, 16471056, descr=<Guard0x34fdc40>) [p0, p1]
+488: p27 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+492: guard_nonnull_class(p27, 16471056, descr=<Guard0x34fdca0>) [p0, p1]
+511: p29 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+515: guard_nonnull(p29, descr=<Guard0x35bcf50>) [p0, p1]
+531: i31 = instance_ptr_eq(p17, ConstPtr(ptr30))
+534: guard_true(i31, descr=<Guard0x35bcf98>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr z) x y)')
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+540: p32 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+544: guard_nonnull_class(p32, 16471056, descr=<Guard0x34fdd00>) [p0, p1]
+562: p34 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+566: guard_nonnull_class(p34, 16471056, descr=<Guard0x34fdd60>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+584: p36 = new_with_vtable(descr=<SizeDescr 40>)
+628: p37 = new_with_vtable(descr=<SizeDescr 40>)
+639: setfield_gc(p37, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+643: setfield_gc(p37, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+647: setfield_gc(p37, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+651: setfield_gc(p37, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+655: p38 = new_with_vtable(descr=<SizeDescr 56>)
+666: setfield_gc(p38, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+670: setfield_gc(p38, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+674: setfield_gc(p38, p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+685: setfield_gc(p38, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+689: setfield_gc(p38, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+693: setfield_gc(p38, p8, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+704: setfield_gc(p36, ConstPtr(ptr40), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+708: setfield_gc(p36, p37, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+712: setfield_gc(p36, p38, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+716: setfield_gc(p36, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+720: jump(ConstPtr(ptr41), p32, p34, p36, p21, descr=TargetToken(55799344))
+768: --end of the loop--
[3e4c1beced45f9a] jit-log-opt-bridge}
[3e4c1becee820e7] {jit-backend
[3e4c1beceee3fb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf549e0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C4202000048FF0425D04DFC028139700B01000F85000000004C8B79184D85FF0F84000000004C8B2D0AFFFFFF4D39EF0F850000000041813E101100000F85000000004D8B6E204C8B3D01FFFFFF4D39FD0F85000000004D8B6E104D8B661841817D00D00C01000F85000000004D8B55204983FA01720741813A509A00000F850000000041813C24101100000F85000000004D8B6C24204C8B0DE1FEFFFF4D39CD0F85000000004D8B4C24104D8B6C241841817D00101100000F85000000004D8B65084983FC01720841813C24900F00000F8500000000418139D00C01000F85000000004D8B41184983F8017207418138509A00000F8500000000498B78104883FF017206813F509A00000F85000000004D8B41204983F8017207418138509A00000F8500000000498B71104885F60F8400000000498B5908488B1587FEFFFF4839D30F8500000000813B102001000F8500000000498B40104883F80172068138509A00000F85000000004C89A5300100004C8B67104983FC01720841813C24509A00000F85000000004989D6488B0C25F091F900488D9180000000483B14251092F9000F87C300000048891425F091F90048C70110110000488D512848C702D00C010048895A0848897A104C89421848897220488D722848C706A81600004C8B85300100004C8946084C894E104C896E184C8B2DF6FDFFFF4C896E204C8956284C89792048895110488971184C8941084C89B5300100004889C24C89E748898D380100004C89854001000049BB101BF5AC217F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BB7048F5AC217F00004C895D204D8D9B80BAFFFF41FFD3E998FDFFFF49BBD049F5AC217F00004C895D204D8D9B20C1FFFF41FFD3E928FFFFFFFF3597FCFFFF49BB8048F5AC217F000041534D8D9B80B7FFFF41FFE3FF3583FCFFFF49BB9048F5AC217F000041534D8D9B70B7FFFF41FFE3FF3577FCFFFF49BBA048F5AC217F000041534D8D9B60B7FFFF41FFE3FF3563FCFFFF49BBB048F5AC217F000041534D8D9B50B7FFFF41FFE3FF3557FCFFFF49BBC048F5AC217F000041534D8D9B40B7FFFF41FFE3FF3543FCFFFF49BBD048F5AC217F000041534D8D9B30B7FFFF41FFE3FF352FFCFFFF49BBE048F5AC217F000041534D8D9B20B7FFFF41FFE3FF351BFCFFFF49BBF048F5AC217F000041534D8D9B10B7FFFF41FFE3FF3507FCFFFF49BB0049F5AC217F000041534D8D9B00B7FFFF41FFE3FF35FBFBFFFF49BB1049F5AC217F000041534D8D9BF0B6FFFF41FFE3FF35E7FBFFFF49BB2049F5AC217F000041534D8D9BE0B6FFFF41FFE3FF35D3FBFFFF49BB3049F5AC217F000041534D8D9BD0B6FFFF41FFE3FF35BFFBFFFF49BB4049F5AC217F000041534D8D9BC0B6FFFF41FFE3FF35ABFBFFFF49BB5049F5AC217F000041534D8D9BB0B6FFFF41FFE3FF3597FBFFFF49BB6049F5AC217F000041534D8D9BA0B6FFFF41FFE3FF3583FBFFFF49BB7049F5AC217F000041534D8D9B90B6FFFF41FFE3FF356FFBFFFF49BB8049F5AC217F000041534D8D9B80B6FFFF41FFE3FF3563FBFFFF49BB9049F5AC217F000041534D8D9B70B6FFFF41FFE3FF354FFBFFFF49BBA049F5AC217F000041534D8D9B60B6FFFF41FFE3FF353BFBFFFF49BBB049F5AC217F000041534D8D9B50B6FFFF41FFE3FF3527FBFFFF49BBC049F5AC217F000041534D8D9B40B6FFFF41FFE3
[3e4c1beceeed13c] jit-backend-dump}
[3e4c1beceef77a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54ab4 +0  1F000000
[3e4c1beceef8c31] jit-backend-dump}
[3e4c1beceefc94c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54d05 +0  1F000000
[3e4c1beceefd88e] jit-backend-dump}
[3e4c1becef00a74] {jit-backend-addr
bridge out of Guard 0x35bc2a8 has address 0x7f21acf54ab0 to 0x7f21acf54d00
       gc table: 0x7f21acf549e0
    jump target: 0x7f21acf54ab0
         resops: 0x7f21acf54abe
       failures: 0x7f21acf54d00
            end: 0x7f21acf54f8f
[3e4c1becef02c22] jit-backend-addr}
[3e4c1becef06277] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54ace +0  71020000
[3e4c1becef070af] jit-backend-dump}
[3e4c1becef0a065] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54adb +0  80020000
[3e4c1becef0ad9c] jit-backend-dump}
[3e4c1becef0dd5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54aeb +0  8C020000
[3e4c1becef0ea86] jit-backend-dump}
[3e4c1becef119b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54af8 +0  9B020000
[3e4c1becef12678] jit-backend-dump}
[3e4c1becef15665] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54b0c +0  A3020000
[3e4c1becef1637d] jit-backend-dump}
[3e4c1becef193a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54b22 +0  C5020000
[3e4c1becef1a092] jit-backend-dump}
[3e4c1becef1d03c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54b39 +0  CA020000
[3e4c1becef1dd5d] jit-backend-dump}
[3e4c1becef20d60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54b47 +0  D8020000
[3e4c1becef21a4a] jit-backend-dump}
[3e4c1becef24b69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54b5c +0  DF020000
[3e4c1becef25866] jit-backend-dump}
[3e4c1becef287e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54b74 +0  E3020000
[3e4c1becef294b7] jit-backend-dump}
[3e4c1becef2c467] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54b8c +0  E7020000
[3e4c1becef2d1cf] jit-backend-dump}
[3e4c1becef3019a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54b99 +0  F6020000
[3e4c1becef30ea3] jit-backend-dump}
[3e4c1becef33e90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54bb0 +0  FB020000
[3e4c1becef34b93] jit-backend-dump}
[3e4c1becef37ab9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54bc6 +0  01030000
[3e4c1becef387a4] jit-backend-dump}
[3e4c1becef3b6fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54bdd +0  06030000
[3e4c1becef3c413] jit-backend-dump}
[3e4c1becef3f4e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54bea +0  15030000
[3e4c1becef401d6] jit-backend-dump}
[3e4c1becef431c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54bfe +0  1D030000
[3e4c1becef43f04] jit-backend-dump}
[3e4c1becef46eaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54c0a +0  2D030000
[3e4c1becef47b76] jit-backend-dump}
[3e4c1becef4aaf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54c20 +0  33030000
[3e4c1becef4b7f8] jit-backend-dump}
[3e4c1becef4e743] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54c3f +0  30030000
[3e4c1becef4f415] jit-backend-dump}
[3e4c1becef5262f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf526c9 +0  E3230000
[3e4c1becef53353] jit-backend-dump}
[3e4c1becef57261] jit-backend}
[3e4c1becef5aa37] {jit-log-opt-bridge
# bridge out of Guard 0x35bc2a8 with 68 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x34fddc0>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+246: guard_nonnull(p3, descr=<Guard0x35bcfe0>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x35bd028>) [p0, p1]
debug_merge_point(0, 0, '#f')
+271: guard_class(p0, 16435920, descr=<Guard0x35bd070>) [p0, p1]
+284: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+295: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35bd0b8>) [p0, p1]
+304: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+308: guard_not_invalidated(descr=<Guard0x35bd100>) [p0, p1]
+308: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+312: guard_class(p9, 16500368, descr=<Guard0x35bd148>) [p0, p1]
+326: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+330: guard_nonnull_class(p12, 16471056, descr=<Guard0x34fde20>) [p0, p1]
+349: guard_class(p10, 16435920, descr=<Guard0x35bd190>) [p0, p1]
+363: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+375: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35bd1d8>) [p0, p1]
+384: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+389: p18 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+394: guard_class(p18, 16435920, descr=<Guard0x35bd220>) [p0, p1]
+408: p20 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+412: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x34fde80>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr y) z x) from (shorterp (cdr x4848) (cdr y4850))')
+432: guard_class(p17, 16500368, descr=<Guard0x35bd268>) [p0, p1]
+445: p23 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+449: guard_nonnull_class(p23, 16471056, descr=<Guard0x34fdee0>) [p0, p1]
+468: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+472: guard_nonnull_class(p25, 16471056, descr=<Guard0x34fdf40>) [p0, p1]
+490: p27 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+494: guard_nonnull_class(p27, 16471056, descr=<Guard0x34fdfa0>) [p0, p1]
+513: p29 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+517: guard_nonnull(p29, descr=<Guard0x35bd2b0>) [p0, p1]
+526: p30 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+537: i32 = instance_ptr_eq(p30, ConstPtr(ptr31))
+540: guard_true(i32, descr=<Guard0x35bd2f8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr y) z x)')
debug_merge_point(0, 0, '(shorterp y x)')
+546: guard_class(p30, 16505296, descr=<Guard0x35bd340>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+558: p34 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+562: guard_nonnull_class(p34, 16471056, descr=<Guard0x35c4020>) [p0, p1]
+580: p36 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+591: guard_nonnull_class(p36, 16471056, descr=<Guard0x35c4080>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+611: p38 = new_with_vtable(descr=<SizeDescr 40>)
+658: p39 = new_with_vtable(descr=<SizeDescr 40>)
+669: setfield_gc(p39, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+673: setfield_gc(p39, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+677: setfield_gc(p39, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+681: setfield_gc(p39, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+685: p40 = new_with_vtable(descr=<SizeDescr 48>)
+696: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: setfield_gc(p40, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+711: setfield_gc(p40, p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+722: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+726: setfield_gc(p40, p12, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+730: setfield_gc(p38, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+734: setfield_gc(p38, p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+738: setfield_gc(p38, p40, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+742: setfield_gc(p38, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+746: jump(ConstPtr(ptr43), p34, p36, p38, p20, descr=TargetToken(55799344))
+800: --end of the loop--
[3e4c1becef971f0] jit-log-opt-bridge}
[3e4c1becf0f10b6] {jit-backend
[3e4c1becf147037] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf550c
[3e4c1becf14edf0] jit-backend-dump}
[3e4c1becf158be5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55164 +0  1F000000
[3e4c1becf15a032] jit-backend-dump}
[3e4c1becf15dc09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55325 +0  1F000000
[3e4c1becf15ea22] jit-backend-dump}
[3e4c1becf161b3b] {jit-backend-addr
bridge out of Guard 0x35bc770 has address 0x7f21acf55160 to 0x7f21acf55320
       gc table: 0x7f21acf550c0
    jump target: 0x7f21acf55160
         resops: 0x7f21acf5516e
       failures: 0x7f21acf55320
            end: 0x7f21acf55523
[3e4c1becf163e00] jit-backend-addr}
[3e4c1becf1671b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5517e +0  E1010000
[3e4c1becf168057] jit-backend-dump}
[3e4c1becf16b0d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5518b +0  F0010000
[3e4c1becf16bde3] jit-backend-dump}
[3e4c1becf16ed09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5519b +0  FC010000
[3e4c1becf16f9db] jit-backend-dump}
[3e4c1becf1728cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf551a8 +0  0B020000
[3e4c1becf1735ca] jit-backend-dump}
[3e4c1becf176583] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf551bc +0  13020000
[3e4c1becf177292] jit-backend-dump}
[3e4c1becf17a5c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf551d2 +0  35020000
[3e4c1becf17b37a] jit-backend-dump}
[3e4c1becf17e373] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf551e9 +0  3A020000
[3e4c1becf17f067] jit-backend-dump}
[3e4c1becf181f40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf551f7 +0  48020000
[3e4c1becf182c2b] jit-backend-dump}
[3e4c1becf185b4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5520c +0  4F020000
[3e4c1becf18683f] jit-backend-dump}
[3e4c1becf189749] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5522e +0  49020000
[3e4c1becf18a43d] jit-backend-dump}
[3e4c1becf18d34e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55242 +0  51020000
[3e4c1becf18e035] jit-backend-dump}
[3e4c1becf190f83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5524f +0  60020000
[3e4c1becf191c86] jit-backend-dump}
[3e4c1becf194b54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55267 +0  64020000
[3e4c1becf195844] jit-backend-dump}
[3e4c1becf198780] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5527d +0  6A020000
[3e4c1becf19945e] jit-backend-dump}
[3e4c1becf19c3af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55293 +0  70020000
[3e4c1becf19d0a3] jit-backend-dump}
[3e4c1becf1a024b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf533f7 +0  651D0000
[3e4c1becf1a0f4b] jit-backend-dump}
[3e4c1becf1a4e8a] jit-backend}
[3e4c1becf1a86be] {jit-log-opt-bridge
# bridge out of Guard 0x35bc770 with 53 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x35c40e0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+198: guard_nonnull(p3, descr=<Guard0x35bd388>) [p0, p1]
+214: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+217: guard_true(i5, descr=<Guard0x35bd3d0>) [p0, p1]
debug_merge_point(0, 0, '#f')
+223: guard_class(p0, 16435920, descr=<Guard0x35bd418>) [p0, p1]
+236: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+247: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35bd460>) [p0, p1]
+256: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+260: guard_not_invalidated(descr=<Guard0x35bd4a8>) [p0, p1]
+260: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+264: guard_class(p9, 16500368, descr=<Guard0x35bd4f0>) [p0, p1]
+278: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+282: guard_nonnull_class(p12, 16471056, descr=<Guard0x35c4140>) [p0, p1]
+301: guard_class(p10, 16437896, descr=<Guard0x35bd538>) [p0, p1]
+315: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+327: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35bd580>) [p0, p1]
+336: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+336: p18 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+341: p19 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+346: p20 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(mas AppRand3 AppRand4 AppRand5) from (shorterp (cdr x4848) (cdr y4850))')
+351: guard_nonnull_class(p18, 16471056, descr=<Guard0x35c41a0>) [p0, p1]
+370: guard_nonnull_class(p19, 16471056, descr=<Guard0x35c4200>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas AppRand3 AppRand4 AppRand5)')
+390: guard_class(p20, 16435920, descr=<Guard0x35bd5c8>) [p0, p1]
+403: p24 = getfield_gc_r(p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+407: guard_nonnull_class(p24, ConstClass(ForwardLink), descr=<Guard0x35c4260>) [p0, p1]
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+427: p26 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+431: guard_nonnull_class(p26, 16471056, descr=<Guard0x35c42c0>) [p0, p1]
+449: p28 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+453: guard_nonnull_class(p28, 16471056, descr=<Guard0x35c4320>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+471: p30 = new_with_vtable(descr=<SizeDescr 40>)
+512: p31 = new_with_vtable(descr=<SizeDescr 40>)
+530: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+534: setfield_gc(p31, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+538: setfield_gc(p31, p19, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+542: setfield_gc(p31, p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+546: setfield_gc(p30, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+550: setfield_gc(p30, p31, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+554: setfield_gc(p30, p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+558: setfield_gc(p30, p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+562: jump(ConstPtr(ptr34), p26, p28, p30, p24, descr=TargetToken(55799344))
+608: --end of the loop--
[3e4c1becf1d4bd7] jit-log-opt-bridge}
[3e4c1becf26dbe7] {jit-backend
[3e4c1becf29443f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf555a
[3e4c1becf2986c6] jit-backend-dump}
[3e4c1becf2a21aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf555d4 +0  1F000000
[3e4c1becf2a32d5] jit-backend-dump}
[3e4c1becf2a6db1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55685 +0  1F000000
[3e4c1becf2a7ba3] jit-backend-dump}
[3e4c1becf2aacf2] {jit-backend-addr
bridge out of Guard 0x34fd040 has address 0x7f21acf555d0 to 0x7f21acf55680
       gc table: 0x7f21acf555a0
    jump target: 0x7f21acf555d0
         resops: 0x7f21acf555de
       failures: 0x7f21acf55680
            end: 0x7f21acf55733
[3e4c1becf2acec3] jit-backend-addr}
[3e4c1becf2b028c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf555f9 +0  E2000000
[3e4c1becf2b1059] jit-backend-dump}
[3e4c1becf2b427f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55610 +0  E7000000
[3e4c1becf2b4f54] jit-backend-dump}
[3e4c1becf2b8088] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55624 +0  EF000000
[3e4c1becf2b8d2f] jit-backend-dump}
[3e4c1becf2bc0a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf52bc0 +0  0C2A0000
[3e4c1becf2bcd59] jit-backend-dump}
[3e4c1becf2c0ebb] jit-backend}
[3e4c1becf2c48ec] {jit-log-opt-bridge
# bridge out of Guard 0x34fd040 with 15 ops
[p0, p1, p2, p3, p4]
+70: guard_not_invalidated(descr=<Guard0x35c4380>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+70: p5 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+74: guard_nonnull_class(p5, 16616448, descr=<Guard0x35c43e0>) [p0, p1, p2, p3, p4]
+93: p7 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+97: guard_nonnull_class(p7, 16471056, descr=<Guard0x35c4440>) [p0, p1, p2, p3, p4]
+123: i10 = instance_ptr_eq(p4, ConstPtr(ptr9))
+130: guard_true(i10, descr=<Guard0x35bd610>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+136: p11 = new_with_vtable(descr=<SizeDescr 32>)
+177: setfield_gc(p11, p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+188: setfield_gc(p11, p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+192: setfield_gc(p11, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+196: jump(p11, p0, descr=TargetToken(55799264))
+224: --end of the loop--
[3e4c1becf2d584f] jit-log-opt-bridge}
[3e4c1becf41a43f] {jit-backend
[3e4c1becf47f247] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf558c
[3e4c1becf487624] jit-backend-dump}
[3e4c1becf490f67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf559a4 +0  1F000000
[3e4c1becf4921af] jit-backend-dump}
[3e4c1becf495b25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55c05 +0  1F000000
[3e4c1becf496917] jit-backend-dump}
[3e4c1becf499a57] {jit-backend-addr
bridge out of Guard 0x35bc890 has address 0x7f21acf559a0 to 0x7f21acf55c00
       gc table: 0x7f21acf558c0
    jump target: 0x7f21acf559a0
         resops: 0x7f21acf559ae
       failures: 0x7f21acf55c00
            end: 0x7f21acf55eab
[3e4c1becf49bc71] jit-backend-addr}
[3e4c1becf49ef08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf559be +0  81020000
[3e4c1becf49fcdb] jit-backend-dump}
[3e4c1becf4a2db1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf559cb +0  90020000
[3e4c1becf4a3aae] jit-backend-dump}
[3e4c1becf4a6bd9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf559db +0  9C020000
[3e4c1becf4a78f4] jit-backend-dump}
[3e4c1becf4aa99f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf559e8 +0  AB020000
[3e4c1becf4ab756] jit-backend-dump}
[3e4c1becf4ae905] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf559fc +0  B3020000
[3e4c1becf4af636] jit-backend-dump}
[3e4c1becf4b26a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55a12 +0  D5020000
[3e4c1becf4b33da] jit-backend-dump}
[3e4c1becf4b643c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55a29 +0  DA020000
[3e4c1becf4b714b] jit-backend-dump}
[3e4c1becf4ba0a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55a37 +0  E8020000
[3e4c1becf4bade2] jit-backend-dump}
[3e4c1becf4bddfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55a4c +0  EF020000
[3e4c1becf4beadb] jit-backend-dump}
[3e4c1becf4c1a0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55a69 +0  EE020000
[3e4c1becf4c271d] jit-backend-dump}
[3e4c1becf4c5710] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55a7b +0  F8020000
[3e4c1becf4c63fb] jit-backend-dump}
[3e4c1becf4c9339] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55a8e +0  01030000
[3e4c1becf4ca073] jit-backend-dump}
[3e4c1becf4cd057] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55a9b +0  10030000
[3e4c1becf4cdd66] jit-backend-dump}
[3e4c1becf4d0cb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55ab1 +0  16030000
[3e4c1becf4d19e8] jit-backend-dump}
[3e4c1becf4d49c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55ac7 +0  1C030000
[3e4c1becf4d56a7] jit-backend-dump}
[3e4c1becf4d85c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55add +0  22030000
[3e4c1becf4d92fb] jit-backend-dump}
[3e4c1becf4dc2d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55af3 +0  28030000
[3e4c1becf4dcfb7] jit-backend-dump}
[3e4c1becf4dfee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55b00 +0  37030000
[3e4c1becf4e0c1b] jit-backend-dump}
[3e4c1becf4e3c2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55b10 +0  43030000
[3e4c1becf4e490e] jit-backend-dump}
[3e4c1becf4e77fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55b26 +0  49030000
[3e4c1becf4e850c] jit-backend-dump}
[3e4c1becf4eb494] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55b43 +0  48030000
[3e4c1becf4ec172] jit-backend-dump}
[3e4c1becf4ef30f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5345b +0  41250000
[3e4c1becf4efff6] jit-backend-dump}
[3e4c1becf4f3f50] jit-backend}
[3e4c1becf4f7738] {jit-log-opt-bridge
# bridge out of Guard 0x35bc890 with 71 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x35c44a0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+262: guard_nonnull(p3, descr=<Guard0x35bd658>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x35bd6a0>) [p0, p1]
debug_merge_point(0, 0, '#f')
+287: guard_class(p0, 16435920, descr=<Guard0x35bd6e8>) [p0, p1]
+300: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+311: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35bd730>) [p0, p1]
+320: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+324: guard_not_invalidated(descr=<Guard0x35bd778>) [p0, p1]
+324: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+328: guard_class(p9, 16500368, descr=<Guard0x35bd7c0>) [p0, p1]
+342: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+346: guard_nonnull_class(p12, 16471056, descr=<Guard0x35c4500>) [p0, p1]
+365: guard_class(p10, 16437352, descr=<Guard0x35bd808>) [p0, p1]
+379: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+391: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35bd850>) [p0, p1]
+400: p17 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+405: p18 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+410: p19 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+415: guard_class(p18, 16500368, descr=<Guard0x35bd898>) [p0, p1]
+429: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+433: guard_class(p21, 16505296, descr=<Guard0x35bd8e0>) [p0, p1]
+447: guard_nonnull_class(p17, 16471056, descr=<Guard0x35c4560>) [p0, p1]
+466: guard_class(p19, 16435920, descr=<Guard0x35bd928>) [p0, p1]
+479: p25 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+483: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x35c45c0>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr z) x y) from (shorterp (cdr x4848) (cdr y4850))')
+501: p27 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+505: guard_nonnull_class(p27, 16471056, descr=<Guard0x35c4620>) [p0, p1]
+523: p29 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+527: guard_nonnull_class(p29, 16471056, descr=<Guard0x35c4680>) [p0, p1]
+545: p31 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+549: guard_nonnull_class(p31, 16471056, descr=<Guard0x35c46e0>) [p0, p1]
+567: p33 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+571: guard_nonnull(p33, descr=<Guard0x35bd970>) [p0, p1]
+587: i35 = instance_ptr_eq(p21, ConstPtr(ptr34))
+590: guard_true(i35, descr=<Guard0x35bd9b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr z) x y)')
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+596: p36 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+600: guard_nonnull_class(p36, 16471056, descr=<Guard0x35c4740>) [p0, p1]
+618: p38 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+629: guard_nonnull_class(p38, 16471056, descr=<Guard0x35c47a0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+647: p40 = new_with_vtable(descr=<SizeDescr 40>)
+694: p41 = new_with_vtable(descr=<SizeDescr 40>)
+705: setfield_gc(p41, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+709: setfield_gc(p41, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+713: setfield_gc(p41, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+717: setfield_gc(p41, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+721: p42 = new_with_vtable(descr=<SizeDescr 56>)
+732: setfield_gc(p42, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+743: setfield_gc(p42, p21, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+747: setfield_gc(p42, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+758: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+762: setfield_gc(p42, p17, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+766: setfield_gc(p42, p12, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+770: setfield_gc(p40, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+774: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+778: setfield_gc(p40, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+782: setfield_gc(p40, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+786: jump(ConstPtr(ptr45), p36, p38, p40, p25, descr=TargetToken(55799344))
+832: --end of the loop--
[3e4c1becf52f41c] jit-log-opt-bridge}
[3e4c1becf6b490c] {jit-backend
[3e4c1becf7069ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf
[3e4c1becf71013e] jit-backend-dump}
[3e4c1becf719f5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf560e4 +0  1F000000
[3e4c1becf71b2a1] jit-backend-dump}
[3e4c1becf71ecc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf562f5 +0  1F000000
[3e4c1becf71fb72] jit-backend-dump}
[3e4c1becf722c6f] {jit-backend-addr
bridge out of Guard 0x35a1ec8 has address 0x7f21acf560e0 to 0x7f21acf562f0
       gc table: 0x7f21acf56020
    jump target: 0x7f21acf560e0
         resops: 0x7f21acf560ee
       failures: 0x7f21acf562f0
            end: 0x7f21acf56563
[3e4c1becf724e18] jit-backend-addr}
[3e4c1becf728224] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf560fe +0  31020000
[3e4c1becf729040] jit-backend-dump}
[3e4c1becf72c1b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5610b +0  40020000
[3e4c1becf72cf5d] jit-backend-dump}
[3e4c1becf730112] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5611b +0  4C020000
[3e4c1becf730f8d] jit-backend-dump}
[3e4c1becf7340be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56127 +0  5C020000
[3e4c1becf734e17] jit-backend-dump}
[3e4c1becf737e50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5613e +0  61020000
[3e4c1becf738c02] jit-backend-dump}
[3e4c1becf73bc88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5614b +0  70020000
[3e4c1becf73c9d4] jit-backend-dump}
[3e4c1becf73fb27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56154 +0  83020000
[3e4c1becf7408ba] jit-backend-dump}
[3e4c1becf74395b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56168 +0  A7020000
[3e4c1becf7446c0] jit-backend-dump}
[3e4c1becf747777] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5617e +0  AD020000
[3e4c1becf748510] jit-backend-dump}
[3e4c1becf74b599] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56196 +0  B1020000
[3e4c1becf74c30d] jit-backend-dump}
[3e4c1becf74f289] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf561a3 +0  C0020000
[3e4c1becf750009] jit-backend-dump}
[3e4c1becf75304c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf561ba +0  C5020000
[3e4c1becf753de5] jit-backend-dump}
[3e4c1becf756da1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf561d1 +0  CA020000
[3e4c1becf757b3d] jit-backend-dump}
[3e4c1becf75aad1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf561e8 +0  CF020000
[3e4c1becf75b845] jit-backend-dump}
[3e4c1becf75e7c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf561f5 +0  DE020000
[3e4c1becf75f4fb] jit-backend-dump}
[3e4c1becf7624d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56209 +0  E6020000
[3e4c1becf763241] jit-backend-dump}
[3e4c1becf76615e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56215 +0  F6020000
[3e4c1becf766e9b] jit-backend-dump}
[3e4c1becf769dec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5622b +0  FC020000
[3e4c1becf76ab29] jit-backend-dump}
[3e4c1becf76da37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56241 +0  02030000
[3e4c1becf76e771] jit-backend-dump}
[3e4c1becf771969] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf51fbe +0  1E410000
[3e4c1becf77268a] jit-backend-dump}
[3e4c1becf77657f] jit-backend}
[3e4c1becf779f4e] {jit-log-opt-bridge
# bridge out of Guard 0x35a1ec8 with 68 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x35c4800>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+230: guard_nonnull(p3, descr=<Guard0x35bda00>) [p0, p1]
+246: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+249: guard_false(i5, descr=<Guard0x35bda48>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
+255: guard_class(p0, 16435920, descr=<Guard0x35bda90>) [p0, p1]
+267: p7 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+271: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x35c4860>) [p0, p1]
debug_merge_point(0, 0, '(null? x4848)')
+290: p9 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull(p9, descr=<Guard0x35bdad8>) [p0, p1]
+303: i11 = instance_ptr_eq(p9, ConstPtr(ptr10))
+306: guard_true(i11, descr=<Guard0x35bdb20>) [p0, p1]
+312: guard_not_invalidated(descr=<Guard0x35bdb68>) [p0, p1]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, 'or-part')
+312: p12 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+323: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x35bdbb0>) [p0, p1]
+332: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+336: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (null? x4848)')
debug_merge_point(0, 0, '(let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))')
+340: guard_class(p15, 16437896, descr=<Guard0x35bdbf8>) [p0, p1]
+354: p17 = getfield_gc_r(p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+358: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x35c48c0>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr x) y z)')
+378: guard_class(p14, 16500368, descr=<Guard0x35bdc40>) [p0, p1]
+391: p20 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+395: guard_nonnull_class(p20, 16471056, descr=<Guard0x35c4920>) [p0, p1]
+414: p22 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+418: guard_nonnull_class(p22, 16471056, descr=<Guard0x35c4980>) [p0, p1]
+437: p24 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+441: guard_nonnull_class(p24, 16471056, descr=<Guard0x35c49e0>) [p0, p1]
+460: p26 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+464: guard_nonnull(p26, descr=<Guard0x35bdc88>) [p0, p1]
+473: p27 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+484: i29 = instance_ptr_eq(p27, ConstPtr(ptr28))
+487: guard_true(i29, descr=<Guard0x35bdcd0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr x) y z)')
debug_merge_point(0, 0, '(shorterp y x)')
+493: guard_class(p27, 16505296, descr=<Guard0x35bdd18>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+505: p31 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+509: guard_nonnull_class(p31, 16471056, descr=<Guard0x35c4a40>) [p0, p1]
+527: p33 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+531: guard_nonnull_class(p33, 16471056, descr=<Guard0x35c4aa0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+549: p35 = new_with_vtable(descr=<SizeDescr 40>)
+593: p36 = new_with_vtable(descr=<SizeDescr 40>)
+604: setfield_gc(p36, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+608: setfield_gc(p36, p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+612: setfield_gc(p36, p24, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+616: setfield_gc(p36, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+620: p37 = new_with_vtable(descr=<SizeDescr 40>)
+631: setfield_gc(p37, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+635: setfield_gc(p37, p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p37, p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p35, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+658: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+662: setfield_gc(p35, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+666: setfield_gc(p35, p37, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+670: jump(ConstPtr(ptr40), p31, p33, p35, p17, descr=TargetToken(55799344))
+720: --end of the loop--
[3e4c1becf7adf17] jit-log-opt-bridge}
[3e4c1becf916940] {jit-backend
[3e4c1becf95c93c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf
[3e4c1becf963f4c] jit-backend-dump}
[3e4c1becf96d6ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56714 +0  1F000000
[3e4c1becf96e886] jit-backend-dump}
[3e4c1becf97219d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf568b5 +0  1F000000
[3e4c1becf972f3c] jit-backend-dump}
[3e4c1becf975ff9] {jit-backend-addr
bridge out of Guard 0x35bcda0 has address 0x7f21acf56710 to 0x7f21acf568b0
       gc table: 0x7f21acf56680
    jump target: 0x7f21acf56710
         resops: 0x7f21acf5671e
       failures: 0x7f21acf568b0
            end: 0x7f21acf56a7b
[3e4c1becf9780a4] jit-backend-addr}
[3e4c1becf97b3cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5672e +0  C1010000
[3e4c1becf97c209] jit-backend-dump}
[3e4c1becf97f3b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5673b +0  D0010000
[3e4c1becf9800dc] jit-backend-dump}
[3e4c1becf98317a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5674b +0  DC010000
[3e4c1becf983e90] jit-backend-dump}
[3e4c1becf986ff8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5675c +0  E7010000
[3e4c1becf987cec] jit-backend-dump}
[3e4c1becf98acf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56773 +0  EC010000
[3e4c1becf98b9dc] jit-backend-dump}
[3e4c1becf98ea09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5677f +0  FC010000
[3e4c1becf98f6fa] jit-backend-dump}
[3e4c1becf9926cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56793 +0  04020000
[3e4c1becf993473] jit-backend-dump}
[3e4c1becf9964c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf567b3 +0  1C020000
[3e4c1becf9971b3] jit-backend-dump}
[3e4c1becf99a163] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf567c6 +0  25020000
[3e4c1becf99ae44] jit-backend-dump}
[3e4c1becf99dda7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf567d4 +0  33020000
[3e4c1becf99ea8f] jit-backend-dump}
[3e4c1becf9a19d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf567ec +0  37020000
[3e4c1becf9a26ec] jit-backend-dump}
[3e4c1becf9a5665] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56803 +0  3C020000
[3e4c1becf9a6346] jit-backend-dump}
[3e4c1becf9a9294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5681a +0  41020000
[3e4c1becf9a9fb0] jit-backend-dump}
[3e4c1becf9ad1c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5442f +0  DD220000
[3e4c1becf9adeae] jit-backend-dump}
[3e4c1becf9b1ce8] jit-backend}
[3e4c1becf9b55c8] {jit-log-opt-bridge
# bridge out of Guard 0x35bcda0 with 47 ops
[p0, p1]
+166: guard_class(p1, 16499664, descr=<Guard0x35c4b00>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+182: guard_nonnull(p3, descr=<Guard0x35bdd60>) [p0, p1]
+198: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+201: guard_true(i5, descr=<Guard0x35bdda8>) [p0, p1]
debug_merge_point(0, 0, 'z')
+207: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+211: guard_class(p6, 16500368, descr=<Guard0x35bddf0>) [p0, p1]
+224: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+228: guard_nonnull_class(p8, 16471056, descr=<Guard0x35c4b60>) [p0, p1]
+247: guard_class(p0, 16437896, descr=<Guard0x35bde38>) [p0, p1]
+259: p11 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+270: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x35bde80>) [p0, p1]
+279: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+279: guard_not_invalidated(descr=<Guard0x35bdec8>) [p0, p1]
+279: p14 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+283: p15 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+287: p16 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(mas AppRand3 AppRand4 AppRand5) from (shorterp (cdr x4848) (cdr y4850))')
+291: guard_nonnull_class(p14, 16471056, descr=<Guard0x35c4bc0>) [p0, p1]
+311: guard_nonnull_class(p15, 16471056, descr=<Guard0x35c4c20>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas AppRand3 AppRand4 AppRand5)')
+330: guard_class(p16, 16437352, descr=<Guard0x35bdf10>) [p0, p1]
+344: p20 = getfield_gc_r(p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+349: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x35c4c80>) [p0, p1]
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+368: p22 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+372: guard_nonnull_class(p22, 16471056, descr=<Guard0x35c4ce0>) [p0, p1]
+391: p24 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+395: guard_nonnull_class(p24, 16471056, descr=<Guard0x35c4d40>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+414: p26 = new_with_vtable(descr=<SizeDescr 40>)
+455: p27 = new_with_vtable(descr=<SizeDescr 40>)
+473: setfield_gc(p27, ConstPtr(ptr28), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+477: setfield_gc(p27, p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+481: setfield_gc(p27, p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+485: setfield_gc(p27, p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+496: setfield_gc(p26, ConstPtr(ptr29), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+500: setfield_gc(p26, p27, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+504: setfield_gc(p26, p16, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+508: setfield_gc(p26, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+512: jump(ConstPtr(ptr30), p22, p24, p26, p20, descr=TargetToken(55799344))
+560: --end of the loop--
[3e4c1becf9dbfa4] jit-log-opt-bridge}
[3e4c1becfb40054] {jit-backend
[3e4c1becfb89392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56bb
[3e4c1becfb9080f] jit-backend-dump}
[3e4c1becfb9a5e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56c54 +0  1F000000
[3e4c1becfb9b994] jit-backend-dump}
[3e4c1becfb9f55b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56e15 +0  1F000000
[3e4c1becfba0435] jit-backend-dump}
[3e4c1becfba353e] {jit-backend-addr
bridge out of Guard 0x35bd5c8 has address 0x7f21acf56c50 to 0x7f21acf56e10
       gc table: 0x7f21acf56bb0
    jump target: 0x7f21acf56c50
         resops: 0x7f21acf56c5e
       failures: 0x7f21acf56e10
            end: 0x7f21acf57013
[3e4c1becfba59aa] jit-backend-addr}
[3e4c1becfba8dad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56c6e +0  E1010000
[3e4c1becfba9c44] jit-backend-dump}
[3e4c1becfbace4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56c7b +0  F0010000
[3e4c1becfbadbdb] jit-backend-dump}
[3e4c1becfbb0c48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56c8b +0  FC010000
[3e4c1becfbb19cf] jit-backend-dump}
[3e4c1becfbb4a0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56c98 +0  0B020000
[3e4c1becfbb575b] jit-backend-dump}
[3e4c1becfbb872f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56cac +0  13020000
[3e4c1becfbb94a3] jit-backend-dump}
[3e4c1becfbbc4e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56cc2 +0  35020000
[3e4c1becfbbd223] jit-backend-dump}
[3e4c1becfbc01ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56cd9 +0  3A020000
[3e4c1becfbc0f13] jit-backend-dump}
[3e4c1becfbc3ea7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56ce7 +0  48020000
[3e4c1becfbc4bdb] jit-backend-dump}
[3e4c1becfbc7b1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56cfc +0  4F020000
[3e4c1becfbc883f] jit-backend-dump}
[3e4c1becfbcb7ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56d1e +0  49020000
[3e4c1becfbcc4d3] jit-backend-dump}
[3e4c1becfbcf424] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56d32 +0  51020000
[3e4c1becfbd0155] jit-backend-dump}
[3e4c1becfbd30bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56d3f +0  60020000
[3e4c1becfbd3de6] jit-backend-dump}
[3e4c1becfbd6d3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56d57 +0  64020000
[3e4c1becfbd7a5c] jit-backend-dump}
[3e4c1becfbdaa6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56d6d +0  6A020000
[3e4c1becfbdb7d5] jit-backend-dump}
[3e4c1becfbde72c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56d83 +0  70020000
[3e4c1becfbdf45d] jit-backend-dump}
[3e4c1becfbe26ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5524f +0  FD190000
[3e4c1becfbe342b] jit-backend-dump}
[3e4c1becfbe7590] jit-backend}
[3e4c1becfbeaf74] {jit-log-opt-bridge
# bridge out of Guard 0x35bd5c8 with 53 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x35c4da0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+198: guard_nonnull(p3, descr=<Guard0x35bdf58>) [p0, p1]
+214: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+217: guard_true(i5, descr=<Guard0x35bdfa0>) [p0, p1]
debug_merge_point(0, 0, '#f')
+223: guard_class(p0, 16435920, descr=<Guard0x35d2020>) [p0, p1]
+236: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+247: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35d2068>) [p0, p1]
+256: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+260: guard_not_invalidated(descr=<Guard0x35d20b0>) [p0, p1]
+260: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+264: guard_class(p9, 16500368, descr=<Guard0x35d20f8>) [p0, p1]
+278: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+282: guard_nonnull_class(p12, 16471056, descr=<Guard0x35c4e00>) [p0, p1]
+301: guard_class(p10, 16437896, descr=<Guard0x35d2140>) [p0, p1]
+315: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+327: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35d2188>) [p0, p1]
+336: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+336: p18 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+341: p19 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+346: p20 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(mas AppRand3 AppRand4 AppRand5) from (shorterp (cdr x4848) (cdr y4850))')
+351: guard_nonnull_class(p18, 16471056, descr=<Guard0x35c4e60>) [p0, p1]
+370: guard_nonnull_class(p19, 16471056, descr=<Guard0x35c4ec0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas AppRand3 AppRand4 AppRand5)')
+390: guard_class(p20, 16437352, descr=<Guard0x35d21d0>) [p0, p1]
+403: p24 = getfield_gc_r(p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+407: guard_nonnull_class(p24, ConstClass(ForwardLink), descr=<Guard0x35c4f20>) [p0, p1]
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+427: p26 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+431: guard_nonnull_class(p26, 16471056, descr=<Guard0x35c4f80>) [p0, p1]
+449: p28 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+453: guard_nonnull_class(p28, 16471056, descr=<Guard0x35c4fe0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+471: p30 = new_with_vtable(descr=<SizeDescr 40>)
+512: p31 = new_with_vtable(descr=<SizeDescr 40>)
+530: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+534: setfield_gc(p31, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+538: setfield_gc(p31, p19, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+542: setfield_gc(p31, p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+546: setfield_gc(p30, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+550: setfield_gc(p30, p31, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+554: setfield_gc(p30, p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+558: setfield_gc(p30, p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+562: jump(ConstPtr(ptr34), p26, p28, p30, p24, descr=TargetToken(55799344))
+608: --end of the loop--
[3e4c1becfc1965e] jit-log-opt-bridge}
[3e4c1becfd179d9] {jit-backend
[3e4c1becfd4f03d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf570d
[3e4c1becfd59687] jit-backend-dump}
[3e4c1becfd62b80] {jit-backend-addr
Loop 20 ((mas AppRand3 AppRand4 AppRand5) from (shorterp (cdr x4848) (cdr y4850))) has address 0x7f21acf571bd to 0x7f21acf57300 (bootstrap 0x7f21acf57130)
       gc table: 0x7f21acf570d0
       function: 0x7f21acf57130
         resops: 0x7f21acf571bd
       failures: 0x7f21acf57300
            end: 0x7f21acf5742b
[3e4c1becfd6552d] jit-backend-addr}
[3e4c1becfd69226] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf571d4 +0  73010000
[3e4c1becfd6a428] jit-backend-dump}
[3e4c1becfd6d8f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf571ea +0  79010000
[3e4c1becfd6e691] jit-backend-dump}
[3e4c1becfd71846] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57200 +0  7F010000
[3e4c1becfd725c6] jit-backend-dump}
[3e4c1becfd75579] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5720d +0  8E010000
[3e4c1becfd762cc] jit-backend-dump}
[3e4c1becfd792f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57220 +0  97010000
[3e4c1becfd7a05b] jit-backend-dump}
[3e4c1becfd7d16a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57236 +0  9D010000
[3e4c1becfd7debd] jit-backend-dump}
[3e4c1becfd80f8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5724d +0  A2010000
[3e4c1becfd81c9e] jit-backend-dump}
[3e4c1becfd84ce4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57264 +0  A7010000
[3e4c1becfd85a1b] jit-backend-dump}
[3e4c1becfd89486] jit-backend}
[3e4c1becfd8d13c] {jit-log-opt-loop
# Loop 20 ((mas AppRand3 AppRand4 AppRand5) from (shorterp (cdr x4848) (cdr y4850))) : entry bridge with 36 ops
[p0, p1]
debug_merge_point(0, 0, '(mas AppRand3 AppRand4 AppRand5) from (shorterp (cdr x4848) (cdr y4850))')
+245: guard_not_invalidated(descr=<Guard0x35c5040>) [p1, p0]
+245: guard_class(p0, 16500368, descr=<Guard0x35d2218>) [p1, p0]
+264: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+268: guard_nonnull_class(p3, 16471056, descr=<Guard0x35c50a0>) [p1, p0]
+286: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+290: guard_nonnull_class(p5, 16471056, descr=<Guard0x35c5100>) [p1, p0]
+308: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+312: guard_nonnull(p7, descr=<Guard0x35d2260>) [p1, p0]
+321: p8 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas AppRand3 AppRand4 AppRand5)')
+321: guard_class(p1, 16437896, descr=<Guard0x35d22a8>) [p1, p0]
+340: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+344: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x35c5160>) [p1, p0]
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+362: p12 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+366: guard_nonnull_class(p12, 16471056, descr=<Guard0x35c51c0>) [p1, p0]
+385: p14 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+389: guard_nonnull_class(p14, 16471056, descr=<Guard0x35c5220>) [p1, p0]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+408: p16 = new_with_vtable(descr=<SizeDescr 40>)
+452: p17 = new_with_vtable(descr=<SizeDescr 40>)
+470: setfield_gc(p17, ConstPtr(ptr18), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+474: setfield_gc(p17, p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+478: setfield_gc(p17, p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+482: setfield_gc(p17, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+486: setfield_gc(p16, p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+490: setfield_gc(p16, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+494: setfield_gc(p16, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+505: setfield_gc(p16, ConstPtr(ptr19), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+509: jump(ConstPtr(ptr20), p12, p14, p16, p10, descr=TargetToken(55799344))
+560: --end of the loop--
[3e4c1becfdadb59] jit-log-opt-loop}
[3e4c1becff0e828] {jit-backend
[3e4c1becff628a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf
[3e4c1becff6ab40] jit-backend-dump}
[3e4c1becff74816] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57654 +0  1F000000
[3e4c1becff75a5e] jit-backend-dump}
[3e4c1becff7943c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57865 +0  1F000000
[3e4c1becff7a319] jit-backend-dump}
[3e4c1becff7d49a] {jit-backend-addr
bridge out of Guard 0x35bcb18 has address 0x7f21acf57650 to 0x7f21acf57860
       gc table: 0x7f21acf57590
    jump target: 0x7f21acf57650
         resops: 0x7f21acf5765e
       failures: 0x7f21acf57860
            end: 0x7f21acf57ab7
[3e4c1becff7f68c] jit-backend-addr}
[3e4c1becff82bf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5766e +0  31020000
[3e4c1becff839e3] jit-backend-dump}
[3e4c1becff86be8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5767b +0  40020000
[3e4c1becff8792b] jit-backend-dump}
[3e4c1becff8aaaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5768b +0  4C020000
[3e4c1becff8b7cd] jit-backend-dump}
[3e4c1becff8ea1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5769c +0  57020000
[3e4c1becff8f7b7] jit-backend-dump}
[3e4c1becff92984] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf576b3 +0  5C020000
[3e4c1becff936af] jit-backend-dump}
[3e4c1becff9673b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf576bf +0  6C020000
[3e4c1becff97453] jit-backend-dump}
[3e4c1becff9a50a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf576d3 +0  74020000
[3e4c1becff9b275] jit-backend-dump}
[3e4c1becff9e44c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf576e8 +0  7B020000
[3e4c1becff9f18f] jit-backend-dump}
[3e4c1becffa22f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57700 +0  7F020000
[3e4c1becffa3019] jit-backend-dump}
[3e4c1becffa6141] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5770e +0  A9020000
[3e4c1becffa6e5c] jit-backend-dump}
[3e4c1becffa9f60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57725 +0  AE020000
[3e4c1becffaac50] jit-backend-dump}
[3e4c1becffadccd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5773c +0  B3020000
[3e4c1becffae9cd] jit-backend-dump}
[3e4c1becffb19e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57753 +0  B8020000
[3e4c1becffb26cc] jit-backend-dump}
[3e4c1becffb56cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57760 +0  C7020000
[3e4c1becffb63b9] jit-backend-dump}
[3e4c1becffb9405] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57774 +0  CF020000
[3e4c1becffba0f0] jit-backend-dump}
[3e4c1becffbd0e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57780 +0  DF020000
[3e4c1becffbddca] jit-backend-dump}
[3e4c1becffc0e04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57796 +0  E5020000
[3e4c1becffc1ae5] jit-backend-dump}
[3e4c1becffc4b03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf577ac +0  EB020000
[3e4c1becffc57de] jit-backend-dump}
[3e4c1becffc8a72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf53db2 +0  9A380000
[3e4c1becffc973e] jit-backend-dump}
[3e4c1becffd1941] jit-backend}
[3e4c1becffd5870] {jit-log-opt-bridge
# bridge out of Guard 0x35bcb18 with 62 ops
[p0, p1]
+214: guard_class(p1, 16499664, descr=<Guard0x35c5280>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+230: guard_nonnull(p3, descr=<Guard0x35d22f0>) [p0, p1]
+246: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+249: guard_true(i5, descr=<Guard0x35d2338>) [p0, p1]
debug_merge_point(0, 0, 'z')
+255: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+259: guard_class(p6, 16500368, descr=<Guard0x35d2380>) [p0, p1]
+272: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+276: guard_nonnull_class(p8, 16471056, descr=<Guard0x35c52e0>) [p0, p1]
+295: guard_class(p0, 16435920, descr=<Guard0x35d23c8>) [p0, p1]
+307: p11 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+318: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x35d2410>) [p0, p1]
+327: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+331: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+335: guard_class(p14, 16437896, descr=<Guard0x35d2458>) [p0, p1]
+348: p16 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+352: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x35c5340>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr y) z x) from (shorterp (cdr x4848) (cdr y4850))')
+372: guard_not_invalidated(descr=<Guard0x35d24a0>) [p0, p1]
+372: guard_class(p13, 16500368, descr=<Guard0x35d24e8>) [p0, p1]
+386: p19 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+390: guard_nonnull_class(p19, 16471056, descr=<Guard0x35c53a0>) [p0, p1]
+409: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+413: guard_nonnull_class(p21, 16471056, descr=<Guard0x35c5400>) [p0, p1]
+432: p23 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+436: guard_nonnull_class(p23, 16471056, descr=<Guard0x35c5460>) [p0, p1]
+455: p25 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+459: guard_nonnull(p25, descr=<Guard0x35d2530>) [p0, p1]
+468: p26 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+479: i28 = instance_ptr_eq(p26, ConstPtr(ptr27))
+482: guard_true(i28, descr=<Guard0x35d2578>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr y) z x)')
debug_merge_point(0, 0, '(shorterp y x)')
+488: guard_class(p26, 16505296, descr=<Guard0x35d25c0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+500: p30 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+504: guard_nonnull_class(p30, 16471056, descr=<Guard0x35c54c0>) [p0, p1]
+522: p32 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+526: guard_nonnull_class(p32, 16471056, descr=<Guard0x35c5520>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+544: p34 = new_with_vtable(descr=<SizeDescr 40>)
+588: p35 = new_with_vtable(descr=<SizeDescr 40>)
+599: setfield_gc(p35, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+603: setfield_gc(p35, p21, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+607: setfield_gc(p35, p23, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+611: setfield_gc(p35, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+615: p36 = new_with_vtable(descr=<SizeDescr 48>)
+626: setfield_gc(p36, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+630: setfield_gc(p36, p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+634: setfield_gc(p36, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+645: setfield_gc(p36, ConstPtr(ptr37), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+649: setfield_gc(p36, p8, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+660: setfield_gc(p34, ConstPtr(ptr38), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+664: setfield_gc(p34, p35, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+668: setfield_gc(p34, p36, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+672: setfield_gc(p34, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+676: jump(ConstPtr(ptr39), p30, p32, p34, p16, descr=TargetToken(55799344))
+720: --end of the loop--
[3e4c1bed00055b8] jit-log-opt-bridge}
[3e4c1bed014548d] {jit-backend
[3e4c1bed01a5800] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57c40 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C4202000048FF0425C052FC028139700B01000F85000000004C8B79184D85FF0F84000000004C8B2D0AFFFFFF4D39EF0F850000000041813E101100000F85000000004D8B6E204C8B3D01FFFFFF4D39FD0F85000000004D8B6E104D8B661841817D00D00C01000F85000000004D8B55204983FA01720741813A509A00000F850000000041813C24101100000F85000000004D8B6C24204C8B0DE1FEFFFF4D39CD0F85000000004D8B4C24104D8B6C241841817D00C81800000F85000000004D8B65084983FC01720841813C24900F00000F8500000000418139D00C01000F85000000004D8B41184983F8017207418138509A00000F8500000000498B78104883FF017206813F509A00000F85000000004D8B41204983F8017207418138509A00000F8500000000498B71104885F60F8400000000498B5908488B1587FEFFFF4839D30F8500000000813B102001000F8500000000498B40104883F80172068138509A00000F85000000004C89A5300100004C8B67104983FC01720841813C24509A00000F85000000004989D6488B0C25F091F900488D9180000000483B14251092F9000F87C300000048891425F091F90048C70110110000488D512848C702D00C010048895A0848897A104C89421848897220488D722848C706A81600004C8B85300100004C8946084C894E104C896E184C8B2DF6FDFFFF4C896E204C8956284C89792048895110488971184C8941084C89B5300100004889C24C89E748898D380100004C89854001000049BB101BF5AC217F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BBC87AF5AC217F00004C895D204D8D9B2888FFFF41FFD3E998FDFFFF49BB287CF5AC217F00004C895D204D8D9BC88EFFFF41FFD3E928FFFFFFFF3597FCFFFF49BBD87AF5AC217F000041534D8D9B2885FFFF41FFE3FF3583FCFFFF49BBE87AF5AC217F000041534D8D9B1885FFFF41FFE3FF3577FCFFFF49BBF87AF5AC217F000041534D8D9B0885FFFF41FFE3FF3563FCFFFF49BB087BF5AC217F000041534D8D9BF884FFFF41FFE3FF3557FCFFFF49BB187BF5AC217F000041534D8D9BE884FFFF41FFE3FF3543FCFFFF49BB287BF5AC217F000041534D8D9BD884FFFF41FFE3FF352FFCFFFF49BB387BF5AC217F000041534D8D9BC884FFFF41FFE3FF351BFCFFFF49BB487BF5AC217F000041534D8D9BB884FFFF41FFE3FF3507FCFFFF49BB587BF5AC217F000041534D8D9BA884FFFF41FFE3FF35FBFBFFFF49BB687BF5AC217F000041534D8D9B9884FFFF41FFE3FF35E7FBFFFF49BB787BF5AC217F000041534D8D9B8884FFFF41FFE3FF35D3FBFFFF49BB887BF5AC217F000041534D8D9B7884FFFF41FFE3FF35BFFBFFFF49BB987BF5AC217F000041534D8D9B6884FFFF41FFE3FF35ABFBFFFF49BBA87BF5AC217F000041534D8D9B5884FFFF41FFE3FF3597FBFFFF49BBB87BF5AC217F000041534D8D9B4884FFFF41FFE3FF3583FBFFFF49BBC87BF5AC217F000041534D8D9B3884FFFF41FFE3FF356FFBFFFF49BBD87BF5AC217F000041534D8D9B2884FFFF41FFE3FF3563FBFFFF49BBE87BF5AC217F000041534D8D9B1884FFFF41FFE3FF354FFBFFFF49BBF87BF5AC217F000041534D8D9B0884FFFF41FFE3FF353BFBFFFF49BB087CF5AC217F000041534D8D9BF883FFFF41FFE3FF3527FBFFFF49BB187CF5AC217F000041534D8D9BE883FFFF41FFE3
[3e4c1bed01adea0] jit-backend-dump}
[3e4c1bed01b809f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57d14 +0  1F000000
[3e4c1bed01b937a] jit-backend-dump}
[3e4c1bed01bcdb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57f65 +0  1F000000
[3e4c1bed01bdb90] jit-backend-dump}
[3e4c1bed01c0cef] {jit-backend-addr
bridge out of Guard 0x35bd220 has address 0x7f21acf57d10 to 0x7f21acf57f60
       gc table: 0x7f21acf57c40
    jump target: 0x7f21acf57d10
         resops: 0x7f21acf57d1e
       failures: 0x7f21acf57f60
            end: 0x7f21acf581ef
[3e4c1bed01c2f2e] jit-backend-addr}
[3e4c1bed01c6205] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57d2e +0  71020000
[3e4c1bed01c6fad] jit-backend-dump}
[3e4c1bed01ca187] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57d3b +0  80020000
[3e4c1bed01caed9] jit-backend-dump}
[3e4c1bed01cdfa2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57d4b +0  8C020000
[3e4c1bed01cec96] jit-backend-dump}
[3e4c1bed01d1cae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57d58 +0  9B020000
[3e4c1bed01d29b7] jit-backend-dump}
[3e4c1bed01d5a43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57d6c +0  A3020000
[3e4c1bed01d6740] jit-backend-dump}
[3e4c1bed01d9899] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57d82 +0  C5020000
[3e4c1bed01da59f] jit-backend-dump}
[3e4c1bed01dd66b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57d99 +0  CA020000
[3e4c1bed01de3bb] jit-backend-dump}
[3e4c1bed01e13c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57da7 +0  D8020000
[3e4c1bed01e20d9] jit-backend-dump}
[3e4c1bed01e5070] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57dbc +0  DF020000
[3e4c1bed01e5d6a] jit-backend-dump}
[3e4c1bed01e8d0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57dd4 +0  E3020000
[3e4c1bed01e99fe] jit-backend-dump}
[3e4c1bed01ec971] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57dec +0  E7020000
[3e4c1bed01ed66b] jit-backend-dump}
[3e4c1bed01f05dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57df9 +0  F6020000
[3e4c1bed01f12d4] jit-backend-dump}
[3e4c1bed01f4237] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57e10 +0  FB020000
[3e4c1bed01f4f2e] jit-backend-dump}
[3e4c1bed01f7ed2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57e26 +0  01030000
[3e4c1bed01f8bbc] jit-backend-dump}
[3e4c1bed01fbb23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57e3d +0  06030000
[3e4c1bed01fc813] jit-backend-dump}
[3e4c1bed01ff786] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57e4a +0  15030000
[3e4c1bed0200477] jit-backend-dump}
[3e4c1bed02033d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57e5e +0  1D030000
[3e4c1bed02040d1] jit-backend-dump}
[3e4c1bed0207062] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57e6a +0  2D030000
[3e4c1bed0207d56] jit-backend-dump}
[3e4c1bed020ad02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57e80 +0  33030000
[3e4c1bed020ba02] jit-backend-dump}
[3e4c1bed020e9af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57e9f +0  30030000
[3e4c1bed020f6a3] jit-backend-dump}
[3e4c1bed02128ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf54b74 +0  98310000
[3e4c1bed021360c] jit-backend-dump}
[3e4c1bed021750a] jit-backend}
[3e4c1bed021aee2] {jit-log-opt-bridge
# bridge out of Guard 0x35bd220 with 68 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x35c5580>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+246: guard_nonnull(p3, descr=<Guard0x35d2608>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x35d2650>) [p0, p1]
debug_merge_point(0, 0, '#f')
+271: guard_class(p0, 16435920, descr=<Guard0x35d2698>) [p0, p1]
+284: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+295: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35d26e0>) [p0, p1]
+304: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+308: guard_not_invalidated(descr=<Guard0x35d2728>) [p0, p1]
+308: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+312: guard_class(p9, 16500368, descr=<Guard0x35d2770>) [p0, p1]
+326: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+330: guard_nonnull_class(p12, 16471056, descr=<Guard0x35c55e0>) [p0, p1]
+349: guard_class(p10, 16435920, descr=<Guard0x35d27b8>) [p0, p1]
+363: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+375: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35d2800>) [p0, p1]
+384: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+389: p18 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+394: guard_class(p18, 16437896, descr=<Guard0x35d2848>) [p0, p1]
+408: p20 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+412: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x35c5640>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr y) z x) from (shorterp (cdr x4848) (cdr y4850))')
+432: guard_class(p17, 16500368, descr=<Guard0x35d2890>) [p0, p1]
+445: p23 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+449: guard_nonnull_class(p23, 16471056, descr=<Guard0x35c56a0>) [p0, p1]
+468: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+472: guard_nonnull_class(p25, 16471056, descr=<Guard0x35c5700>) [p0, p1]
+490: p27 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+494: guard_nonnull_class(p27, 16471056, descr=<Guard0x35c5760>) [p0, p1]
+513: p29 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+517: guard_nonnull(p29, descr=<Guard0x35d28d8>) [p0, p1]
+526: p30 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+537: i32 = instance_ptr_eq(p30, ConstPtr(ptr31))
+540: guard_true(i32, descr=<Guard0x35d2920>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr y) z x)')
debug_merge_point(0, 0, '(shorterp y x)')
+546: guard_class(p30, 16505296, descr=<Guard0x35d2968>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+558: p34 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+562: guard_nonnull_class(p34, 16471056, descr=<Guard0x35c57c0>) [p0, p1]
+580: p36 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+591: guard_nonnull_class(p36, 16471056, descr=<Guard0x35c5820>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+611: p38 = new_with_vtable(descr=<SizeDescr 40>)
+658: p39 = new_with_vtable(descr=<SizeDescr 40>)
+669: setfield_gc(p39, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+673: setfield_gc(p39, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+677: setfield_gc(p39, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+681: setfield_gc(p39, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+685: p40 = new_with_vtable(descr=<SizeDescr 48>)
+696: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: setfield_gc(p40, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+711: setfield_gc(p40, p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+722: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+726: setfield_gc(p40, p12, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+730: setfield_gc(p38, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+734: setfield_gc(p38, p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+738: setfield_gc(p38, p40, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+742: setfield_gc(p38, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+746: jump(ConstPtr(ptr43), p34, p36, p38, p20, descr=TargetToken(55799344))
+800: --end of the loop--
[3e4c1bed0253892] jit-log-opt-bridge}
[3e4c1bed03766f4] {jit-backend
[3e4c1bed03cdab8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58360 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C2202000048FF04251053FC028139100A01000F85000000004C8B79104D85FF0F84000000004C8B350AFFFFFF4D39F70F85000000004C8B710841813ED00C01000F85000000004D8B7E204983FF01720741813F509A00000F8500000000813AA81600000F85000000004C8B72204C8B2DEAFEFFFF4D39EE0F85000000004C8B6A284C8B72104C8B621841813ED00C01000F85000000004D8B560841813A102001000F85000000004983FD01720841817D00509A00000F850000000041813C24A81600000F85000000004D8B4C24084983F9017207418139900F00000F85000000004D8B46204983F8017207418138509A00000F8500000000498B78104883FF017206813F509A00000F85000000004D8B46104983F8017207418138509A00000F8500000000498B76184885F60F84000000004C8B3585FEFFFF4D39F20F8500000000498B58104883FB017206813B509A00000F8500000000488B47104883F80172068138509A00000F8500000000488B0C25F091F900488D9188000000483B14251092F9000F87C100000048891425F091F90048C70110110000488D512848C702D00C01004C89520848897A104C89421848897220488D722848C706C81800004C894E084C8956104C8966184C8B250BFEFFFF4C8966204C896E284C897E304C8B3D00FEFFFF4C89792048895110488971184C8949084C89B5300100004889DA4889C748898D380100004C898D4001000049BB101BF5AC217F000041FFE30F1F84000000000048C7442408FFFFFF0049BBF881F5AC217F00004C895D204D8D9BF880FFFF41FFD3E9B8FDFFFF49BB4883F5AC217F00004C895D204D8D9BA887FFFF41FFD3E92AFFFFFFFF35B7FCFFFF49BB0882F5AC217F000041534D8D9BF87DFFFF41FFE3FF35A3FCFFFF49BB1882F5AC217F000041534D8D9BE87DFFFF41FFE3FF3597FCFFFF49BB2882F5AC217F000041534D8D9BD87DFFFF41FFE3FF3583FCFFFF49BB3882F5AC217F000041534D8D9BC87DFFFF41FFE3FF356FFCFFFF49BB4882F5AC217F000041534D8D9BB87DFFFF41FFE3FF355BFCFFFF49BB5882F5AC217F000041534D8D9BA87DFFFF41FFE3FF354FFCFFFF49BB6882F5AC217F000041534D8D9B987DFFFF41FFE3FF353BFCFFFF49BB7882F5AC217F000041534D8D9B887DFFFF41FFE3FF3527FCFFFF49BB8882F5AC217F000041534D8D9B787DFFFF41FFE3FF3513FCFFFF49BB9882F5AC217F000041534D8D9B687DFFFF41FFE3FF35FFFBFFFF49BBA882F5AC217F000041534D8D9B587DFFFF41FFE3FF35EBFBFFFF49BBB882F5AC217F000041534D8D9B487DFFFF41FFE3FF35D7FBFFFF49BBC882F5AC217F000041534D8D9B387DFFFF41FFE3FF35C3FBFFFF49BBD882F5AC217F000041534D8D9B287DFFFF41FFE3FF35AFFBFFFF49BBE882F5AC217F000041534D8D9B187DFFFF41FFE3FF359BFBFFFF49BBF882F5AC217F000041534D8D9B087DFFFF41FFE3FF3587FBFFFF49BB0883F5AC217F000041534D8D9BF87CFFFF41FFE3FF357BFBFFFF49BB1883F5AC217F000041534D8D9BE87CFFFF41FFE3FF3567FBFFFF49BB2883F5AC217F000041534D8D9BD87CFFFF41FFE3FF3553FBFFFF49BB3883F5AC217F000041534D8D9BC87CFFFF41FFE3
[3e4c1bed03d5806] jit-backend-dump}
[3e4c1bed03dfc63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58434 +0  1F000000
[3e4c1bed03e0fa6] jit-backend-dump}
[3e4c1bed03e4ada] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58665 +0  1F000000
[3e4c1bed03e5931] jit-backend-dump}
[3e4c1bed03e8b7f] {jit-backend-addr
bridge out of Guard 0x35bcec0 has address 0x7f21acf58430 to 0x7f21acf58660
       gc table: 0x7f21acf58360
    jump target: 0x7f21acf58430
         resops: 0x7f21acf5843e
       failures: 0x7f21acf58660
            end: 0x7f21acf588d3
[3e4c1bed03eaeac] jit-backend-addr}
[3e4c1bed03ee238] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5844e +0  51020000
[3e4c1bed03ef00e] jit-backend-dump}
[3e4c1bed03f21b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5845b +0  60020000
[3e4c1bed03f2ecf] jit-backend-dump}
[3e4c1bed03f5fad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5846b +0  6C020000
[3e4c1bed03f6c9b] jit-backend-dump}
[3e4c1bed03f9d1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5847c +0  77020000
[3e4c1bed03fa9f3] jit-backend-dump}
[3e4c1bed03fda4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58493 +0  7C020000
[3e4c1bed03fe74e] jit-backend-dump}
[3e4c1bed04017d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5849f +0  8C020000
[3e4c1bed04024a3] jit-backend-dump}
[3e4c1bed04054ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf584b3 +0  94020000
[3e4c1bed04061c4] jit-backend-dump}
[3e4c1bed0409219] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf584cc +0  97020000
[3e4c1bed0409ee5] jit-backend-dump}
[3e4c1bed040cead] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf584dd +0  A2020000
[3e4c1bed040db85] jit-backend-dump}
[3e4c1bed0410bd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf584f1 +0  AA020000
[3e4c1bed04118cb] jit-backend-dump}
[3e4c1bed04149b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf584ff +0  B8020000
[3e4c1bed0415688] jit-backend-dump}
[3e4c1bed0418647] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58517 +0  BC020000
[3e4c1bed0419325] jit-backend-dump}
[3e4c1bed041c624] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5852e +0  DD020000
[3e4c1bed041d30f] jit-backend-dump}
[3e4c1bed0420406] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58544 +0  E3020000
[3e4c1bed0421143] jit-backend-dump}
[3e4c1bed04241b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5855b +0  E8020000
[3e4c1bed0424ec9] jit-backend-dump}
[3e4c1bed0427f67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58568 +0  F7020000
[3e4c1bed0428c7a] jit-backend-dump}
[3e4c1bed042bce7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58578 +0  03030000
[3e4c1bed042c9f6] jit-backend-dump}
[3e4c1bed042f9c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5858e +0  09030000
[3e4c1bed04306bc] jit-backend-dump}
[3e4c1bed04336d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf585a4 +0  0F030000
[3e4c1bed04343e0] jit-backend-dump}
[3e4c1bed043767a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5448f +0  9D3F0000
[3e4c1bed0438340] jit-backend-dump}
[3e4c1bed043c498] jit-backend}
[3e4c1bed043fe33] {jit-log-opt-bridge
# bridge out of Guard 0x35bcec0 with 65 ops
[p0, p1]
+230: guard_class(p1, 16499664, descr=<Guard0x35c5880>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x35d29b0>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x35d29f8>) [p0, p1]
debug_merge_point(0, 0, 'z')
+271: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+275: guard_class(p6, 16500368, descr=<Guard0x35d2a40>) [p0, p1]
+288: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+292: guard_nonnull_class(p8, 16471056, descr=<Guard0x35c58e0>) [p0, p1]
+311: guard_class(p0, 16437352, descr=<Guard0x35d2a88>) [p0, p1]
+323: p11 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+334: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x35d2ad0>) [p0, p1]
+343: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+347: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+351: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+355: guard_class(p14, 16500368, descr=<Guard0x35d2b18>) [p0, p1]
+368: p17 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+372: guard_class(p17, 16505296, descr=<Guard0x35d2b60>) [p0, p1]
+385: guard_nonnull_class(p13, 16471056, descr=<Guard0x35c5940>) [p0, p1]
+405: guard_class(p15, 16437352, descr=<Guard0x35d2ba8>) [p0, p1]
+419: p21 = getfield_gc_r(p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+424: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x35c59a0>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr z) x y) from (shorterp (cdr x4848) (cdr y4850))')
+443: guard_not_invalidated(descr=<Guard0x35d2bf0>) [p0, p1]
+443: p23 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+447: guard_nonnull_class(p23, 16471056, descr=<Guard0x35c5a00>) [p0, p1]
+466: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+470: guard_nonnull_class(p25, 16471056, descr=<Guard0x35c5a60>) [p0, p1]
+488: p27 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+492: guard_nonnull_class(p27, 16471056, descr=<Guard0x35c5ac0>) [p0, p1]
+511: p29 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+515: guard_nonnull(p29, descr=<Guard0x35d2c38>) [p0, p1]
+531: i31 = instance_ptr_eq(p17, ConstPtr(ptr30))
+534: guard_true(i31, descr=<Guard0x35d2c80>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr z) x y)')
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+540: p32 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+544: guard_nonnull_class(p32, 16471056, descr=<Guard0x35c5b20>) [p0, p1]
+562: p34 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+566: guard_nonnull_class(p34, 16471056, descr=<Guard0x35c5b80>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+584: p36 = new_with_vtable(descr=<SizeDescr 40>)
+628: p37 = new_with_vtable(descr=<SizeDescr 40>)
+639: setfield_gc(p37, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+643: setfield_gc(p37, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+647: setfield_gc(p37, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+651: setfield_gc(p37, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+655: p38 = new_with_vtable(descr=<SizeDescr 56>)
+666: setfield_gc(p38, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+670: setfield_gc(p38, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+674: setfield_gc(p38, p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+685: setfield_gc(p38, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+689: setfield_gc(p38, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+693: setfield_gc(p38, p8, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+704: setfield_gc(p36, ConstPtr(ptr40), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+708: setfield_gc(p36, p37, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+712: setfield_gc(p36, p38, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+716: setfield_gc(p36, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+720: jump(ConstPtr(ptr41), p32, p34, p36, p21, descr=TargetToken(55799344))
+768: --end of the loop--
[3e4c1bed0471a98] jit-log-opt-bridge}
[3e4c1bed05fa1bf] {jit-backend
[3e4c1bed065dfec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58a60 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5202000048FF04256053FC028139700B01000F85000000004C8B79184D85FF0F84000000004C8B2DFAFEFFFF4D39EF0F850000000041813E101100000F85000000004D8B6E204C8B3DF1FEFFFF4D39FD0F85000000004D8B6E104D8B661841817D00D00C01000F85000000004D8B55204983FA01720741813A509A00000F850000000041813C24A81600000F85000000004D8B6C24204C8B0DD1FEFFFF4D39CD0F85000000004D8B4C24284D8B6C24104D8B44241841817D00D00C01000F85000000004D8B650841813C24102001000F85000000004983F9017207418139509A00000F8500000000418138A81600000F8500000000498B78084883FF017206813F900F00000F8500000000498B75204883FE017206813E509A00000F8500000000488B5E104883FB017206813B509A00000F8500000000498B75104883FE017206813E509A00000F8500000000498B55184885D20F84000000004C8B2D65FEFFFF4D39EC0F8500000000488B46104883F80172068138509A00000F85000000004889BD30010000488B7B104883FF017206813F509A00000F85000000004989D6488B0C25F091F900488D9188000000483B14251092F9000F87BF00000048891425F091F90048C70110110000488D512848C702D00C01004C89620848895A10488972184C8972204C8D722849C706C8180000488BB530010000498976084D8966104D8946184C8B05DAFDFFFF4D8946204D894E284D8956304C897920488951104C897118488971084C89AD300100004889C248898D380100004889B54001000049BB101BF5AC217F000041FFE3660F1F84000000000048C7442408FFFFFF0049BBE088F5AC217F00004C895D204D8D9B107AFFFF41FFD3E988FDFFFF49BB508AF5AC217F00004C895D204D8D9BA080FFFF41FFD3E92CFFFFFFFF3577FCFFFF49BBF088F5AC217F000041534D8D9B1077FFFF41FFE3FF3563FCFFFF49BB0089F5AC217F000041534D8D9B0077FFFF41FFE3FF3557FCFFFF49BB1089F5AC217F000041534D8D9BF076FFFF41FFE3FF3543FCFFFF49BB2089F5AC217F000041534D8D9BE076FFFF41FFE3FF3537FCFFFF49BB3089F5AC217F000041534D8D9BD076FFFF41FFE3FF3523FCFFFF49BB4089F5AC217F000041534D8D9BC076FFFF41FFE3FF350FFCFFFF49BB5089F5AC217F000041534D8D9BB076FFFF41FFE3FF35FBFBFFFF49BB6089F5AC217F000041534D8D9BA076FFFF41FFE3FF35E7FBFFFF49BB7089F5AC217F000041534D8D9B9076FFFF41FFE3FF35DBFBFFFF49BB8089F5AC217F000041534D8D9B8076FFFF41FFE3FF35C7FBFFFF49BB9089F5AC217F000041534D8D9B7076FFFF41FFE3FF35B3FBFFFF49BBA089F5AC217F000041534D8D9B6076FFFF41FFE3FF359FFBFFFF49BBB089F5AC217F000041534D8D9B5076FFFF41FFE3FF358BFBFFFF49BBC089F5AC217F000041534D8D9B4076FFFF41FFE3FF3577FBFFFF49BBD089F5AC217F000041534D8D9B3076FFFF41FFE3FF3563FBFFFF49BBE089F5AC217F000041534D8D9B2076FFFF41FFE3FF354FFBFFFF49BBF089F5AC217F000041534D8D9B1076FFFF41FFE3FF353BFBFFFF49BB008AF5AC217F000041534D8D9B0076FFFF41FFE3FF3527FBFFFF49BB108AF5AC217F000041534D8D9BF075FFFF41FFE3FF351BFBFFFF49BB208AF5AC217F000041534D8D9BE075FFFF41FFE3FF3507FBFFFF49BB308AF5AC217F000041534D8D9BD075FFFF41FFE3FF35F3FAFFFF49BB408AF5AC217F000041534D8D9BC075FFFF41FFE3
[3e4c1bed06678c2] jit-backend-dump}
[3e4c1bed0671927] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58b44 +0  1F000000
[3e4c1bed0672af2] jit-backend-dump}
[3e4c1bed06765ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58da5 +0  1F000000
[3e4c1bed06773b6] jit-backend-dump}
[3e4c1bed067a6f2] {jit-backend-addr
bridge out of Guard 0x35bd928 has address 0x7f21acf58b40 to 0x7f21acf58da0
       gc table: 0x7f21acf58a60
    jump target: 0x7f21acf58b40
         resops: 0x7f21acf58b4e
       failures: 0x7f21acf58da0
            end: 0x7f21acf5904b
[3e4c1bed067cb4e] jit-backend-addr}
[3e4c1bed068014a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58b5e +0  81020000
[3e4c1bed0681043] jit-backend-dump}
[3e4c1bed06842da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58b6b +0  90020000
[3e4c1bed0685033] jit-backend-dump}
[3e4c1bed06882e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58b7b +0  9C020000
[3e4c1bed0689041] jit-backend-dump}
[3e4c1bed068c3a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58b88 +0  AB020000
[3e4c1bed068d0dc] jit-backend-dump}
[3e4c1bed06903fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58b9c +0  B3020000
[3e4c1bed0691190] jit-backend-dump}
[3e4c1bed069469d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58bb2 +0  D5020000
[3e4c1bed069545a] jit-backend-dump}
[3e4c1bed06987dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58bc9 +0  DA020000
[3e4c1bed06995db] jit-backend-dump}
[3e4c1bed069c8d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58bd7 +0  E8020000
[3e4c1bed069d639] jit-backend-dump}
[3e4c1bed06a0997] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58bec +0  EF020000
[3e4c1bed06a1736] jit-backend-dump}
[3e4c1bed06a49b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58c09 +0  EE020000
[3e4c1bed06a56d9] jit-backend-dump}
[3e4c1bed06a88af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58c1b +0  F8020000
[3e4c1bed06a962a] jit-backend-dump}
[3e4c1bed06ac92c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58c2e +0  01030000
[3e4c1bed06ad666] jit-backend-dump}
[3e4c1bed06b07ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58c3b +0  10030000
[3e4c1bed06b15b7] jit-backend-dump}
[3e4c1bed06b4778] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58c51 +0  16030000
[3e4c1bed06b5507] jit-backend-dump}
[3e4c1bed06b8730] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58c67 +0  1C030000
[3e4c1bed06b94df] jit-backend-dump}
[3e4c1bed06bc766] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58c7d +0  22030000
[3e4c1bed06bd4c5] jit-backend-dump}
[3e4c1bed06c065b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58c93 +0  28030000
[3e4c1bed06c13e8] jit-backend-dump}
[3e4c1bed06c4620] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58ca0 +0  37030000
[3e4c1bed06c5376] jit-backend-dump}
[3e4c1bed06c8534] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58cb0 +0  43030000
[3e4c1bed06c9290] jit-backend-dump}
[3e4c1bed06cc48e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58cc6 +0  49030000
[3e4c1bed06cd1d4] jit-backend-dump}
[3e4c1bed06d0355] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58ce3 +0  48030000
[3e4c1bed06d10a4] jit-backend-dump}
[3e4c1bed06d4534] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf55a9b +0  A1300000
[3e4c1bed06d52a2] jit-backend-dump}
[3e4c1bed06d944a] jit-backend}
[3e4c1bed06dce56] {jit-log-opt-bridge
# bridge out of Guard 0x35bd928 with 71 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x35c5be0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+262: guard_nonnull(p3, descr=<Guard0x35d2cc8>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x35d2d10>) [p0, p1]
debug_merge_point(0, 0, '#f')
+287: guard_class(p0, 16435920, descr=<Guard0x35d2d58>) [p0, p1]
+300: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+311: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35d2da0>) [p0, p1]
+320: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+324: guard_not_invalidated(descr=<Guard0x35d2de8>) [p0, p1]
+324: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+328: guard_class(p9, 16500368, descr=<Guard0x35d2e30>) [p0, p1]
+342: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+346: guard_nonnull_class(p12, 16471056, descr=<Guard0x35c5c40>) [p0, p1]
+365: guard_class(p10, 16437352, descr=<Guard0x35d2e78>) [p0, p1]
+379: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+391: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35d2ec0>) [p0, p1]
+400: p17 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+405: p18 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+410: p19 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+415: guard_class(p18, 16500368, descr=<Guard0x35d2f08>) [p0, p1]
+429: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+433: guard_class(p21, 16505296, descr=<Guard0x35d2f50>) [p0, p1]
+447: guard_nonnull_class(p17, 16471056, descr=<Guard0x35c5ca0>) [p0, p1]
+466: guard_class(p19, 16437352, descr=<Guard0x35d2f98>) [p0, p1]
+479: p25 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+483: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x35c5d00>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr z) x y) from (shorterp (cdr x4848) (cdr y4850))')
+501: p27 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+505: guard_nonnull_class(p27, 16471056, descr=<Guard0x35c5d60>) [p0, p1]
+523: p29 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+527: guard_nonnull_class(p29, 16471056, descr=<Guard0x35c5dc0>) [p0, p1]
+545: p31 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+549: guard_nonnull_class(p31, 16471056, descr=<Guard0x35c5e20>) [p0, p1]
+567: p33 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+571: guard_nonnull(p33, descr=<Guard0x35d2fe0>) [p0, p1]
+587: i35 = instance_ptr_eq(p21, ConstPtr(ptr34))
+590: guard_true(i35, descr=<Guard0x35d3028>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr z) x y)')
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+596: p36 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+600: guard_nonnull_class(p36, 16471056, descr=<Guard0x35c5e80>) [p0, p1]
+618: p38 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+629: guard_nonnull_class(p38, 16471056, descr=<Guard0x35c5ee0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+647: p40 = new_with_vtable(descr=<SizeDescr 40>)
+694: p41 = new_with_vtable(descr=<SizeDescr 40>)
+705: setfield_gc(p41, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+709: setfield_gc(p41, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+713: setfield_gc(p41, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+717: setfield_gc(p41, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+721: p42 = new_with_vtable(descr=<SizeDescr 56>)
+732: setfield_gc(p42, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+743: setfield_gc(p42, p21, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+747: setfield_gc(p42, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+758: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+762: setfield_gc(p42, p17, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+766: setfield_gc(p42, p12, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+770: setfield_gc(p40, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+774: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+778: setfield_gc(p40, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+782: setfield_gc(p40, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+786: jump(ConstPtr(ptr45), p36, p38, p40, p25, descr=TargetToken(55799344))
+832: --end of the loop--
[3e4c1bed07163f6] jit-log-opt-bridge}
[3e4c1bed0850cdf] {jit-backend
[3e4c1bed08a600b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf591c0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C0202000048FF04251055FC028139700B01000F85000000004C8B79184D85FF0F84000000004C8B351AFFFFFF4D39F70F8400000000813B101100000F85000000004C8B7B084983FF01720741813F900F00000F85000000004C8B79104D85FF0F84000000004D39F70F85000000004C8B73204C8B3D05FFFFFF4D39FE0F85000000004C8B73104C8B6B1841817D00A81600000F85000000004D8B65084983FC01720841813C24900F00000F850000000041813ED00C01000F85000000004D8B56104983FA01720741813A509A00000F85000000004D8B4A104983F9017207418139509A00000F85000000004D8B56184983FA01720741813A509A00000F85000000004D8B46204D85C00F8400000000498B7E08488B35ACFEFFFF4839F70F8500000000813F102001000F8500000000498B52104883FA017206813A509A00000F8500000000498B41104883F80172068138509A00000F85000000004889D3488B0C25F091F900488D5178483B14251092F9000F87B400000048891425F091F90048C70110110000488D512848C702D00C010048897A084C894A104C8952184C8942204C8D422849C700101100004D8960084D8970104D8968184C8B2D2EFEFFFF4D8968204C8961084C897920488951104C8941184889B5300100004889DA4889C748898D380100004C89A54001000049BB101BF5AC217F000041FFE3662E0F1F84000000000048C7442408FFFFFF0049BB6090F5AC217F00004C895D204D8D9B9072FFFF41FFD3E9D8FDFFFF49BBB091F5AC217F00004C895D204D8D9B4079FFFF41FFD3E937FFFFFFFF35E7FCFFFF49BB7090F5AC217F000041534D8D9B906FFFFF41FFE3FF35D3FCFFFF49BB8090F5AC217F000041534D8D9B806FFFFF41FFE3FF35C7FCFFFF49BB9090F5AC217F000041534D8D9B706FFFFF41FFE3FF35B3FCFFFF49BBA090F5AC217F000041534D8D9B606FFFFF41FFE3FF359FFCFFFF49BBB090F5AC217F000041534D8D9B506FFFFF41FFE3FF358BFCFFFF49BBC090F5AC217F000041534D8D9B406FFFFF41FFE3FF3577FCFFFF49BBD090F5AC217F000041534D8D9B306FFFFF41FFE3FF3563FCFFFF49BBE090F5AC217F000041534D8D9B206FFFFF41FFE3FF3557FCFFFF49BBF090F5AC217F000041534D8D9B106FFFFF41FFE3FF3543FCFFFF49BB0091F5AC217F000041534D8D9B006FFFFF41FFE3FF352FFCFFFF49BB1091F5AC217F000041534D8D9BF06EFFFF41FFE3FF351BFCFFFF49BB2091F5AC217F000041534D8D9BE06EFFFF41FFE3FF3507FCFFFF49BB3091F5AC217F000041534D8D9BD06EFFFF41FFE3FF35F3FBFFFF49BB4091F5AC217F000041534D8D9BC06EFFFF41FFE3FF35DFFBFFFF49BB5091F5AC217F000041534D8D9BB06EFFFF41FFE3FF35CBFBFFFF49BB6091F5AC217F000041534D8D9BA06EFFFF41FFE3FF35BFFBFFFF49BB7091F5AC217F000041534D8D9B906EFFFF41FFE3FF35ABFBFFFF49BB8091F5AC217F000041534D8D9B806EFFFF41FFE3FF3597FBFFFF49BB9091F5AC217F000041534D8D9B706EFFFF41FFE3FF3583FBFFFF49BBA091F5AC217F000041534D8D9B606EFFFF41FFE3
[3e4c1bed08ae000] jit-backend-dump}
[3e4c1bed08b8117] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59284 +0  1F000000
[3e4c1bed08b94d7] jit-backend-dump}
[3e4c1bed08bd0bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59495 +0  1F000000
[3e4c1bed08bdf4e] jit-backend-dump}
[3e4c1bed08c10b3] {jit-backend-addr
bridge out of Guard 0x35bdbf8 has address 0x7f21acf59280 to 0x7f21acf59490
       gc table: 0x7f21acf591c0
    jump target: 0x7f21acf59280
         resops: 0x7f21acf5928e
       failures: 0x7f21acf59490
            end: 0x7f21acf59703
[3e4c1bed08c3265] jit-backend-addr}
[3e4c1bed08c64a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5929e +0  31020000
[3e4c1bed08c7283] jit-backend-dump}
[3e4c1bed08ca3b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf592ab +0  40020000
[3e4c1bed08cb04f] jit-backend-dump}
[3e4c1bed08ce0b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf592bb +0  4C020000
[3e4c1bed08cedad] jit-backend-dump}
[3e4c1bed08d1f31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf592c7 +0  5C020000
[3e4c1bed08d2c3a] jit-backend-dump}
[3e4c1bed08d5d5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf592de +0  61020000
[3e4c1bed08d6a68] jit-backend-dump}
[3e4c1bed08d9b47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf592eb +0  70020000
[3e4c1bed08da850] jit-backend-dump}
[3e4c1bed08dd86e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf592f4 +0  83020000
[3e4c1bed08de574] jit-backend-dump}
[3e4c1bed08e1615] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59308 +0  A7020000
[3e4c1bed08e2343] jit-backend-dump}
[3e4c1bed08e541f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5931e +0  AD020000
[3e4c1bed08e6122] jit-backend-dump}
[3e4c1bed08e918c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59336 +0  B1020000
[3e4c1bed08e9ec3] jit-backend-dump}
[3e4c1bed08ed0ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59343 +0  C0020000
[3e4c1bed08ede48] jit-backend-dump}
[3e4c1bed08f0f39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5935a +0  C5020000
[3e4c1bed08f1c05] jit-backend-dump}
[3e4c1bed08f4c88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59371 +0  CA020000
[3e4c1bed08f597b] jit-backend-dump}
[3e4c1bed08f89cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59388 +0  CF020000
[3e4c1bed08f96be] jit-backend-dump}
[3e4c1bed08fc719] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59395 +0  DE020000
[3e4c1bed08fd3fa] jit-backend-dump}
[3e4c1bed09003e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf593a9 +0  E6020000
[3e4c1bed09010cc] jit-backend-dump}
[3e4c1bed0904094] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf593b5 +0  F6020000
[3e4c1bed0904d7f] jit-backend-dump}
[3e4c1bed0907d62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf593cb +0  FC020000
[3e4c1bed0908a4a] jit-backend-dump}
[3e4c1bed090ba3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf593e1 +0  02030000
[3e4c1bed090c71b] jit-backend-dump}
[3e4c1bed090f954] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5617e +0  FE300000
[3e4c1bed091066c] jit-backend-dump}
[3e4c1bed09144ea] jit-backend}
[3e4c1bed0917ebe] {jit-log-opt-bridge
# bridge out of Guard 0x35bdbf8 with 68 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x35c5f40>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+230: guard_nonnull(p3, descr=<Guard0x35d3070>) [p0, p1]
+246: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+249: guard_false(i5, descr=<Guard0x35d30b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
+255: guard_class(p0, 16435920, descr=<Guard0x35d3100>) [p0, p1]
+267: p7 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+271: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x35c5fa0>) [p0, p1]
debug_merge_point(0, 0, '(null? x4848)')
+290: p9 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull(p9, descr=<Guard0x35d3148>) [p0, p1]
+303: i11 = instance_ptr_eq(p9, ConstPtr(ptr10))
+306: guard_true(i11, descr=<Guard0x35d3190>) [p0, p1]
+312: guard_not_invalidated(descr=<Guard0x35d31d8>) [p0, p1]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, 'or-part')
+312: p12 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+323: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x35d3220>) [p0, p1]
+332: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+336: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (null? x4848)')
debug_merge_point(0, 0, '(let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))')
+340: guard_class(p15, 16437352, descr=<Guard0x35d3268>) [p0, p1]
+354: p17 = getfield_gc_r(p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+358: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x35e0020>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr x) y z)')
+378: guard_class(p14, 16500368, descr=<Guard0x35d32b0>) [p0, p1]
+391: p20 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+395: guard_nonnull_class(p20, 16471056, descr=<Guard0x35e0080>) [p0, p1]
+414: p22 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+418: guard_nonnull_class(p22, 16471056, descr=<Guard0x35e00e0>) [p0, p1]
+437: p24 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+441: guard_nonnull_class(p24, 16471056, descr=<Guard0x35e0140>) [p0, p1]
+460: p26 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+464: guard_nonnull(p26, descr=<Guard0x35d32f8>) [p0, p1]
+473: p27 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+484: i29 = instance_ptr_eq(p27, ConstPtr(ptr28))
+487: guard_true(i29, descr=<Guard0x35d3340>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr x) y z)')
debug_merge_point(0, 0, '(shorterp y x)')
+493: guard_class(p27, 16505296, descr=<Guard0x35d3388>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+505: p31 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+509: guard_nonnull_class(p31, 16471056, descr=<Guard0x35e01a0>) [p0, p1]
+527: p33 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+531: guard_nonnull_class(p33, 16471056, descr=<Guard0x35e0200>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+549: p35 = new_with_vtable(descr=<SizeDescr 40>)
+593: p36 = new_with_vtable(descr=<SizeDescr 40>)
+604: setfield_gc(p36, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+608: setfield_gc(p36, p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+612: setfield_gc(p36, p24, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+616: setfield_gc(p36, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+620: p37 = new_with_vtable(descr=<SizeDescr 40>)
+631: setfield_gc(p37, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+635: setfield_gc(p37, p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p37, p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p35, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+658: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+662: setfield_gc(p35, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+666: setfield_gc(p35, p37, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+670: jump(ConstPtr(ptr40), p31, p33, p35, p17, descr=TargetToken(55799344))
+720: --end of the loop--
[3e4c1bed095a6d5] jit-log-opt-bridge}
[3e4c1bed0a63748] {jit-backend
[3e4c1bed0aa39a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf
[3e4c1bed0aaa8d7] jit-backend-dump}
[3e4c1bed0ab472f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf598b4 +0  1F000000
[3e4c1bed0ab5a22] jit-backend-dump}
[3e4c1bed0ab959a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59a55 +0  1F000000
[3e4c1bed0aba3a7] jit-backend-dump}
[3e4c1bed0abd6ce] {jit-backend-addr
bridge out of Guard 0x35bdf10 has address 0x7f21acf598b0 to 0x7f21acf59a50
       gc table: 0x7f21acf59820
    jump target: 0x7f21acf598b0
         resops: 0x7f21acf598be
       failures: 0x7f21acf59a50
            end: 0x7f21acf59c1b
[3e4c1bed0abfc1c] jit-backend-addr}
[3e4c1bed0ac3120] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf598ce +0  C1010000
[3e4c1bed0ac3f8c] jit-backend-dump}
[3e4c1bed0ac7128] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf598db +0  D0010000
[3e4c1bed0ac7dde] jit-backend-dump}
[3e4c1bed0acae02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf598eb +0  DC010000
[3e4c1bed0acbb02] jit-backend-dump}
[3e4c1bed0acebf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf598fc +0  E7010000
[3e4c1bed0acf90c] jit-backend-dump}
[3e4c1bed0ad290e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59913 +0  EC010000
[3e4c1bed0ad362d] jit-backend-dump}
[3e4c1bed0ad665a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5991f +0  FC010000
[3e4c1bed0ad7394] jit-backend-dump}
[3e4c1bed0ada3ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59933 +0  04020000
[3e4c1bed0adb0dd] jit-backend-dump}
[3e4c1bed0ade23f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59953 +0  1C020000
[3e4c1bed0adef57] jit-backend-dump}
[3e4c1bed0ae1ff3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59966 +0  25020000
[3e4c1bed0ae2cfc] jit-backend-dump}
[3e4c1bed0ae5d8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59974 +0  33020000
[3e4c1bed0ae6a94] jit-backend-dump}
[3e4c1bed0ae9b9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5998c +0  37020000
[3e4c1bed0aea8db] jit-backend-dump}
[3e4c1bed0aeda15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf599a3 +0  3C020000
[3e4c1bed0aee768] jit-backend-dump}
[3e4c1bed0af181b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf599ba +0  41020000
[3e4c1bed0af255c] jit-backend-dump}
[3e4c1bed0af594c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf567d4 +0  D8300000
[3e4c1bed0af667d] jit-backend-dump}
[3e4c1bed0afa52f] jit-backend}
[3e4c1bed0afded0] {jit-log-opt-bridge
# bridge out of Guard 0x35bdf10 with 47 ops
[p0, p1]
+166: guard_class(p1, 16499664, descr=<Guard0x35e0260>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+182: guard_nonnull(p3, descr=<Guard0x35d33d0>) [p0, p1]
+198: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+201: guard_true(i5, descr=<Guard0x35d3418>) [p0, p1]
debug_merge_point(0, 0, 'z')
+207: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+211: guard_class(p6, 16500368, descr=<Guard0x35d3460>) [p0, p1]
+224: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+228: guard_nonnull_class(p8, 16471056, descr=<Guard0x35e02c0>) [p0, p1]
+247: guard_class(p0, 16437896, descr=<Guard0x35d34a8>) [p0, p1]
+259: p11 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+270: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x35d34f0>) [p0, p1]
+279: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+279: guard_not_invalidated(descr=<Guard0x35d3538>) [p0, p1]
+279: p14 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+283: p15 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+287: p16 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(mas AppRand3 AppRand4 AppRand5) from (shorterp (cdr x4848) (cdr y4850))')
+291: guard_nonnull_class(p14, 16471056, descr=<Guard0x35e0320>) [p0, p1]
+311: guard_nonnull_class(p15, 16471056, descr=<Guard0x35e0380>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas AppRand3 AppRand4 AppRand5)')
+330: guard_class(p16, 16437896, descr=<Guard0x35d3580>) [p0, p1]
+344: p20 = getfield_gc_r(p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+349: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x35e03e0>) [p0, p1]
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+368: p22 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+372: guard_nonnull_class(p22, 16471056, descr=<Guard0x35e0440>) [p0, p1]
+391: p24 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+395: guard_nonnull_class(p24, 16471056, descr=<Guard0x35e04a0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+414: p26 = new_with_vtable(descr=<SizeDescr 40>)
+455: p27 = new_with_vtable(descr=<SizeDescr 40>)
+473: setfield_gc(p27, ConstPtr(ptr28), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+477: setfield_gc(p27, p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+481: setfield_gc(p27, p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+485: setfield_gc(p27, p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+496: setfield_gc(p26, ConstPtr(ptr29), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+500: setfield_gc(p26, p27, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+504: setfield_gc(p26, p16, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+508: setfield_gc(p26, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+512: jump(ConstPtr(ptr30), p22, p24, p26, p20, descr=TargetToken(55799344))
+560: --end of the loop--
[3e4c1bed0b23f8a] jit-log-opt-bridge}
[3e4c1bed0c360ce] {jit-backend
[3e4c1bed0c7aedb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59d
[3e4c1bed0c82042] jit-backend-dump}
[3e4c1bed0c8b848] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59df4 +0  1F000000
[3e4c1bed0c8cb3b] jit-backend-dump}
[3e4c1bed0c9064e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59fb5 +0  1F000000
[3e4c1bed0c91461] jit-backend-dump}
[3e4c1bed0c94690] {jit-backend-addr
bridge out of Guard 0x35d21d0 has address 0x7f21acf59df0 to 0x7f21acf59fb0
       gc table: 0x7f21acf59d50
    jump target: 0x7f21acf59df0
         resops: 0x7f21acf59dfe
       failures: 0x7f21acf59fb0
            end: 0x7f21acf5a1b3
[3e4c1bed0c96918] jit-backend-addr}
[3e4c1bed0c99d7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59e0e +0  E1010000
[3e4c1bed0c9ab8a] jit-backend-dump}
[3e4c1bed0c9dd82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59e1b +0  F0010000
[3e4c1bed0c9ead2] jit-backend-dump}
[3e4c1bed0ca1d1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59e2b +0  FC010000
[3e4c1bed0ca2a44] jit-backend-dump}
[3e4c1bed0ca5b60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59e38 +0  0B020000
[3e4c1bed0ca689d] jit-backend-dump}
[3e4c1bed0ca9a21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59e4c +0  13020000
[3e4c1bed0caa742] jit-backend-dump}
[3e4c1bed0cadd9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59e62 +0  35020000
[3e4c1bed0caeb48] jit-backend-dump}
[3e4c1bed0cb1e54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59e79 +0  3A020000
[3e4c1bed0cb2bc5] jit-backend-dump}
[3e4c1bed0cb5dc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59e87 +0  48020000
[3e4c1bed0cb6b65] jit-backend-dump}
[3e4c1bed0cb9d17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59e9c +0  4F020000
[3e4c1bed0cbaa48] jit-backend-dump}
[3e4c1bed0cbdbaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59ebe +0  49020000
[3e4c1bed0cbe955] jit-backend-dump}
[3e4c1bed0cc1b04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59ed2 +0  51020000
[3e4c1bed0cc28b8] jit-backend-dump}
[3e4c1bed0cc5abf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59edf +0  60020000
[3e4c1bed0cc688f] jit-backend-dump}
[3e4c1bed0cc9a44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59ef7 +0  64020000
[3e4c1bed0cca7ef] jit-backend-dump}
[3e4c1bed0ccd8d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59f0d +0  6A020000
[3e4c1bed0cce60b] jit-backend-dump}
[3e4c1bed0cd17f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59f23 +0  70020000
[3e4c1bed0cd2562] jit-backend-dump}
[3e4c1bed0cd58b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf56d3f +0  AD300000
[3e4c1bed0cd6606] jit-backend-dump}
[3e4c1bed0cda554] jit-backend}
[3e4c1bed0cddfa9] {jit-log-opt-bridge
# bridge out of Guard 0x35d21d0 with 53 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x35e0500>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+198: guard_nonnull(p3, descr=<Guard0x35d35c8>) [p0, p1]
+214: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+217: guard_true(i5, descr=<Guard0x35d3610>) [p0, p1]
debug_merge_point(0, 0, '#f')
+223: guard_class(p0, 16435920, descr=<Guard0x35d3658>) [p0, p1]
+236: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+247: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35d36a0>) [p0, p1]
+256: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+260: guard_not_invalidated(descr=<Guard0x35d36e8>) [p0, p1]
+260: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+264: guard_class(p9, 16500368, descr=<Guard0x35d3730>) [p0, p1]
+278: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+282: guard_nonnull_class(p12, 16471056, descr=<Guard0x35e0560>) [p0, p1]
+301: guard_class(p10, 16437896, descr=<Guard0x35d3778>) [p0, p1]
+315: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+327: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35d37c0>) [p0, p1]
+336: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+336: p18 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+341: p19 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+346: p20 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(mas AppRand3 AppRand4 AppRand5) from (shorterp (cdr x4848) (cdr y4850))')
+351: guard_nonnull_class(p18, 16471056, descr=<Guard0x35e05c0>) [p0, p1]
+370: guard_nonnull_class(p19, 16471056, descr=<Guard0x35e0620>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas AppRand3 AppRand4 AppRand5)')
+390: guard_class(p20, 16437896, descr=<Guard0x35d3808>) [p0, p1]
+403: p24 = getfield_gc_r(p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+407: guard_nonnull_class(p24, ConstClass(ForwardLink), descr=<Guard0x35e0680>) [p0, p1]
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+427: p26 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+431: guard_nonnull_class(p26, 16471056, descr=<Guard0x35e06e0>) [p0, p1]
+449: p28 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+453: guard_nonnull_class(p28, 16471056, descr=<Guard0x35e0740>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+471: p30 = new_with_vtable(descr=<SizeDescr 40>)
+512: p31 = new_with_vtable(descr=<SizeDescr 40>)
+530: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+534: setfield_gc(p31, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+538: setfield_gc(p31, p19, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+542: setfield_gc(p31, p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+546: setfield_gc(p30, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+550: setfield_gc(p30, p31, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+554: setfield_gc(p30, p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+558: setfield_gc(p30, p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+562: jump(ConstPtr(ptr34), p26, p28, p30, p24, descr=TargetToken(55799344))
+608: --end of the loop--
[3e4c1bed0d06f13] jit-log-opt-bridge}
[3e4c1bed44c10c7] {jit-backend
[3e4c1bed44f1fa8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a
[3e4c1bed44f81e3] jit-backend-dump}
[3e4c1bed4504270] {jit-backend-addr
Loop 28 ((let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr x) y z)) has address 0x7f21acf5a35d to 0x7f21acf5a480 (bootstrap 0x7f21acf5a2d0)
       gc table: 0x7f21acf5a270
       function: 0x7f21acf5a2d0
         resops: 0x7f21acf5a35d
       failures: 0x7f21acf5a480
            end: 0x7f21acf5a5ab
[3e4c1bed45071eb] jit-backend-addr}
[3e4c1bed450b693] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a374 +0  37010000
[3e4c1bed450c92e] jit-backend-dump}
[3e4c1bed4513480] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a38a +0  3D010000
[3e4c1bed4514452] jit-backend-dump}
[3e4c1bed4517a20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a39d +0  62010000
[3e4c1bed45187ad] jit-backend-dump}
[3e4c1bed451b943] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a3b3 +0  68010000
[3e4c1bed451c6ae] jit-backend-dump}
[3e4c1bed451f894] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a3c9 +0  6E010000
[3e4c1bed45205ec] jit-backend-dump}
[3e4c1bed4523697] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a3d9 +0  7A010000
[3e4c1bed45243f3] jit-backend-dump}
[3e4c1bed45274b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a3ef +0  80010000
[3e4c1bed45281da] jit-backend-dump}
[3e4c1bed452b20b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a405 +0  86010000
[3e4c1bed452bf14] jit-backend-dump}
[3e4c1bed452fa1a] jit-backend}
[3e4c1bed453376f] {jit-log-opt-loop
# Loop 28 ((let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr x) y z)) : entry bridge with 29 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr x) y z)')
+245: guard_class(p1, 16435920, descr=<Guard0x35e07a0>) [p0, p1]
+264: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+268: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x35e0800>) [p0, p1]
debug_merge_point(0, 0, '(shorterp y x)')
+286: guard_not_invalidated(descr=<Guard0x35d3850>) [p0, p1]
+286: guard_class(p0, 16500368, descr=<Guard0x35d3898>) [p0, p1]
+305: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+309: guard_nonnull_class(p6, 16471056, descr=<Guard0x35e0860>) [p0, p1]
+327: p8 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+331: guard_nonnull_class(p8, 16471056, descr=<Guard0x35e08c0>) [p0, p1]
+349: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+353: guard_class(p10, 16505296, descr=<Guard0x35d38e0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+365: p12 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+369: guard_nonnull_class(p12, 16471056, descr=<Guard0x35e0920>) [p0, p1]
+387: p14 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+391: guard_nonnull_class(p14, 16471056, descr=<Guard0x35e0980>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+409: p16 = new_with_vtable(descr=<SizeDescr 40>)
+456: setfield_gc(p16, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+460: setfield_gc(p16, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+464: setfield_gc(p16, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+475: setfield_gc(p16, ConstPtr(ptr17), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+486: jump(ConstPtr(ptr18), p12, p14, p16, p3, descr=TargetToken(55799344))
+528: --end of the loop--
[3e4c1bed4550230] jit-log-opt-loop}
[3e4c1bed588fccf] {jit-backend
[3e4c1bed58e4ee5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a6d
[3e4c1bed58ec0a5] jit-backend-dump}
[3e4c1bed58f7211] {jit-backend-addr
Loop 29 ((if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (null? x4848)) has address 0x7f21acf5a7fd to 0x7f21acf5a9c0 (bootstrap 0x7f21acf5a770)
       gc table: 0x7f21acf5a6d0
       function: 0x7f21acf5a770
         resops: 0x7f21acf5a7fd
       failures: 0x7f21acf5a9c0
            end: 0x7f21acf5ab93
[3e4c1bed58f9f97] jit-backend-addr}
[3e4c1bed58fe4a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a814 +0  D7010000
[3e4c1bed58ff767] jit-backend-dump}
[3e4c1bed5902c1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a821 +0  E6010000
[3e4c1bed5903b17] jit-backend-dump}
[3e4c1bed5906db7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a831 +0  F2010000
[3e4c1bed5907bca] jit-backend-dump}
[3e4c1bed590adb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a848 +0  F7010000
[3e4c1bed590bb71] jit-backend-dump}
[3e4c1bed590ec3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a85e +0  FD010000
[3e4c1bed590f9e8] jit-backend-dump}
[3e4c1bed5912d15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a86a +0  29020000
[3e4c1bed5913aa8] jit-backend-dump}
[3e4c1bed5916ce6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a880 +0  2F020000
[3e4c1bed5917a3f] jit-backend-dump}
[3e4c1bed591aa0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a896 +0  35020000
[3e4c1bed591b75a] jit-backend-dump}
[3e4c1bed591e762] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a8ac +0  3B020000
[3e4c1bed591f4b5] jit-backend-dump}
[3e4c1bed592254d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a8b9 +0  4A020000
[3e4c1bed59232bb] jit-backend-dump}
[3e4c1bed5926427] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a8cd +0  52020000
[3e4c1bed592719e] jit-backend-dump}
[3e4c1bed592a283] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a8da +0  61020000
[3e4c1bed592affd] jit-backend-dump}
[3e4c1bed592e0b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a8f2 +0  65020000
[3e4c1bed592edf1] jit-backend-dump}
[3e4c1bed5931da4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5a90a +0  69020000
[3e4c1bed5932ad8] jit-backend-dump}
[3e4c1bed593655e] jit-backend}
[3e4c1bed593a321] {jit-log-opt-loop
# Loop 29 ((if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (null? x4848)) : entry bridge with 54 ops
[p0, p1]
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (null? x4848)')
+309: guard_class(p0, 16499664, descr=<Guard0x35e09e0>) [p1, p0]
+328: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+332: guard_nonnull(p3, descr=<Guard0x35d3928>) [p1, p0]
+348: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+351: guard_false(i5, descr=<Guard0x35d3970>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))')
+357: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+361: guard_class(p1, 16435208, descr=<Guard0x35d39b8>) [p1, p0]
+380: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+384: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x35e0a40>) [p1, p0]
debug_merge_point(0, 0, '(mas (cdr x) y z)')
+402: guard_not_invalidated(descr=<Guard0x35d3a00>) [p1, p0]
+402: guard_class(p6, 16500368, descr=<Guard0x35d3a48>) [p1, p0]
+414: p11 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+418: guard_nonnull_class(p11, 16471056, descr=<Guard0x35e0aa0>) [p1, p0]
+436: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+440: guard_nonnull_class(p13, 16471056, descr=<Guard0x35e0b00>) [p1, p0]
+458: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+462: guard_nonnull_class(p15, 16471056, descr=<Guard0x35e0b60>) [p1, p0]
+480: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+484: guard_nonnull(p17, descr=<Guard0x35d3a90>) [p1, p0]
+493: p18 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+504: i20 = instance_ptr_eq(p18, ConstPtr(ptr19))
+507: guard_true(i20, descr=<Guard0x35d3ad8>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr x) y z)')
debug_merge_point(0, 0, '(shorterp y x)')
+513: guard_class(p18, 16505296, descr=<Guard0x35d3b20>) [p1, p0]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+526: p22 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+530: guard_nonnull_class(p22, 16471056, descr=<Guard0x35e0bc0>) [p1, p0]
+550: p24 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+554: guard_nonnull_class(p24, 16471056, descr=<Guard0x35e0c20>) [p1, p0]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+574: p26 = new_with_vtable(descr=<SizeDescr 40>)
+618: p27 = new_with_vtable(descr=<SizeDescr 40>)
+629: setfield_gc(p27, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+633: setfield_gc(p27, p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+637: setfield_gc(p27, p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+641: setfield_gc(p27, p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+645: p28 = new_with_vtable(descr=<SizeDescr 40>)
+656: setfield_gc(p28, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+660: setfield_gc(p28, p6, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+664: setfield_gc(p28, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+675: setfield_gc(p28, ConstPtr(ptr29), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+679: setfield_gc(p26, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+683: setfield_gc(p26, p27, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+687: setfield_gc(p26, p28, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+698: setfield_gc(p26, ConstPtr(ptr30), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+702: jump(ConstPtr(ptr31), p22, p24, p26, p8, descr=TargetToken(55799344))
+752: --end of the loop--
[3e4c1bed5969ada] jit-log-opt-loop}
[3e4c1bed6c9ac53] {jit-backend
[3e4c1bed6ce0acd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ac
[3e4c1bed6ce706c] jit-backend-dump}
[3e4c1bed6cf2036] {jit-backend-addr
Loop 30 ((mas (cdr z) x y) from (shorterp (cdr x4848) (cdr y4850))) has address 0x7f21acf5ad8d to 0x7f21acf5af00 (bootstrap 0x7f21acf5ad00)
       gc table: 0x7f21acf5ac90
       function: 0x7f21acf5ad00
         resops: 0x7f21acf5ad8d
       failures: 0x7f21acf5af00
            end: 0x7f21acf5b07f
[3e4c1bed6cf4c2b] jit-backend-addr}
[3e4c1bed6cf9022] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ada4 +0  A3010000
[3e4c1bed6cfa2bc] jit-backend-dump}
[3e4c1bed6cfd786] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5adba +0  A9010000
[3e4c1bed6cfe5af] jit-backend-dump}
[3e4c1bed6d018ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5add0 +0  AF010000
[3e4c1bed6d02650] jit-backend-dump}
[3e4c1bed6d05784] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ade6 +0  B5010000
[3e4c1bed6d06497] jit-backend-dump}
[3e4c1bed6d09566] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5adf3 +0  C4010000
[3e4c1bed6d0a26f] jit-backend-dump}
[3e4c1bed6d0d34b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ae07 +0  CC010000
[3e4c1bed6d0e05d] jit-backend-dump}
[3e4c1bed6d111a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ae1b +0  D4010000
[3e4c1bed6d11ead] jit-backend-dump}
[3e4c1bed6d14fa7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ae32 +0  D9010000
[3e4c1bed6d15d09] jit-backend-dump}
[3e4c1bed6d18de1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ae3e +0  E9010000
[3e4c1bed6d19b0c] jit-backend-dump}
[3e4c1bed6d1cd13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ae55 +0  EE010000
[3e4c1bed6d1da35] jit-backend-dump}
[3e4c1bed6d20b48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ae6d +0  F2010000
[3e4c1bed6d21854] jit-backend-dump}
[3e4c1bed6d25351] jit-backend}
[3e4c1bed6d29130] {jit-log-opt-loop
# Loop 30 ((mas (cdr z) x y) from (shorterp (cdr x4848) (cdr y4850))) : entry bridge with 41 ops
[p0, p1]
debug_merge_point(0, 0, '(mas (cdr z) x y) from (shorterp (cdr x4848) (cdr y4850))')
+261: guard_not_invalidated(descr=<Guard0x35e0c80>) [p1, p0]
+261: guard_class(p0, 16500368, descr=<Guard0x35d3b68>) [p1, p0]
+280: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+284: guard_nonnull_class(p3, 16471056, descr=<Guard0x35e0ce0>) [p1, p0]
+302: p5 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+306: guard_nonnull_class(p5, 16471056, descr=<Guard0x35e0d40>) [p1, p0]
+324: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+328: guard_nonnull_class(p7, 16471056, descr=<Guard0x35e0da0>) [p1, p0]
+346: p9 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+350: guard_nonnull(p9, descr=<Guard0x35d3bb0>) [p1, p0]
+359: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+370: i12 = instance_ptr_eq(p10, ConstPtr(ptr11))
+373: guard_true(i12, descr=<Guard0x35d3bf8>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr z) x y)')
+379: guard_class(p1, 16437896, descr=<Guard0x35d3c40>) [p1, p0]
+399: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+403: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x35e0e00>) [p1, p0]
debug_merge_point(0, 0, '(shorterp y x)')
+422: guard_class(p10, 16505296, descr=<Guard0x35d3c88>) [p1, p0]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+434: p17 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+438: guard_nonnull_class(p17, 16471056, descr=<Guard0x35e0e60>) [p1, p0]
+457: p19 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+461: guard_nonnull_class(p19, 16471056, descr=<Guard0x35e0ec0>) [p1, p0]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+481: p21 = new_with_vtable(descr=<SizeDescr 40>)
+525: p22 = new_with_vtable(descr=<SizeDescr 40>)
+536: setfield_gc(p22, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+540: setfield_gc(p22, p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+544: setfield_gc(p22, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+548: setfield_gc(p22, p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+552: setfield_gc(p21, p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+556: setfield_gc(p21, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+560: setfield_gc(p21, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+571: setfield_gc(p21, ConstPtr(ptr23), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+575: jump(ConstPtr(ptr24), p17, p19, p21, p14, descr=TargetToken(55799344))
+624: --end of the loop--
[3e4c1bed6d4d944] jit-log-opt-loop}
[3e4c1bedb73aa6b] {jit-backend
[3e4c1bedb79e8ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b200 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C4202000048FF042590C961028139700B01000F85000000004C8B79184D85FF0F84000000004C8B2D0AFFFFFF4D39EF0F850000000041813E101100000F85000000004D8B6E204C8B3D01FFFFFF4D39FD0F85000000004D8B6E104D8B661841817D00D00C01000F85000000004D8B55204983FA01720741813A509A00000F850000000041813C24101100000F85000000004D8B6C24204C8B0DE1FEFFFF4D39CD0F85000000004D8B4C24104D8B6C241841817D00480E00000F85000000004D8B65084983FC01720841813C24900F00000F8500000000418139D00C01000F85000000004D8B41184983F8017207418138509A00000F8500000000498B78104883FF017206813F509A00000F85000000004D8B41204983F8017207418138509A00000F8500000000498B71104885F60F8400000000498B5908488B1587FEFFFF4839D30F8500000000813B102001000F8500000000498B40104883F80172068138509A00000F85000000004C89A5300100004C8B67104983FC01720841813C24509A00000F85000000004989D6488B0C25F091F900488D9180000000483B14251092F9000F87C300000048891425F091F90048C70110110000488D512848C702D00C010048895A0848897A104C89421848897220488D722848C706A81600004C8B85300100004C8946084C894E104C896E184C8B2DF6FDFFFF4C896E204C8956284C89792048895110488971184C8941084C89B5300100004889C24C89E748898D380100004C89854001000049BB101BF5AC217F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BB88B0F5AC217F00004C895D204D8D9B6852FFFF41FFD3E998FDFFFF49BBE8B1F5AC217F00004C895D204D8D9B0859FFFF41FFD3E928FFFFFFFF3597FCFFFF49BB98B0F5AC217F000041534D8D9B684FFFFF41FFE3FF3583FCFFFF49BBA8B0F5AC217F000041534D8D9B584FFFFF41FFE3FF3577FCFFFF49BBB8B0F5AC217F000041534D8D9B484FFFFF41FFE3FF3563FCFFFF49BBC8B0F5AC217F000041534D8D9B384FFFFF41FFE3FF3557FCFFFF49BBD8B0F5AC217F000041534D8D9B284FFFFF41FFE3FF3543FCFFFF49BBE8B0F5AC217F000041534D8D9B184FFFFF41FFE3FF352FFCFFFF49BBF8B0F5AC217F000041534D8D9B084FFFFF41FFE3FF351BFCFFFF49BB08B1F5AC217F000041534D8D9BF84EFFFF41FFE3FF3507FCFFFF49BB18B1F5AC217F000041534D8D9BE84EFFFF41FFE3FF35FBFBFFFF49BB28B1F5AC217F000041534D8D9BD84EFFFF41FFE3FF35E7FBFFFF49BB38B1F5AC217F000041534D8D9BC84EFFFF41FFE3FF35D3FBFFFF49BB48B1F5AC217F000041534D8D9BB84EFFFF41FFE3FF35BFFBFFFF49BB58B1F5AC217F000041534D8D9BA84EFFFF41FFE3FF35ABFBFFFF49BB68B1F5AC217F000041534D8D9B984EFFFF41FFE3FF3597FBFFFF49BB78B1F5AC217F000041534D8D9B884EFFFF41FFE3FF3583FBFFFF49BB88B1F5AC217F000041534D8D9B784EFFFF41FFE3FF356FFBFFFF49BB98B1F5AC217F000041534D8D9B684EFFFF41FFE3FF3563FBFFFF49BBA8B1F5AC217F000041534D8D9B584EFFFF41FFE3FF354FFBFFFF49BBB8B1F5AC217F000041534D8D9B484EFFFF41FFE3FF353BFBFFFF49BBC8B1F5AC217F000041534D8D9B384EFFFF41FFE3FF3527FBFFFF49BBD8B1F5AC217F000041534D8D9B284EFFFF41FFE3
[3e4c1bedb7a86be] jit-backend-dump}
[3e4c1bedb7b3f00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b2d4 +0  1F000000
[3e4c1bedb7b54bc] jit-backend-dump}
[3e4c1bedb7b951a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b525 +0  1F000000
[3e4c1bedb7ba3e8] jit-backend-dump}
[3e4c1bedb7bd67c] {jit-backend-addr
bridge out of Guard 0x35d2848 has address 0x7f21acf5b2d0 to 0x7f21acf5b520
       gc table: 0x7f21acf5b200
    jump target: 0x7f21acf5b2d0
         resops: 0x7f21acf5b2de
       failures: 0x7f21acf5b520
            end: 0x7f21acf5b7af
[3e4c1bedb7bfbcd] jit-backend-addr}
[3e4c1bedb7c3094] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b2ee +0  71020000
[3e4c1bedb7c3f0f] jit-backend-dump}
[3e4c1bedb7c70fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b2fb +0  80020000
[3e4c1bedb7c7e87] jit-backend-dump}
[3e4c1bedb7cafb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b30b +0  8C020000
[3e4c1bedb7cbd4b] jit-backend-dump}
[3e4c1bedb7cf010] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b318 +0  9B020000
[3e4c1bedb7cfd6f] jit-backend-dump}
[3e4c1bedb7d2eda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b32c +0  A3020000
[3e4c1bedb7d3c36] jit-backend-dump}
[3e4c1bedb7d6ee9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b342 +0  C5020000
[3e4c1bedb7d7c04] jit-backend-dump}
[3e4c1bedb7dad82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b359 +0  CA020000
[3e4c1bedb7dbadb] jit-backend-dump}
[3e4c1bedb7debe7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b367 +0  D8020000
[3e4c1bedb7df8db] jit-backend-dump}
[3e4c1bedb7e293f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b37c +0  DF020000
[3e4c1bedb7e361a] jit-backend-dump}
[3e4c1bedb7e6654] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b394 +0  E3020000
[3e4c1bedb7e732f] jit-backend-dump}
[3e4c1bedb7ea375] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b3ac +0  E7020000
[3e4c1bedb7eb053] jit-backend-dump}
[3e4c1bedb7ee03d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b3b9 +0  F6020000
[3e4c1bedb7eed1b] jit-backend-dump}
[3e4c1bedb7f1d24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b3d0 +0  FB020000
[3e4c1bedb7f2a05] jit-backend-dump}
[3e4c1bedb7f5a45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b3e6 +0  01030000
[3e4c1bedb7f671a] jit-backend-dump}
[3e4c1bedb7f9735] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b3fd +0  06030000
[3e4c1bedb7fa40d] jit-backend-dump}
[3e4c1bedb7fd403] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b40a +0  15030000
[3e4c1bedb7fe0d5] jit-backend-dump}
[3e4c1bedb801133] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b41e +0  1D030000
[3e4c1bedb801e0c] jit-backend-dump}
[3e4c1bedb804e70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b42a +0  2D030000
[3e4c1bedb805b4b] jit-backend-dump}
[3e4c1bedb808b97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b440 +0  33030000
[3e4c1bedb809872] jit-backend-dump}
[3e4c1bedb80c890] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b45f +0  30030000
[3e4c1bedb80d56b] jit-backend-dump}
[3e4c1bedb810824] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf57dd4 +0  F8340000
[3e4c1bedb811521] jit-backend-dump}
[3e4c1bedb815404] jit-backend}
[3e4c1bedb818f10] {jit-log-opt-bridge
# bridge out of Guard 0x35d2848 with 68 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x35e0f20>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+246: guard_nonnull(p3, descr=<Guard0x35d3cd0>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x35d3d18>) [p0, p1]
debug_merge_point(0, 0, '#f')
+271: guard_class(p0, 16435920, descr=<Guard0x35d3d60>) [p0, p1]
+284: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+295: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35d3da8>) [p0, p1]
+304: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+308: guard_not_invalidated(descr=<Guard0x35d3df0>) [p0, p1]
+308: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+312: guard_class(p9, 16500368, descr=<Guard0x35d3e38>) [p0, p1]
+326: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+330: guard_nonnull_class(p12, 16471056, descr=<Guard0x35e0f80>) [p0, p1]
+349: guard_class(p10, 16435920, descr=<Guard0x35d3e80>) [p0, p1]
+363: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+375: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35d3ec8>) [p0, p1]
+384: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+389: p18 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+394: guard_class(p18, 16435208, descr=<Guard0x35d3f10>) [p0, p1]
+408: p20 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+412: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x35e0fe0>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr y) z x) from (shorterp (cdr x4848) (cdr y4850))')
+432: guard_class(p17, 16500368, descr=<Guard0x35d3f58>) [p0, p1]
+445: p23 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+449: guard_nonnull_class(p23, 16471056, descr=<Guard0x35e1040>) [p0, p1]
+468: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+472: guard_nonnull_class(p25, 16471056, descr=<Guard0x35e10a0>) [p0, p1]
+490: p27 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+494: guard_nonnull_class(p27, 16471056, descr=<Guard0x35e1100>) [p0, p1]
+513: p29 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+517: guard_nonnull(p29, descr=<Guard0x35d3fa0>) [p0, p1]
+526: p30 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+537: i32 = instance_ptr_eq(p30, ConstPtr(ptr31))
+540: guard_true(i32, descr=<Guard0x35f6020>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr y) z x)')
debug_merge_point(0, 0, '(shorterp y x)')
+546: guard_class(p30, 16505296, descr=<Guard0x35f6068>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+558: p34 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+562: guard_nonnull_class(p34, 16471056, descr=<Guard0x35e1160>) [p0, p1]
+580: p36 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+591: guard_nonnull_class(p36, 16471056, descr=<Guard0x35e11c0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+611: p38 = new_with_vtable(descr=<SizeDescr 40>)
+658: p39 = new_with_vtable(descr=<SizeDescr 40>)
+669: setfield_gc(p39, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+673: setfield_gc(p39, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+677: setfield_gc(p39, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+681: setfield_gc(p39, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+685: p40 = new_with_vtable(descr=<SizeDescr 48>)
+696: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: setfield_gc(p40, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+711: setfield_gc(p40, p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+722: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+726: setfield_gc(p40, p12, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+730: setfield_gc(p38, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+734: setfield_gc(p38, p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+738: setfield_gc(p38, p40, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+742: setfield_gc(p38, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+746: jump(ConstPtr(ptr43), p34, p36, p38, p20, descr=TargetToken(55799344))
+800: --end of the loop--
[3e4c1bedb855141] jit-log-opt-bridge}
[3e4c1bedb971c0c] {jit-backend
[3e4c1bedb9d579b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5b940 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5202000048FF042560C661028139700B01000F85000000004C8B79184D85FF0F84000000004C8B2DFAFEFFFF4D39EF0F850000000041813E101100000F85000000004D8B6E204C8B3DF1FEFFFF4D39FD0F85000000004D8B6E104D8B661841817D00D00C01000F85000000004D8B55204983FA01720741813A509A00000F850000000041813C24A81600000F85000000004D8B6C24204C8B0DD1FEFFFF4D39CD0F85000000004D8B4C24284D8B6C24104D8B44241841817D00D00C01000F85000000004D8B650841813C24102001000F85000000004983F9017207418139509A00000F8500000000418138480E00000F8500000000498B78084883FF017206813F900F00000F8500000000498B75204883FE017206813E509A00000F8500000000488B5E104883FB017206813B509A00000F8500000000498B75104883FE017206813E509A00000F8500000000498B55184885D20F84000000004C8B2D65FEFFFF4D39EC0F8500000000488B46104883F80172068138509A00000F85000000004889BD30010000488B7B104883FF017206813F509A00000F85000000004989D6488B0C25F091F900488D9188000000483B14251092F9000F87BF00000048891425F091F90048C70110110000488D512848C702D00C01004C89620848895A10488972184C8972204C8D722849C706C8180000488BB530010000498976084D8966104D8946184C8B05DAFDFFFF4D8946204D894E284D8956304C897920488951104C897118488971084C89AD300100004889C248898D380100004889B54001000049BB101BF5AC217F000041FFE3660F1F84000000000048C7442408FFFFFF0049BBB8B7F5AC217F00004C895D204D8D9B384BFFFF41FFD3E988FDFFFF49BB28B9F5AC217F00004C895D204D8D9BC851FFFF41FFD3E92CFFFFFFFF3577FCFFFF49BBC8B7F5AC217F000041534D8D9B3848FFFF41FFE3FF3563FCFFFF49BBD8B7F5AC217F000041534D8D9B2848FFFF41FFE3FF3557FCFFFF49BBE8B7F5AC217F000041534D8D9B1848FFFF41FFE3FF3543FCFFFF49BBF8B7F5AC217F000041534D8D9B0848FFFF41FFE3FF3537FCFFFF49BB08B8F5AC217F000041534D8D9BF847FFFF41FFE3FF3523FCFFFF49BB18B8F5AC217F000041534D8D9BE847FFFF41FFE3FF350FFCFFFF49BB28B8F5AC217F000041534D8D9BD847FFFF41FFE3FF35FBFBFFFF49BB38B8F5AC217F000041534D8D9BC847FFFF41FFE3FF35E7FBFFFF49BB48B8F5AC217F000041534D8D9BB847FFFF41FFE3FF35DBFBFFFF49BB58B8F5AC217F000041534D8D9BA847FFFF41FFE3FF35C7FBFFFF49BB68B8F5AC217F000041534D8D9B9847FFFF41FFE3FF35B3FBFFFF49BB78B8F5AC217F000041534D8D9B8847FFFF41FFE3FF359FFBFFFF49BB88B8F5AC217F000041534D8D9B7847FFFF41FFE3FF358BFBFFFF49BB98B8F5AC217F000041534D8D9B6847FFFF41FFE3FF3577FBFFFF49BBA8B8F5AC217F000041534D8D9B5847FFFF41FFE3FF3563FBFFFF49BBB8B8F5AC217F000041534D8D9B4847FFFF41FFE3FF354FFBFFFF49BBC8B8F5AC217F000041534D8D9B3847FFFF41FFE3FF353BFBFFFF49BBD8B8F5AC217F000041534D8D9B2847FFFF41FFE3FF3527FBFFFF49BBE8B8F5AC217F000041534D8D9B1847FFFF41FFE3FF351BFBFFFF49BBF8B8F5AC217F000041534D8D9B0847FFFF41FFE3FF3507FBFFFF49BB08B9F5AC217F000041534D8D9BF846FFFF41FFE3FF35F3FAFFFF49BB18B9F5AC217F000041534D8D9BE846FFFF41FFE3
[3e4c1bedb9ddeca] jit-backend-dump}
[3e4c1bedb9e81a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ba24 +0  1F000000
[3e4c1bedb9e95aa] jit-backend-dump}
[3e4c1bedb9ed302] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bc85 +0  1F000000
[3e4c1bedb9ee192] jit-backend-dump}
[3e4c1bedb9f15f1] {jit-backend-addr
bridge out of Guard 0x35d2f98 has address 0x7f21acf5ba20 to 0x7f21acf5bc80
       gc table: 0x7f21acf5b940
    jump target: 0x7f21acf5ba20
         resops: 0x7f21acf5ba2e
       failures: 0x7f21acf5bc80
            end: 0x7f21acf5bf2b
[3e4c1bedb9f3c55] jit-backend-addr}
[3e4c1bedb9f71a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ba3e +0  81020000
[3e4c1bedb9f80c3] jit-backend-dump}
[3e4c1bedb9fb6e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ba4b +0  90020000
[3e4c1bedb9fc41e] jit-backend-dump}
[3e4c1bedb9ff717] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ba5b +0  9C020000
[3e4c1bedba004d1] jit-backend-dump}
[3e4c1bedba035ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ba68 +0  AB020000
[3e4c1bedba04330] jit-backend-dump}
[3e4c1bedba074d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ba7c +0  B3020000
[3e4c1bedba08284] jit-backend-dump}
[3e4c1bedba0b59f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ba92 +0  D5020000
[3e4c1bedba0c2a2] jit-backend-dump}
[3e4c1bedba0f349] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5baa9 +0  DA020000
[3e4c1bedba1003d] jit-backend-dump}
[3e4c1bedba130a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bab7 +0  E8020000
[3e4c1bedba13db7] jit-backend-dump}
[3e4c1bedba16e74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bacc +0  EF020000
[3e4c1bedba17b64] jit-backend-dump}
[3e4c1bedba1abb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bae9 +0  EE020000
[3e4c1bedba1b8aa] jit-backend-dump}
[3e4c1bedba1e905] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bafb +0  F8020000
[3e4c1bedba1f5f3] jit-backend-dump}
[3e4c1bedba22663] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bb0e +0  01030000
[3e4c1bedba23357] jit-backend-dump}
[3e4c1bedba263b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bb1b +0  10030000
[3e4c1bedba270a0] jit-backend-dump}
[3e4c1bedba2a0d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bb31 +0  16030000
[3e4c1bedba2adca] jit-backend-dump}
[3e4c1bedba2de2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bb47 +0  1C030000
[3e4c1bedba2eb25] jit-backend-dump}
[3e4c1bedba31be2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bb5d +0  22030000
[3e4c1bedba328c9] jit-backend-dump}
[3e4c1bedba35949] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bb73 +0  28030000
[3e4c1bedba3663a] jit-backend-dump}
[3e4c1bedba39658] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bb80 +0  37030000
[3e4c1bedba3a342] jit-backend-dump}
[3e4c1bedba3d39a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bb90 +0  43030000
[3e4c1bedba3e08b] jit-backend-dump}
[3e4c1bedba41142] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bba6 +0  49030000
[3e4c1bedba41e2c] jit-backend-dump}
[3e4c1bedba44e75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5bbc3 +0  48030000
[3e4c1bedba45b6c] jit-backend-dump}
[3e4c1bedba48eae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf58c3b +0  E12D0000
[3e4c1bedba49b96] jit-backend-dump}
[3e4c1bedba4da32] jit-backend}
[3e4c1bedba513e5] {jit-log-opt-bridge
# bridge out of Guard 0x35d2f98 with 71 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x35e1220>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+262: guard_nonnull(p3, descr=<Guard0x35f60b0>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x35f60f8>) [p0, p1]
debug_merge_point(0, 0, '#f')
+287: guard_class(p0, 16435920, descr=<Guard0x35f6140>) [p0, p1]
+300: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+311: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35f6188>) [p0, p1]
+320: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+324: guard_not_invalidated(descr=<Guard0x35f61d0>) [p0, p1]
+324: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+328: guard_class(p9, 16500368, descr=<Guard0x35f6218>) [p0, p1]
+342: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+346: guard_nonnull_class(p12, 16471056, descr=<Guard0x35e1280>) [p0, p1]
+365: guard_class(p10, 16437352, descr=<Guard0x35f6260>) [p0, p1]
+379: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+391: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35f62a8>) [p0, p1]
+400: p17 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+405: p18 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+410: p19 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+415: guard_class(p18, 16500368, descr=<Guard0x35f62f0>) [p0, p1]
+429: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+433: guard_class(p21, 16505296, descr=<Guard0x35f6338>) [p0, p1]
+447: guard_nonnull_class(p17, 16471056, descr=<Guard0x35e12e0>) [p0, p1]
+466: guard_class(p19, 16435208, descr=<Guard0x35f6380>) [p0, p1]
+479: p25 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+483: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x35e1340>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr z) x y) from (shorterp (cdr x4848) (cdr y4850))')
+501: p27 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+505: guard_nonnull_class(p27, 16471056, descr=<Guard0x35e13a0>) [p0, p1]
+523: p29 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+527: guard_nonnull_class(p29, 16471056, descr=<Guard0x35e1400>) [p0, p1]
+545: p31 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+549: guard_nonnull_class(p31, 16471056, descr=<Guard0x35e1460>) [p0, p1]
+567: p33 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+571: guard_nonnull(p33, descr=<Guard0x35f63c8>) [p0, p1]
+587: i35 = instance_ptr_eq(p21, ConstPtr(ptr34))
+590: guard_true(i35, descr=<Guard0x35f6410>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr z) x y)')
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+596: p36 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+600: guard_nonnull_class(p36, 16471056, descr=<Guard0x35e14c0>) [p0, p1]
+618: p38 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+629: guard_nonnull_class(p38, 16471056, descr=<Guard0x35e1520>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+647: p40 = new_with_vtable(descr=<SizeDescr 40>)
+694: p41 = new_with_vtable(descr=<SizeDescr 40>)
+705: setfield_gc(p41, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+709: setfield_gc(p41, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+713: setfield_gc(p41, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+717: setfield_gc(p41, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+721: p42 = new_with_vtable(descr=<SizeDescr 56>)
+732: setfield_gc(p42, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+743: setfield_gc(p42, p21, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+747: setfield_gc(p42, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+758: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+762: setfield_gc(p42, p17, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+766: setfield_gc(p42, p12, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+770: setfield_gc(p40, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+774: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+778: setfield_gc(p40, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+782: setfield_gc(p40, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+786: jump(ConstPtr(ptr45), p36, p38, p40, p25, descr=TargetToken(55799344))
+832: --end of the loop--
[3e4c1bedba8bb49] jit-log-opt-bridge}
[3e4c1bedbb8e7d2] {jit-backend
[3e4c1bedbbda605] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c
[3e4c1bedbbe1772] jit-backend-dump}
[3e4c1bedbbeb344] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c104 +0  1F000000
[3e4c1bedbbec5a5] jit-backend-dump}
[3e4c1bedbbf01e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c2c5 +0  1F000000
[3e4c1bedbbf1049] jit-backend-dump}
[3e4c1bedbbf4327] {jit-backend-addr
bridge out of Guard 0x35d3808 has address 0x7f21acf5c100 to 0x7f21acf5c2c0
       gc table: 0x7f21acf5c060
    jump target: 0x7f21acf5c100
         resops: 0x7f21acf5c10e
       failures: 0x7f21acf5c2c0
            end: 0x7f21acf5c4c3
[3e4c1bedbbf6803] jit-backend-addr}
[3e4c1bedbbf9de3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c11e +0  E1010000
[3e4c1bedbbfac18] jit-backend-dump}
[3e4c1bedbbfdf9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c12b +0  F0010000
[3e4c1bedbbfed03] jit-backend-dump}
[3e4c1bedbc01ef5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c13b +0  FC010000
[3e4c1bedbc02c29] jit-backend-dump}
[3e4c1bedbc05e33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c148 +0  0B020000
[3e4c1bedbc06b27] jit-backend-dump}
[3e4c1bedbc09c80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c15c +0  13020000
[3e4c1bedbc0a983] jit-backend-dump}
[3e4c1bedbc0dc5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c172 +0  35020000
[3e4c1bedbc0e957] jit-backend-dump}
[3e4c1bedbc11af6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c189 +0  3A020000
[3e4c1bedbc127e1] jit-backend-dump}
[3e4c1bedbc159dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c197 +0  48020000
[3e4c1bedbc16707] jit-backend-dump}
[3e4c1bedbc198e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c1ac +0  4F020000
[3e4c1bedbc1a608] jit-backend-dump}
[3e4c1bedbc1d79b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c1ce +0  49020000
[3e4c1bedbc1e4fa] jit-backend-dump}
[3e4c1bedbc2163a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c1e2 +0  51020000
[3e4c1bedbc22331] jit-backend-dump}
[3e4c1bedbc254ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c1ef +0  60020000
[3e4c1bedbc26208] jit-backend-dump}
[3e4c1bedbc2938b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c207 +0  64020000
[3e4c1bedbc2a08e] jit-backend-dump}
[3e4c1bedbc2d206] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c21d +0  6A020000
[3e4c1bedbc2df4c] jit-backend-dump}
[3e4c1bedbc310c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c233 +0  70020000
[3e4c1bedbc31dc1] jit-backend-dump}
[3e4c1bedbc35201] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf59edf +0  1D220000
[3e4c1bedbc35f0a] jit-backend-dump}
[3e4c1bedbc39e6a] jit-backend}
[3e4c1bedbc3d9df] {jit-log-opt-bridge
# bridge out of Guard 0x35d3808 with 53 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x35e1580>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+198: guard_nonnull(p3, descr=<Guard0x35f6458>) [p0, p1]
+214: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+217: guard_true(i5, descr=<Guard0x35f64a0>) [p0, p1]
debug_merge_point(0, 0, '#f')
+223: guard_class(p0, 16435920, descr=<Guard0x35f64e8>) [p0, p1]
+236: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+247: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35f6530>) [p0, p1]
+256: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+260: guard_not_invalidated(descr=<Guard0x35f6578>) [p0, p1]
+260: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+264: guard_class(p9, 16500368, descr=<Guard0x35f65c0>) [p0, p1]
+278: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+282: guard_nonnull_class(p12, 16471056, descr=<Guard0x35e15e0>) [p0, p1]
+301: guard_class(p10, 16437896, descr=<Guard0x35f6608>) [p0, p1]
+315: p15 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+327: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x35f6650>) [p0, p1]
+336: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+336: p18 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+341: p19 = getfield_gc_r(p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+346: p20 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(mas AppRand3 AppRand4 AppRand5) from (shorterp (cdr x4848) (cdr y4850))')
+351: guard_nonnull_class(p18, 16471056, descr=<Guard0x35e1640>) [p0, p1]
+370: guard_nonnull_class(p19, 16471056, descr=<Guard0x35e16a0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas AppRand3 AppRand4 AppRand5)')
+390: guard_class(p20, 16435208, descr=<Guard0x35f6698>) [p0, p1]
+403: p24 = getfield_gc_r(p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+407: guard_nonnull_class(p24, ConstClass(ForwardLink), descr=<Guard0x35e1700>) [p0, p1]
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+427: p26 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+431: guard_nonnull_class(p26, 16471056, descr=<Guard0x35e1760>) [p0, p1]
+449: p28 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+453: guard_nonnull_class(p28, 16471056, descr=<Guard0x35e17c0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+471: p30 = new_with_vtable(descr=<SizeDescr 40>)
+512: p31 = new_with_vtable(descr=<SizeDescr 40>)
+530: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+534: setfield_gc(p31, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+538: setfield_gc(p31, p19, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+542: setfield_gc(p31, p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+546: setfield_gc(p30, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+550: setfield_gc(p30, p31, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+554: setfield_gc(p30, p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+558: setfield_gc(p30, p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+562: jump(ConstPtr(ptr34), p26, p28, p30, p24, descr=TargetToken(55799344))
+608: --end of the loop--
[3e4c1bedbc66c33] jit-log-opt-bridge}
[3e4c1bedbd83da2] {jit-backend
[3e4c1bedbdd9500] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c
[3e4c1bedbde115f] jit-backend-dump}
[3e4c1bedbdeae57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c6f4 +0  1F000000
[3e4c1bedbdec298] jit-backend-dump}
[3e4c1bedbdefebe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c905 +0  1F000000
[3e4c1bedbdf0cce] jit-backend-dump}
[3e4c1bedbdf3fc7] {jit-backend-addr
bridge out of Guard 0x35d3268 has address 0x7f21acf5c6f0 to 0x7f21acf5c900
       gc table: 0x7f21acf5c630
    jump target: 0x7f21acf5c6f0
         resops: 0x7f21acf5c6fe
       failures: 0x7f21acf5c900
            end: 0x7f21acf5cb73
[3e4c1bedbdf6300] jit-backend-addr}
[3e4c1bedbdf96e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c70e +0  31020000
[3e4c1bedbdfa4e9] jit-backend-dump}
[3e4c1bedbdfd798] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c71b +0  40020000
[3e4c1bedbdfe498] jit-backend-dump}
[3e4c1bedbe01662] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c72b +0  4C020000
[3e4c1bedbe023ca] jit-backend-dump}
[3e4c1bedbe055e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c737 +0  5C020000
[3e4c1bedbe0632a] jit-backend-dump}
[3e4c1bedbe094ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c74e +0  61020000
[3e4c1bedbe0a1e2] jit-backend-dump}
[3e4c1bedbe0d35d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c75b +0  70020000
[3e4c1bedbe0e063] jit-backend-dump}
[3e4c1bedbe111f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c764 +0  83020000
[3e4c1bedbe11eea] jit-backend-dump}
[3e4c1bedbe15190] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c778 +0  A7020000
[3e4c1bedbe15e7e] jit-backend-dump}
[3e4c1bedbe19048] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c78e +0  AD020000
[3e4c1bedbe19d2f] jit-backend-dump}
[3e4c1bedbe1cf1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c7a6 +0  B1020000
[3e4c1bedbe1dc00] jit-backend-dump}
[3e4c1bedbe20e32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c7b3 +0  C0020000
[3e4c1bedbe21b1c] jit-backend-dump}
[3e4c1bedbe24ca3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c7ca +0  C5020000
[3e4c1bedbe25988] jit-backend-dump}
[3e4c1bedbe28b33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c7e1 +0  CA020000
[3e4c1bedbe29824] jit-backend-dump}
[3e4c1bedbe2ca31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c7f8 +0  CF020000
[3e4c1bedbe2d716] jit-backend-dump}
[3e4c1bedbe308bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c805 +0  DE020000
[3e4c1bedbe315ac] jit-backend-dump}
[3e4c1bedbe34770] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c819 +0  E6020000
[3e4c1bedbe3544e] jit-backend-dump}
[3e4c1bedbe385f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c825 +0  F6020000
[3e4c1bedbe392db] jit-backend-dump}
[3e4c1bedbe3c45f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c83b +0  FC020000
[3e4c1bedbe3d137] jit-backend-dump}
[3e4c1bedbe402fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5c851 +0  02030000
[3e4c1bedbe41001] jit-backend-dump}
[3e4c1bedbe47a3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5931e +0  CE330000
[3e4c1bedbe489d2] jit-backend-dump}
[3e4c1bedbe4cef4] jit-backend}
[3e4c1bedbe50a3e] {jit-log-opt-bridge
# bridge out of Guard 0x35d3268 with 68 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x35e1820>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+230: guard_nonnull(p3, descr=<Guard0x35f66e0>) [p0, p1]
+246: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+249: guard_false(i5, descr=<Guard0x35f6728>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
+255: guard_class(p0, 16435920, descr=<Guard0x35f6770>) [p0, p1]
+267: p7 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+271: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x35e1880>) [p0, p1]
debug_merge_point(0, 0, '(null? x4848)')
+290: p9 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull(p9, descr=<Guard0x35f67b8>) [p0, p1]
+303: i11 = instance_ptr_eq(p9, ConstPtr(ptr10))
+306: guard_true(i11, descr=<Guard0x35f6800>) [p0, p1]
+312: guard_not_invalidated(descr=<Guard0x35f6848>) [p0, p1]
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, 'or-part')
+312: p12 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+323: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x35f6890>) [p0, p1]
+332: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+336: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (null? x4848)')
debug_merge_point(0, 0, '(let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))')
+340: guard_class(p15, 16435208, descr=<Guard0x35f68d8>) [p0, p1]
+354: p17 = getfield_gc_r(p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+358: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x35e18e0>) [p0, p1]
debug_merge_point(0, 0, '(mas (cdr x) y z)')
+378: guard_class(p14, 16500368, descr=<Guard0x35f6920>) [p0, p1]
+391: p20 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+395: guard_nonnull_class(p20, 16471056, descr=<Guard0x35e1940>) [p0, p1]
+414: p22 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+418: guard_nonnull_class(p22, 16471056, descr=<Guard0x35e19a0>) [p0, p1]
+437: p24 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+441: guard_nonnull_class(p24, 16471056, descr=<Guard0x35e1a00>) [p0, p1]
+460: p26 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+464: guard_nonnull(p26, descr=<Guard0x35f6968>) [p0, p1]
+473: p27 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+484: i29 = instance_ptr_eq(p27, ConstPtr(ptr28))
+487: guard_true(i29, descr=<Guard0x35f69b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas (cdr x) y z)')
debug_merge_point(0, 0, '(shorterp y x)')
+493: guard_class(p27, 16505296, descr=<Guard0x35f69f8>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
+505: p31 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+509: guard_nonnull_class(p31, 16471056, descr=<Guard0x35e1a60>) [p0, p1]
+527: p33 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+531: guard_nonnull_class(p33, 16471056, descr=<Guard0x35e1ac0>) [p0, p1]
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+549: p35 = new_with_vtable(descr=<SizeDescr 40>)
+593: p36 = new_with_vtable(descr=<SizeDescr 40>)
+604: setfield_gc(p36, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+608: setfield_gc(p36, p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+612: setfield_gc(p36, p24, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+616: setfield_gc(p36, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+620: p37 = new_with_vtable(descr=<SizeDescr 40>)
+631: setfield_gc(p37, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+635: setfield_gc(p37, p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p37, p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p35, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+658: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+662: setfield_gc(p35, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+666: setfield_gc(p35, p37, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+670: jump(ConstPtr(ptr40), p31, p33, p35, p17, descr=TargetToken(55799344))
+720: --end of the loop--
[3e4c1bedbe83a72] jit-log-opt-bridge}
[3e4c1bee55429de] {jit-backend
[3e4c1bee559e859] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cce0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CF201000048FF0425C0F5F3028139700B01000F85000000004C8B79184D85FF0F84000000004C8B2DFAFEFFFF4D39EF0F850000000041813E101100000F85000000004D8B6E204C8B3DF1FEFFFF4D39FD0F85000000004D8B6E104D8B661841817D00D00C01000F85000000004D8B55204D85D20F840000000041813C24480E00000F85000000004D8B5424204C8B2DDBFEFFFF4D39EA0F85000000004D8B5424104D8B4C241841813AB01E01000F85000000004D8B620841813C24100A01000F85000000004D8B4424104983F8017207418138503601000F8500000000498B7A104883C7010F80000000004D8B5008488B35A8FEFFFF4939F20F8500000000498B70104939F40F8500000000418139307A01000F8500000000498B71084883FE017206813E900F00000F85000000004881FFD00700000F8F00000000488B0C25F091F900488D5168483B14251092F9000F87C600000048891425F091F90048C70110110000488D512848C702480E0000488972084C8D722849C706B01E01004D89660849897E104C8972104C894A184C896A204C8979204C8B3D30FEFFFF4C8979104889511848897108488B1525FEFFFF4C8B3D26FEFFFF4C8B2D27FEFFFF488995300100004C89FA4C89EF48898D380100004889B54001000049BB101BF5AC217F000041FFE36666666666662E0F1F84000000000048C7442408FFFFFF0049BB88CBF5AC217F00004C895D204D8D9B6837FFFF41FFD3E9E8FDFFFF49BBC8CCF5AC217F00004C895D204D8D9B283EFFFF41FFD3E925FFFFFFFF35D7FCFFFF49BB98CBF5AC217F000041534D8D9B6834FFFF41FFE3FF35C3FCFFFF49BBA8CBF5AC217F000041534D8D9B5834FFFF41FFE3FF35B7FCFFFF49BBB8CBF5AC217F000041534D8D9B4834FFFF41FFE3FF35A3FCFFFF49BBC8CBF5AC217F000041534D8D9B3834FFFF41FFE3FF3597FCFFFF49BBD8CBF5AC217F000041534D8D9B2834FFFF41FFE3FF3583FCFFFF49BBE8CBF5AC217F000041534D8D9B1834FFFF41FFE3FF356FFCFFFF49BBF8CBF5AC217F000041534D8D9B0834FFFF41FFE3FF355BFCFFFF49BB08CCF5AC217F000041534D8D9BF833FFFF41FFE3FF3547FCFFFF49BB18CCF5AC217F000041534D8D9BE833FFFF41FFE3FF353BFCFFFF49BB28CCF5AC217F000041534D8D9BD833FFFF41FFE3FF3527FCFFFF49BB38CCF5AC217F000041534D8D9BC833FFFF41FFE3FF3513FCFFFF49BB48CCF5AC217F000041534D8D9BB833FFFF41FFE3FF35FFFBFFFF49BB58CCF5AC217F000041534D8D9BA833FFFF41FFE3FF35EBFBFFFF49BB68CCF5AC217F000041534D8D9B9833FFFF41FFE3FF35DFFBFFFF49BB78CCF5AC217F000041534D8D9B8833FFFF41FFE3FF35CBFBFFFF49BB88CCF5AC217F000041534D8D9B7833FFFF41FFE3FF35B7FBFFFF49BB98CCF5AC217F000041534D8D9B6833FFFF41FFE3FF35A3FBFFFF49BBA8CCF5AC217F000041534D8D9B5833FFFF41FFE3FF358FFBFFFF49BBB8CCF5AC217F000041534D8D9B4833FFFF41FFE3
[3e4c1bee55a7d28] jit-backend-dump}
[3e4c1bee55b3a1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cdc4 +0  1F000000
[3e4c1bee55b4e41] jit-backend-dump}
[3e4c1bee55b8ff3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cfc5 +0  1F000000
[3e4c1bee55b9f47] jit-backend-dump}
[3e4c1bee55bd338] {jit-backend-addr
bridge out of Guard 0x35bd538 has address 0x7f21acf5cdc0 to 0x7f21acf5cfc0
       gc table: 0x7f21acf5cce0
    jump target: 0x7f21acf5cdc0
         resops: 0x7f21acf5cdce
       failures: 0x7f21acf5cfc0
            end: 0x7f21acf5d217
[3e4c1bee55bf7f9] jit-backend-addr}
[3e4c1bee55c2eda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cdde +0  21020000
[3e4c1bee55c3ce1] jit-backend-dump}
[3e4c1bee55c70ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cdeb +0  30020000
[3e4c1bee55c7da4] jit-backend-dump}
[3e4c1bee55cb066] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cdfb +0  3C020000
[3e4c1bee55cbdbe] jit-backend-dump}
[3e4c1bee55ceedd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ce08 +0  4B020000
[3e4c1bee55cfbf3] jit-backend-dump}
[3e4c1bee55d2df7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ce1c +0  53020000
[3e4c1bee55d3b22] jit-backend-dump}
[3e4c1bee55d6db9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ce32 +0  75020000
[3e4c1bee55d7ad7] jit-backend-dump}
[3e4c1bee55dabf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ce3f +0  84020000
[3e4c1bee55db8e1] jit-backend-dump}
[3e4c1bee55de91d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ce4d +0  92020000
[3e4c1bee55df614] jit-backend-dump}
[3e4c1bee55e269a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ce62 +0  99020000
[3e4c1bee55e3378] jit-backend-dump}
[3e4c1bee55e63cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ce79 +0  9E020000
[3e4c1bee55e70b8] jit-backend-dump}
[3e4c1bee55ea141] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ce8b +0  A8020000
[3e4c1bee55eae25] jit-backend-dump}
[3e4c1bee55edea8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cea3 +0  AC020000
[3e4c1bee55eeb80] jit-backend-dump}
[3e4c1bee55f1bc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ceb1 +0  BA020000
[3e4c1bee55f2898] jit-backend-dump}
[3e4c1bee55f58f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cec5 +0  C2020000
[3e4c1bee55f65ea] jit-backend-dump}
[3e4c1bee55f97ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5ced2 +0  D1020000
[3e4c1bee55fa483] jit-backend-dump}
[3e4c1bee55fd515] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cedf +0  E0020000
[3e4c1bee55fe209] jit-backend-dump}
[3e4c1bee560126d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cef5 +0  E6020000
[3e4c1bee5601f42] jit-backend-dump}
[3e4c1bee5604f82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf5cf02 +0  F5020000
[3e4c1bee5605c5d] jit-backend-dump}
[3e4c1bee5608f78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f21acf551f7 +0  C57B0000
[3e4c1bee5609c5f] jit-backend-dump}
[3e4c1bee560da94] jit-backend}
[3e4c1bee5611667] {jit-log-opt-bridge
# bridge out of Guard 0x35bd538 with 69 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x35e1b20>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+262: guard_nonnull(p3, descr=<Guard0x35f6a40>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x35f6a88>) [p0, p1]
debug_merge_point(0, 0, '#f')
+287: guard_class(p0, 16435920, descr=<Guard0x35f6ad0>) [p0, p1]
+300: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+311: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x35f6b18>) [p0, p1]
+320: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+324: guard_not_invalidated(descr=<Guard0x35f6b60>) [p0, p1]
+324: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5))) from (shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, 'z')
+328: guard_class(p9, 16500368, descr=<Guard0x35f6ba8>) [p0, p1]
+342: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+346: guard_nonnull(p12, descr=<Guard0x35f6bf0>) [p0, p1]
+355: guard_class(p10, 16435208, descr=<Guard0x35f6c38>) [p0, p1]
+369: p14 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+381: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x35f6c80>) [p0, p1]
+390: p16 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+395: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4866 (add1 i4868)) from (shorterp (cdr x4848) (cdr y4850))')
+400: guard_class(p16, 16504944, descr=<Guard0x35f6cc8>) [p0, p1]
+413: p19 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+417: guard_class(p19, 16499664, descr=<Guard0x35f6d10>) [p0, p1]
+431: p21 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+436: guard_nonnull_class(p21, 16510992, descr=<Guard0x35e1b80>) [p0, p1]
+455: i23 = getfield_gc_i(p16, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+459: i25 = int_add_ovf(i23, 1)
+463: guard_no_overflow(descr=<Guard0x35f6d58>) [p0, p1]
+469: p26 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+480: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x35f6da0>) [p0, p1]
+489: p28 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+493: i29 = instance_ptr_eq(p19, p28)
+496: guard_true(i29, descr=<Guard0x35f6de8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if2 (> i4868 takl-iters)]) (if if2 (begin (void) (void)) (begin (mas l18 l12 l6) (doloop4866 (add1 i4868))))) from (doloop4866 (add1 i4868))')
+502: guard_class(p17, 16528368, descr=<Guard0x35f6e30>) [p0, p1]
+515: p31 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+519: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x35e1be0>) [p0, p1]
debug_merge_point(0, 0, '(> i4868 takl-iters)')
+537: i34 = int_gt(i25, 2000)
+544: guard_false(i34, descr=<Guard0x35f6e78>) [p0, p1]
debug_merge_point(0, 0, '(if if2 (begin (void) (void)) (begin (mas l18 l12 l6) (doloop4866 (add1 i4868))))')
debug_merge_point(0, 0, '(begin (mas l18 l12 l6) (doloop4866 (add1 i4868)))')
debug_merge_point(0, 0, '(mas l18 l12 l6)')
+550: p35 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (shorterp y x)]) (if (not AppRand2) z (let ([AppRand3 (mas (cdr x) y z)][AppRand4 (mas (cdr y) z x)][AppRand5 (mas (cdr z) x y)]) (mas AppRand3 AppRand4 AppRand5)))) from (mas l18 l12 l6)')
debug_merge_point(0, 0, '(shorterp y x)')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp y x)')
debug_merge_point(0, 0, '(let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850))))')
debug_merge_point(0, 0, '(null? x4848)')
debug_merge_point(0, 0, '(if or-part or-part (shorterp (cdr x4848) (cdr y4850)))')
debug_merge_point(0, 0, '(shorterp (cdr x4848) (cdr y4850))')
debug_merge_point(0, 0, '(if (not (null? y4850)) (let ([or-part (null? x4848)]) (if or-part or-part (shorterp (cdr x4848) (cdr y4850)))) #f) from (shorterp (cdr x4848) (cdr y4850))')
+550: p36 = new_with_vtable(descr=<SizeDescr 40>)
+591: p37 = new_with_vtable(descr=<SizeDescr 40>)
+602: setfield_gc(p37, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+606: p38 = new_with_vtable(descr=<SizeDescr 24>)
+617: setfield_gc(p38, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+621: setfield_gc(p38, i25, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+625: setfield_gc(p37, p38, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+629: setfield_gc(p37, p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+633: setfield_gc(p37, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+637: setfield_gc(p36, ConstPtr(ptr40), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+648: setfield_gc(p36, ConstPtr(ptr41), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+652: setfield_gc(p36, p37, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+656: setfield_gc(p36, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+681: jump(ConstPtr(ptr42), ConstPtr(ptr43), ConstPtr(ptr44), p36, p31, descr=TargetToken(55799344))
+736: --end of the loop--
[3e4c1bee564e280] jit-log-opt-bridge}
[3e4c1dbb39384d2] {jit-summary
Tracing:      	32	0.018556
Backend:      	32	0.009196
TOTAL:      		47.855759
ops:             	18575
recorded ops:    	3277
  calls:         	0
guards:          	1581
opt ops:         	2121
opt guards:      	805
opt guards shared:	546
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	9
nvholes:         	0
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	7
Total # of bridges:	25
Freed # of loops:	0
Freed # of bridges:	0
[3e4c1dbb394b7ce] jit-summary}
[3e4c1dbb3957255] {jit-backend-counts
entry 4:349
TargetToken(55799264):1272180128
TargetToken(55799344):6916819707
bridge 55559520:318039978
bridge 55559328:954139957
bridge 55559904:561579940
entry 8:547
bridge 56345112:636099923
bridge 55560000:710599907
entry 11:529
bridge 56347272:351
bridge 56345256:260319932
bridge 56346480:318059912
bridge 55562304:318039894
bridge 56346768:266999914
bridge 56237768:108799945
bridge 56348064:177
bridge 56350152:108799919
entry 20:90
bridge 56347416:59
bridge 56349216:51079934
bridge 56348352:56
bridge 56351016:57759929
bridge 56351736:57759920
bridge 56352528:59
bridge 56435152:51079909
entry 28:5
entry 29:30
entry 30:23
bridge 56436808:39946
bridge 56438680:39946
bridge 56440840:39946
bridge 56439400:39945
bridge 56350008:19948
[3e4c1dbb395f2fe] jit-backend-counts}
