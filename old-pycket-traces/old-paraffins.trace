[3e4c22af8d3e9d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c4000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c22af8d52ab4] jit-backend-dump}
[3e4c22af8d8e485] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c40b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c22af8d91649] jit-backend-dump}
[3e4c22af8d9e3ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c4180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c22af8da0074] jit-backend-dump}
[3e4c22af8da6e0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c41f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c22af8da8684] jit-backend-dump}
[3e4c22af8db1385] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c4270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c22af8db2d51] jit-backend-dump}
[3e4c22af8dbcfb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c42f
[3e4c22af8dc1022] jit-backend-dump}
[3e4c22af8dc65ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c
[3e4c22af8dc8ac3] jit-backend-dump}
[3e4c22af8dcd6b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c4630 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B528010000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c22af8dcfb48] jit-backend-dump}
[3e4c22af8e5bd51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c
[3e4c22af8e5ec58] jit-backend-dump}
[3e4c22af8e64b6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c48f
[3e4c22af8e67189] jit-backend-dump}
[3e4c22af8e6bcc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c4a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c22af8e6d4a9] jit-backend-dump}
[3e4c22af8e80aea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c4af
[3e4c22af8e83bf4] jit-backend-dump}
[3e4c22af8e8bafd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c4ce
[3e4c22af8e8edf6] jit-backend-dump}
[3e4c22af8e9688b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c4ee
[3e4c22af8e997c6] jit-backend-dump}
[3e4c22af8e9f54c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c50d
[3e4c22af8ea24c4] jit-backend-dump}
[3e4c22af8eac3ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c52c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70421C5C4A7F000041FFD3E99CFFFFFF
[3e4c22af8eae0c1] jit-backend-dump}
[3e4c22af8eb324a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70421C5C4A7F000041FFD3E9BCFFFFFF
[3e4c22af8eb4b0f] jit-backend-dump}
[3e4c22af8eb9d81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c
[3e4c22af8ebc756] jit-backend-dump}
[3e4c22af8ec1c9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c55c
[3e4c22af8ec446a] jit-backend-dump}
[3e4c22af8ed58e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB704A1C5C4A7F000041FFE3
[3e4c22af8ed7000] jit-backend-dump}
[3e4c22af93a1ce3] {jit-backend
[3e4c22af94a8956] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c
[3e4c22af94b1da1] jit-backend-dump}
[3e4c22af94c1a11] {jit-backend-addr
Loop 1 ((if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)) has address 0x7f4a5c1c5aad to 0x7f4a5c1c5d40 (bootstrap 0x7f4a5c1c5a20)
       gc table: 0x7f4a5c1c5960
       function: 0x7f4a5c1c5a20
         resops: 0x7f4a5c1c5aad
       failures: 0x7f4a5c1c5d40
            end: 0x7f4a5c1c5f67
[3e4c22af94c61c2] jit-backend-addr}
[3e4c22af94cb5af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5ad7 +0  94020000
[3e4c22af94cc994] jit-backend-dump}
[3e4c22af94cfe4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5aed +0  9A020000
[3e4c22af94d0c99] jit-backend-dump}
[3e4c22af94d3d71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5afd +0  A6020000
[3e4c22af94d4a7a] jit-backend-dump}
[3e4c22af94d7a24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5b10 +0  AF020000
[3e4c22af94d8767] jit-backend-dump}
[3e4c22af94db5d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5b26 +0  B5020000
[3e4c22af94dc2fe] jit-backend-dump}
[3e4c22af94df343] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5b36 +0  DD020000
[3e4c22af94e00a2] jit-backend-dump}
[3e4c22af94e2f4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5b4a +0  E5020000
[3e4c22af94e3c5a] jit-backend-dump}
[3e4c22af94e6ae4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5b61 +0  EA020000
[3e4c22af94e7840] jit-backend-dump}
[3e4c22af94ea644] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5b77 +0  F0020000
[3e4c22af94eb34a] jit-backend-dump}
[3e4c22af94ee166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5b8e +0  F5020000
[3e4c22af94eee60] jit-backend-dump}
[3e4c22af94f1c38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5ba5 +0  FA020000
[3e4c22af94f293e] jit-backend-dump}
[3e4c22af94f5711] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5bbd +0  FE020000
[3e4c22af94f63fc] jit-backend-dump}
[3e4c22af94f9208] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5bd8 +0  FF020000
[3e4c22af94f9eed] jit-backend-dump}
[3e4c22af94fccb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5bee +0  05030000
[3e4c22af94fd9b0] jit-backend-dump}
[3e4c22af9500846] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5c5a +0  D1020000
[3e4c22af9501565] jit-backend-dump}
[3e4c22af95043a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5c71 +0  D6020000
[3e4c22af95050af] jit-backend-dump}
[3e4c22af9508b9a] jit-backend}
[3e4c22af950c9bf] {jit-log-opt-loop
# Loop 1 ((if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)) : loop with 64 ops
[p0, p1]
+341: label(p0, p1, descr=TargetToken(59469520))
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+360: guard_class(p0, 16500016, descr=<Guard0x382f880>) [p1, p0]
+379: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+383: guard_nonnull_class(p3, 16470384, descr=<Guard0x382f8e0>) [p1, p0]
+408: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+411: guard_false(i6, descr=<Guard0x38f06e0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+417: guard_class(p1, 16437352, descr=<Guard0x38f0728>) [p1, p0]
+436: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+440: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x382f940>) [p1, p0]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+458: guard_not_invalidated(descr=<Guard0x38f0770>) [p1, p0]
+458: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+462: guard_class(p10, 16478072, descr=<Guard0x38f07b8>) [p1, p0]
+474: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+485: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x38f0800>) [p1, p0]
+494: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+498: guard_nonnull_class(p14, 16470384, descr=<Guard0x382f9a0>) [p1, p0]
+517: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+521: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x382fa00>) [p1, p0]
+539: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+543: guard_nonnull_class(p18, 16470384, descr=<Guard0x382fa60>) [p1, p0]
+562: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+566: guard_nonnull_class(p20, ConstClass(W_Symbol), descr=<Guard0x382fac0>) [p1, p0]
+585: p22 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+589: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x382fb20>) [p1, p0]
+609: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+613: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+617: guard_nonnull_class(p25, 16470384, descr=<Guard0x382fb80>) [p1, p0]
+636: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+640: guard_nonnull_class(p27, 16470384, descr=<Guard0x382fbe0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+658: p29 = same_as_r(p24)
+661: p30 = same_as_r(p16)
+664: p31 = same_as_r(p20)
+674: label(p10, p25, p27, p8, p24, p1, p16, p20, p22, p14, p18, p29, p30, p31, descr=TargetToken(59469600))
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+744: guard_not_invalidated(descr=<Guard0x382fc40>) [p22, p20, p16, p1, p24, p27, p25, p10, p8]
+744: p32 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+748: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x382fca0>) [p22, p20, p16, p1, p24, p27, p25, p10, p8]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+766: p34 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+770: guard_nonnull_class(p34, 16470384, descr=<Guard0x382fd00>) [p22, p20, p16, p1, p24, p27, p25, p10, p8]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+789: p36 = new_with_vtable(descr=<SizeDescr 48>)
+836: p37 = new_with_vtable(descr=<SizeDescr 32>)
+847: setfield_gc(p37, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+855: p40 = new_array_clear(4, descr=<ArrayP 8>)
+881: setarrayitem_gc(p40, 0, ConstPtr(ptr42), descr=<ArrayP 8>)
+885: setarrayitem_gc(p40, 1, p16, descr=<ArrayP 8>)
+889: setarrayitem_gc(p40, 2, p20, descr=<ArrayP 8>)
+893: setarrayitem_gc(p40, 3, p22, descr=<ArrayP 8>)
+897: setfield_gc(p37, p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+908: setfield_gc(p37, ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+912: setfield_gc(p36, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+923: setfield_gc(p36, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+927: setfield_gc(p36, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+938: setfield_gc(p36, ConstPtr(ptr47), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+942: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+946: jump(p10, p34, p27, p8, p29, p36, p30, p31, p32, p14, p18, p29, p30, p31, descr=TargetToken(59469600))
+992: --end of the loop--
[3e4c22af957942f] jit-log-opt-loop}
[3e4c22af976e364] {jit-backend
[3e4c22af97ac1b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c
[3e4c22af97b2cec] jit-backend-dump}
[3e4c22af97bca40] {jit-backend-addr
Loop 2 ((cons AppRand15 AppRand16) from (cons AppRand15 AppRand16)) has address 0x7f4a5c1c613d to 0x7f4a5c1c6290 (bootstrap 0x7f4a5c1c60b0)
       gc table: 0x7f4a5c1c6050
       function: 0x7f4a5c1c60b0
         resops: 0x7f4a5c1c613d
       failures: 0x7f4a5c1c6290
            end: 0x7f4a5c1c63f3
[3e4c22af97bf748] jit-backend-addr}
[3e4c22af97c3592] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6167 +0  54010000
[3e4c22af97c47af] jit-backend-dump}
[3e4c22af97c7caa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c617d +0  5A010000
[3e4c22af97c8a4f] jit-backend-dump}
[3e4c22af97cba2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6193 +0  60010000
[3e4c22af97cc742] jit-backend-dump}
[3e4c22af97cf925] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c61a6 +0  69010000
[3e4c22af97d0612] jit-backend-dump}
[3e4c22af97d35a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c61ba +0  71010000
[3e4c22af97d42b0] jit-backend-dump}
[3e4c22af97d72ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c61d4 +0  8F010000
[3e4c22af97d7fe3] jit-backend-dump}
[3e4c22af97daef4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6200 +0  7F010000
[3e4c22af97dbbe8] jit-backend-dump}
[3e4c22af97dea3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6214 +0  87010000
[3e4c22af97df719] jit-backend-dump}
[3e4c22af97e262d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c622e +0  A5010000
[3e4c22af97e3311] jit-backend-dump}
[3e4c22af97e6c78] jit-backend}
[3e4c22af97ea808] {jit-log-opt-loop
# Loop 2 ((cons AppRand15 AppRand16) from (cons AppRand15 AppRand16)) : loop with 29 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(59469680))
+264: guard_class(p0, 16500016, descr=<Guard0x382fd60>) [p1, p0]
+283: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+287: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x382fdc0>) [p1, p0]
+305: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+309: guard_nonnull_class(p5, 16470384, descr=<Guard0x382fe20>) [p1, p0]
+327: guard_class(p1, 16437352, descr=<Guard0x38f0848>) [p1, p0]
+346: p8 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+357: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x38f0890>) [p1, p0]
+366: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+370: guard_not_invalidated(descr=<Guard0x38f08d8>) [p1, p0]
+370: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+374: guard_nonnull_class(p11, ConstClass(W_Vector), descr=<Guard0x382fe80>) [p1, p0]
+392: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (cons AppRand15 AppRand16)')
+396: label(p10, p11, p3, p5, p13, descr=TargetToken(59469760))
+424: guard_class(p13, 16437352, descr=<Guard0x382fee0>) [p13, p5, p3, p11, p10]
+436: p15 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+447: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x38f0920>) [p13, p5, p3, p11, p10]
+456: p17 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+460: guard_not_invalidated(descr=<Guard0x38f0968>) [p13, p5, p3, p11, p10]
+460: p18 = getfield_gc_r(p13, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+464: guard_nonnull_class(p18, ConstClass(W_Vector), descr=<Guard0x382ff40>) [p13, p5, p3, p11, p10]
+482: p20 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (cons AppRand15 AppRand16)')
+486: p21 = new_with_vtable(descr=<SizeDescr 24>)
+530: setfield_gc(p21, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+534: setfield_gc(p21, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+538: jump(p17, p18, p11, p21, p20, descr=TargetToken(59469760))
+576: --end of the loop--
[3e4c22af9808184] jit-log-opt-loop}
[3e4c22af9994837] {jit-backend
[3e4c22af9a113f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6560 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87E302000048FF04254070680266662E0F1F84000000000048FF0425702F0203488B8D300100008139700B01000F8500000000488B41104883F80172068138B09700000F8500000000488B1568FEFFFF4839D00F8400000000488B9538010000813AA81600000F8500000000488B5A084883FB017206813B900F00000F8500000000488B7108813E30B700000F8500000000488B7E104C8B054BFEFFFF4C39C70F85000000004C8B46184983F8017207418138B09700000F8500000000498B78084883FF017206813FF08C00000F85000000004C8B4E204983F9017207418139B09700000F85000000004D8B51084983FA01720741813AF08C00000F85000000004C8B66284983FC01720841813C24B09700000F85000000004D8B6C24084983FD01720841817D00F08C00000F85000000004C8B70084983FE01720741813EF08C00000F85000000004C8B7E0848899D40010000488B58104883FB017206813BB09700000F8500000000488B41184883F80172068138B09700000F85000000004C89F94889B5300100004889FE4C8985480100004D89D04C898D500100004D89E9488985580100004C89A56001000048898D680100004889B5700100004C8985780100004C898D80010000666666662E0F1F84000000000048FF0425902F02034C8B4B084983F9017207418139F08C00000F85000000004C8B43104983F8017207418138B09700000F85000000004889D3488B0C25F091F900488D9188000000483B14251092F9000F87CC00000048891425F091F90048C701A8160000488D513048C702F08C000048C7420805000000488D722048C706080E000048C74608050000004C8B25EEFCFFFF4C89661048897E184C8956204C896E284C89763048897210488B35D7FCFFFF48897218488BB540010000488971084C89791048895918488B1DC1FCFFFF48895920488951284C89C34889B5400100004C8BBD680100004889CA488BBD700100004C8B95780100004C8BAD800100004D89CEE9F8FEFFFF0F1F84000000000049BB50571C5C4A7F000041FFD3E90BFDFFFF49BB50651C5C4A7F00004C895D204D8D9BA0E5FFFF41FFD3E91FFFFFFFFF358BFBFFFF49BB10641C5C4A7F000041534D8D9BF0DBFFFF41FFE3FF3577FBFFFF49BB20641C5C4A7F000041534D8D9BE0DBFFFF41FFE3FF356BFBFFFF49BB30641C5C4A7F000041534D8D9BD0DBFFFF41FFE3FF3557FBFFFF49BB40641C5C4A7F000041534D8D9BC0DBFFFF41FFE3FF3543FBFFFF49BB50641C5C4A7F000041534D8D9BB0DBFFFF41FFE3FF352FFBFFFF49BB60641C5C4A7F000041534D8D9BA0DBFFFF41FFE3FF351BFBFFFF49BB70641C5C4A7F000041534D8D9B90DBFFFF41FFE3FF350FFBFFFF49BB80641C5C4A7F000041534D8D9B80DBFFFF41FFE3FF35FBFAFFFF49BB90641C5C4A7F000041534D8D9B70DBFFFF41FFE3FF35E7FAFFFF49BBA0641C5C4A7F000041534D8D9B60DBFFFF41FFE3FF35D3FAFFFF49BBB0641C5C4A7F000041534D8D9B50DBFFFF41FFE3FF35BFFAFFFF49BBC0641C5C4A7F000041534D8D9B40DBFFFF41FFE3FF35ABFAFFFF49BBD0641C5C4A7F000041534D8D9B30DBFFFF41FFE3FF3597FAFFFF49BBE0641C5C4A7F000041534D8D9B20DBFFFF41FFE3FF3583FAFFFF49BBF0641C5C4A7F000041534D8D9B10DBFFFF41FFE3FF356FFAFFFF49BB00651C5C4A7F000041534D8D9B00DBFFFF41FFE3FF355BFAFFFF49BB10651C5C4A7F000041534D8D9BF0DAFFFF41FFE3FF3547FAFFFF49BB20651C5C4A7F000041534D8D9BE0DAFFFF41FFE3FF3533FAFFFF49BB30651C5C4A7F000041534D8D9BD0DAFFFF41FFE3FF351FFAFFFF49BB40651C5C4A7F000041534D8D9BC0DAFFFF41FFE3
[3e4c22af9a1bb32] jit-backend-dump}
[3e4c22af9a25b45] {jit-backend-addr
Loop 3 ((if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)) has address 0x7f4a5c1c66bd to 0x7f4a5c1c69a0 (bootstrap 0x7f4a5c1c6630)
       gc table: 0x7f4a5c1c6560
       function: 0x7f4a5c1c6630
         resops: 0x7f4a5c1c66bd
       failures: 0x7f4a5c1c69a0
            end: 0x7f4a5c1c6bff
[3e4c22af9a2895e] jit-backend-addr}
[3e4c22af9a2cb2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c66e7 +0  E4020000
[3e4c22af9a2de6e] jit-backend-dump}
[3e4c22af9a3113f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c66fd +0  EA020000
[3e4c22af9a31f0c] jit-backend-dump}
[3e4c22af9a3502b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c670d +0  F6020000
[3e4c22af9a35d09] jit-backend-dump}
[3e4c22af9a38c60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6720 +0  FF020000
[3e4c22af9a39954] jit-backend-dump}
[3e4c22af9a3c800] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6736 +0  05030000
[3e4c22af9a3d492] jit-backend-dump}
[3e4c22af9a40491] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6746 +0  2D030000
[3e4c22af9a4115d] jit-backend-dump}
[3e4c22af9a4408f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c675a +0  35030000
[3e4c22af9a44d4f] jit-backend-dump}
[3e4c22af9a47b9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6771 +0  3A030000
[3e4c22af9a48834] jit-backend-dump}
[3e4c22af9a4b64d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6787 +0  40030000
[3e4c22af9a4c2c0] jit-backend-dump}
[3e4c22af9a4f0fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c679e +0  45030000
[3e4c22af9a4fd87] jit-backend-dump}
[3e4c22af9a52c73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c67b5 +0  4A030000
[3e4c22af9a53923] jit-backend-dump}
[3e4c22af9a56736] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c67cd +0  4E030000
[3e4c22af9a573ff] jit-backend-dump}
[3e4c22af9a5a249] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c67e6 +0  51030000
[3e4c22af9a5aec5] jit-backend-dump}
[3e4c22af9a5dd86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c67fd +0  56030000
[3e4c22af9a5ea00] jit-backend-dump}
[3e4c22af9a6186e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c681e +0  51030000
[3e4c22af9a6251c] jit-backend-dump}
[3e4c22af9a65363] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6834 +0  57030000
[3e4c22af9a65fc4] jit-backend-dump}
[3e4c22af9a68f0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c68ab +0  18030000
[3e4c22af9a69b94] jit-backend-dump}
[3e4c22af9a6c9f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c68c2 +0  1D030000
[3e4c22af9a6d66a] jit-backend-dump}
[3e4c22af9a710bf] jit-backend}
[3e4c22af9a74c92] {jit-log-opt-loop
# Loop 3 ((if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)) : loop with 70 ops
[p0, p1]
+357: label(p0, p1, descr=TargetToken(59469840))
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+376: guard_class(p0, 16500016, descr=<Guard0x382ffa0>) [p1, p0]
+395: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+399: guard_nonnull_class(p3, 16470384, descr=<Guard0x3908020>) [p1, p0]
+424: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+427: guard_false(i6, descr=<Guard0x38f0a40>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+433: guard_class(p1, 16437352, descr=<Guard0x38f0a88>) [p1, p0]
+452: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+456: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3908080>) [p1, p0]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+474: guard_not_invalidated(descr=<Guard0x38f0ad0>) [p1, p0]
+474: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+478: guard_class(p10, 16478448, descr=<Guard0x38f0b18>) [p1, p0]
+490: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+501: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x38f0b60>) [p1, p0]
+510: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+514: guard_nonnull_class(p14, 16470384, descr=<Guard0x39080e0>) [p1, p0]
+533: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+537: guard_nonnull_class(p16, ConstClass(W_Vector), descr=<Guard0x3908140>) [p1, p0]
+555: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+559: guard_nonnull_class(p18, 16470384, descr=<Guard0x39081a0>) [p1, p0]
+578: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+582: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3908200>) [p1, p0]
+601: p22 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+605: guard_nonnull_class(p22, 16470384, descr=<Guard0x3908260>) [p1, p0]
+625: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+630: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x39082c0>) [p1, p0]
+650: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+654: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3908320>) [p1, p0]
+673: p28 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+677: p29 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+688: guard_nonnull_class(p29, 16470384, descr=<Guard0x3908380>) [p1, p0]
+706: p31 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+710: guard_nonnull_class(p31, 16470384, descr=<Guard0x39083e0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+728: p33 = same_as_r(p28)
+731: p34 = same_as_r(p16)
+741: p35 = same_as_r(p20)
+751: p36 = same_as_r(p24)
+761: label(p10, p29, p31, p8, p28, p1, p16, p20, p24, p26, p14, p18, p22, p33, p34, p35, p36, descr=TargetToken(59469920))
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+824: guard_not_invalidated(descr=<Guard0x3908440>) [p26, p24, p20, p16, p1, p28, p31, p29, p10, p8]
+824: p37 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+828: guard_nonnull_class(p37, ConstClass(W_Vector), descr=<Guard0x39084a0>) [p26, p24, p20, p16, p1, p28, p31, p29, p10, p8]
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+847: p39 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+851: guard_nonnull_class(p39, 16470384, descr=<Guard0x3908500>) [p26, p24, p20, p16, p1, p28, p31, p29, p10, p8]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+870: p41 = new_with_vtable(descr=<SizeDescr 48>)
+917: p42 = new_with_vtable(descr=<SizeDescr 32>)
+928: setfield_gc(p42, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+936: p45 = new_array_clear(5, descr=<ArrayP 8>)
+962: setarrayitem_gc(p45, 0, ConstPtr(ptr47), descr=<ArrayP 8>)
+966: setarrayitem_gc(p45, 1, p16, descr=<ArrayP 8>)
+970: setarrayitem_gc(p45, 2, p20, descr=<ArrayP 8>)
+974: setarrayitem_gc(p45, 3, p24, descr=<ArrayP 8>)
+978: setarrayitem_gc(p45, 4, p26, descr=<ArrayP 8>)
+982: setfield_gc(p42, p45, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+993: setfield_gc(p42, ConstPtr(ptr52), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+997: setfield_gc(p41, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1008: setfield_gc(p41, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1012: setfield_gc(p41, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1023: setfield_gc(p41, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1027: setfield_gc(p41, p42, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1031: jump(p10, p39, p31, p8, p33, p41, p34, p35, p36, p37, p14, p18, p22, p33, p34, p35, p36, descr=TargetToken(59469920))
+1088: --end of the loop--
[3e4c22af9ab6b3f] jit-log-opt-loop}
[3e4c22af9be9b37] {jit-backend
[3e4c22af9c22690] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6cd
[3e4c22af9c282a6] jit-backend-dump}
[3e4c22af9c31ba6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6d44 +0  1E000000
[3e4c22af9c32e90] jit-backend-dump}
[3e4c22af9c368fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6e45 +0  1E000000
[3e4c22af9c3768b] jit-backend-dump}
[3e4c22af9c3a8ba] {jit-backend-addr
bridge out of Guard 0x3908020 has address 0x7f4a5c1c6d40 to 0x7f4a5c1c6e40
       gc table: 0x7f4a5c1c6cd0
    jump target: 0x7f4a5c1c6d40
         resops: 0x7f4a5c1c6d4e
       failures: 0x7f4a5c1c6e40
            end: 0x7f4a5c1c6f9a
[3e4c22af9c3cae3] jit-backend-addr}
[3e4c22af9c3fe0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6d5e +0  04010000
[3e4c22af9c40c17] jit-backend-dump}
[3e4c22af9c43cb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6d6b +0  13010000
[3e4c22af9c449b5] jit-backend-dump}
[3e4c22af9c479df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6d7b +0  1F010000
[3e4c22af9c486a2] jit-backend-dump}
[3e4c22af9c4b5f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6d92 +0  24010000
[3e4c22af9c4c2a4] jit-backend-dump}
[3e4c22af9c4f354] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6da6 +0  2C010000
[3e4c22af9c50045] jit-backend-dump}
[3e4c22af9c5300d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6dba +0  34010000
[3e4c22af9c53d0d] jit-backend-dump}
[3e4c22af9c56cfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6dd2 +0  54010000
[3e4c22af9c57a31] jit-backend-dump}
[3e4c22af9c5a942] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6de3 +0  5F010000
[3e4c22af9c5b61d] jit-backend-dump}
[3e4c22af9c5e5bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6df0 +0  6E010000
[3e4c22af9c5f28d] jit-backend-dump}
[3e4c22af9c62157] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6e0b +0  6F010000
[3e4c22af9c62e32] jit-backend-dump}
[3e4c22af9c67c85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c66fd +0  3F060000
[3e4c22af9c68a46] jit-backend-dump}
[3e4c22af9c6f892] jit-backend}
[3e4c22af9c73582] {jit-log-opt-bridge
# bridge out of Guard 0x3908020 with 26 ops
[p0, p1]
+134: guard_class(p1, 16500016, descr=<Guard0x3908560>) [p0, p1]
+146: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+150: guard_nonnull(p3, descr=<Guard0x38f0ba8>) [p0, p1]
+166: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+169: guard_true(i5, descr=<Guard0x38f0bf0>) [p0, p1]
debug_merge_point(0, 0, 'lst5115')
+175: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+179: guard_nonnull_class(p6, 16470384, descr=<Guard0x39085c0>) [p0, p1]
+198: guard_class(p0, 16437352, descr=<Guard0x38f0c38>) [p0, p1]
+218: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+229: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x38f0c80>) [p0, p1]
+238: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+238: guard_not_invalidated(descr=<Guard0x38f0cc8>) [p0, p1]
+238: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+242: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3908620>) [p0, p1]
+262: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (loop5 (cdr rads4) lst5115)')
+266: guard_class(p14, 16437352, descr=<Guard0x38f0d10>) [p0, p1]
+279: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+283: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x38f0d58>) [p0, p1]
+292: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+296: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+300: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x3908680>) [p0, p1]
+319: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (cons AppRand15 AppRand16)')
+323: jump(p18, p19, p12, p6, p21, descr=TargetToken(59469760))
+368: --end of the loop--
[3e4c22af9c8e8fc] jit-log-opt-bridge}
[3e4c22af9dcefe5] {jit-backend
[3e4c22af9e3e7e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c70d
[3e4c22af9e4aeae] jit-backend-dump}
[3e4c22af9e54c02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7184 +0  27000000
[3e4c22af9e56061] jit-backend-dump}
[3e4c22af9e59b5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7405 +0  27000000
[3e4c22af9e5a996] jit-backend-dump}
[3e4c22af9e5db1a] {jit-backend-addr
bridge out of Guard 0x382fee0 has address 0x7f4a5c1c7180 to 0x7f4a5c1c7400
       gc table: 0x7f4a5c1c70d0
    jump target: 0x7f4a5c1c7180
         resops: 0x7f4a5c1c718e
       failures: 0x7f4a5c1c7400
            end: 0x7f4a5c1c7603
[3e4c22af9e5fe7b] jit-backend-addr}
[3e4c22af9e632e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c719e +0  A1020000
[3e4c22af9e64131] jit-backend-dump}
[3e4c22af9e671b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c71b2 +0  A9020000
[3e4c22af9e67e9e] jit-backend-dump}
[3e4c22af9e6af24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c71d1 +0  C2020000
[3e4c22af9e6bbf6] jit-backend-dump}
[3e4c22af9e6eae2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c71e4 +0  CB020000
[3e4c22af9e6f77d] jit-backend-dump}
[3e4c22af9e726b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c71f8 +0  D3020000
[3e4c22af9e73357] jit-backend-dump}
[3e4c22af9e7623d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7206 +0  E1020000
[3e4c22af9e76ecc] jit-backend-dump}
[3e4c22af9e79e2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c721d +0  E6020000
[3e4c22af9e7aaca] jit-backend-dump}
[3e4c22af9e7d991] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7235 +0  EA020000
[3e4c22af9e7e60e] jit-backend-dump}
[3e4c22af9e814f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c724d +0  EE020000
[3e4c22af9e8217f] jit-backend-dump}
[3e4c22af9e8504d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7265 +0  F2020000
[3e4c22af9e85cc6] jit-backend-dump}
[3e4c22af9e88ba6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c727d +0  F6020000
[3e4c22af9e8981f] jit-backend-dump}
[3e4c22af9e8c708] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7295 +0  FA020000
[3e4c22af9e8d3b3] jit-backend-dump}
[3e4c22af9e902a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c72ac +0  FF020000
[3e4c22af9e90f3a] jit-backend-dump}
[3e4c22af9e93dec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c72c4 +0  03030000
[3e4c22af9e94a9f] jit-backend-dump}
[3e4c22af9e979b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c72de +0  05030000
[3e4c22af9e9862f] jit-backend-dump}
[3e4c22af9e9b85b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6200 +0  7C0F0000
[3e4c22af9e9c50f] jit-backend-dump}
[3e4c22af9ea060f] jit-backend}
[3e4c22af9ea409b] {jit-log-opt-bridge
# bridge out of Guard 0x382fee0 with 65 ops
[p0, p1, p2, p3, p4]
+198: guard_class(p0, 16437896, descr=<Guard0x39086e0>) [p0, p1, p2, p3, p4]
+210: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+221: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x38f0de8>) [p0, p1, p2, p3, p4]
+230: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+230: guard_not_invalidated(descr=<Guard0x38f0e30>) [p0, p1, p2, p3, p4]
+230: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+234: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+238: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (cons AppRand15 AppRand16)')
+242: guard_nonnull_class(p9, 16478448, descr=<Guard0x3908740>) [p0, p1, p2, p3, p4]
+261: guard_nonnull_class(p10, 16470384, descr=<Guard0x39087a0>) [p0, p1, p2, p3, p4]
+280: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+291: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x38f0e78>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+300: guard_class(p11, 16437896, descr=<Guard0x38f0ec0>) [p0, p1, p2, p3, p4]
+314: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+318: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x3908800>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+337: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+341: guard_nonnull_class(p19, 16470384, descr=<Guard0x3908860>) [p0, p1, p2, p3, p4]
+361: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+366: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x39088c0>) [p0, p1, p2, p3, p4]
+385: p23 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+389: guard_nonnull_class(p23, 16470384, descr=<Guard0x3908920>) [p0, p1, p2, p3, p4]
+409: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+414: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x3908980>) [p0, p1, p2, p3, p4]
+433: p27 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+437: guard_nonnull_class(p27, 16470384, descr=<Guard0x39089e0>) [p0, p1, p2, p3, p4]
+457: p29 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+462: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x3908a40>) [p0, p1, p2, p3, p4]
+480: p31 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+484: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x3908aa0>) [p0, p1, p2, p3, p4]
+504: p33 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+508: p34 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+512: guard_nonnull_class(p34, 16470384, descr=<Guard0x3908b00>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+530: p36 = new_with_vtable(descr=<SizeDescr 32>)
+577: p37 = new_with_vtable(descr=<SizeDescr 24>)
+588: setfield_gc(p37, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+606: p38 = new_with_vtable(descr=<SizeDescr 24>)
+617: setfield_gc(p38, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+621: setfield_gc(p38, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+625: setfield_gc(p37, p38, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+629: p39 = new_with_vtable(descr=<SizeDescr 48>)
+640: p40 = new_with_vtable(descr=<SizeDescr 32>)
+651: setfield_gc(p40, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+659: p43 = new_array_clear(5, descr=<ArrayP 8>)
+692: setarrayitem_gc(p43, 0, ConstPtr(ptr45), descr=<ArrayP 8>)
+696: setarrayitem_gc(p43, 1, p21, descr=<ArrayP 8>)
+700: setarrayitem_gc(p43, 2, p25, descr=<ArrayP 8>)
+704: setarrayitem_gc(p43, 3, p29, descr=<ArrayP 8>)
+708: setarrayitem_gc(p43, 4, p31, descr=<ArrayP 8>)
+712: setfield_gc(p40, p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+723: setfield_gc(p40, ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+734: setfield_gc(p39, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+746: setfield_gc(p39, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+751: setfield_gc(p39, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+756: setfield_gc(p39, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+761: setfield_gc(p36, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+772: setfield_gc(p36, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+776: setfield_gc(p36, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+780: setfield_gc(p39, p40, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+785: jump(p36, p39, descr=TargetToken(59469840))
+816: --end of the loop--
[3e4c22af9ede5c0] jit-log-opt-bridge}
[3e4c22afa178e5a] {jit-backend
[3e4c22afa2122ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c77a
[3e4c22afa21c764] jit-backend-dump}
[3e4c22afa226e34] {jit-backend-addr
Loop 6 ((if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)) has address 0x7f4a5c1c78fd to 0x7f4a5c1c7bc0 (bootstrap 0x7f4a5c1c7870)
       gc table: 0x7f4a5c1c77a0
       function: 0x7f4a5c1c7870
         resops: 0x7f4a5c1c78fd
       failures: 0x7f4a5c1c7bc0
            end: 0x7f4a5c1c7e57
[3e4c22afa229d66] jit-backend-addr}
[3e4c22afa22dfeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7927 +0  C4020000
[3e4c22afa22f380] jit-backend-dump}
[3e4c22afa232862] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c793d +0  CA020000
[3e4c22afa233712] jit-backend-dump}
[3e4c22afa236889] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c794d +0  D6020000
[3e4c22afa2375b7] jit-backend-dump}
[3e4c22afa23a4f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7960 +0  DF020000
[3e4c22afa23b202] jit-backend-dump}
[3e4c22afa23e061] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7976 +0  E5020000
[3e4c22afa23ed7d] jit-backend-dump}
[3e4c22afa241c01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7986 +0  F1020000
[3e4c22afa24290d] jit-backend-dump}
[3e4c22afa2457bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c799a +0  F9020000
[3e4c22afa2464bc] jit-backend-dump}
[3e4c22afa2492f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c79b3 +0  FC020000
[3e4c22afa249fea] jit-backend-dump}
[3e4c22afa24cfac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c79ca +0  1D030000
[3e4c22afa24dca9] jit-backend-dump}
[3e4c22afa250c81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c79e2 +0  21030000
[3e4c22afa2519b2] jit-backend-dump}
[3e4c22afa2548cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c79f4 +0  2B030000
[3e4c22afa2555a4] jit-backend-dump}
[3e4c22afa258406] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7a0c +0  2F030000
[3e4c22afa2590fa] jit-backend-dump}
[3e4c22afa25bf10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7a16 +0  41030000
[3e4c22afa25cc04] jit-backend-dump}
[3e4c22afa25fad4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7a23 +0  50030000
[3e4c22afa2607da] jit-backend-dump}
[3e4c22afa263602] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7a34 +0  5B030000
[3e4c22afa2642f6] jit-backend-dump}
[3e4c22afa267103] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7a50 +0  5B030000
[3e4c22afa267e09] jit-backend-dump}
[3e4c22afa26abfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7a6d +0  5A030000
[3e4c22afa26b8eb] jit-backend-dump}
[3e4c22afa26e72f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7a8b +0  58030000
[3e4c22afa26f42c] jit-backend-dump}
[3e4c22afa2722a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7aed +0  2E030000
[3e4c22afa272fb3] jit-backend-dump}
[3e4c22afa275ddb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7b05 +0  32030000
[3e4c22afa276abc] jit-backend-dump}
[3e4c22afa27a491] jit-backend}
[3e4c22afa27e122] {jit-log-opt-loop
# Loop 6 ((if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)) : loop with 86 ops
[p0, p1]
+357: label(p0, p1, descr=TargetToken(59470000))
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+376: guard_class(p0, 16500016, descr=<Guard0x3908b60>) [p1, p0]
+395: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+399: guard_nonnull_class(p3, 16470384, descr=<Guard0x3908bc0>) [p1, p0]
+424: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+427: guard_false(i6, descr=<Guard0x38f0f08>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+433: guard_class(p1, 16437896, descr=<Guard0x38f0f50>) [p1, p0]
+452: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+456: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3908c20>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+474: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+478: guard_class(p10, 16479200, descr=<Guard0x38f0f98>) [p1, p0]
+490: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+501: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x38f0fe0>) [p1, p0]
+510: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+514: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+518: p16 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+522: guard_class(p16, 16505296, descr=<Guard0x38f1028>) [p1, p0]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+535: guard_not_invalidated(descr=<Guard0x38f1070>) [p1, p0]
+535: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+539: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x3908c80>) [p1, p0]
+558: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+562: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3908ce0>) [p1, p0]
+582: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+586: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+591: i24 = int_eq(i22, i23)
+594: guard_false(i24, descr=<Guard0x38f10b8>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+600: p25 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+604: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x3908d40>) [p1, p0]
+624: i28 = int_ge(i23, 0)
+628: guard_true(i28, descr=<Guard0x38f1100>) [p1, p0]
+634: i29 = getfield_gc_i(p25, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+638: i30 = int_lt(i23, i29)
+641: guard_true(i30, descr=<Guard0x38f1148>) [p1, p0]
+647: p31 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+651: guard_class(p31, 16622984, descr=<Guard0x38f1190>) [p1, p0]
+664: p33 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+668: p34 = getarrayitem_gc_r(p33, i23, descr=<ArrayP 8>)
+680: guard_class(p34, 16470384, descr=<Guard0x38f11d8>) [p1, p0]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+692: p36 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+703: guard_nonnull_class(p36, 16470384, descr=<Guard0x3908da0>) [p1, p0]
+721: p38 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+732: guard_nonnull_class(p38, 16470384, descr=<Guard0x3908e00>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+751: p40 = same_as_r(p15)
+754: p41 = same_as_r(p14)
+764: p42 = same_as_r(p16)
+774: label(p10, p36, p38, p8, p16, p1, p14, p15, p3, p34, p40, p41, p42, p18, p20, p25, p33, i23, descr=TargetToken(59470080))
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
debug_merge_point(0, 0, '(= nc35084 nc4)')
+824: guard_not_invalidated(descr=<Guard0x3908e60>) [p40, p41, p42, p3, p15, p14, p34, p1, p16, p38, p36, p10, p8]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+824: p43 = getarrayitem_gc_r(p33, i23, descr=<ArrayP 8>)
+836: guard_class(p43, 16470384, descr=<Guard0x38f1220>) [p40, p41, p42, p3, p15, p14, p34, p1, p16, p38, p36, p10, p8]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+849: p45 = getfield_gc_r(p36, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+853: guard_nonnull_class(p45, 16470384, descr=<Guard0x3908ec0>) [p40, p41, p42, p3, p15, p14, p34, p1, p16, p38, p36, p10, p8]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+873: p47 = new_with_vtable(descr=<SizeDescr 56>)
+921: p48 = new_with_vtable(descr=<SizeDescr 48>)
+932: setfield_gc(p48, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+943: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+947: setfield_gc(p48, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+951: setfield_gc(p48, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+955: setfield_gc(p48, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+959: i50 = arraylen_gc(p33, descr=<ArrayP 8>)
+959: setfield_gc(p47, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+970: setfield_gc(p47, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+974: setfield_gc(p47, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+992: setfield_gc(p47, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+996: setfield_gc(p47, p48, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1000: setfield_gc(p47, p34, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1004: jump(p10, p45, p38, p8, p42, p47, p41, p40, p36, p43, p40, p41, p42, p18, p20, p25, p33, i23, descr=TargetToken(59470080))
+1056: --end of the loop--
[3e4c22afa2cd31e] jit-log-opt-loop}
[3e4c22afa3ae14c] {jit-backend
[3e4c22afa41f251] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7f
[3e4c22afa426a20] jit-backend-dump}
[3e4c22afa4307ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7f94 +0  27000000
[3e4c22afa431de4] jit-backend-dump}
[3e4c22afa43597a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8225 +0  27000000
[3e4c22afa43697a] jit-backend-dump}
[3e4c22afa439bda] {jit-backend-addr
bridge out of Guard 0x3908500 has address 0x7f4a5c1c7f90 to 0x7f4a5c1c8220
       gc table: 0x7f4a5c1c7f20
    jump target: 0x7f4a5c1c7f90
         resops: 0x7f4a5c1c7f9e
       failures: 0x7f4a5c1c8220
            end: 0x7f4a5c1c837b
[3e4c22afa43bfe9] jit-backend-addr}
[3e4c22afa43f46d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7fbe +0  BD020000
[3e4c22afa4402b1] jit-backend-dump}
[3e4c22afa4433c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7fd6 +0  C1020000
[3e4c22afa444141] jit-backend-dump}
[3e4c22afa4472d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7fed +0  C6020000
[3e4c22afa447fe6] jit-backend-dump}
[3e4c22afa44afe0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8005 +0  CA020000
[3e4c22afa44bce6] jit-backend-dump}
[3e4c22afa44ec9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c801b +0  D0020000
[3e4c22afa44f97a] jit-backend-dump}
[3e4c22afa45299e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8033 +0  D4020000
[3e4c22afa4536c6] jit-backend-dump}
[3e4c22afa45667c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8049 +0  DA020000
[3e4c22afa457369] jit-backend-dump}
[3e4c22afa45a2bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8060 +0  DF020000
[3e4c22afa45af74] jit-backend-dump}
[3e4c22afa45de88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8082 +0  D9020000
[3e4c22afa45eb26] jit-backend-dump}
[3e4c22afa461cce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c68c2 +0  CA160000
[3e4c22afa4629a0] jit-backend-dump}
[3e4c22afa4668ee] jit-backend}
[3e4c22afa46a377] {jit-log-opt-bridge
# bridge out of Guard 0x3908500 with 59 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+134: guard_not_invalidated(descr=<Guard0x3908f20>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+134: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+153: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x38f12f8>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+162: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+167: guard_nonnull_class(p12, 16470384, descr=<Guard0x3908f80>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+186: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+190: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x3908fe0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+209: p16 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+214: guard_nonnull_class(p16, 16470384, descr=<Guard0x3909040>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+233: p18 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+237: guard_nonnull_class(p18, ConstClass(W_Vector), descr=<Guard0x39090a0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+255: p20 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+260: guard_nonnull_class(p20, 16470384, descr=<Guard0x3909100>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+279: p22 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+283: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x3909160>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+301: p24 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+305: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x39091c0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
+324: p26 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+329: p27 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+340: guard_nonnull_class(p27, 16616448, descr=<Guard0x3909220>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+358: p29 = new_with_vtable(descr=<SizeDescr 32>)
+412: p30 = new_with_vtable(descr=<SizeDescr 48>)
+423: p31 = new_with_vtable(descr=<SizeDescr 48>)
+441: setfield_gc(p31, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+459: setfield_gc(p31, p5, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+463: setfield_gc(p31, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+474: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+478: p33 = new_with_vtable(descr=<SizeDescr 32>)
+489: setfield_gc(p33, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+497: p36 = new_array_clear(5, descr=<ArrayP 8>)
+537: setarrayitem_gc(p36, 0, ConstPtr(ptr38), descr=<ArrayP 8>)
+541: setarrayitem_gc(p36, 1, p3, descr=<ArrayP 8>)
+545: setarrayitem_gc(p36, 2, p2, descr=<ArrayP 8>)
+549: setarrayitem_gc(p36, 3, p1, descr=<ArrayP 8>)
+553: setarrayitem_gc(p36, 4, p0, descr=<ArrayP 8>)
+557: setfield_gc(p33, p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+568: setfield_gc(p33, ConstPtr(ptr43), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+572: setfield_gc(p31, p33, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+583: p44 = new_with_vtable(descr=<SizeDescr 32>)
+594: setfield_gc(p44, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+602: p47 = new_array_clear(5, descr=<ArrayP 8>)
+621: setarrayitem_gc(p47, 0, ConstPtr(ptr49), descr=<ArrayP 8>)
+625: setarrayitem_gc(p47, 1, p14, descr=<ArrayP 8>)
+629: setarrayitem_gc(p47, 2, p18, descr=<ArrayP 8>)
+633: setarrayitem_gc(p47, 3, p22, descr=<ArrayP 8>)
+637: setarrayitem_gc(p47, 4, p24, descr=<ArrayP 8>)
+641: setfield_gc(p44, p47, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+645: setfield_gc(p44, ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+649: setfield_gc(p29, p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+660: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+671: setfield_gc(p29, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+682: setfield_gc(p30, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+694: setfield_gc(p30, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+706: setfield_gc(p30, p31, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+711: setfield_gc(p30, ConstPtr(ptr55), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+723: setfield_gc(p30, p44, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+728: jump(p29, p30, descr=TargetToken(59469840))
+768: --end of the loop--
[3e4c22afa4a2963] jit-log-opt-bridge}
[3e4c22afa6f02b7] {jit-backend
[3e4c22afa748a2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c84b
[3e4c22afa750b75] jit-backend-dump}
[3e4c22afa75a8e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8554 +0  27000000
[3e4c22afa75bec8] jit-backend-dump}
[3e4c22afa75fb56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8735 +0  27000000
[3e4c22afa7609cb] jit-backend-dump}
[3e4c22afa763c38] {jit-backend-addr
bridge out of Guard 0x38f10b8 has address 0x7f4a5c1c8550 to 0x7f4a5c1c8730
       gc table: 0x7f4a5c1c84b0
    jump target: 0x7f4a5c1c8550
         resops: 0x7f4a5c1c855e
       failures: 0x7f4a5c1c8730
            end: 0x7f4a5c1c893d
[3e4c22afa7661b0] jit-backend-addr}
[3e4c22afa769542] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c856e +0  0B020000
[3e4c22afa76a36e] jit-backend-dump}
[3e4c22afa76d584] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8585 +0  10020000
[3e4c22afa76e2d7] jit-backend-dump}
[3e4c22afa77129c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8595 +0  1C020000
[3e4c22afa771fbe] jit-backend-dump}
[3e4c22afa774eaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c85a1 +0  2C020000
[3e4c22afa775bbf] jit-backend-dump}
[3e4c22afa778a99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c85b8 +0  31020000
[3e4c22afa7797ab] jit-backend-dump}
[3e4c22afa77c63e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c85ca +0  3B020000
[3e4c22afa77d354] jit-backend-dump}
[3e4c22afa780313] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c85de +0  43020000
[3e4c22afa781022] jit-backend-dump}
[3e4c22afa783e97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c85f7 +0  46020000
[3e4c22afa784b97] jit-backend-dump}
[3e4c22afa787af7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c860e +0  67020000
[3e4c22afa788810] jit-backend-dump}
[3e4c22afa78b66c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8624 +0  6D020000
[3e4c22afa78c372] jit-backend-dump}
[3e4c22afa78f185] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8635 +0  78020000
[3e4c22afa78fe94] jit-backend-dump}
[3e4c22afa792cc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c864b +0  7E020000
[3e4c22afa7939d2] jit-backend-dump}
[3e4c22afa7967ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8661 +0  84020000
[3e4c22afa79752b] jit-backend-dump}
[3e4c22afa79a347] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c866b +0  96020000
[3e4c22afa79b04d] jit-backend-dump}
[3e4c22afa79deac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c867e +0  9F020000
[3e4c22afa79ebd7] jit-backend-dump}
[3e4c22afa7a1d61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c79f4 +0  580B0000
[3e4c22afa7a2aa7] jit-backend-dump}
[3e4c22afa7a6934] jit-backend}
[3e4c22afa7aa276] {jit-log-opt-bridge
# bridge out of Guard 0x38f10b8 with 60 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x39092e0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16470384, descr=<Guard0x3909340>) [p0, p1]
+224: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+227: guard_false(i6, descr=<Guard0x38f1340>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+233: guard_class(p0, 16437896, descr=<Guard0x38f1388>) [p0, p1]
+245: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+249: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x39093a0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+268: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+272: guard_class(p10, 16479200, descr=<Guard0x38f13d0>) [p0, p1]
+286: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+297: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x38f1418>) [p0, p1]
+306: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+310: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+314: p16 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+318: guard_class(p16, 16505296, descr=<Guard0x38f1460>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+331: guard_not_invalidated(descr=<Guard0x38f14a8>) [p0, p1]
+331: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+335: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x3909400>) [p0, p1]
+354: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+358: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3909460>) [p0, p1]
+376: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+380: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+384: i24 = int_eq(i22, i23)
+387: guard_true(i24, descr=<Guard0x38f14f0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+393: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+397: guard_nonnull_class(p25, 16470384, descr=<Guard0x39094c0>) [p0, p1]
+415: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+419: guard_nonnull_class(p27, 16470384, descr=<Guard0x3909520>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+437: i30 = int_ge(i23, 0)
+441: guard_true(i30, descr=<Guard0x3909580>) [p27, p25, p10, p15, p14, p3, p0, p16, p8]
+447: i32 = int_le(i23, 9223372036854775806)
+460: guard_true(i32, descr=<Guard0x39095e0>) [p27, p25, p10, p15, p14, p3, p0, p16, p8]
+466: p33 = new_with_vtable(descr=<SizeDescr 32>)
+513: p34 = new_with_vtable(descr=<SizeDescr 56>)
+524: p35 = new_with_vtable(descr=<SizeDescr 48>)
+535: setfield_gc(p35, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+546: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+550: setfield_gc(p35, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+554: setfield_gc(p35, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+558: setfield_gc(p35, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+562: setfield_gc(p33, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+566: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+570: setfield_gc(p33, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+574: setfield_gc(p33, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+578: setfield_gc(p34, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+582: setfield_gc(p34, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+593: setfield_gc(p34, ConstPtr(ptr37), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+597: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+601: setfield_gc(p34, p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+605: jump(p33, p34, descr=TargetToken(59470000))
+640: --end of the loop--
[3e4c22afa7db940] jit-log-opt-bridge}
[3e4c22afa8ea83a] {jit-backend
[3e4c22afa960c5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8a
[3e4c22afa968165] jit-backend-dump}
[3e4c22afa971e6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8a94 +0  27000000
[3e4c22afa9733bd] jit-backend-dump}
[3e4c22afa9770d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8cc5 +0  27000000
[3e4c22afa978042] jit-backend-dump}
[3e4c22afa97b2c3] {jit-backend-addr
bridge out of Guard 0x3908ec0 has address 0x7f4a5c1c8a90 to 0x7f4a5c1c8cc0
       gc table: 0x7f4a5c1c8a20
    jump target: 0x7f4a5c1c8a90
         resops: 0x7f4a5c1c8a9e
       failures: 0x7f4a5c1c8cc0
            end: 0x7f4a5c1c8e37
[3e4c22afa97d78a] jit-backend-addr}
[3e4c22afa980b38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8abd +0  5E020000
[3e4c22afa981964] jit-backend-dump}
[3e4c22afa984b03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8ad5 +0  62020000
[3e4c22afa98585c] jit-backend-dump}
[3e4c22afa98886a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8aec +0  67020000
[3e4c22afa989561] jit-backend-dump}
[3e4c22afa98c493] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8afd +0  72020000
[3e4c22afa98d156] jit-backend-dump}
[3e4c22afa99008c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8b15 +0  76020000
[3e4c22afa990d4e] jit-backend-dump}
[3e4c22afa993cb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8b1f +0  88020000
[3e4c22afa994968] jit-backend-dump}
[3e4c22afa9978bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8b2d +0  96020000
[3e4c22afa99857f] jit-backend-dump}
[3e4c22afa99b490] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8b3f +0  A0020000
[3e4c22afa99c153] jit-backend-dump}
[3e4c22afa99f082] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8b57 +0  A4020000
[3e4c22afa99fd4e] jit-backend-dump}
[3e4c22afa9a2c68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8b72 +0  A5020000
[3e4c22afa9a3934] jit-backend-dump}
[3e4c22afa9a6adc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7b05 +0  870F0000
[3e4c22afa9a77bb] jit-backend-dump}
[3e4c22afa9ab780] jit-backend}
[3e4c22afa9af139] {jit-log-opt-bridge
# bridge out of Guard 0x3908ec0 with 63 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+134: guard_not_invalidated(descr=<Guard0x3909640>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+134: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+152: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x38f1538>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+161: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+165: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x39096a0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+185: p17 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+189: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3909700>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+208: i19 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+212: i20 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+216: i21 = int_eq(i19, i20)
+219: guard_false(i21, descr=<Guard0x38f1580>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+225: p22 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+229: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x3909760>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+249: i25 = int_ge(i20, 0)
+253: guard_true(i25, descr=<Guard0x38f15c8>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+259: i26 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+264: i27 = int_lt(i20, i26)
+267: guard_true(i27, descr=<Guard0x38f1610>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+273: p28 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+278: guard_class(p28, 16622984, descr=<Guard0x38f1658>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+291: p30 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+296: p31 = getarrayitem_gc_r(p30, i20, descr=<ArrayP 8>)
+301: guard_class(p31, 16470384, descr=<Guard0x38f16a0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
+315: p33 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+319: p34 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+323: guard_nonnull_class(p34, 16616448, descr=<Guard0x39097c0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+342: p36 = new_with_vtable(descr=<SizeDescr 32>)
+393: p37 = new_with_vtable(descr=<SizeDescr 56>)
+404: p38 = new_with_vtable(descr=<SizeDescr 56>)
+415: setfield_gc(p38, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+433: setfield_gc(p38, p8, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+437: setfield_gc(p38, p7, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+462: setfield_gc(p38, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+466: p40 = new_with_vtable(descr=<SizeDescr 48>)
+485: setfield_gc(p40, p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+497: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+502: setfield_gc(p40, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+507: setfield_gc(p40, p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+512: setfield_gc(p40, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+517: setfield_gc(p38, p40, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+521: setfield_gc(p38, p6, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+525: p42 = new_with_vtable(descr=<SizeDescr 48>)
+537: setfield_gc(p42, p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+548: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+552: setfield_gc(p42, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+563: setfield_gc(p42, p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+574: setfield_gc(p42, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+578: setfield_gc(p36, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+589: setfield_gc(p36, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+593: setfield_gc(p36, p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+604: setfield_gc(p37, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+615: setfield_gc(p37, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+619: setfield_gc(p37, p38, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+623: setfield_gc(p37, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+627: setfield_gc(p37, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+631: setfield_gc(p37, p31, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+642: jump(p36, p37, descr=TargetToken(59470000))
+672: --end of the loop--
[3e4c22afa9e714a] jit-log-opt-bridge}
[3e4c22afaae6dd1] {jit-backend
[3e4c22afab468fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c8f80 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F875302000048FF0425B0300203488B8D300100008139700B01000F8500000000488B41104883F80172068138B09700000F8500000000488B159BFEFFFF4839D00F8400000000488B9538010000813AC81800000F8500000000488B5A084883FB017206813B900F00000F8500000000488B7108813E30B700000F8500000000488B7E104C8B057EFEFFFF4C39C70F85000000004C8B46184983F8017207418138B09700000F8500000000498B78084883FF017206813FF08C00000F85000000004C8B46204983F8017207418138B09700000F85000000004D8B48084983F9017207418139F08C00000F85000000004C8B46284983F8017207418138B09700000F85000000004D8B50084983FA01720741813AF08C00000F85000000004C8B40084983F8017207418138F08C00000F85000000004C8B66084C8B68104983FD01720841817D00B09700000F8500000000488B41184883F80172068138B09700000F85000000004989D6488B0C25F091F900488D91A8000000483B14251092F9000F87E500000048891425F091F90048C701700B0100488D512048C702A81600004C8D7A3049C707F08C000049C747080500000048898D30010000498D4F2048C701080E000048C741080500000048899540010000488B1586FDFFFF48895110488979184C8949204C8951284C89413049894F10488B0D6FFDFFFF49894F18488B8D300100004C8969104C8BAD4001000049895D0848897108488941184D8965104D8975184C8B3546FDFFFF4D8975204D897D2848898D300100004C89AD3801000049BBD0661C5C4A7F000041FFE366662E0F1F84000000000049BB50571C5C4A7F000041FFD3E99BFDFFFF49BB688F1C5C4A7F00004C895D204D8D9B88BBFFFF41FFD3E906FFFFFFFF353BFCFFFF49BB588E1C5C4A7F000041534D8D9BA8B1FFFF41FFE3FF3527FCFFFF49BB688E1C5C4A7F000041534D8D9B98B1FFFF41FFE3FF351BFCFFFF49BB788E1C5C4A7F000041534D8D9B88B1FFFF41FFE3FF3507FCFFFF49BB888E1C5C4A7F000041534D8D9B78B1FFFF41FFE3FF35F3FBFFFF49BB988E1C5C4A7F000041534D8D9B68B1FFFF41FFE3FF35DFFBFFFF49BBA88E1C5C4A7F000041534D8D9B58B1FFFF41FFE3FF35CBFBFFFF49BBB88E1C5C4A7F000041534D8D9B48B1FFFF41FFE3FF35BFFBFFFF49BBC88E1C5C4A7F000041534D8D9B38B1FFFF41FFE3FF35ABFBFFFF49BBD88E1C5C4A7F000041534D8D9B28B1FFFF41FFE3FF3597FBFFFF49BBE88E1C5C4A7F000041534D8D9B18B1FFFF41FFE3FF3583FBFFFF49BBF88E1C5C4A7F000041534D8D9B08B1FFFF41FFE3FF356FFBFFFF49BB088F1C5C4A7F000041534D8D9BF8B0FFFF41FFE3FF355BFBFFFF49BB188F1C5C4A7F000041534D8D9BE8B0FFFF41FFE3FF3547FBFFFF49BB288F1C5C4A7F000041534D8D9BD8B0FFFF41FFE3FF3533FBFFFF49BB388F1C5C4A7F000041534D8D9BC8B0FFFF41FFE3FF351FFBFFFF49BB488F1C5C4A7F000041534D8D9BB8B0FFFF41FFE3FF350BFBFFFF49BB588F1C5C4A7F000041534D8D9BA8B0FFFF41FFE3
[3e4c22afab4fbad] jit-backend-dump}
[3e4c22afab59189] {jit-backend-addr
Loop 10 ((if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)) has address 0x7f4a5c1c90bd to 0x7f4a5c1c9310 (bootstrap 0x7f4a5c1c9030)
       gc table: 0x7f4a5c1c8f80
       function: 0x7f4a5c1c9030
         resops: 0x7f4a5c1c90bd
       failures: 0x7f4a5c1c9310
            end: 0x7f4a5c1c951b
[3e4c22afab5be2a] jit-backend-addr}
[3e4c22afab5fbb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c90d4 +0  67020000
[3e4c22afab60c9e] jit-backend-dump}
[3e4c22afab63f7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c90ea +0  6D020000
[3e4c22afab64cd7] jit-backend-dump}
[3e4c22afab67dff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c90fa +0  79020000
[3e4c22afab68ac8] jit-backend-dump}
[3e4c22afab6bbc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c910d +0  82020000
[3e4c22afab6c891] jit-backend-dump}
[3e4c22afab6f95a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9123 +0  88020000
[3e4c22afab70673] jit-backend-dump}
[3e4c22afab737c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9133 +0  B0020000
[3e4c22afab744cf] jit-backend-dump}
[3e4c22afab774c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9147 +0  B8020000
[3e4c22afab781f6] jit-backend-dump}
[3e4c22afab7b0ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c915e +0  BD020000
[3e4c22afab7bdab] jit-backend-dump}
[3e4c22afab7ebef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9174 +0  C3020000
[3e4c22afab7f8cd] jit-backend-dump}
[3e4c22afab82754] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c918b +0  C8020000
[3e4c22afab8343c] jit-backend-dump}
[3e4c22afab86298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c91a2 +0  CD020000
[3e4c22afab86f7f] jit-backend-dump}
[3e4c22afab89de2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c91b9 +0  D2020000
[3e4c22afab8aac3] jit-backend-dump}
[3e4c22afab8d919] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c91d0 +0  D7020000
[3e4c22afab8e616] jit-backend-dump}
[3e4c22afab9146c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c91e7 +0  DC020000
[3e4c22afab92151] jit-backend-dump}
[3e4c22afab94f8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9203 +0  DC020000
[3e4c22afab95c9b] jit-backend-dump}
[3e4c22afab98af1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9219 +0  E2020000
[3e4c22afab997cc] jit-backend-dump}
[3e4c22afab9d1b3] jit-backend}
[3e4c22afaba0c3c] {jit-log-opt-loop
# Loop 10 ((if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)) : entry bridge with 58 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
+325: guard_class(p0, 16500016, descr=<Guard0x3909820>) [p1, p0]
+344: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+348: guard_nonnull_class(p3, 16470384, descr=<Guard0x3909880>) [p1, p0]
+373: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+376: guard_false(i6, descr=<Guard0x38f1730>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+382: guard_class(p1, 16437896, descr=<Guard0x38f1778>) [p1, p0]
+401: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+405: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x39098e0>) [p1, p0]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+423: guard_not_invalidated(descr=<Guard0x38f17c0>) [p1, p0]
+423: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+427: guard_class(p10, 16478448, descr=<Guard0x38f1808>) [p1, p0]
+439: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+450: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x38f1850>) [p1, p0]
+459: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+463: guard_nonnull_class(p14, 16470384, descr=<Guard0x3909940>) [p1, p0]
+482: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+486: guard_nonnull_class(p16, ConstClass(W_Vector), descr=<Guard0x39099a0>) [p1, p0]
+504: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+508: guard_nonnull_class(p18, 16470384, descr=<Guard0x3909a00>) [p1, p0]
+527: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+531: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3909a60>) [p1, p0]
+550: p22 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+554: guard_nonnull_class(p22, 16470384, descr=<Guard0x3909ac0>) [p1, p0]
+573: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+577: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3909b20>) [p1, p0]
+596: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+600: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3909b80>) [p1, p0]
+619: p28 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+623: p29 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+627: guard_nonnull_class(p29, 16470384, descr=<Guard0x3909be0>) [p1, p0]
+647: p31 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+651: guard_nonnull_class(p31, 16470384, descr=<Guard0x3909c40>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+669: p33 = new_with_vtable(descr=<SizeDescr 32>)
+716: p34 = new_with_vtable(descr=<SizeDescr 48>)
+727: p35 = new_with_vtable(descr=<SizeDescr 32>)
+738: setfield_gc(p35, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+746: p38 = new_array_clear(5, descr=<ArrayP 8>)
+786: setarrayitem_gc(p38, 0, ConstPtr(ptr40), descr=<ArrayP 8>)
+790: setarrayitem_gc(p38, 1, p16, descr=<ArrayP 8>)
+794: setarrayitem_gc(p38, 2, p20, descr=<ArrayP 8>)
+798: setarrayitem_gc(p38, 3, p24, descr=<ArrayP 8>)
+802: setarrayitem_gc(p38, 4, p26, descr=<ArrayP 8>)
+806: setfield_gc(p35, p38, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+817: setfield_gc(p35, ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+821: setfield_gc(p33, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+832: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+843: setfield_gc(p33, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+847: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+851: setfield_gc(p34, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+855: setfield_gc(p34, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+866: setfield_gc(p34, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+870: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+874: jump(p33, p34, descr=TargetToken(59469840))
+912: --end of the loop--
[3e4c22afabd23e0] jit-log-opt-loop}
[3e4c22afad354ac] {jit-backend
[3e4c22afad8bae6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c
[3e4c22afad93af7] jit-backend-dump}
[3e4c22afad9da43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9714 +0  27000000
[3e4c22afad9ee59] jit-backend-dump}
[3e4c22afada2a1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9965 +0  27000000
[3e4c22afada389c] jit-backend-dump}
[3e4c22afada6ae3] {jit-backend-addr
bridge out of Guard 0x3908140 has address 0x7f4a5c1c9710 to 0x7f4a5c1c9960
       gc table: 0x7f4a5c1c9660
    jump target: 0x7f4a5c1c9710
         resops: 0x7f4a5c1c971e
       failures: 0x7f4a5c1c9960
            end: 0x7f4a5c1c9b7f
[3e4c22afada8d9f] jit-backend-addr}
[3e4c22afadac125] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c972e +0  71020000
[3e4c22afadacf04] jit-backend-dump}
[3e4c22afadb025f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9745 +0  76020000
[3e4c22afadb0f62] jit-backend-dump}
[3e4c22afadb40f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9755 +0  82020000
[3e4c22afadb4dec] jit-backend-dump}
[3e4c22afadb7d86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9761 +0  92020000
[3e4c22afadb8a6e] jit-backend-dump}
[3e4c22afadbbb06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9778 +0  97020000
[3e4c22afadbc7fd] jit-backend-dump}
[3e4c22afadbfc00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c978a +0  BD020000
[3e4c22afadc092e] jit-backend-dump}
[3e4c22afadc3958] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c979e +0  C5020000
[3e4c22afadc4618] jit-backend-dump}
[3e4c22afadc758d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c97b5 +0  CA020000
[3e4c22afadc8256] jit-backend-dump}
[3e4c22afadcb11a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c97cd +0  CE020000
[3e4c22afadcbe2d] jit-backend-dump}
[3e4c22afadced16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c97e4 +0  D3020000
[3e4c22afadcf9d2] jit-backend-dump}
[3e4c22afadd28ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c97fb +0  D8020000
[3e4c22afadd35be] jit-backend-dump}
[3e4c22afadd64fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9812 +0  DD020000
[3e4c22afadd722b] jit-backend-dump}
[3e4c22afadda1db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9829 +0  E2020000
[3e4c22afaddaeb3] jit-backend-dump}
[3e4c22afadddeac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9840 +0  E7020000
[3e4c22afaddebac] jit-backend-dump}
[3e4c22afade1a70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c985a +0  E9020000
[3e4c22afade274c] jit-backend-dump}
[3e4c22afade558f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9871 +0  EE020000
[3e4c22afade6252] jit-backend-dump}
[3e4c22afade935c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6787 +0  852F0000
[3e4c22afadea068] jit-backend-dump}
[3e4c22afadede0c] jit-backend}
[3e4c22afadf1736] {jit-log-opt-bridge
# bridge out of Guard 0x3908140 with 57 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x3909ca0>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull_class(p3, 16470384, descr=<Guard0x3909d00>) [p0, p1]
+240: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+243: guard_false(i6, descr=<Guard0x38f18e0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+249: guard_class(p0, 16437352, descr=<Guard0x38f1928>) [p0, p1]
+261: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+265: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3909d60>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+284: guard_not_invalidated(descr=<Guard0x38f1970>) [p0, p1]
+284: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: guard_class(p10, 16478448, descr=<Guard0x38f19b8>) [p0, p1]
+302: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+313: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x38f1a00>) [p0, p1]
+322: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+326: guard_nonnull_class(p14, 16470384, descr=<Guard0x3909dc0>) [p0, p1]
+345: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+349: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x3909e20>) [p0, p1]
+369: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+373: guard_nonnull_class(p18, 16470384, descr=<Guard0x3909e80>) [p0, p1]
+392: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+396: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3909ee0>) [p0, p1]
+415: p22 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+419: guard_nonnull_class(p22, 16470384, descr=<Guard0x3909f40>) [p0, p1]
+438: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+442: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3909fa0>) [p0, p1]
+461: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+465: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3916020>) [p0, p1]
+484: p28 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+488: p29 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+492: guard_nonnull_class(p29, 16470384, descr=<Guard0x3916080>) [p0, p1]
+510: p31 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+514: guard_nonnull_class(p31, 16470384, descr=<Guard0x39160e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+533: p33 = new_with_vtable(descr=<SizeDescr 32>)
+580: p34 = new_with_vtable(descr=<SizeDescr 48>)
+591: p35 = new_with_vtable(descr=<SizeDescr 32>)
+602: setfield_gc(p35, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+610: p38 = new_array_clear(5, descr=<ArrayP 8>)
+650: setarrayitem_gc(p38, 0, ConstPtr(ptr40), descr=<ArrayP 8>)
+654: setarrayitem_gc(p38, 1, p16, descr=<ArrayP 8>)
+658: setarrayitem_gc(p38, 2, p20, descr=<ArrayP 8>)
+662: setarrayitem_gc(p38, 3, p24, descr=<ArrayP 8>)
+666: setarrayitem_gc(p38, 4, p26, descr=<ArrayP 8>)
+670: setfield_gc(p35, p38, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+681: setfield_gc(p35, ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+685: setfield_gc(p33, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+696: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: setfield_gc(p33, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+711: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+715: setfield_gc(p34, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+719: setfield_gc(p34, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+730: setfield_gc(p34, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+734: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+738: jump(p33, p34, descr=TargetToken(59469840))
+768: --end of the loop--
[3e4c22afae246d4] jit-log-opt-bridge}
[3e4c22afaf6e8d8] {jit-backend
[3e4c22afafdae9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9cb
[3e4c22afafe35f4] jit-backend-dump}
[3e4c22afafed363] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9d64 +0  27000000
[3e4c22afafee6c7] jit-backend-dump}
[3e4c22afaff2178] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9fe5 +0  27000000
[3e4c22afaff30a5] jit-backend-dump}
[3e4c22afaff647a] {jit-backend-addr
bridge out of Guard 0x39088c0 has address 0x7f4a5c1c9d60 to 0x7f4a5c1c9fe0
       gc table: 0x7f4a5c1c9cb0
    jump target: 0x7f4a5c1c9d60
         resops: 0x7f4a5c1c9d6e
       failures: 0x7f4a5c1c9fe0
            end: 0x7f4a5c1ca1e3
[3e4c22afaff8616] jit-backend-addr}
[3e4c22afaffb98a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9d7e +0  A1020000
[3e4c22afaffc6f5] jit-backend-dump}
[3e4c22afafff924] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9d92 +0  A9020000
[3e4c22afb00060b] jit-backend-dump}
[3e4c22afb00370c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9db1 +0  C2020000
[3e4c22afb00440c] jit-backend-dump}
[3e4c22afb007423] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9dc4 +0  CB020000
[3e4c22afb00813f] jit-backend-dump}
[3e4c22afb00b0b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9dd8 +0  D3020000
[3e4c22afb00bd71] jit-backend-dump}
[3e4c22afb00ed2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9de6 +0  E1020000
[3e4c22afb00f9bc] jit-backend-dump}
[3e4c22afb0129ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9dfd +0  E6020000
[3e4c22afb01367e] jit-backend-dump}
[3e4c22afb016600] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9e15 +0  EA020000
[3e4c22afb0172d2] jit-backend-dump}
[3e4c22afb01a21a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9e2d +0  EE020000
[3e4c22afb01aeda] jit-backend-dump}
[3e4c22afb01ddea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9e45 +0  F2020000
[3e4c22afb01ea82] jit-backend-dump}
[3e4c22afb0219c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9e5d +0  F6020000
[3e4c22afb022687] jit-backend-dump}
[3e4c22afb025634] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9e75 +0  FA020000
[3e4c22afb0262cc] jit-backend-dump}
[3e4c22afb0291dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9e8c +0  FF020000
[3e4c22afb029e9c] jit-backend-dump}
[3e4c22afb02cdb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9ea4 +0  03030000
[3e4c22afb02da32] jit-backend-dump}
[3e4c22afb03094c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9ebe +0  05030000
[3e4c22afb0315f4] jit-backend-dump}
[3e4c22afb034774] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c724d +0  0F2B0000
[3e4c22afb03543a] jit-backend-dump}
[3e4c22afb0393a0] jit-backend}
[3e4c22afb03cca5] {jit-log-opt-bridge
# bridge out of Guard 0x39088c0 with 65 ops
[p0, p1, p2, p3, p4]
+198: guard_class(p0, 16437896, descr=<Guard0x3916140>) [p0, p1, p2, p3, p4]
+210: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+221: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x38f1a90>) [p0, p1, p2, p3, p4]
+230: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+230: guard_not_invalidated(descr=<Guard0x38f1ad8>) [p0, p1, p2, p3, p4]
+230: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+234: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+238: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (cons AppRand15 AppRand16)')
+242: guard_nonnull_class(p9, 16478448, descr=<Guard0x39161a0>) [p0, p1, p2, p3, p4]
+261: guard_nonnull_class(p10, 16470384, descr=<Guard0x39165c0>) [p0, p1, p2, p3, p4]
+280: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+291: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x38f1bb0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+300: guard_class(p11, 16437896, descr=<Guard0x38f1b68>) [p0, p1, p2, p3, p4]
+314: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+318: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x3916560>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+337: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+341: guard_nonnull_class(p19, 16470384, descr=<Guard0x3916500>) [p0, p1, p2, p3, p4]
+361: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+366: guard_nonnull_class(p21, ConstClass(W_Symbol), descr=<Guard0x39164a0>) [p0, p1, p2, p3, p4]
+385: p23 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+389: guard_nonnull_class(p23, 16470384, descr=<Guard0x3916440>) [p0, p1, p2, p3, p4]
+409: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+414: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x39163e0>) [p0, p1, p2, p3, p4]
+433: p27 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+437: guard_nonnull_class(p27, 16470384, descr=<Guard0x3916380>) [p0, p1, p2, p3, p4]
+457: p29 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+462: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x3916320>) [p0, p1, p2, p3, p4]
+480: p31 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+484: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x39162c0>) [p0, p1, p2, p3, p4]
+504: p33 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+508: p34 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+512: guard_nonnull_class(p34, 16470384, descr=<Guard0x3916260>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+530: p36 = new_with_vtable(descr=<SizeDescr 32>)
+577: p37 = new_with_vtable(descr=<SizeDescr 24>)
+588: setfield_gc(p37, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+606: p38 = new_with_vtable(descr=<SizeDescr 24>)
+617: setfield_gc(p38, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+621: setfield_gc(p38, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+625: setfield_gc(p37, p38, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+629: p39 = new_with_vtable(descr=<SizeDescr 48>)
+640: p40 = new_with_vtable(descr=<SizeDescr 32>)
+651: setfield_gc(p40, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+659: p43 = new_array_clear(5, descr=<ArrayP 8>)
+692: setarrayitem_gc(p43, 0, ConstPtr(ptr45), descr=<ArrayP 8>)
+696: setarrayitem_gc(p43, 1, p21, descr=<ArrayP 8>)
+700: setarrayitem_gc(p43, 2, p25, descr=<ArrayP 8>)
+704: setarrayitem_gc(p43, 3, p29, descr=<ArrayP 8>)
+708: setarrayitem_gc(p43, 4, p31, descr=<ArrayP 8>)
+712: setfield_gc(p40, p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+723: setfield_gc(p40, ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+734: setfield_gc(p39, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+746: setfield_gc(p39, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+751: setfield_gc(p39, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+756: setfield_gc(p39, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+761: setfield_gc(p36, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+772: setfield_gc(p36, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+776: setfield_gc(p36, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+780: setfield_gc(p39, p40, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+785: jump(p36, p39, descr=TargetToken(59469840))
+816: --end of the loop--
[3e4c22afb4f5460] jit-log-opt-bridge}
[3e4c22afb6268dd] {jit-backend
[3e4c22afb6852b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca
[3e4c22afb68d820] jit-backend-dump}
[3e4c22afb69812c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca3d4 +0  27000000
[3e4c22afb699710] jit-backend-dump}
[3e4c22afb69d55c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca625 +0  27000000
[3e4c22afb69e4e2] jit-backend-dump}
[3e4c22afb6a17f3] {jit-backend-addr
bridge out of Guard 0x3916080 has address 0x7f4a5c1ca3d0 to 0x7f4a5c1ca620
       gc table: 0x7f4a5c1ca320
    jump target: 0x7f4a5c1ca3d0
         resops: 0x7f4a5c1ca3de
       failures: 0x7f4a5c1ca620
            end: 0x7f4a5c1ca83f
[3e4c22afb6a3d50] jit-backend-addr}
[3e4c22afb6a7113] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca3ee +0  71020000
[3e4c22afb6a7f2c] jit-backend-dump}
[3e4c22afb6ab1d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca405 +0  76020000
[3e4c22afb6abf10] jit-backend-dump}
[3e4c22afb6aef5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca415 +0  82020000
[3e4c22afb6afc3d] jit-backend-dump}
[3e4c22afb6b2bea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca421 +0  92020000
[3e4c22afb6b3860] jit-backend-dump}
[3e4c22afb6b67b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca438 +0  97020000
[3e4c22afb6b7421] jit-backend-dump}
[3e4c22afb6ba543] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca44a +0  BD020000
[3e4c22afb6bb1c0] jit-backend-dump}
[3e4c22afb6be166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca45e +0  C5020000
[3e4c22afb6bedd0] jit-backend-dump}
[3e4c22afb6c1d06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca475 +0  CA020000
[3e4c22afb6c2973] jit-backend-dump}
[3e4c22afb6c5896] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca48d +0  CE020000
[3e4c22afb6c64fa] jit-backend-dump}
[3e4c22afb6c93e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca4a4 +0  D3020000
[3e4c22afb6ca062] jit-backend-dump}
[3e4c22afb6ccf6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca4bb +0  D8020000
[3e4c22afb6cdbe3] jit-backend-dump}
[3e4c22afb6d0ad2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca4d2 +0  DD020000
[3e4c22afb6d175b] jit-backend-dump}
[3e4c22afb6d4684] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca4e9 +0  E2020000
[3e4c22afb6d52e8] jit-backend-dump}
[3e4c22afb6d81f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca500 +0  E7020000
[3e4c22afb6d8e57] jit-backend-dump}
[3e4c22afb6dbd4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca51a +0  E9020000
[3e4c22afb6dc9c2] jit-backend-dump}
[3e4c22afb6df8c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca531 +0  EE020000
[3e4c22afb6e0537] jit-backend-dump}
[3e4c22afb6e3782] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c985a +0  720B0000
[3e4c22afb6e43ec] jit-backend-dump}
[3e4c22afb6e82c2] jit-backend}
[3e4c22afb6ebc72] {jit-log-opt-bridge
# bridge out of Guard 0x3916080 with 57 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x39167a0>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull_class(p3, 16470384, descr=<Guard0x3916800>) [p0, p1]
+240: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+243: guard_false(i6, descr=<Guard0x38f1d18>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+249: guard_class(p0, 16437352, descr=<Guard0x38f1d60>) [p0, p1]
+261: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+265: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3916860>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+284: guard_not_invalidated(descr=<Guard0x38f1da8>) [p0, p1]
+284: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: guard_class(p10, 16478448, descr=<Guard0x38f1df0>) [p0, p1]
+302: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+313: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x38f1e38>) [p0, p1]
+322: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+326: guard_nonnull_class(p14, 16470384, descr=<Guard0x39168c0>) [p0, p1]
+345: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+349: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x3916920>) [p0, p1]
+369: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+373: guard_nonnull_class(p18, 16470384, descr=<Guard0x3916980>) [p0, p1]
+392: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+396: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x39169e0>) [p0, p1]
+415: p22 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+419: guard_nonnull_class(p22, 16470384, descr=<Guard0x3916a40>) [p0, p1]
+438: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+442: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3916aa0>) [p0, p1]
+461: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+465: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3916b00>) [p0, p1]
+484: p28 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+488: p29 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+492: guard_nonnull_class(p29, 16616448, descr=<Guard0x3916b60>) [p0, p1]
+510: p31 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+514: guard_nonnull_class(p31, 16470384, descr=<Guard0x3916bc0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+533: p33 = new_with_vtable(descr=<SizeDescr 32>)
+580: p34 = new_with_vtable(descr=<SizeDescr 48>)
+591: p35 = new_with_vtable(descr=<SizeDescr 32>)
+602: setfield_gc(p35, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+610: p38 = new_array_clear(5, descr=<ArrayP 8>)
+650: setarrayitem_gc(p38, 0, ConstPtr(ptr40), descr=<ArrayP 8>)
+654: setarrayitem_gc(p38, 1, p16, descr=<ArrayP 8>)
+658: setarrayitem_gc(p38, 2, p20, descr=<ArrayP 8>)
+662: setarrayitem_gc(p38, 3, p24, descr=<ArrayP 8>)
+666: setarrayitem_gc(p38, 4, p26, descr=<ArrayP 8>)
+670: setfield_gc(p35, p38, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+681: setfield_gc(p35, ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+685: setfield_gc(p33, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+696: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: setfield_gc(p33, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+711: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+715: setfield_gc(p34, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+719: setfield_gc(p34, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+730: setfield_gc(p34, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+734: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+738: jump(p33, p34, descr=TargetToken(59469840))
+768: --end of the loop--
[3e4c22afb71f2d1] jit-log-opt-bridge}
[3e4c22afb959443] {jit-backend
[3e4c22afb9b56b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ca
[3e4c22afb9bdae0] jit-backend-dump}
[3e4c22afb9c8240] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caa34 +0  27000000
[3e4c22afb9c987f] jit-backend-dump}
[3e4c22afb9cd4fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cac85 +0  27000000
[3e4c22afb9ce434] jit-backend-dump}
[3e4c22afb9d1812] {jit-backend-addr
bridge out of Guard 0x3909ee0 has address 0x7f4a5c1caa30 to 0x7f4a5c1cac80
       gc table: 0x7f4a5c1ca980
    jump target: 0x7f4a5c1caa30
         resops: 0x7f4a5c1caa3e
       failures: 0x7f4a5c1cac80
            end: 0x7f4a5c1cae9f
[3e4c22afb9d3c06] jit-backend-addr}
[3e4c22afb9d6e70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caa4e +0  71020000
[3e4c22afb9d7ce5] jit-backend-dump}
[3e4c22afb9daeec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caa65 +0  76020000
[3e4c22afb9dbbe3] jit-backend-dump}
[3e4c22afb9debb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caa75 +0  82020000
[3e4c22afb9df896] jit-backend-dump}
[3e4c22afb9e2852] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caa81 +0  92020000
[3e4c22afb9e3576] jit-backend-dump}
[3e4c22afb9e6652] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caa98 +0  97020000
[3e4c22afb9e7330] jit-backend-dump}
[3e4c22afb9ea36a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caaaa +0  BD020000
[3e4c22afb9eb039] jit-backend-dump}
[3e4c22afb9edfe2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caabe +0  C5020000
[3e4c22afb9eed01] jit-backend-dump}
[3e4c22afb9f1c33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caad5 +0  CA020000
[3e4c22afb9f2902] jit-backend-dump}
[3e4c22afb9f5856] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1caaed +0  CE020000
[3e4c22afb9f6535] jit-backend-dump}
[3e4c22afb9f94a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cab04 +0  D3020000
[3e4c22afb9fa23a] jit-backend-dump}
[3e4c22afb9fd15a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cab1b +0  D8020000
[3e4c22afb9fde42] jit-backend-dump}
[3e4c22afba00d80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cab32 +0  DD020000
[3e4c22afba01a7a] jit-backend-dump}
[3e4c22afba049b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cab49 +0  E2020000
[3e4c22afba0569d] jit-backend-dump}
[3e4c22afba085d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cab60 +0  E7020000
[3e4c22afba092b1] jit-backend-dump}
[3e4c22afba0c1c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cab7a +0  E9020000
[3e4c22afba0cea3] jit-backend-dump}
[3e4c22afba0fe6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cab91 +0  EE020000
[3e4c22afba10b3a] jit-backend-dump}
[3e4c22afba13d73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c97fb +0  31120000
[3e4c22afba14a60] jit-backend-dump}
[3e4c22afba1885a] jit-backend}
[3e4c22afba1c204] {jit-log-opt-bridge
# bridge out of Guard 0x3909ee0 with 57 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x3916c20>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull_class(p3, 16470384, descr=<Guard0x3916c80>) [p0, p1]
+240: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+243: guard_false(i6, descr=<Guard0x38f1ec8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+249: guard_class(p0, 16437352, descr=<Guard0x38f1f10>) [p0, p1]
+261: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+265: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3916ce0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+284: guard_not_invalidated(descr=<Guard0x38f1f58>) [p0, p1]
+284: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: guard_class(p10, 16478448, descr=<Guard0x38f1fa0>) [p0, p1]
+302: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+313: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3a74020>) [p0, p1]
+322: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+326: guard_nonnull_class(p14, 16470384, descr=<Guard0x3916d40>) [p0, p1]
+345: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+349: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x3916da0>) [p0, p1]
+369: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+373: guard_nonnull_class(p18, 16470384, descr=<Guard0x3916e00>) [p0, p1]
+392: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+396: guard_nonnull_class(p20, ConstClass(W_Symbol), descr=<Guard0x3916e60>) [p0, p1]
+415: p22 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+419: guard_nonnull_class(p22, 16470384, descr=<Guard0x3916ec0>) [p0, p1]
+438: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+442: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3916f20>) [p0, p1]
+461: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+465: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3916f80>) [p0, p1]
+484: p28 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+488: p29 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+492: guard_nonnull_class(p29, 16616448, descr=<Guard0x3916fe0>) [p0, p1]
+510: p31 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+514: guard_nonnull_class(p31, 16470384, descr=<Guard0x3917040>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+533: p33 = new_with_vtable(descr=<SizeDescr 32>)
+580: p34 = new_with_vtable(descr=<SizeDescr 48>)
+591: p35 = new_with_vtable(descr=<SizeDescr 32>)
+602: setfield_gc(p35, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+610: p38 = new_array_clear(5, descr=<ArrayP 8>)
+650: setarrayitem_gc(p38, 0, ConstPtr(ptr40), descr=<ArrayP 8>)
+654: setarrayitem_gc(p38, 1, p16, descr=<ArrayP 8>)
+658: setarrayitem_gc(p38, 2, p20, descr=<ArrayP 8>)
+662: setarrayitem_gc(p38, 3, p24, descr=<ArrayP 8>)
+666: setarrayitem_gc(p38, 4, p26, descr=<ArrayP 8>)
+670: setfield_gc(p35, p38, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+681: setfield_gc(p35, ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+685: setfield_gc(p33, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+696: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: setfield_gc(p33, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+711: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+715: setfield_gc(p34, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+719: setfield_gc(p34, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+730: setfield_gc(p34, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+734: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+738: jump(p33, p34, descr=TargetToken(59469840))
+768: --end of the loop--
[3e4c22afba53b9f] jit-log-opt-bridge}
[3e4c22afbb91a44] {jit-backend
[3e4c22afbbfe008] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cafd
[3e4c22afbc06309] jit-backend-dump}
[3e4c22afbc101e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb084 +0  27000000
[3e4c22afbc115e2] jit-backend-dump}
[3e4c22afbc15233] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb305 +0  27000000
[3e4c22afbc16000] jit-backend-dump}
[3e4c22afbc1916e] {jit-backend-addr
bridge out of Guard 0x39163e0 has address 0x7f4a5c1cb080 to 0x7f4a5c1cb300
       gc table: 0x7f4a5c1cafd0
    jump target: 0x7f4a5c1cb080
         resops: 0x7f4a5c1cb08e
       failures: 0x7f4a5c1cb300
            end: 0x7f4a5c1cb503
[3e4c22afbc1b5b8] jit-backend-addr}
[3e4c22afbc1e8b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb09e +0  A1020000
[3e4c22afbc1f62b] jit-backend-dump}
[3e4c22afbc22710] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb0b2 +0  A9020000
[3e4c22afbc23431] jit-backend-dump}
[3e4c22afbc26828] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb0d1 +0  C2020000
[3e4c22afbc27537] jit-backend-dump}
[3e4c22afbc2a62e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb0e4 +0  CB020000
[3e4c22afbc2b359] jit-backend-dump}
[3e4c22afbc2e337] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb0f8 +0  D3020000
[3e4c22afbc2f037] jit-backend-dump}
[3e4c22afbc31f91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb106 +0  E1020000
[3e4c22afbc32c85] jit-backend-dump}
[3e4c22afbc35bb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb11d +0  E6020000
[3e4c22afbc368b1] jit-backend-dump}
[3e4c22afbc39858] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb135 +0  EA020000
[3e4c22afbc3a54b] jit-backend-dump}
[3e4c22afbc3d478] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb14d +0  EE020000
[3e4c22afbc3e168] jit-backend-dump}
[3e4c22afbc41109] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb165 +0  F2020000
[3e4c22afbc41e1b] jit-backend-dump}
[3e4c22afbc44d78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb17d +0  F6020000
[3e4c22afbc45aa9] jit-backend-dump}
[3e4c22afbc48a44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb195 +0  FA020000
[3e4c22afbc4973a] jit-backend-dump}
[3e4c22afbc4c676] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb1ac +0  FF020000
[3e4c22afbc4d3a7] jit-backend-dump}
[3e4c22afbc502a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb1c4 +0  03030000
[3e4c22afbc50fd0] jit-backend-dump}
[3e4c22afbc53edb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb1de +0  05030000
[3e4c22afbc54bed] jit-backend-dump}
[3e4c22afbc57d9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9e5d +0  1F120000
[3e4c22afbc58ad0] jit-backend-dump}
[3e4c22afbc5c8c4] jit-backend}
[3e4c22afbc60163] {jit-log-opt-bridge
# bridge out of Guard 0x39163e0 with 65 ops
[p0, p1, p2, p3, p4]
+198: guard_class(p0, 16437896, descr=<Guard0x39170a0>) [p0, p1, p2, p3, p4]
+210: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+221: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3a740b0>) [p0, p1, p2, p3, p4]
+230: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+230: guard_not_invalidated(descr=<Guard0x3a740f8>) [p0, p1, p2, p3, p4]
+230: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+234: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+238: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (cons AppRand15 AppRand16)')
+242: guard_nonnull_class(p9, 16478448, descr=<Guard0x3917100>) [p0, p1, p2, p3, p4]
+261: guard_nonnull_class(p10, 16470384, descr=<Guard0x3917160>) [p0, p1, p2, p3, p4]
+280: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+291: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3a74140>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+300: guard_class(p11, 16437896, descr=<Guard0x3a74188>) [p0, p1, p2, p3, p4]
+314: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+318: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x39171c0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+337: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+341: guard_nonnull_class(p19, 16470384, descr=<Guard0x3917220>) [p0, p1, p2, p3, p4]
+361: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+366: guard_nonnull_class(p21, ConstClass(W_Symbol), descr=<Guard0x3917280>) [p0, p1, p2, p3, p4]
+385: p23 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+389: guard_nonnull_class(p23, 16470384, descr=<Guard0x39172e0>) [p0, p1, p2, p3, p4]
+409: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+414: guard_nonnull_class(p25, ConstClass(W_Symbol), descr=<Guard0x3917340>) [p0, p1, p2, p3, p4]
+433: p27 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+437: guard_nonnull_class(p27, 16470384, descr=<Guard0x39173a0>) [p0, p1, p2, p3, p4]
+457: p29 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+462: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x3917400>) [p0, p1, p2, p3, p4]
+480: p31 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+484: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x3917460>) [p0, p1, p2, p3, p4]
+504: p33 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+508: p34 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+512: guard_nonnull_class(p34, 16470384, descr=<Guard0x39174c0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+530: p36 = new_with_vtable(descr=<SizeDescr 32>)
+577: p37 = new_with_vtable(descr=<SizeDescr 24>)
+588: setfield_gc(p37, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+606: p38 = new_with_vtable(descr=<SizeDescr 24>)
+617: setfield_gc(p38, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+621: setfield_gc(p38, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+625: setfield_gc(p37, p38, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+629: p39 = new_with_vtable(descr=<SizeDescr 48>)
+640: p40 = new_with_vtable(descr=<SizeDescr 32>)
+651: setfield_gc(p40, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+659: p43 = new_array_clear(5, descr=<ArrayP 8>)
+692: setarrayitem_gc(p43, 0, ConstPtr(ptr45), descr=<ArrayP 8>)
+696: setarrayitem_gc(p43, 1, p21, descr=<ArrayP 8>)
+700: setarrayitem_gc(p43, 2, p25, descr=<ArrayP 8>)
+704: setarrayitem_gc(p43, 3, p29, descr=<ArrayP 8>)
+708: setarrayitem_gc(p43, 4, p31, descr=<ArrayP 8>)
+712: setfield_gc(p40, p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+723: setfield_gc(p40, ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+734: setfield_gc(p39, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+746: setfield_gc(p39, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+751: setfield_gc(p39, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+756: setfield_gc(p39, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+761: setfield_gc(p36, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+772: setfield_gc(p36, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+776: setfield_gc(p36, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+780: setfield_gc(p39, p40, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+785: jump(p36, p39, descr=TargetToken(59469840))
+816: --end of the loop--
[3e4c22afbc957d1] jit-log-opt-bridge}
[3e4c22afbd97701] {jit-backend
[3e4c22afbdebfe7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb
[3e4c22afbdf3b1d] jit-backend-dump}
[3e4c22afbdfd644] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb704 +0  27000000
[3e4c22afbdfeb21] jit-backend-dump}
[3e4c22afbe024e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb955 +0  27000000
[3e4c22afbe032d2] jit-backend-dump}
[3e4c22afbe06493] {jit-backend-addr
bridge out of Guard 0x3916fe0 has address 0x7f4a5c1cb700 to 0x7f4a5c1cb950
       gc table: 0x7f4a5c1cb650
    jump target: 0x7f4a5c1cb700
         resops: 0x7f4a5c1cb70e
       failures: 0x7f4a5c1cb950
            end: 0x7f4a5c1cbb6f
[3e4c22afbe087aa] jit-backend-addr}
[3e4c22afbe0ba17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb71e +0  71020000
[3e4c22afbe0c7c2] jit-backend-dump}
[3e4c22afbe0f930] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb735 +0  76020000
[3e4c22afbe1062d] jit-backend-dump}
[3e4c22afbe13698] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb745 +0  82020000
[3e4c22afbe1439e] jit-backend-dump}
[3e4c22afbe1744e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb751 +0  92020000
[3e4c22afbe18139] jit-backend-dump}
[3e4c22afbe1b0c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb768 +0  97020000
[3e4c22afbe1bdac] jit-backend-dump}
[3e4c22afbe1ee1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb77a +0  BD020000
[3e4c22afbe1fb1f] jit-backend-dump}
[3e4c22afbe22a9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb78e +0  C5020000
[3e4c22afbe23779] jit-backend-dump}
[3e4c22afbe26701] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb7a5 +0  CA020000
[3e4c22afbe273af] jit-backend-dump}
[3e4c22afbe2a352] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb7bd +0  CE020000
[3e4c22afbe2aff3] jit-backend-dump}
[3e4c22afbe2df72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb7d4 +0  D3020000
[3e4c22afbe2ec20] jit-backend-dump}
[3e4c22afbe31b98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb7eb +0  D8020000
[3e4c22afbe32880] jit-backend-dump}
[3e4c22afbe3579a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb802 +0  DD020000
[3e4c22afbe36450] jit-backend-dump}
[3e4c22afbe3936a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb819 +0  E2020000
[3e4c22afbe3a00b] jit-backend-dump}
[3e4c22afbe3cf96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb830 +0  E7020000
[3e4c22afbe3dc3b] jit-backend-dump}
[3e4c22afbe40b61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb84a +0  E9020000
[3e4c22afbe41808] jit-backend-dump}
[3e4c22afbe44700] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cb861 +0  EE020000
[3e4c22afbe453ae] jit-backend-dump}
[3e4c22afbe48525] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cab7a +0  820B0000
[3e4c22afbe49210] jit-backend-dump}
[3e4c22afbe4d14e] jit-backend}
[3e4c22afbe50b4e] {jit-log-opt-bridge
# bridge out of Guard 0x3916fe0 with 57 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x3917520>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull_class(p3, 16470384, descr=<Guard0x3917580>) [p0, p1]
+240: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+243: guard_false(i6, descr=<Guard0x3a74218>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+249: guard_class(p0, 16437352, descr=<Guard0x3a74260>) [p0, p1]
+261: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+265: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x39175e0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+284: guard_not_invalidated(descr=<Guard0x3a742a8>) [p0, p1]
+284: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: guard_class(p10, 16478448, descr=<Guard0x3a742f0>) [p0, p1]
+302: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+313: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3a74338>) [p0, p1]
+322: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+326: guard_nonnull_class(p14, 16470384, descr=<Guard0x3917640>) [p0, p1]
+345: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+349: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x39176a0>) [p0, p1]
+369: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+373: guard_nonnull_class(p18, 16470384, descr=<Guard0x3917700>) [p0, p1]
+392: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+396: guard_nonnull_class(p20, ConstClass(W_Symbol), descr=<Guard0x3917760>) [p0, p1]
+415: p22 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+419: guard_nonnull_class(p22, 16470384, descr=<Guard0x39177c0>) [p0, p1]
+438: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+442: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3917820>) [p0, p1]
+461: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+465: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3917880>) [p0, p1]
+484: p28 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+488: p29 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+492: guard_nonnull_class(p29, 16470384, descr=<Guard0x39178e0>) [p0, p1]
+510: p31 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+514: guard_nonnull_class(p31, 16470384, descr=<Guard0x3917940>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+533: p33 = new_with_vtable(descr=<SizeDescr 32>)
+580: p34 = new_with_vtable(descr=<SizeDescr 48>)
+591: p35 = new_with_vtable(descr=<SizeDescr 32>)
+602: setfield_gc(p35, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+610: p38 = new_array_clear(5, descr=<ArrayP 8>)
+650: setarrayitem_gc(p38, 0, ConstPtr(ptr40), descr=<ArrayP 8>)
+654: setarrayitem_gc(p38, 1, p16, descr=<ArrayP 8>)
+658: setarrayitem_gc(p38, 2, p20, descr=<ArrayP 8>)
+662: setarrayitem_gc(p38, 3, p24, descr=<ArrayP 8>)
+666: setarrayitem_gc(p38, 4, p26, descr=<ArrayP 8>)
+670: setfield_gc(p35, p38, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+681: setfield_gc(p35, ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+685: setfield_gc(p33, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+696: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: setfield_gc(p33, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+711: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+715: setfield_gc(p34, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+719: setfield_gc(p34, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+730: setfield_gc(p34, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+734: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+738: jump(p33, p34, descr=TargetToken(59469840))
+768: --end of the loop--
[3e4c22afbe8387c] jit-log-opt-bridge}
[3e4c22afc07bf7a] {jit-backend
[3e4c22afc0b9115] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbc
[3e4c22afc0bfb48] jit-backend-dump}
[3e4c22afc0ca328] {jit-backend-addr
Loop 17 ((cons AppRand1 AppRand2) from (cons AppRand1 AppRand2)) has address 0x7f4a5c1cbd3d to 0x7f4a5c1cbe90 (bootstrap 0x7f4a5c1cbcb0)
       gc table: 0x7f4a5c1cbc50
       function: 0x7f4a5c1cbcb0
         resops: 0x7f4a5c1cbd3d
       failures: 0x7f4a5c1cbe90
            end: 0x7f4a5c1cbff3
[3e4c22afc0cd062] jit-backend-addr}
[3e4c22afc0d10f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbd67 +0  54010000
[3e4c22afc0d2388] jit-backend-dump}
[3e4c22afc0d5757] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbd7d +0  5A010000
[3e4c22afc0d65b7] jit-backend-dump}
[3e4c22afc0d9888] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbd93 +0  60010000
[3e4c22afc0da5cf] jit-backend-dump}
[3e4c22afc0dd774] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbda6 +0  69010000
[3e4c22afc0de504] jit-backend-dump}
[3e4c22afc0e4b82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbdba +0  71010000
[3e4c22afc0e5a2c] jit-backend-dump}
[3e4c22afc0e9147] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbdd4 +0  8F010000
[3e4c22afc0e9e5f] jit-backend-dump}
[3e4c22afc0ed0d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbe00 +0  7F010000
[3e4c22afc0edde1] jit-backend-dump}
[3e4c22afc0f0f96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbe14 +0  87010000
[3e4c22afc0f1ca5] jit-backend-dump}
[3e4c22afc0f4d8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbe2e +0  A5010000
[3e4c22afc0f5a8d] jit-backend-dump}
[3e4c22afc0f963c] jit-backend}
[3e4c22afc0fd24c] {jit-log-opt-loop
# Loop 17 ((cons AppRand1 AppRand2) from (cons AppRand1 AppRand2)) : loop with 31 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(61023440))
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (cons AppRand1 AppRand2)')
+264: guard_class(p0, 16500016, descr=<Guard0x39179a0>) [p1, p0]
+283: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+287: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x3917a00>) [p1, p0]
+305: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+309: guard_nonnull_class(p5, 16470384, descr=<Guard0x3917a60>) [p1, p0]
+327: guard_class(p1, 16437352, descr=<Guard0x3a74380>) [p1, p0]
+346: p8 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+357: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3a743c8>) [p1, p0]
+366: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+370: guard_not_invalidated(descr=<Guard0x3a74410>) [p1, p0]
+370: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+374: guard_nonnull_class(p11, ConstClass(W_Vector), descr=<Guard0x3917ac0>) [p1, p0]
+392: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (cons AppRand1 AppRand2)')
+396: label(p10, p11, p3, p5, p13, descr=TargetToken(61023520))
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (cons AppRand1 AppRand2)')
+424: guard_class(p13, 16437352, descr=<Guard0x3917b20>) [p13, p5, p3, p11, p10]
+436: p15 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+447: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x3a74458>) [p13, p5, p3, p11, p10]
+456: p17 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+460: guard_not_invalidated(descr=<Guard0x3a744a0>) [p13, p5, p3, p11, p10]
+460: p18 = getfield_gc_r(p13, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+464: guard_nonnull_class(p18, ConstClass(W_Vector), descr=<Guard0x3917b80>) [p13, p5, p3, p11, p10]
+482: p20 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (cons AppRand1 AppRand2)')
+486: p21 = new_with_vtable(descr=<SizeDescr 24>)
+530: setfield_gc(p21, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+534: setfield_gc(p21, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+538: jump(p17, p18, p11, p21, p20, descr=TargetToken(61023520))
+576: --end of the loop--
[3e4c22afc11e459] jit-log-opt-loop}
[3e4c22afc25c2ab] {jit-backend
[3e4c22afc2ca51d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc
[3e4c22afc2d307b] jit-backend-dump}
[3e4c22afc2dd0b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc254 +0  25000000
[3e4c22afc2de3c8] jit-backend-dump}
[3e4c22afc2e2053] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc4f5 +0  25000000
[3e4c22afc2e2e13] jit-backend-dump}
[3e4c22afc2e6067] {jit-backend-addr
bridge out of Guard 0x382f8e0 has address 0x7f4a5c1cc250 to 0x7f4a5c1cc4f0
       gc table: 0x7f4a5c1cc170
    jump target: 0x7f4a5c1cc250
         resops: 0x7f4a5c1cc25e
       failures: 0x7f4a5c1cc4f0
            end: 0x7f4a5c1cc77f
[3e4c22afc2e85be] jit-backend-addr}
[3e4c22afc2eb99f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc26e +0  C1020000
[3e4c22afc2ec78e] jit-backend-dump}
[3e4c22afc2efa6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc27b +0  D0020000
[3e4c22afc2f075f] jit-backend-dump}
[3e4c22afc2f383e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc28b +0  DC020000
[3e4c22afc2f44f1] jit-backend-dump}
[3e4c22afc2f751b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc2a2 +0  E1020000
[3e4c22afc2f81c6] jit-backend-dump}
[3e4c22afc2fb1bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc2b6 +0  E9020000
[3e4c22afc2fbe60] jit-backend-dump}
[3e4c22afc2fef3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc2ca +0  F1020000
[3e4c22afc2ffbef] jit-backend-dump}
[3e4c22afc302d9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc2e2 +0  11030000
[3e4c22afc303a42] jit-backend-dump}
[3e4c22afc306abc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc2f3 +0  1C030000
[3e4c22afc30777e] jit-backend-dump}
[3e4c22afc30a796] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc307 +0  24030000
[3e4c22afc30b44a] jit-backend-dump}
[3e4c22afc30e47d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc326 +0  21030000
[3e4c22afc30f127] jit-backend-dump}
[3e4c22afc3120ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc339 +0  2A030000
[3e4c22afc312d94] jit-backend-dump}
[3e4c22afc315d68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc34d +0  32030000
[3e4c22afc316a10] jit-backend-dump}
[3e4c22afc3199ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc359 +0  42030000
[3e4c22afc31a673] jit-backend-dump}
[3e4c22afc31d641] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc36f +0  48030000
[3e4c22afc31e2ca] jit-backend-dump}
[3e4c22afc3212b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc386 +0  4D030000
[3e4c22afc321f5b] jit-backend-dump}
[3e4c22afc324f54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc39c +0  53030000
[3e4c22afc325bf2] jit-backend-dump}
[3e4c22afc328bbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc3b3 +0  58030000
[3e4c22afc329862] jit-backend-dump}
[3e4c22afc32c843] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc3c9 +0  5E030000
[3e4c22afc32d4db] jit-backend-dump}
[3e4c22afc3304af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc3e0 +0  63030000
[3e4c22afc33116f] jit-backend-dump}
[3e4c22afc33413d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc402 +0  5D030000
[3e4c22afc334e03] jit-backend-dump}
[3e4c22afc33808e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5aed +0  5F670000
[3e4c22afc338d4b] jit-backend-dump}
[3e4c22afc33cbaa] jit-backend}
[3e4c22afc34072e] {jit-log-opt-bridge
# bridge out of Guard 0x382f8e0 with 73 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x3917be0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x3a74530>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x3a74578>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16470384, descr=<Guard0x3917c40>) [p0, p1]
+310: guard_class(p0, 16437352, descr=<Guard0x3a745c0>) [p0, p1]
+330: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+341: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3a74608>) [p0, p1]
+350: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+350: guard_not_invalidated(descr=<Guard0x3a74650>) [p0, p1]
+350: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+354: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3917ca0>) [p0, p1]
+374: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+378: guard_class(p14, 16437896, descr=<Guard0x3a74698>) [p0, p1]
+391: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+402: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3a746e0>) [p0, p1]
+411: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+411: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+415: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+419: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (cons AppRand1 AppRand2)')
+423: guard_nonnull_class(p19, 16478072, descr=<Guard0x3917d00>) [p0, p1]
+442: guard_nonnull_class(p20, 16470384, descr=<Guard0x3917d60>) [p0, p1]
+461: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+472: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3a74728>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+481: guard_class(p21, 16437896, descr=<Guard0x3a74770>) [p0, p1]
+493: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+497: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3917dc0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+515: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+519: guard_nonnull_class(p29, 16470384, descr=<Guard0x3917e20>) [p0, p1]
+538: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+542: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x3917e80>) [p0, p1]
+560: p33 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+564: guard_nonnull_class(p33, 16470384, descr=<Guard0x3917ee0>) [p0, p1]
+583: p35 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+587: guard_nonnull_class(p35, ConstClass(W_Vector), descr=<Guard0x3917f40>) [p0, p1]
+605: p37 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+609: guard_nonnull_class(p37, ConstClass(W_Vector), descr=<Guard0x3917fa0>) [p0, p1]
+628: p39 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+632: p40 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+643: guard_nonnull_class(p40, 16470384, descr=<Guard0x3a7a020>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+662: p42 = new_with_vtable(descr=<SizeDescr 32>)
+709: p43 = new_with_vtable(descr=<SizeDescr 24>)
+720: setfield_gc(p43, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+724: setfield_gc(p43, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+728: p44 = new_with_vtable(descr=<SizeDescr 48>)
+739: p45 = new_with_vtable(descr=<SizeDescr 32>)
+751: setfield_gc(p45, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+759: p48 = new_array_clear(4, descr=<ArrayP 8>)
+792: setarrayitem_gc(p48, 0, ConstPtr(ptr50), descr=<ArrayP 8>)
+796: setarrayitem_gc(p48, 1, p31, descr=<ArrayP 8>)
+800: setarrayitem_gc(p48, 2, p35, descr=<ArrayP 8>)
+804: setarrayitem_gc(p48, 3, p37, descr=<ArrayP 8>)
+808: setfield_gc(p45, p48, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+819: setfield_gc(p45, ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+823: setfield_gc(p42, p40, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+834: setfield_gc(p42, p43, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+838: setfield_gc(p44, ConstPtr(ptr55), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+842: setfield_gc(p44, p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+846: setfield_gc(p44, p45, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+850: setfield_gc(p44, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+854: setfield_gc(p44, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+858: setfield_gc(p42, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+869: jump(p42, p44, descr=TargetToken(59469520))
+896: --end of the loop--
[3e4c22afc384124] jit-log-opt-bridge}
[3e4c22afc555f1a] {jit-backend
[3e4c22afc5bb3fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc8f0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8202000048FF042570129B028139700B01000F85000000004C8B79104D85FF0F84000000004C8B350AFFFFFF4D39F70F85000000004C8B71184983FE01720741813EB09700000F85000000004C8BBD3801000041813FC81800000F85000000004D8B6F204C8B25EBFEFFFF4D39E50F85000000004D8B67284D8B6F304D8B57184983FC01720841813C2430B700000F85000000004983FD01720841817D00B09700000F85000000004D8B4C24104C8B05CAFEFFFF4D39C10F850000000041813AC81800000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B4C24184983F9017207418139B09700000F8500000000498B79084883FF017206813FF08C00000F85000000004D8B4C24204983F9017207418139B09700000F8500000000498B71084883FE017206813EF08C00000F85000000004D8B4C24284983F9017207418139B09700000F8500000000498B59084883FB017206813BF08C00000F85000000004D8B4D084983F9017207418139F08C00000F8500000000498B542408498B45104883F8017206813840D202000F85000000004989D7488B0C25F091F900488D91A8000000483B14251092F9000F87EF00000048891425F091F90048C701700B0100488D512048C702A81600004C8D6A3049C74500F08C000049C745080500000048898D30010000498D4D2048C701080E000048C741080500000048899538010000488B15CBFDFFFF488951104889791848897120488959284C89493049894D10488B0DB4FDFFFF49894D18488B8D30010000488941104C8971184C8B35A2FDFFFF488B85380100004C8970204C8978104C8950184C8940084C8961084C89682848898D300100004889853801000049BBD0661C5C4A7F000041FFE348C7442408FFFFFF0049BB90C71C5C4A7F00004C895D204D8D9B607BFFFF41FFD3E958FDFFFF49BBE0C81C5C4A7F00004C895D204D8D9B1082FFFF41FFD3E9FCFEFFFFFF3557FCFFFF49BBA0C71C5C4A7F000041534D8D9B6078FFFF41FFE3FF3543FCFFFF49BBB0C71C5C4A7F000041534D8D9B5078FFFF41FFE3FF3537FCFFFF49BBC0C71C5C4A7F000041534D8D9B4078FFFF41FFE3FF3523FCFFFF49BBD0C71C5C4A7F000041534D8D9B3078FFFF41FFE3FF350FFCFFFF49BBE0C71C5C4A7F000041534D8D9B2078FFFF41FFE3FF3503FCFFFF49BBF0C71C5C4A7F000041534D8D9B1078FFFF41FFE3FF35EFFBFFFF49BB00C81C5C4A7F000041534D8D9B0078FFFF41FFE3FF35DBFBFFFF49BB10C81C5C4A7F000041534D8D9BF077FFFF41FFE3FF35C7FBFFFF49BB20C81C5C4A7F000041534D8D9BE077FFFF41FFE3FF35BBFBFFFF49BB30C81C5C4A7F000041534D8D9BD077FFFF41FFE3FF35A7FBFFFF49BB40C81C5C4A7F000041534D8D9BC077FFFF41FFE3FF3593FBFFFF49BB50C81C5C4A7F000041534D8D9BB077FFFF41FFE3FF357FFBFFFF49BB60C81C5C4A7F000041534D8D9BA077FFFF41FFE3FF356BFBFFFF49BB70C81C5C4A7F000041534D8D9B9077FFFF41FFE3FF3557FBFFFF49BB80C81C5C4A7F000041534D8D9B8077FFFF41FFE3FF3543FBFFFF49BB90C81C5C4A7F000041534D8D9B7077FFFF41FFE3FF352FFBFFFF49BBA0C81C5C4A7F000041534D8D9B6077FFFF41FFE3FF351BFBFFFF49BBB0C81C5C4A7F000041534D8D9B5077FFFF41FFE3FF3507FBFFFF49BBC0C81C5C4A7F000041534D8D9B4077FFFF41FFE3FF35F3FAFFFF49BBD0C81C5C4A7F000041534D8D9B3077FFFF41FFE3
[3e4c22afc5c414e] jit-backend-dump}
[3e4c22afc5ce697] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc9c4 +0  27000000
[3e4c22afc5cfbb4] jit-backend-dump}
[3e4c22afc5d6e3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccc55 +0  27000000
[3e4c22afc5d7f6f] jit-backend-dump}
[3e4c22afc5db72d] {jit-backend-addr
bridge out of Guard 0x3908bc0 has address 0x7f4a5c1cc9c0 to 0x7f4a5c1ccc50
       gc table: 0x7f4a5c1cc8f0
    jump target: 0x7f4a5c1cc9c0
         resops: 0x7f4a5c1cc9ce
       failures: 0x7f4a5c1ccc50
            end: 0x7f4a5c1ccec3
[3e4c22afc5ddc46] jit-backend-addr}
[3e4c22afc5e1312] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc9de +0  B1020000
[3e4c22afc5e214d] jit-backend-dump}
[3e4c22afc5e52e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc9eb +0  C0020000
[3e4c22afc5e6008] jit-backend-dump}
[3e4c22afc5e8fc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc9fb +0  CC020000
[3e4c22afc5e9c68] jit-backend-dump}
[3e4c22afc5ecbaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cca12 +0  D1020000
[3e4c22afc5ed88b] jit-backend-dump}
[3e4c22afc5f079c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cca26 +0  D9020000
[3e4c22afc5f1471] jit-backend-dump}
[3e4c22afc5f4363] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cca3a +0  E1020000
[3e4c22afc5f5023] jit-backend-dump}
[3e4c22afc5f842c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cca5a +0  F9020000
[3e4c22afc5f9145] jit-backend-dump}
[3e4c22afc5fc169] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cca6e +0  01030000
[3e4c22afc5fce0a] jit-backend-dump}
[3e4c22afc5ffed0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cca83 +0  08030000
[3e4c22afc600b87] jit-backend-dump}
[3e4c22afc603b89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cca90 +0  17030000
[3e4c22afc604864] jit-backend-dump}
[3e4c22afc607915] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccaa7 +0  1C030000
[3e4c22afc6085d5] jit-backend-dump}
[3e4c22afc60b56c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccabf +0  20030000
[3e4c22afc60c201] jit-backend-dump}
[3e4c22afc60f133] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccad5 +0  26030000
[3e4c22afc60fdde] jit-backend-dump}
[3e4c22afc612d1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccaed +0  2A030000
[3e4c22afc6139ae] jit-backend-dump}
[3e4c22afc6168e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccb03 +0  30030000
[3e4c22afc6175a0] jit-backend-dump}
[3e4c22afc61a4d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccb1b +0  34030000
[3e4c22afc61b168] jit-backend-dump}
[3e4c22afc61e0a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccb31 +0  3A030000
[3e4c22afc61ed41] jit-backend-dump}
[3e4c22afc621c95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccb48 +0  3F030000
[3e4c22afc62299e] jit-backend-dump}
[3e4c22afc6258d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccb63 +0  40030000
[3e4c22afc626566] jit-backend-dump}
[3e4c22afc629782] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c793d +0  7F500000
[3e4c22afc62a44b] jit-backend-dump}
[3e4c22afc62e1da] jit-backend}
[3e4c22afc631b04] {jit-log-opt-bridge
# bridge out of Guard 0x3908bc0 with 67 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x3a7a080>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x3a74800>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x3a74848>) [p0, p1]
debug_merge_point(0, 0, 'lst5109')
+271: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+275: guard_nonnull_class(p6, 16470384, descr=<Guard0x3a7a0e0>) [p0, p1]
+294: guard_class(p0, 16437896, descr=<Guard0x3a74890>) [p0, p1]
+314: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+325: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3a748d8>) [p0, p1]
+334: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+334: guard_not_invalidated(descr=<Guard0x3a74920>) [p0, p1]
+334: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+338: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+342: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (loop45105 (cdr rads35107) lst5109)')
+346: guard_nonnull_class(p12, 16478448, descr=<Guard0x3a7a140>) [p0, p1]
+366: guard_nonnull_class(p13, 16470384, descr=<Guard0x3a7a1a0>) [p0, p1]
+386: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+398: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3a74968>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+407: guard_class(p14, 16437896, descr=<Guard0x3a749b0>) [p0, p1]
+420: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+424: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3a7a200>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+443: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+448: guard_nonnull_class(p22, 16470384, descr=<Guard0x3a7a260>) [p0, p1]
+467: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+471: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3a7a2c0>) [p0, p1]
+489: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+494: guard_nonnull_class(p26, 16470384, descr=<Guard0x3a7a320>) [p0, p1]
+513: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+517: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x3a7a380>) [p0, p1]
+535: p30 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+540: guard_nonnull_class(p30, 16470384, descr=<Guard0x3a7a3e0>) [p0, p1]
+559: p32 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+563: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x3a7a440>) [p0, p1]
+581: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+585: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x3a7a4a0>) [p0, p1]
+604: p36 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+609: p37 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+613: guard_nonnull_class(p37, 16616448, descr=<Guard0x3a7a500>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+631: p39 = new_with_vtable(descr=<SizeDescr 32>)
+678: p40 = new_with_vtable(descr=<SizeDescr 48>)
+689: p41 = new_with_vtable(descr=<SizeDescr 32>)
+701: setfield_gc(p41, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+709: p44 = new_array_clear(5, descr=<ArrayP 8>)
+749: setarrayitem_gc(p44, 0, ConstPtr(ptr46), descr=<ArrayP 8>)
+753: setarrayitem_gc(p44, 1, p24, descr=<ArrayP 8>)
+757: setarrayitem_gc(p44, 2, p28, descr=<ArrayP 8>)
+761: setarrayitem_gc(p44, 3, p32, descr=<ArrayP 8>)
+765: setarrayitem_gc(p44, 4, p34, descr=<ArrayP 8>)
+769: setfield_gc(p41, p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+780: setfield_gc(p41, ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+784: setfield_gc(p39, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+795: setfield_gc(p39, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+806: setfield_gc(p40, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+817: setfield_gc(p40, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+821: setfield_gc(p40, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+825: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+829: setfield_gc(p39, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+833: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+837: jump(p39, p40, descr=TargetToken(59469840))
+864: --end of the loop--
[3e4c22afc66a1f4] jit-log-opt-bridge}
[3e4c22afc845bac] {jit-backend
[3e4c22afc8bcec4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd040 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8202000048FF0425F0129B028139700B01000F85000000004C8B71104D85F60F84000000004C8B2D0AFFFFFF4D39EE0F85000000004C8B69184983FD01720841817D00B09700000F850000000041813FC81800000F85000000004D8B77204C8B25F1FEFFFF4D39E60F85000000004D8B67284D8B77304D8B57184983FC01720841813C2430B700000F85000000004983FE01720741813EB09700000F85000000004D8B4C24104C8B05D1FEFFFF4D39C10F850000000041813AC81800000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B4C24184983F9017207418139B09700000F8500000000498B79084883FF017206813FF08C00000F85000000004D8B4C24204983F9017207418139B09700000F8500000000498B71084883FE017206813EF08C00000F85000000004D8B4C24284983F9017207418139B09700000F8500000000498B59084883FB017206813BF08C00000F85000000004D8B4E084983F9017207418139F08C00000F8500000000498B542408498B46104883F80172068138B09700000F85000000004989D7488B0C25F091F900488D91A8000000483B14251092F9000F87F600000048891425F091F90048C701700B0100488D512048C702A81600004C8D723049C706F08C000049C746080500000048898D30010000498D4E2048C701080E000048C741080500000048899538010000488B15D3FDFFFF488951104889791848897120488959284C89493049894E10488B0DBCFDFFFF49894E18488B8D30010000488941104C8969184C8B2DAAFDFFFF488B85380100004C8968204C8978104C8950184C8940084C8961084C89702848898D300100004889853801000049BBD0661C5C4A7F000041FFE30F1F84000000000048C7442408FFFFFF0049BBD8CE1C5C4A7F00004C895D204D8D9B1874FFFF41FFD3E958FDFFFF49BB28D01C5C4A7F00004C895D204D8D9BC87AFFFF41FFD3E9F5FEFFFFFF3557FCFFFF49BBE8CE1C5C4A7F000041534D8D9B1871FFFF41FFE3FF3543FCFFFF49BBF8CE1C5C4A7F000041534D8D9B0871FFFF41FFE3FF3537FCFFFF49BB08CF1C5C4A7F000041534D8D9BF870FFFF41FFE3FF3523FCFFFF49BB18CF1C5C4A7F000041534D8D9BE870FFFF41FFE3FF350FFCFFFF49BB28CF1C5C4A7F000041534D8D9BD870FFFF41FFE3FF3503FCFFFF49BB38CF1C5C4A7F000041534D8D9BC870FFFF41FFE3FF35EFFBFFFF49BB48CF1C5C4A7F000041534D8D9BB870FFFF41FFE3FF35DBFBFFFF49BB58CF1C5C4A7F000041534D8D9BA870FFFF41FFE3FF35C7FBFFFF49BB68CF1C5C4A7F000041534D8D9B9870FFFF41FFE3FF35BBFBFFFF49BB78CF1C5C4A7F000041534D8D9B8870FFFF41FFE3FF35A7FBFFFF49BB88CF1C5C4A7F000041534D8D9B7870FFFF41FFE3FF3593FBFFFF49BB98CF1C5C4A7F000041534D8D9B6870FFFF41FFE3FF357FFBFFFF49BBA8CF1C5C4A7F000041534D8D9B5870FFFF41FFE3FF356BFBFFFF49BBB8CF1C5C4A7F000041534D8D9B4870FFFF41FFE3FF3557FBFFFF49BBC8CF1C5C4A7F000041534D8D9B3870FFFF41FFE3FF3543FBFFFF49BBD8CF1C5C4A7F000041534D8D9B2870FFFF41FFE3FF352FFBFFFF49BBE8CF1C5C4A7F000041534D8D9B1870FFFF41FFE3FF351BFBFFFF49BBF8CF1C5C4A7F000041534D8D9B0870FFFF41FFE3FF3507FBFFFF49BB08D01C5C4A7F000041534D8D9BF86FFFFF41FFE3FF35F3FAFFFF49BB18D01C5C4A7F000041534D8D9BE86FFFFF41FFE3
[3e4c22afc8c55e4] jit-backend-dump}
[3e4c22afc8cfed8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd114 +0  27000000
[3e4c22afc8d154f] jit-backend-dump}
[3e4c22afc8d5462] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd3a5 +0  27000000
[3e4c22afc8d6339] jit-backend-dump}
[3e4c22afc8d9742] {jit-backend-addr
bridge out of Guard 0x3a7a500 has address 0x7f4a5c1cd110 to 0x7f4a5c1cd3a0
       gc table: 0x7f4a5c1cd040
    jump target: 0x7f4a5c1cd110
         resops: 0x7f4a5c1cd11e
       failures: 0x7f4a5c1cd3a0
            end: 0x7f4a5c1cd613
[3e4c22afc8dbbc9] jit-backend-addr}
[3e4c22afc8df0e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd12e +0  B1020000
[3e4c22afc8dff02] jit-backend-dump}
[3e4c22afc8e3159] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd13b +0  C0020000
[3e4c22afc8e3e1f] jit-backend-dump}
[3e4c22afc8e6d7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd14b +0  CC020000
[3e4c22afc8e7a26] jit-backend-dump}
[3e4c22afc8ea91c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd163 +0  D0020000
[3e4c22afc8eb5c0] jit-backend-dump}
[3e4c22afc8ee4b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd170 +0  DF020000
[3e4c22afc8ef18d] jit-backend-dump}
[3e4c22afc8f2067] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd184 +0  E7020000
[3e4c22afc8f2d0e] jit-backend-dump}
[3e4c22afc8f5d7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd1a4 +0  FF020000
[3e4c22afc8f6a38] jit-backend-dump}
[3e4c22afc8f9971] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd1b7 +0  08030000
[3e4c22afc8fa621] jit-backend-dump}
[3e4c22afc8fd50d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd1cc +0  0F030000
[3e4c22afc8fe1bb] jit-backend-dump}
[3e4c22afc901094] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd1d9 +0  1E030000
[3e4c22afc901d3f] jit-backend-dump}
[3e4c22afc904c03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd1f0 +0  23030000
[3e4c22afc9058a7] jit-backend-dump}
[3e4c22afc90877b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd208 +0  27030000
[3e4c22afc909422] jit-backend-dump}
[3e4c22afc90c305] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd21e +0  2D030000
[3e4c22afc90cfaf] jit-backend-dump}
[3e4c22afc90fe83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd236 +0  31030000
[3e4c22afc910b2a] jit-backend-dump}
[3e4c22afc913a22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd24c +0  37030000
[3e4c22afc9146d3] jit-backend-dump}
[3e4c22afc9175bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd264 +0  3B030000
[3e4c22afc918263] jit-backend-dump}
[3e4c22afc91b130] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd27a +0  41030000
[3e4c22afc91bde7] jit-backend-dump}
[3e4c22afc91ecb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd291 +0  46030000
[3e4c22afc91f990] jit-backend-dump}
[3e4c22afc92288e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd2ac +0  47030000
[3e4c22afc92353e] jit-backend-dump}
[3e4c22afc926743] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccb63 +0  A9050000
[3e4c22afc9273fc] jit-backend-dump}
[3e4c22afc92b255] jit-backend}
[3e4c22afc92ecf7] {jit-log-opt-bridge
# bridge out of Guard 0x3a7a500 with 67 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x3a7a560>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x3a74a40>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x3a74a88>) [p0, p1]
debug_merge_point(0, 0, 'lst5109')
+271: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+275: guard_nonnull_class(p6, 16470384, descr=<Guard0x3a7a5c0>) [p0, p1]
+295: guard_class(p0, 16437896, descr=<Guard0x3a74ad0>) [p0, p1]
+308: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+319: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3a74b18>) [p0, p1]
+328: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+328: guard_not_invalidated(descr=<Guard0x3a74b60>) [p0, p1]
+328: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+332: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+336: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (loop45105 (cdr rads35107) lst5109)')
+340: guard_nonnull_class(p12, 16478448, descr=<Guard0x3a7a620>) [p0, p1]
+360: guard_nonnull_class(p13, 16470384, descr=<Guard0x3a7a680>) [p0, p1]
+379: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+391: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3a74ba8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+400: guard_class(p14, 16437896, descr=<Guard0x3a74bf0>) [p0, p1]
+413: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+417: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3a7a6e0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+436: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+441: guard_nonnull_class(p22, 16470384, descr=<Guard0x3a7a740>) [p0, p1]
+460: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+464: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3a7a7a0>) [p0, p1]
+482: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+487: guard_nonnull_class(p26, 16470384, descr=<Guard0x3a7a800>) [p0, p1]
+506: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+510: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x3a7a860>) [p0, p1]
+528: p30 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+533: guard_nonnull_class(p30, 16470384, descr=<Guard0x3a7a8c0>) [p0, p1]
+552: p32 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+556: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x3a7a920>) [p0, p1]
+574: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+578: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x3a7a980>) [p0, p1]
+597: p36 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+602: p37 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+606: guard_nonnull_class(p37, 16470384, descr=<Guard0x3a7a9e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+624: p39 = new_with_vtable(descr=<SizeDescr 32>)
+671: p40 = new_with_vtable(descr=<SizeDescr 48>)
+682: p41 = new_with_vtable(descr=<SizeDescr 32>)
+693: setfield_gc(p41, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+701: p44 = new_array_clear(5, descr=<ArrayP 8>)
+741: setarrayitem_gc(p44, 0, ConstPtr(ptr46), descr=<ArrayP 8>)
+745: setarrayitem_gc(p44, 1, p24, descr=<ArrayP 8>)
+749: setarrayitem_gc(p44, 2, p28, descr=<ArrayP 8>)
+753: setarrayitem_gc(p44, 3, p32, descr=<ArrayP 8>)
+757: setarrayitem_gc(p44, 4, p34, descr=<ArrayP 8>)
+761: setfield_gc(p41, p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+772: setfield_gc(p41, ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+776: setfield_gc(p39, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+787: setfield_gc(p39, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+798: setfield_gc(p40, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+809: setfield_gc(p40, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+813: setfield_gc(p40, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+817: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+821: setfield_gc(p39, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+825: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+829: jump(p39, p40, descr=TargetToken(59469840))
+864: --end of the loop--
[3e4c22afc998b50] jit-log-opt-bridge}
[3e4c22afcb2403b] {jit-backend
[3e4c22afcb89fa3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd790 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F874302000048FF042580159B02488B8D300100008139700B01000F8500000000488B41104885C00F8400000000488B1584FEFFFF4839D00F8500000000488B51184883FA017206813AB09700000F8500000000488B85380100008138C81800000F8500000000488B5820488B3567FEFFFF4839F30F8500000000488B7028488B5830488B78184883FE017206813E20BA00000F85000000004883FB017206813BB09700000F85000000004C8B46104C8B0D4BFEFFFF4D39C80F8500000000813FC81800000F85000000004C8B4F084983F9017207418139900F00000F85000000004C8B46284C8B56304C8B660841813C24102001000F85000000004C8B6E384983FD01720841817D00601400000F85000000004C8B76204983FE01720741813E601400000F85000000004D8B7D0848899540010000498B56084939D70F84000000004C8B7E184983FF01720741813FF08C00000F85000000004883FA000F8C000000004889B548010000498B77084839F20F8D00000000498B7718813EC8EB02000F8500000000498B771048899D50010000488B5CD610813BB09700000F85000000004889BD58010000488BBD500100004C898D600100004C8B4F104983F9017207418139B09700000F85000000004889F84C8995680100004C8985700100004C89A5780100004C89AD500100004C89B5300100004C89BD800100004989F74C89CE4D89E14C89D7FFB5600100004C8B9D400100004C899D600100008F854001000052488B95580100008F855801000049BBD07A1C5C4A7F000041FFE366662E0F1F84000000000049BB50571C5C4A7F000041FFD3E9ABFDFFFFFF3548FCFFFF49BB30D61C5C4A7F000041534D8D9BD069FFFF41FFE3FF3534FCFFFF49BB40D61C5C4A7F000041534D8D9BC069FFFF41FFE3FF3528FCFFFF49BB50D61C5C4A7F000041534D8D9BB069FFFF41FFE3FF3514FCFFFF49BB60D61C5C4A7F000041534D8D9BA069FFFF41FFE3FF3500FCFFFF49BB70D61C5C4A7F000041534D8D9B9069FFFF41FFE3FF35F4FBFFFF49BB80D61C5C4A7F000041534D8D9B8069FFFF41FFE3FF35E0FBFFFF49BB90D61C5C4A7F000041534D8D9B7069FFFF41FFE3FF35CCFBFFFF49BBA0D61C5C4A7F000041534D8D9B6069FFFF41FFE3FF35B8FBFFFF49BBB0D61C5C4A7F000041534D8D9B5069FFFF41FFE3FF35ACFBFFFF49BBC0D61C5C4A7F000041534D8D9B4069FFFF41FFE3FF3598FBFFFF49BBD0D61C5C4A7F000041534D8D9B3069FFFF41FFE3FF3584FBFFFF49BBE0D61C5C4A7F000041534D8D9B2069FFFF41FFE3FF3570FBFFFF49BBF0D61C5C4A7F000041534D8D9B1069FFFF41FFE3FF355CFBFFFF49BB00D71C5C4A7F000041534D8D9B0069FFFF41FFE3FF3548FBFFFF49BB10D71C5C4A7F000041534D8D9BF068FFFF41FFE3FF3534FBFFFF49BB20D71C5C4A7F000041534D8D9BE068FFFF41FFE3FF3520FBFFFF49BB30D71C5C4A7F000041534D8D9BD068FFFF41FFE3FF350CFBFFFF49BB40D71C5C4A7F000041534D8D9BC068FFFF41FFE3FF35F8FAFFFF49BB50D71C5C4A7F000041534D8D9BB068FFFF41FFE3FF35E4FAFFFF49BB60D71C5C4A7F000041534D8D9BA068FFFF41FFE3FF35D0FAFFFF49BB70D71C5C4A7F000041534D8D9B9068FFFF41FFE3FF35BCFAFFFF49BB80D71C5C4A7F000041534D8D9B8068FFFF41FFE3
[3e4c22afcb929d5] jit-backend-dump}
[3e4c22afcb9c7c5] {jit-backend-addr
Loop 21 ((if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)) has address 0x7f4a5c1cd8ed to 0x7f4a5c1cdb30 (bootstrap 0x7f4a5c1cd860)
       gc table: 0x7f4a5c1cd790
       function: 0x7f4a5c1cd860
         resops: 0x7f4a5c1cd8ed
       failures: 0x7f4a5c1cdb30
            end: 0x7f4a5c1cddaa
[3e4c22afcb9fc08] jit-backend-addr}
[3e4c22afcba3e15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd904 +0  3A020000
[3e4c22afcba5118] jit-backend-dump}
[3e4c22afcba84b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd911 +0  49020000
[3e4c22afcba92f7] jit-backend-dump}
[3e4c22afcbac462] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd921 +0  55020000
[3e4c22afcbad178] jit-backend-dump}
[3e4c22afcbb0308] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd937 +0  5B020000
[3e4c22afcbb107f] jit-backend-dump}
[3e4c22afcbb40c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd94a +0  64020000
[3e4c22afcbb4df0] jit-backend-dump}
[3e4c22afcbb7d99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd95e +0  6C020000
[3e4c22afcbb8abe] jit-backend-dump}
[3e4c22afcbbbc66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd97c +0  86020000
[3e4c22afcbbc970] jit-backend-dump}
[3e4c22afcbbfa73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd98e +0  90020000
[3e4c22afcbc0779] jit-backend-dump}
[3e4c22afcbc3744] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd9a2 +0  98020000
[3e4c22afcbc446f] jit-backend-dump}
[3e4c22afcbc73f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd9ae +0  A8020000
[3e4c22afcbc815c] jit-backend-dump}
[3e4c22afcbcb0b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd9c5 +0  AD020000
[3e4c22afcbcbdd2] jit-backend-dump}
[3e4c22afcbced4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd9df +0  AF020000
[3e4c22afcbcfaaf] jit-backend-dump}
[3e4c22afcbd2a56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd9f7 +0  B3020000
[3e4c22afcbd377b] jit-backend-dump}
[3e4c22afcbd66f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cda0e +0  B8020000
[3e4c22afcbd740f] jit-backend-dump}
[3e4c22afcbda37e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cda26 +0  BC020000
[3e4c22afcbdb091] jit-backend-dump}
[3e4c22afcbddfee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cda3d +0  C1020000
[3e4c22afcbded03] jit-backend-dump}
[3e4c22afcbe1c6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cda47 +0  D3020000
[3e4c22afcbe2982] jit-backend-dump}
[3e4c22afcbe590a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cda5b +0  DB020000
[3e4c22afcbe6620] jit-backend-dump}
[3e4c22afcbe958c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cda6b +0  E7020000
[3e4c22afcbea29b] jit-backend-dump}
[3e4c22afcbed214] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cda87 +0  E7020000
[3e4c22afcbedf1a] jit-backend-dump}
[3e4c22afcbf0e6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cdab3 +0  D7020000
[3e4c22afcbf1b7a] jit-backend-dump}
[3e4c22afcbf574b] jit-backend}
[3e4c22afcbf9447] {jit-log-opt-loop
# Loop 21 ((if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)) : entry bridge with 63 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+357: guard_class(p0, 16500016, descr=<Guard0x3a7aa40>) [p1, p0]
+376: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+380: guard_nonnull(p3, descr=<Guard0x3a74c38>) [p1, p0]
+396: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+399: guard_true(i5, descr=<Guard0x3a74c80>) [p1, p0]
debug_merge_point(0, 0, 'lst5101')
+405: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+409: guard_nonnull_class(p6, 16470384, descr=<Guard0x3a7aaa0>) [p1, p0]
+427: guard_class(p1, 16437896, descr=<Guard0x3a74cc8>) [p1, p0]
+446: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+457: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3a74d10>) [p1, p0]
+466: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+466: guard_not_invalidated(descr=<Guard0x3a74d58>) [p1, p0]
+466: p12 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+470: p13 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+474: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
+478: guard_nonnull_class(p12, 16479200, descr=<Guard0x3a7ab00>) [p1, p0]
+496: guard_nonnull_class(p13, 16470384, descr=<Guard0x3a7ab60>) [p1, p0]
+514: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+525: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3a74da0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+534: guard_class(p14, 16437896, descr=<Guard0x3a74de8>) [p1, p0]
+546: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+550: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3a7abc0>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+569: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+573: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+577: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+581: guard_class(p24, 16505296, descr=<Guard0x3a74e30>) [p1, p0]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+595: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+599: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3a7ac20>) [p1, p0]
+619: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+623: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3a7ac80>) [p1, p0]
+642: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+646: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+657: i32 = int_eq(i30, i31)
+660: guard_false(i32, descr=<Guard0x3a74e78>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+666: p33 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+670: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3a7ace0>) [p1, p0]
+689: i36 = int_ge(i31, 0)
+693: guard_true(i36, descr=<Guard0x3a74ec0>) [p1, p0]
+699: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+710: i38 = int_lt(i31, i37)
+713: guard_true(i38, descr=<Guard0x3a74f08>) [p1, p0]
+719: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+723: guard_class(p39, 16622984, descr=<Guard0x3a74f50>) [p1, p0]
+735: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+739: p42 = getarrayitem_gc_r(p41, i31, descr=<ArrayP 8>)
+751: guard_class(p42, 16470384, descr=<Guard0x3a74f98>) [p1, p0]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+763: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+788: guard_nonnull_class(p44, 16470384, descr=<Guard0x3a7ad40>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+807: i46 = arraylen_gc(p41, descr=<ArrayP 8>)
+807: jump(p12, p44, p6, p20, p24, p14, p22, p23, p13, p42, p23, p22, p24, p26, p28, p33, p41, i31, descr=TargetToken(59470080))
+928: --end of the loop--
[3e4c22afcc2ce4e] jit-log-opt-loop}
[3e4c22afcd8d4a0] {jit-backend
[3e4c22afcde7f2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cdee0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87E301000048FF042540149B02488B8D300100008139700B01000F8500000000488B41104883F80172068138B09700000F8500000000488B15ABFEFFFF4839D00F8400000000488B9538010000813AC81800000F8500000000488B5A084883FB017206813B900F00000F8500000000488B7108813E20BA00000F8500000000488B7E104C8B0586FEFFFF4C39C70F85000000004C8B4628488B7E304C8B4E08418139102001000F85000000004C8B56384983FA01720741813A601400000F85000000004C8B66204983FC01720841813C24601400000F85000000004D8B6A084D8B5424084D39D50F85000000004C8B68104983FD01720841817D00B09700000F85000000004C8B61184983FC01720841813C24B09700000F85000000004983FA000F8C0000000049BBFEFFFFFFFFFFFF7F4D39DA0F8F000000004989D6488B0C25F091F900488D9188000000483B14251092F9000F87A000000048891425F091F90048C701700B0100488D512048C702C81800004C8D523849C70230B700004D894A084C8B3DDEFDFFFF4D897A104D89421849897A20498942284C89691048895A08488971084C8961184C894A104C8972184C8B35B7FDFFFF4C8972204C8952284889423048898D300100004889953801000049BB10791C5C4A7F000041FFE30F1F84000000000049BB50571C5C4A7F000041FFD3E90BFEFFFF49BBD0DE1C5C4A7F00004C895D204D8D9B206CFFFF41FFD349BBFEFFFFFFFFFFFF7FE941FFFFFFFF35B1FCFFFF49BBD0DD1C5C4A7F000041534D8D9B3062FFFF41FFE3FF359DFCFFFF49BBE0DD1C5C4A7F000041534D8D9B2062FFFF41FFE3FF3591FCFFFF49BBF0DD1C5C4A7F000041534D8D9B1062FFFF41FFE3FF357DFCFFFF49BB00DE1C5C4A7F000041534D8D9B0062FFFF41FFE3FF3569FCFFFF49BB10DE1C5C4A7F000041534D8D9BF061FFFF41FFE3FF3555FCFFFF49BB20DE1C5C4A7F000041534D8D9BE061FFFF41FFE3FF3549FCFFFF49BB30DE1C5C4A7F000041534D8D9BD061FFFF41FFE3FF3535FCFFFF49BB40DE1C5C4A7F000041534D8D9BC061FFFF41FFE3FF3521FCFFFF49BB50DE1C5C4A7F000041534D8D9BB061FFFF41FFE3FF350DFCFFFF49BB60DE1C5C4A7F000041534D8D9BA061FFFF41FFE3FF35F9FBFFFF49BB70DE1C5C4A7F000041534D8D9B9061FFFF41FFE3FF35E5FBFFFF49BB80DE1C5C4A7F000041534D8D9B8061FFFF41FFE3FF35D1FBFFFF49BB90DE1C5C4A7F000041534D8D9B7061FFFF41FFE3FF35BDFBFFFF49BBA0DE1C5C4A7F000041534D8D9B6061FFFF41FFE3FF35A9FBFFFF49BBB0DE1C5C4A7F000041534D8D9B5061FFFF41FFE3FF3595FBFFFF49BBC0DE1C5C4A7F000041534D8D9B4061FFFF41FFE3
[3e4c22afcdf036f] jit-backend-dump}
[3e4c22afcdfa4cc] {jit-backend-addr
Loop 22 ((if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)) has address 0x7f4a5c1ce00d to 0x7f4a5c1ce1f0 (bootstrap 0x7f4a5c1cdf80)
       gc table: 0x7f4a5c1cdee0
       function: 0x7f4a5c1cdf80
         resops: 0x7f4a5c1ce00d
       failures: 0x7f4a5c1ce1f0
            end: 0x7f4a5c1ce3e9
[3e4c22afcdfd27a] jit-backend-addr}
[3e4c22afce0149a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce024 +0  01020000
[3e4c22afce026e5] jit-backend-dump}
[3e4c22afce05b10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce03a +0  07020000
[3e4c22afce0697f] jit-backend-dump}
[3e4c22afce09c59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce04a +0  13020000
[3e4c22afce0a987] jit-backend-dump}
[3e4c22afce0dcab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce05d +0  1C020000
[3e4c22afce0e95b] jit-backend-dump}
[3e4c22afce11b8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce073 +0  22020000
[3e4c22afce12aae] jit-backend-dump}
[3e4c22afce15d54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce083 +0  2E020000
[3e4c22afce16ab9] jit-backend-dump}
[3e4c22afce19bf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce097 +0  36020000
[3e4c22afce1a8f0] jit-backend-dump}
[3e4c22afce1d9cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce0b0 +0  39020000
[3e4c22afce1e6b3] jit-backend-dump}
[3e4c22afce21972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce0c7 +0  5A020000
[3e4c22afce22666] jit-backend-dump}
[3e4c22afce25754] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce0df +0  5E020000
[3e4c22afce2643e] jit-backend-dump}
[3e4c22afce294da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce0f1 +0  68020000
[3e4c22afce2a1b8] jit-backend-dump}
[3e4c22afce2d222] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce109 +0  6C020000
[3e4c22afce2df01] jit-backend-dump}
[3e4c22afce30f8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce121 +0  70020000
[3e4c22afce31c62] jit-backend-dump}
[3e4c22afce34cf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce12b +0  82020000
[3e4c22afce359df] jit-backend-dump}
[3e4c22afce38a5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce13e +0  8B020000
[3e4c22afce3973d] jit-backend-dump}
[3e4c22afce3d2ef] jit-backend}
[3e4c22afce411b3] {jit-log-opt-loop
# Loop 22 ((if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)) : entry bridge with 61 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
+309: guard_class(p0, 16500016, descr=<Guard0x3a7ae00>) [p1, p0]
+328: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+332: guard_nonnull_class(p3, 16470384, descr=<Guard0x3a7ae60>) [p1, p0]
+357: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+360: guard_false(i6, descr=<Guard0x3a74fe0>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+366: guard_class(p1, 16437896, descr=<Guard0x3a75028>) [p1, p0]
+385: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+389: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3a7aec0>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+407: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+411: guard_class(p10, 16479200, descr=<Guard0x3a75070>) [p1, p0]
+423: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+434: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3a750b8>) [p1, p0]
+443: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+447: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+451: p16 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+455: guard_class(p16, 16505296, descr=<Guard0x3a75100>) [p1, p0]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+468: guard_not_invalidated(descr=<Guard0x3a75148>) [p1, p0]
+468: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+472: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x3a7af20>) [p1, p0]
+491: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+495: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3a7af80>) [p1, p0]
+515: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+519: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+524: i24 = int_eq(i22, i23)
+527: guard_true(i24, descr=<Guard0x3a75190>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+533: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+537: guard_nonnull_class(p25, 16470384, descr=<Guard0x3a7afe0>) [p1, p0]
+557: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+561: guard_nonnull_class(p27, 16470384, descr=<Guard0x3a7b040>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+581: i30 = int_ge(i23, 0)
+585: guard_true(i30, descr=<Guard0x3a7b0a0>) [p27, p25, p10, p15, p14, p3, p1, p16, p8]
+591: i32 = int_le(i23, 9223372036854775806)
+604: guard_true(i32, descr=<Guard0x3a7b100>) [p27, p25, p10, p15, p14, p3, p1, p16, p8]
+610: p33 = new_with_vtable(descr=<SizeDescr 32>)
+657: p34 = new_with_vtable(descr=<SizeDescr 56>)
+668: p35 = new_with_vtable(descr=<SizeDescr 48>)
+679: setfield_gc(p35, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+690: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+694: setfield_gc(p35, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+698: setfield_gc(p35, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+702: setfield_gc(p35, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+706: setfield_gc(p33, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+710: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+714: setfield_gc(p33, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+718: setfield_gc(p33, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+722: setfield_gc(p34, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+726: setfield_gc(p34, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+737: setfield_gc(p34, ConstPtr(ptr37), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+741: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+745: setfield_gc(p34, p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+749: jump(p33, p34, descr=TargetToken(59470000))
+784: --end of the loop--
[3e4c22afce78c02] jit-log-opt-loop}
[3e4c22afd36e10b] {jit-backend
[3e4c22afd3d5f34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce
[3e4c22afd3de1b4] jit-backend-dump}
[3e4c22afd3e9254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce5e4 +0  27000000
[3e4c22afd3ea920] jit-backend-dump}
[3e4c22afd3eeb1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce865 +0  27000000
[3e4c22afd3efa9d] jit-backend-dump}
[3e4c22afd3f2d43] {jit-backend-addr
bridge out of Guard 0x38f0de8 has address 0x7f4a5c1ce5e0 to 0x7f4a5c1ce860
       gc table: 0x7f4a5c1ce540
    jump target: 0x7f4a5c1ce5e0
         resops: 0x7f4a5c1ce5ee
       failures: 0x7f4a5c1ce860
            end: 0x7f4a5c1cea9b
[3e4c22afd3f5474] jit-backend-addr}
[3e4c22afd3f8901] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce5fe +0  A1020000
[3e4c22afd3f97b0] jit-backend-dump}
[3e4c22afd3fc9a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce612 +0  A9020000
[3e4c22afd3fd732] jit-backend-dump}
[3e4c22afd400a28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce631 +0  C2020000
[3e4c22afd40176e] jit-backend-dump}
[3e4c22afd404819] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce644 +0  CB020000
[3e4c22afd405522] jit-backend-dump}
[3e4c22afd40867e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce658 +0  D3020000
[3e4c22afd409393] jit-backend-dump}
[3e4c22afd40c3ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce666 +0  E1020000
[3e4c22afd40d0ba] jit-backend-dump}
[3e4c22afd4100d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce67d +0  E6020000
[3e4c22afd410dd8] jit-backend-dump}
[3e4c22afd413e30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce696 +0  E9020000
[3e4c22afd414aff] jit-backend-dump}
[3e4c22afd417a78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce6ac +0  EF020000
[3e4c22afd41873e] jit-backend-dump}
[3e4c22afd41b6aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce6c2 +0  F5020000
[3e4c22afd41c3a4] jit-backend-dump}
[3e4c22afd41f3d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce6da +0  F9020000
[3e4c22afd42010f] jit-backend-dump}
[3e4c22afd4230dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce6ff +0  F0020000
[3e4c22afd423dcb] jit-backend-dump}
[3e4c22afd426ea6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce709 +0  02030000
[3e4c22afd427b6c] jit-backend-dump}
[3e4c22afd42ab4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce71d +0  0A030000
[3e4c22afd42b828] jit-backend-dump}
[3e4c22afd42e6ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce72f +0  14030000
[3e4c22afd42f3e0] jit-backend-dump}
[3e4c22afd4322cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce74c +0  13030000
[3e4c22afd432fbd] jit-backend-dump}
[3e4c22afd435eda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce779 +0  02030000
[3e4c22afd436bbe] jit-backend-dump}
[3e4c22afd439d4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c71b2 +0  2A740000
[3e4c22afd43aaa7] jit-backend-dump}
[3e4c22afd43e8e4] jit-backend}
[3e4c22afd442380] {jit-log-opt-bridge
# bridge out of Guard 0x38f0de8 with 60 ops
[p0, p1, p2, p3, p4]
+182: guard_class(p0, 16437896, descr=<Guard0x3a7b160>) [p0, p1, p2, p3, p4]
+194: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+205: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3a751d8>) [p0, p1, p2, p3, p4]
+214: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+214: guard_not_invalidated(descr=<Guard0x3a75220>) [p0, p1, p2, p3, p4]
+214: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+218: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+222: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (cons AppRand15 AppRand16)')
+226: guard_nonnull_class(p9, 16479200, descr=<Guard0x3a7b1c0>) [p0, p1, p2, p3, p4]
+245: guard_nonnull_class(p10, 16470384, descr=<Guard0x3a7b220>) [p0, p1, p2, p3, p4]
+264: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+275: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3a75268>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+284: guard_class(p11, 16437896, descr=<Guard0x3a752b0>) [p0, p1, p2, p3, p4]
+298: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+302: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x3a7b280>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+321: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+325: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+329: p21 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+333: guard_class(p21, 16505296, descr=<Guard0x3a752f8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+346: p23 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+350: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x3a7b2e0>) [p0, p1, p2, p3, p4]
+368: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+372: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x3a7b340>) [p0, p1, p2, p3, p4]
+390: i27 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+394: i28 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+405: i29 = int_eq(i27, i28)
+408: guard_false(i29, descr=<Guard0x3a75340>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+414: p30 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+432: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x3a7b3a0>) [p0, p1, p2, p3, p4]
+451: i33 = int_ge(i28, 0)
+455: guard_true(i33, descr=<Guard0x3a75388>) [p0, p1, p2, p3, p4]
+461: i34 = getfield_gc_i(p30, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+472: i35 = int_lt(i28, i34)
+475: guard_true(i35, descr=<Guard0x3a753d0>) [p0, p1, p2, p3, p4]
+481: p36 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+485: guard_class(p36, 16622984, descr=<Guard0x3a75418>) [p0, p1, p2, p3, p4]
+499: p38 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+503: p39 = getarrayitem_gc_r(p38, i28, descr=<ArrayP 8>)
+515: guard_class(p39, 16470384, descr=<Guard0x3a75460>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+528: p41 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+554: guard_nonnull_class(p41, 16470384, descr=<Guard0x3a7b400>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+573: p43 = new_with_vtable(descr=<SizeDescr 24>)
+621: p44 = new_with_vtable(descr=<SizeDescr 24>)
+632: setfield_gc(p44, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+636: setfield_gc(p44, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+647: i45 = arraylen_gc(p38, descr=<ArrayP 8>)
+647: setfield_gc(p43, p44, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+651: setfield_gc(p43, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+662: jump(p9, p41, p43, p17, p21, p11, p19, p20, p10, p39, p20, p19, p21, p23, p25, p30, p38, i28, descr=TargetToken(59470080))
+800: --end of the loop--
[3e4c22afd47be1b] jit-log-opt-bridge}
[3e4c22afd5745a8] {jit-backend
[3e4c22afd5d9ee2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cebe
[3e4c22afd5e1be0] jit-backend-dump}
[3e4c22afd5ebc06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cec94 +0  27000000
[3e4c22afd5ecffa] jit-backend-dump}
[3e4c22afd5f0b3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ceee5 +0  27000000
[3e4c22afd5f1948] jit-backend-dump}
[3e4c22afd5f4b5e] {jit-backend-addr
bridge out of Guard 0x39099a0 has address 0x7f4a5c1cec90 to 0x7f4a5c1ceee0
       gc table: 0x7f4a5c1cebe0
    jump target: 0x7f4a5c1cec90
         resops: 0x7f4a5c1cec9e
       failures: 0x7f4a5c1ceee0
            end: 0x7f4a5c1cf0ff
[3e4c22afd5f6fb1] jit-backend-addr}
[3e4c22afd5fa456] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cecae +0  71020000
[3e4c22afd5fb1ef] jit-backend-dump}
[3e4c22afd5fe59a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cecc5 +0  76020000
[3e4c22afd5ff281] jit-backend-dump}
[3e4c22afd602479] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cecd5 +0  82020000
[3e4c22afd603179] jit-backend-dump}
[3e4c22afd606289] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cece1 +0  92020000
[3e4c22afd606f2d] jit-backend-dump}
[3e4c22afd609ee3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cecf8 +0  97020000
[3e4c22afd60aba6] jit-backend-dump}
[3e4c22afd60dccb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ced0a +0  BD020000
[3e4c22afd60e9a9] jit-backend-dump}
[3e4c22afd611ae0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ced1e +0  C5020000
[3e4c22afd61279a] jit-backend-dump}
[3e4c22afd615787] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ced35 +0  CA020000
[3e4c22afd616447] jit-backend-dump}
[3e4c22afd6193f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ced4d +0  CE020000
[3e4c22afd61a0b3] jit-backend-dump}
[3e4c22afd61d078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ced64 +0  D3020000
[3e4c22afd61dd2f] jit-backend-dump}
[3e4c22afd620cc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ced7b +0  D8020000
[3e4c22afd621983] jit-backend-dump}
[3e4c22afd624920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ced92 +0  DD020000
[3e4c22afd625626] jit-backend-dump}
[3e4c22afd62862c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ceda9 +0  E2020000
[3e4c22afd629313] jit-backend-dump}
[3e4c22afd62c2c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cedc0 +0  E7020000
[3e4c22afd62cf77] jit-backend-dump}
[3e4c22afd62ff08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cedda +0  E9020000
[3e4c22afd630bbb] jit-backend-dump}
[3e4c22afd633b68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cedf1 +0  EE020000
[3e4c22afd634825] jit-backend-dump}
[3e4c22afd637a4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c9174 +0  185B0000
[3e4c22afd63875a] jit-backend-dump}
[3e4c22afd63c5f0] jit-backend}
[3e4c22afd63ffda] {jit-log-opt-bridge
# bridge out of Guard 0x39099a0 with 57 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x3a7b460>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull_class(p3, 16470384, descr=<Guard0x3a7b4c0>) [p0, p1]
+240: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+243: guard_false(i6, descr=<Guard0x3a754f0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+249: guard_class(p0, 16437896, descr=<Guard0x3a75538>) [p0, p1]
+261: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+265: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3a7b520>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+284: guard_not_invalidated(descr=<Guard0x3a75580>) [p0, p1]
+284: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: guard_class(p10, 16478448, descr=<Guard0x3a755c8>) [p0, p1]
+302: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+313: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3a75610>) [p0, p1]
+322: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+326: guard_nonnull_class(p14, 16470384, descr=<Guard0x3a7b580>) [p0, p1]
+345: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+349: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x3a7b5e0>) [p0, p1]
+369: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+373: guard_nonnull_class(p18, 16470384, descr=<Guard0x3a7b640>) [p0, p1]
+392: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+396: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3a7b6a0>) [p0, p1]
+415: p22 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+419: guard_nonnull_class(p22, 16470384, descr=<Guard0x3a7b700>) [p0, p1]
+438: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+442: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3a7b760>) [p0, p1]
+461: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+465: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3a7b7c0>) [p0, p1]
+484: p28 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+488: p29 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+492: guard_nonnull_class(p29, 16470384, descr=<Guard0x3a7b820>) [p0, p1]
+510: p31 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+514: guard_nonnull_class(p31, 16470384, descr=<Guard0x3a7b880>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+533: p33 = new_with_vtable(descr=<SizeDescr 32>)
+580: p34 = new_with_vtable(descr=<SizeDescr 48>)
+591: p35 = new_with_vtable(descr=<SizeDescr 32>)
+602: setfield_gc(p35, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+610: p38 = new_array_clear(5, descr=<ArrayP 8>)
+650: setarrayitem_gc(p38, 0, ConstPtr(ptr40), descr=<ArrayP 8>)
+654: setarrayitem_gc(p38, 1, p16, descr=<ArrayP 8>)
+658: setarrayitem_gc(p38, 2, p20, descr=<ArrayP 8>)
+662: setarrayitem_gc(p38, 3, p24, descr=<ArrayP 8>)
+666: setarrayitem_gc(p38, 4, p26, descr=<ArrayP 8>)
+670: setfield_gc(p35, p38, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+681: setfield_gc(p35, ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+685: setfield_gc(p33, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+696: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: setfield_gc(p33, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+711: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+715: setfield_gc(p34, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+719: setfield_gc(p34, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+730: setfield_gc(p34, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+734: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+738: jump(p33, p34, descr=TargetToken(59469840))
+768: --end of the loop--
[3e4c22afd673982] jit-log-opt-bridge}
[3e4c22afd88d70e] {jit-backend
[3e4c22afd8e18ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf
[3e4c22afd8e9cab] jit-backend-dump}
[3e4c22afd8f44f7] {jit-backend-addr
Loop 25 ((loop5 AppRand17 AppRand18) from (loop45105 (cdr rads35107) lst5109)) has address 0x7f4a5c1cf35d to 0x7f4a5c1cf5a0 (bootstrap 0x7f4a5c1cf2d0)
       gc table: 0x7f4a5c1cf230
       function: 0x7f4a5c1cf2d0
         resops: 0x7f4a5c1cf35d
       failures: 0x7f4a5c1cf5a0
            end: 0x7f4a5c1cf78f
[3e4c22afd8f7236] jit-backend-addr}
[3e4c22afd8fb35e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf374 +0  57020000
[3e4c22afd8fc645] jit-backend-dump}
[3e4c22afd8ffaf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf38a +0  5D020000
[3e4c22afd900944] jit-backend-dump}
[3e4c22afd903b67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf3a0 +0  63020000
[3e4c22afd904892] jit-backend-dump}
[3e4c22afd9079c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf3b6 +0  69020000
[3e4c22afd9086bd] jit-backend-dump}
[3e4c22afd90b721] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf3ca +0  71020000
[3e4c22afd90c3b9] jit-backend-dump}
[3e4c22afd90f3b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf3dd +0  7A020000
[3e4c22afd91006f] jit-backend-dump}
[3e4c22afd913065] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf3f3 +0  80020000
[3e4c22afd913d03] jit-backend-dump}
[3e4c22afd916f07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf40a +0  A1020000
[3e4c22afd917baf] jit-backend-dump}
[3e4c22afd91ac6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf421 +0  A6020000
[3e4c22afd91b907] jit-backend-dump}
[3e4c22afd91e8d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf438 +0  AB020000
[3e4c22afd91f56a] jit-backend-dump}
[3e4c22afd922526] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf44f +0  B0020000
[3e4c22afd9231c4] jit-backend-dump}
[3e4c22afd9261a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf466 +0  B5020000
[3e4c22afd926e43] jit-backend-dump}
[3e4c22afd929e33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf47e +0  B9020000
[3e4c22afd92aada] jit-backend-dump}
[3e4c22afd92dae9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf495 +0  BE020000
[3e4c22afd92e781] jit-backend-dump}
[3e4c22afd9317b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf4b0 +0  BF020000
[3e4c22afd932443] jit-backend-dump}
[3e4c22afd935ec0] jit-backend}
[3e4c22afd939afb] {jit-log-opt-loop
# Loop 25 ((loop5 AppRand17 AppRand18) from (loop45105 (cdr rads35107) lst5109)) : entry bridge with 58 ops
[p0, p1]
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (loop45105 (cdr rads35107) lst5109)')
+309: guard_class(p0, 16500368, descr=<Guard0x3a7b8e0>) [p1, p0]
+328: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+332: guard_nonnull_class(p3, 16478448, descr=<Guard0x3a7b940>) [p1, p0]
+350: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+354: guard_nonnull_class(p5, 16470384, descr=<Guard0x3a7b9a0>) [p1, p0]
+372: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+376: guard_nonnull_class(p7, 16470384, descr=<Guard0x3a7ba00>) [p1, p0]
+394: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+405: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3a756a0>) [p1, p0]
+414: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+414: guard_class(p1, 16437896, descr=<Guard0x3a756e8>) [p1, p0]
+433: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+437: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3a7ba60>) [p1, p0]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+455: guard_not_invalidated(descr=<Guard0x3a75730>) [p1, p0]
+455: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+459: guard_nonnull_class(p15, 16470384, descr=<Guard0x3a7bac0>) [p1, p0]
+478: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+482: guard_nonnull_class(p17, ConstClass(W_Symbol), descr=<Guard0x3a7bb20>) [p1, p0]
+501: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+505: guard_nonnull_class(p19, 16470384, descr=<Guard0x3a7bb80>) [p1, p0]
+524: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+528: guard_nonnull_class(p21, ConstClass(W_Symbol), descr=<Guard0x3a7bbe0>) [p1, p0]
+547: p23 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+551: guard_nonnull_class(p23, 16470384, descr=<Guard0x3a7bc40>) [p1, p0]
+570: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+574: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x3a7bca0>) [p1, p0]
+594: p27 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+598: guard_nonnull_class(p27, ConstClass(W_Vector), descr=<Guard0x3a7bd00>) [p1, p0]
+617: p29 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+621: p30 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+625: guard_nonnull_class(p30, 16616448, descr=<Guard0x3a7bd60>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+644: p32 = new_with_vtable(descr=<SizeDescr 32>)
+688: p33 = new_with_vtable(descr=<SizeDescr 48>)
+699: p34 = new_with_vtable(descr=<SizeDescr 32>)
+710: setfield_gc(p34, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+718: p37 = new_array_clear(5, descr=<ArrayP 8>)
+758: setarrayitem_gc(p37, 0, ConstPtr(ptr39), descr=<ArrayP 8>)
+762: setarrayitem_gc(p37, 1, p17, descr=<ArrayP 8>)
+766: setarrayitem_gc(p37, 2, p21, descr=<ArrayP 8>)
+770: setarrayitem_gc(p37, 3, p25, descr=<ArrayP 8>)
+774: setarrayitem_gc(p37, 4, p27, descr=<ArrayP 8>)
+778: setfield_gc(p34, p37, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+789: setfield_gc(p34, ConstPtr(ptr44), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+793: setfield_gc(p32, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+804: setfield_gc(p33, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+815: setfield_gc(p32, p30, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+819: setfield_gc(p32, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+823: setfield_gc(p33, p29, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+827: setfield_gc(p33, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+838: setfield_gc(p33, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+842: setfield_gc(p33, p34, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+846: jump(p32, p33, descr=TargetToken(59469840))
+880: --end of the loop--
[3e4c22afd96aa85] jit-log-opt-loop}
[3e4c22afdb90e91] {jit-backend
[3e4c22afdbe60da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf8b
[3e4c22afdbed92d] jit-backend-dump}
[3e4c22afdbf8132] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf954 +0  25000000
[3e4c22afdbf96c3] jit-backend-dump}
[3e4c22afdbfd5c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfb65 +0  25000000
[3e4c22afdbfe5ec] jit-backend-dump}
[3e4c22afdc01a01] {jit-backend-addr
bridge out of Guard 0x382fac0 has address 0x7f4a5c1cf950 to 0x7f4a5c1cfb60
       gc table: 0x7f4a5c1cf8b0
    jump target: 0x7f4a5c1cf950
         resops: 0x7f4a5c1cf95e
       failures: 0x7f4a5c1cfb60
            end: 0x7f4a5c1cfd47
[3e4c22afdc03ec8] jit-backend-addr}
[3e4c22afdc074d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf96e +0  31020000
[3e4c22afdc082c2] jit-backend-dump}
[3e4c22afdc0b65a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf985 +0  36020000
[3e4c22afdc0c39a] jit-backend-dump}
[3e4c22afdc0f4f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf995 +0  42020000
[3e4c22afdc101d8] jit-backend-dump}
[3e4c22afdc131b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf9a1 +0  52020000
[3e4c22afdc13ea9] jit-backend-dump}
[3e4c22afdc1a307] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf9b8 +0  57020000
[3e4c22afdc1b161] jit-backend-dump}
[3e4c22afdc1e9d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf9ca +0  7D020000
[3e4c22afdc1f7a0] jit-backend-dump}
[3e4c22afdc228fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf9de +0  85020000
[3e4c22afdc235cb] jit-backend-dump}
[3e4c22afdc265d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf9f5 +0  8A020000
[3e4c22afdc27296] jit-backend-dump}
[3e4c22afdc2a264] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfa0d +0  8E020000
[3e4c22afdc2af40] jit-backend-dump}
[3e4c22afdc2dfd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfa24 +0  93020000
[3e4c22afdc2ec98] jit-backend-dump}
[3e4c22afdc31e1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfa3b +0  98020000
[3e4c22afdc32b34] jit-backend-dump}
[3e4c22afdc35aa0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfa52 +0  9D020000
[3e4c22afdc367a3] jit-backend-dump}
[3e4c22afdc397f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfa6c +0  9F020000
[3e4c22afdc3a4fb] jit-backend-dump}
[3e4c22afdc3d43a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfa83 +0  A4020000
[3e4c22afdc3e0fd] jit-backend-dump}
[3e4c22afdc4132c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5ba5 +0  A79D0000
[3e4c22afdc4200a] jit-backend-dump}
[3e4c22afdc45d84] jit-backend}
[3e4c22afdc4987e] {jit-log-opt-bridge
# bridge out of Guard 0x382fac0 with 52 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x3a7bdc0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16470384, descr=<Guard0x3a7be20>) [p0, p1]
+224: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+227: guard_false(i6, descr=<Guard0x3a757c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+233: guard_class(p0, 16437352, descr=<Guard0x3a75808>) [p0, p1]
+245: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+249: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3a7be80>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+268: guard_not_invalidated(descr=<Guard0x3a75850>) [p0, p1]
+268: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+272: guard_class(p10, 16478072, descr=<Guard0x3a75898>) [p0, p1]
+286: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+297: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3a758e0>) [p0, p1]
+306: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+310: guard_nonnull_class(p14, 16470384, descr=<Guard0x3a7bee0>) [p0, p1]
+329: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+333: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x3a7bf40>) [p0, p1]
+353: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+357: guard_nonnull_class(p18, 16470384, descr=<Guard0x3a7bfa0>) [p0, p1]
+376: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+380: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3b64020>) [p0, p1]
+399: p22 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+403: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x3b64080>) [p0, p1]
+422: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+426: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+430: guard_nonnull_class(p25, 16616448, descr=<Guard0x3b640e0>) [p0, p1]
+448: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+452: guard_nonnull_class(p27, 16470384, descr=<Guard0x3b64140>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+471: p29 = new_with_vtable(descr=<SizeDescr 32>)
+518: p30 = new_with_vtable(descr=<SizeDescr 48>)
+529: p31 = new_with_vtable(descr=<SizeDescr 32>)
+540: setfield_gc(p31, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+548: p34 = new_array_clear(4, descr=<ArrayP 8>)
+581: setarrayitem_gc(p34, 0, ConstPtr(ptr36), descr=<ArrayP 8>)
+585: setarrayitem_gc(p34, 1, p16, descr=<ArrayP 8>)
+589: setarrayitem_gc(p34, 2, p20, descr=<ArrayP 8>)
+593: setarrayitem_gc(p34, 3, p22, descr=<ArrayP 8>)
+597: setfield_gc(p31, p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: setfield_gc(p31, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+612: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+623: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+627: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+631: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+635: setfield_gc(p30, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p30, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+658: jump(p29, p30, descr=TargetToken(59469520))
+688: --end of the loop--
[3e4c22afdc7b781] jit-log-opt-bridge}
[3e4c22afde46e31] {jit-backend
[3e4c22afdea4dea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfe
[3e4c22afdeaceac] jit-backend-dump}
[3e4c22afdeb71cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cff14 +0  27000000
[3e4c22afdeb868f] jit-backend-dump}
[3e4c22afdebc49e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0165 +0  27000000
[3e4c22afdebd317] jit-backend-dump}
[3e4c22afdec072c] {jit-backend-addr
bridge out of Guard 0x3a7ba00 has address 0x7f4a5c1cff10 to 0x7f4a5c1d0160
       gc table: 0x7f4a5c1cfe70
    jump target: 0x7f4a5c1cff10
         resops: 0x7f4a5c1cff1e
       failures: 0x7f4a5c1d0160
            end: 0x7f4a5c1d0363
[3e4c22afdec2d5c] jit-backend-addr}
[3e4c22afdec616e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cff2e +0  71020000
[3e4c22afdec6f35] jit-backend-dump}
[3e4c22afdeca174] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cff45 +0  76020000
[3e4c22afdecaecf] jit-backend-dump}
[3e4c22afdece022] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cff5c +0  7B020000
[3e4c22afdeced28] jit-backend-dump}
[3e4c22afded1d96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cff74 +0  7F020000
[3e4c22afded2a5f] jit-backend-dump}
[3e4c22afded5b2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cff88 +0  87020000
[3e4c22afded67e8] jit-backend-dump}
[3e4c22afded97b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cff9c +0  8F020000
[3e4c22afdeda44e] jit-backend-dump}
[3e4c22afdedd42c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cffb4 +0  93020000
[3e4c22afdede0b7] jit-backend-dump}
[3e4c22afdee11c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cffcb +0  B4020000
[3e4c22afdee1e6b] jit-backend-dump}
[3e4c22afdee4e40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cffe2 +0  B9020000
[3e4c22afdee5ae4] jit-backend-dump}
[3e4c22afdee8a6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfff9 +0  BE020000
[3e4c22afdee9701] jit-backend-dump}
[3e4c22afdeec6bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d000f +0  C4020000
[3e4c22afdeed35b] jit-backend-dump}
[3e4c22afdef02e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0026 +0  C9020000
[3e4c22afdef0fb2] jit-backend-dump}
[3e4c22afdef3fb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d003c +0  CF020000
[3e4c22afdef4c80] jit-backend-dump}
[3e4c22afdef7c33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0053 +0  D4020000
[3e4c22afdef88c5] jit-backend-dump}
[3e4c22afdefb8da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d006d +0  D6020000
[3e4c22afdefc559] jit-backend-dump}
[3e4c22afdeff79e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf3b6 +0  560B0000
[3e4c22afdf00433] jit-backend-dump}
[3e4c22afdf043d3] jit-backend}
[3e4c22afdf07e87] {jit-log-opt-bridge
# bridge out of Guard 0x3a7ba00 with 57 ops
[p0, p1]
+182: guard_class(p1, 16500368, descr=<Guard0x3b641a0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16478448, descr=<Guard0x3b64200>) [p0, p1]
+217: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+221: guard_nonnull_class(p5, 16470384, descr=<Guard0x3b64260>) [p0, p1]
+240: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+244: guard_nonnull_class(p7, 16616448, descr=<Guard0x3b642c0>) [p0, p1]
+264: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+275: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3a75970>) [p0, p1]
+284: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+284: guard_class(p0, 16437896, descr=<Guard0x3a759b8>) [p0, p1]
+304: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+308: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3b64320>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+328: guard_not_invalidated(descr=<Guard0x3a75a00>) [p0, p1]
+328: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+332: guard_nonnull_class(p15, 16470384, descr=<Guard0x3b64380>) [p0, p1]
+351: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+355: guard_nonnull_class(p17, ConstClass(W_Vector), descr=<Guard0x3b643e0>) [p0, p1]
+374: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+378: guard_nonnull_class(p19, 16470384, descr=<Guard0x3b64440>) [p0, p1]
+397: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+401: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x3b644a0>) [p0, p1]
+419: p23 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+423: guard_nonnull_class(p23, 16470384, descr=<Guard0x3b64500>) [p0, p1]
+442: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+446: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x3b64560>) [p0, p1]
+464: p27 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+468: guard_nonnull_class(p27, ConstClass(W_Vector), descr=<Guard0x3b645c0>) [p0, p1]
+487: p29 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+491: p30 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+495: guard_nonnull_class(p30, 16616448, descr=<Guard0x3b64620>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+513: p32 = new_with_vtable(descr=<SizeDescr 32>)
+560: p33 = new_with_vtable(descr=<SizeDescr 48>)
+571: p34 = new_with_vtable(descr=<SizeDescr 32>)
+582: setfield_gc(p34, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+590: p37 = new_array_clear(5, descr=<ArrayP 8>)
+630: setarrayitem_gc(p37, 0, ConstPtr(ptr39), descr=<ArrayP 8>)
+634: setarrayitem_gc(p37, 1, p17, descr=<ArrayP 8>)
+638: setarrayitem_gc(p37, 2, p21, descr=<ArrayP 8>)
+642: setarrayitem_gc(p37, 3, p25, descr=<ArrayP 8>)
+646: setarrayitem_gc(p37, 4, p27, descr=<ArrayP 8>)
+650: setfield_gc(p34, p37, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+661: setfield_gc(p34, ConstPtr(ptr44), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+665: setfield_gc(p32, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+676: setfield_gc(p33, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+687: setfield_gc(p32, p30, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+691: setfield_gc(p32, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+695: setfield_gc(p33, p29, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+699: setfield_gc(p33, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+710: setfield_gc(p33, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+714: setfield_gc(p33, p34, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+718: jump(p32, p33, descr=TargetToken(59469840))
+752: --end of the loop--
[3e4c22afdf3c5b8] jit-log-opt-bridge}
[3e4c22afe0c07ae] {jit-backend
[3e4c22afe12fed8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0500 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C7202000048FF0425E0269B028139700B01000F85000000004C8B71104D85F60F84000000004C8B2DFAFEFFFF4D39EE0F85000000004C8B69184983FD01720841817D00B09700000F850000000041813FA81600000F85000000004D8B77204C8B25E1FEFFFF4D39E60F85000000004D8B67284983FC01720841813C24F08C00000F85000000004D8B771841813EC81800000F85000000004D8B56204C8B0DCCFEFFFF4D39CA0F85000000004D8B4E284D8B56304D8B46184983F901720741813920BA00000F85000000004983FA01720741813AB09700000F85000000004D8B7110488B3DA6FEFFFF4939FE0F8500000000418138C81800000F8500000000498B78084883FF017206813F900F00000F85000000004D8B7128498B7130498B5908813B102001000F8500000000498B51384883FA017206813A601400000F8500000000498B41204883F80172068138601400000F85000000004C898D300100004C8B4A08488B50084939D10F85000000004D8B4A104983F9017207418139B09700000F85000000004989D7488B0C25F091F900488D91A0000000483B14251092F9000F87F500000048891425F091F90048C701B09700004C8969104C8961084983FF000F8C0000000049BBFEFFFFFFFFFFFF7F4D39DF0F8F000000004C8D791849C707700B01004D8D672049C70424C81800004D8D6C243849C7450030B7000049895D08488B15DCFDFFFF498955104D897518498975204D8955284D894F1049894F18488B0DC5FDFFFF49894C242049895C24104D894424184D896C24284D8954243049897C2408488BBD3001000049897F084C89BD300100004C89A53801000049BB10791C5C4A7F000041FFE3660F1F84000000000048C7442408FFFFFF0049BB78031D5C4A7F00004C895D204D8D9B783FFFFF41FFD3E968FDFFFF49BBC8041D5C4A7F00004C895D204D8D9B2846FFFF41FFD3E9F6FEFFFFFF3557FCFFFF49BB88031D5C4A7F000041534D8D9B783CFFFF41FFE3FF3543FCFFFF49BB98031D5C4A7F000041534D8D9B683CFFFF41FFE3FF3537FCFFFF49BBA8031D5C4A7F000041534D8D9B583CFFFF41FFE3FF3523FCFFFF49BBB8031D5C4A7F000041534D8D9B483CFFFF41FFE3FF350FFCFFFF49BBC8031D5C4A7F000041534D8D9B383CFFFF41FFE3FF3503FCFFFF49BBD8031D5C4A7F000041534D8D9B283CFFFF41FFE3FF35EFFBFFFF49BBE8031D5C4A7F000041534D8D9B183CFFFF41FFE3FF35DBFBFFFF49BBF8031D5C4A7F000041534D8D9B083CFFFF41FFE3FF35C7FBFFFF49BB08041D5C4A7F000041534D8D9BF83BFFFF41FFE3FF35BBFBFFFF49BB18041D5C4A7F000041534D8D9BE83BFFFF41FFE3FF35A7FBFFFF49BB28041D5C4A7F000041534D8D9BD83BFFFF41FFE3FF3593FBFFFF49BB38041D5C4A7F000041534D8D9BC83BFFFF41FFE3FF3587FBFFFF49BB48041D5C4A7F000041534D8D9BB83BFFFF41FFE3FF3573FBFFFF49BB58041D5C4A7F000041534D8D9BA83BFFFF41FFE3FF355FFBFFFF49BB68041D5C4A7F000041534D8D9B983BFFFF41FFE3FF354BFBFFFF49BB78041D5C4A7F000041534D8D9B883BFFFF41FFE3FF3537FBFFFF49BB88041D5C4A7F000041534D8D9B783BFFFF41FFE3FF3523FBFFFF49BB98041D5C4A7F000041534D8D9B683BFFFF41FFE3FF350FFBFFFF49BBA8041D5C4A7F000041534D8D9B583BFFFF41FFE3FF35FBFAFFFF49BBB8041D5C4A7F000041534D8D9B483BFFFF41FFE3FF35E7FAFFFF49BBD8041D5C4A7F000041534D8D9B283BFFFF41FFE3FF35D3FAFFFF49BBE8041D5C4A7F000041534D8D9B183BFFFF41FFE3
[3e4c22afe1388e9] jit-backend-dump}
[3e4c22afe142b0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d05e4 +0  27000000
[3e4c22afe1440c0] jit-backend-dump}
[3e4c22afe147dc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0865 +0  27000000
[3e4c22afe148c4a] jit-backend-dump}
[3e4c22afe14c03a] {jit-backend-addr
bridge out of Guard 0x38f0d10 has address 0x7f4a5c1d05e0 to 0x7f4a5c1d0860
       gc table: 0x7f4a5c1d0500
    jump target: 0x7f4a5c1d05e0
         resops: 0x7f4a5c1d05ee
       failures: 0x7f4a5c1d0860
            end: 0x7f4a5c1d0b0b
[3e4c22afe14e3ae] jit-backend-addr}
[3e4c22afe15179c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d05fe +0  A1020000
[3e4c22afe1525bb] jit-backend-dump}
[3e4c22afe155779] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d060b +0  B0020000
[3e4c22afe156479] jit-backend-dump}
[3e4c22afe1594d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d061b +0  BC020000
[3e4c22afe15a178] jit-backend-dump}
[3e4c22afe15d153] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0633 +0  C0020000
[3e4c22afe15ddc9] jit-backend-dump}
[3e4c22afe160d6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0640 +0  CF020000
[3e4c22afe1619dd] jit-backend-dump}
[3e4c22afe164959] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0654 +0  D7020000
[3e4c22afe1655cc] jit-backend-dump}
[3e4c22afe168a71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d066c +0  F7020000
[3e4c22afe16970f] jit-backend-dump}
[3e4c22afe16c7f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d067d +0  02030000
[3e4c22afe16d495] jit-backend-dump}
[3e4c22afe170430] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0691 +0  0A030000
[3e4c22afe1710e6] jit-backend-dump}
[3e4c22afe174084] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d06b0 +0  07030000
[3e4c22afe174d03] jit-backend-dump}
[3e4c22afe177c79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d06c3 +0  10030000
[3e4c22afe178923] jit-backend-dump}
[3e4c22afe17b890] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d06d7 +0  18030000
[3e4c22afe17c534] jit-backend-dump}
[3e4c22afe17f4c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d06e4 +0  27030000
[3e4c22afe180135] jit-backend-dump}
[3e4c22afe1830b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d06fa +0  2D030000
[3e4c22afe183d34] jit-backend-dump}
[3e4c22afe186d05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0712 +0  31030000
[3e4c22afe1879a0] jit-backend-dump}
[3e4c22afe18a8fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0728 +0  37030000
[3e4c22afe18b57a] jit-backend-dump}
[3e4c22afe18e4ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d073e +0  3D030000
[3e4c22afe18f16f] jit-backend-dump}
[3e4c22afe192131] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0756 +0  41030000
[3e4c22afe192e1f] jit-backend-dump}
[3e4c22afe195db3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d076d +0  46030000
[3e4c22afe196a26] jit-backend-dump}
[3e4c22afe1999a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d07ae +0  21030000
[3e4c22afe19a62b] jit-backend-dump}
[3e4c22afe19d591] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d07c1 +0  2A030000
[3e4c22afe19e229] jit-backend-dump}
[3e4c22afe1a1436] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6de3 +0  F9970000
[3e4c22afe1a20f0] jit-backend-dump}
[3e4c22afe1a604d] jit-backend}
[3e4c22afe1a9a93] {jit-log-opt-bridge
# bridge out of Guard 0x38f0d10 with 81 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x3b646e0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x3a75a48>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x3a75a90>) [p0, p1]
debug_merge_point(0, 0, 'lst5115')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16470384, descr=<Guard0x3b64740>) [p0, p1]
+311: guard_class(p0, 16437352, descr=<Guard0x3a75ad8>) [p0, p1]
+324: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+335: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3a75b20>) [p0, p1]
+344: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+344: guard_not_invalidated(descr=<Guard0x3a75b68>) [p0, p1]
+344: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+348: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3b647a0>) [p0, p1]
+368: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (loop5 (cdr rads4) lst5115)')
+372: guard_class(p14, 16437896, descr=<Guard0x3a75bb0>) [p0, p1]
+385: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+396: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3a75bf8>) [p0, p1]
+405: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+405: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+409: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+413: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (cons AppRand15 AppRand16)')
+417: guard_nonnull_class(p19, 16479200, descr=<Guard0x3b64800>) [p0, p1]
+436: guard_nonnull_class(p20, 16470384, descr=<Guard0x3b64860>) [p0, p1]
+455: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+466: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3a75c40>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+475: guard_class(p21, 16437896, descr=<Guard0x3a75c88>) [p0, p1]
+488: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+492: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3b648c0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+510: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+514: p30 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+518: p31 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+522: guard_class(p31, 16505296, descr=<Guard0x3a75cd0>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+534: p33 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+538: guard_nonnull_class(p33, ConstClass(W_Fixnum), descr=<Guard0x3b64920>) [p0, p1]
+556: p35 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+560: guard_nonnull_class(p35, ConstClass(W_Fixnum), descr=<Guard0x3b64980>) [p0, p1]
+578: i37 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+589: i38 = getfield_gc_i(p35, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+593: i39 = int_eq(i37, i38)
+596: guard_true(i39, descr=<Guard0x3a75d18>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+602: p40 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+606: guard_nonnull_class(p40, 16470384, descr=<Guard0x3b649e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+625: p42 = new_with_vtable(descr=<SizeDescr 24>)
+672: setfield_gc(p42, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+676: setfield_gc(p42, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+680: i44 = int_ge(i38, 0)
+684: guard_true(i44, descr=<Guard0x3b64a40>) [p42, p40, p19, p30, p29, p20, p21, p31, p27]
+690: i46 = int_le(i38, 9223372036854775806)
+703: guard_true(i46, descr=<Guard0x3b64aa0>) [p42, p40, p19, p30, p29, p20, p21, p31, p27]
+709: p47 = new_with_vtable(descr=<SizeDescr 32>)
+720: p48 = new_with_vtable(descr=<SizeDescr 56>)
+732: p49 = new_with_vtable(descr=<SizeDescr 48>)
+745: setfield_gc(p49, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+756: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+760: setfield_gc(p49, p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+764: setfield_gc(p49, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+768: setfield_gc(p49, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+772: setfield_gc(p47, p40, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+776: setfield_gc(p47, p42, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+787: setfield_gc(p48, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+792: setfield_gc(p48, p31, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+797: setfield_gc(p48, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+802: setfield_gc(p48, p49, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+807: setfield_gc(p48, p20, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+812: setfield_gc(p48, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+817: setfield_gc(p47, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+828: jump(p47, p48, descr=TargetToken(59470000))
+864: --end of the loop--
[3e4c22afe1eb64c] jit-log-opt-bridge}
[3e4c22afe46ef50] {jit-backend
[3e4c22afe4f18e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0cb0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB202000048FF042580279B028139700B01000F85000000004C8B79104983FF01720741813FB09700000F85000000004C8B35F0FEFFFF4D39F70F84000000004C8BAD3801000041817D00C81800000F85000000004D8B65084983FC01720841813C24900F00000F85000000004C8B510841813A20BA00000F85000000004D8B4A104C8B05C6FEFFFF4D39C10F85000000004D8B42184D8B4A20498B7A30498B7238498B5A08813B102001000F8500000000498B52284883FA017206813A601400000F85000000004883FE017206813E601400000F85000000004C8B5208488B56084939D20F84000000004983F8017207418138F08C00000F85000000004883FA000F8C000000004D8B50084C39D20F8D000000004D8B501841813AC8EB02000F85000000004D8B5010498B44D2108138B09700000F85000000004D8B57104983FA01720741813A40D202000F850000000048898530010000488B41184883F80172068138B09700000F85000000004D39F20F85000000004983F9017207418139601400000F85000000004D8B71084C39F20F85000000004C8BB530010000498B56104883FA017206813AB09700000F850000000048899540010000488B0C25F091F900488D91C8000000483B14251092F9000F870401000048891425F091F90048C70120BA0000488D514048C702700B0100488959084C8D522049C702C818000048899548010000498D523848C70230B7000048895A084C8995500100004C8B15B9FDFFFF4C89521048897A184C897A204C8972284C8B95480100004C8BB5400100004D8972104C8BB5500100004D89660849894A084C8B2589FDFFFF4C8961104C8941184C8949204C89793048897138488979284989421849895E104D896E184C8B2D66FDFFFF4D896E2049895628488B9530010000498956304C8995300100004C89B53801000049BB10791C5C4A7F000041FFE348C7442408FFFFFF0049BB180B1D5C4A7F00004C895D204D8D9BD837FFFF41FFD3E928FDFFFF49BB980C1D5C4A7F00004C895D204D8D9B583EFFFF41FFD3E9E7FEFFFFFF3517FCFFFF49BB280B1D5C4A7F000041534D8D9BD834FFFF41FFE3FF3503FCFFFF49BB380B1D5C4A7F000041534D8D9BC834FFFF41FFE3FF35F7FBFFFF49BB480B1D5C4A7F000041534D8D9BB834FFFF41FFE3FF35E3FBFFFF49BB580B1D5C4A7F000041534D8D9BA834FFFF41FFE3FF35CFFBFFFF49BB680B1D5C4A7F000041534D8D9B9834FFFF41FFE3FF35BBFBFFFF49BB780B1D5C4A7F000041534D8D9B8834FFFF41FFE3FF35AFFBFFFF49BB880B1D5C4A7F000041534D8D9B7834FFFF41FFE3FF359BFBFFFF49BB980B1D5C4A7F000041534D8D9B6834FFFF41FFE3FF3587FBFFFF49BBA80B1D5C4A7F000041534D8D9B5834FFFF41FFE3FF3573FBFFFF49BBB80B1D5C4A7F000041534D8D9B4834FFFF41FFE3FF355FFBFFFF49BBC80B1D5C4A7F000041534D8D9B3834FFFF41FFE3FF354BFBFFFF49BBD80B1D5C4A7F000041534D8D9B2834FFFF41FFE3FF3537FBFFFF49BBE80B1D5C4A7F000041534D8D9B1834FFFF41FFE3FF3523FBFFFF49BBF80B1D5C4A7F000041534D8D9B0834FFFF41FFE3FF350FFBFFFF49BB080C1D5C4A7F000041534D8D9BF833FFFF41FFE3FF35FBFAFFFF49BB180C1D5C4A7F000041534D8D9BE833FFFF41FFE3FF35E7FAFFFF49BB280C1D5C4A7F000041534D8D9BD833FFFF41FFE3FF35D3FAFFFF49BB380C1D5C4A7F000041534D8D9BC833FFFF41FFE3FF35BFFAFFFF49BB480C1D5C4A7F000041534D8D9BB833FFFF41FFE3FF35ABFAFFFF49BB580C1D5C4A7F000041534D8D9BA833FFFF41FFE3FF3597FAFFFF49BB680C1D5C4A7F000041534D8D9B9833FFFF41FFE3FF3583FAFFFF49BB780C1D5C4A7F000041534D8D9B8833FFFF41FFE3FF356FFAFFFF49BB880C1D5C4A7F000041534D8D9B7833FFFF41FFE3
[3e4c22afe4faa89] jit-backend-dump}
[3e4c22afe5051b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0d94 +0  27000000
[3e4c22afe506602] jit-backend-dump}
[3e4c22afe50a4b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1055 +0  27000000
[3e4c22afe50b2c4] jit-backend-dump}
[3e4c22afe50e5e1] {jit-backend-addr
bridge out of Guard 0x3a74c80 has address 0x7f4a5c1d0d90 to 0x7f4a5c1d1050
       gc table: 0x7f4a5c1d0cb0
    jump target: 0x7f4a5c1d0d90
         resops: 0x7f4a5c1d0d9e
       failures: 0x7f4a5c1d1050
            end: 0x7f4a5c1d1317
[3e4c22afe510964] jit-backend-addr}
[3e4c22afe513d3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0dae +0  E1020000
[3e4c22afe514bae] jit-backend-dump}
[3e4c22afe517f28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0dc5 +0  E6020000
[3e4c22afe518c74] jit-backend-dump}
[3e4c22afe51be8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0dd5 +0  F2020000
[3e4c22afe51cba6] jit-backend-dump}
[3e4c22afe51fcbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0dea +0  F9020000
[3e4c22afe5209de] jit-backend-dump}
[3e4c22afe523aad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e02 +0  FD020000
[3e4c22afe5247b6] jit-backend-dump}
[3e4c22afe5277ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e13 +0  08030000
[3e4c22afe52851a] jit-backend-dump}
[3e4c22afe52b557] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e27 +0  10030000
[3e4c22afe52c272] jit-backend-dump}
[3e4c22afe52f293] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e47 +0  0C030000
[3e4c22afe52ffbe] jit-backend-dump}
[3e4c22afe533117] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e5d +0  2E030000
[3e4c22afe533e64] jit-backend-dump}
[3e4c22afe536f3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e6f +0  38030000
[3e4c22afe537c5b] jit-backend-dump}
[3e4c22afe53accb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e80 +0  43030000
[3e4c22afe53ba24] jit-backend-dump}
[3e4c22afe53ea94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e93 +0  4C030000
[3e4c22afe53f7de] jit-backend-dump}
[3e4c22afe542817] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e9d +0  5E030000
[3e4c22afe543567] jit-backend-dump}
[3e4c22afe5465d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0eaa +0  6D030000
[3e4c22afe54730e] jit-backend-dump}
[3e4c22afe54a34b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0ebb +0  78030000
[3e4c22afe54b0b6] jit-backend-dump}
[3e4c22afe54e0fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0ed0 +0  7F030000
[3e4c22afe54ee0b] jit-backend-dump}
[3e4c22afe551e32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0ee7 +0  84030000
[3e4c22afe552b47] jit-backend-dump}
[3e4c22afe555b65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0f04 +0  83030000
[3e4c22afe556874] jit-backend-dump}
[3e4c22afe559898] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0f0d +0  96030000
[3e4c22afe55a5b4] jit-backend-dump}
[3e4c22afe55d5e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0f20 +0  9F030000
[3e4c22afe55e2f6] jit-backend-dump}
[3e4c22afe56132d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0f2d +0  AE030000
[3e4c22afe56203f] jit-backend-dump}
[3e4c22afe56504e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0f4a +0  AD030000
[3e4c22afe565d57] jit-backend-dump}
[3e4c22afe56906b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd921 +0  6B340000
[3e4c22afe569daf] jit-backend-dump}
[3e4c22afe56ddae] jit-backend}
[3e4c22afe5719c8] {jit-log-opt-bridge
# bridge out of Guard 0x3a74c80 with 96 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x3b64b60>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull_class(p3, 16470384, descr=<Guard0x3b64bc0>) [p0, p1]
+288: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+291: guard_false(i6, descr=<Guard0x3a75d60>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+297: guard_class(p0, 16437896, descr=<Guard0x3a75da8>) [p0, p1]
+318: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+322: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3b64c20>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+342: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+346: guard_class(p10, 16479200, descr=<Guard0x3a75df0>) [p0, p1]
+359: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+370: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3a75e38>) [p0, p1]
+379: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+383: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+387: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+391: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+395: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+399: guard_class(p18, 16505296, descr=<Guard0x3a75e80>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+411: guard_not_invalidated(descr=<Guard0x3a75ec8>) [p0, p1]
+411: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+415: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3b64c80>) [p0, p1]
+433: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3b64ce0>) [p0, p1]
+451: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+455: i24 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+459: i25 = int_eq(i23, i24)
+462: guard_false(i25, descr=<Guard0x3a75f10>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+468: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x3b64d40>) [p0, p1]
+487: i28 = int_ge(i24, 0)
+491: guard_true(i28, descr=<Guard0x3a75f58>) [p0, p1]
+497: i29 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+501: i30 = int_lt(i24, i29)
+504: guard_true(i30, descr=<Guard0x3a75fa0>) [p0, p1]
+510: p31 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+514: guard_class(p31, 16622984, descr=<Guard0x3b6e020>) [p0, p1]
+527: p33 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+531: p34 = getarrayitem_gc_r(p33, i24, descr=<ArrayP 8>)
+536: guard_class(p34, 16470384, descr=<Guard0x3b6e068>) [p0, p1]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+548: p36 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+552: guard_nonnull_class(p36, 16616448, descr=<Guard0x3b64da0>) [p0, p1]
+571: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+582: guard_nonnull_class(p38, 16470384, descr=<Guard0x3b64e00>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+600: i41 = instance_ptr_eq(p36, ConstPtr(ptr40))
+603: guard_true(i41, descr=<Guard0x3b6e0b0>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
debug_merge_point(0, 0, '(= nc35084 nc4)')
+609: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3b64e60>) [p0, p1]
+628: i43 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+632: i44 = int_eq(i24, i43)
+635: guard_true(i44, descr=<Guard0x3b6e0f8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+641: p45 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+652: guard_nonnull_class(p45, 16470384, descr=<Guard0x3b64ec0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+670: p47 = new_with_vtable(descr=<SizeDescr 64>)
+721: p48 = new_with_vtable(descr=<SizeDescr 32>)
+732: setfield_gc(p47, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+736: p49 = new_with_vtable(descr=<SizeDescr 56>)
+747: p50 = new_with_vtable(descr=<SizeDescr 48>)
+765: setfield_gc(p50, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+783: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+787: setfield_gc(p50, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+791: setfield_gc(p50, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+795: setfield_gc(p50, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+799: setfield_gc(p48, p45, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+817: setfield_gc(p49, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+828: setfield_gc(p48, p47, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+839: setfield_gc(p47, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+843: setfield_gc(p47, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+847: setfield_gc(p47, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+851: setfield_gc(p47, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+855: setfield_gc(p47, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+859: setfield_gc(p47, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+863: setfield_gc(p48, p38, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+867: setfield_gc(p49, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+871: setfield_gc(p49, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+882: setfield_gc(p49, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+886: setfield_gc(p49, p50, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+890: setfield_gc(p49, p34, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+901: jump(p48, p49, descr=TargetToken(59470000))
+928: --end of the loop--
[3e4c22afe5be8a5] jit-log-opt-bridge}
[3e4c22afe76dbc0] {jit-backend
[3e4c22afe7cefe7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1470 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F879302000048FF042500289B02488B8D300100008139700B01000F8500000000488B41104883F80172068138F08C00000F8500000000488B51184883FA017206813AB09700000F8500000000488B9D38010000813BC81800000F8500000000488B7320488B3D6EFEFFFF4839FE0F8500000000488B7B28488B73304C8B43184883FF017206813F30B700000F85000000004883FE017206813EB09700000F85000000004C8B4F104C8B1552FEFFFF4D39D10F8500000000418138C81800000F85000000004D8B50084983FA01720741813A900F00000F85000000004C8B4F184983F9017207418139B09700000F85000000004D8B61084983FC01720841813C24F08C00000F85000000004C8B4F204983F9017207418139B09700000F85000000004D8B69084983FD01720841817D00F08C00000F85000000004C8B4F284983F9017207418139B09700000F85000000004D8B71084983FE01720741813EF08C00000F85000000004C8B4E084983F9017207418139F08C00000F85000000004C8B7F084889BD40010000488B7E104883FF017206813FB09700000F85000000004889D3488B0C25F091F900488D91C0000000483B14251092F9000F87EB00000048891425F091F90048C701700B0100488D512048C702B09700004889420848895A10488D5A1848C703A8160000488D433048C700F08C000048C7400805000000488D702048C706080E000048C746080500000048898D30010000488B0D40FDFFFF48894E104C8966184C896E204C8976284C894E3048897010488B3529FDFFFF48897018488BB53001000048897E1048895618488B1517FDFFFF488953204C897B104C8943184C8953084C8B95400100004C895608488943284889B53001000048899D3801000049BBD0661C5C4A7F000041FFE30F1F44000049BB50571C5C4A7F000041FFD3E95BFDFFFF49BB60141D5C4A7F00004C895D204D8D9B9036FFFF41FFD3E900FFFFFFFF35EBFBFFFF49BB30131D5C4A7F000041534D8D9BD02CFFFF41FFE3FF35D7FBFFFF49BB40131D5C4A7F000041534D8D9BC02CFFFF41FFE3FF35C3FBFFFF49BB50131D5C4A7F000041534D8D9BB02CFFFF41FFE3FF35AFFBFFFF49BB60131D5C4A7F000041534D8D9BA02CFFFF41FFE3FF35A3FBFFFF49BB70131D5C4A7F000041534D8D9B902CFFFF41FFE3FF358FFBFFFF49BB80131D5C4A7F000041534D8D9B802CFFFF41FFE3FF357BFBFFFF49BB90131D5C4A7F000041534D8D9B702CFFFF41FFE3FF3567FBFFFF49BBA0131D5C4A7F000041534D8D9B602CFFFF41FFE3FF355BFBFFFF49BBB0131D5C4A7F000041534D8D9B502CFFFF41FFE3FF3547FBFFFF49BBC0131D5C4A7F000041534D8D9B402CFFFF41FFE3FF3533FBFFFF49BBD0131D5C4A7F000041534D8D9B302CFFFF41FFE3FF351FFBFFFF49BBE0131D5C4A7F000041534D8D9B202CFFFF41FFE3FF350BFBFFFF49BBF0131D5C4A7F000041534D8D9B102CFFFF41FFE3FF35F7FAFFFF49BB00141D5C4A7F000041534D8D9B002CFFFF41FFE3FF35E3FAFFFF49BB10141D5C4A7F000041534D8D9BF02BFFFF41FFE3FF35CFFAFFFF49BB20141D5C4A7F000041534D8D9BE02BFFFF41FFE3FF35BBFAFFFF49BB30141D5C4A7F000041534D8D9BD02BFFFF41FFE3FF35A7FAFFFF49BB40141D5C4A7F000041534D8D9BC02BFFFF41FFE3FF3593FAFFFF49BB50141D5C4A7F000041534D8D9BB02BFFFF41FFE3
[3e4c22afe7d784c] jit-backend-dump}
[3e4c22afe7e23e6] {jit-backend-addr
Loop 30 ((cons AppRand15 AppRand16) from (loop5 (cdr rads4) lst5115)) has address 0x7f4a5c1d15bd to 0x7f4a5c1d1850 (bootstrap 0x7f4a5c1d1530)
       gc table: 0x7f4a5c1d1470
       function: 0x7f4a5c1d1530
         resops: 0x7f4a5c1d15bd
       failures: 0x7f4a5c1d1850
            end: 0x7f4a5c1d1a93
[3e4c22afe7e5038] jit-backend-addr}
[3e4c22afe7e91e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d15d4 +0  A7020000
[3e4c22afe7ea321] jit-backend-dump}
[3e4c22afe7ed6b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d15ea +0  AD020000
[3e4c22afe7ee49e] jit-backend-dump}
[3e4c22afe7f15ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1600 +0  B3020000
[3e4c22afe7f22cc] jit-backend-dump}
[3e4c22afe7f52ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1613 +0  BC020000
[3e4c22afe7f5fea] jit-backend-dump}
[3e4c22afe7f8ffc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1627 +0  C4020000
[3e4c22afe7f9d0b] jit-backend-dump}
[3e4c22afe7fce76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1645 +0  DE020000
[3e4c22afe7fdbc3] jit-backend-dump}
[3e4c22afe800be1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1657 +0  E8020000
[3e4c22afe8018f9] jit-backend-dump}
[3e4c22afe8048ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d166b +0  F0020000
[3e4c22afe80560b] jit-backend-dump}
[3e4c22afe8085f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1678 +0  FF020000
[3e4c22afe80930d] jit-backend-dump}
[3e4c22afe80c2e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d168f +0  04030000
[3e4c22afe80cfbd] jit-backend-dump}
[3e4c22afe80ffa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d16a6 +0  09030000
[3e4c22afe810c6a] jit-backend-dump}
[3e4c22afe813c72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d16be +0  0D030000
[3e4c22afe8149cb] jit-backend-dump}
[3e4c22afe81796b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d16d5 +0  12030000
[3e4c22afe818650] jit-backend-dump}
[3e4c22afe81b624] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d16ed +0  16030000
[3e4c22afe81c30c] jit-backend-dump}
[3e4c22afe81f2e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1704 +0  1B030000
[3e4c22afe81ffc5] jit-backend-dump}
[3e4c22afe822f84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d171b +0  20030000
[3e4c22afe823c6b] jit-backend-dump}
[3e4c22afe826bf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1732 +0  25030000
[3e4c22afe8278c2] jit-backend-dump}
[3e4c22afe82a86c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1753 +0  20030000
[3e4c22afe82b560] jit-backend-dump}
[3e4c22afe82f014] jit-backend}
[3e4c22afe832dcb] {jit-log-opt-loop
# Loop 30 ((cons AppRand15 AppRand16) from (loop5 (cdr rads4) lst5115)) : entry bridge with 68 ops
[p0, p1]
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (loop5 (cdr rads4) lst5115)')
+341: guard_class(p0, 16500016, descr=<Guard0x3b64f20>) [p1, p0]
+360: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+364: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x3b64f80>) [p1, p0]
+382: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+386: guard_nonnull_class(p5, 16470384, descr=<Guard0x3b64fe0>) [p1, p0]
+404: guard_class(p1, 16437896, descr=<Guard0x3b6e188>) [p1, p0]
+423: p8 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+434: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3b6e1d0>) [p1, p0]
+443: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+443: guard_not_invalidated(descr=<Guard0x3b6e218>) [p1, p0]
+443: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+447: p12 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+451: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (cons AppRand15 AppRand16)')
+455: guard_nonnull_class(p11, 16478448, descr=<Guard0x3b65040>) [p1, p0]
+473: guard_nonnull_class(p12, 16470384, descr=<Guard0x3b650a0>) [p1, p0]
+491: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+502: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3b6e260>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+511: guard_class(p13, 16437896, descr=<Guard0x3b6e2a8>) [p1, p0]
+524: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+528: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x3b65100>) [p1, p0]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+547: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+551: guard_nonnull_class(p21, 16470384, descr=<Guard0x3b65160>) [p1, p0]
+570: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+574: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x3b651c0>) [p1, p0]
+594: p25 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+598: guard_nonnull_class(p25, 16470384, descr=<Guard0x3b65220>) [p1, p0]
+617: p27 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+621: guard_nonnull_class(p27, ConstClass(W_Vector), descr=<Guard0x3b65280>) [p1, p0]
+641: p29 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+645: guard_nonnull_class(p29, 16470384, descr=<Guard0x3b652e0>) [p1, p0]
+664: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+668: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x3b65340>) [p1, p0]
+687: p33 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+691: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3b653a0>) [p1, p0]
+710: p35 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+714: p36 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+725: guard_nonnull_class(p36, 16470384, descr=<Guard0x3b65400>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+743: p38 = new_with_vtable(descr=<SizeDescr 32>)
+790: p39 = new_with_vtable(descr=<SizeDescr 24>)
+801: setfield_gc(p39, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+805: setfield_gc(p39, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+809: p40 = new_with_vtable(descr=<SizeDescr 48>)
+820: p41 = new_with_vtable(descr=<SizeDescr 32>)
+831: setfield_gc(p41, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+839: p44 = new_array_clear(5, descr=<ArrayP 8>)
+872: setarrayitem_gc(p44, 0, ConstPtr(ptr46), descr=<ArrayP 8>)
+876: setarrayitem_gc(p44, 1, p23, descr=<ArrayP 8>)
+880: setarrayitem_gc(p44, 2, p27, descr=<ArrayP 8>)
+884: setarrayitem_gc(p44, 3, p31, descr=<ArrayP 8>)
+888: setarrayitem_gc(p44, 4, p33, descr=<ArrayP 8>)
+892: setfield_gc(p41, p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+903: setfield_gc(p41, ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+907: setfield_gc(p38, p36, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+918: setfield_gc(p38, p39, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+929: setfield_gc(p40, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+933: setfield_gc(p40, p35, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+937: setfield_gc(p40, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+941: setfield_gc(p40, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+945: setfield_gc(p38, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+956: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+960: jump(p38, p40, descr=TargetToken(59469840))
+992: --end of the loop--
[3e4c22afe86b680] jit-log-opt-loop}
[3e4c22afedc4dd5] {jit-backend
[3e4c22afee53660] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1c
[3e4c22afee5da5b] jit-backend-dump}
[3e4c22afee68a22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1d94 +0  28000000
[3e4c22afee6a04c] jit-backend-dump}
[3e4c22afee6dfe3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2145 +0  28000000
[3e4c22afee6ee98] jit-backend-dump}
[3e4c22afee72267] {jit-backend-addr
bridge out of Guard 0x3b64da0 has address 0x7f4a5c1d1d90 to 0x7f4a5c1d2140
       gc table: 0x7f4a5c1d1c90
    jump target: 0x7f4a5c1d1d90
         resops: 0x7f4a5c1d1d9e
       failures: 0x7f4a5c1d2140
            end: 0x7f4a5c1d2493
[3e4c22afee748ad] jit-backend-addr}
[3e4c22afee77dab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1dae +0  D1030000
[3e4c22afee78b56] jit-backend-dump}
[3e4c22afee7bce0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1dc5 +0  D6030000
[3e4c22afee7ca0b] jit-backend-dump}
[3e4c22afee7fae3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1dd5 +0  E2030000
[3e4c22afee807b5] jit-backend-dump}
[3e4c22afee83857] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1de3 +0  F0030000
[3e4c22afee8455a] jit-backend-dump}
[3e4c22afee875e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1dfb +0  F4030000
[3e4c22afee88307] jit-backend-dump}
[3e4c22afee8b3f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1e0c +0  FF030000
[3e4c22afee8c0da] jit-backend-dump}
[3e4c22afee8f187] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1e20 +0  07040000
[3e4c22afee8fe9a] jit-backend-dump}
[3e4c22afee92f66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1e40 +0  03040000
[3e4c22afee93c5a] jit-backend-dump}
[3e4c22afee96e3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1e56 +0  25040000
[3e4c22afee97b83] jit-backend-dump}
[3e4c22afee9acf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1e68 +0  2F040000
[3e4c22afee9b9c0] jit-backend-dump}
[3e4c22afee9ea5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1e79 +0  3A040000
[3e4c22afee9f76b] jit-backend-dump}
[3e4c22afeea28b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1e8c +0  43040000
[3e4c22afeea3590] jit-backend-dump}
[3e4c22afeea6701] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1e96 +0  55040000
[3e4c22afeea7420] jit-backend-dump}
[3e4c22afeeaa4ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1ea3 +0  64040000
[3e4c22afeeab1e0] jit-backend-dump}
[3e4c22afeeae222] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1eb3 +0  70040000
[3e4c22afeeaeeee] jit-backend-dump}
[3e4c22afeeb1f7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1ed1 +0  6E040000
[3e4c22afeeb2c46] jit-backend-dump}
[3e4c22afeeb5d84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1eef +0  6C040000
[3e4c22afeeb6a71] jit-backend-dump}
[3e4c22afeeb9a67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1f0d +0  6A040000
[3e4c22afeeba74c] jit-backend-dump}
[3e4c22afeebd77f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1f25 +0  6E040000
[3e4c22afeebe448] jit-backend-dump}
[3e4c22afeec1472] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1f42 +0  6D040000
[3e4c22afeec2157] jit-backend-dump}
[3e4c22afeec518a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1f4b +0  80040000
[3e4c22afeec5e4a] jit-backend-dump}
[3e4c22afeec8e55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1f65 +0  82040000
[3e4c22afeec9b40] jit-backend-dump}
[3e4c22afeeccb6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1f72 +0  91040000
[3e4c22afeecd85e] jit-backend-dump}
[3e4c22afeed083e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1f7c +0  A3040000
[3e4c22afeed1517] jit-backend-dump}
[3e4c22afeed452e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1f85 +0  B6040000
[3e4c22afeed51fa] jit-backend-dump}
[3e4c22afeed822b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1f97 +0  C0040000
[3e4c22afeed8f15] jit-backend-dump}
[3e4c22afeedbf08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1fad +0  C6040000
[3e4c22afeedcbe4] jit-backend-dump}
[3e4c22afeedfeb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0ee7 +0  A50E0000
[3e4c22afeee0baf] jit-backend-dump}
[3e4c22afeee4b18] jit-backend}
[3e4c22afeee8674] {jit-log-opt-bridge
# bridge out of Guard 0x3b64da0 with 114 ops
[p0, p1]
+278: guard_class(p1, 16500016, descr=<Guard0x3b65580>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull_class(p3, 16470384, descr=<Guard0x3b658e0>) [p0, p1]
+320: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+323: guard_false(i6, descr=<Guard0x3b6e9b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+329: guard_class(p0, 16437896, descr=<Guard0x3b6e968>) [p0, p1]
+343: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+347: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3b65880>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+367: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+371: guard_class(p10, 16479200, descr=<Guard0x3b6e920>) [p0, p1]
+384: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+395: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3b6e8d8>) [p0, p1]
+404: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+408: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+412: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+416: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+420: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+424: guard_class(p18, 16505296, descr=<Guard0x3b6e890>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+436: guard_not_invalidated(descr=<Guard0x3b6e848>) [p0, p1]
+436: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+440: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3b65820>) [p0, p1]
+458: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3b657c0>) [p0, p1]
+476: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+480: i24 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+484: i25 = int_eq(i23, i24)
+487: guard_false(i25, descr=<Guard0x3b6e800>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+493: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x3b65760>) [p0, p1]
+512: i28 = int_ge(i24, 0)
+516: guard_true(i28, descr=<Guard0x3b6e7b8>) [p0, p1]
+522: i29 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+526: i30 = int_lt(i24, i29)
+529: guard_true(i30, descr=<Guard0x3b6e770>) [p0, p1]
+535: p31 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+539: guard_class(p31, 16622984, descr=<Guard0x3b6e728>) [p0, p1]
+551: p33 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+555: p34 = getarrayitem_gc_r(p33, i24, descr=<ArrayP 8>)
+567: guard_class(p34, 16470384, descr=<Guard0x3b6e6e0>) [p0, p1]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+581: p36 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+592: guard_nonnull_class(p36, 16470384, descr=<Guard0x3b65700>) [p0, p1]
+611: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+622: guard_nonnull_class(p38, 16470384, descr=<Guard0x3b656a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
debug_merge_point(0, 0, '(= nc25081 nc35084)')
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+641: p40 = getarrayitem_gc_r(p33, i24, descr=<ArrayP 8>)
+653: guard_class(p40, 16470384, descr=<Guard0x3b6e698>) [p0, p1]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+665: p42 = getfield_gc_r(p36, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+676: guard_nonnull_class(p42, 16616448, descr=<Guard0x3b65640>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+694: i45 = instance_ptr_eq(p42, ConstPtr(ptr44))
+697: guard_true(i45, descr=<Guard0x3b6e650>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
debug_merge_point(0, 0, '(= nc35084 nc4)')
+703: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3b655e0>) [p0, p1]
+729: i47 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+733: i48 = int_eq(i24, i47)
+736: guard_false(i48, descr=<Guard0x3b6e608>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+742: i50 = int_ge(i47, 0)
+746: guard_true(i50, descr=<Guard0x3b6e5c0>) [p0, p1]
+752: i51 = int_lt(i47, i29)
+755: guard_true(i51, descr=<Guard0x3b6e578>) [p0, p1]
+761: p52 = getarrayitem_gc_r(p33, i47, descr=<ArrayP 8>)
+766: guard_class(p52, 16470384, descr=<Guard0x3b6e530>) [p0, p1]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+779: p54 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+783: guard_nonnull_class(p54, 16470384, descr=<Guard0x3b65520>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+801: p56 = new_with_vtable(descr=<SizeDescr 64>)
+852: p57 = new_with_vtable(descr=<SizeDescr 56>)
+863: p58 = new_with_vtable(descr=<SizeDescr 64>)
+881: setfield_gc(p58, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+913: setfield_gc(p58, ConstPtr(ptr59), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+917: setfield_gc(p58, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+935: setfield_gc(p58, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+939: setfield_gc(p58, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+957: setfield_gc(p58, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+961: setfield_gc(p58, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+972: i60 = arraylen_gc(p33, descr=<ArrayP 8>)
+972: setfield_gc(p57, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+983: setfield_gc(p56, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+987: setfield_gc(p56, ConstPtr(ptr61), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+991: setfield_gc(p56, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+995: setfield_gc(p56, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1006: setfield_gc(p56, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1024: setfield_gc(p56, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1028: setfield_gc(p56, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1032: setfield_gc(p57, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1036: setfield_gc(p57, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1047: setfield_gc(p57, ConstPtr(ptr62), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1051: setfield_gc(p57, p58, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1055: setfield_gc(p57, p34, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1059: jump(p56, p54, p38, p8, p18, p57, p16, p36, p40, p52, p36, p16, p18, p17, p15, p14, p33, i47, descr=TargetToken(59470080))
+1200: --end of the loop--
[3e4c22afef38f79] jit-log-opt-bridge}
[3e4c22aff14f887] {jit-backend
[3e4c22aff1a56be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d25c
[3e4c22aff1ad186] jit-backend-dump}
[3e4c22aff1b7cde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2664 +0  27000000
[3e4c22aff1b920d] jit-backend-dump}
[3e4c22aff1bd02f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d28b5 +0  27000000
[3e4c22aff1bdf5c] jit-backend-dump}
[3e4c22aff1c119a] {jit-backend-addr
bridge out of Guard 0x3a7bbe0 has address 0x7f4a5c1d2660 to 0x7f4a5c1d28b0
       gc table: 0x7f4a5c1d25c0
    jump target: 0x7f4a5c1d2660
         resops: 0x7f4a5c1d266e
       failures: 0x7f4a5c1d28b0
            end: 0x7f4a5c1d2ab3
[3e4c22aff1c358b] jit-backend-addr}
[3e4c22aff1c6828] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d267e +0  71020000
[3e4c22aff1c76b3] jit-backend-dump}
[3e4c22aff1ca73f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2695 +0  76020000
[3e4c22aff1cb44e] jit-backend-dump}
[3e4c22aff1ce520] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d26ac +0  7B020000
[3e4c22aff1cf233] jit-backend-dump}
[3e4c22aff1d2207] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d26c4 +0  7F020000
[3e4c22aff1d2edc] jit-backend-dump}
[3e4c22aff1d5e49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d26d8 +0  87020000
[3e4c22aff1d6b27] jit-backend-dump}
[3e4c22aff1d99fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d26e4 +0  97020000
[3e4c22aff1da6cd] jit-backend-dump}
[3e4c22aff1dd5e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d26fb +0  9C020000
[3e4c22aff1de2b3] jit-backend-dump}
[3e4c22aff1e12c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2713 +0  BC020000
[3e4c22aff1e1fe3] jit-backend-dump}
[3e4c22aff1e4f74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d272b +0  C0020000
[3e4c22aff1e5c4f] jit-backend-dump}
[3e4c22aff1e8b4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2743 +0  C4020000
[3e4c22aff1e9832] jit-backend-dump}
[3e4c22aff1ec7b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d275b +0  C8020000
[3e4c22aff1ed47a] jit-backend-dump}
[3e4c22aff1f037b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2773 +0  CC020000
[3e4c22aff1f1091] jit-backend-dump}
[3e4c22aff1f3fd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d278a +0  D1020000
[3e4c22aff1f4cbd] jit-backend-dump}
[3e4c22aff1f7bec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d27a2 +0  D5020000
[3e4c22aff1f88dd] jit-backend-dump}
[3e4c22aff1fb7ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d27bc +0  D7020000
[3e4c22aff1fc495] jit-backend-dump}
[3e4c22aff1ff5f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cf44f +0  0D320000
[3e4c22aff2002f7] jit-backend-dump}
[3e4c22aff2040c0] jit-backend}
[3e4c22aff207a80] {jit-log-opt-bridge
# bridge out of Guard 0x3a7bbe0 with 57 ops
[p0, p1]
+182: guard_class(p1, 16500368, descr=<Guard0x3b65940>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16478448, descr=<Guard0x3b659a0>) [p0, p1]
+217: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+221: guard_nonnull_class(p5, 16470384, descr=<Guard0x3b65a00>) [p0, p1]
+240: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+244: guard_nonnull_class(p7, 16470384, descr=<Guard0x3b65a60>) [p0, p1]
+264: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+275: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b6ea40>) [p0, p1]
+284: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+284: guard_class(p0, 16437896, descr=<Guard0x3b6ea88>) [p0, p1]
+296: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3b65ac0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+319: guard_not_invalidated(descr=<Guard0x3b6ead0>) [p0, p1]
+319: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+323: guard_nonnull_class(p15, 16470384, descr=<Guard0x3b65b20>) [p0, p1]
+343: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+348: guard_nonnull_class(p17, ConstClass(W_Symbol), descr=<Guard0x3b65b80>) [p0, p1]
+367: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+371: guard_nonnull_class(p19, 16470384, descr=<Guard0x3b65be0>) [p0, p1]
+391: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+396: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x3b65c40>) [p0, p1]
+415: p23 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+419: guard_nonnull_class(p23, 16470384, descr=<Guard0x3b65ca0>) [p0, p1]
+439: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+444: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x3b65d00>) [p0, p1]
+462: p27 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+466: guard_nonnull_class(p27, ConstClass(W_Vector), descr=<Guard0x3b65d60>) [p0, p1]
+486: p29 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+490: p30 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+494: guard_nonnull_class(p30, 16470384, descr=<Guard0x3b65dc0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+512: p32 = new_with_vtable(descr=<SizeDescr 32>)
+559: p33 = new_with_vtable(descr=<SizeDescr 48>)
+570: p34 = new_with_vtable(descr=<SizeDescr 32>)
+581: setfield_gc(p34, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+589: p37 = new_array_clear(5, descr=<ArrayP 8>)
+629: setarrayitem_gc(p37, 0, ConstPtr(ptr39), descr=<ArrayP 8>)
+633: setarrayitem_gc(p37, 1, p17, descr=<ArrayP 8>)
+637: setarrayitem_gc(p37, 2, p21, descr=<ArrayP 8>)
+641: setarrayitem_gc(p37, 3, p25, descr=<ArrayP 8>)
+645: setarrayitem_gc(p37, 4, p27, descr=<ArrayP 8>)
+649: setfield_gc(p34, p37, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+660: setfield_gc(p34, ConstPtr(ptr44), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+664: setfield_gc(p32, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+675: setfield_gc(p33, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+686: setfield_gc(p32, p30, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+690: setfield_gc(p32, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+694: setfield_gc(p33, p29, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+698: setfield_gc(p33, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+709: setfield_gc(p33, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+713: setfield_gc(p33, p34, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+717: jump(p32, p33, descr=TargetToken(59469840))
+752: --end of the loop--
[3e4c22aff239077] jit-log-opt-bridge}
[3e4c22aff59f9e1] {jit-backend
[3e4c22aff5fe68b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2be
[3e4c22aff605a03] jit-backend-dump}
[3e4c22aff610527] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2c84 +0  25000000
[3e4c22aff611a87] jit-backend-dump}
[3e4c22aff6159f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2e95 +0  25000000
[3e4c22aff6168e0] jit-backend-dump}
[3e4c22aff619d57] {jit-backend-addr
bridge out of Guard 0x382fa00 has address 0x7f4a5c1d2c80 to 0x7f4a5c1d2e90
       gc table: 0x7f4a5c1d2be0
    jump target: 0x7f4a5c1d2c80
         resops: 0x7f4a5c1d2c8e
       failures: 0x7f4a5c1d2e90
            end: 0x7f4a5c1d3077
[3e4c22aff61c38d] jit-backend-addr}
[3e4c22aff61f870] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2c9e +0  31020000
[3e4c22aff6206d2] jit-backend-dump}
[3e4c22aff6239d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2cb5 +0  36020000
[3e4c22aff6246fc] jit-backend-dump}
[3e4c22aff627827] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2cc5 +0  42020000
[3e4c22aff628512] jit-backend-dump}
[3e4c22aff62b5ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2cd1 +0  52020000
[3e4c22aff62c2e1] jit-backend-dump}
[3e4c22aff62f2ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2ce8 +0  57020000
[3e4c22aff630008] jit-backend-dump}
[3e4c22aff633596] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2cfa +0  7D020000
[3e4c22aff6342fe] jit-backend-dump}
[3e4c22aff637518] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2d0e +0  85020000
[3e4c22aff638221] jit-backend-dump}
[3e4c22aff63b27c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2d25 +0  8A020000
[3e4c22aff63bf82] jit-backend-dump}
[3e4c22aff63efaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2d3d +0  8E020000
[3e4c22aff63fca6] jit-backend-dump}
[3e4c22aff642cdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2d54 +0  93020000
[3e4c22aff6439d3] jit-backend-dump}
[3e4c22aff6469ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2d6b +0  98020000
[3e4c22aff6476e2] jit-backend-dump}
[3e4c22aff64a715] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2d82 +0  9D020000
[3e4c22aff64b3e7] jit-backend-dump}
[3e4c22aff64e461] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2d9c +0  9F020000
[3e4c22aff64f15e] jit-backend-dump}
[3e4c22aff652166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2db3 +0  A4020000
[3e4c22aff652e35] jit-backend-dump}
[3e4c22aff6560bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5b77 +0  05D10000
[3e4c22aff656dab] jit-backend-dump}
[3e4c22aff65ae6a] jit-backend}
[3e4c22aff65e9d9] {jit-log-opt-bridge
# bridge out of Guard 0x382fa00 with 52 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x3b65e20>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16470384, descr=<Guard0x3b65e80>) [p0, p1]
+224: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+227: guard_false(i6, descr=<Guard0x3b6eb60>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+233: guard_class(p0, 16437352, descr=<Guard0x3b6eba8>) [p0, p1]
+245: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+249: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3b65ee0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+268: guard_not_invalidated(descr=<Guard0x3b6ebf0>) [p0, p1]
+268: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+272: guard_class(p10, 16478072, descr=<Guard0x3b6ec38>) [p0, p1]
+286: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+297: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3b6ec80>) [p0, p1]
+306: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+310: guard_nonnull_class(p14, 16470384, descr=<Guard0x3b65f40>) [p0, p1]
+329: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+333: guard_nonnull_class(p16, ConstClass(W_Vector), descr=<Guard0x3b65fa0>) [p0, p1]
+353: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+357: guard_nonnull_class(p18, 16470384, descr=<Guard0x3be0020>) [p0, p1]
+376: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+380: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3be0080>) [p0, p1]
+399: p22 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+403: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x3be00e0>) [p0, p1]
+422: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+426: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+430: guard_nonnull_class(p25, 16470384, descr=<Guard0x3be0140>) [p0, p1]
+448: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+452: guard_nonnull_class(p27, 16470384, descr=<Guard0x3be01a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+471: p29 = new_with_vtable(descr=<SizeDescr 32>)
+518: p30 = new_with_vtable(descr=<SizeDescr 48>)
+529: p31 = new_with_vtable(descr=<SizeDescr 32>)
+540: setfield_gc(p31, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+548: p34 = new_array_clear(4, descr=<ArrayP 8>)
+581: setarrayitem_gc(p34, 0, ConstPtr(ptr36), descr=<ArrayP 8>)
+585: setarrayitem_gc(p34, 1, p16, descr=<ArrayP 8>)
+589: setarrayitem_gc(p34, 2, p20, descr=<ArrayP 8>)
+593: setarrayitem_gc(p34, 3, p22, descr=<ArrayP 8>)
+597: setfield_gc(p31, p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: setfield_gc(p31, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+612: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+623: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+627: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+631: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+635: setfield_gc(p30, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p30, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+658: jump(p29, p30, descr=TargetToken(59469520))
+688: --end of the loop--
[3e4c22aff68e11b] jit-log-opt-bridge}
[3e4c22aff8e15a9] {jit-backend
[3e4c22aff949128] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3200 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5202000048FF04254088B0038139700B01000F85000000004C8B79104D85FF0F84000000004C8B35FAFEFFFF4D39F70F85000000004C8B71184983FE01720741813EB09700000F85000000008138C81800000F85000000004C8B78204C8B2DE3FEFFFF4D39EF0F85000000004C8B68284C8B78304C8B60184983FD01720841817D0020BA00000F85000000004983FF01720741813FB09700000F85000000004D8B55104C8B0DC4FEFFFF4D39CA0F850000000041813C24C81800000F85000000004D8B4C24084983F9017207418139900F00000F85000000004D8B55284D8B4530498B7D08813F102001000F8500000000498B75384883FE017206813E601400000F8500000000498B5D204883FB017206813B601400000F8500000000488B5608488B73084839F20F8400000000498B55184883FA017206813AF08C00000F85000000004883FE000F8C00000000488B5A084839DE0F8D00000000488B5A18813BC8EB02000F8500000000488B5A10488B54F310813AB09700000F8500000000498B77104883FE017206813E40D202000F85000000004889D3488B0C25F091F900488D9188000000483B14251092F9000F87C600000048891425F091F90048C701700B0100488D512048C702C8180000488D423848C70030B700004889780848898D30010000488B0DF1FDFFFF488948104C8950184C8940204C8978284C8BBD30010000498977104D8977184C8B35D3FDFFFF4C89722048897A104889422848895A304C8962184C894A084D896F084C89BD300100004889953801000049BB10791C5C4A7F000041FFE36666662E0F1F84000000000048C7442408FFFFFF0049BB80301D5C4A7F00004C895D204D8D9B7012FFFF41FFD3E988FDFFFF49BBF0311D5C4A7F00004C895D204D8D9B0019FFFF41FFD3E925FFFFFFFF3577FCFFFF49BB90301D5C4A7F000041534D8D9B700FFFFF41FFE3FF3563FCFFFF49BBA0301D5C4A7F000041534D8D9B600FFFFF41FFE3FF3557FCFFFF49BBB0301D5C4A7F000041534D8D9B500FFFFF41FFE3FF3543FCFFFF49BBC0301D5C4A7F000041534D8D9B400FFFFF41FFE3FF352FFCFFFF49BBD0301D5C4A7F000041534D8D9B300FFFFF41FFE3FF3523FCFFFF49BBE0301D5C4A7F000041534D8D9B200FFFFF41FFE3FF350FFCFFFF49BBF0301D5C4A7F000041534D8D9B100FFFFF41FFE3FF35FBFBFFFF49BB00311D5C4A7F000041534D8D9B000FFFFF41FFE3FF35E7FBFFFF49BB10311D5C4A7F000041534D8D9BF00EFFFF41FFE3FF35DBFBFFFF49BB20311D5C4A7F000041534D8D9BE00EFFFF41FFE3FF35C7FBFFFF49BB30311D5C4A7F000041534D8D9BD00EFFFF41FFE3FF35B3FBFFFF49BB40311D5C4A7F000041534D8D9BC00EFFFF41FFE3FF359FFBFFFF49BB50311D5C4A7F000041534D8D9BB00EFFFF41FFE3FF358BFBFFFF49BB60311D5C4A7F000041534D8D9BA00EFFFF41FFE3FF3577FBFFFF49BB70311D5C4A7F000041534D8D9B900EFFFF41FFE3FF3563FBFFFF49BB80311D5C4A7F000041534D8D9B800EFFFF41FFE3FF354FFBFFFF49BB90311D5C4A7F000041534D8D9B700EFFFF41FFE3FF353BFBFFFF49BBA0311D5C4A7F000041534D8D9B600EFFFF41FFE3FF3527FBFFFF49BBB0311D5C4A7F000041534D8D9B500EFFFF41FFE3FF3513FBFFFF49BBC0311D5C4A7F000041534D8D9B400EFFFF41FFE3FF35FFFAFFFF49BBD0311D5C4A7F000041534D8D9B300EFFFF41FFE3FF35EBFAFFFF49BBE0311D5C4A7F000041534D8D9B200EFFFF41FFE3
[3e4c22aff951df8] jit-backend-dump}
[3e4c22aff95c62e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d32e4 +0  27000000
[3e4c22aff95db0e] jit-backend-dump}
[3e4c22aff96196d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3545 +0  27000000
[3e4c22aff96277d] jit-backend-dump}
[3e4c22aff965acf] {jit-backend-addr
bridge out of Guard 0x3a7ad40 has address 0x7f4a5c1d32e0 to 0x7f4a5c1d3540
       gc table: 0x7f4a5c1d3200
    jump target: 0x7f4a5c1d32e0
         resops: 0x7f4a5c1d32ee
       failures: 0x7f4a5c1d3540
            end: 0x7f4a5c1d37eb
[3e4c22aff967ec6] jit-backend-addr}
[3e4c22aff96b2aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d32fe +0  81020000
[3e4c22aff96c068] jit-backend-dump}
[3e4c22aff96f272] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d330b +0  90020000
[3e4c22aff96ff88] jit-backend-dump}
[3e4c22aff973124] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d331b +0  9C020000
[3e4c22aff973dc5] jit-backend-dump}
[3e4c22aff976e8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3332 +0  A1020000
[3e4c22aff977b3f] jit-backend-dump}
[3e4c22aff97ab8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d333e +0  B1020000
[3e4c22aff97b835] jit-backend-dump}
[3e4c22aff97e8a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3352 +0  B9020000
[3e4c22aff97f56b] jit-backend-dump}
[3e4c22aff98267b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3372 +0  D1020000
[3e4c22aff983322] jit-backend-dump}
[3e4c22aff9864af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3385 +0  DA020000
[3e4c22aff98713b] jit-backend-dump}
[3e4c22aff98a187] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3399 +0  E2020000
[3e4c22aff98ae25] jit-backend-dump}
[3e4c22aff98dee5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d33a7 +0  F0020000
[3e4c22aff98eb8c] jit-backend-dump}
[3e4c22aff991bd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d33bf +0  F4020000
[3e4c22aff992873] jit-backend-dump}
[3e4c22aff99589d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d33d7 +0  F8020000
[3e4c22aff996544] jit-backend-dump}
[3e4c22aff99956e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d33ed +0  FE020000
[3e4c22aff99a219] jit-backend-dump}
[3e4c22aff99d25b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3403 +0  04030000
[3e4c22aff99df06] jit-backend-dump}
[3e4c22aff9a0f39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3414 +0  0F030000
[3e4c22aff9a1be0] jit-backend-dump}
[3e4c22aff9a4c0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d342a +0  15030000
[3e4c22aff9a58b8] jit-backend-dump}
[3e4c22aff9a88d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3434 +0  27030000
[3e4c22aff9a957d] jit-backend-dump}
[3e4c22aff9ac5d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3441 +0  36030000
[3e4c22aff9ad2a4] jit-backend-dump}
[3e4c22aff9b02da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3451 +0  42030000
[3e4c22aff9b0f9d] jit-backend-dump}
[3e4c22aff9b3fd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3466 +0  49030000
[3e4c22aff9b4c7b] jit-backend-dump}
[3e4c22aff9b7c90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d347c +0  4F030000
[3e4c22aff9b892b] jit-backend-dump}
[3e4c22aff9bbc05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cdab3 +0  29580000
[3e4c22aff9bc8d1] jit-backend-dump}
[3e4c22aff9c076a] jit-backend}
[3e4c22aff9c435f] {jit-log-opt-bridge
# bridge out of Guard 0x3a7ad40 with 78 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x3be0200>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x3b6ecc8>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x3b6ed10>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16470384, descr=<Guard0x3be0260>) [p0, p1]
+310: guard_class(p0, 16437896, descr=<Guard0x3b6ed58>) [p0, p1]
+322: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+333: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b6eda0>) [p0, p1]
+342: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+342: guard_not_invalidated(descr=<Guard0x3b6ede8>) [p0, p1]
+342: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+346: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+350: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
+354: guard_nonnull_class(p12, 16479200, descr=<Guard0x3be02c0>) [p0, p1]
+374: guard_nonnull_class(p13, 16470384, descr=<Guard0x3be0320>) [p0, p1]
+393: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+404: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3b6ee30>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+413: guard_class(p14, 16437896, descr=<Guard0x3b6ee78>) [p0, p1]
+427: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+432: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3be0380>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+451: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+455: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+459: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+463: guard_class(p24, 16505296, descr=<Guard0x3b6eec0>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+475: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+479: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3be03e0>) [p0, p1]
+497: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+501: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3be0440>) [p0, p1]
+519: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+523: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+527: i32 = int_eq(i30, i31)
+530: guard_false(i32, descr=<Guard0x3b6ef08>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+536: p33 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+540: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3be04a0>) [p0, p1]
+558: i36 = int_ge(i31, 0)
+562: guard_true(i36, descr=<Guard0x3b6ef50>) [p0, p1]
+568: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+572: i38 = int_lt(i31, i37)
+575: guard_true(i38, descr=<Guard0x3b6ef98>) [p0, p1]
+581: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+585: guard_class(p39, 16622984, descr=<Guard0x3b6efe0>) [p0, p1]
+597: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+601: p42 = getarrayitem_gc_r(p41, i31, descr=<ArrayP 8>)
+606: guard_class(p42, 16470384, descr=<Guard0x3b6f028>) [p0, p1]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+618: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+622: guard_nonnull_class(p44, 16616448, descr=<Guard0x3be0500>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+640: p46 = new_with_vtable(descr=<SizeDescr 32>)
+687: p47 = new_with_vtable(descr=<SizeDescr 56>)
+698: p48 = new_with_vtable(descr=<SizeDescr 48>)
+709: setfield_gc(p48, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+727: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+731: setfield_gc(p48, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+735: setfield_gc(p48, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+739: setfield_gc(p48, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+743: setfield_gc(p46, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+754: setfield_gc(p46, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+765: setfield_gc(p47, ConstPtr(ptr50), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+769: setfield_gc(p47, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+773: setfield_gc(p47, p48, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+777: setfield_gc(p47, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+781: setfield_gc(p47, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+785: setfield_gc(p47, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+789: setfield_gc(p46, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+793: jump(p46, p47, descr=TargetToken(59470000))
+832: --end of the loop--
[3e4c22affa0767a] jit-log-opt-bridge}
[3e4c22affcd83de] {jit-backend
[3e4c22affd49049] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d
[3e4c22affd51c59] jit-backend-dump}
[3e4c22affd5c837] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3a64 +0  27000000
[3e4c22affd5ddc8] jit-backend-dump}
[3e4c22affd61d8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3ce5 +0  27000000
[3e4c22affd62c4f] jit-backend-dump}
[3e4c22affd65fa6] {jit-backend-addr
bridge out of Guard 0x3a75f10 has address 0x7f4a5c1d3a60 to 0x7f4a5c1d3ce0
       gc table: 0x7f4a5c1d3980
    jump target: 0x7f4a5c1d3a60
         resops: 0x7f4a5c1d3a6e
       failures: 0x7f4a5c1d3ce0
            end: 0x7f4a5c1d3f8b
[3e4c22affd6828a] jit-backend-addr}
[3e4c22affd6b812] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3a7e +0  A1020000
[3e4c22affd6c5f7] jit-backend-dump}
[3e4c22affd6f750] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3a95 +0  A6020000
[3e4c22affd704a9] jit-backend-dump}
[3e4c22affd73587] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3aa5 +0  B2020000
[3e4c22affd74256] jit-backend-dump}
[3e4c22affd77293] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3ab3 +0  C0020000
[3e4c22affd77f74] jit-backend-dump}
[3e4c22affd7afdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3acb +0  C4020000
[3e4c22affd7bc92] jit-backend-dump}
[3e4c22affd7ec6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3adc +0  CF020000
[3e4c22affd7f93c] jit-backend-dump}
[3e4c22affd829d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3af0 +0  D7020000
[3e4c22affd83688] jit-backend-dump}
[3e4c22affd86684] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3b10 +0  D3020000
[3e4c22affd8732e] jit-backend-dump}
[3e4c22affd8a62a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3b26 +0  F5020000
[3e4c22affd8b30f] jit-backend-dump}
[3e4c22affd8e424] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3b38 +0  FF020000
[3e4c22affd8f13a] jit-backend-dump}
[3e4c22affd920d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3b49 +0  0A030000
[3e4c22affd92d8e] jit-backend-dump}
[3e4c22affd95e3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3b60 +0  0F030000
[3e4c22affd96b0a] jit-backend-dump}
[3e4c22affd99cf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3b76 +0  15030000
[3e4c22affd9a9e1] jit-backend-dump}
[3e4c22affd9d9c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3b7f +0  28030000
[3e4c22affd9e69d] jit-backend-dump}
[3e4c22affda170a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3b92 +0  31030000
[3e4c22affda2401] jit-backend-dump}
[3e4c22affda5416] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3b9f +0  40030000
[3e4c22affda60bd] jit-backend-dump}
[3e4c22affda90de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3bb2 +0  49030000
[3e4c22affda9ddb] jit-backend-dump}
[3e4c22affdacdd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3bbc +0  5B030000
[3e4c22affdadaac] jit-backend-dump}
[3e4c22affdb0b17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3bc9 +0  6A030000
[3e4c22affdb17f5] jit-backend-dump}
[3e4c22affdb49b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3bd9 +0  76030000
[3e4c22affdb56b0] jit-backend-dump}
[3e4c22affdb871a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d3bf7 +0  74030000
[3e4c22affdb9402] jit-backend-dump}
[3e4c22affdbc690] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0e80 +0  DC2B0000
[3e4c22affdbd3ca] jit-backend-dump}
[3e4c22affdc12f6] jit-backend}
[3e4c22affdc4d48] {jit-log-opt-bridge
# bridge out of Guard 0x3a75f10 with 94 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x3be0560>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull_class(p3, 16470384, descr=<Guard0x3be05c0>) [p0, p1]
+288: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+291: guard_false(i6, descr=<Guard0x3b6f070>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+297: guard_class(p0, 16437896, descr=<Guard0x3b6f0b8>) [p0, p1]
+311: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+315: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3be0620>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+335: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+339: guard_class(p10, 16479200, descr=<Guard0x3b6f100>) [p0, p1]
+352: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+363: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3b6f148>) [p0, p1]
+372: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+376: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+380: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+384: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+388: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+392: guard_class(p18, 16505296, descr=<Guard0x3b6f190>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+404: guard_not_invalidated(descr=<Guard0x3b6f1d8>) [p0, p1]
+404: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+408: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3be0680>) [p0, p1]
+426: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3be06e0>) [p0, p1]
+444: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+448: i24 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+452: i25 = int_eq(i23, i24)
+455: guard_true(i25, descr=<Guard0x3b6f220>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+461: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+465: guard_nonnull_class(p26, 16616448, descr=<Guard0x3be0740>) [p0, p1]
+484: p28 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+488: guard_nonnull_class(p28, 16470384, descr=<Guard0x3be07a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+506: i31 = instance_ptr_eq(p26, ConstPtr(ptr30))
+509: guard_true(i31, descr=<Guard0x3b6f268>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
debug_merge_point(0, 0, '(= nc35084 nc4)')
+515: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3be0800>) [p0, p1]
+534: i33 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+538: i34 = int_eq(i24, i33)
+541: guard_false(i34, descr=<Guard0x3b6f2b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+547: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x3be0860>) [p0, p1]
+566: i37 = int_ge(i33, 0)
+570: guard_true(i37, descr=<Guard0x3b6f2f8>) [p0, p1]
+576: i38 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+580: i39 = int_lt(i33, i38)
+583: guard_true(i39, descr=<Guard0x3b6f340>) [p0, p1]
+589: p40 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+593: guard_class(p40, 16622984, descr=<Guard0x3b6f388>) [p0, p1]
+605: p42 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+609: p43 = getarrayitem_gc_r(p42, i33, descr=<ArrayP 8>)
+621: guard_class(p43, 16470384, descr=<Guard0x3b6f3d0>) [p0, p1]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+635: p45 = new_with_vtable(descr=<SizeDescr 32>)
+679: p46 = new_with_vtable(descr=<SizeDescr 64>)
+690: setfield_gc(p46, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+701: setfield_gc(p46, ConstPtr(ptr47), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+705: setfield_gc(p46, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+709: setfield_gc(p46, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+713: setfield_gc(p46, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+717: setfield_gc(p46, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+721: setfield_gc(p46, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+725: p48 = new_with_vtable(descr=<SizeDescr 56>)
+736: p49 = new_with_vtable(descr=<SizeDescr 48>)
+747: setfield_gc(p49, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+758: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+762: setfield_gc(p49, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+766: setfield_gc(p49, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+770: setfield_gc(p49, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+774: setfield_gc(p45, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+778: setfield_gc(p48, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+782: setfield_gc(p45, p46, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+786: setfield_gc(p45, p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+790: setfield_gc(p48, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+794: setfield_gc(p48, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+812: setfield_gc(p48, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+816: setfield_gc(p48, p49, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+820: setfield_gc(p48, p43, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+824: jump(p45, p48, descr=TargetToken(59470000))
+864: --end of the loop--
[3e4c22affe0f1f5] jit-log-opt-bridge}
[3e4c22b0020c007] {jit-backend
[3e4c22b002b3708] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d41b
[3e4c22b002bebd6] jit-backend-dump}
[3e4c22b002c96db] {jit-backend-addr
Loop 38 ((if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)) has address 0x7f4a5c1d435d to 0x7f4a5c1d4740 (bootstrap 0x7f4a5c1d42d0)
       gc table: 0x7f4a5c1d41b0
       function: 0x7f4a5c1d42d0
         resops: 0x7f4a5c1d435d
       failures: 0x7f4a5c1d4740
            end: 0x7f4a5c1d4ad3
[3e4c22b002ccd6c] jit-backend-addr}
[3e4c22b002d1160] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4374 +0  F7030000
[3e4c22b002d23f1] jit-backend-dump}
[3e4c22b002d5b3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4381 +0  06040000
[3e4c22b002d69a6] jit-backend-dump}
[3e4c22b002d9c5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4391 +0  12040000
[3e4c22b002da9b5] jit-backend-dump}
[3e4c22b002ddb51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d43a7 +0  18040000
[3e4c22b002de845] jit-backend-dump}
[3e4c22b002e1957] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d43ba +0  21040000
[3e4c22b002e261d] jit-backend-dump}
[3e4c22b002e5727] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d43ce +0  29040000
[3e4c22b002e63e0] jit-backend-dump}
[3e4c22b002e9699] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d43ec +0  43040000
[3e4c22b002ea390] jit-backend-dump}
[3e4c22b002ed557] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d43fe +0  4D040000
[3e4c22b002ee288] jit-backend-dump}
[3e4c22b002f1391] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4412 +0  55040000
[3e4c22b002f204b] jit-backend-dump}
[3e4c22b002f5126] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d441f +0  64040000
[3e4c22b002f5ddd] jit-backend-dump}
[3e4c22b002f8eac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4436 +0  69040000
[3e4c22b002f9b63] jit-backend-dump}
[3e4c22b002fcc60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4457 +0  64040000
[3e4c22b002fd95a] jit-backend-dump}
[3e4c22b00300a4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4474 +0  63040000
[3e4c22b0030170b] jit-backend-dump}
[3e4c22b003047ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4487 +0  6C040000
[3e4c22b003054af] jit-backend-dump}
[3e4c22b003085ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4498 +0  77040000
[3e4c22b00309269] jit-backend-dump}
[3e4c22b0030c37c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d44ab +0  80040000
[3e4c22b0030d051] jit-backend-dump}
[3e4c22b0031015a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d44b5 +0  92040000
[3e4c22b00310e2c] jit-backend-dump}
[3e4c22b00313f1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d44c2 +0  A1040000
[3e4c22b00314be6] jit-backend-dump}
[3e4c22b00317cdd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d44da +0  A5040000
[3e4c22b00318994] jit-backend-dump}
[3e4c22b0031ba91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d44f7 +0  A4040000
[3e4c22b0031c754] jit-backend-dump}
[3e4c22b0031f832] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4516 +0  A1040000
[3e4c22b003204e9] jit-backend-dump}
[3e4c22b003235ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4530 +0  A3040000
[3e4c22b003242ac] jit-backend-dump}
[3e4c22b00327378] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d454f +0  A0040000
[3e4c22b00328032] jit-backend-dump}
[3e4c22b0032b1bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4558 +0  B3040000
[3e4c22b0032be8e] jit-backend-dump}
[3e4c22b0032ef7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4571 +0  B6040000
[3e4c22b0032fc42] jit-backend-dump}
[3e4c22b00332d39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d457e +0  C5040000
[3e4c22b00333a11] jit-backend-dump}
[3e4c22b00336ad1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4588 +0  D7040000
[3e4c22b00337797] jit-backend-dump}
[3e4c22b0033a8b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4591 +0  EA040000
[3e4c22b0033b56f] jit-backend-dump}
[3e4c22b0033e654] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d45a2 +0  F5040000
[3e4c22b0033f30b] jit-backend-dump}
[3e4c22b003423ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d45b8 +0  FB040000
[3e4c22b003430a9] jit-backend-dump}
[3e4c22b00346e26] jit-backend}
[3e4c22b0034abe6] {jit-log-opt-loop
# Loop 38 ((if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)) : entry bridge with 125 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+437: guard_class(p0, 16500016, descr=<Guard0x3be08c0>) [p1, p0]
+456: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+460: guard_nonnull(p3, descr=<Guard0x3b6f418>) [p1, p0]
+476: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+479: guard_true(i5, descr=<Guard0x3b6f460>) [p1, p0]
debug_merge_point(0, 0, 'lst5093')
+485: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+489: guard_nonnull_class(p6, 16470384, descr=<Guard0x3be0920>) [p1, p0]
+507: guard_class(p1, 16437896, descr=<Guard0x3b6f4a8>) [p1, p0]
+526: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+537: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b6f4f0>) [p1, p0]
+546: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+546: guard_not_invalidated(descr=<Guard0x3b6f538>) [p1, p0]
+546: p12 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+550: p13 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+554: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)')
+558: guard_nonnull_class(p12, 16479200, descr=<Guard0x3be0980>) [p1, p0]
+576: guard_nonnull_class(p13, 16470384, descr=<Guard0x3be09e0>) [p1, p0]
+594: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+605: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3b6f580>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+614: guard_class(p14, 16437896, descr=<Guard0x3b6f5c8>) [p1, p0]
+627: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+631: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3be0a40>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+650: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+654: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+658: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+662: p25 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+666: p26 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+670: guard_class(p26, 16505296, descr=<Guard0x3b6f610>) [p1, p0]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+683: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+694: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3be0aa0>) [p1, p0]
+712: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x3be0b00>) [p1, p0]
+731: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+735: i32 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+739: i33 = int_eq(i31, i32)
+742: guard_false(i33, descr=<Guard0x3b6f658>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+748: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x3be0b60>) [p1, p0]
+767: i36 = int_ge(i32, 0)
+771: guard_true(i36, descr=<Guard0x3b6f6a0>) [p1, p0]
+777: i37 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+781: i38 = int_lt(i32, i37)
+784: guard_true(i38, descr=<Guard0x3b6f6e8>) [p1, p0]
+790: p39 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+801: guard_class(p39, 16622984, descr=<Guard0x3b6f730>) [p1, p0]
+814: p41 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+818: p42 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+830: guard_class(p42, 16470384, descr=<Guard0x3b6f778>) [p1, p0]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+843: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+854: guard_nonnull_class(p44, 16470384, descr=<Guard0x3be0bc0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
debug_merge_point(0, 0, '(= nc25081 nc35084)')
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+874: p46 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+886: guard_class(p46, 16470384, descr=<Guard0x3b6f7c0>) [p1, p0]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+900: p48 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+912: guard_nonnull_class(p48, 16616448, descr=<Guard0x3be0c20>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+931: i51 = instance_ptr_eq(p48, ConstPtr(ptr50))
+934: guard_true(i51, descr=<Guard0x3b6f808>) [p1, p0]
debug_merge_point(0, 0, 'lst5101')
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
debug_merge_point(0, 0, '(= nc35084 nc4)')
+940: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x3be0c80>) [p1, p0]
+965: i53 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+969: i54 = int_eq(i32, i53)
+972: guard_false(i54, descr=<Guard0x3b6f850>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+978: i56 = int_ge(i53, 0)
+982: guard_true(i56, descr=<Guard0x3b6f898>) [p1, p0]
+988: i57 = int_lt(i53, i37)
+991: guard_true(i57, descr=<Guard0x3b6f8e0>) [p1, p0]
+997: p58 = getarrayitem_gc_r(p41, i53, descr=<ArrayP 8>)
+1002: guard_class(p58, 16470384, descr=<Guard0x3b6f928>) [p1, p0]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+1014: p60 = getfield_gc_r(p46, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1018: guard_nonnull_class(p60, 16470384, descr=<Guard0x3be0ce0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+1036: p62 = new_with_vtable(descr=<SizeDescr 64>)
+1083: p63 = new_with_vtable(descr=<SizeDescr 56>)
+1094: p64 = new_with_vtable(descr=<SizeDescr 64>)
+1112: setfield_gc(p64, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1144: setfield_gc(p64, ConstPtr(ptr65), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1148: setfield_gc(p64, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1166: setfield_gc(p64, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1170: setfield_gc(p64, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1181: setfield_gc(p64, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1185: setfield_gc(p64, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1196: i66 = arraylen_gc(p41, descr=<ArrayP 8>)
+1210: setfield_gc(p63, ConstPtr(ptr67), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1214: setfield_gc(p63, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1218: setfield_gc(p63, p64, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1222: setfield_gc(p63, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1226: setfield_gc(p63, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1230: setfield_gc(p62, ConstPtr(ptr68), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1234: setfield_gc(p63, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1245: setfield_gc(p62, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1249: setfield_gc(p62, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1260: setfield_gc(p62, p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1271: setfield_gc(p62, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1275: setfield_gc(p62, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1279: setfield_gc(p62, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1283: jump(p62, p60, p6, p20, p26, p63, p24, p44, p46, p58, p44, p24, p26, p25, p23, p22, p41, i53, descr=TargetToken(59470080))
+1424: --end of the loop--
[3e4c22b003af894] jit-log-opt-loop}
[3e4c22b008581bc] {jit-backend
[3e4c22b008bdf0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4c50 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8202000048FF0425B03800038139700B01000F85000000004C8B71104D85F60F84000000004C8B2D0AFFFFFF4D39EE0F85000000004C8B69184983FD01720841817D00B09700000F850000000041813FC81800000F85000000004D8B77204C8B25F1FEFFFF4D39E60F85000000004D8B67284D8B77304D8B57184983FC01720841813C2430B700000F85000000004983FE01720741813EB09700000F85000000004D8B4C24104C8B05D1FEFFFF4D39C10F850000000041813AC81800000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B4C24184983F9017207418139B09700000F8500000000498B79084883FF017206813F382300000F85000000004D8B4C24204983F9017207418139B09700000F8500000000498B71084883FE017206813EF08C00000F85000000004D8B4C24284983F9017207418139B09700000F8500000000498B59084883FB017206813BF08C00000F85000000004D8B4E084983F9017207418139F08C00000F8500000000498B542408498B46104883F80172068138B09700000F85000000004989D7488B0C25F091F900488D91A8000000483B14251092F9000F87F600000048891425F091F90048C701700B0100488D512048C702A81600004C8D723049C706F08C000049C746080500000048898D30010000498D4E2048C701080E000048C741080500000048899538010000488B15D3FDFFFF488951104889791848897120488959284C89493049894E10488B0DBCFDFFFF49894E18488B8D30010000488941104C8969184C8B2DAAFDFFFF488B85380100004C8968204C8978104C8950184C8940084C8961084C89702848898D300100004889853801000049BBD0661C5C4A7F000041FFE30F1F84000000000048C7442408FFFFFF0049BBE84A1D5C4A7F00004C895D204D8D9B08F8FEFF41FFD3E958FDFFFF49BB384C1D5C4A7F00004C895D204D8D9BB8FEFEFF41FFD3E9F5FEFFFFFF3557FCFFFF49BBF84A1D5C4A7F000041534D8D9B08F5FEFF41FFE3FF3543FCFFFF49BB084B1D5C4A7F000041534D8D9BF8F4FEFF41FFE3FF3537FCFFFF49BB184B1D5C4A7F000041534D8D9BE8F4FEFF41FFE3FF3523FCFFFF49BB284B1D5C4A7F000041534D8D9BD8F4FEFF41FFE3FF350FFCFFFF49BB384B1D5C4A7F000041534D8D9BC8F4FEFF41FFE3FF3503FCFFFF49BB484B1D5C4A7F000041534D8D9BB8F4FEFF41FFE3FF35EFFBFFFF49BB584B1D5C4A7F000041534D8D9BA8F4FEFF41FFE3FF35DBFBFFFF49BB684B1D5C4A7F000041534D8D9B98F4FEFF41FFE3FF35C7FBFFFF49BB784B1D5C4A7F000041534D8D9B88F4FEFF41FFE3FF35BBFBFFFF49BB884B1D5C4A7F000041534D8D9B78F4FEFF41FFE3FF35A7FBFFFF49BB984B1D5C4A7F000041534D8D9B68F4FEFF41FFE3FF3593FBFFFF49BBA84B1D5C4A7F000041534D8D9B58F4FEFF41FFE3FF357FFBFFFF49BBB84B1D5C4A7F000041534D8D9B48F4FEFF41FFE3FF356BFBFFFF49BBC84B1D5C4A7F000041534D8D9B38F4FEFF41FFE3FF3557FBFFFF49BBD84B1D5C4A7F000041534D8D9B28F4FEFF41FFE3FF3543FBFFFF49BBE84B1D5C4A7F000041534D8D9B18F4FEFF41FFE3FF352FFBFFFF49BBF84B1D5C4A7F000041534D8D9B08F4FEFF41FFE3FF351BFBFFFF49BB084C1D5C4A7F000041534D8D9BF8F3FEFF41FFE3FF3507FBFFFF49BB184C1D5C4A7F000041534D8D9BE8F3FEFF41FFE3FF35F3FAFFFF49BB284C1D5C4A7F000041534D8D9BD8F3FEFF41FFE3
[3e4c22b008c6241] jit-backend-dump}
[3e4c22b008d107a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4d24 +0  27000000
[3e4c22b008d276b] jit-backend-dump}
[3e4c22b008d6972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4fb5 +0  27000000
[3e4c22b008d7a14] jit-backend-dump}
[3e4c22b008daf1e] {jit-backend-addr
bridge out of Guard 0x3a7a2c0 has address 0x7f4a5c1d4d20 to 0x7f4a5c1d4fb0
       gc table: 0x7f4a5c1d4c50
    jump target: 0x7f4a5c1d4d20
         resops: 0x7f4a5c1d4d2e
       failures: 0x7f4a5c1d4fb0
            end: 0x7f4a5c1d5223
[3e4c22b008dd404] jit-backend-addr}
[3e4c22b008e08d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4d3e +0  B1020000
[3e4c22b008e17dc] jit-backend-dump}
[3e4c22b008e4944] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4d4b +0  C0020000
[3e4c22b008e568a] jit-backend-dump}
[3e4c22b008e8696] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4d5b +0  CC020000
[3e4c22b008e93a5] jit-backend-dump}
[3e4c22b008ec484] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4d73 +0  D0020000
[3e4c22b008ed174] jit-backend-dump}
[3e4c22b008f015e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4d80 +0  DF020000
[3e4c22b008f0e46] jit-backend-dump}
[3e4c22b008f3e02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4d94 +0  E7020000
[3e4c22b008f4aff] jit-backend-dump}
[3e4c22b008f7c8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4db4 +0  FF020000
[3e4c22b008f898f] jit-backend-dump}
[3e4c22b008fbb28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4dc7 +0  08030000
[3e4c22b008fc840] jit-backend-dump}
[3e4c22b008ff84f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4ddc +0  0F030000
[3e4c22b00900540] jit-backend-dump}
[3e4c22b00903523] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4de9 +0  1E030000
[3e4c22b00904217] jit-backend-dump}
[3e4c22b00907213] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4e00 +0  23030000
[3e4c22b00907ef8] jit-backend-dump}
[3e4c22b0090aed2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4e18 +0  27030000
[3e4c22b0090bbc9] jit-backend-dump}
[3e4c22b0090ebb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4e2e +0  2D030000
[3e4c22b0090f8b6] jit-backend-dump}
[3e4c22b009128da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4e46 +0  31030000
[3e4c22b009135d1] jit-backend-dump}
[3e4c22b00916599] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4e5c +0  37030000
[3e4c22b00917290] jit-backend-dump}
[3e4c22b0091a24f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4e74 +0  3B030000
[3e4c22b0091af49] jit-backend-dump}
[3e4c22b0091dfc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4e8a +0  41030000
[3e4c22b0091ecb3] jit-backend-dump}
[3e4c22b00921ca0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4ea1 +0  46030000
[3e4c22b00922991] jit-backend-dump}
[3e4c22b00925938] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4ebc +0  47030000
[3e4c22b0092667e] jit-backend-dump}
[3e4c22b00929921] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ccad5 +0  47820000
[3e4c22b0092a646] jit-backend-dump}
[3e4c22b0092e532] jit-backend}
[3e4c22b00932170] {jit-log-opt-bridge
# bridge out of Guard 0x3a7a2c0 with 67 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x3be0d40>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x3b6f9b8>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x3b6fa00>) [p0, p1]
debug_merge_point(0, 0, 'lst5109')
+271: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+275: guard_nonnull_class(p6, 16470384, descr=<Guard0x3be0da0>) [p0, p1]
+295: guard_class(p0, 16437896, descr=<Guard0x3b6fa48>) [p0, p1]
+308: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+319: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b6fa90>) [p0, p1]
+328: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+328: guard_not_invalidated(descr=<Guard0x3b6fad8>) [p0, p1]
+328: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+332: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+336: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (loop45105 (cdr rads35107) lst5109)')
+340: guard_nonnull_class(p12, 16478448, descr=<Guard0x3be0e00>) [p0, p1]
+360: guard_nonnull_class(p13, 16470384, descr=<Guard0x3be0e60>) [p0, p1]
+379: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+391: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3b6fb20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+400: guard_class(p14, 16437896, descr=<Guard0x3b6fb68>) [p0, p1]
+413: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+417: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3be0ec0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+436: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+441: guard_nonnull_class(p22, 16470384, descr=<Guard0x3be0f20>) [p0, p1]
+460: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+464: guard_nonnull_class(p24, ConstClass(W_Symbol), descr=<Guard0x3be0f80>) [p0, p1]
+482: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+487: guard_nonnull_class(p26, 16470384, descr=<Guard0x3be0fe0>) [p0, p1]
+506: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+510: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x3be1040>) [p0, p1]
+528: p30 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+533: guard_nonnull_class(p30, 16470384, descr=<Guard0x3be10a0>) [p0, p1]
+552: p32 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+556: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x3be1100>) [p0, p1]
+574: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+578: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x3be1160>) [p0, p1]
+597: p36 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+602: p37 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+606: guard_nonnull_class(p37, 16470384, descr=<Guard0x3be11c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+624: p39 = new_with_vtable(descr=<SizeDescr 32>)
+671: p40 = new_with_vtable(descr=<SizeDescr 48>)
+682: p41 = new_with_vtable(descr=<SizeDescr 32>)
+693: setfield_gc(p41, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+701: p44 = new_array_clear(5, descr=<ArrayP 8>)
+741: setarrayitem_gc(p44, 0, ConstPtr(ptr46), descr=<ArrayP 8>)
+745: setarrayitem_gc(p44, 1, p24, descr=<ArrayP 8>)
+749: setarrayitem_gc(p44, 2, p28, descr=<ArrayP 8>)
+753: setarrayitem_gc(p44, 3, p32, descr=<ArrayP 8>)
+757: setarrayitem_gc(p44, 4, p34, descr=<ArrayP 8>)
+761: setfield_gc(p41, p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+772: setfield_gc(p41, ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+776: setfield_gc(p39, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+787: setfield_gc(p39, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+798: setfield_gc(p40, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+809: setfield_gc(p40, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+813: setfield_gc(p40, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+817: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+821: setfield_gc(p39, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+825: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+829: jump(p39, p40, descr=TargetToken(59469840))
+864: --end of the loop--
[3e4c22b0096bab2] jit-log-opt-bridge}
[3e4c22b00be7784] {jit-backend
[3e4c22b00c79d55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d53f
[3e4c22b00c83c61] jit-backend-dump}
[3e4c22b00c8eabf] {jit-backend-addr
Loop 40 ((if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)) has address 0x7f4a5c1d556d to 0x7f4a5c1d58a0 (bootstrap 0x7f4a5c1d54e0)
       gc table: 0x7f4a5c1d53f0
       function: 0x7f4a5c1d54e0
         resops: 0x7f4a5c1d556d
       failures: 0x7f4a5c1d58a0
            end: 0x7f4a5c1d5ba7
[3e4c22b00c91f0e] jit-backend-addr}
[3e4c22b00c966d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5597 +0  34030000
[3e4c22b00c979c5] jit-backend-dump}
[3e4c22b00c9afb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d55ad +0  3A030000
[3e4c22b00c9be8e] jit-backend-dump}
[3e4c22b00c9f245] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d55bd +0  46030000
[3e4c22b00c9ffa7] jit-backend-dump}
[3e4c22b00ca31eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d55d0 +0  4F030000
[3e4c22b00ca3f63] jit-backend-dump}
[3e4c22b00ca7127] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d55e6 +0  55030000
[3e4c22b00ca7e42] jit-backend-dump}
[3e4c22b00caaff7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d55f6 +0  61030000
[3e4c22b00cabd09] jit-backend-dump}
[3e4c22b00caf1be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d560a +0  69030000
[3e4c22b00cafefe] jit-backend-dump}
[3e4c22b00cb3097] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d562c +0  63030000
[3e4c22b00cb3dc2] jit-backend-dump}
[3e4c22b00cb7135] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5644 +0  83030000
[3e4c22b00cb7e7c] jit-backend-dump}
[3e4c22b00cbb294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5657 +0  8C030000
[3e4c22b00cbbfa3] jit-backend-dump}
[3e4c22b00cbf1b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5668 +0  97030000
[3e4c22b00cbfeba] jit-backend-dump}
[3e4c22b00cc301c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d567b +0  A0030000
[3e4c22b00cc3d6f] jit-backend-dump}
[3e4c22b00cc6e87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5685 +0  B2030000
[3e4c22b00cc7bbe] jit-backend-dump}
[3e4c22b00ccaccb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5699 +0  BA030000
[3e4c22b00ccb9bf] jit-backend-dump}
[3e4c22b00ccea63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d56a9 +0  C6030000
[3e4c22b00ccf75a] jit-backend-dump}
[3e4c22b00cd27e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d56c5 +0  C6030000
[3e4c22b00cd34c1] jit-backend-dump}
[3e4c22b00cd6516] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d56dc +0  CB030000
[3e4c22b00cd71fe] jit-backend-dump}
[3e4c22b00cda265] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d56f2 +0  D1030000
[3e4c22b00cdaf43] jit-backend-dump}
[3e4c22b00cde099] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5755 +0  A6030000
[3e4c22b00cdedc7] jit-backend-dump}
[3e4c22b00ce1e87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d575f +0  B8030000
[3e4c22b00ce2b87] jit-backend-dump}
[3e4c22b00ce5c41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d576c +0  C7030000
[3e4c22b00ce691c] jit-backend-dump}
[3e4c22b00ce99ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d577d +0  D2030000
[3e4c22b00cea6ab] jit-backend-dump}
[3e4c22b00ced72e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5794 +0  D7030000
[3e4c22b00cee416] jit-backend-dump}
[3e4c22b00cf14b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d57b2 +0  D5030000
[3e4c22b00cf21ae] jit-backend-dump}
[3e4c22b00cf5fa5] jit-backend}
[3e4c22b00cf9efc] {jit-log-opt-loop
# Loop 40 ((if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)) : loop with 98 ops
[p0, p1]
+389: label(p0, p1, descr=TargetToken(61027120))
+408: guard_class(p0, 16500016, descr=<Guard0x3be1220>) [p1, p0]
+427: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+431: guard_nonnull_class(p3, 16470384, descr=<Guard0x3be1280>) [p1, p0]
+456: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+459: guard_false(i6, descr=<Guard0x3b6fbb0>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+465: guard_class(p1, 16437896, descr=<Guard0x3b6fbf8>) [p1, p0]
+484: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+488: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3be12e0>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+506: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+510: guard_class(p10, 16479200, descr=<Guard0x3b6fc40>) [p1, p0]
+522: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+533: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3b6fc88>) [p1, p0]
+542: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+546: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+550: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+554: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+558: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+562: guard_class(p18, 16505296, descr=<Guard0x3b6fcd0>) [p1, p0]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+576: guard_not_invalidated(descr=<Guard0x3b6fd18>) [p1, p0]
+576: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+580: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3be1340>) [p1, p0]
+600: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3be13a0>) [p1, p0]
+619: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+623: i24 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+627: i25 = int_eq(i23, i24)
+630: guard_false(i25, descr=<Guard0x3b6fd60>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+636: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x3be1400>) [p1, p0]
+655: i28 = int_ge(i24, 0)
+659: guard_true(i28, descr=<Guard0x3b6fda8>) [p1, p0]
+665: i29 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+676: i30 = int_lt(i24, i29)
+679: guard_true(i30, descr=<Guard0x3b6fdf0>) [p1, p0]
+685: p31 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+689: guard_class(p31, 16622984, descr=<Guard0x3b6fe38>) [p1, p0]
+701: p33 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+705: p34 = getarrayitem_gc_r(p33, i24, descr=<ArrayP 8>)
+717: guard_class(p34, 16470384, descr=<Guard0x3b6fe80>) [p1, p0]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+729: p36 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+733: guard_nonnull_class(p36, 16470384, descr=<Guard0x3be1460>) [p1, p0]
+752: p38 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+756: guard_nonnull_class(p38, 16470384, descr=<Guard0x3be14c0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+774: p40 = same_as_r(p17)
+777: p41 = same_as_r(p16)
+787: p42 = same_as_r(p15)
+797: p43 = same_as_r(p14)
+807: p44 = same_as_r(p18)
+817: label(p10, p36, p38, p8, p18, p1, p14, p15, p16, p3, p17, p34, p40, p41, p42, p43, p44, p20, i23, descr=TargetToken(61027200))
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+856: guard_not_invalidated(descr=<Guard0x3be1520>) [p40, p41, p42, p43, p44, p17, p3, p16, p15, p14, p34, p1, p18, p38, p36, p10, p8]
+856: i45 = getfield_gc_i(p40, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+860: i46 = int_eq(i23, i45)
+867: guard_false(i46, descr=<Guard0x3b6fec8>) [p40, p41, p42, p43, p44, p17, p3, p16, p15, p14, p34, p1, p18, p38, p36, p10, p8]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+873: i48 = int_ge(i45, 0)
+877: guard_true(i48, descr=<Guard0x3b6ff10>) [p40, p41, p42, p43, p44, p17, p3, p16, p15, p14, p34, p1, p18, p38, p36, p10, p8]
+883: i49 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+887: i50 = int_lt(i45, i49)
+890: guard_true(i50, descr=<Guard0x3b6ff58>) [p40, p41, p42, p43, p44, p17, p3, p16, p15, p14, p34, p1, p18, p38, p36, p10, p8]
+896: p51 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+900: guard_class(p51, 16622984, descr=<Guard0x3b6ffa0>) [p40, p41, p42, p43, p44, p17, p3, p16, p15, p14, p34, p1, p18, p38, p36, p10, p8]
+913: p53 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+917: p54 = getarrayitem_gc_r(p53, i45, descr=<ArrayP 8>)
+922: guard_class(p54, 16470384, descr=<Guard0x3cec020>) [p40, p41, p42, p43, p44, p17, p3, p16, p15, p14, p34, p1, p18, p38, p36, p10, p8]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+936: p56 = getfield_gc_r(p36, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+947: guard_nonnull_class(p56, 16470384, descr=<Guard0x3be1580>) [p40, p41, p42, p43, p44, p17, p3, p16, p15, p14, p34, p1, p18, p38, p36, p10, p8]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+966: p58 = new_with_vtable(descr=<SizeDescr 56>)
+1021: p59 = new_with_vtable(descr=<SizeDescr 64>)
+1032: setfield_gc(p59, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1050: setfield_gc(p59, ConstPtr(ptr60), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1054: setfield_gc(p59, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1058: setfield_gc(p59, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1062: setfield_gc(p59, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1066: setfield_gc(p59, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1070: setfield_gc(p59, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1074: setfield_gc(p58, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1085: setfield_gc(p58, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1089: setfield_gc(p58, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1107: setfield_gc(p58, ConstPtr(ptr61), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1111: setfield_gc(p58, p59, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1115: setfield_gc(p58, p34, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1119: jump(p10, p56, p38, p8, p44, p58, p43, p42, p41, p36, p40, p54, p40, p41, p42, p43, p44, p20, i23, descr=TargetToken(61027200))
+1200: --end of the loop--
[3e4c22b00d4e079] jit-log-opt-loop}
[3e4c22b00d5a73f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cd860 +0  49BBE0541D5C4A7F000041FFE3
[3e4c22b00d5c1ba] jit-backend-dump}
[3e4c22b0101b195] {jit-backend
[3e4c22b01047fad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5c
[3e4c22b0104e0e7] jit-backend-dump}
[3e4c22b01058f19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5cf4 +0  1E000000
[3e4c22b0105a382] jit-backend-dump}
[3e4c22b0105e39f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5de5 +0  1E000000
[3e4c22b0105f23f] jit-backend-dump}
[3e4c22b010626d8] {jit-backend-addr
bridge out of Guard 0x3a74698 has address 0x7f4a5c1d5cf0 to 0x7f4a5c1d5de0
       gc table: 0x7f4a5c1d5c80
    jump target: 0x7f4a5c1d5cf0
         resops: 0x7f4a5c1d5cfe
       failures: 0x7f4a5c1d5de0
            end: 0x7f4a5c1d5f3a
[3e4c22b01064c23] jit-backend-addr}
[3e4c22b010680b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d0e +0  F4000000
[3e4c22b01068f34] jit-backend-dump}
[3e4c22b0106c197] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d1b +0  03010000
[3e4c22b0106cef3] jit-backend-dump}
[3e4c22b0106ff3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d2b +0  0F010000
[3e4c22b01070c85] jit-backend-dump}
[3e4c22b01073d42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d43 +0  13010000
[3e4c22b01074a88] jit-backend-dump}
[3e4c22b01077b0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d50 +0  22010000
[3e4c22b01078848] jit-backend-dump}
[3e4c22b0107b980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d64 +0  2A010000
[3e4c22b0107c63c] jit-backend-dump}
[3e4c22b0107f7c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d7b +0  4B010000
[3e4c22b010804b1] jit-backend-dump}
[3e4c22b01083589] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d8c +0  56010000
[3e4c22b01084289] jit-backend-dump}
[3e4c22b01087217] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d99 +0  65010000
[3e4c22b01087f27] jit-backend-dump}
[3e4c22b0108ae8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5db4 +0  66010000
[3e4c22b0108bba2] jit-backend-dump}
[3e4c22b0108edf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc2f3 +0  F9990000
[3e4c22b0108fb0f] jit-backend-dump}
[3e4c22b0109392a] jit-backend}
[3e4c22b010974c4] {jit-log-opt-bridge
# bridge out of Guard 0x3a74698 with 26 ops
[p0, p1]
+134: guard_class(p1, 16500016, descr=<Guard0x3be15e0>) [p0, p1]
+146: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+150: guard_nonnull(p3, descr=<Guard0x3cec068>) [p0, p1]
+166: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+169: guard_true(i5, descr=<Guard0x3cec0b0>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+175: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+179: guard_nonnull_class(p6, 16470384, descr=<Guard0x3be1640>) [p0, p1]
+199: guard_class(p0, 16437352, descr=<Guard0x3cec0f8>) [p0, p1]
+212: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+223: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3cec140>) [p0, p1]
+232: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+232: guard_not_invalidated(descr=<Guard0x3cec188>) [p0, p1]
+232: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+236: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3be16a0>) [p0, p1]
+255: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+259: guard_class(p14, 16437352, descr=<Guard0x3cec1d0>) [p0, p1]
+272: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+276: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3cec218>) [p0, p1]
+285: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+289: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+293: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x3be1700>) [p0, p1]
+312: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (cons AppRand1 AppRand2)')
+316: jump(p18, p19, p12, p6, p21, descr=TargetToken(61023520))
+352: --end of the loop--
[3e4c22b010b171b] jit-log-opt-bridge}
[3e4c22b0118d9c9] {jit-backend
[3e4c22b011e7487] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d
[3e4c22b011eeb1e] jit-backend-dump}
[3e4c22b011f8997] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6104 +0  25000000
[3e4c22b011f9dcf] jit-backend-dump}
[3e4c22b011fd98a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6315 +0  25000000
[3e4c22b011fe7f9] jit-backend-dump}
[3e4c22b01201ba6] {jit-backend-addr
bridge out of Guard 0x3be0140 has address 0x7f4a5c1d6100 to 0x7f4a5c1d6310
       gc table: 0x7f4a5c1d6060
    jump target: 0x7f4a5c1d6100
         resops: 0x7f4a5c1d610e
       failures: 0x7f4a5c1d6310
            end: 0x7f4a5c1d64f7
[3e4c22b01203f23] jit-backend-addr}
[3e4c22b0120749e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d611e +0  31020000
[3e4c22b01208313] jit-backend-dump}
[3e4c22b0120b570] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6135 +0  36020000
[3e4c22b0120c230] jit-backend-dump}
[3e4c22b0120f3c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6145 +0  42020000
[3e4c22b0121009b] jit-backend-dump}
[3e4c22b01213259] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6151 +0  52020000
[3e4c22b01213f10] jit-backend-dump}
[3e4c22b01216fa2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6168 +0  57020000
[3e4c22b01217c5c] jit-backend-dump}
[3e4c22b0121ad8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d617a +0  7D020000
[3e4c22b0121ba3a] jit-backend-dump}
[3e4c22b0121ea9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d618e +0  85020000
[3e4c22b0121f74c] jit-backend-dump}
[3e4c22b012227a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d61a5 +0  8A020000
[3e4c22b01223451] jit-backend-dump}
[3e4c22b01226441] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d61bd +0  8E020000
[3e4c22b012270d9] jit-backend-dump}
[3e4c22b0122a0e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d61d4 +0  93020000
[3e4c22b0122ad86] jit-backend-dump}
[3e4c22b0122dd7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d61eb +0  98020000
[3e4c22b0122ea0b] jit-backend-dump}
[3e4c22b01231a0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6202 +0  9D020000
[3e4c22b012326a8] jit-backend-dump}
[3e4c22b012356a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d621c +0  9F020000
[3e4c22b01236367] jit-backend-dump}
[3e4c22b01239370] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6233 +0  A4020000
[3e4c22b0123a005] jit-backend-dump}
[3e4c22b0123d2d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d2d9c +0  60330000
[3e4c22b0123df83] jit-backend-dump}
[3e4c22b01241e2f] jit-backend}
[3e4c22b012458b8] {jit-log-opt-bridge
# bridge out of Guard 0x3be0140 with 52 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x3be1760>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16470384, descr=<Guard0x3be17c0>) [p0, p1]
+224: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+227: guard_false(i6, descr=<Guard0x3cec2a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+233: guard_class(p0, 16437352, descr=<Guard0x3cec2f0>) [p0, p1]
+245: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+249: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3be1820>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+268: guard_not_invalidated(descr=<Guard0x3cec338>) [p0, p1]
+268: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+272: guard_class(p10, 16478072, descr=<Guard0x3cec380>) [p0, p1]
+286: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+297: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3cec3c8>) [p0, p1]
+306: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+310: guard_nonnull_class(p14, 16470384, descr=<Guard0x3be1880>) [p0, p1]
+329: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+333: guard_nonnull_class(p16, ConstClass(W_Vector), descr=<Guard0x3be18e0>) [p0, p1]
+353: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+357: guard_nonnull_class(p18, 16470384, descr=<Guard0x3be1940>) [p0, p1]
+376: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+380: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3be19a0>) [p0, p1]
+399: p22 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+403: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x3be1a00>) [p0, p1]
+422: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+426: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+430: guard_nonnull_class(p25, 16616448, descr=<Guard0x3be1a60>) [p0, p1]
+448: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+452: guard_nonnull_class(p27, 16470384, descr=<Guard0x3be1ac0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+471: p29 = new_with_vtable(descr=<SizeDescr 32>)
+518: p30 = new_with_vtable(descr=<SizeDescr 48>)
+529: p31 = new_with_vtable(descr=<SizeDescr 32>)
+540: setfield_gc(p31, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+548: p34 = new_array_clear(4, descr=<ArrayP 8>)
+581: setarrayitem_gc(p34, 0, ConstPtr(ptr36), descr=<ArrayP 8>)
+585: setarrayitem_gc(p34, 1, p16, descr=<ArrayP 8>)
+589: setarrayitem_gc(p34, 2, p20, descr=<ArrayP 8>)
+593: setarrayitem_gc(p34, 3, p22, descr=<ArrayP 8>)
+597: setfield_gc(p31, p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: setfield_gc(p31, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+612: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+623: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+627: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+631: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+635: setfield_gc(p30, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p30, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+658: jump(p29, p30, descr=TargetToken(59469520))
+688: --end of the loop--
[3e4c22b01270c10] jit-log-opt-bridge}
[3e4c22b0137bbff] {jit-backend
[3e4c22b013dbe0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d
[3e4c22b013e421a] jit-backend-dump}
[3e4c22b013ee54b] {jit-backend-addr
Loop 43 ((if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)) has address 0x7f4a5c1d678d to 0x7f4a5c1d69d0 (bootstrap 0x7f4a5c1d6700)
       gc table: 0x7f4a5c1d6640
       function: 0x7f4a5c1d6700
         resops: 0x7f4a5c1d678d
       failures: 0x7f4a5c1d69d0
            end: 0x7f4a5c1d6bf7
[3e4c22b013f12d4] jit-backend-addr}
[3e4c22b013f538e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d67a4 +0  57020000
[3e4c22b013f6565] jit-backend-dump}
[3e4c22b013f99d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d67b1 +0  66020000
[3e4c22b013fa7b2] jit-backend-dump}
[3e4c22b013fdb9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d67c1 +0  72020000
[3e4c22b013fe8af] jit-backend-dump}
[3e4c22b01401b31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d67d7 +0  78020000
[3e4c22b01402883] jit-backend-dump}
[3e4c22b01405a3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d67ea +0  81020000
[3e4c22b01406747] jit-backend-dump}
[3e4c22b01409973] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d67fe +0  89020000
[3e4c22b0140a6a4] jit-backend-dump}
[3e4c22b0140d9ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d681c +0  A3020000
[3e4c22b0140e6ea] jit-backend-dump}
[3e4c22b01411852] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d682e +0  AD020000
[3e4c22b01412524] jit-backend-dump}
[3e4c22b01415609] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6842 +0  B5020000
[3e4c22b014162de] jit-backend-dump}
[3e4c22b014193a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d684e +0  C5020000
[3e4c22b0141a0b0] jit-backend-dump}
[3e4c22b0141d173] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6865 +0  CA020000
[3e4c22b0141df1c] jit-backend-dump}
[3e4c22b01420fa8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d687c +0  CF020000
[3e4c22b01421cab] jit-backend-dump}
[3e4c22b01424d34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6893 +0  D4020000
[3e4c22b01425a4f] jit-backend-dump}
[3e4c22b01428adb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d68aa +0  D9020000
[3e4c22b014297e1] jit-backend-dump}
[3e4c22b0142c876] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d68c2 +0  DD020000
[3e4c22b0142d580] jit-backend-dump}
[3e4c22b01430615] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d68d9 +0  E2020000
[3e4c22b0143132d] jit-backend-dump}
[3e4c22b014344a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d68f4 +0  E3020000
[3e4c22b014351c0] jit-backend-dump}
[3e4c22b01438d91] jit-backend}
[3e4c22b0143cb9d] {jit-log-opt-loop
# Loop 43 ((if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)) : entry bridge with 63 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+341: guard_class(p0, 16500016, descr=<Guard0x3be1b20>) [p1, p0]
+360: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+364: guard_nonnull(p3, descr=<Guard0x3cec458>) [p1, p0]
+380: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+383: guard_true(i5, descr=<Guard0x3cec4a0>) [p1, p0]
debug_merge_point(0, 0, 'lst4990')
+389: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+393: guard_nonnull_class(p6, 16470384, descr=<Guard0x3be1b80>) [p1, p0]
+411: guard_class(p1, 16437896, descr=<Guard0x3cec4e8>) [p1, p0]
+430: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+441: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3cec530>) [p1, p0]
+450: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+450: guard_not_invalidated(descr=<Guard0x3cec578>) [p1, p0]
+450: p12 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+454: p13 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+458: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
+462: guard_nonnull_class(p12, 16478072, descr=<Guard0x3be1be0>) [p1, p0]
+480: guard_nonnull_class(p13, 16470384, descr=<Guard0x3be1c40>) [p1, p0]
+498: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+509: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3cec5c0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+518: guard_class(p14, 16437896, descr=<Guard0x3cec608>) [p1, p0]
+530: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+534: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3be1ca0>) [p1, p0]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+553: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+557: guard_nonnull_class(p22, 16470384, descr=<Guard0x3be1d00>) [p1, p0]
+576: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+580: guard_nonnull_class(p24, ConstClass(W_Symbol), descr=<Guard0x3be1d60>) [p1, p0]
+599: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+603: guard_nonnull_class(p26, 16470384, descr=<Guard0x3be1dc0>) [p1, p0]
+622: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+626: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x3be1e20>) [p1, p0]
+646: p30 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+650: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x3be1e80>) [p1, p0]
+669: p32 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+673: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+677: guard_nonnull_class(p33, 16470384, descr=<Guard0x3be1ee0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+696: p35 = new_with_vtable(descr=<SizeDescr 32>)
+743: p36 = new_with_vtable(descr=<SizeDescr 48>)
+754: p37 = new_with_vtable(descr=<SizeDescr 32>)
+765: setfield_gc(p37, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+773: p40 = new_array_clear(4, descr=<ArrayP 8>)
+806: setarrayitem_gc(p40, 0, ConstPtr(ptr42), descr=<ArrayP 8>)
+810: setarrayitem_gc(p40, 1, p24, descr=<ArrayP 8>)
+814: setarrayitem_gc(p40, 2, p28, descr=<ArrayP 8>)
+818: setarrayitem_gc(p40, 3, p30, descr=<ArrayP 8>)
+822: setfield_gc(p37, p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+833: setfield_gc(p37, ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+837: setfield_gc(p35, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+848: setfield_gc(p35, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+859: setfield_gc(p36, ConstPtr(ptr47), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+863: setfield_gc(p36, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+867: setfield_gc(p36, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+871: setfield_gc(p36, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+875: setfield_gc(p35, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+879: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+883: jump(p35, p36, descr=TargetToken(59469520))
+912: --end of the loop--
[3e4c22b014730b4] jit-log-opt-loop}
[3e4c22b01a1694b] {jit-backend
[3e4c22b01aef227] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6ea
[3e4c22b01afbef6] jit-backend-dump}
[3e4c22b01b07151] {jit-backend-addr
Loop 44 ((let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)) has address 0x7f4a5c1d707d to 0x7f4a5c1d74e0 (bootstrap 0x7f4a5c1d6ff0)
       gc table: 0x7f4a5c1d6ea0
       function: 0x7f4a5c1d6ff0
         resops: 0x7f4a5c1d707d
       failures: 0x7f4a5c1d74e0
            end: 0x7f4a5c1d7953
[3e4c22b01b0a21a] jit-backend-addr}
[3e4c22b01b0eafd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d70a7 +0  64040000
[3e4c22b01b0fea2] jit-backend-dump}
[3e4c22b01b134cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d70bd +0  6A040000
[3e4c22b01b1443c] jit-backend-dump}
[3e4c22b01b17986] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d70d0 +0  8F040000
[3e4c22b01b186bd] jit-backend-dump}
[3e4c22b01b1b988] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d70e4 +0  97040000
[3e4c22b01b1c6c5] jit-backend-dump}
[3e4c22b01b1f83d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d70f8 +0  9F040000
[3e4c22b01b20568] jit-backend-dump}
[3e4c22b01b2361e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d710f +0  A4040000
[3e4c22b01b24368] jit-backend-dump}
[3e4c22b01b27403] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d711c +0  B3040000
[3e4c22b01b28153] jit-backend-dump}
[3e4c22b01b2b1cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7132 +0  B9040000
[3e4c22b01b2beeb] jit-backend-dump}
[3e4c22b01b2efa2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7140 +0  C7040000
[3e4c22b01b2fcd0] jit-backend-dump}
[3e4c22b01b32d6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7156 +0  CD040000
[3e4c22b01b33a62] jit-backend-dump}
[3e4c22b01b36b00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d716c +0  D3040000
[3e4c22b01b37822] jit-backend-dump}
[3e4c22b01b3a8c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7180 +0  DB040000
[3e4c22b01b3b5bd] jit-backend-dump}
[3e4c22b01b3e668] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7197 +0  E0040000
[3e4c22b01b3f368] jit-backend-dump}
[3e4c22b01b42486] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d71a4 +0  EF040000
[3e4c22b01b4317a] jit-backend-dump}
[3e4c22b01b4622b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d71bb +0  F4040000
[3e4c22b01b46f28] jit-backend-dump}
[3e4c22b01b49fcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d71cc +0  FF040000
[3e4c22b01b4acc6] jit-backend-dump}
[3e4c22b01b4ddc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d71d8 +0  0F050000
[3e4c22b01b4eac0] jit-backend-dump}
[3e4c22b01b51b3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d721a +0  E9040000
[3e4c22b01b5284f] jit-backend-dump}
[3e4c22b01b558db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7223 +0  FC040000
[3e4c22b01b56600] jit-backend-dump}
[3e4c22b01b596e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7234 +0  07050000
[3e4c22b01b5a3f1] jit-backend-dump}
[3e4c22b01b5d486] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7240 +0  17050000
[3e4c22b01b5e17d] jit-backend-dump}
[3e4c22b01b61268] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7289 +0  EA040000
[3e4c22b01b61f9c] jit-backend-dump}
[3e4c22b01b65046] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7295 +0  FA040000
[3e4c22b01b65d37] jit-backend-dump}
[3e4c22b01b68df1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d729e +0  0D050000
[3e4c22b01b69ae8] jit-backend-dump}
[3e4c22b01b6cb9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d72a7 +0  20050000
[3e4c22b01b6d88c] jit-backend-dump}
[3e4c22b01b709ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d72ed +0  12050000
[3e4c22b01b716b4] jit-backend-dump}
[3e4c22b01b747fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d72fa +0  21050000
[3e4c22b01b7550d] jit-backend-dump}
[3e4c22b01b785fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7307 +0  30050000
[3e4c22b01b792f5] jit-backend-dump}
[3e4c22b01b7c36f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7318 +0  3B050000
[3e4c22b01b7d059] jit-backend-dump}
[3e4c22b01b800d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7328 +0  47050000
[3e4c22b01b80de2] jit-backend-dump}
[3e4c22b01b83e87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d737d +0  0E050000
[3e4c22b01b84b7a] jit-backend-dump}
[3e4c22b01b87bfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7386 +0  21050000
[3e4c22b01b888fa] jit-backend-dump}
[3e4c22b01b8b99f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7392 +0  31050000
[3e4c22b01b8c68f] jit-backend-dump}
[3e4c22b01b8f728] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d73d4 +0  0B050000
[3e4c22b01b9043a] jit-backend-dump}
[3e4c22b01b93506] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d73e4 +0  17050000
[3e4c22b01b94200] jit-backend-dump}
[3e4c22b01b9732e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d73f1 +0  26050000
[3e4c22b01b98028] jit-backend-dump}
[3e4c22b01b9b0c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d73fa +0  39050000
[3e4c22b01b9bdc0] jit-backend-dump}
[3e4c22b01b9facf] jit-backend}
[3e4c22b01ba3af6] {jit-log-opt-loop
# Loop 44 ((let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)) : loop with 204 ops
[p0, p1]
+485: label(p0, p1, descr=TargetToken(61027280))
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+504: guard_class(p1, 16435920, descr=<Guard0x3be1f40>) [p0, p1]
+523: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+527: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3be1fa0>) [p0, p1]
debug_merge_point(0, 0, '(< nc35240 start)')
+545: guard_not_invalidated(descr=<Guard0x3cec6e0>) [p0, p1]
+545: guard_class(p0, 16503536, descr=<Guard0x3cec728>) [p0, p1]
+564: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+568: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+572: guard_class(p7, 16479200, descr=<Guard0x3cec770>) [p0, p1]
+584: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+595: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3cec7b8>) [p0, p1]
+604: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+608: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3cf6020>) [p0, p1]
+627: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+631: i14 = int_lt(i6, i13)
+634: guard_true(i14, descr=<Guard0x3cec800>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41))')
debug_merge_point(0, 0, '(- nc25224 1)')
+640: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+644: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3cf6080>) [p0, p1]
+662: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+666: i19 = int_sub_ovf(i17, 1)
+670: guard_no_overflow(descr=<Guard0x3cec848>) [p0, p1]
debug_merge_point(0, 0, '(loop25220 lst5238 AppRand41)')
+676: p20 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+680: guard_nonnull_class(p20, 16478448, descr=<Guard0x3cf60e0>) [p0, p1]
+698: p22 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+702: guard_nonnull_class(p22, 16470384, descr=<Guard0x3cf6140>) [p0, p1]
+720: p24 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+731: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3cec890>) [p0, p1]
+740: p26 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+740: p27 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+744: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x3cf61a0>) [p0, p1]
+763: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+767: i30 = int_lt(i19, i29)
+770: guard_false(i30, descr=<Guard0x3cec8d8>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))))')
debug_merge_point(0, 0, '(+ m5210 1)')
+776: p31 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+780: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3cf6200>) [p0, p1]
+799: i33 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+803: i35 = int_add_ovf(i33, 1)
+810: guard_no_overflow(descr=<Guard0x3cec920>) [p0, p1]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
+816: i36 = int_add_ovf(i29, i19)
+822: guard_no_overflow(descr=<Guard0x3cec968>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))')
debug_merge_point(0, 0, '(- (quotient AppRand38 2) AppRand39)')
+828: i38 = int_rshift(i35, 1)
+834: i40 = int_lshift(i38, 1)
+844: i42 = int_xor(i35, 2)
+855: i44 = int_rshift(i42, 63)
+859: i45 = int_ne(i40, i35)
+875: i46 = int_and(i44, i45)
+878: i47 = int_add(i38, i46)
+885: i48 = int_sub_ovf(i47, i36)
+888: guard_no_overflow(descr=<Guard0x3cec9b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))')
debug_merge_point(0, 0, '(max nc25224 AppRand40)')
+894: i49 = int_lt(i19, i48)
+897: guard_true(i49, descr=<Guard0x3cec9f8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))')
debug_merge_point(0, 0, '(lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))')
+903: p50 = getfield_gc_r(p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+907: guard_class(p50, 16505296, descr=<Guard0x3ceca40>) [p0, p1]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
debug_merge_point(0, 0, '(let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))')
debug_merge_point(0, 0, '(- m5210 AppRand47)')
+920: i52 = int_sub_ovf(i33, i36)
+926: guard_no_overflow(descr=<Guard0x3ceca88>) [p0, p1]
debug_merge_point(0, 0, '(loop35236 lst5222 (quotient AppRand48 2))')
+932: i54 = int_eq(i52, -9223372036854775808)
+932: i56 = int_rshift(i52, 1)
+938: i58 = int_lshift(i56, 1)
+948: i60 = int_xor(i52, 2)
+959: i62 = int_rshift(i60, 63)
+963: i63 = int_ne(i58, i52)
+986: i64 = int_and(i62, i63)
+989: i65 = int_add(i56, i64)
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
debug_merge_point(0, 0, '(< nc35240 start)')
+996: i66 = int_lt(i65, i48)
+999: guard_false(i66, descr=<Guard0x3cecad0>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+1005: i67 = int_add_ovf(i19, i65)
+1011: guard_no_overflow(descr=<Guard0x3cecb18>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+1017: i68 = int_add_ovf(i29, i67)
+1020: guard_no_overflow(descr=<Guard0x3cecb60>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+1026: i69 = int_sub_ovf(i33, i68)
+1029: guard_no_overflow(descr=<Guard0x3cecba8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+1035: i71 = int_sub(i65, 1)
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+1039: p72 = same_as_r(p27)
+1042: p73 = same_as_r(p31)
+1045: p74 = same_as_r(p50)
+1055: label(p50, i19, p27, i48, p31, p20, i71, i29, i65, i69, p22, p1, p3, p72, p73, p74, descr=TargetToken(61027360))
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(< nc35240 start)')
+1096: guard_not_invalidated(descr=<Guard0x3cf6260>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
+1096: i75 = int_lt(i71, i48)
+1099: guard_true(i75, descr=<Guard0x3cecbf0>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41))')
debug_merge_point(0, 0, '(- nc25224 1)')
+1105: i77 = int_sub_ovf(i19, 1)
+1112: guard_no_overflow(descr=<Guard0x3cecc38>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(loop25220 lst5238 AppRand41)')
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+1118: i78 = getfield_gc_i(p72, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1122: i79 = int_lt(i77, i78)
+1125: guard_false(i79, descr=<Guard0x3cecc80>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))))')
debug_merge_point(0, 0, '(+ m5210 1)')
+1131: i80 = getfield_gc_i(p73, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1135: i82 = int_add_ovf(i80, 1)
+1142: guard_no_overflow(descr=<Guard0x3ceccc8>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
+1148: i83 = int_add_ovf(i78, i77)
+1158: guard_no_overflow(descr=<Guard0x3cecd10>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))')
debug_merge_point(0, 0, '(- (quotient AppRand38 2) AppRand39)')
+1164: i85 = int_rshift(i82, 1)
+1174: i87 = int_lshift(i85, 1)
+1184: i89 = int_xor(i82, 2)
+1202: i91 = int_rshift(i89, 63)
+1206: i92 = int_ne(i87, i82)
+1230: i93 = int_and(i91, i92)
+1233: i94 = int_add(i85, i93)
+1240: i95 = int_sub_ovf(i94, i83)
+1243: guard_no_overflow(descr=<Guard0x3cecd58>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))')
debug_merge_point(0, 0, '(max nc25224 AppRand40)')
+1249: i96 = int_lt(i77, i95)
+1252: guard_true(i96, descr=<Guard0x3cecda0>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))')
debug_merge_point(0, 0, '(lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))')
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
debug_merge_point(0, 0, '(let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))')
debug_merge_point(0, 0, '(- m5210 AppRand47)')
+1258: i97 = int_sub_ovf(i80, i83)
+1264: guard_no_overflow(descr=<Guard0x3cecde8>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(loop35236 lst5222 (quotient AppRand48 2))')
+1270: i99 = int_eq(i97, -9223372036854775808)
+1270: i101 = int_rshift(i97, 1)
+1276: i103 = int_lshift(i101, 1)
+1282: i105 = int_xor(i97, 2)
+1293: i107 = int_rshift(i105, 63)
+1297: i108 = int_ne(i103, i97)
+1321: i109 = int_and(i107, i108)
+1324: i110 = int_add(i101, i109)
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
debug_merge_point(0, 0, '(< nc35240 start)')
+1327: i111 = int_lt(i110, i95)
+1330: guard_false(i111, descr=<Guard0x3cece30>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+1336: i112 = int_add_ovf(i77, i110)
+1346: guard_no_overflow(descr=<Guard0x3cece78>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+1352: i113 = int_add_ovf(i78, i112)
+1359: guard_no_overflow(descr=<Guard0x3cecec0>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+1365: i114 = int_sub_ovf(i80, i113)
+1368: guard_no_overflow(descr=<Guard0x3cecf08>) [i69, i65, i29, p22, i48, i19, p20, p31, p27, p50, i71, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+1374: i116 = int_sub(i110, 1)
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+1378: p117 = new_with_vtable(descr=<SizeDescr 24>)
+1422: p118 = new_with_vtable(descr=<SizeDescr 32>)
+1433: setfield_gc(p118, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1441: p121 = new_array(4, descr=<ArrayS 8>)
+1460: setarrayitem_gc(p121, 0, i29, descr=<ArrayS 8>)
+1464: setarrayitem_gc(p121, 1, i19, descr=<ArrayS 8>)
+1468: setarrayitem_gc(p121, 2, i65, descr=<ArrayS 8>)
+1472: setarrayitem_gc(p121, 3, i69, descr=<ArrayS 8>)
+1476: setfield_gc(p118, p121, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1487: setfield_gc(p118, ConstPtr(ptr126), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1491: setfield_gc(p117, p118, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1495: setfield_gc(p117, p22, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1499: jump(p74, i77, p72, i95, p73, p20, i116, i78, i110, i114, p117, p1, p3, p72, p73, p74, descr=TargetToken(61027360))
+1600: --end of the loop--
[3e4c22b01c3cfd3] jit-log-opt-loop}
[3e4c22b01e709d3] {jit-backend
[3e4c22b01eec4e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7a
[3e4c22b01ef5364] jit-backend-dump}
[3e4c22b01f00050] {jit-backend-addr
Loop 45 ((if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)) has address 0x7f4a5c1d7bcd to 0x7f4a5c1d7e40 (bootstrap 0x7f4a5c1d7b40)
       gc table: 0x7f4a5c1d7a90
       function: 0x7f4a5c1d7b40
         resops: 0x7f4a5c1d7bcd
       failures: 0x7f4a5c1d7e40
            end: 0x7f4a5c1d804b
[3e4c22b01f03709] jit-backend-addr}
[3e4c22b01f07f25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7bf7 +0  74020000
[3e4c22b01f092b7] jit-backend-dump}
[3e4c22b01f0c9d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7c0d +0  7A020000
[3e4c22b01f0d817] jit-backend-dump}
[3e4c22b01f10bc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7c1d +0  86020000
[3e4c22b01f118ec] jit-backend-dump}
[3e4c22b01f14cc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7c30 +0  8F020000
[3e4c22b01f159c1] jit-backend-dump}
[3e4c22b01f18bd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7c46 +0  95020000
[3e4c22b01f198b6] jit-backend-dump}
[3e4c22b01f1cb4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7c56 +0  A1020000
[3e4c22b01f1d82c] jit-backend-dump}
[3e4c22b01f20a1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7c6a +0  A9020000
[3e4c22b01f216bc] jit-backend-dump}
[3e4c22b01f248eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7c8c +0  A3020000
[3e4c22b01f25533] jit-backend-dump}
[3e4c22b01f288f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7ca4 +0  C3020000
[3e4c22b01f2955a] jit-backend-dump}
[3e4c22b01f2c730] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7cb7 +0  CC020000
[3e4c22b01f2d38b] jit-backend-dump}
[3e4c22b01f3056b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7cc8 +0  D7020000
[3e4c22b01f311ea] jit-backend-dump}
[3e4c22b01f343d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7cdf +0  DC020000
[3e4c22b01f35031] jit-backend-dump}
[3e4c22b01f381df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7cfc +0  DB020000
[3e4c22b01f38e28] jit-backend-dump}
[3e4c22b01f3c06c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7d65 +0  AA020000
[3e4c22b01f3cce6] jit-backend-dump}
[3e4c22b01f3fee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7d83 +0  A8020000
[3e4c22b01f40b79] jit-backend-dump}
[3e4c22b01f44b16] jit-backend}
[3e4c22b01f48a67] {jit-log-opt-loop
# Loop 45 ((if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)) : loop with 77 ops
[p0, p1]
+325: label(p0, p1, descr=TargetToken(61027440))
+344: guard_class(p0, 16500016, descr=<Guard0x3cf62c0>) [p1, p0]
+363: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+367: guard_nonnull_class(p3, 16470384, descr=<Guard0x3cf6320>) [p1, p0]
+392: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+395: guard_false(i6, descr=<Guard0x3cecf50>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+401: guard_class(p1, 16437896, descr=<Guard0x3cecf98>) [p1, p0]
+420: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+424: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3cf6380>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+442: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+446: guard_class(p10, 16479200, descr=<Guard0x3cecfe0>) [p1, p0]
+458: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+469: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3ced028>) [p1, p0]
+478: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+482: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+486: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+490: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+494: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+498: guard_class(p18, 16505296, descr=<Guard0x3ced070>) [p1, p0]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+512: guard_not_invalidated(descr=<Guard0x3ced0b8>) [p1, p0]
+512: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+516: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3cf63e0>) [p1, p0]
+536: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x3cf6440>) [p1, p0]
+555: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+559: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+563: i25 = int_eq(i23, i24)
+566: guard_true(i25, descr=<Guard0x3ced100>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+572: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+576: guard_nonnull_class(p26, 16470384, descr=<Guard0x3cf64a0>) [p1, p0]
+595: p28 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+606: guard_nonnull_class(p28, 16616448, descr=<Guard0x3cf6500>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+624: p30 = same_as_r(p17)
+627: p31 = same_as_r(p16)
+637: p32 = same_as_r(p15)
+647: p33 = same_as_r(p14)
+657: p34 = same_as_r(p18)
+667: label(p10, p26, p28, p8, p18, p1, p14, p15, p16, p3, p17, p30, p31, p32, p33, p34, p20, i23, descr=TargetToken(61027520))
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+712: guard_not_invalidated(descr=<Guard0x3cf6560>) [p30, p31, p32, p33, p34, p17, p16, p15, p14, p3, p1, p18, p28, p26, p10, p8]
+712: i35 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+716: i36 = int_eq(i23, i35)
+723: guard_true(i36, descr=<Guard0x3ced148>) [p30, p31, p32, p33, p34, p17, p16, p15, p14, p3, p1, p18, p28, p26, p10, p8]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+729: p37 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+740: guard_nonnull_class(p37, 16470384, descr=<Guard0x3cf65c0>) [p30, p31, p32, p33, p34, p17, p16, p15, p14, p3, p1, p18, p28, p26, p10, p8]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+759: p39 = new_with_vtable(descr=<SizeDescr 56>)
+803: p40 = new_with_vtable(descr=<SizeDescr 64>)
+814: setfield_gc(p40, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+825: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+829: setfield_gc(p40, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+833: setfield_gc(p40, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+837: setfield_gc(p40, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+841: setfield_gc(p40, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+845: setfield_gc(p40, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+849: setfield_gc(p39, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+860: setfield_gc(p39, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+864: setfield_gc(p39, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+875: setfield_gc(p39, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+879: setfield_gc(p39, p40, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+883: setfield_gc(p39, p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+887: jump(p10, p37, p28, p8, p34, p39, p33, p32, p31, p26, p30, p30, p31, p32, p33, p34, p20, i23, descr=TargetToken(61027520))
+944: --end of the loop--
[3e4c22b01f8d154] jit-log-opt-loop}
[3e4c22b01f9788f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d42d0 +0  49BB407B1D5C4A7F000041FFE3
[3e4c22b01f9952a] jit-backend-dump}
[3e4c22b020ac744] {jit-backend
[3e4c22b020fb897] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d
[3e4c22b02102984] jit-backend-dump}
[3e4c22b0210cb7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d81f4 +0  27000000
[3e4c22b0210dfd1] jit-backend-dump}
[3e4c22b02111dff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d83b5 +0  27000000
[3e4c22b02112c9f] jit-backend-dump}
[3e4c22b02116187] {jit-backend-addr
bridge out of Guard 0x3a7afe0 has address 0x7f4a5c1d81f0 to 0x7f4a5c1d83b0
       gc table: 0x7f4a5c1d8160
    jump target: 0x7f4a5c1d81f0
         resops: 0x7f4a5c1d81fe
       failures: 0x7f4a5c1d83b0
            end: 0x7f4a5c1d857b
[3e4c22b021184a5] jit-backend-addr}
[3e4c22b0211bbba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d820e +0  E1010000
[3e4c22b0211c9a9] jit-backend-dump}
[3e4c22b0211fdd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8225 +0  E6010000
[3e4c22b02120ae0] jit-backend-dump}
[3e4c22b02123eda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8235 +0  F2010000
[3e4c22b02124bbe] jit-backend-dump}
[3e4c22b02127f78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8241 +0  02020000
[3e4c22b02128c75] jit-backend-dump}
[3e4c22b0212bde3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8258 +0  07020000
[3e4c22b0212caff] jit-backend-dump}
[3e4c22b0212fd25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d826a +0  11020000
[3e4c22b021309f1] jit-backend-dump}
[3e4c22b02133b5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d827e +0  19020000
[3e4c22b02134819] jit-backend-dump}
[3e4c22b02137987] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8297 +0  1C020000
[3e4c22b02138662] jit-backend-dump}
[3e4c22b0213b8ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d82ae +0  3D020000
[3e4c22b0213c5de] jit-backend-dump}
[3e4c22b0213f7a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d82c4 +0  43020000
[3e4c22b02140480] jit-backend-dump}
[3e4c22b021435fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d82d5 +0  4E020000
[3e4c22b021442ef] jit-backend-dump}
[3e4c22b02147466] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d82ec +0  53020000
[3e4c22b02148163] jit-backend-dump}
[3e4c22b0214b2e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8302 +0  59020000
[3e4c22b0214bfc5] jit-backend-dump}
[3e4c22b0214f402] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce109 +0  E3A00000
[3e4c22b0215015e] jit-backend-dump}
[3e4c22b02154212] jit-backend}
[3e4c22b02158074] {jit-log-opt-bridge
# bridge out of Guard 0x3a7afe0 with 56 ops
[p0, p1]
+166: guard_class(p1, 16500016, descr=<Guard0x3cf6620>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+182: guard_nonnull_class(p3, 16470384, descr=<Guard0x3cf6680>) [p0, p1]
+208: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+211: guard_false(i6, descr=<Guard0x3ced190>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+217: guard_class(p0, 16437896, descr=<Guard0x3ced1d8>) [p0, p1]
+229: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+233: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3cf66e0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+252: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+256: guard_class(p10, 16479200, descr=<Guard0x3ced220>) [p0, p1]
+270: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+281: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3ced268>) [p0, p1]
+290: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+294: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+298: p16 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+302: guard_class(p16, 16505296, descr=<Guard0x3ced2b0>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+315: guard_not_invalidated(descr=<Guard0x3ced2f8>) [p0, p1]
+315: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+319: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x3cf6740>) [p0, p1]
+338: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+342: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3cf67a0>) [p0, p1]
+360: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+364: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+368: i24 = int_eq(i22, i23)
+371: guard_true(i24, descr=<Guard0x3ced340>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+377: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+381: guard_nonnull_class(p25, 16616448, descr=<Guard0x3cf6800>) [p0, p1]
+400: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+404: guard_nonnull_class(p27, 16470384, descr=<Guard0x3cf6860>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+422: p29 = new_with_vtable(descr=<SizeDescr 32>)
+469: p30 = new_with_vtable(descr=<SizeDescr 56>)
+480: p31 = new_with_vtable(descr=<SizeDescr 48>)
+491: setfield_gc(p31, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+502: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+506: setfield_gc(p31, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+510: setfield_gc(p31, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+514: setfield_gc(p31, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+518: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+522: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+526: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+530: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+534: setfield_gc(p30, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+538: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+549: setfield_gc(p30, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+553: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+557: setfield_gc(p30, p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+561: jump(p29, p30, descr=TargetToken(59470000))
+592: --end of the loop--
[3e4c22b021876c1] jit-log-opt-bridge}
[3e4c22b023657aa] {jit-backend
[3e4c22b023ca535] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d86e
[3e4c22b023d5d7a] jit-backend-dump}
[3e4c22b023e0194] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d87a4 +0  28000000
[3e4c22b023e1532] jit-backend-dump}
[3e4c22b023e5367] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d89e5 +0  28000000
[3e4c22b023e61ab] jit-backend-dump}
[3e4c22b023e96a0] {jit-backend-addr
bridge out of Guard 0x3be1460 has address 0x7f4a5c1d87a0 to 0x7f4a5c1d89e0
       gc table: 0x7f4a5c1d86e0
    jump target: 0x7f4a5c1d87a0
         resops: 0x7f4a5c1d87ae
       failures: 0x7f4a5c1d89e0
            end: 0x7f4a5c1d8c37
[3e4c22b023eb9b1] jit-backend-addr}
[3e4c22b023eef70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d87be +0  61020000
[3e4c22b023efd40] jit-backend-dump}
[3e4c22b023f3045] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d87d5 +0  66020000
[3e4c22b023f3d08] jit-backend-dump}
[3e4c22b023f70bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d87e5 +0  72020000
[3e4c22b023f7de3] jit-backend-dump}
[3e4c22b023fb3d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d87f1 +0  82020000
[3e4c22b023fc153] jit-backend-dump}
[3e4c22b023ff37c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8808 +0  87020000
[3e4c22b0240007c] jit-backend-dump}
[3e4c22b024031cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d881a +0  91020000
[3e4c22b02403e76] jit-backend-dump}
[3e4c22b024071c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d882e +0  99020000
[3e4c22b02407ec8] jit-backend-dump}
[3e4c22b0240b0ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d884e +0  95020000
[3e4c22b0240bda7] jit-backend-dump}
[3e4c22b0240f038] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8864 +0  B7020000
[3e4c22b0240fd6c] jit-backend-dump}
[3e4c22b02412fb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8877 +0  C0020000
[3e4c22b02413c74] jit-backend-dump}
[3e4c22b02416deb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8888 +0  CB020000
[3e4c22b02417ab4] jit-backend-dump}
[3e4c22b0241ac0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d889b +0  D4020000
[3e4c22b0241b8d3] jit-backend-dump}
[3e4c22b0241ea78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d88a5 +0  E6020000
[3e4c22b0241f73b] jit-backend-dump}
[3e4c22b024228b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d88b2 +0  F5020000
[3e4c22b02423538] jit-backend-dump}
[3e4c22b02426645] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d88c2 +0  01030000
[3e4c22b024272e0] jit-backend-dump}
[3e4c22b0242a41a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d88d7 +0  08030000
[3e4c22b0242b0be] jit-backend-dump}
[3e4c22b0242e205] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d88ed +0  0E030000
[3e4c22b0242ee8e] jit-backend-dump}
[3e4c22b02431fc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8903 +0  14030000
[3e4c22b02432c54] jit-backend-dump}
[3e4c22b0243603b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d56dc +0  C0300000
[3e4c22b02436d01] jit-backend-dump}
[3e4c22b0243ae48] jit-backend}
[3e4c22b0243ec14] {jit-log-opt-bridge
# bridge out of Guard 0x3be1460 with 70 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x3cf68c0>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull_class(p3, 16470384, descr=<Guard0x3cf6920>) [p0, p1]
+256: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+259: guard_false(i6, descr=<Guard0x3ced388>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+265: guard_class(p0, 16437896, descr=<Guard0x3ced3d0>) [p0, p1]
+277: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+281: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3cf6980>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+300: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+304: guard_class(p10, 16479200, descr=<Guard0x3ced418>) [p0, p1]
+318: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+329: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3ced460>) [p0, p1]
+338: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+342: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+346: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+350: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+354: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+358: guard_class(p18, 16505296, descr=<Guard0x3ced4a8>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+370: guard_not_invalidated(descr=<Guard0x3ced4f0>) [p0, p1]
+370: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+374: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3cf69e0>) [p0, p1]
+392: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3cf6a40>) [p0, p1]
+411: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+415: i24 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+419: i25 = int_eq(i23, i24)
+422: guard_false(i25, descr=<Guard0x3ced538>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+428: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x3cf6aa0>) [p0, p1]
+447: i28 = int_ge(i24, 0)
+451: guard_true(i28, descr=<Guard0x3ced580>) [p0, p1]
+457: i29 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+461: i30 = int_lt(i24, i29)
+464: guard_true(i30, descr=<Guard0x3ced5c8>) [p0, p1]
+470: p31 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+474: guard_class(p31, 16622984, descr=<Guard0x3ced610>) [p0, p1]
+486: p33 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+490: p34 = getarrayitem_gc_r(p33, i24, descr=<ArrayP 8>)
+495: guard_class(p34, 16470384, descr=<Guard0x3ced658>) [p0, p1]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+507: p36 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+511: guard_nonnull_class(p36, 16616448, descr=<Guard0x3cf6b00>) [p0, p1]
+529: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+533: guard_nonnull_class(p38, 16470384, descr=<Guard0x3cf6b60>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+551: p40 = new_with_vtable(descr=<SizeDescr 32>)
+602: p41 = new_with_vtable(descr=<SizeDescr 56>)
+613: p42 = new_with_vtable(descr=<SizeDescr 64>)
+631: setfield_gc(p42, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+649: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+653: setfield_gc(p42, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+657: setfield_gc(p42, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+661: setfield_gc(p42, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+665: setfield_gc(p42, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+669: setfield_gc(p42, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+673: setfield_gc(p40, p36, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+684: setfield_gc(p41, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+695: setfield_gc(p40, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+699: setfield_gc(p40, p38, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+703: setfield_gc(p41, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+707: setfield_gc(p41, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+725: setfield_gc(p41, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+729: setfield_gc(p41, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+733: setfield_gc(p41, p34, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+737: jump(p40, p41, descr=TargetToken(61027120))
+768: --end of the loop--
[3e4c22b0247601d] jit-log-opt-bridge}
[3e4c22b027144e6] {jit-backend
[3e4c22b027880ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8d
[3e4c22b02790461] jit-backend-dump}
[3e4c22b0279b49b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8e44 +0  27000000
[3e4c22b0279cc22] jit-backend-dump}
[3e4c22b027a0e3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d90b5 +0  27000000
[3e4c22b027a1d65] jit-backend-dump}
[3e4c22b027a51ef] {jit-backend-addr
bridge out of Guard 0x3a751d8 has address 0x7f4a5c1d8e40 to 0x7f4a5c1d90b0
       gc table: 0x7f4a5c1d8d90
    jump target: 0x7f4a5c1d8e40
         resops: 0x7f4a5c1d8e4e
       failures: 0x7f4a5c1d90b0
            end: 0x7f4a5c1d92eb
[3e4c22b027a75a9] jit-backend-addr}
[3e4c22b027aab9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8e5e +0  91020000
[3e4c22b027ab9e9] jit-backend-dump}
[3e4c22b027aed2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8e72 +0  99020000
[3e4c22b027afa5c] jit-backend-dump}
[3e4c22b027b2db7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8e91 +0  B2020000
[3e4c22b027b3acf] jit-backend-dump}
[3e4c22b027b6c87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8ea4 +0  BB020000
[3e4c22b027b7981] jit-backend-dump}
[3e4c22b027baa53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8eb8 +0  C3020000
[3e4c22b027bb722] jit-backend-dump}
[3e4c22b027be826] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8ec6 +0  D1020000
[3e4c22b027bf4d3] jit-backend-dump}
[3e4c22b027c2593] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8edd +0  D6020000
[3e4c22b027c3253] jit-backend-dump}
[3e4c22b027c6319] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8efd +0  D2020000
[3e4c22b027c6fd6] jit-backend-dump}
[3e4c22b027ca0a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8f13 +0  D8020000
[3e4c22b027cad52] jit-backend-dump}
[3e4c22b027cde56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8f26 +0  E1020000
[3e4c22b027ceb1c] jit-backend-dump}
[3e4c22b027d1be2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8f3e +0  E5020000
[3e4c22b027d288f] jit-backend-dump}
[3e4c22b027d596b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8f52 +0  ED020000
[3e4c22b027d6612] jit-backend-dump}
[3e4c22b027d96c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8f5c +0  FF020000
[3e4c22b027da382] jit-backend-dump}
[3e4c22b027dd458] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8f6a +0  0D030000
[3e4c22b027de118] jit-backend-dump}
[3e4c22b027e11ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8f7c +0  17030000
[3e4c22b027e1ebf] jit-backend-dump}
[3e4c22b027e4f8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8f9a +0  15030000
[3e4c22b027e5c4b] jit-backend-dump}
[3e4c22b027e8d58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8fb0 +0  1B030000
[3e4c22b027e99ff] jit-backend-dump}
[3e4c22b027ecdf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce612 +0  2AA80000
[3e4c22b027edb0e] jit-backend-dump}
[3e4c22b027f1b44] jit-backend}
[3e4c22b027f56ed] {jit-log-opt-bridge
# bridge out of Guard 0x3a751d8 with 78 ops
[p0, p1, p2, p3, p4]
+198: guard_class(p0, 16437896, descr=<Guard0x3cf6bc0>) [p0, p1, p2, p3, p4]
+210: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+221: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3ced928>) [p0, p1, p2, p3, p4]
+230: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+230: guard_not_invalidated(descr=<Guard0x3ced970>) [p0, p1, p2, p3, p4]
+230: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+234: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+238: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop25089 AppRand23 AppRand24) from (cons AppRand15 AppRand16)')
+242: guard_nonnull_class(p9, 16479200, descr=<Guard0x3cf6c20>) [p0, p1, p2, p3, p4]
+261: guard_nonnull_class(p10, 16470384, descr=<Guard0x3cf6c80>) [p0, p1, p2, p3, p4]
+280: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+291: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3ced9b8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 AppRand23 AppRand24)')
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+300: guard_class(p11, 16437896, descr=<Guard0x3ceda00>) [p0, p1, p2, p3, p4]
+314: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+318: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x3cf6ce0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+337: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+341: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+345: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+349: p22 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+353: p23 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+357: guard_class(p23, 16505296, descr=<Guard0x3ceda48>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+369: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+373: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x3cf6d40>) [p0, p1, p2, p3, p4]
+391: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3cf6da0>) [p0, p1, p2, p3, p4]
+410: i28 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+421: i29 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+425: i30 = int_eq(i28, i29)
+428: guard_false(i30, descr=<Guard0x3ceda90>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, '(vector-ref radicals nc25081)')
+434: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x3cf6e00>) [p0, p1, p2, p3, p4]
+454: i33 = int_ge(i29, 0)
+458: guard_true(i33, descr=<Guard0x3cedad8>) [p0, p1, p2, p3, p4]
+464: i34 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+469: i35 = int_lt(i29, i34)
+472: guard_true(i35, descr=<Guard0x3cedb20>) [p0, p1, p2, p3, p4]
+478: p36 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+483: guard_class(p36, 16622984, descr=<Guard0x3cedb68>) [p0, p1, p2, p3, p4]
+496: p38 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+501: p39 = getarrayitem_gc_r(p38, i29, descr=<ArrayP 8>)
+513: guard_class(p39, 16470384, descr=<Guard0x3cedbb0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+526: p41 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+530: guard_nonnull_class(p41, 16616448, descr=<Guard0x3cf6e60>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+548: p43 = new_with_vtable(descr=<SizeDescr 32>)
+595: p44 = new_with_vtable(descr=<SizeDescr 24>)
+606: setfield_gc(p44, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+624: p45 = new_with_vtable(descr=<SizeDescr 24>)
+635: setfield_gc(p45, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+639: setfield_gc(p45, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+643: setfield_gc(p44, p45, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+647: p46 = new_with_vtable(descr=<SizeDescr 56>)
+658: p47 = new_with_vtable(descr=<SizeDescr 64>)
+669: setfield_gc(p47, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+680: setfield_gc(p47, ConstPtr(ptr48), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+684: setfield_gc(p47, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+688: setfield_gc(p47, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+692: setfield_gc(p47, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+696: setfield_gc(p47, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+700: setfield_gc(p47, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+711: setfield_gc(p46, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+715: setfield_gc(p46, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+719: setfield_gc(p46, p47, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+723: setfield_gc(p46, p39, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+727: setfield_gc(p46, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+731: setfield_gc(p46, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+742: setfield_gc(p43, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+760: setfield_gc(p43, p41, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+764: setfield_gc(p43, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+768: jump(p43, p46, descr=TargetToken(61027440))
+800: --end of the loop--
[3e4c22b02837770] jit-log-opt-bridge}
[3e4c22b029afc26] {jit-backend
[3e4c22b02a2f853] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d
[3e4c22b02a384ac] jit-backend-dump}
[3e4c22b02a4327a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9584 +0  27000000
[3e4c22b02a448a4] jit-backend-dump}
[3e4c22b02a48a46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9865 +0  27000000
[3e4c22b02a4987b] jit-backend-dump}
[3e4c22b02a4cd05] {jit-backend-addr
bridge out of Guard 0x3a75bf8 has address 0x7f4a5c1d9580 to 0x7f4a5c1d9860
       gc table: 0x7f4a5c1d9490
    jump target: 0x7f4a5c1d9580
         resops: 0x7f4a5c1d958e
       failures: 0x7f4a5c1d9860
            end: 0x7f4a5c1d9b27
[3e4c22b02a4f075] jit-backend-addr}
[3e4c22b02a5257c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d959e +0  01030000
[3e4c22b02a53396] jit-backend-dump}
[3e4c22b02a56790] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d95ab +0  10030000
[3e4c22b02a574b1] jit-backend-dump}
[3e4c22b02a5a6c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d95bb +0  1C030000
[3e4c22b02a5b378] jit-backend-dump}
[3e4c22b02a5e656] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d95d3 +0  20030000
[3e4c22b02a5f306] jit-backend-dump}
[3e4c22b02a62538] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d95e0 +0  2F030000
[3e4c22b02a63220] jit-backend-dump}
[3e4c22b02a6633c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d95f4 +0  37030000
[3e4c22b02a6703f] jit-backend-dump}
[3e4c22b02a6a2a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d960b +0  58030000
[3e4c22b02a6af9c] jit-backend-dump}
[3e4c22b02a6e110] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d961c +0  63030000
[3e4c22b02a6edf8] jit-backend-dump}
[3e4c22b02a71e34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9630 +0  6B030000
[3e4c22b02a72b00] jit-backend-dump}
[3e4c22b02a75b55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d964f +0  68030000
[3e4c22b02a76849] jit-backend-dump}
[3e4c22b02a7988e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9662 +0  71030000
[3e4c22b02a7a57f] jit-backend-dump}
[3e4c22b02a7d5f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9676 +0  79030000
[3e4c22b02a7e302] jit-backend-dump}
[3e4c22b02a81348] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9682 +0  89030000
[3e4c22b02a82054] jit-backend-dump}
[3e4c22b02a8508d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9698 +0  8F030000
[3e4c22b02a85d75] jit-backend-dump}
[3e4c22b02a88db7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d96af +0  94030000
[3e4c22b02a89aa8] jit-backend-dump}
[3e4c22b02a8caf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d96c5 +0  9A030000
[3e4c22b02a8d7d2] jit-backend-dump}
[3e4c22b02a90830] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d96dc +0  9F030000
[3e4c22b02a9151e] jit-backend-dump}
[3e4c22b02a9454b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d96f2 +0  A5030000
[3e4c22b02a9523f] jit-backend-dump}
[3e4c22b02a98278] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9709 +0  AA030000
[3e4c22b02a98f6f] jit-backend-dump}
[3e4c22b02a9bfb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d971f +0  B0030000
[3e4c22b02a9cc9f] jit-backend-dump}
[3e4c22b02a9fcdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9736 +0  B5030000
[3e4c22b02aa09b1] jit-backend-dump}
[3e4c22b02aa3a65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d975e +0  A9030000
[3e4c22b02aa475f] jit-backend-dump}
[3e4c22b02aa7ac9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d0691 +0  EB8E0000
[3e4c22b02aa87de] jit-backend-dump}
[3e4c22b02aac7d7] jit-backend}
[3e4c22b02ab0504] {jit-log-opt-bridge
# bridge out of Guard 0x3a75bf8 with 78 ops
[p0, p1]
+262: guard_class(p1, 16500016, descr=<Guard0x3cf6ec0>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+278: guard_nonnull(p3, descr=<Guard0x3cedc40>) [p0, p1]
+294: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+297: guard_true(i5, descr=<Guard0x3cedc88>) [p0, p1]
debug_merge_point(0, 0, 'lst5115')
+303: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+307: guard_nonnull_class(p6, 16470384, descr=<Guard0x3cf6f20>) [p0, p1]
+327: guard_class(p0, 16437352, descr=<Guard0x3cedcd0>) [p0, p1]
+340: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+351: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3cedd18>) [p0, p1]
+360: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+360: guard_not_invalidated(descr=<Guard0x3cedd60>) [p0, p1]
+360: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+364: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3cf6f80>) [p0, p1]
+383: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (loop5 (cdr rads4) lst5115)')
+387: guard_class(p14, 16437896, descr=<Guard0x3cedda8>) [p0, p1]
+400: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+411: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3ceddf0>) [p0, p1]
+420: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+420: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+424: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+428: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (cons AppRand15 AppRand16)')
+432: guard_nonnull_class(p19, 16478448, descr=<Guard0x3cf6fe0>) [p0, p1]
+451: guard_nonnull_class(p20, 16470384, descr=<Guard0x3cf7040>) [p0, p1]
+470: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+481: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3cede38>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+490: guard_class(p21, 16437896, descr=<Guard0x3cede80>) [p0, p1]
+502: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+506: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3cf70a0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+524: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+528: guard_nonnull_class(p29, 16470384, descr=<Guard0x3cf7100>) [p0, p1]
+547: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+551: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x3cf7160>) [p0, p1]
+569: p33 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+573: guard_nonnull_class(p33, 16470384, descr=<Guard0x3cf71c0>) [p0, p1]
+592: p35 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+596: guard_nonnull_class(p35, ConstClass(W_Vector), descr=<Guard0x3cf7220>) [p0, p1]
+614: p37 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+618: guard_nonnull_class(p37, 16470384, descr=<Guard0x3cf7280>) [p0, p1]
+637: p39 = getfield_gc_r(p37, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+641: guard_nonnull_class(p39, ConstClass(W_Vector), descr=<Guard0x3cf72e0>) [p0, p1]
+659: p41 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+663: guard_nonnull_class(p41, ConstClass(W_Vector), descr=<Guard0x3cf7340>) [p0, p1]
+682: p43 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+693: p44 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+704: guard_nonnull_class(p44, 16470384, descr=<Guard0x3cf73a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+722: p46 = new_with_vtable(descr=<SizeDescr 32>)
+769: p47 = new_with_vtable(descr=<SizeDescr 24>)
+780: setfield_gc(p47, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+784: setfield_gc(p47, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+788: p48 = new_with_vtable(descr=<SizeDescr 48>)
+800: p49 = new_with_vtable(descr=<SizeDescr 32>)
+811: setfield_gc(p49, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+819: p52 = new_array_clear(5, descr=<ArrayP 8>)
+852: setarrayitem_gc(p52, 0, ConstPtr(ptr54), descr=<ArrayP 8>)
+856: setarrayitem_gc(p52, 1, p31, descr=<ArrayP 8>)
+860: setarrayitem_gc(p52, 2, p35, descr=<ArrayP 8>)
+864: setarrayitem_gc(p52, 3, p39, descr=<ArrayP 8>)
+868: setarrayitem_gc(p52, 4, p41, descr=<ArrayP 8>)
+872: setfield_gc(p49, p52, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+883: setfield_gc(p49, ConstPtr(ptr59), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+887: setfield_gc(p46, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+898: setfield_gc(p46, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+902: setfield_gc(p48, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+906: setfield_gc(p48, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+910: setfield_gc(p48, p49, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+914: setfield_gc(p48, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+918: setfield_gc(p48, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+929: setfield_gc(p46, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+940: jump(p46, p48, descr=TargetToken(59469840))
+976: --end of the loop--
[3e4c22b02aee25e] jit-log-opt-bridge}
[3e4c22b02ced2b0] {jit-backend
[3e4c22b02d5c0b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9cb
[3e4c22b02d64dc3] jit-backend-dump}
[3e4c22b02d6f5bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9d94 +0  28000000
[3e4c22b02d709bf] jit-backend-dump}
[3e4c22b02d7469a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da035 +0  28000000
[3e4c22b02d754b3] jit-backend-dump}
[3e4c22b02d787cb] {jit-backend-addr
bridge out of Guard 0x3cf6320 has address 0x7f4a5c1d9d90 to 0x7f4a5c1da030
       gc table: 0x7f4a5c1d9cb0
    jump target: 0x7f4a5c1d9d90
         resops: 0x7f4a5c1d9d9e
       failures: 0x7f4a5c1da030
            end: 0x7f4a5c1da2db
[3e4c22b02d7aa65] jit-backend-addr}
[3e4c22b02d7dfda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9dae +0  C1020000
[3e4c22b02d7ed79] jit-backend-dump}
[3e4c22b02d82133] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9dbb +0  D0020000
[3e4c22b02d82e61] jit-backend-dump}
[3e4c22b02d860f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9dcb +0  DC020000
[3e4c22b02d86e32] jit-backend-dump}
[3e4c22b02d89f88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9de2 +0  E1020000
[3e4c22b02d8ac8b] jit-backend-dump}
[3e4c22b02d8dd3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9df6 +0  E9020000
[3e4c22b02d8ea1d] jit-backend-dump}
[3e4c22b02d91b42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9e0a +0  F1020000
[3e4c22b02d9281d] jit-backend-dump}
[3e4c22b02d95a28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9e2a +0  09030000
[3e4c22b02d96737] jit-backend-dump}
[3e4c22b02d998ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9e3e +0  11030000
[3e4c22b02d9a59f] jit-backend-dump}
[3e4c22b02d9d653] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9e53 +0  18030000
[3e4c22b02d9e33a] jit-backend-dump}
[3e4c22b02da146f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9e60 +0  27030000
[3e4c22b02da2178] jit-backend-dump}
[3e4c22b02da51e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9e77 +0  2C030000
[3e4c22b02da5ec7] jit-backend-dump}
[3e4c22b02da8f6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9e9c +0  23030000
[3e4c22b02da9c53] jit-backend-dump}
[3e4c22b02daccb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9eb3 +0  28030000
[3e4c22b02dad9b1] jit-backend-dump}
[3e4c22b02db0a12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9ec5 +0  32030000
[3e4c22b02db1700] jit-backend-dump}
[3e4c22b02db474e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9edd +0  36030000
[3e4c22b02db543f] jit-backend-dump}
[3e4c22b02dbbdab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9ef0 +0  3F030000
[3e4c22b02dbcbef] jit-backend-dump}
[3e4c22b02dc0143] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9efa +0  51030000
[3e4c22b02dc0e8c] jit-backend-dump}
[3e4c22b02dc414e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9f07 +0  60030000
[3e4c22b02dc4e7c] jit-backend-dump}
[3e4c22b02dc8166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9f19 +0  6A030000
[3e4c22b02dc8e72] jit-backend-dump}
[3e4c22b02dcc0b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9f36 +0  69030000
[3e4c22b02dccdad] jit-backend-dump}
[3e4c22b02dcff03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9f4c +0  6F030000
[3e4c22b02dd0c09] jit-backend-dump}
[3e4c22b02dd401f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7c0d +0  7F210000
[3e4c22b02dd4d90] jit-backend-dump}
[3e4c22b02dd8c8b] jit-backend}
[3e4c22b02ddc824] {jit-log-opt-bridge
# bridge out of Guard 0x3cf6320 with 80 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x3cf7400>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x3cedec8>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x3cedf10>) [p0, p1]
debug_merge_point(0, 0, 'lst5093')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16470384, descr=<Guard0x3cf7460>) [p0, p1]
+310: guard_class(p0, 16437896, descr=<Guard0x3cedf58>) [p0, p1]
+330: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+341: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3cedfa0>) [p0, p1]
+350: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+350: guard_not_invalidated(descr=<Guard0x3d72020>) [p0, p1]
+350: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+354: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+358: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)')
+362: guard_nonnull_class(p12, 16479200, descr=<Guard0x3cf74c0>) [p0, p1]
+382: guard_nonnull_class(p13, 16470384, descr=<Guard0x3cf7520>) [p0, p1]
+402: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+414: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3d72068>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+423: guard_class(p14, 16437896, descr=<Guard0x3d720b0>) [p0, p1]
+436: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+440: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3cf7580>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+459: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+464: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+469: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+474: p25 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+479: p26 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+484: guard_class(p26, 16505296, descr=<Guard0x3d720f8>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+496: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+501: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3cf75e0>) [p0, p1]
+519: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x3cf7640>) [p0, p1]
+537: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+548: i32 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+552: i33 = int_eq(i31, i32)
+555: guard_false(i33, descr=<Guard0x3d72140>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+561: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x3cf76a0>) [p0, p1]
+580: i36 = int_ge(i32, 0)
+584: guard_true(i36, descr=<Guard0x3d72188>) [p0, p1]
+590: i37 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+594: i38 = int_lt(i32, i37)
+597: guard_true(i38, descr=<Guard0x3d721d0>) [p0, p1]
+603: p39 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+607: guard_class(p39, 16622984, descr=<Guard0x3d72218>) [p0, p1]
+621: p41 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+625: p42 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+637: guard_class(p42, 16470384, descr=<Guard0x3d72260>) [p0, p1]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+650: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+654: guard_nonnull_class(p44, 16616448, descr=<Guard0x3cf7700>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+672: p46 = new_with_vtable(descr=<SizeDescr 32>)
+719: p47 = new_with_vtable(descr=<SizeDescr 56>)
+730: p48 = new_with_vtable(descr=<SizeDescr 64>)
+742: setfield_gc(p48, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+766: setfield_gc(p48, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+771: setfield_gc(p48, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+776: setfield_gc(p48, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+781: setfield_gc(p48, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+786: setfield_gc(p48, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+791: setfield_gc(p46, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+802: setfield_gc(p46, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+813: setfield_gc(p47, ConstPtr(ptr50), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+817: setfield_gc(p47, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+821: setfield_gc(p47, p48, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+825: setfield_gc(p47, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+829: setfield_gc(p47, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+833: setfield_gc(p47, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+844: setfield_gc(p46, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+855: jump(p46, p47, descr=TargetToken(61027120))
+896: --end of the loop--
[3e4c22b02e1cd7c] jit-log-opt-bridge}
[3e4c22b034601d1] {jit-backend
[3e4c22b034c926d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da
[3e4c22b034d1b2a] jit-backend-dump}
[3e4c22b034dce92] {jit-backend-addr
Loop 51 ((let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)) has address 0x7f4a5c1da55d to 0x7f4a5c1da750 (bootstrap 0x7f4a5c1da4d0)
       gc table: 0x7f4a5c1da430
       function: 0x7f4a5c1da4d0
         resops: 0x7f4a5c1da55d
       failures: 0x7f4a5c1da750
            end: 0x7f4a5c1da977
[3e4c22b034dff37] jit-backend-addr}
[3e4c22b034e4869] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da587 +0  F4010000
[3e4c22b034e5c82] jit-backend-dump}
[3e4c22b034e93db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da59d +0  FA010000
[3e4c22b034ea2b5] jit-backend-dump}
[3e4c22b034ed839] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da5b0 +0  1F020000
[3e4c22b034ee5a4] jit-backend-dump}
[3e4c22b034f1aa8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da5c4 +0  27020000
[3e4c22b034f2807] jit-backend-dump}
[3e4c22b034f5b65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da5d8 +0  2F020000
[3e4c22b034f6874] jit-backend-dump}
[3e4c22b034f9b80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da5ef +0  34020000
[3e4c22b034fa8cc] jit-backend-dump}
[3e4c22b034fdaca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da5fc +0  43020000
[3e4c22b034fe7b5] jit-backend-dump}
[3e4c22b035019d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da608 +0  53020000
[3e4c22b035026bc] jit-backend-dump}
[3e4c22b035058dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da61f +0  58020000
[3e4c22b03506583] jit-backend-dump}
[3e4c22b03509763] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da62f +0  64020000
[3e4c22b0350a42c] jit-backend-dump}
[3e4c22b0350d627] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da63c +0  73020000
[3e4c22b0350e2d1] jit-backend-dump}
[3e4c22b035114a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da653 +0  78020000
[3e4c22b03512164] jit-backend-dump}
[3e4c22b0351543e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da68d +0  76020000
[3e4c22b035160d3] jit-backend-dump}
[3e4c22b035192c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da699 +0  86020000
[3e4c22b03519f97] jit-backend-dump}
[3e4c22b0351d296] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da6a5 +0  96020000
[3e4c22b0351df5f] jit-backend-dump}
[3e4c22b0352114b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da6b2 +0  A5020000
[3e4c22b03521e08] jit-backend-dump}
[3e4c22b03529a4f] jit-backend}
[3e4c22b0352dc00] {jit-log-opt-loop
# Loop 51 ((let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)) : loop with 72 ops
[p0, p1]
+309: label(p0, p1, descr=TargetToken(61029280))
+328: guard_class(p1, 16435920, descr=<Guard0x3cf7760>) [p0, p1]
+347: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+351: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3cf77c0>) [p0, p1]
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+369: guard_not_invalidated(descr=<Guard0x3d72338>) [p0, p1]
+369: guard_class(p0, 16503536, descr=<Guard0x3d72380>) [p0, p1]
+388: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+392: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+396: guard_class(p7, 16478448, descr=<Guard0x3d723c8>) [p0, p1]
+408: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+419: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3d72410>) [p0, p1]
+428: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+432: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3cf7820>) [p0, p1]
+451: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+455: i14 = int_lt(i6, i13)
+458: guard_false(i14, descr=<Guard0x3d72458>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+464: i15 = int_add_ovf(i13, i6)
+470: guard_no_overflow(descr=<Guard0x3d724a0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+476: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+480: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x3cf7880>) [p0, p1]
+499: i18 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+503: i19 = int_sub_ovf(i18, i15)
+509: guard_no_overflow(descr=<Guard0x3d724e8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+515: i21 = int_sub_ovf(i6, 1)
+522: guard_no_overflow(descr=<Guard0x3d72530>) [p0, p1]
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
+528: p22 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+532: guard_nonnull_class(p22, 16470384, descr=<Guard0x3cf78e0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+551: i24 = same_as_i(i13)
+554: label(p7, i21, i13, i6, i19, p22, p1, p3, p11, i24, p16, i18, descr=TargetToken(61029360))
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+600: guard_not_invalidated(descr=<Guard0x3cf7940>) [i19, i6, i13, p22, i21, p7, p1, p3]
+600: i25 = int_lt(i21, i24)
+603: guard_false(i25, descr=<Guard0x3d72578>) [i19, i6, i13, p22, i21, p7, p1, p3]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+609: i26 = int_add_ovf(i24, i21)
+615: guard_no_overflow(descr=<Guard0x3d725c0>) [i19, i6, i13, p22, i21, p7, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+621: i27 = int_sub_ovf(i18, i26)
+627: guard_no_overflow(descr=<Guard0x3d72608>) [i19, i6, i13, p22, i21, p7, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+633: i29 = int_sub_ovf(i21, 1)
+640: guard_no_overflow(descr=<Guard0x3d72650>) [i19, i6, i13, p22, i21, p7, p1, p3]
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+646: p30 = new_with_vtable(descr=<SizeDescr 24>)
+690: p31 = new_with_vtable(descr=<SizeDescr 32>)
+701: setfield_gc(p31, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+709: p34 = new_array(3, descr=<ArrayS 8>)
+728: setarrayitem_gc(p34, 0, i13, descr=<ArrayS 8>)
+732: setarrayitem_gc(p34, 1, i6, descr=<ArrayS 8>)
+736: setarrayitem_gc(p34, 2, i19, descr=<ArrayS 8>)
+740: setfield_gc(p31, p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+751: setfield_gc(p31, ConstPtr(ptr38), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+755: setfield_gc(p30, p31, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+759: setfield_gc(p30, p22, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+763: jump(p7, i29, i24, i21, i27, p30, p1, p3, p11, i24, p16, i18, descr=TargetToken(61029360))
+800: --end of the loop--
[3e4c22b0356a260] jit-log-opt-loop}
[3e4c22b0389a5b3] {jit-backend
[3e4c22b039308c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dab
[3e4c22b0393a244] jit-backend-dump}
[3e4c22b039451f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dac34 +0  25000000
[3e4c22b0394694b] jit-backend-dump}
[3e4c22b0394aef7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1daf35 +0  25000000
[3e4c22b0394be88] jit-backend-dump}
[3e4c22b0394f46c] {jit-backend-addr
bridge out of Guard 0x3917b20 has address 0x7f4a5c1dac30 to 0x7f4a5c1daf30
       gc table: 0x7f4a5c1dab30
    jump target: 0x7f4a5c1dac30
         resops: 0x7f4a5c1dac3e
       failures: 0x7f4a5c1daf30
            end: 0x7f4a5c1db213
[3e4c22b03951a06] jit-backend-addr}
[3e4c22b0395508e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dac4e +0  21030000
[3e4c22b03955f28] jit-backend-dump}
[3e4c22b03959298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dac62 +0  29030000
[3e4c22b03959fb1] jit-backend-dump}
[3e4c22b0395d302] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dac81 +0  42030000
[3e4c22b0395e021] jit-backend-dump}
[3e4c22b039612dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dac94 +0  4B030000
[3e4c22b03962017] jit-backend-dump}
[3e4c22b039652d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1daca8 +0  53030000
[3e4c22b03965fd0] jit-backend-dump}
[3e4c22b039691b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dacb6 +0  61030000
[3e4c22b03969eb2] jit-backend-dump}
[3e4c22b0396d106] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1daccd +0  66030000
[3e4c22b0396de00] jit-backend-dump}
[3e4c22b03970fbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dace9 +0  66030000
[3e4c22b03971cab] jit-backend-dump}
[3e4c22b03974ee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dacff +0  6C030000
[3e4c22b03975bff] jit-backend-dump}
[3e4c22b03978dc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dad12 +0  75030000
[3e4c22b03979ac3] jit-backend-dump}
[3e4c22b0397cc7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dad23 +0  80030000
[3e4c22b0397d987] jit-backend-dump}
[3e4c22b03980b5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dad3a +0  85030000
[3e4c22b03981857] jit-backend-dump}
[3e4c22b03984a49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dad4a +0  91030000
[3e4c22b03985771] jit-backend-dump}
[3e4c22b03988904] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dad5d +0  9A030000
[3e4c22b03989601] jit-backend-dump}
[3e4c22b0398c7b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dad6a +0  A9030000
[3e4c22b0398d4b3] jit-backend-dump}
[3e4c22b0399068f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dad7e +0  B1030000
[3e4c22b0399138c] jit-backend-dump}
[3e4c22b0399452e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dad88 +0  C3030000
[3e4c22b0399522b] jit-backend-dump}
[3e4c22b039983e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dad96 +0  D1030000
[3e4c22b039990e3] jit-backend-dump}
[3e4c22b0399c26d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dada7 +0  DC030000
[3e4c22b0399cf67] jit-backend-dump}
[3e4c22b039a0140] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dadbf +0  E0030000
[3e4c22b039a0e34] jit-backend-dump}
[3e4c22b039a4017] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dadd6 +0  E5030000
[3e4c22b039a4d0a] jit-backend-dump}
[3e4c22b039a7ea7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1daded +0  EA030000
[3e4c22b039a8ba7] jit-backend-dump}
[3e4c22b039abd4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dae05 +0  EE030000
[3e4c22b039aca52] jit-backend-dump}
[3e4c22b039afefa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbe00 +0  2CEE0000
[3e4c22b039b0c16] jit-backend-dump}
[3e4c22b039b4c89] jit-backend}
[3e4c22b039b8a3a] {jit-log-opt-bridge
# bridge out of Guard 0x3917b20 with 113 ops
[p0, p1, p2, p3, p4]
+278: guard_class(p0, 16437896, descr=<Guard0x3cf79a0>) [p0, p1, p2, p3, p4]
+290: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+301: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3d726e0>) [p0, p1, p2, p3, p4]
+310: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+310: guard_not_invalidated(descr=<Guard0x3d72728>) [p0, p1, p2, p3, p4]
+310: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+314: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+318: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+322: guard_nonnull_class(p9, 16478824, descr=<Guard0x3cf7a00>) [p0, p1, p2, p3, p4]
+341: guard_nonnull_class(p10, 16470384, descr=<Guard0x3cf7a60>) [p0, p1, p2, p3, p4]
+360: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+371: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3d72770>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+380: guard_class(p11, 16435920, descr=<Guard0x3d727b8>) [p0, p1, p2, p3, p4]
+394: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+398: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x3cf7ac0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+417: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+421: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+425: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+429: p22 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+433: guard_class(p22, 16505296, descr=<Guard0x3d72800>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc1 nc2)')
+445: p24 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+449: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x3cf7b20>) [p0, p1, p2, p3, p4]
+467: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3cf7b80>) [p0, p1, p2, p3, p4]
+486: i27 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+490: i28 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+494: i29 = int_eq(i27, i28)
+497: guard_true(i29, descr=<Guard0x3d72848>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+503: p30 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+507: guard_nonnull_class(p30, 16616448, descr=<Guard0x3cf7be0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+533: i33 = instance_ptr_eq(p30, ConstPtr(ptr32))
+536: guard_true(i33, descr=<Guard0x3d72890>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+542: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3cf7c40>) [p0, p1, p2, p3, p4]
+561: i35 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+565: i36 = int_eq(i28, i35)
+568: guard_false(i36, descr=<Guard0x3d728d8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+574: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x3cf7ca0>) [p0, p1, p2, p3, p4]
+594: i39 = int_ge(i35, 0)
+598: guard_true(i39, descr=<Guard0x3d72920>) [p0, p1, p2, p3, p4]
+604: i40 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+609: i41 = int_lt(i35, i40)
+612: guard_true(i41, descr=<Guard0x3d72968>) [p0, p1, p2, p3, p4]
+618: p42 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+623: guard_class(p42, 16622984, descr=<Guard0x3d729b0>) [p0, p1, p2, p3, p4]
+635: p44 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+640: p45 = getarrayitem_gc_r(p44, i35, descr=<ArrayP 8>)
+645: guard_class(p45, 16470384, descr=<Guard0x3d729f8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+659: p47 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+663: guard_nonnull_class(p47, ConstClass(W_Symbol), descr=<Guard0x3cf7d00>) [p0, p1, p2, p3, p4]
+682: p49 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+687: guard_nonnull_class(p49, ConstClass(W_Vector), descr=<Guard0x3cf7d60>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+705: p51 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+710: guard_nonnull_class(p51, 16470384, descr=<Guard0x3cf7dc0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+729: p53 = new_with_vtable(descr=<SizeDescr 32>)
+776: p54 = new_with_vtable(descr=<SizeDescr 40>)
+787: setfield_gc(p54, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+798: setfield_gc(p54, ConstPtr(ptr55), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+802: setfield_gc(p54, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+806: setfield_gc(p54, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+810: p56 = new_with_vtable(descr=<SizeDescr 24>)
+821: setfield_gc(p56, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+832: p57 = new_with_vtable(descr=<SizeDescr 24>)
+843: setfield_gc(p57, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+847: setfield_gc(p57, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+851: setfield_gc(p56, p57, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+855: p58 = new_with_vtable(descr=<SizeDescr 48>)
+867: p59 = new_with_vtable(descr=<SizeDescr 32>)
+879: setfield_gc(p59, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+887: p62 = new_array_clear(4, descr=<ArrayP 8>)
+913: setarrayitem_gc(p62, 0, ConstPtr(ptr64), descr=<ArrayP 8>)
+917: setarrayitem_gc(p62, 1, p47, descr=<ArrayP 8>)
+921: setarrayitem_gc(p62, 2, p47, descr=<ArrayP 8>)
+925: setarrayitem_gc(p62, 3, p49, descr=<ArrayP 8>)
+929: setfield_gc(p59, p62, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+940: setfield_gc(p59, ConstPtr(ptr68), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+951: setfield_gc(p58, ConstPtr(ptr69), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+956: setfield_gc(p58, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+961: setfield_gc(p58, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+966: setfield_gc(p58, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+971: setfield_gc(p53, p54, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+975: setfield_gc(p53, p51, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+979: setfield_gc(p53, p56, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+983: setfield_gc(p58, p59, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+988: jump(p53, p58, descr=TargetToken(59469520))
+1024: --end of the loop--
[3e4c22b03a2859b] jit-log-opt-bridge}
[3e4c22b03c33a19] {jit-backend
[3e4c22b03ce0605] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db
[3e4c22b03cec627] jit-backend-dump}
[3e4c22b03cf7b94] {jit-backend-addr
Loop 53 ((if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)) has address 0x7f4a5c1db5ed to 0x7f4a5c1db980 (bootstrap 0x7f4a5c1db560)
       gc table: 0x7f4a5c1db440
       function: 0x7f4a5c1db560
         resops: 0x7f4a5c1db5ed
       failures: 0x7f4a5c1db980
            end: 0x7f4a5c1dbd2f
[3e4c22b03cfb1cd] jit-backend-addr}
[3e4c22b03cffa3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db617 +0  94030000
[3e4c22b03d00def] jit-backend-dump}
[3e4c22b03d043a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db62d +0  9A030000
[3e4c22b03d05374] jit-backend-dump}
[3e4c22b03d08718] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db63d +0  A6030000
[3e4c22b03d09513] jit-backend-dump}
[3e4c22b03d0c861] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db650 +0  AF030000
[3e4c22b03d0d5b7] jit-backend-dump}
[3e4c22b03d108ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db666 +0  B5030000
[3e4c22b03d115c5] jit-backend-dump}
[3e4c22b03d14758] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db67c +0  BB030000
[3e4c22b03d15440] jit-backend-dump}
[3e4c22b03d18779] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db68a +0  E5030000
[3e4c22b03d1940b] jit-backend-dump}
[3e4c22b03d1c6ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db69b +0  F0030000
[3e4c22b03d1d3a5] jit-backend-dump}
[3e4c22b03d2050d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db6ad +0  FA030000
[3e4c22b03d211a5] jit-backend-dump}
[3e4c22b03d242ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db6bb +0  08040000
[3e4c22b03d24f78] jit-backend-dump}
[3e4c22b03d28151] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db6d0 +0  0F040000
[3e4c22b03d28dda] jit-backend-dump}
[3e4c22b03d2bf23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db6e4 +0  17040000
[3e4c22b03d2cbbe] jit-backend-dump}
[3e4c22b03d2fd17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db6f9 +0  1E040000
[3e4c22b03d309a9] jit-backend-dump}
[3e4c22b03d33ae4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db70d +0  26040000
[3e4c22b03d3477c] jit-backend-dump}
[3e4c22b03d378f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db717 +0  38040000
[3e4c22b03d385b0] jit-backend-dump}
[3e4c22b03d3b727] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db725 +0  46040000
[3e4c22b03d3c3ea] jit-backend-dump}
[3e4c22b03d3f568] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db738 +0  4F040000
[3e4c22b03d401fa] jit-backend-dump}
[3e4c22b03d43368] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db74f +0  54040000
[3e4c22b03d44012] jit-backend-dump}
[3e4c22b03d47184] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db767 +0  58040000
[3e4c22b03d47e06] jit-backend-dump}
[3e4c22b03d4af78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db77d +0  5E040000
[3e4c22b03d4bc04] jit-backend-dump}
[3e4c22b03d4eda0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db7bb +0  3C040000
[3e4c22b03d4fa2f] jit-backend-dump}
[3e4c22b03d52c5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db7c9 +0  66040000
[3e4c22b03d5396a] jit-backend-dump}
[3e4c22b03d56b87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db7da +0  71040000
[3e4c22b03d5780f] jit-backend-dump}
[3e4c22b03d5a96e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db7f3 +0  74040000
[3e4c22b03d5b5fa] jit-backend-dump}
[3e4c22b03d5e80b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db808 +0  7B040000
[3e4c22b03d5f496] jit-backend-dump}
[3e4c22b03d62611] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db816 +0  89040000
[3e4c22b03d632e3] jit-backend-dump}
[3e4c22b03d6645b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db835 +0  86040000
[3e4c22b03d670f0] jit-backend-dump}
[3e4c22b03d6a252] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db845 +0  92040000
[3e4c22b03d6aeea] jit-backend-dump}
[3e4c22b03d6e067] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db86f +0  84040000
[3e4c22b03d6ecf0] jit-backend-dump}
[3e4c22b03d71e77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db885 +0  8A040000
[3e4c22b03d72b12] jit-backend-dump}
[3e4c22b03d769c7] jit-backend}
[3e4c22b03d7a79f] {jit-log-opt-loop
# Loop 53 ((if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)) : loop with 123 ops
[p0, p1]
+437: label(p0, p1, descr=TargetToken(61029440))
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)')
+456: guard_class(p0, 16500016, descr=<Guard0x3cf7e20>) [p1, p0]
+475: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+479: guard_nonnull_class(p3, 16470384, descr=<Guard0x3cf7e80>) [p1, p0]
+504: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+507: guard_false(i6, descr=<Guard0x3d72a40>) [p1, p0]
debug_merge_point(0, 0, '(let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))')
+513: guard_class(p1, 16437896, descr=<Guard0x3d72a88>) [p1, p0]
+532: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+536: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3cf7ee0>) [p1, p0]
debug_merge_point(0, 0, '(car ps)')
+554: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+558: guard_nonnull_class(p10, ConstClass(W_Vector), descr=<Guard0x3cf7f40>) [p1, p0]
+576: guard_not_invalidated(descr=<Guard0x3d72ad0>) [p1, p0]
debug_merge_point(0, 0, '(let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8)))')
debug_merge_point(0, 0, '(vector-ref p 0)')
+576: i12 = getfield_gc_i(p10, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+580: i14 = int_lt(0, i12)
+584: guard_true(i14, descr=<Guard0x3d72b18>) [p1, p0]
+590: p15 = getfield_gc_r(p10, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+594: guard_class(p15, 16623792, descr=<Guard0x3d72b60>) [p1, p0]
+607: p17 = getfield_gc_r(p10, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+611: i19 = getarrayitem_gc_i(p17, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 1)')
+615: i21 = int_lt(1, i12)
+619: guard_true(i21, descr=<Guard0x3d72ba8>) [p1, p0]
+625: i23 = getarrayitem_gc_i(p17, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 2)')
+629: i25 = int_lt(2, i12)
+633: guard_true(i25, descr=<Guard0x3d72bf0>) [p1, p0]
+639: i27 = getarrayitem_gc_i(p17, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))')
debug_merge_point(0, 0, '(lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))')
+643: p28 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+647: guard_class(p28, 16477696, descr=<Guard0x3d72c38>) [p1, p0]
+660: p30 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+671: guard_value(p30, ConstPtr(ptr31), descr=<Guard0x3d72c80>) [p1, p0]
+680: p32 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+684: p33 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+688: guard_class(p33, 16505296, descr=<Guard0x3d72cc8>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref radicals nc1)')
+701: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x3cf7fa0>) [p1, p0]
+721: i37 = int_ge(i19, 0)
+725: guard_true(i37, descr=<Guard0x3d72d10>) [p1, p0]
+731: i38 = getfield_gc_i(p32, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+736: i39 = int_lt(i19, i38)
+739: guard_true(i39, descr=<Guard0x3d72d58>) [p1, p0]
+745: p40 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+750: guard_class(p40, 16622984, descr=<Guard0x3d72da0>) [p1, p0]
+764: p42 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+769: p43 = getarrayitem_gc_r(p42, i19, descr=<ArrayP 8>)
+774: guard_class(p43, 16470384, descr=<Guard0x3d72de8>) [p1, p0]
debug_merge_point(0, 0, '(loop1 (cdr ps) lst)')
+787: p45 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+791: guard_nonnull_class(p45, 16470384, descr=<Guard0x3d7e020>) [p1, p0]
+811: p47 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+815: guard_nonnull_class(p47, 16616448, descr=<Guard0x3d7e080>) [p1, p0]
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)')
+833: p49 = same_as_r(p32)
+836: p50 = same_as_r(p33)
+839: label(p28, p45, p47, p8, p33, p1, p32, i23, i19, i27, p43, p49, p50, descr=TargetToken(61029520))
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)')
debug_merge_point(0, 0, '(let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))')
debug_merge_point(0, 0, '(car ps)')
+872: p51 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+876: guard_nonnull_class(p51, ConstClass(W_Vector), descr=<Guard0x3d7e0e0>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
+895: guard_not_invalidated(descr=<Guard0x3d72e30>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
debug_merge_point(0, 0, '(let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8)))')
debug_merge_point(0, 0, '(vector-ref p 0)')
+895: i53 = getfield_gc_i(p51, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+899: i55 = int_lt(0, i53)
+903: guard_true(i55, descr=<Guard0x3d72e78>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
+909: p56 = getfield_gc_r(p51, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+913: guard_class(p56, 16623792, descr=<Guard0x3d72ec0>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
+926: p58 = getfield_gc_r(p51, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+930: i60 = getarrayitem_gc_i(p58, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 1)')
+941: i62 = int_lt(1, i53)
+945: guard_true(i62, descr=<Guard0x3d72f08>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
+951: i64 = getarrayitem_gc_i(p58, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 2)')
+962: i66 = int_lt(2, i53)
+966: guard_true(i66, descr=<Guard0x3d72f50>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
+972: i68 = getarrayitem_gc_i(p58, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))')
debug_merge_point(0, 0, '(lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))')
debug_merge_point(0, 0, '(vector-ref radicals nc1)')
+976: i70 = int_ge(i60, 0)
+980: guard_true(i70, descr=<Guard0x3d72f98>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
+986: i71 = getfield_gc_i(p49, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1004: i72 = int_lt(i60, i71)
+1011: guard_true(i72, descr=<Guard0x3d72fe0>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
+1017: p73 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1021: guard_class(p73, 16622984, descr=<Guard0x3d73028>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
+1033: p75 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1037: p76 = getarrayitem_gc_r(p75, i60, descr=<ArrayP 8>)
+1063: guard_class(p76, 16470384, descr=<Guard0x3d73070>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
debug_merge_point(0, 0, '(loop1 (cdr ps) lst)')
+1075: p78 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1079: guard_nonnull_class(p78, 16470384, descr=<Guard0x3d7e140>) [p51, i27, i19, i23, p32, p43, p1, p33, p47, p45, p28, p8]
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)')
+1097: p80 = new_with_vtable(descr=<SizeDescr 56>)
+1147: p81 = new_with_vtable(descr=<SizeDescr 56>)
+1158: setfield_gc(p81, p33, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1169: setfield_gc(p81, ConstPtr(ptr82), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1173: setfield_gc(p81, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1177: p83 = new_with_vtable(descr=<SizeDescr 16>)
+1189: setfield_gc(p83, i23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1194: setfield_gc(p81, p83, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1198: p84 = new_with_vtable(descr=<SizeDescr 16>)
+1210: setfield_gc(p84, i19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1214: setfield_gc(p81, p84, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1218: p85 = new_with_vtable(descr=<SizeDescr 16>)
+1229: setfield_gc(p85, i27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1233: setfield_gc(p81, p85, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1237: setfield_gc(p80, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1248: setfield_gc(p80, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1252: setfield_gc(p80, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1263: setfield_gc(p80, ConstPtr(ptr86), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1267: setfield_gc(p80, p81, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1271: setfield_gc(p80, p43, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1275: jump(p28, p78, p47, p8, p50, p80, p49, i64, i60, i68, p76, p49, p50, descr=TargetToken(61029520))
+1344: --end of the loop--
[3e4c22b03de71cc] jit-log-opt-loop}
[3e4c22b040a97c2] {jit-backend
[3e4c22b04229d73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dbef
[3e4c22b04233551] jit-backend-dump}
[3e4c22b0423e683] {jit-backend-addr
Loop 54 ((if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)) has address 0x7f4a5c1dc07d to 0x7f4a5c1dc340 (bootstrap 0x7f4a5c1dbff0)
       gc table: 0x7f4a5c1dbef0
       function: 0x7f4a5c1dbff0
         resops: 0x7f4a5c1dc07d
       failures: 0x7f4a5c1dc340
            end: 0x7f4a5c1dc62b
[3e4c22b04241a0f] jit-backend-addr}
[3e4c22b0424662c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc094 +0  D7020000
[3e4c22b042479c1] jit-backend-dump}
[3e4c22b0424b2b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc0aa +0  DD020000
[3e4c22b0424c1a3] jit-backend-dump}
[3e4c22b0424f6cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc0ba +0  E9020000
[3e4c22b042503e4] jit-backend-dump}
[3e4c22b042536e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc0cd +0  F2020000
[3e4c22b042543f2] jit-backend-dump}
[3e4c22b04257690] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc0e3 +0  F8020000
[3e4c22b04258390] jit-backend-dump}
[3e4c22b0425b5bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc0f3 +0  04030000
[3e4c22b0425c2a9] jit-backend-dump}
[3e4c22b0425f464] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc107 +0  0C030000
[3e4c22b04260158] jit-backend-dump}
[3e4c22b04263328] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc125 +0  0A030000
[3e4c22b0426402b] jit-backend-dump}
[3e4c22b042674ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc13d +0  2A030000
[3e4c22b04268226] jit-backend-dump}
[3e4c22b0426b525] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc150 +0  33030000
[3e4c22b0426c213] jit-backend-dump}
[3e4c22b0426f463] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc161 +0  3E030000
[3e4c22b0427018b] jit-backend-dump}
[3e4c22b04273389] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc177 +0  44030000
[3e4c22b0427408c] jit-backend-dump}
[3e4c22b04277287] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc18e +0  49030000
[3e4c22b04277fd7] jit-backend-dump}
[3e4c22b0427b1b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc197 +0  5C030000
[3e4c22b0427bec3] jit-backend-dump}
[3e4c22b0427f0a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc1aa +0  65030000
[3e4c22b0427fdc4] jit-backend-dump}
[3e4c22b0428306a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc1b7 +0  74030000
[3e4c22b04283d92] jit-backend-dump}
[3e4c22b04286f5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc1ca +0  7D030000
[3e4c22b04287c81] jit-backend-dump}
[3e4c22b0428ae94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc1d4 +0  8F030000
[3e4c22b0428bbb9] jit-backend-dump}
[3e4c22b0428ed71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc1e1 +0  9E030000
[3e4c22b0428fa71] jit-backend-dump}
[3e4c22b04292c7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc1f3 +0  A8030000
[3e4c22b04293987] jit-backend-dump}
[3e4c22b04296b58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc209 +0  AE030000
[3e4c22b0429787c] jit-backend-dump}
[3e4c22b0429aafe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc21f +0  B4030000
[3e4c22b0429b829] jit-backend-dump}
[3e4c22b0429e9f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc237 +0  B8030000
[3e4c22b0429f71b] jit-backend-dump}
[3e4c22b042a294a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc24e +0  BD030000
[3e4c22b042a366b] jit-backend-dump}
[3e4c22b042a743b] jit-backend}
[3e4c22b042ab550] {jit-log-opt-loop
# Loop 54 ((if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)) : entry bridge with 106 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
+405: guard_class(p0, 16500016, descr=<Guard0x3d7e3e0>) [p1, p0]
+424: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+428: guard_nonnull_class(p3, 16470384, descr=<Guard0x3d7e6e0>) [p1, p0]
+453: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+456: guard_false(i6, descr=<Guard0x3d734a8>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+462: guard_class(p1, 16437896, descr=<Guard0x3d73460>) [p1, p0]
+481: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+485: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3d7e680>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+503: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+507: guard_class(p10, 16478824, descr=<Guard0x3d73418>) [p1, p0]
+519: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+530: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3d733d0>) [p1, p0]
+539: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+543: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+547: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+551: p17 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+555: guard_class(p17, 16505296, descr=<Guard0x3d73388>) [p1, p0]
debug_merge_point(0, 0, '(= nc1 nc2)')
+569: guard_not_invalidated(descr=<Guard0x3d73340>) [p1, p0]
+569: p19 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+573: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x3d7e620>) [p1, p0]
+593: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3d7e5c0>) [p1, p0]
+612: i22 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+616: i23 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+620: i24 = int_eq(i22, i23)
+623: guard_true(i24, descr=<Guard0x3d732f8>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+629: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+633: guard_nonnull_class(p25, 16616448, descr=<Guard0x3d7e560>) [p1, p0]
+651: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+655: guard_nonnull_class(p27, 16616448, descr=<Guard0x3d7e500>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+674: i30 = instance_ptr_eq(p25, ConstPtr(ptr29))
+677: guard_true(i30, descr=<Guard0x3d732b0>) [p1, p0]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+683: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x3d7e4a0>) [p1, p0]
+702: i32 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+706: i33 = int_eq(i23, i32)
+709: guard_false(i33, descr=<Guard0x3d73268>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+715: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x3d7e440>) [p1, p0]
+734: i36 = int_ge(i32, 0)
+738: guard_true(i36, descr=<Guard0x3d73220>) [p1, p0]
+744: i37 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+748: i38 = int_lt(i32, i37)
+751: guard_true(i38, descr=<Guard0x3d731d8>) [p1, p0]
+757: p39 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+761: guard_class(p39, 16622984, descr=<Guard0x3d73190>) [p1, p0]
+775: p41 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+779: p42 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+784: guard_class(p42, 16470384, descr=<Guard0x3d73148>) [p1, p0]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+797: p44 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+801: guard_nonnull_class(p44, ConstClass(W_Vector), descr=<Guard0x3d7e380>) [p1, p0]
+819: p46 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+823: guard_nonnull_class(p46, ConstClass(W_Vector), descr=<Guard0x3d7e320>) [p1, p0]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+843: p48 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+847: guard_nonnull_class(p48, 16470384, descr=<Guard0x3d7e2c0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+866: p50 = new_with_vtable(descr=<SizeDescr 32>)
+913: p51 = new_with_vtable(descr=<SizeDescr 40>)
+924: setfield_gc(p51, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+935: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+939: setfield_gc(p51, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+943: setfield_gc(p51, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+947: p53 = new_with_vtable(descr=<SizeDescr 48>)
+958: p54 = new_with_vtable(descr=<SizeDescr 32>)
+969: setfield_gc(p54, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+977: p57 = new_array_clear(4, descr=<ArrayP 8>)
+1003: setarrayitem_gc(p57, 0, ConstPtr(ptr59), descr=<ArrayP 8>)
+1007: setarrayitem_gc(p57, 1, p44, descr=<ArrayP 8>)
+1011: setarrayitem_gc(p57, 2, p44, descr=<ArrayP 8>)
+1015: setarrayitem_gc(p57, 3, p46, descr=<ArrayP 8>)
+1019: setfield_gc(p54, p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1030: setfield_gc(p54, ConstPtr(ptr63), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1034: setfield_gc(p50, p48, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1038: setfield_gc(p53, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1042: setfield_gc(p50, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1046: setfield_gc(p50, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1050: setfield_gc(p53, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1054: setfield_gc(p53, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1065: setfield_gc(p53, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1069: setfield_gc(p53, p54, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1073: jump(p50, p53, descr=TargetToken(59469520))
+1104: --end of the loop--
[3e4c22b042fac1f] jit-log-opt-loop}
[3e4c22b04520f74] {jit-backend
[3e4c22b045a5a90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc
[3e4c22b045b00af] jit-backend-dump}
[3e4c22b045baa57] {jit-backend-addr
Loop 55 ((if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)) has address 0x7f4a5c1dc9cd to 0x7f4a5c1dcce0 (bootstrap 0x7f4a5c1dc940)
       gc table: 0x7f4a5c1dc820
       function: 0x7f4a5c1dc940
         resops: 0x7f4a5c1dc9cd
       failures: 0x7f4a5c1dcce0
            end: 0x7f4a5c1dd01f
[3e4c22b045bdebc] jit-backend-addr}
[3e4c22b045c2569] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc9e4 +0  27030000
[3e4c22b045c3a64] jit-backend-dump}
[3e4c22b045c71de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc9f1 +0  36030000
[3e4c22b045c8029] jit-backend-dump}
[3e4c22b045cb3a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca01 +0  42030000
[3e4c22b045cc0d6] jit-backend-dump}
[3e4c22b045cf5ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca17 +0  48030000
[3e4c22b045d02f9] jit-backend-dump}
[3e4c22b045d35be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca2a +0  51030000
[3e4c22b045d42a2] jit-backend-dump}
[3e4c22b045d7508] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca3e +0  59030000
[3e4c22b045d81f0] jit-backend-dump}
[3e4c22b045db5ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca5c +0  73030000
[3e4c22b045dc2f9] jit-backend-dump}
[3e4c22b045df5ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca6e +0  7D030000
[3e4c22b045e0287] jit-backend-dump}
[3e4c22b045e34aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca82 +0  85030000
[3e4c22b045e41b3] jit-backend-dump}
[3e4c22b045e73a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca8f +0  94030000
[3e4c22b045e805b] jit-backend-dump}
[3e4c22b045eb29a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcaa6 +0  99030000
[3e4c22b045ebf56] jit-backend-dump}
[3e4c22b045ef148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcabc +0  9F030000
[3e4c22b045efe05] jit-backend-dump}
[3e4c22b045f3059] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcacf +0  A8030000
[3e4c22b045f3d06] jit-backend-dump}
[3e4c22b045f6f29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcae7 +0  AC030000
[3e4c22b045f7be6] jit-backend-dump}
[3e4c22b045fae15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcafe +0  B1030000
[3e4c22b045fbabf] jit-backend-dump}
[3e4c22b045fecdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb0f +0  BC030000
[3e4c22b045ff989] jit-backend-dump}
[3e4c22b04602ba9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb26 +0  C1030000
[3e4c22b04603872] jit-backend-dump}
[3e4c22b04606a7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb30 +0  D3030000
[3e4c22b04607730] jit-backend-dump}
[3e4c22b0460a96e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb3d +0  E2030000
[3e4c22b0460b62b] jit-backend-dump}
[3e4c22b0460e838] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb4d +0  EE030000
[3e4c22b0460f4ec] jit-backend-dump}
[3e4c22b046126ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb63 +0  F4030000
[3e4c22b046133b9] jit-backend-dump}
[3e4c22b046165b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb7b +0  F8030000
[3e4c22b04617277] jit-backend-dump}
[3e4c22b0461a487] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb84 +0  0B040000
[3e4c22b0461b13e] jit-backend-dump}
[3e4c22b0461e327] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb9a +0  11040000
[3e4c22b0461effc] jit-backend-dump}
[3e4c22b0462223d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcbb2 +0  15040000
[3e4c22b04622efa] jit-backend-dump}
[3e4c22b04626114] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcbc8 +0  1B040000
[3e4c22b04626e69] jit-backend-dump}
[3e4c22b0462a156] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcbdf +0  20040000
[3e4c22b0462ae4d] jit-backend-dump}
[3e4c22b0462eeae] jit-backend}
[3e4c22b04632e73] {jit-log-opt-loop
# Loop 55 ((if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)) : entry bridge with 103 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+437: guard_class(p0, 16500016, descr=<Guard0x3d7e800>) [p1, p0]
+456: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+460: guard_nonnull(p3, descr=<Guard0x3d73610>) [p1, p0]
+476: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+479: guard_true(i5, descr=<Guard0x3d73658>) [p1, p0]
debug_merge_point(0, 0, 'lst4984')
+485: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+489: guard_nonnull_class(p6, 16470384, descr=<Guard0x3d7e860>) [p1, p0]
+507: guard_class(p1, 16437896, descr=<Guard0x3d736a0>) [p1, p0]
+526: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+537: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3d736e8>) [p1, p0]
+546: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+546: guard_not_invalidated(descr=<Guard0x3d73730>) [p1, p0]
+546: p12 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+550: p13 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+554: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
+558: guard_nonnull_class(p12, 16478824, descr=<Guard0x3d7e8c0>) [p1, p0]
+576: guard_nonnull_class(p13, 16470384, descr=<Guard0x3d7e920>) [p1, p0]
+594: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+605: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3d73778>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+614: guard_class(p14, 16437896, descr=<Guard0x3d737c0>) [p1, p0]
+627: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+631: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3d7e980>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+650: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+654: p23 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+658: guard_class(p23, 16505296, descr=<Guard0x3d73808>) [p1, p0]
+672: guard_nonnull_class(p22, 16470384, descr=<Guard0x3d7e9e0>) [p1, p0]
debug_merge_point(0, 0, '(= nc2 nc3)')
+691: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+695: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3d7ea40>) [p1, p0]
+715: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+719: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3d7eaa0>) [p1, p0]
+738: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+742: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+746: i32 = int_eq(i30, i31)
+749: guard_false(i32, descr=<Guard0x3d73850>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+755: p33 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+759: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3d7eb00>) [p1, p0]
+778: i36 = int_ge(i31, 0)
+782: guard_true(i36, descr=<Guard0x3d73898>) [p1, p0]
+788: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+792: i38 = int_lt(i31, i37)
+795: guard_true(i38, descr=<Guard0x3d738e0>) [p1, p0]
+801: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+805: guard_class(p39, 16622984, descr=<Guard0x3d73928>) [p1, p0]
+817: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+821: p42 = getarrayitem_gc_r(p41, i31, descr=<ArrayP 8>)
+826: guard_class(p42, 16470384, descr=<Guard0x3d73970>) [p1, p0]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+839: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+843: guard_nonnull_class(p44, 16616448, descr=<Guard0x3d7eb60>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+863: i47 = instance_ptr_eq(p44, ConstPtr(ptr46))
+866: guard_true(i47, descr=<Guard0x3d739b8>) [p1, p0]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+872: p48 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+876: guard_nonnull_class(p48, ConstClass(W_Symbol), descr=<Guard0x3d7ebc0>) [p1, p0]
+894: p50 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+898: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x3d7ec20>) [p1, p0]
+918: p52 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+922: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x3d7ec80>) [p1, p0]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+940: p54 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+944: guard_nonnull_class(p54, 16470384, descr=<Guard0x3d7ece0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+963: p56 = new_with_vtable(descr=<SizeDescr 32>)
+1010: p57 = new_with_vtable(descr=<SizeDescr 40>)
+1021: setfield_gc(p57, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1032: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1036: setfield_gc(p57, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1040: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1044: p59 = new_with_vtable(descr=<SizeDescr 48>)
+1055: p60 = new_with_vtable(descr=<SizeDescr 32>)
+1066: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1074: p63 = new_array_clear(4, descr=<ArrayP 8>)
+1107: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+1111: setarrayitem_gc(p63, 1, p48, descr=<ArrayP 8>)
+1115: setarrayitem_gc(p63, 2, p50, descr=<ArrayP 8>)
+1119: setarrayitem_gc(p63, 3, p52, descr=<ArrayP 8>)
+1123: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1134: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1138: setfield_gc(p56, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1149: setfield_gc(p56, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1160: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1164: setfield_gc(p59, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1168: setfield_gc(p59, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1172: setfield_gc(p59, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1176: setfield_gc(p56, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1180: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1184: jump(p56, p59, descr=TargetToken(59469520))
+1216: --end of the loop--
[3e4c22b0468519c] jit-log-opt-loop}
[3e4c22b047443df] {jit-backend
[3e4c22b047960df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd140 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C0202000048FF0425A09900038139700B01000F85000000004C8B79104983FF01720741813FB09700000F85000000004C8B3530FFFFFF4D39F70F8400000000813AA81600000F85000000004C8B72084983FE01720741813E900F00000F85000000004C8B690841817D00B8B500000F85000000004D8B65104C8B1517FFFFFF4D39D40F85000000004D8B55184983FA01720741813AB09700000F85000000004D8B62084983FC01720841813C24382300000F85000000004D8B55204983FA01720741813AB09700000F85000000004D8B4A084983F9017207418139F08C00000F85000000004D8B57084983FA01720741813AF08C00000F85000000004D8B4508498B7F104883FF017206813FB09700000F85000000004C8B79184983FF01720741813FB09700000F85000000004889D3488B0C25F091F900488D91A0000000483B14251092F9000F87DF00000048891425F091F90048C701700B0100488D512048C702A8160000488D723048C706F08C000048C7460804000000488D462048C700080E000048C740080400000048898D30010000488B0D43FEFFFF488948104C8960184C8948204C89502848894610488B0530FEFFFF48894618488B8530010000488978104C8972084C8968084C8978184C89421048895A18488B1D0EFEFFFF48895A2048897228488985300100004889953801000049BBC05A1C5C4A7F000041FFE30F1F0048C7442408FFFFFF0049BB30D01D5C4A7F00004C895D204D8D9BC072FEFF41FFD3E9D8FDFFFF49BB30D11D5C4A7F00004C895D204D8D9BC079FEFF41FFD3E90CFFFFFFFF3507FDFFFF49BB40D01D5C4A7F000041534D8D9BC06FFEFF41FFE3FF35F3FCFFFF49BB50D01D5C4A7F000041534D8D9BB06FFEFF41FFE3FF35E7FCFFFF49BB60D01D5C4A7F000041534D8D9BA06FFEFF41FFE3FF35D3FCFFFF49BB70D01D5C4A7F000041534D8D9B906FFEFF41FFE3FF35BFFCFFFF49BB80D01D5C4A7F000041534D8D9B806FFEFF41FFE3FF35ABFCFFFF49BB90D01D5C4A7F000041534D8D9B706FFEFF41FFE3FF3597FCFFFF49BBA0D01D5C4A7F000041534D8D9B606FFEFF41FFE3FF358BFCFFFF49BBB0D01D5C4A7F000041534D8D9B506FFEFF41FFE3FF3577FCFFFF49BBC0D01D5C4A7F000041534D8D9B406FFEFF41FFE3FF3563FCFFFF49BBD0D01D5C4A7F000041534D8D9B306FFEFF41FFE3FF354FFCFFFF49BBE0D01D5C4A7F000041534D8D9B206FFEFF41FFE3FF353BFCFFFF49BBF0D01D5C4A7F000041534D8D9B106FFEFF41FFE3FF3527FCFFFF49BB00D11D5C4A7F000041534D8D9B006FFEFF41FFE3FF3513FCFFFF49BB10D11D5C4A7F000041534D8D9BF06EFEFF41FFE3FF35FFFBFFFF49BB20D11D5C4A7F000041534D8D9BE06EFEFF41FFE3
[3e4c22b0479d880] jit-backend-dump}
[3e4c22b047a79d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd1e4 +0  25000000
[3e4c22b047a8e18] jit-backend-dump}
[3e4c22b047acbd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd3f5 +0  25000000
[3e4c22b047ad9f1] jit-backend-dump}
[3e4c22b047b0ea2] {jit-backend-addr
bridge out of Guard 0x3b640e0 has address 0x7f4a5c1dd1e0 to 0x7f4a5c1dd3f0
       gc table: 0x7f4a5c1dd140
    jump target: 0x7f4a5c1dd1e0
         resops: 0x7f4a5c1dd1ee
       failures: 0x7f4a5c1dd3f0
            end: 0x7f4a5c1dd5d7
[3e4c22b047b326c] jit-backend-addr}
[3e4c22b047b6833] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd1fe +0  31020000
[3e4c22b047b75e5] jit-backend-dump}
[3e4c22b047ba99b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd215 +0  36020000
[3e4c22b047bb6ab] jit-backend-dump}
[3e4c22b047be8dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd225 +0  42020000
[3e4c22b047bf575] jit-backend-dump}
[3e4c22b047c2889] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd231 +0  52020000
[3e4c22b047c3574] jit-backend-dump}
[3e4c22b047c6753] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd248 +0  57020000
[3e4c22b047c740a] jit-backend-dump}
[3e4c22b047ca7b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd25a +0  7D020000
[3e4c22b047cb462] jit-backend-dump}
[3e4c22b047ce62f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd26e +0  85020000
[3e4c22b047cf2e2] jit-backend-dump}
[3e4c22b047d24d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd285 +0  8A020000
[3e4c22b047d3160] jit-backend-dump}
[3e4c22b047d63e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd29d +0  8E020000
[3e4c22b047d707a] jit-backend-dump}
[3e4c22b047da2f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd2b4 +0  93020000
[3e4c22b047dafe9] jit-backend-dump}
[3e4c22b047de1cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd2cb +0  98020000
[3e4c22b047dee88] jit-backend-dump}
[3e4c22b047e203d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd2e2 +0  9D020000
[3e4c22b047e2d28] jit-backend-dump}
[3e4c22b047e5e8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd2fc +0  9F020000
[3e4c22b047e6b37] jit-backend-dump}
[3e4c22b047e9cbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd313 +0  A4020000
[3e4c22b047ea98a] jit-backend-dump}
[3e4c22b047edd00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cfa6c +0  70D70000
[3e4c22b047ee9ae] jit-backend-dump}
[3e4c22b047f2a40] jit-backend}
[3e4c22b047f66b5] {jit-log-opt-bridge
# bridge out of Guard 0x3b640e0 with 52 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x3d7ed40>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16470384, descr=<Guard0x3d7eda0>) [p0, p1]
+224: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+227: guard_false(i6, descr=<Guard0x3d73a48>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+233: guard_class(p0, 16437352, descr=<Guard0x3d73a90>) [p0, p1]
+245: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+249: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3d7ee00>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+268: guard_not_invalidated(descr=<Guard0x3d73ad8>) [p0, p1]
+268: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+272: guard_class(p10, 16478072, descr=<Guard0x3d73b20>) [p0, p1]
+286: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+297: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3d73b68>) [p0, p1]
+306: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+310: guard_nonnull_class(p14, 16470384, descr=<Guard0x3d7ee60>) [p0, p1]
+329: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+333: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x3d7eec0>) [p0, p1]
+353: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+357: guard_nonnull_class(p18, 16470384, descr=<Guard0x3d7ef20>) [p0, p1]
+376: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+380: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3d7ef80>) [p0, p1]
+399: p22 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+403: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x3d7efe0>) [p0, p1]
+422: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+426: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+430: guard_nonnull_class(p25, 16470384, descr=<Guard0x3d7f040>) [p0, p1]
+448: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+452: guard_nonnull_class(p27, 16470384, descr=<Guard0x3d7f0a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+471: p29 = new_with_vtable(descr=<SizeDescr 32>)
+518: p30 = new_with_vtable(descr=<SizeDescr 48>)
+529: p31 = new_with_vtable(descr=<SizeDescr 32>)
+540: setfield_gc(p31, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+548: p34 = new_array_clear(4, descr=<ArrayP 8>)
+581: setarrayitem_gc(p34, 0, ConstPtr(ptr36), descr=<ArrayP 8>)
+585: setarrayitem_gc(p34, 1, p16, descr=<ArrayP 8>)
+589: setarrayitem_gc(p34, 2, p20, descr=<ArrayP 8>)
+593: setarrayitem_gc(p34, 3, p22, descr=<ArrayP 8>)
+597: setfield_gc(p31, p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: setfield_gc(p31, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+612: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+623: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+627: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+631: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+635: setfield_gc(p30, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p30, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+658: jump(p29, p30, descr=TargetToken(59469520))
+688: --end of the loop--
[3e4c22b04822cc9] jit-log-opt-bridge}
[3e4c22b04a10d96] {jit-backend
[3e4c22b04a6d686] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd
[3e4c22b04a75950] jit-backend-dump}
[3e4c22b04a80473] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd7d4 +0  27000000
[3e4c22b04a818fd] jit-backend-dump}
[3e4c22b04a857c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dda25 +0  27000000
[3e4c22b04a86633] jit-backend-dump}
[3e4c22b04a89ab4] {jit-backend-addr
bridge out of Guard 0x3908380 has address 0x7f4a5c1dd7d0 to 0x7f4a5c1dda20
       gc table: 0x7f4a5c1dd720
    jump target: 0x7f4a5c1dd7d0
         resops: 0x7f4a5c1dd7de
       failures: 0x7f4a5c1dda20
            end: 0x7f4a5c1ddc3f
[3e4c22b04a8bf62] jit-backend-addr}
[3e4c22b04a8f50c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd7ee +0  71020000
[3e4c22b04a90316] jit-backend-dump}
[3e4c22b04a93689] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd805 +0  76020000
[3e4c22b04a9434f] jit-backend-dump}
[3e4c22b04a97632] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd815 +0  82020000
[3e4c22b04a9835d] jit-backend-dump}
[3e4c22b04a9b63e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd821 +0  92020000
[3e4c22b04a9c316] jit-backend-dump}
[3e4c22b04a9f576] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd838 +0  97020000
[3e4c22b04aa024e] jit-backend-dump}
[3e4c22b04aa37ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd84a +0  BD020000
[3e4c22b04aa44ba] jit-backend-dump}
[3e4c22b04aa779b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd85e +0  C5020000
[3e4c22b04aa8433] jit-backend-dump}
[3e4c22b04aab5fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd875 +0  CA020000
[3e4c22b04aac2a7] jit-backend-dump}
[3e4c22b04aaf459] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd88d +0  CE020000
[3e4c22b04ab00f4] jit-backend-dump}
[3e4c22b04ab3278] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd8a4 +0  D3020000
[3e4c22b04ab3f1f] jit-backend-dump}
[3e4c22b04ab7093] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd8bb +0  D8020000
[3e4c22b04ab7d2e] jit-backend-dump}
[3e4c22b04abaeb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd8d2 +0  DD020000
[3e4c22b04abbb60] jit-backend-dump}
[3e4c22b04abecda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd8e9 +0  E2020000
[3e4c22b04abf972] jit-backend-dump}
[3e4c22b04ac2abf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd900 +0  E7020000
[3e4c22b04ac3751] jit-backend-dump}
[3e4c22b04ac6943] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd91a +0  E9020000
[3e4c22b04ac760f] jit-backend-dump}
[3e4c22b04aca75e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dd931 +0  EE020000
[3e4c22b04acb3f6] jit-backend-dump}
[3e4c22b04ace800] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c681e +0  AE6F0100
[3e4c22b04acf4b9] jit-backend-dump}
[3e4c22b04ad3545] jit-backend}
[3e4c22b04ad713d] {jit-log-opt-bridge
# bridge out of Guard 0x3908380 with 57 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x3d7f100>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull_class(p3, 16470384, descr=<Guard0x3d7f160>) [p0, p1]
+240: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+243: guard_false(i6, descr=<Guard0x3d73bf8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+249: guard_class(p0, 16437352, descr=<Guard0x3d73c40>) [p0, p1]
+261: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+265: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3d7f1c0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+284: guard_not_invalidated(descr=<Guard0x3d73c88>) [p0, p1]
+284: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: guard_class(p10, 16478448, descr=<Guard0x3d73cd0>) [p0, p1]
+302: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+313: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3d73d18>) [p0, p1]
+322: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+326: guard_nonnull_class(p14, 16470384, descr=<Guard0x3d7f220>) [p0, p1]
+345: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+349: guard_nonnull_class(p16, ConstClass(W_Vector), descr=<Guard0x3d7f280>) [p0, p1]
+369: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+373: guard_nonnull_class(p18, 16470384, descr=<Guard0x3d7f2e0>) [p0, p1]
+392: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+396: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3d7f340>) [p0, p1]
+415: p22 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+419: guard_nonnull_class(p22, 16470384, descr=<Guard0x3d7f3a0>) [p0, p1]
+438: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+442: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3d7f400>) [p0, p1]
+461: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+465: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3d7f460>) [p0, p1]
+484: p28 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+488: p29 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+492: guard_nonnull_class(p29, 16616448, descr=<Guard0x3d7f4c0>) [p0, p1]
+510: p31 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+514: guard_nonnull_class(p31, 16470384, descr=<Guard0x3d7f520>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+533: p33 = new_with_vtable(descr=<SizeDescr 32>)
+580: p34 = new_with_vtable(descr=<SizeDescr 48>)
+591: p35 = new_with_vtable(descr=<SizeDescr 32>)
+602: setfield_gc(p35, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+610: p38 = new_array_clear(5, descr=<ArrayP 8>)
+650: setarrayitem_gc(p38, 0, ConstPtr(ptr40), descr=<ArrayP 8>)
+654: setarrayitem_gc(p38, 1, p16, descr=<ArrayP 8>)
+658: setarrayitem_gc(p38, 2, p20, descr=<ArrayP 8>)
+662: setarrayitem_gc(p38, 3, p24, descr=<ArrayP 8>)
+666: setarrayitem_gc(p38, 4, p26, descr=<ArrayP 8>)
+670: setfield_gc(p35, p38, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+681: setfield_gc(p35, ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+685: setfield_gc(p33, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+696: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: setfield_gc(p33, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+711: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+715: setfield_gc(p34, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+719: setfield_gc(p34, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+730: setfield_gc(p34, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+734: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+738: jump(p33, p34, descr=TargetToken(59469840))
+768: --end of the loop--
[3e4c22b04b0e9c8] jit-log-opt-bridge}
[3e4c22b04c27fa7] {jit-backend
[3e4c22b04c6e730] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddd
[3e4c22b04c75377] jit-backend-dump}
[3e4c22b04c7f738] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddde4 +0  28000000
[3e4c22b04c80b60] jit-backend-dump}
[3e4c22b04c84ad2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddf85 +0  28000000
[3e4c22b04c85901] jit-backend-dump}
[3e4c22b04c88edb] {jit-backend-addr
bridge out of Guard 0x3b6fd60 has address 0x7f4a5c1ddde0 to 0x7f4a5c1ddf80
       gc table: 0x7f4a5c1ddd50
    jump target: 0x7f4a5c1ddde0
         resops: 0x7f4a5c1dddee
       failures: 0x7f4a5c1ddf80
            end: 0x7f4a5c1de14a
[3e4c22b04c8b2bd] jit-backend-addr}
[3e4c22b04c8e95b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dddfe +0  A4010000
[3e4c22b04c8f753] jit-backend-dump}
[3e4c22b04c92c16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dde15 +0  A9010000
[3e4c22b04c93926] jit-backend-dump}
[3e4c22b04c96d54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dde25 +0  B5010000
[3e4c22b04c97a63] jit-backend-dump}
[3e4c22b04c9ad96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dde31 +0  C5010000
[3e4c22b04c9ba96] jit-backend-dump}
[3e4c22b04c9edb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dde48 +0  CA010000
[3e4c22b04c9fabd] jit-backend-dump}
[3e4c22b04ca2e0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dde5a +0  D4010000
[3e4c22b04ca3af9] jit-backend-dump}
[3e4c22b04ca6e85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dde6e +0  DC010000
[3e4c22b04ca7b6c] jit-backend-dump}
[3e4c22b04caadcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dde8e +0  D8010000
[3e4c22b04cabac0] jit-backend-dump}
[3e4c22b04caee77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddea4 +0  FA010000
[3e4c22b04cafbae] jit-backend-dump}
[3e4c22b04cb2e76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddeb7 +0  03020000
[3e4c22b04cb3b7f] jit-backend-dump}
[3e4c22b04cb6dee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddec8 +0  0E020000
[3e4c22b04cb7aeb] jit-backend-dump}
[3e4c22b04cbad45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddede +0  14020000
[3e4c22b04cbba8e] jit-backend-dump}
[3e4c22b04cbed97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddefb +0  13020000
[3e4c22b04cbfa87] jit-backend-dump}
[3e4c22b04cc2ce7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddf0e +0  1C020000
[3e4c22b04cc3a00] jit-backend-dump}
[3e4c22b04cc6f69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5668 +0  74870000
[3e4c22b04cc7c8a] jit-backend-dump}
[3e4c22b04ccbdf2] jit-backend}
[3e4c22b04ccfa9f] {jit-log-opt-bridge
# bridge out of Guard 0x3b6fd60 with 41 ops
[p0, p1]
+166: guard_class(p1, 16500016, descr=<Guard0x3d7f580>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+182: guard_nonnull_class(p3, 16470384, descr=<Guard0x3d7f5e0>) [p0, p1]
+208: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+211: guard_false(i6, descr=<Guard0x3d73d60>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+217: guard_class(p0, 16437896, descr=<Guard0x3d73da8>) [p0, p1]
+229: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+233: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3d7f640>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+252: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+256: guard_class(p10, 16479200, descr=<Guard0x3d73df0>) [p0, p1]
+270: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+281: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3d73e38>) [p0, p1]
+290: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+294: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+298: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+302: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+306: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+310: guard_class(p18, 16505296, descr=<Guard0x3d73e80>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+322: guard_not_invalidated(descr=<Guard0x3d73ec8>) [p0, p1]
+322: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+326: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3d7f6a0>) [p0, p1]
+344: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3d7f700>) [p0, p1]
+363: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+367: i24 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+371: i25 = int_eq(i23, i24)
+374: guard_true(i25, descr=<Guard0x3d73f10>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+380: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+384: guard_nonnull_class(p26, 16470384, descr=<Guard0x3d7f760>) [p0, p1]
+402: p28 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+413: guard_nonnull_class(p28, 16470384, descr=<Guard0x3d7f7c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+431: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x3d7f820>) [p28, p26, p10, p17, p16, p15, p14, p3, p0, p18, p8]
+450: jump(p10, p26, p28, p8, p18, p0, p14, p15, p16, p3, p17, p3, p17, p16, p15, p14, p18, p20, i23, descr=TargetToken(61027200))
+560: --end of the loop--
[3e4c22b04cf61ef] jit-log-opt-bridge}
[3e4c22b04e0eeeb] {jit-backend
[3e4c22b04e6f980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de2b
[3e4c22b04e77cd3] jit-backend-dump}
[3e4c22b04e82357] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de374 +0  28000000
[3e4c22b04e836cb] jit-backend-dump}
[3e4c22b04e8754b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de595 +0  28000000
[3e4c22b04e882e1] jit-backend-dump}
[3e4c22b04e8b875] {jit-backend-addr
bridge out of Guard 0x3a75190 has address 0x7f4a5c1de370 to 0x7f4a5c1de590
       gc table: 0x7f4a5c1de2b0
    jump target: 0x7f4a5c1de370
         resops: 0x7f4a5c1de37e
       failures: 0x7f4a5c1de590
            end: 0x7f4a5c1de7e7
[3e4c22b04e8db50] jit-backend-addr}
[3e4c22b04e912dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de38e +0  41020000
[3e4c22b04e920ce] jit-backend-dump}
[3e4c22b04e9573b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de3a5 +0  46020000
[3e4c22b04e96422] jit-backend-dump}
[3e4c22b04e99957] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de3b5 +0  52020000
[3e4c22b04e9a660] jit-backend-dump}
[3e4c22b04e9d9dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de3c1 +0  62020000
[3e4c22b04e9e6d7] jit-backend-dump}
[3e4c22b04ea1a84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de3d8 +0  67020000
[3e4c22b04ea2741] jit-backend-dump}
[3e4c22b04ea5aa2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de3ea +0  71020000
[3e4c22b04ea679c] jit-backend-dump}
[3e4c22b04ea99ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de3fe +0  79020000
[3e4c22b04eaa6d1] jit-backend-dump}
[3e4c22b04ead90c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de417 +0  7C020000
[3e4c22b04eae5d5] jit-backend-dump}
[3e4c22b04eb198f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de42e +0  9D020000
[3e4c22b04eb2658] jit-backend-dump}
[3e4c22b04eb5a02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de444 +0  A3020000
[3e4c22b04eb66e3] jit-backend-dump}
[3e4c22b04eb99a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de455 +0  AE020000
[3e4c22b04eba66e] jit-backend-dump}
[3e4c22b04ebd8ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de46b +0  B4020000
[3e4c22b04ebe5cb] jit-backend-dump}
[3e4c22b04ec1837] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de475 +0  C6020000
[3e4c22b04ec2503] jit-backend-dump}
[3e4c22b04ec5766] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de482 +0  D5020000
[3e4c22b04ec642c] jit-backend-dump}
[3e4c22b04ec967a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de492 +0  E1020000
[3e4c22b04eca346] jit-backend-dump}
[3e4c22b04ecd5ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de4a7 +0  E8020000
[3e4c22b04ece284] jit-backend-dump}
[3e4c22b04ed14d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de4be +0  ED020000
[3e4c22b04ed21ad] jit-backend-dump}
[3e4c22b04ed5413] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de4d4 +0  F3020000
[3e4c22b04ed60d6] jit-backend-dump}
[3e4c22b04ed965e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce0f1 +0  7B020100
[3e4c22b04eda36d] jit-backend-dump}
[3e4c22b04ede546] jit-backend}
[3e4c22b04ee2328] {jit-log-opt-bridge
# bridge out of Guard 0x3a75190 with 68 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x3d7f880>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull_class(p3, 16470384, descr=<Guard0x3d7f8e0>) [p0, p1]
+256: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+259: guard_false(i6, descr=<Guard0x3d73f58>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+265: guard_class(p0, 16437896, descr=<Guard0x3d73fa0>) [p0, p1]
+277: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+281: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3d7f940>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+300: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+304: guard_class(p10, 16479200, descr=<Guard0x3da2020>) [p0, p1]
+318: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+329: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3da2068>) [p0, p1]
+338: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+342: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+346: p16 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+350: guard_class(p16, 16505296, descr=<Guard0x3da20b0>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+363: guard_not_invalidated(descr=<Guard0x3da20f8>) [p0, p1]
+363: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+367: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x3d7f9a0>) [p0, p1]
+386: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+390: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3d7fa00>) [p0, p1]
+408: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+412: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+416: i24 = int_eq(i22, i23)
+419: guard_false(i24, descr=<Guard0x3da2140>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+425: p25 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+429: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x3d7fa60>) [p0, p1]
+447: i28 = int_ge(i23, 0)
+451: guard_true(i28, descr=<Guard0x3da2188>) [p0, p1]
+457: i29 = getfield_gc_i(p25, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+461: i30 = int_lt(i23, i29)
+464: guard_true(i30, descr=<Guard0x3da21d0>) [p0, p1]
+470: p31 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+474: guard_class(p31, 16622984, descr=<Guard0x3da2218>) [p0, p1]
+486: p33 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+490: p34 = getarrayitem_gc_r(p33, i23, descr=<ArrayP 8>)
+495: guard_class(p34, 16470384, descr=<Guard0x3da2260>) [p0, p1]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+507: p36 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+511: guard_nonnull_class(p36, 16616448, descr=<Guard0x3d7fac0>) [p0, p1]
+530: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+534: guard_nonnull_class(p38, 16470384, descr=<Guard0x3d7fb20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+552: p40 = new_with_vtable(descr=<SizeDescr 32>)
+599: p41 = new_with_vtable(descr=<SizeDescr 56>)
+610: p42 = new_with_vtable(descr=<SizeDescr 48>)
+621: setfield_gc(p42, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+639: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+643: setfield_gc(p42, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+647: setfield_gc(p42, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+651: setfield_gc(p42, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+655: setfield_gc(p40, p36, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+666: setfield_gc(p41, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+670: setfield_gc(p40, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+674: setfield_gc(p40, p38, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+678: setfield_gc(p41, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+682: setfield_gc(p41, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+693: setfield_gc(p41, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+697: setfield_gc(p41, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+701: setfield_gc(p41, p34, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+705: jump(p40, p41, descr=TargetToken(59470000))
+736: --end of the loop--
[3e4c22b04f1c1c7] jit-log-opt-bridge}
[3e4c22b050cbb7a] {jit-backend
[3e4c22b05134b7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de
[3e4c22b0513ca00] jit-backend-dump}
[3e4c22b05147680] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de9a4 +0  28000000
[3e4c22b05148b3e] jit-backend-dump}
[3e4c22b0514cc2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1debb5 +0  28000000
[3e4c22b0514db18] jit-backend-dump}
[3e4c22b051511f6] {jit-backend-addr
bridge out of Guard 0x3a75340 has address 0x7f4a5c1de9a0 to 0x7f4a5c1debb0
       gc table: 0x7f4a5c1de900
    jump target: 0x7f4a5c1de9a0
         resops: 0x7f4a5c1de9ae
       failures: 0x7f4a5c1debb0
            end: 0x7f4a5c1ded97
[3e4c22b05153728] jit-backend-addr}
[3e4c22b05156e2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de9be +0  31020000
[3e4c22b05157c32] jit-backend-dump}
[3e4c22b0515b369] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de9d2 +0  39020000
[3e4c22b0515c0e0] jit-backend-dump}
[3e4c22b0515f6d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de9f1 +0  52020000
[3e4c22b0516040a] jit-backend-dump}
[3e4c22b0516380d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dea04 +0  5B020000
[3e4c22b0516450a] jit-backend-dump}
[3e4c22b051678f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dea18 +0  63020000
[3e4c22b05168604] jit-backend-dump}
[3e4c22b0516ba04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dea26 +0  71020000
[3e4c22b0516c6fe] jit-backend-dump}
[3e4c22b0516fa6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dea3d +0  76020000
[3e4c22b051707a2] jit-backend-dump}
[3e4c22b05173a9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dea56 +0  79020000
[3e4c22b05174770] jit-backend-dump}
[3e4c22b05177ac5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dea6c +0  7F020000
[3e4c22b05178797] jit-backend-dump}
[3e4c22b0517ba40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dea82 +0  85020000
[3e4c22b0517c709] jit-backend-dump}
[3e4c22b0517fa02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dea93 +0  90020000
[3e4c22b051806d4] jit-backend-dump}
[3e4c22b051839ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1deaa9 +0  96020000
[3e4c22b05184681] jit-backend-dump}
[3e4c22b0518798f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1deb0f +0  4C020000
[3e4c22b05188667] jit-backend-dump}
[3e4c22b0518b951] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1deb22 +0  55020000
[3e4c22b0518c617] jit-backend-dump}
[3e4c22b0518fb6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ce6da +0  C2020100
[3e4c22b05190858] jit-backend-dump}
[3e4c22b05194aef] jit-backend}
[3e4c22b0519888d] {jit-log-opt-bridge
# bridge out of Guard 0x3a75340 with 68 ops
[p0, p1, p2, p3, p4]
+182: guard_class(p0, 16437896, descr=<Guard0x3d7fbe0>) [p0, p1, p2, p3, p4]
+194: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+205: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3da22a8>) [p0, p1, p2, p3, p4]
+214: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+214: guard_not_invalidated(descr=<Guard0x3da22f0>) [p0, p1, p2, p3, p4]
+214: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+218: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+222: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (cons AppRand15 AppRand16)')
+226: guard_nonnull_class(p9, 16479200, descr=<Guard0x3d7fc40>) [p0, p1, p2, p3, p4]
+245: guard_nonnull_class(p10, 16470384, descr=<Guard0x3d7fca0>) [p0, p1, p2, p3, p4]
+264: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+275: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3da2338>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+284: guard_class(p11, 16437896, descr=<Guard0x3da2380>) [p0, p1, p2, p3, p4]
+298: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+302: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x3d7fd00>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+321: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+325: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+329: p21 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+333: guard_class(p21, 16505296, descr=<Guard0x3da23c8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+346: p23 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+350: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x3d7fd60>) [p0, p1, p2, p3, p4]
+368: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+372: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x3d7fdc0>) [p0, p1, p2, p3, p4]
+390: i27 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+394: i28 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+398: i29 = int_eq(i27, i28)
+401: guard_true(i29, descr=<Guard0x3da2410>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+407: p30 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+411: guard_nonnull_class(p30, 16470384, descr=<Guard0x3d7fe20>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+429: p32 = new_with_vtable(descr=<SizeDescr 24>)
+480: p33 = new_with_vtable(descr=<SizeDescr 24>)
+491: setfield_gc(p33, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+495: setfield_gc(p33, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+506: setfield_gc(p32, p33, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+510: setfield_gc(p32, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+521: i35 = int_ge(i28, 0)
+525: guard_true(i35, descr=<Guard0x3d7fe80>) [p32, p30, p9, p20, p19, p10, p11, p21, p17, None, None, None, None]
+531: i38 = int_le(i28, 9223372036854775806)
+544: guard_true(i38, descr=<Guard0x3d7fee0>) [p32, p30, p9, p20, p19, p10, p11, p21, p17, None, None, None, None]
+550: p39 = new_with_vtable(descr=<SizeDescr 32>)
+561: p40 = new_with_vtable(descr=<SizeDescr 56>)
+572: p41 = new_with_vtable(descr=<SizeDescr 48>)
+583: setfield_gc(p41, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+594: setfield_gc(p41, ConstPtr(ptr42), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+598: setfield_gc(p41, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+602: setfield_gc(p41, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+606: setfield_gc(p41, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+617: setfield_gc(p40, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+621: setfield_gc(p40, p21, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+625: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+629: setfield_gc(p40, p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+633: setfield_gc(p40, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+637: setfield_gc(p40, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+641: setfield_gc(p39, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+645: setfield_gc(p39, p30, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+649: setfield_gc(p39, p32, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+653: jump(p39, p40, descr=TargetToken(59470000))
+688: --end of the loop--
[3e4c22b051d315d] jit-log-opt-bridge}
[3e4c22b0539079f] {jit-backend
[3e4c22b053e47cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1deef
[3e4c22b053ec1d7] jit-backend-dump}
[3e4c22b053f6aac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1defa4 +0  28000000
[3e4c22b053f81a9] jit-backend-dump}
[3e4c22b053fc4b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df195 +0  28000000
[3e4c22b053fd363] jit-backend-dump}
[3e4c22b0540094a] {jit-backend-addr
bridge out of Guard 0x3d7fac0 has address 0x7f4a5c1defa0 to 0x7f4a5c1df190
       gc table: 0x7f4a5c1deef0
    jump target: 0x7f4a5c1defa0
         resops: 0x7f4a5c1defae
       failures: 0x7f4a5c1df190
            end: 0x7f4a5c1df3ca
[3e4c22b05402d2e] jit-backend-addr}
[3e4c22b054064e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1defbe +0  F4010000
[3e4c22b05407294] jit-backend-dump}
[3e4c22b0540a71e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1defd5 +0  F9010000
[3e4c22b0540b467] jit-backend-dump}
[3e4c22b0540e8c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1defe5 +0  05020000
[3e4c22b0540f5ee] jit-backend-dump}
[3e4c22b0541294f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1deff1 +0  15020000
[3e4c22b054136a1] jit-backend-dump}
[3e4c22b05416a1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df008 +0  1A020000
[3e4c22b054176c2] jit-backend-dump}
[3e4c22b0541a984] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df01a +0  24020000
[3e4c22b0541b662] jit-backend-dump}
[3e4c22b0541e92a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df02e +0  2C020000
[3e4c22b0541f5e7] jit-backend-dump}
[3e4c22b05422896] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df047 +0  2F020000
[3e4c22b0542354a] jit-backend-dump}
[3e4c22b0542691f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df05e +0  50020000
[3e4c22b054275eb] jit-backend-dump}
[3e4c22b0542a903] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df074 +0  56020000
[3e4c22b0542b5c2] jit-backend-dump}
[3e4c22b0542e897] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df085 +0  61020000
[3e4c22b0542f544] jit-backend-dump}
[3e4c22b054327c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df09b +0  67020000
[3e4c22b054334a4] jit-backend-dump}
[3e4c22b05436794] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df0a5 +0  79020000
[3e4c22b05437444] jit-backend-dump}
[3e4c22b0543a6f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df0b2 +0  88020000
[3e4c22b0543b3a1] jit-backend-dump}
[3e4c22b0543e635] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df0c2 +0  94020000
[3e4c22b0543f2d6] jit-backend-dump}
[3e4c22b05442586] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df0de +0  94020000
[3e4c22b05443230] jit-backend-dump}
[3e4c22b054464e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df0fc +0  92020000
[3e4c22b05447190] jit-backend-dump}
[3e4c22b0544a437] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df11a +0  90020000
[3e4c22b0544b0f0] jit-backend-dump}
[3e4c22b0544e62e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1de4be +0  DE0A0000
[3e4c22b0544f338] jit-backend-dump}
[3e4c22b05453640] jit-backend}
[3e4c22b0545748f] {jit-log-opt-bridge
# bridge out of Guard 0x3d7fac0 with 52 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x3d7ff40>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull_class(p3, 16470384, descr=<Guard0x3d7ffa0>) [p0, p1]
+240: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+243: guard_false(i6, descr=<Guard0x3da2458>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+249: guard_class(p0, 16437896, descr=<Guard0x3da24a0>) [p0, p1]
+261: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+265: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3da6020>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+284: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: guard_class(p10, 16479200, descr=<Guard0x3da24e8>) [p0, p1]
+302: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+313: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3da2530>) [p0, p1]
+322: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+326: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+330: p16 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+334: guard_class(p16, 16505296, descr=<Guard0x3da2578>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+347: guard_not_invalidated(descr=<Guard0x3da25c0>) [p0, p1]
+347: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+351: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x3da6080>) [p0, p1]
+370: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+374: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3da60e0>) [p0, p1]
+392: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+396: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+400: i24 = int_eq(i22, i23)
+403: guard_false(i24, descr=<Guard0x3da2608>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+409: p25 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+413: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x3da6140>) [p0, p1]
+431: i28 = int_ge(i23, 0)
+435: guard_true(i28, descr=<Guard0x3da2650>) [p0, p1]
+441: i29 = getfield_gc_i(p25, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i30 = int_lt(i23, i29)
+448: guard_true(i30, descr=<Guard0x3da2698>) [p0, p1]
+454: p31 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+458: guard_class(p31, 16622984, descr=<Guard0x3da26e0>) [p0, p1]
+470: p33 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+474: p34 = getarrayitem_gc_r(p33, i23, descr=<ArrayP 8>)
+486: guard_class(p34, 16470384, descr=<Guard0x3da2728>) [p0, p1]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+498: p36 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+509: guard_nonnull_class(p36, 16470384, descr=<Guard0x3da61a0>) [p0, p1]
+528: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+539: guard_nonnull_class(p38, 16470384, descr=<Guard0x3da6200>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+558: i40 = arraylen_gc(p33, descr=<ArrayP 8>)
+558: jump(p10, p36, p38, p8, p16, p0, p14, p15, p3, p34, p15, p14, p16, p18, p20, p25, p33, i23, descr=TargetToken(59470080))
+672: --end of the loop--
[3e4c22b0548b452] jit-log-opt-bridge}
[3e4c22b055fa017] {jit-backend
[3e4c22b0568d1b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df4f
[3e4c22b05694b90] jit-backend-dump}
[3e4c22b0569f49c] {jit-backend-addr
Loop 62 ((loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)) has address 0x7f4a5c1df60d to 0x7f4a5c1df7e0 (bootstrap 0x7f4a5c1df580)
       gc table: 0x7f4a5c1df4f0
       function: 0x7f4a5c1df580
         resops: 0x7f4a5c1df60d
       failures: 0x7f4a5c1df7e0
            end: 0x7f4a5c1df9bd
[3e4c22b056a2051] jit-backend-addr}
[3e4c22b056a6274] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df624 +0  F1010000
[3e4c22b056a74a0] jit-backend-dump}
[3e4c22b056aaadc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df63a +0  F7010000
[3e4c22b056ab8a0] jit-backend-dump}
[3e4c22b056aecec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df650 +0  FD010000
[3e4c22b056afa17] jit-backend-dump}
[3e4c22b056b2ccd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df666 +0  03020000
[3e4c22b056b39ee] jit-backend-dump}
[3e4c22b056b6c2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df67a +0  0B020000
[3e4c22b056b7933] jit-backend-dump}
[3e4c22b056bab9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df68d +0  14020000
[3e4c22b056bb89f] jit-backend-dump}
[3e4c22b056bea82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df6a3 +0  1A020000
[3e4c22b056bf782] jit-backend-dump}
[3e4c22b056c2943] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df6bc +0  1D020000
[3e4c22b056c364c] jit-backend-dump}
[3e4c22b056c697c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df6d4 +0  3D020000
[3e4c22b056c76b9] jit-backend-dump}
[3e4c22b056ca9ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df6ec +0  41020000
[3e4c22b056cb6e9] jit-backend-dump}
[3e4c22b056ce8e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df6fe +0  4B020000
[3e4c22b056cf5db] jit-backend-dump}
[3e4c22b056d27eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df715 +0  50020000
[3e4c22b056d34fe] jit-backend-dump}
[3e4c22b056d66c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df71f +0  62020000
[3e4c22b056d73af] jit-backend-dump}
[3e4c22b056da5aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df732 +0  6B020000
[3e4c22b056db2b4] jit-backend-dump}
[3e4c22b056df04f] jit-backend}
[3e4c22b056e302c] {jit-log-opt-loop
# Loop 62 ((loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)) : entry bridge with 61 ops
[p0, p1]
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
+293: guard_class(p0, 16500368, descr=<Guard0x3da62c0>) [p1, p0]
+312: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+316: guard_nonnull_class(p3, 16479200, descr=<Guard0x3da6320>) [p1, p0]
+334: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+338: guard_nonnull_class(p5, 16470384, descr=<Guard0x3da6380>) [p1, p0]
+356: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+360: guard_nonnull_class(p7, 16470384, descr=<Guard0x3da63e0>) [p1, p0]
+378: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+389: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3da2770>) [p1, p0]
+398: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+398: guard_class(p1, 16437896, descr=<Guard0x3da27b8>) [p1, p0]
+417: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+421: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3da6440>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+439: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+443: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+447: p17 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+451: guard_class(p17, 16505296, descr=<Guard0x3da2800>) [p1, p0]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+464: guard_not_invalidated(descr=<Guard0x3da2848>) [p1, p0]
+464: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+468: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x3da64a0>) [p1, p0]
+488: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+492: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3da6500>) [p1, p0]
+512: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+517: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+521: i25 = int_eq(i23, i24)
+524: guard_true(i25, descr=<Guard0x3da2890>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+530: p26 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+534: guard_nonnull_class(p26, 16470384, descr=<Guard0x3da6560>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+553: i29 = int_ge(i24, 0)
+557: guard_true(i29, descr=<Guard0x3da65c0>) [p7, p26, p3, p16, p15, p5, p1, p17, p13]
+563: i31 = int_le(i24, 9223372036854775806)
+576: guard_true(i31, descr=<Guard0x3da6620>) [p7, p26, p3, p16, p15, p5, p1, p17, p13]
+582: p32 = new_with_vtable(descr=<SizeDescr 32>)
+629: p33 = new_with_vtable(descr=<SizeDescr 56>)
+640: p34 = new_with_vtable(descr=<SizeDescr 48>)
+652: setfield_gc(p34, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+663: setfield_gc(p34, ConstPtr(ptr35), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+667: setfield_gc(p34, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+671: setfield_gc(p34, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+675: setfield_gc(p34, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+679: setfield_gc(p32, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+683: setfield_gc(p33, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+687: setfield_gc(p32, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+691: setfield_gc(p32, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+695: setfield_gc(p33, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+699: setfield_gc(p33, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+710: setfield_gc(p33, ConstPtr(ptr36), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+714: setfield_gc(p33, p34, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+718: setfield_gc(p33, p5, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+722: jump(p32, p33, descr=TargetToken(59470000))
+752: --end of the loop--
[3e4c22b05713b47] jit-log-opt-loop}
[3e4c22b05a13348] {jit-backend
[3e4c22b05a78086] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfb
[3e4c22b05a804ad] jit-backend-dump}
[3e4c22b05a8b357] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfbd4 +0  25000000
[3e4c22b05a8c7e7] jit-backend-dump}
[3e4c22b05a908cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfe25 +0  25000000
[3e4c22b05a917af] jit-backend-dump}
[3e4c22b05a94d55] {jit-backend-addr
bridge out of Guard 0x3be1b80 has address 0x7f4a5c1dfbd0 to 0x7f4a5c1dfe20
       gc table: 0x7f4a5c1dfb10
    jump target: 0x7f4a5c1dfbd0
         resops: 0x7f4a5c1dfbde
       failures: 0x7f4a5c1dfe20
            end: 0x7f4a5c1e005b
[3e4c22b05a970d8] jit-backend-addr}
[3e4c22b05a9a91f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfbee +0  71020000
[3e4c22b05a9b74b] jit-backend-dump}
[3e4c22b05a9ec4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfbfb +0  80020000
[3e4c22b05a9f980] jit-backend-dump}
[3e4c22b05aa2c48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfc0b +0  8C020000
[3e4c22b05aa38fb] jit-backend-dump}
[3e4c22b05aa6b43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfc22 +0  91020000
[3e4c22b05aa77c5] jit-backend-dump}
[3e4c22b05aaa99c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfc36 +0  99020000
[3e4c22b05aab621] jit-backend-dump}
[3e4c22b05aae7fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfc4a +0  A1020000
[3e4c22b05aaf483] jit-backend-dump}
[3e4c22b05ab2773] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfc6a +0  B9020000
[3e4c22b05ab3424] jit-backend-dump}
[3e4c22b05ab6687] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfc7e +0  C1020000
[3e4c22b05ab7328] jit-backend-dump}
[3e4c22b05aba53e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfc93 +0  C8020000
[3e4c22b05abb1ef] jit-backend-dump}
[3e4c22b05abe412] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfca0 +0  D7020000
[3e4c22b05abf0ad] jit-backend-dump}
[3e4c22b05ac223d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfcb7 +0  DC020000
[3e4c22b05ac2ec2] jit-backend-dump}
[3e4c22b05ac607d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfccf +0  E0020000
[3e4c22b05ac6d06] jit-backend-dump}
[3e4c22b05ac9f32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfce5 +0  E6020000
[3e4c22b05acabae] jit-backend-dump}
[3e4c22b05acddb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfcfd +0  EA020000
[3e4c22b05acea3e] jit-backend-dump}
[3e4c22b05ad1be7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfd13 +0  F0020000
[3e4c22b05ad2897] jit-backend-dump}
[3e4c22b05ad5a34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfd2a +0  F5020000
[3e4c22b05ad6727] jit-backend-dump}
[3e4c22b05ad9960] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dfd45 +0  F6020000
[3e4c22b05ada5e2] jit-backend-dump}
[3e4c22b05adda7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d67d7 +0  F5930000
[3e4c22b05ade71c] jit-backend-dump}
[3e4c22b05ae274f] jit-backend}
[3e4c22b05ae62e0] {jit-log-opt-bridge
# bridge out of Guard 0x3be1b80 with 62 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x3da6680>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull(p3, descr=<Guard0x3da2920>) [p0, p1]
+246: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+249: guard_true(i5, descr=<Guard0x3da2968>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
+255: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+259: guard_nonnull_class(p6, 16616448, descr=<Guard0x3da66e0>) [p0, p1]
+278: guard_class(p0, 16437896, descr=<Guard0x3da29b0>) [p0, p1]
+298: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+309: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3da29f8>) [p0, p1]
+318: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+318: guard_not_invalidated(descr=<Guard0x3da2a40>) [p0, p1]
+318: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+322: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+326: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
+330: guard_nonnull_class(p12, 16478072, descr=<Guard0x3da6740>) [p0, p1]
+350: guard_nonnull_class(p13, 16470384, descr=<Guard0x3da67a0>) [p0, p1]
+370: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+382: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3da2a88>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+391: guard_class(p14, 16435920, descr=<Guard0x3da2ad0>) [p0, p1]
+404: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+408: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3da6800>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+427: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+432: guard_nonnull_class(p22, 16470384, descr=<Guard0x3da6860>) [p0, p1]
+451: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+455: guard_nonnull_class(p24, ConstClass(W_Symbol), descr=<Guard0x3da68c0>) [p0, p1]
+473: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+478: guard_nonnull_class(p26, 16470384, descr=<Guard0x3da6920>) [p0, p1]
+497: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+501: guard_nonnull_class(p28, ConstClass(W_Symbol), descr=<Guard0x3da6980>) [p0, p1]
+519: p30 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+523: guard_nonnull_class(p30, ConstClass(W_Symbol), descr=<Guard0x3da69e0>) [p0, p1]
+542: p32 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+547: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+551: guard_nonnull_class(p33, 16616448, descr=<Guard0x3da6a40>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+569: p35 = new_with_vtable(descr=<SizeDescr 32>)
+616: p36 = new_with_vtable(descr=<SizeDescr 48>)
+627: p37 = new_with_vtable(descr=<SizeDescr 32>)
+639: setfield_gc(p37, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+647: p40 = new_array_clear(4, descr=<ArrayP 8>)
+680: setarrayitem_gc(p40, 0, ConstPtr(ptr42), descr=<ArrayP 8>)
+684: setarrayitem_gc(p40, 1, p24, descr=<ArrayP 8>)
+688: setarrayitem_gc(p40, 2, p28, descr=<ArrayP 8>)
+692: setarrayitem_gc(p40, 3, p30, descr=<ArrayP 8>)
+696: setfield_gc(p37, p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+707: setfield_gc(p37, ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+711: setfield_gc(p35, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+722: setfield_gc(p35, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+733: setfield_gc(p36, ConstPtr(ptr47), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+737: setfield_gc(p36, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+741: setfield_gc(p36, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+745: setfield_gc(p36, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+749: setfield_gc(p35, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+753: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+757: jump(p35, p36, descr=TargetToken(59469520))
+784: --end of the loop--
[3e4c22b05b1a051] jit-log-opt-bridge}
[3e4c22b05dbedfc] {jit-backend
[3e4c22b05e1f2c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e01a
[3e4c22b05e27372] jit-backend-dump}
[3e4c22b05e3247d] {jit-backend-addr
Loop 64 ((loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)) has address 0x7f4a5c1e02ed to 0x7f4a5c1e0530 (bootstrap 0x7f4a5c1e0260)
       gc table: 0x7f4a5c1e01a0
       function: 0x7f4a5c1e0260
         resops: 0x7f4a5c1e02ed
       failures: 0x7f4a5c1e0530
            end: 0x7f4a5c1e073b
[3e4c22b05e34fcd] jit-backend-addr}
[3e4c22b05e39600] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0304 +0  57020000
[3e4c22b05e3a908] jit-backend-dump}
[3e4c22b05e3e106] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e031a +0  5D020000
[3e4c22b05e3ef7e] jit-backend-dump}
[3e4c22b05e4239a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0330 +0  63020000
[3e4c22b05e43120] jit-backend-dump}
[3e4c22b05e464ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0346 +0  69020000
[3e4c22b05e47194] jit-backend-dump}
[3e4c22b05e4a4c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e035a +0  71020000
[3e4c22b05e4b180] jit-backend-dump}
[3e4c22b05e4e4fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e036d +0  7A020000
[3e4c22b05e4f1a4] jit-backend-dump}
[3e4c22b05e52491] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0383 +0  80020000
[3e4c22b05e53144] jit-backend-dump}
[3e4c22b05e56406] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0398 +0  87020000
[3e4c22b05e570c9] jit-backend-dump}
[3e4c22b05e5a3bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e03ab +0  90020000
[3e4c22b05e5b09d] jit-backend-dump}
[3e4c22b05e5e54f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e03c2 +0  B1020000
[3e4c22b05e5f22a] jit-backend-dump}
[3e4c22b05e62551] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e03da +0  B5020000
[3e4c22b05e63214] jit-backend-dump}
[3e4c22b05e664fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e03ec +0  BF020000
[3e4c22b05e671c3] jit-backend-dump}
[3e4c22b05e6a4b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0403 +0  C4020000
[3e4c22b05e6b176] jit-backend-dump}
[3e4c22b05e6e41f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0413 +0  D0020000
[3e4c22b05e6f0df] jit-backend-dump}
[3e4c22b05e7238e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0429 +0  D6020000
[3e4c22b05e73042] jit-backend-dump}
[3e4c22b05e76356] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0441 +0  DA020000
[3e4c22b05e77010] jit-backend-dump}
[3e4c22b05e7ae41] jit-backend}
[3e4c22b05e7ee96] {jit-log-opt-loop
# Loop 64 ((loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)) : entry bridge with 77 ops
[p0, p1]
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
+341: guard_class(p0, 16500368, descr=<Guard0x3da6aa0>) [p1, p0]
+360: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+364: guard_nonnull_class(p3, 16478824, descr=<Guard0x3da6b00>) [p1, p0]
+382: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+386: guard_nonnull_class(p5, 16470384, descr=<Guard0x3da6b60>) [p1, p0]
+404: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+408: guard_nonnull_class(p7, 16616448, descr=<Guard0x3da6bc0>) [p1, p0]
+426: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+437: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3da2c38>) [p1, p0]
+446: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+446: guard_class(p1, 16437896, descr=<Guard0x3da2c80>) [p1, p0]
+465: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+469: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3da6c20>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+487: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+491: p16 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+495: guard_class(p16, 16505296, descr=<Guard0x3da2cc8>) [p1, p0]
+508: guard_nonnull_class(p15, 16470384, descr=<Guard0x3da6c80>) [p1, p0]
debug_merge_point(0, 0, '(= nc2 nc3)')
+527: guard_not_invalidated(descr=<Guard0x3da2d10>) [p1, p0]
+527: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+531: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x3da6ce0>) [p1, p0]
+550: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+554: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3da6d40>) [p1, p0]
+574: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+578: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+583: i25 = int_eq(i23, i24)
+586: guard_true(i25, descr=<Guard0x3da2d58>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+592: p26 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+596: guard_nonnull_class(p26, 16616448, descr=<Guard0x3da6da0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+622: i29 = instance_ptr_eq(p26, ConstPtr(ptr28))
+625: guard_true(i29, descr=<Guard0x3da2da0>) [p1, p0]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+631: p30 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+635: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x3da6e00>) [p1, p0]
+653: p32 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+657: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x3da6e60>) [p1, p0]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+677: p34 = new_with_vtable(descr=<SizeDescr 32>)
+724: p35 = new_with_vtable(descr=<SizeDescr 40>)
+735: setfield_gc(p35, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+746: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+750: setfield_gc(p35, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+754: setfield_gc(p35, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+758: p37 = new_with_vtable(descr=<SizeDescr 48>)
+770: p38 = new_with_vtable(descr=<SizeDescr 32>)
+781: setfield_gc(p38, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+789: p41 = new_array_clear(4, descr=<ArrayP 8>)
+815: setarrayitem_gc(p41, 0, ConstPtr(ptr43), descr=<ArrayP 8>)
+819: setarrayitem_gc(p41, 1, p30, descr=<ArrayP 8>)
+823: setarrayitem_gc(p41, 2, p32, descr=<ArrayP 8>)
+827: setarrayitem_gc(p41, 3, p32, descr=<ArrayP 8>)
+831: setfield_gc(p38, p41, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+842: setfield_gc(p38, ConstPtr(ptr47), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+846: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+850: setfield_gc(p37, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+854: setfield_gc(p34, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+858: setfield_gc(p34, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+862: setfield_gc(p37, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+866: setfield_gc(p37, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+877: setfield_gc(p37, ConstPtr(ptr48), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+881: setfield_gc(p37, p38, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+885: jump(p34, p37, descr=TargetToken(59469520))
+912: --end of the loop--
[3e4c22b05ebbe01] jit-log-opt-loop}
[3e4c22b060dfadc] {jit-backend
[3e4c22b0615a3f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e08f
[3e4c22b061633ad] jit-backend-dump}
[3e4c22b0616e689] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e09e4 +0  25000000
[3e4c22b0616fbb2] jit-backend-dump}
[3e4c22b06173dc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0cc5 +0  25000000
[3e4c22b06174ce0] jit-backend-dump}
[3e4c22b0617830f] {jit-backend-addr
bridge out of Guard 0x3da6bc0 has address 0x7f4a5c1e09e0 to 0x7f4a5c1e0cc0
       gc table: 0x7f4a5c1e08f0
    jump target: 0x7f4a5c1e09e0
         resops: 0x7f4a5c1e09ee
       failures: 0x7f4a5c1e0cc0
            end: 0x7f4a5c1e0fa3
[3e4c22b0617a6e8] jit-backend-addr}
[3e4c22b0617df3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e09fe +0  01030000
[3e4c22b0617ed79] jit-backend-dump}
[3e4c22b06182277] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0a15 +0  06030000
[3e4c22b06183010] jit-backend-dump}
[3e4c22b06186374] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0a2c +0  0B030000
[3e4c22b06187083] jit-backend-dump}
[3e4c22b0618a382] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0a44 +0  0F030000
[3e4c22b0618b06d] jit-backend-dump}
[3e4c22b0618e323] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0a58 +0  17030000
[3e4c22b0618f013] jit-backend-dump}
[3e4c22b06192359] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0a6c +0  1F030000
[3e4c22b06193056] jit-backend-dump}
[3e4c22b0619633f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0a84 +0  23030000
[3e4c22b0619703f] jit-backend-dump}
[3e4c22b0619a2fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0a99 +0  2A030000
[3e4c22b0619afe9] jit-backend-dump}
[3e4c22b0619e2ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0aac +0  33030000
[3e4c22b0619ef8f] jit-backend-dump}
[3e4c22b061a2395] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0ac2 +0  55030000
[3e4c22b061a3077] jit-backend-dump}
[3e4c22b061a6373] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0ad8 +0  5B030000
[3e4c22b061a7057] jit-backend-dump}
[3e4c22b061ad9c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0ae9 +0  66030000
[3e4c22b061ae866] jit-backend-dump}
[3e4c22b061b212e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0aff +0  6C030000
[3e4c22b061b2e28] jit-backend-dump}
[3e4c22b061b61a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0b09 +0  7E030000
[3e4c22b061b6e92] jit-backend-dump}
[3e4c22b061ba24b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0b16 +0  8D030000
[3e4c22b061baf42] jit-backend-dump}
[3e4c22b061be22c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0b27 +0  98030000
[3e4c22b061beef2] jit-backend-dump}
[3e4c22b061c21de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0b3c +0  9F030000
[3e4c22b061c2e86] jit-backend-dump}
[3e4c22b061c610a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0b52 +0  A5030000
[3e4c22b061c6dc1] jit-backend-dump}
[3e4c22b061ca033] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0b62 +0  B1030000
[3e4c22b061cacdb] jit-backend-dump}
[3e4c22b061cdf41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0b79 +0  B6030000
[3e4c22b061cec0d] jit-backend-dump}
[3e4c22b061d1e70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0b8f +0  BC030000
[3e4c22b061d2b1a] jit-backend-dump}
[3e4c22b061d5dc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0ba5 +0  C2030000
[3e4c22b061d6a68] jit-backend-dump}
[3e4c22b061d9cd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0bbb +0  C8030000
[3e4c22b061da972] jit-backend-dump}
[3e4c22b061ddecf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0346 +0  96060000
[3e4c22b061deba4] jit-backend-dump}
[3e4c22b061e2e22] jit-backend}
[3e4c22b061e6bab] {jit-log-opt-bridge
# bridge out of Guard 0x3da6bc0 with 92 ops
[p0, p1]
+262: guard_class(p1, 16500368, descr=<Guard0x3da6ec0>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+278: guard_nonnull_class(p3, 16478824, descr=<Guard0x3da6f20>) [p0, p1]
+297: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+301: guard_nonnull_class(p5, 16470384, descr=<Guard0x3da6f80>) [p0, p1]
+320: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+324: guard_nonnull_class(p7, 16470384, descr=<Guard0x3da6fe0>) [p0, p1]
+344: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+355: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3da2e30>) [p0, p1]
+364: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+364: guard_class(p0, 16437896, descr=<Guard0x3da2e78>) [p0, p1]
+384: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+388: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3da7040>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+408: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+412: p16 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+416: guard_class(p16, 16505296, descr=<Guard0x3da2ec0>) [p0, p1]
+429: guard_nonnull_class(p15, 16470384, descr=<Guard0x3da70a0>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+448: guard_not_invalidated(descr=<Guard0x3da2f08>) [p0, p1]
+448: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+452: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x3da7100>) [p0, p1]
+470: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+474: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3da7160>) [p0, p1]
+492: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+496: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+500: i25 = int_eq(i23, i24)
+503: guard_false(i25, descr=<Guard0x3da2f50>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+509: p26 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+513: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3da71c0>) [p0, p1]
+531: i29 = int_ge(i24, 0)
+535: guard_true(i29, descr=<Guard0x3da2f98>) [p0, p1]
+541: i30 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+545: i31 = int_lt(i24, i30)
+548: guard_true(i31, descr=<Guard0x3da2fe0>) [p0, p1]
+554: p32 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+558: guard_class(p32, 16622984, descr=<Guard0x3da3028>) [p0, p1]
+571: p34 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+575: p35 = getarrayitem_gc_r(p34, i24, descr=<ArrayP 8>)
+580: guard_class(p35, 16470384, descr=<Guard0x3da3070>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+592: p37 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+596: guard_nonnull_class(p37, 16616448, descr=<Guard0x3da7220>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+621: i40 = instance_ptr_eq(p37, ConstPtr(ptr39))
+624: guard_true(i40, descr=<Guard0x3da30b8>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+630: p41 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+634: guard_nonnull_class(p41, ConstClass(W_Vector), descr=<Guard0x3da7280>) [p0, p1]
+653: p43 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+657: guard_nonnull_class(p43, ConstClass(W_Vector), descr=<Guard0x3da72e0>) [p0, p1]
+675: p45 = getfield_gc_r(p35, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+679: guard_nonnull_class(p45, ConstClass(W_Vector), descr=<Guard0x3da7340>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+697: p47 = getfield_gc_r(p35, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+701: guard_nonnull_class(p47, 16470384, descr=<Guard0x3da73a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+719: p49 = new_with_vtable(descr=<SizeDescr 32>)
+766: p50 = new_with_vtable(descr=<SizeDescr 40>)
+777: setfield_gc(p50, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+788: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+792: setfield_gc(p50, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+796: setfield_gc(p50, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+800: p52 = new_with_vtable(descr=<SizeDescr 48>)
+811: p53 = new_with_vtable(descr=<SizeDescr 32>)
+822: setfield_gc(p53, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+830: p56 = new_array_clear(4, descr=<ArrayP 8>)
+863: setarrayitem_gc(p56, 0, ConstPtr(ptr58), descr=<ArrayP 8>)
+867: setarrayitem_gc(p56, 1, p41, descr=<ArrayP 8>)
+871: setarrayitem_gc(p56, 2, p43, descr=<ArrayP 8>)
+875: setarrayitem_gc(p56, 3, p45, descr=<ArrayP 8>)
+879: setfield_gc(p53, p56, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+890: setfield_gc(p53, ConstPtr(ptr62), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+894: setfield_gc(p49, p50, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+905: setfield_gc(p52, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+909: setfield_gc(p49, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+913: setfield_gc(p49, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+917: setfield_gc(p52, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+921: setfield_gc(p52, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+932: setfield_gc(p52, ConstPtr(ptr63), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+936: setfield_gc(p52, p53, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+940: jump(p49, p52, descr=TargetToken(59469520))
+976: --end of the loop--
[3e4c22b06235522] jit-log-opt-bridge}
[3e4c22b0645f6b7] {jit-backend
[3e4c22b064b42cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e10b
[3e4c22b064bb14d] jit-backend-dump}
[3e4c22b064c600c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1144 +0  28000000
[3e4c22b064c7441] jit-backend-dump}
[3e4c22b064cb4a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1305 +0  28000000
[3e4c22b064cc2a0] jit-backend-dump}
[3e4c22b064cf818] {jit-backend-addr
bridge out of Guard 0x39094c0 has address 0x7f4a5c1e1140 to 0x7f4a5c1e1300
       gc table: 0x7f4a5c1e10b0
    jump target: 0x7f4a5c1e1140
         resops: 0x7f4a5c1e114e
       failures: 0x7f4a5c1e1300
            end: 0x7f4a5c1e14cb
[3e4c22b064d1b42] jit-backend-addr}
[3e4c22b064d5276] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e115e +0  E1010000
[3e4c22b064d60c3] jit-backend-dump}
[3e4c22b064d9550] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1175 +0  E6010000
[3e4c22b064da27e] jit-backend-dump}
[3e4c22b064dd726] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1185 +0  F2010000
[3e4c22b064de401] jit-backend-dump}
[3e4c22b064e1744] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1191 +0  02020000
[3e4c22b064e243a] jit-backend-dump}
[3e4c22b064e5795] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e11a8 +0  07020000
[3e4c22b064e64b4] jit-backend-dump}
[3e4c22b064e9981] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e11ba +0  11020000
[3e4c22b064ea665] jit-backend-dump}
[3e4c22b064ed9ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e11ce +0  19020000
[3e4c22b064ee698] jit-backend-dump}
[3e4c22b064f191a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e11e7 +0  1C020000
[3e4c22b064f25f5] jit-backend-dump}
[3e4c22b064f59a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e11fe +0  3D020000
[3e4c22b064f668d] jit-backend-dump}
[3e4c22b064f9940] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1214 +0  43020000
[3e4c22b064fa603] jit-backend-dump}
[3e4c22b064fd860] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1225 +0  4E020000
[3e4c22b064fe53b] jit-backend-dump}
[3e4c22b065017c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e123c +0  53020000
[3e4c22b0650248c] jit-backend-dump}
[3e4c22b065056ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1252 +0  59020000
[3e4c22b06506393] jit-backend-dump}
[3e4c22b06509801] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c864b +0  F18A0100
[3e4c22b0650a526] jit-backend-dump}
[3e4c22b0650e6ac] jit-backend}
[3e4c22b065122df] {jit-log-opt-bridge
# bridge out of Guard 0x39094c0 with 56 ops
[p0, p1]
+166: guard_class(p1, 16500016, descr=<Guard0x3da7400>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+182: guard_nonnull_class(p3, 16470384, descr=<Guard0x3da7460>) [p0, p1]
+208: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+211: guard_false(i6, descr=<Guard0x3da3100>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+217: guard_class(p0, 16437896, descr=<Guard0x3da3148>) [p0, p1]
+229: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+233: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3da74c0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+252: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+256: guard_class(p10, 16479200, descr=<Guard0x3da3190>) [p0, p1]
+270: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+281: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3da31d8>) [p0, p1]
+290: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+294: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+298: p16 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+302: guard_class(p16, 16505296, descr=<Guard0x3da3220>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+315: guard_not_invalidated(descr=<Guard0x3da3268>) [p0, p1]
+315: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+319: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x3da7520>) [p0, p1]
+338: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+342: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3da7580>) [p0, p1]
+360: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+364: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+368: i24 = int_eq(i22, i23)
+371: guard_true(i24, descr=<Guard0x3da32b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+377: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+381: guard_nonnull_class(p25, 16616448, descr=<Guard0x3da75e0>) [p0, p1]
+400: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+404: guard_nonnull_class(p27, 16470384, descr=<Guard0x3da7640>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+422: p29 = new_with_vtable(descr=<SizeDescr 32>)
+469: p30 = new_with_vtable(descr=<SizeDescr 56>)
+480: p31 = new_with_vtable(descr=<SizeDescr 48>)
+491: setfield_gc(p31, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+502: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+506: setfield_gc(p31, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+510: setfield_gc(p31, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+514: setfield_gc(p31, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+518: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+522: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+526: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+530: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+534: setfield_gc(p30, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+538: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+549: setfield_gc(p30, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+553: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+557: setfield_gc(p30, p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+561: jump(p29, p30, descr=TargetToken(59470000))
+592: --end of the loop--
[3e4c22b06540400] jit-log-opt-bridge}
[3e4c22b066e86d3] {jit-backend
[3e4c22b067333ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e
[3e4c22b0673bb65] jit-backend-dump}
[3e4c22b067465a0] {jit-backend-addr
Loop 67 ((loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)) has address 0x7f4a5c1e173d to 0x7f4a5c1e1930 (bootstrap 0x7f4a5c1e16b0)
       gc table: 0x7f4a5c1e1610
       function: 0x7f4a5c1e16b0
         resops: 0x7f4a5c1e173d
       failures: 0x7f4a5c1e1930
            end: 0x7f4a5c1e1b3a
[3e4c22b067490db] jit-backend-addr}
[3e4c22b0674d5f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1754 +0  EA010000
[3e4c22b0674e797] jit-backend-dump}
[3e4c22b06751da2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e176a +0  F0010000
[3e4c22b06752bb5] jit-backend-dump}
[3e4c22b06755f44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1780 +0  F6010000
[3e4c22b06756c7e] jit-backend-dump}
[3e4c22b0675a0d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1796 +0  FC010000
[3e4c22b0675ae48] jit-backend-dump}
[3e4c22b0675e1f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e17aa +0  04020000
[3e4c22b0675ef51] jit-backend-dump}
[3e4c22b06762320] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e17bd +0  0D020000
[3e4c22b06763067] jit-backend-dump}
[3e4c22b067663d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e17d3 +0  13020000
[3e4c22b067670d4] jit-backend-dump}
[3e4c22b0676a3e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e17f5 +0  0D020000
[3e4c22b0676b0c7] jit-backend-dump}
[3e4c22b0676e54d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e180c +0  2E020000
[3e4c22b0676f22c] jit-backend-dump}
[3e4c22b06772586] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1820 +0  36020000
[3e4c22b0677326b] jit-backend-dump}
[3e4c22b0677657c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1839 +0  39020000
[3e4c22b06777282] jit-backend-dump}
[3e4c22b0677a544] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e184c +0  42020000
[3e4c22b0677b207] jit-backend-dump}
[3e4c22b0677e473] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1856 +0  54020000
[3e4c22b0677f12d] jit-backend-dump}
[3e4c22b0678238a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e186a +0  5C020000
[3e4c22b0678302b] jit-backend-dump}
[3e4c22b0678628e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e187a +0  68020000
[3e4c22b06786f32] jit-backend-dump}
[3e4c22b0678a180] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1896 +0  68020000
[3e4c22b0678ae3d] jit-backend-dump}
[3e4c22b0678e0b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e18b3 +0  67020000
[3e4c22b0678ed50] jit-backend-dump}
[3e4c22b06792b69] jit-backend}
[3e4c22b067969a0] {jit-log-opt-loop
# Loop 67 ((loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)) : entry bridge with 52 ops
[p0, p1]
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)')
+309: guard_class(p0, 16500368, descr=<Guard0x3da76a0>) [p1, p0]
+328: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+332: guard_nonnull_class(p3, 16479200, descr=<Guard0x3da7700>) [p1, p0]
+350: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+354: guard_nonnull_class(p5, 16470384, descr=<Guard0x3da7760>) [p1, p0]
+372: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+376: guard_nonnull_class(p7, 16470384, descr=<Guard0x3da77c0>) [p1, p0]
+394: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+405: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3da32f8>) [p1, p0]
+414: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+414: guard_class(p1, 16437896, descr=<Guard0x3da3340>) [p1, p0]
+433: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+437: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3da7820>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+455: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+459: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+463: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+467: p18 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+471: p19 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+475: guard_class(p19, 16505296, descr=<Guard0x3da3388>) [p1, p0]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+489: guard_not_invalidated(descr=<Guard0x3da33d0>) [p1, p0]
+489: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+493: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3da7880>) [p1, p0]
+512: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x3da78e0>) [p1, p0]
+532: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+536: i25 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+548: i26 = int_eq(i24, i25)
+551: guard_false(i26, descr=<Guard0x3da3418>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+557: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x3da7940>) [p1, p0]
+576: i29 = int_ge(i25, 0)
+580: guard_true(i29, descr=<Guard0x3da3460>) [p1, p0]
+586: i30 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+597: i31 = int_lt(i25, i30)
+600: guard_true(i31, descr=<Guard0x3da34a8>) [p1, p0]
+606: p32 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+610: guard_class(p32, 16622984, descr=<Guard0x3da34f0>) [p1, p0]
+622: p34 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+626: p35 = getarrayitem_gc_r(p34, i25, descr=<ArrayP 8>)
+638: guard_class(p35, 16470384, descr=<Guard0x3da3538>) [p1, p0]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+650: p37 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+661: guard_nonnull_class(p37, 16470384, descr=<Guard0x3da79a0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+679: jump(p3, p37, p7, p13, p19, p1, p15, p16, p17, p5, p18, p35, p18, p17, p16, p15, p19, p21, i24, descr=TargetToken(61027200))
+800: --end of the loop--
[3e4c22b067c46c4] jit-log-opt-loop}
[3e4c22b0699c122] {jit-backend
[3e4c22b06a00f8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1cb0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8202000048FF0425A075D1038139700B01000F85000000004C8B71104D85F60F84000000004C8B2D0AFFFFFF4D39EE0F85000000004C8B69184983FD01720841817D00B09700000F850000000041813FC81800000F85000000004D8B77204C8B25F1FEFFFF4D39E60F85000000004D8B67284D8B77304D8B57184983FC01720841813C2430B700000F85000000004983FE01720741813EB09700000F85000000004D8B4C24104C8B05D1FEFFFF4D39C10F850000000041813AC81800000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B4C24184983F9017207418139B09700000F8500000000498B79084883FF017206813F382300000F85000000004D8B4C24204983F9017207418139B09700000F8500000000498B71084883FE017206813EF08C00000F85000000004D8B4C24284983F9017207418139B09700000F8500000000498B59084883FB017206813BF08C00000F85000000004D8B4E084983F9017207418139F08C00000F8500000000498B542408498B46104883F8017206813840D202000F85000000004989D7488B0C25F091F900488D91A8000000483B14251092F9000F87F600000048891425F091F90048C701700B0100488D512048C702A81600004C8D723049C706F08C000049C746080500000048898D30010000498D4E2048C701080E000048C741080500000048899538010000488B15D3FDFFFF488951104889791848897120488959284C89493049894E10488B0DBCFDFFFF49894E18488B8D30010000488941104C8969184C8B2DAAFDFFFF488B85380100004C8968204C8978104C8950184C8940084C8961084C89702848898D300100004889853801000049BBD0661C5C4A7F000041FFE30F1F84000000000048C7442408FFFFFF0049BB501B1E5C4A7F00004C895D204D8D9BA027FEFF41FFD3E958FDFFFF49BBA01C1E5C4A7F00004C895D204D8D9B502EFEFF41FFD3E9F5FEFFFFFF3557FCFFFF49BB601B1E5C4A7F000041534D8D9BA024FEFF41FFE3FF3543FCFFFF49BB701B1E5C4A7F000041534D8D9B9024FEFF41FFE3FF3537FCFFFF49BB801B1E5C4A7F000041534D8D9B8024FEFF41FFE3FF3523FCFFFF49BB901B1E5C4A7F000041534D8D9B7024FEFF41FFE3FF350FFCFFFF49BBA01B1E5C4A7F000041534D8D9B6024FEFF41FFE3FF3503FCFFFF49BBB01B1E5C4A7F000041534D8D9B5024FEFF41FFE3FF35EFFBFFFF49BBC01B1E5C4A7F000041534D8D9B4024FEFF41FFE3FF35DBFBFFFF49BBD01B1E5C4A7F000041534D8D9B3024FEFF41FFE3FF35C7FBFFFF49BBE01B1E5C4A7F000041534D8D9B2024FEFF41FFE3FF35BBFBFFFF49BBF01B1E5C4A7F000041534D8D9B1024FEFF41FFE3FF35A7FBFFFF49BB001C1E5C4A7F000041534D8D9B0024FEFF41FFE3FF3593FBFFFF49BB101C1E5C4A7F000041534D8D9BF023FEFF41FFE3FF357FFBFFFF49BB201C1E5C4A7F000041534D8D9BE023FEFF41FFE3FF356BFBFFFF49BB301C1E5C4A7F000041534D8D9BD023FEFF41FFE3FF3557FBFFFF49BB401C1E5C4A7F000041534D8D9BC023FEFF41FFE3FF3543FBFFFF49BB501C1E5C4A7F000041534D8D9BB023FEFF41FFE3FF352FFBFFFF49BB601C1E5C4A7F000041534D8D9BA023FEFF41FFE3FF351BFBFFFF49BB701C1E5C4A7F000041534D8D9B9023FEFF41FFE3FF3507FBFFFF49BB801C1E5C4A7F000041534D8D9B8023FEFF41FFE3FF35F3FAFFFF49BB901C1E5C4A7F000041534D8D9B7023FEFF41FFE3
[3e4c22b06a0a02c] jit-backend-dump}
[3e4c22b06a14bf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1d84 +0  28000000
[3e4c22b06a1615b] jit-backend-dump}
[3e4c22b06a1a26d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2015 +0  28000000
[3e4c22b06a1b178] jit-backend-dump}
[3e4c22b06a1e81f] {jit-backend-addr
bridge out of Guard 0x3be11c0 has address 0x7f4a5c1e1d80 to 0x7f4a5c1e2010
       gc table: 0x7f4a5c1e1cb0
    jump target: 0x7f4a5c1e1d80
         resops: 0x7f4a5c1e1d8e
       failures: 0x7f4a5c1e2010
            end: 0x7f4a5c1e2283
[3e4c22b06a20ca0] jit-backend-addr}
[3e4c22b06a24445] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1d9e +0  B1020000
[3e4c22b06a252a5] jit-backend-dump}
[3e4c22b06a2869c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1dab +0  C0020000
[3e4c22b06a29383] jit-backend-dump}
[3e4c22b06a2c752] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1dbb +0  CC020000
[3e4c22b06a2d437] jit-backend-dump}
[3e4c22b06a30736] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1dd3 +0  D0020000
[3e4c22b06a313be] jit-backend-dump}
[3e4c22b06a3466b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1de0 +0  DF020000
[3e4c22b06a352fa] jit-backend-dump}
[3e4c22b06a38569] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1df4 +0  E7020000
[3e4c22b06a391e2] jit-backend-dump}
[3e4c22b06a3c91c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1e14 +0  FF020000
[3e4c22b06a3d610] jit-backend-dump}
[3e4c22b06a409e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1e27 +0  08030000
[3e4c22b06a41690] jit-backend-dump}
[3e4c22b06a4490e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1e3c +0  0F030000
[3e4c22b06a455d1] jit-backend-dump}
[3e4c22b06a48831] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1e49 +0  1E030000
[3e4c22b06a494c9] jit-backend-dump}
[3e4c22b06a4c73e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1e60 +0  23030000
[3e4c22b06a4d3be] jit-backend-dump}
[3e4c22b06a505fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1e78 +0  27030000
[3e4c22b06a512aa] jit-backend-dump}
[3e4c22b06a54733] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1e8e +0  2D030000
[3e4c22b06a553f3] jit-backend-dump}
[3e4c22b06a5877f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1ea6 +0  31030000
[3e4c22b06a59429] jit-backend-dump}
[3e4c22b06a5c69f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1ebc +0  37030000
[3e4c22b06a5d35e] jit-backend-dump}
[3e4c22b06a605f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1ed4 +0  3B030000
[3e4c22b06a61333] jit-backend-dump}
[3e4c22b06a645a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1eea +0  41030000
[3e4c22b06a652d0] jit-backend-dump}
[3e4c22b06a68491] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1f01 +0  46030000
[3e4c22b06a69194] jit-backend-dump}
[3e4c22b06a6c389] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1f1c +0  47030000
[3e4c22b06a6d095] jit-backend-dump}
[3e4c22b06a70525] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4ebc +0  C0CE0000
[3e4c22b06a71262] jit-backend-dump}
[3e4c22b06a75374] jit-backend}
[3e4c22b06a78fd8] {jit-log-opt-bridge
# bridge out of Guard 0x3be11c0 with 67 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x3da7a00>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x3da35c8>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x3da3610>) [p0, p1]
debug_merge_point(0, 0, 'lst5109')
+271: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+275: guard_nonnull_class(p6, 16470384, descr=<Guard0x3da7a60>) [p0, p1]
+295: guard_class(p0, 16437896, descr=<Guard0x3da3658>) [p0, p1]
+308: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+319: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3da36a0>) [p0, p1]
+328: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+328: guard_not_invalidated(descr=<Guard0x3da36e8>) [p0, p1]
+328: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+332: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+336: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (loop45105 (cdr rads35107) lst5109)')
+340: guard_nonnull_class(p12, 16478448, descr=<Guard0x3da7ac0>) [p0, p1]
+360: guard_nonnull_class(p13, 16470384, descr=<Guard0x3da7b20>) [p0, p1]
+379: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+391: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3da3730>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+400: guard_class(p14, 16437896, descr=<Guard0x3da3778>) [p0, p1]
+413: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+417: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3da7b80>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+436: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+441: guard_nonnull_class(p22, 16470384, descr=<Guard0x3da7be0>) [p0, p1]
+460: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+464: guard_nonnull_class(p24, ConstClass(W_Symbol), descr=<Guard0x3da7c40>) [p0, p1]
+482: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+487: guard_nonnull_class(p26, 16470384, descr=<Guard0x3da7ca0>) [p0, p1]
+506: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+510: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x3da7d00>) [p0, p1]
+528: p30 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+533: guard_nonnull_class(p30, 16470384, descr=<Guard0x3da7d60>) [p0, p1]
+552: p32 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+556: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x3da7dc0>) [p0, p1]
+574: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+578: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x3da7e20>) [p0, p1]
+597: p36 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+602: p37 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+606: guard_nonnull_class(p37, 16616448, descr=<Guard0x3da7e80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+624: p39 = new_with_vtable(descr=<SizeDescr 32>)
+671: p40 = new_with_vtable(descr=<SizeDescr 48>)
+682: p41 = new_with_vtable(descr=<SizeDescr 32>)
+693: setfield_gc(p41, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+701: p44 = new_array_clear(5, descr=<ArrayP 8>)
+741: setarrayitem_gc(p44, 0, ConstPtr(ptr46), descr=<ArrayP 8>)
+745: setarrayitem_gc(p44, 1, p24, descr=<ArrayP 8>)
+749: setarrayitem_gc(p44, 2, p28, descr=<ArrayP 8>)
+753: setarrayitem_gc(p44, 3, p32, descr=<ArrayP 8>)
+757: setarrayitem_gc(p44, 4, p34, descr=<ArrayP 8>)
+761: setfield_gc(p41, p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+772: setfield_gc(p41, ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+776: setfield_gc(p39, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+787: setfield_gc(p39, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+798: setfield_gc(p40, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+809: setfield_gc(p40, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+813: setfield_gc(p40, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+817: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+821: setfield_gc(p39, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+825: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+829: jump(p39, p40, descr=TargetToken(59469840))
+864: --end of the loop--
[3e4c22b06ab2773] jit-log-opt-bridge}
[3e4c22b06dc48a0] {jit-backend
[3e4c22b06e255d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e23b
[3e4c22b06e2d389] jit-backend-dump}
[3e4c22b06e38194] {jit-backend-addr
Loop 69 ((if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)) has address 0x7f4a5c1e24dd to 0x7f4a5c1e26f0 (bootstrap 0x7f4a5c1e2450)
       gc table: 0x7f4a5c1e23b0
       function: 0x7f4a5c1e2450
         resops: 0x7f4a5c1e24dd
       failures: 0x7f4a5c1e26f0
            end: 0x7f4a5c1e28c3
[3e4c22b06e3b144] jit-backend-addr}
[3e4c22b06e3f8a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e24f4 +0  27020000
[3e4c22b06e40cd0] jit-backend-dump}
[3e4c22b06e444a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e250a +0  2D020000
[3e4c22b06e45337] jit-backend-dump}
[3e4c22b06e48866] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e251a +0  39020000
[3e4c22b06e495be] jit-backend-dump}
[3e4c22b06e4c8f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e252d +0  42020000
[3e4c22b06e4d61c] jit-backend-dump}
[3e4c22b06e508f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2543 +0  48020000
[3e4c22b06e51606] jit-backend-dump}
[3e4c22b06e54a43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2553 +0  70020000
[3e4c22b06e557ab] jit-backend-dump}
[3e4c22b06e58acc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2567 +0  78020000
[3e4c22b06e59809] jit-backend-dump}
[3e4c22b06e5ca54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e257e +0  7D020000
[3e4c22b06e5d76c] jit-backend-dump}
[3e4c22b06e609c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2594 +0  83020000
[3e4c22b06e616cf] jit-backend-dump}
[3e4c22b06e64972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e25ab +0  88020000
[3e4c22b06e65682] jit-backend-dump}
[3e4c22b06e68903] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e25c2 +0  8D020000
[3e4c22b06e69613] jit-backend-dump}
[3e4c22b06e6c8b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e25d9 +0  92020000
[3e4c22b06e6d5ce] jit-backend-dump}
[3e4c22b06e70813] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e25f5 +0  92020000
[3e4c22b06e7152e] jit-backend-dump}
[3e4c22b06e74782] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e260b +0  98020000
[3e4c22b06e754de] jit-backend-dump}
[3e4c22b06e792e4] jit-backend}
[3e4c22b06e7d471] {jit-log-opt-loop
# Loop 69 ((if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)) : entry bridge with 53 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
+309: guard_class(p0, 16500016, descr=<Guard0x3da7ee0>) [p1, p0]
+328: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+332: guard_nonnull_class(p3, 16470384, descr=<Guard0x3da7f40>) [p1, p0]
+357: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+360: guard_false(i6, descr=<Guard0x3da3808>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+366: guard_class(p1, 16437896, descr=<Guard0x3da3850>) [p1, p0]
+385: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+389: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3da7fa0>) [p1, p0]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+407: guard_not_invalidated(descr=<Guard0x3da3898>) [p1, p0]
+407: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+411: guard_class(p10, 16478072, descr=<Guard0x3da38e0>) [p1, p0]
+423: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+434: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3da3928>) [p1, p0]
+443: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+447: guard_nonnull_class(p14, 16470384, descr=<Guard0x3dfe020>) [p1, p0]
+466: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+470: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x3dfe080>) [p1, p0]
+488: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+492: guard_nonnull_class(p18, 16470384, descr=<Guard0x3dfe0e0>) [p1, p0]
+511: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+515: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x3dfe140>) [p1, p0]
+534: p22 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+538: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x3dfe1a0>) [p1, p0]
+557: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+561: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+565: guard_nonnull_class(p25, 16616448, descr=<Guard0x3dfe200>) [p1, p0]
+585: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+589: guard_nonnull_class(p27, 16470384, descr=<Guard0x3dfe260>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+607: p29 = new_with_vtable(descr=<SizeDescr 32>)
+654: p30 = new_with_vtable(descr=<SizeDescr 48>)
+665: p31 = new_with_vtable(descr=<SizeDescr 32>)
+676: setfield_gc(p31, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+684: p34 = new_array_clear(4, descr=<ArrayP 8>)
+717: setarrayitem_gc(p34, 0, ConstPtr(ptr36), descr=<ArrayP 8>)
+721: setarrayitem_gc(p34, 1, p16, descr=<ArrayP 8>)
+725: setarrayitem_gc(p34, 2, p20, descr=<ArrayP 8>)
+729: setarrayitem_gc(p34, 3, p22, descr=<ArrayP 8>)
+733: setfield_gc(p31, p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+744: setfield_gc(p31, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+748: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+759: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+763: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+767: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+771: setfield_gc(p30, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+775: setfield_gc(p30, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+786: setfield_gc(p30, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+790: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+794: jump(p29, p30, descr=TargetToken(59469520))
+832: --end of the loop--
[3e4c22b06eaccfd] jit-log-opt-loop}
[3e4c22b0708970e] {jit-backend
[3e4c22b07106e47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2a40 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8202000048FF04257076D1038139700B01000F85000000004C8B79104D85FF0F84000000004C8B35FAFEFFFF4D39F70F85000000004C8B79184983FF01720741813F40D202000F85000000004C8BAD3801000041817D00C81800000F85000000004D8B65204C8B15DAFEFFFF4D39D40F85000000004D8B55284D8B65304D8B4D184983FA01720741813AA8B800000F85000000004983FC01720841813C24B09700000F85000000004D8B4210488B3DBBFEFFFF4939F80F8500000000418139C81800000F8500000000498B79084883FF017206813F900F00000F85000000004D8B4220498B7208813E102001000F85000000004983F8017207418138B09700000F8500000000498B5A284883FB017206813B601400000F8500000000498B52304883FA017206813A601400000F85000000004C8B5308488B5A084939DA0F8500000000498B5C24104883FB017206813B40D202000F85000000004C39F30F85000000004D8B70084983FE01720741813EF08C00000F85000000004D8B5424084983FA01720741813AF08C00000F8500000000488B0C25F091F900488D91C8000000483B14251092F9000F87FD00000048891425F091F90048C701700B0100488D512048C702B8B50000488972084C8B2D02FEFFFF4C896A104C8942184C8962204C8D622849C70424A81600004D8D44243049C700F08C000049C74008040000004D8D682049C74500080E000049C7450804000000488B05C3FDFFFF498945104D8975184D8955204D8955284D8968104C8B2DB0FDFFFF4D896818488959104C8979184C8B3DA5FDFFFF4D897C242049897424104D894C241849897C2408488951084D8944242848898D300100004C89A53801000049BBC05A1C5C4A7F000041FFE30F1F44000048C7442408FFFFFF0049BBD0281E5C4A7F00004C895D204D8D9B201AFEFF41FFD3E958FDFFFF49BB302A1E5C4A7F00004C895D204D8D9BC020FEFF41FFD3E9EEFEFFFFFF3547FCFFFF49BBE0281E5C4A7F000041534D8D9B2017FEFF41FFE3FF3533FCFFFF49BBF0281E5C4A7F000041534D8D9B1017FEFF41FFE3FF3527FCFFFF49BB00291E5C4A7F000041534D8D9B0017FEFF41FFE3FF3513FCFFFF49BB10291E5C4A7F000041534D8D9BF016FEFF41FFE3FF35FFFBFFFF49BB20291E5C4A7F000041534D8D9BE016FEFF41FFE3FF35F3FBFFFF49BB30291E5C4A7F000041534D8D9BD016FEFF41FFE3FF35DFFBFFFF49BB40291E5C4A7F000041534D8D9BC016FEFF41FFE3FF35CBFBFFFF49BB50291E5C4A7F000041534D8D9BB016FEFF41FFE3FF35B7FBFFFF49BB60291E5C4A7F000041534D8D9BA016FEFF41FFE3FF35ABFBFFFF49BB70291E5C4A7F000041534D8D9B9016FEFF41FFE3FF3597FBFFFF49BB80291E5C4A7F000041534D8D9B8016FEFF41FFE3FF3583FBFFFF49BB90291E5C4A7F000041534D8D9B7016FEFF41FFE3FF356FFBFFFF49BBA0291E5C4A7F000041534D8D9B6016FEFF41FFE3FF355BFBFFFF49BBB0291E5C4A7F000041534D8D9B5016FEFF41FFE3FF3547FBFFFF49BBC0291E5C4A7F000041534D8D9B4016FEFF41FFE3FF3533FBFFFF49BBD0291E5C4A7F000041534D8D9B3016FEFF41FFE3FF351FFBFFFF49BBE0291E5C4A7F000041534D8D9B2016FEFF41FFE3FF350BFBFFFF49BBF0291E5C4A7F000041534D8D9B1016FEFF41FFE3FF35F7FAFFFF49BB002A1E5C4A7F000041534D8D9B0016FEFF41FFE3FF35E3FAFFFF49BB102A1E5C4A7F000041534D8D9BF015FEFF41FFE3FF35CFFAFFFF49BB202A1E5C4A7F000041534D8D9BE015FEFF41FFE3
[3e4c22b07110071] jit-backend-dump}
[3e4c22b0711a6e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2b24 +0  25000000
[3e4c22b0711ba0a] jit-backend-dump}
[3e4c22b0711fa5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2db5 +0  25000000
[3e4c22b07120860] jit-backend-dump}
[3e4c22b07123e24] {jit-backend-addr
bridge out of Guard 0x3d7e860 has address 0x7f4a5c1e2b20 to 0x7f4a5c1e2db0
       gc table: 0x7f4a5c1e2a40
    jump target: 0x7f4a5c1e2b20
         resops: 0x7f4a5c1e2b2e
       failures: 0x7f4a5c1e2db0
            end: 0x7f4a5c1e303f
[3e4c22b07126215] jit-backend-addr}
[3e4c22b07129a4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2b3e +0  B1020000
[3e4c22b0712a83c] jit-backend-dump}
[3e4c22b0712dc70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2b4b +0  C0020000
[3e4c22b0712e9b0] jit-backend-dump}
[3e4c22b07131cdd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2b5b +0  CC020000
[3e4c22b071329f2] jit-backend-dump}
[3e4c22b07135cdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2b72 +0  D1020000
[3e4c22b071369eb] jit-backend-dump}
[3e4c22b07139cb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2b87 +0  D8020000
[3e4c22b0713a9b6] jit-backend-dump}
[3e4c22b0713dc97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2b9b +0  E0020000
[3e4c22b0713e9a6] jit-backend-dump}
[3e4c22b07141e7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2bba +0  F9020000
[3e4c22b07142b9b] jit-backend-dump}
[3e4c22b07145f4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2bce +0  01030000
[3e4c22b07146ca1] jit-backend-dump}
[3e4c22b07149f94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2be2 +0  09030000
[3e4c22b0714acb8] jit-backend-dump}
[3e4c22b0714dfb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2bef +0  18030000
[3e4c22b0714ece2] jit-backend-dump}
[3e4c22b07151ffd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2c05 +0  1E030000
[3e4c22b07152d2e] jit-backend-dump}
[3e4c22b0715600b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2c19 +0  26030000
[3e4c22b07156d05] jit-backend-dump}
[3e4c22b07159fbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2c2c +0  2F030000
[3e4c22b0715acbb] jit-backend-dump}
[3e4c22b0715df70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2c42 +0  35030000
[3e4c22b0715ec8f] jit-backend-dump}
[3e4c22b07161f54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2c58 +0  3B030000
[3e4c22b07162c3e] jit-backend-dump}
[3e4c22b07165f19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2c69 +0  46030000
[3e4c22b07166c2b] jit-backend-dump}
[3e4c22b07169efc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2c80 +0  4B030000
[3e4c22b0716ac0c] jit-backend-dump}
[3e4c22b0716df9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2c89 +0  5E030000
[3e4c22b0716ecc2] jit-backend-dump}
[3e4c22b07171f72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2ca0 +0  63030000
[3e4c22b07172c5f] jit-backend-dump}
[3e4c22b07175f12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2cb8 +0  67030000
[3e4c22b07176c1e] jit-backend-dump}
[3e4c22b0717a1ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca17 +0  05610000
[3e4c22b0717af17] jit-backend-dump}
[3e4c22b0717f16a] jit-backend}
[3e4c22b07182f7d] {jit-log-opt-bridge
# bridge out of Guard 0x3d7e860 with 86 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x3dfe2c0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x3da39b8>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x3da3a00>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16616448, descr=<Guard0x3dfe320>) [p0, p1]
+310: guard_class(p0, 16437896, descr=<Guard0x3da3a48>) [p0, p1]
+331: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+342: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3da3a90>) [p0, p1]
+351: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+351: guard_not_invalidated(descr=<Guard0x3da3ad8>) [p0, p1]
+351: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+355: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+359: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
+363: guard_nonnull_class(p12, 16478824, descr=<Guard0x3dfe380>) [p0, p1]
+382: guard_nonnull_class(p13, 16470384, descr=<Guard0x3dfe3e0>) [p0, p1]
+402: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+413: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3da3b20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+422: guard_class(p14, 16437896, descr=<Guard0x3da3b68>) [p0, p1]
+435: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+439: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3dfe440>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+457: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+461: p23 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+465: guard_class(p23, 16505296, descr=<Guard0x3da3bb0>) [p0, p1]
+477: guard_nonnull_class(p22, 16470384, descr=<Guard0x3dfe4a0>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+496: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+500: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3dfe500>) [p0, p1]
+518: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+522: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3dfe560>) [p0, p1]
+540: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+544: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+548: i32 = int_eq(i30, i31)
+551: guard_true(i32, descr=<Guard0x3da3bf8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+557: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+562: guard_nonnull_class(p33, 16616448, descr=<Guard0x3dfe5c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+580: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+583: guard_true(i36, descr=<Guard0x3da3c40>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+589: p37 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+593: guard_nonnull_class(p37, ConstClass(W_Vector), descr=<Guard0x3dfe620>) [p0, p1]
+612: p39 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+617: guard_nonnull_class(p39, ConstClass(W_Vector), descr=<Guard0x3dfe680>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+636: p41 = new_with_vtable(descr=<SizeDescr 32>)
+680: p42 = new_with_vtable(descr=<SizeDescr 40>)
+691: setfield_gc(p42, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+702: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+706: setfield_gc(p42, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+710: setfield_gc(p42, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+714: p44 = new_with_vtable(descr=<SizeDescr 48>)
+726: p45 = new_with_vtable(descr=<SizeDescr 32>)
+738: setfield_gc(p45, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+746: p48 = new_array_clear(4, descr=<ArrayP 8>)
+773: setarrayitem_gc(p48, 0, ConstPtr(ptr50), descr=<ArrayP 8>)
+777: setarrayitem_gc(p48, 1, p37, descr=<ArrayP 8>)
+781: setarrayitem_gc(p48, 2, p39, descr=<ArrayP 8>)
+785: setarrayitem_gc(p48, 3, p39, descr=<ArrayP 8>)
+789: setfield_gc(p45, p48, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+800: setfield_gc(p45, ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+804: setfield_gc(p41, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+808: setfield_gc(p41, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+819: setfield_gc(p44, ConstPtr(ptr55), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+824: setfield_gc(p44, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+829: setfield_gc(p44, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+834: setfield_gc(p44, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+839: setfield_gc(p41, p42, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+843: setfield_gc(p44, p45, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+848: jump(p41, p44, descr=TargetToken(59469520))
+880: --end of the loop--
[3e4c22b071c5b0e] jit-log-opt-bridge}
[3e4c22b0754520f] {jit-backend
[3e4c22b075a9a20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e31a
[3e4c22b075b158b] jit-backend-dump}
[3e4c22b075bc328] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3264 +0  28000000
[3e4c22b075bd77b] jit-backend-dump}
[3e4c22b075c1761] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3485 +0  28000000
[3e4c22b075c254a] jit-backend-dump}
[3e4c22b075c5b4f] {jit-backend-addr
bridge out of Guard 0x3be1280 has address 0x7f4a5c1e3260 to 0x7f4a5c1e3480
       gc table: 0x7f4a5c1e31a0
    jump target: 0x7f4a5c1e3260
         resops: 0x7f4a5c1e326e
       failures: 0x7f4a5c1e3480
            end: 0x7f4a5c1e36e1
[3e4c22b075c7e7c] jit-backend-addr}
[3e4c22b075cb4d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e327e +0  4B020000
[3e4c22b075cc2e7] jit-backend-dump}
[3e4c22b075cf83a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e328b +0  5A020000
[3e4c22b075d05ab] jit-backend-dump}
[3e4c22b075d3968] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e329b +0  66020000
[3e4c22b075d46c4] jit-backend-dump}
[3e4c22b075d7a2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e32b2 +0  6B020000
[3e4c22b075d86d2] jit-backend-dump}
[3e4c22b075dbab7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e32c6 +0  73020000
[3e4c22b075dc767] jit-backend-dump}
[3e4c22b075dfb1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e32da +0  7B020000
[3e4c22b075e07cb] jit-backend-dump}
[3e4c22b075e3fe1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e32fa +0  93020000
[3e4c22b075e4ce1] jit-backend-dump}
[3e4c22b075e820d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e330e +0  9B020000
[3e4c22b075e8f04] jit-backend-dump}
[3e4c22b075ec237] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3323 +0  A2020000
[3e4c22b075ecf2b] jit-backend-dump}
[3e4c22b075f01fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3330 +0  B1020000
[3e4c22b075f0ec5] jit-backend-dump}
[3e4c22b075f4112] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3347 +0  B6020000
[3e4c22b075f4db4] jit-backend-dump}
[3e4c22b075f80bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3362 +0  B7020000
[3e4c22b075f8d4b] jit-backend-dump}
[3e4c22b075fbfeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3379 +0  BC020000
[3e4c22b075fcc8f] jit-backend-dump}
[3e4c22b075ffee0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3390 +0  C1020000
[3e4c22b07600b59] jit-backend-dump}
[3e4c22b07603da1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e33a1 +0  CC020000
[3e4c22b07604a3c] jit-backend-dump}
[3e4c22b07607c86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e33b7 +0  D2020000
[3e4c22b07608906] jit-backend-dump}
[3e4c22b0760bb13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e33c1 +0  E4020000
[3e4c22b0760c796] jit-backend-dump}
[3e4c22b0760f9e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e33d4 +0  ED020000
[3e4c22b07610672] jit-backend-dump}
[3e4c22b07613b95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d55ad +0  AFDC0000
[3e4c22b07614830] jit-backend-dump}
[3e4c22b07618a22] jit-backend}
[3e4c22b0761c718] {jit-log-opt-bridge
# bridge out of Guard 0x3be1280 with 70 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x3dfe740>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull(p3, descr=<Guard0x3e12068>) [p0, p1]
+246: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+249: guard_true(i5, descr=<Guard0x3e12020>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
+255: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+259: guard_nonnull_class(p6, 16470384, descr=<Guard0x3dfe980>) [p0, p1]
+278: guard_class(p0, 16437896, descr=<Guard0x3da3fa0>) [p0, p1]
+298: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+309: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3da3f58>) [p0, p1]
+318: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+318: guard_not_invalidated(descr=<Guard0x3da3f10>) [p0, p1]
+318: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+322: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+326: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
+330: guard_nonnull_class(p12, 16479200, descr=<Guard0x3dfe920>) [p0, p1]
+350: guard_nonnull_class(p13, 16470384, descr=<Guard0x3dfe8c0>) [p0, p1]
+370: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+382: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3da3ec8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+391: guard_class(p14, 16437896, descr=<Guard0x3da3e80>) [p0, p1]
+404: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+408: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3dfe860>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+427: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+432: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+437: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+442: guard_class(p24, 16505296, descr=<Guard0x3da3e38>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+454: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+459: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3dfe800>) [p0, p1]
+477: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+482: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3dfe7a0>) [p0, p1]
+500: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+504: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+508: i32 = int_eq(i30, i31)
+511: guard_true(i32, descr=<Guard0x3da3df0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+517: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+521: guard_nonnull_class(p33, 16470384, descr=<Guard0x3dfea40>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+539: i36 = int_ge(i31, 0)
+543: guard_true(i36, descr=<Guard0x3dfeaa0>) [p6, p33, p12, p23, p22, p13, p14, p24, p20]
+549: i38 = int_le(i31, 9223372036854775806)
+562: guard_true(i38, descr=<Guard0x3dfeb00>) [p6, p33, p12, p23, p22, p13, p14, p24, p20]
+568: p39 = new_with_vtable(descr=<SizeDescr 32>)
+612: p40 = new_with_vtable(descr=<SizeDescr 56>)
+623: p41 = new_with_vtable(descr=<SizeDescr 48>)
+634: setfield_gc(p41, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+645: setfield_gc(p41, ConstPtr(ptr42), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+649: setfield_gc(p41, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+653: setfield_gc(p41, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+657: setfield_gc(p41, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+661: setfield_gc(p39, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+665: setfield_gc(p39, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+676: setfield_gc(p40, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+680: setfield_gc(p40, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+684: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+688: setfield_gc(p40, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+692: setfield_gc(p40, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+696: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+700: setfield_gc(p39, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+704: jump(p39, p40, descr=TargetToken(59470000))
+736: --end of the loop--
[3e4c22b07651e03] jit-log-opt-bridge}
[3e4c22b079039da] {jit-backend
[3e4c22b079508be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e
[3e4c22b07957e07] jit-backend-dump}
[3e4c22b07963093] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e38c4 +0  28000000
[3e4c22b079645e1] jit-backend-dump}
[3e4c22b07968a98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3ab5 +0  28000000
[3e4c22b07969a3f] jit-backend-dump}
[3e4c22b0796d20f] {jit-backend-addr
bridge out of Guard 0x3da2890 has address 0x7f4a5c1e38c0 to 0x7f4a5c1e3ab0
       gc table: 0x7f4a5c1e3820
    jump target: 0x7f4a5c1e38c0
         resops: 0x7f4a5c1e38ce
       failures: 0x7f4a5c1e3ab0
            end: 0x7f4a5c1e3cce
[3e4c22b0796f55b] jit-backend-addr}
[3e4c22b07972dcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e38de +0  F4010000
[3e4c22b07973bda] jit-backend-dump}
[3e4c22b0797720d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e38f5 +0  F9010000
[3e4c22b07977f1f] jit-backend-dump}
[3e4c22b0797b40b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e390c +0  FE010000
[3e4c22b0797c11d] jit-backend-dump}
[3e4c22b0797f658] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3924 +0  02020000
[3e4c22b0798034c] jit-backend-dump}
[3e4c22b079836ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3938 +0  0A020000
[3e4c22b07984415] jit-backend-dump}
[3e4c22b0798787d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3944 +0  1A020000
[3e4c22b0798854f] jit-backend-dump}
[3e4c22b0798b8fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e395b +0  1F020000
[3e4c22b0798c5e4] jit-backend-dump}
[3e4c22b0798f960] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3974 +0  22020000
[3e4c22b07990648] jit-backend-dump}
[3e4c22b07993b0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e398a +0  44020000
[3e4c22b079947ce] jit-backend-dump}
[3e4c22b07997c98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e39a0 +0  4A020000
[3e4c22b07998998] jit-backend-dump}
[3e4c22b0799bca7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e39b1 +0  55020000
[3e4c22b0799c954] jit-backend-dump}
[3e4c22b0799fcec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e39c7 +0  5B020000
[3e4c22b079a09af] jit-backend-dump}
[3e4c22b079a3cc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e39d1 +0  6D020000
[3e4c22b079a4986] jit-backend-dump}
[3e4c22b079a7e04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e39e5 +0  75020000
[3e4c22b079a8abd] jit-backend-dump}
[3e4c22b079abe58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e39f5 +0  81020000
[3e4c22b079acb0c] jit-backend-dump}
[3e4c22b079afead] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3a12 +0  80020000
[3e4c22b079b0b85] jit-backend-dump}
[3e4c22b079b4024] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3a30 +0  7E020000
[3e4c22b079b4d06] jit-backend-dump}
[3e4c22b079b83a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df6fe +0  BE410000
[3e4c22b079b90a7] jit-backend-dump}
[3e4c22b079bd1c5] jit-backend}
[3e4c22b079c0fcc] {jit-log-opt-bridge
# bridge out of Guard 0x3da2890 with 52 ops
[p0, p1]
+182: guard_class(p1, 16500368, descr=<Guard0x3dfeb60>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16479200, descr=<Guard0x3dfebc0>) [p0, p1]
+217: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+221: guard_nonnull_class(p5, 16470384, descr=<Guard0x3dfec20>) [p0, p1]
+240: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+244: guard_nonnull_class(p7, 16470384, descr=<Guard0x3dfec80>) [p0, p1]
+264: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+275: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3e120b0>) [p0, p1]
+284: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+284: guard_class(p0, 16437896, descr=<Guard0x3e120f8>) [p0, p1]
+296: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3dfece0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+319: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+323: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+327: p17 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+331: guard_class(p17, 16505296, descr=<Guard0x3e12140>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+344: guard_not_invalidated(descr=<Guard0x3e12188>) [p0, p1]
+344: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+348: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x3dfed40>) [p0, p1]
+366: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+370: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3dfeda0>) [p0, p1]
+388: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+392: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+396: i25 = int_eq(i23, i24)
+399: guard_false(i25, descr=<Guard0x3e121d0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+405: p26 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+409: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3dfee00>) [p0, p1]
+427: i29 = int_ge(i24, 0)
+431: guard_true(i29, descr=<Guard0x3e12218>) [p0, p1]
+437: i30 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+448: i31 = int_lt(i24, i30)
+451: guard_true(i31, descr=<Guard0x3e12260>) [p0, p1]
+457: p32 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+461: guard_class(p32, 16622984, descr=<Guard0x3e122a8>) [p0, p1]
+473: p34 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+477: p35 = getarrayitem_gc_r(p34, i24, descr=<ArrayP 8>)
+489: guard_class(p35, 16470384, descr=<Guard0x3e122f0>) [p0, p1]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+502: p37 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+513: guard_nonnull_class(p37, 16470384, descr=<Guard0x3dfee60>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+532: i39 = arraylen_gc(p34, descr=<ArrayP 8>)
+532: jump(p3, p37, p7, p13, p17, p0, p15, p16, p5, p35, p16, p15, p17, p19, p21, p26, p34, i24, descr=TargetToken(59470080))
+656: --end of the loop--
[3e4c22b079f1d16] jit-log-opt-bridge}
[3e4c22b07f61909] {jit-backend
[3e4c22b08041c8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3ed
[3e4c22b0804da96] jit-backend-dump}
[3e4c22b08058f36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4014 +0  25000000
[3e4c22b0805a591] jit-backend-dump}
[3e4c22b0805e9da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4515 +0  25000000
[3e4c22b0805f96c] jit-backend-dump}
[3e4c22b08063277] {jit-backend-addr
bridge out of Guard 0x3917c40 has address 0x7f4a5c1e4010 to 0x7f4a5c1e4510
       gc table: 0x7f4a5c1e3ed0
    jump target: 0x7f4a5c1e4010
         resops: 0x7f4a5c1e401e
       failures: 0x7f4a5c1e4510
            end: 0x7f4a5c1e48af
[3e4c22b08065637] jit-backend-addr}
[3e4c22b08069156] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e402e +0  6D050000
[3e4c22b08069f9a] jit-backend-dump}
[3e4c22b0806d79b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e403b +0  7C050000
[3e4c22b0806e503] jit-backend-dump}
[3e4c22b08071b8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e404b +0  88050000
[3e4c22b08072873] jit-backend-dump}
[3e4c22b08075d3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4062 +0  8D050000
[3e4c22b08076a0f] jit-backend-dump}
[3e4c22b08079e92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4077 +0  94050000
[3e4c22b0807ab6b] jit-backend-dump}
[3e4c22b0807df58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e408b +0  9C050000
[3e4c22b0807ec43] jit-backend-dump}
[3e4c22b08082621] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e40a2 +0  BD050000
[3e4c22b080832d1] jit-backend-dump}
[3e4c22b080867fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e40b4 +0  C7050000
[3e4c22b080874c0] jit-backend-dump}
[3e4c22b0808aa47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e40c9 +0  CE050000
[3e4c22b0808b75d] jit-backend-dump}
[3e4c22b0808ec58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e40df +0  D4050000
[3e4c22b0808f905] jit-backend-dump}
[3e4c22b08092d05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e40f7 +0  D8050000
[3e4c22b080939e3] jit-backend-dump}
[3e4c22b08096daf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4104 +0  E7050000
[3e4c22b08097a3b] jit-backend-dump}
[3e4c22b0809ad90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4114 +0  F3050000
[3e4c22b0809ba06] jit-backend-dump}
[3e4c22b0809ee5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4128 +0  FB050000
[3e4c22b0809fad8] jit-backend-dump}
[3e4c22b080a2ecf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e413e +0  01060000
[3e4c22b080a3b4f] jit-backend-dump}
[3e4c22b080a6f2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4152 +0  09060000
[3e4c22b080a7ba6] jit-backend-dump}
[3e4c22b080aaf9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e415c +0  1B060000
[3e4c22b080abc0a] jit-backend-dump}
[3e4c22b080aefe6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4169 +0  2A060000
[3e4c22b080afc56] jit-backend-dump}
[3e4c22b080b2fdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4193 +0  1C060000
[3e4c22b080b3c64] jit-backend-dump}
[3e4c22b080b700c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e420e +0  BD050000
[3e4c22b080b7c8e] jit-backend-dump}
[3e4c22b080bb023] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e42a2 +0  45050000
[3e4c22b080bbcbb] jit-backend-dump}
[3e4c22b080bf025] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e42af +0  54050000
[3e4c22b080bfca8] jit-backend-dump}
[3e4c22b080c3003] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e42c5 +0  5A050000
[3e4c22b080c3c8e] jit-backend-dump}
[3e4c22b080c7020] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e42d9 +0  62050000
[3e4c22b080c7ca3] jit-backend-dump}
[3e4c22b080cb02c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e42ee +0  69050000
[3e4c22b080cbc9c] jit-backend-dump}
[3e4c22b080cf031] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4301 +0  72050000
[3e4c22b080cfcb6] jit-backend-dump}
[3e4c22b080d3036] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4351 +0  3E050000
[3e4c22b080d3cc2] jit-backend-dump}
[3e4c22b080d72fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc2a2 +0  6A7D0100
[3e4c22b080d7f9f] jit-backend-dump}
[3e4c22b080dc298] jit-backend}
[3e4c22b080e0162] {jit-log-opt-bridge
# bridge out of Guard 0x3917c40 with 172 ops
[p0, p1]
+342: guard_class(p1, 16500016, descr=<Guard0x3dfeec0>) [p0, p1]
+354: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+358: guard_nonnull(p3, descr=<Guard0x3e12380>) [p0, p1]
+374: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+377: guard_true(i5, descr=<Guard0x3e123c8>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+383: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+387: guard_nonnull_class(p6, 16616448, descr=<Guard0x3dfef20>) [p0, p1]
+406: guard_class(p0, 16437352, descr=<Guard0x3e12410>) [p0, p1]
+427: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+438: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3e12458>) [p0, p1]
+447: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+447: guard_not_invalidated(descr=<Guard0x3e124a0>) [p0, p1]
+447: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+451: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3dfef80>) [p0, p1]
+470: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+474: guard_class(p14, 16435920, descr=<Guard0x3e124e8>) [p0, p1]
+488: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+500: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3e12530>) [p0, p1]
+509: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+514: p19 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+519: guard_class(p19, 16435920, descr=<Guard0x3e12578>) [p0, p1]
+531: p21 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+535: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x3dfefe0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! radicals i AppRand29) from (cons AppRand1 AppRand2)')
+555: guard_class(p18, 16504944, descr=<Guard0x3e125c0>) [p0, p1]
+568: p24 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+572: guard_class(p24, 16479576, descr=<Guard0x3e12608>) [p0, p1]
+584: p26 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+595: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x3e12650>) [p0, p1]
+604: p28 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+608: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x3dff040>) [p0, p1]
+626: i30 = getfield_gc_i(p18, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+630: p31 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+634: guard_class(p31, 16693360, descr=<Guard0x3e12698>) [p0, p1]
+646: i34 = int_ge(i30, 0)
+650: guard_true(i34, descr=<Guard0x3e126e0>) [p0, p1]
+656: i35 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+660: i36 = int_lt(i30, i35)
+663: guard_true(i36, descr=<Guard0x3e12728>) [p0, p1]
+669: p37 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+680: p39 = getarrayitem_gc_pure_r(p37, 0, descr=<ArrayP 8>)
+692: guard_nonnull_class(p39, 16470384, descr=<Guard0x3dff0a0>) [p0, p1]
+711: p42 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), i35, p39, descr=<Callr 8 ir EF=5>)
+819: guard_no_exception(descr=<Guard0x3dff100>) [i30, p28, p42, p6, p12, p19, p18, p21]
+834: p43 = new_with_vtable(descr=<SizeDescr 24>)
+878: setfield_gc(p43, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+889: setfield_gc(p43, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+910: setarrayitem_gc(p42, i30, p43, descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand30 (+ i 1)]) (loop AppRand30))')
debug_merge_point(0, 0, '(+ i 1)')
+915: i45 = int_add(i30, 1)
debug_merge_point(0, 0, '(loop AppRand30)')
debug_merge_point(0, 0, '(let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))) from (loop AppRand30)')
debug_merge_point(0, 0, '(> i n/2)')
+919: p46 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+955: setfield_gc(p28, ConstPtr(ptr47), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+959: setfield_gc(p28, p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+963: guard_nonnull_class(p46, ConstClass(W_Fixnum), descr=<Guard0x3dff160>) [p46, p24, i45, None, None, p19, None, p21]
+982: i50 = getfield_gc_i(p46, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+986: i51 = int_gt(i45, i50)
+989: guard_false(i51, descr=<Guard0x3e12770>) [p46, p24, i45, None, None, p19, None, p21]
debug_merge_point(0, 0, '(if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))')
debug_merge_point(0, 0, '(let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30)))')
debug_merge_point(0, 0, '(rads-of-size i)')
+995: p52 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+999: guard_nonnull_class(p52, 16477696, descr=<Guard0x3dff1c0>) [p46, p24, i45, None, None, p19, None, p21]
+1017: p54 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1028: guard_value(p54, ConstPtr(ptr55), descr=<Guard0x3e127b8>) [p46, p24, i45, None, None, p19, None, p21]
+1037: p56 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '())))')
debug_merge_point(0, 0, '(lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))')
+1037: p57 = getfield_gc_r(p52, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1041: p58 = getfield_gc_r(p52, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: guard_class(p58, 16505296, descr=<Guard0x3e12800>) [p46, p24, i45, None, None, p19, None, p21]
+1058: guard_nonnull_class(p57, ConstClass(W_Vector), descr=<Guard0x3dff220>) [p46, p24, i45, None, None, p19, None, p21]
debug_merge_point(0, 0, '(- n4967 1)')
debug_merge_point(0, 0, '(let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))')
debug_merge_point(0, 0, '(three-partitions AppRand9)')
debug_merge_point(0, 0, '(let ([loop15177 (lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))]) (loop15177 '() (quotient m 3)))')
debug_merge_point(0, 0, '(lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))')
debug_merge_point(0, 0, '(loop15177 '() (quotient m 3))')
+1077: i62 = uint_mul_high(i30, -6148914691236517205)
+1097: i64 = uint_rshift(i62, 1)
+1100: i66 = int_mul(i64, 3)
+1100: i68 = int_xor(i30, 3)
+1100: i69 = int_ne(i66, i30)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, '(let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))')
debug_merge_point(0, 0, 'lst5179')
debug_merge_point(0, 0, '(lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))')
debug_merge_point(0, 0, '(- m nc15181)')
+1100: i70 = int_sub(i30, i64)
debug_merge_point(0, 0, '(loop25185 lst5179 (quotient AppRand36 2))')
+1106: i72 = int_rshift(i70, 1)
+1112: i74 = int_lshift(i72, 1)
+1118: i76 = int_xor(i70, 2)
+1125: i78 = int_rshift(i76, 63)
+1129: i79 = int_ne(i74, i70)
+1142: i80 = int_and(i78, i79)
+1145: i81 = int_add(i72, i80)
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+1148: i82 = int_lt(i81, i64)
+1151: guard_false(i82, descr=<Guard0x3e12848>) [p46, p24, i45, None, None, p19, None, p21]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+1157: i83 = int_add(i64, i81)
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+1163: i84 = int_sub(i30, i83)
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+1169: i86 = int_sub(i81, 1)
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+1173: p87 = new_with_vtable(descr=<SizeDescr 32>)
+1184: p88 = new_with_vtable(descr=<SizeDescr 48>)
+1202: setfield_gc(p88, ConstPtr(ptr89), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1213: setfield_gc(p88, ConstPtr(ptr90), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1217: p91 = new_with_vtable(descr=<SizeDescr 16>)
+1228: setfield_gc(p91, i64, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1232: setfield_gc(p88, p91, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1236: p92 = new_with_vtable(descr=<SizeDescr 32>)
+1248: setfield_gc(p92, ConstPtr(ptr93), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1260: setfield_gc(p92, ConstPtr(ptr94), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1265: setfield_gc(p92, i30, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+1270: setfield_gc(p88, p92, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1274: p95 = new_with_vtable(descr=<SizeDescr 16>)
+1286: setfield_gc(p95, i30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1290: setfield_gc(p88, p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1294: p96 = new_with_vtable(descr=<SizeDescr 24>)
+1306: p97 = new_with_vtable(descr=<SizeDescr 32>)
+1318: setfield_gc(p97, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1326: p100 = new_array(3, descr=<ArrayS 8>)
+1345: setarrayitem_gc(p100, 0, i64, descr=<ArrayS 8>)
+1349: setarrayitem_gc(p100, 1, i81, descr=<ArrayS 8>)
+1353: setarrayitem_gc(p100, 2, i84, descr=<ArrayS 8>)
+1357: setfield_gc(p97, p100, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1368: setfield_gc(p97, ConstPtr(ptr104), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1372: setfield_gc(p96, p97, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1377: setfield_gc(p96, ConstPtr(ptr105), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1389: p106 = new_with_vtable(descr=<SizeDescr 40>)
+1400: p107 = new_with_vtable(descr=<SizeDescr 32>)
+1411: setfield_gc(p107, p58, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1415: setfield_gc(p107, i30, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1419: p108 = new_with_vtable(descr=<SizeDescr 32>)
+1430: setfield_gc(p108, p58, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1441: setfield_gc(p108, ConstPtr(ptr109), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1445: setfield_gc(p108, p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1449: setfield_gc(p107, p108, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1453: p110 = new_with_vtable(descr=<SizeDescr 40>)
+1464: setfield_gc(p110, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1475: p111 = new_with_vtable(descr=<SizeDescr 24>)
+1486: setfield_gc(p111, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1490: setfield_gc(p111, i45, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1501: setfield_gc(p110, p111, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1505: setfield_gc(p110, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1516: setfield_gc(p110, ConstPtr(ptr112), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1534: setfield_gc(p106, ConstPtr(ptr113), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1538: setfield_gc(p106, p107, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1542: setfield_gc(p106, p110, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1546: setfield_gc(p106, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1550: setfield_gc(p87, p88, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1554: setfield_gc(p87, i86, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1558: setfield_gc(p87, p96, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1562: jump(p87, p106, descr=TargetToken(61029280))
+1600: --end of the loop--
[3e4c22b081671de] jit-log-opt-bridge}
[3e4c22b08524e6b] {jit-backend
[3e4c22b085af334] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4ad0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C2203000048FF04252094D1038139700B01000F85000000004C8B79104983FF01720741813FB09700000F85000000004C8B35A0FEFFFF4D39F70F8400000000813BC81800000F85000000004C8B6B084983FD01720841817D00900F00000F85000000004C8B610841813C24A8B800000F85000000004D8B5424104C8B0D7DFEFFFF4D39CA0F85000000004D8B4C24184D8B5424204D8B442430498B7C2408813F102001000F8500000000498B7424284883FE017206813E601400000F85000000004983FA01720741813A601400000F85000000004C8B6608498B72084939F40F84000000004983F9017207418139F08C00000F85000000004883FE000F8C000000004D8B61084C39E60F8D000000004D8B511841813AC8EB02000F85000000004D8B51104D8B4CF210418139B09700000F8500000000498B57104883FA017206813A40D202000F8500000000488B41184883F80172068138B09700000F85000000004C39F20F85000000004983F8017207418138601400000F8500000000498B50084839D60F84000000004883FA000F8C000000004C39E20F8D000000004D8B64D21041813C24B09700000F8500000000498B51104883FA017206813A40D202000F85000000004C39F20F85000000004D8B77084983FE01720741813E382300000F8500000000498B51084883FA017206813AF08C00000F85000000004D8B5424084983FA01720741813AF08C00000F8500000000498B7424104883FE017206813EB09700000F85000000004989D4488B0C25F091F900488D91C8000000483B14251092F9000F870001000048891425F091F90048C701700B0100488D512048C702B8B5000048897A084C8B055DFDFFFF4C8942104C897A184C894A204C8D4A2849C701A81600004D8D793049C707F08C000049C74708040000004D8D472049C700080E000049C740080400000048898D30010000488B0D1AFDFFFF498948104D8970184D8960204D8950284D8947104C8B0507FDFFFF4D8947184C8B8530010000498970104D89690849895008498940184989791049895918488B1DE5FCFFFF498959204D8979284C8985300100004C898D3801000049BBC05A1C5C4A7F000041FFE3669048C7442408FFFFFF0049BBC0481E5C4A7F00004C895D204D8D9B30FAFDFF41FFD3E9B8FCFFFF49BBC04A1E5C4A7F00004C895D204D8D9B3000FEFF41FFD3E9EBFEFFFFFF3557FBFFFF49BBD0481E5C4A7F000041534D8D9B30F7FDFF41FFE3FF3543FBFFFF49BBE0481E5C4A7F000041534D8D9B20F7FDFF41FFE3FF3537FBFFFF49BBF0481E5C4A7F000041534D8D9B10F7FDFF41FFE3FF3523FBFFFF49BB00491E5C4A7F000041534D8D9B00F7FDFF41FFE3FF350FFBFFFF49BB10491E5C4A7F000041534D8D9BF0F6FDFF41FFE3FF35FBFAFFFF49BB20491E5C4A7F000041534D8D9BE0F6FDFF41FFE3FF35EFFAFFFF49BB30491E5C4A7F000041534D8D9BD0F6FDFF41FFE3FF35DBFAFFFF49BB40491E5C4A7F000041534D8D9BC0F6FDFF41FFE3FF35C7FAFFFF49BB50491E5C4A7F000041534D8D9BB0F6FDFF41FFE3FF35B3FAFFFF49BB60491E5C4A7F000041534D8D9BA0F6FDFF41FFE3FF359FFAFFFF49BB70491E5C4A7F000041534D8D9B90F6FDFF41FFE3FF358BFAFFFF49BB80491E5C4A7F000041534D8D9B80F6FDFF41FFE3FF3577FAFFFF49BB90491E5C4A7F000041534D8D9B70F6FDFF41FFE3FF3563FAFFFF49BBA0491E5C4A7F000041534D8D9B60F6FDFF41FFE3FF354FFAFFFF49BBB0491E5C4A7F000041534D8D9B50F6FDFF41FFE3FF353BFAFFFF49BBC0491E5C4A7F000041534D8D9B40F6FDFF41FFE3FF3527FAFFFF49BBD0491E5C4A7F000041534D8D9B30F6FDFF41FFE3FF3513FAFFFF49BBE0491E5C4A7F000041534D8D9B20F6FDFF41FFE3FF35FFF9FFFF49BBF0491E5C4A7F000041534D8D9B10F6FDFF41FFE3FF35EBF9FFFF49BB004A1E5C4A7F000041534D8D9B00F6FDFF41FFE3FF35D7F9FFFF49BB104A1E5C4A7F000041534D8D9BF0F5FDFF41FFE3FF35C3F9FFFF49BB204A1E5C4A7F000041534D8D9BE0F5FDFF41FFE3FF35AFF9FFFF49BB304A1E5C4A7F000041534D8D9BD0F5FDFF41FFE3FF359BF9FFFF49BB404A1E5C4A7F000041534D8D9BC0F5FDFF41FFE3FF3587F9FFFF49BB504A1E5C4A7F000041534D8D9BB0F5FDFF41FFE3FF3573F9FFFF49BB604A1E5C4A7F000041534D8D9BA0F5FDFF41FFE3FF355FF9FFFF49BB704A1E5C4A7F000041534D8D9B90F5FDFF41FFE3FF354BF9FFFF49BB804A1E5C4A7F000041534D8D9B80F5FDFF41FFE3FF3537F9FFFF49BB904A1E5C4A7F000041534D8D9B70F5FDFF41FFE3FF3523F9FFFF49BBA04A1E5C4A7F000041534D8D9B60F5FDFF41FFE3FF350FF9FFFF49BBB04A1E5C4A7F000041534D8D9B50F5FDFF41FFE3
[3e4c22b085b9980] jit-backend-dump}
[3e4c22b085c4efa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4c04 +0  25000000
[3e4c22b085c653c] jit-backend-dump}
[3e4c22b085caa4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4f35 +0  25000000
[3e4c22b085cb951] jit-backend-dump}
[3e4c22b085cf03f] {jit-backend-addr
bridge out of Guard 0x3d732f8 has address 0x7f4a5c1e4c00 to 0x7f4a5c1e4f30
       gc table: 0x7f4a5c1e4ad0
    jump target: 0x7f4a5c1e4c00
         resops: 0x7f4a5c1e4c0e
       failures: 0x7f4a5c1e4f30
            end: 0x7f4a5c1e52d7
[3e4c22b085d17b9] jit-backend-addr}
[3e4c22b085d5031] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4c1e +0  51030000
[3e4c22b085d5eaf] jit-backend-dump}
[3e4c22b085d9597] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4c35 +0  56030000
[3e4c22b085da2d1] jit-backend-dump}
[3e4c22b085dd7ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4c45 +0  62030000
[3e4c22b085de4e4] jit-backend-dump}
[3e4c22b085e19d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4c51 +0  72030000
[3e4c22b085e272e] jit-backend-dump}
[3e4c22b085e5c5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4c69 +0  76030000
[3e4c22b085e694e] jit-backend-dump}
[3e4c22b085e9eb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4c7b +0  80030000
[3e4c22b085eac50] jit-backend-dump}
[3e4c22b085ee0ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4c90 +0  87030000
[3e4c22b085eedac] jit-backend-dump}
[3e4c22b085f2223] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4cb0 +0  83030000
[3e4c22b085f2f32] jit-backend-dump}
[3e4c22b085f644c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4cc7 +0  A4030000
[3e4c22b085f7155] jit-backend-dump}
[3e4c22b085fa55e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4cda +0  AD030000
[3e4c22b085fb224] jit-backend-dump}
[3e4c22b085fe689] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4ceb +0  B8030000
[3e4c22b085ff339] jit-backend-dump}
[3e4c22b086026ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4cfe +0  C1030000
[3e4c22b0860339a] jit-backend-dump}
[3e4c22b0860674b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d08 +0  D3030000
[3e4c22b086073fb] jit-backend-dump}
[3e4c22b0860a7e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d15 +0  E2030000
[3e4c22b0860b49f] jit-backend-dump}
[3e4c22b0860e868] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d26 +0  ED030000
[3e4c22b0860f525] jit-backend-dump}
[3e4c22b086128fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d3c +0  F3030000
[3e4c22b086135b7] jit-backend-dump}
[3e4c22b08616992] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d52 +0  F9030000
[3e4c22b08617646] jit-backend-dump}
[3e4c22b0861aa21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d68 +0  FF030000
[3e4c22b0861b6db] jit-backend-dump}
[3e4c22b0861ea97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d71 +0  12040000
[3e4c22b0861f754] jit-backend-dump}
[3e4c22b08622b4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d84 +0  1B040000
[3e4c22b0862381a] jit-backend-dump}
[3e4c22b08626be0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d91 +0  2A040000
[3e4c22b08627893] jit-backend-dump}
[3e4c22b0862ac5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d9b +0  3C040000
[3e4c22b0862b928] jit-backend-dump}
[3e4c22b0862ece5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4da4 +0  4F040000
[3e4c22b0862f99f] jit-backend-dump}
[3e4c22b08632d4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4db7 +0  58040000
[3e4c22b08633a0f] jit-backend-dump}
[3e4c22b08636db6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4dcd +0  5E040000
[3e4c22b08637a7f] jit-backend-dump}
[3e4c22b0863ae5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4dd6 +0  71040000
[3e4c22b0863bb0e] jit-backend-dump}
[3e4c22b0863eea9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4ded +0  76040000
[3e4c22b0863fb6f] jit-backend-dump}
[3e4c22b08642f13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4e03 +0  7C040000
[3e4c22b08643beb] jit-backend-dump}
[3e4c22b08646fc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4e1b +0  80040000
[3e4c22b08647ca5] jit-backend-dump}
[3e4c22b0864b05f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4e32 +0  85040000
[3e4c22b0864bd1b] jit-backend-dump}
[3e4c22b0864f3a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc161 +0  9B8A0000
[3e4c22b086500d5] jit-backend-dump}
[3e4c22b08654555] jit-backend}
[3e4c22b0865855a] {jit-log-opt-bridge
# bridge out of Guard 0x3d732f8 with 117 ops
[p0, p1]
+326: guard_class(p1, 16500016, descr=<Guard0x3dff280>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+342: guard_nonnull_class(p3, 16470384, descr=<Guard0x3dff2e0>) [p0, p1]
+368: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+371: guard_false(i6, descr=<Guard0x3e128d8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+377: guard_class(p0, 16437896, descr=<Guard0x3e12920>) [p0, p1]
+389: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+393: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3dff340>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+413: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+417: guard_class(p10, 16478824, descr=<Guard0x3e12968>) [p0, p1]
+431: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+443: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3e129b0>) [p0, p1]
+452: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+457: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+462: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+467: p17 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+472: guard_class(p17, 16505296, descr=<Guard0x3e129f8>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+484: guard_not_invalidated(descr=<Guard0x3e12a40>) [p0, p1]
+484: p19 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+489: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x3dff3a0>) [p0, p1]
+507: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3dff400>) [p0, p1]
+526: i22 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+530: i23 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+534: i24 = int_eq(i22, i23)
+537: guard_false(i24, descr=<Guard0x3e12a88>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+543: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x3dff460>) [p0, p1]
+562: i27 = int_ge(i23, 0)
+566: guard_true(i27, descr=<Guard0x3e12ad0>) [p0, p1]
+572: i28 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+576: i29 = int_lt(i23, i28)
+579: guard_true(i29, descr=<Guard0x3e12b18>) [p0, p1]
+585: p30 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+589: guard_class(p30, 16622984, descr=<Guard0x3e12b60>) [p0, p1]
+602: p32 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+606: p33 = getarrayitem_gc_r(p32, i23, descr=<ArrayP 8>)
+611: guard_class(p33, 16470384, descr=<Guard0x3e12ba8>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+624: p35 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+628: guard_nonnull_class(p35, 16616448, descr=<Guard0x3dff4c0>) [p0, p1]
+646: p37 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+650: guard_nonnull_class(p37, 16470384, descr=<Guard0x3dff520>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+668: i40 = instance_ptr_eq(p35, ConstPtr(ptr39))
+671: guard_true(i40, descr=<Guard0x3e12bf0>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+677: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x3dff580>) [p0, p1]
+696: i42 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+700: i43 = int_eq(i23, i42)
+703: guard_false(i43, descr=<Guard0x3e12c38>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+709: i45 = int_ge(i42, 0)
+713: guard_true(i45, descr=<Guard0x3e12c80>) [p0, p1]
+719: i46 = int_lt(i42, i28)
+722: guard_true(i46, descr=<Guard0x3e12cc8>) [p0, p1]
+728: p47 = getarrayitem_gc_r(p32, i42, descr=<ArrayP 8>)
+733: guard_class(p47, 16470384, descr=<Guard0x3e12d10>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+747: p49 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+751: guard_nonnull_class(p49, 16616448, descr=<Guard0x3dff5e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+769: i52 = instance_ptr_eq(p49, ConstPtr(ptr51))
+772: guard_true(i52, descr=<Guard0x3e12d58>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+778: p53 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+782: guard_nonnull_class(p53, ConstClass(W_Symbol), descr=<Guard0x3dff640>) [p0, p1]
+801: p55 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+805: guard_nonnull_class(p55, ConstClass(W_Vector), descr=<Guard0x3dff6a0>) [p0, p1]
+823: p57 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+828: guard_nonnull_class(p57, ConstClass(W_Vector), descr=<Guard0x3dff700>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+847: p59 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+852: guard_nonnull_class(p59, 16470384, descr=<Guard0x3dff760>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+870: p61 = new_with_vtable(descr=<SizeDescr 32>)
+917: p62 = new_with_vtable(descr=<SizeDescr 40>)
+928: setfield_gc(p62, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+939: setfield_gc(p62, ConstPtr(ptr63), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+943: setfield_gc(p62, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+947: setfield_gc(p62, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+951: p64 = new_with_vtable(descr=<SizeDescr 48>)
+962: p65 = new_with_vtable(descr=<SizeDescr 32>)
+973: setfield_gc(p65, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+981: p68 = new_array_clear(4, descr=<ArrayP 8>)
+1014: setarrayitem_gc(p68, 0, ConstPtr(ptr70), descr=<ArrayP 8>)
+1018: setarrayitem_gc(p68, 1, p53, descr=<ArrayP 8>)
+1022: setarrayitem_gc(p68, 2, p55, descr=<ArrayP 8>)
+1026: setarrayitem_gc(p68, 3, p57, descr=<ArrayP 8>)
+1030: setfield_gc(p65, p68, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1041: setfield_gc(p65, ConstPtr(ptr74), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1045: setfield_gc(p61, p59, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1056: setfield_gc(p64, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1060: setfield_gc(p61, p62, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1064: setfield_gc(p61, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1068: setfield_gc(p64, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1072: setfield_gc(p64, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1083: setfield_gc(p64, ConstPtr(ptr75), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1087: setfield_gc(p64, p65, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1091: jump(p61, p64, descr=TargetToken(59469520))
+1120: --end of the loop--
[3e4c22b086af063] jit-log-opt-bridge}
[3e4c22b088565e6] {jit-backend
[3e4c22b088a690a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e53e
[3e4c22b088ad61e] jit-backend-dump}
[3e4c22b088b8075] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5464 +0  28000000
[3e4c22b088b967a] jit-backend-dump}
[3e4c22b088bd752] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5625 +0  28000000
[3e4c22b088be5a9] jit-backend-dump}
[3e4c22b088c1dbc] {jit-backend-addr
bridge out of Guard 0x3da63e0 has address 0x7f4a5c1e5460 to 0x7f4a5c1e5620
       gc table: 0x7f4a5c1e53e0
    jump target: 0x7f4a5c1e5460
         resops: 0x7f4a5c1e546e
       failures: 0x7f4a5c1e5620
            end: 0x7f4a5c1e57cf
[3e4c22b088c41a7] jit-backend-addr}
[3e4c22b088c7955] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e547e +0  E1010000
[3e4c22b088c8799] jit-backend-dump}
[3e4c22b088cbd2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5495 +0  E6010000
[3e4c22b088cca05] jit-backend-dump}
[3e4c22b088cfec0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e54ac +0  EB010000
[3e4c22b088d0b92] jit-backend-dump}
[3e4c22b088d3f4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e54c4 +0  EF010000
[3e4c22b088d4bfc] jit-backend-dump}
[3e4c22b088d7fa0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e54d8 +0  F7010000
[3e4c22b088d8c38] jit-backend-dump}
[3e4c22b088dbfc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e54ec +0  FF010000
[3e4c22b088dcc5c] jit-backend-dump}
[3e4c22b088e0019] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5504 +0  03020000
[3e4c22b088e0cc3] jit-backend-dump}
[3e4c22b088e405b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e551c +0  07020000
[3e4c22b088e4ced] jit-backend-dump}
[3e4c22b088e8225] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5532 +0  29020000
[3e4c22b088e8ecc] jit-backend-dump}
[3e4c22b088ec2f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5548 +0  2F020000
[3e4c22b088ecf98] jit-backend-dump}
[3e4c22b088f034c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5559 +0  3A020000
[3e4c22b088f0fe1] jit-backend-dump}
[3e4c22b088f4388] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e556f +0  40020000
[3e4c22b088f501d] jit-backend-dump}
[3e4c22b088f864d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df666 +0  F65D0000
[3e4c22b088f9350] jit-backend-dump}
[3e4c22b088fd532] jit-backend}
[3e4c22b089013bf] {jit-log-opt-bridge
# bridge out of Guard 0x3da63e0 with 56 ops
[p0, p1]
+150: guard_class(p1, 16500368, descr=<Guard0x3dff7c0>) [p0, p1]
+162: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+166: guard_nonnull_class(p3, 16479200, descr=<Guard0x3dff820>) [p0, p1]
+185: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+189: guard_nonnull_class(p5, 16470384, descr=<Guard0x3dff880>) [p0, p1]
+208: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+212: guard_nonnull_class(p7, 16616448, descr=<Guard0x3dff8e0>) [p0, p1]
+232: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+243: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3e12da0>) [p0, p1]
+252: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+252: guard_class(p0, 16437896, descr=<Guard0x3e12de8>) [p0, p1]
+272: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+276: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3dff940>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+296: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+300: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+304: p17 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+308: guard_class(p17, 16505296, descr=<Guard0x3e12e30>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+320: guard_not_invalidated(descr=<Guard0x3e12e78>) [p0, p1]
+320: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+324: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x3dff9a0>) [p0, p1]
+342: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+346: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3dffa00>) [p0, p1]
+364: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+368: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+372: i25 = int_eq(i23, i24)
+375: guard_true(i25, descr=<Guard0x3e12ec0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+381: p26 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+385: guard_nonnull_class(p26, 16616448, descr=<Guard0x3dffa60>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+403: p28 = new_with_vtable(descr=<SizeDescr 32>)
+447: p29 = new_with_vtable(descr=<SizeDescr 56>)
+458: p30 = new_with_vtable(descr=<SizeDescr 48>)
+469: setfield_gc(p30, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+480: setfield_gc(p30, ConstPtr(ptr31), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+484: setfield_gc(p30, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+488: setfield_gc(p30, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+492: setfield_gc(p30, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+496: setfield_gc(p28, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+500: setfield_gc(p29, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+504: setfield_gc(p28, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+508: setfield_gc(p28, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+512: setfield_gc(p29, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+516: setfield_gc(p29, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+527: setfield_gc(p29, ConstPtr(ptr32), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+531: setfield_gc(p29, p30, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+535: setfield_gc(p29, p5, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+539: jump(p28, p29, descr=TargetToken(59470000))
+576: --end of the loop--
[3e4c22b08930f54] jit-log-opt-bridge}
[3e4c22b08f27fc1] {jit-backend
[3e4c22b08f8a383] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e
[3e4c22b08f9252a] jit-backend-dump}
[3e4c22b08f9d788] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e59f4 +0  28000000
[3e4c22b08f9ed4a] jit-backend-dump}
[3e4c22b08fa324e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5c95 +0  28000000
[3e4c22b08fa4196] jit-backend-dump}
[3e4c22b08fa7a4f] {jit-backend-addr
bridge out of Guard 0x3b651c0 has address 0x7f4a5c1e59f0 to 0x7f4a5c1e5c90
       gc table: 0x7f4a5c1e5930
    jump target: 0x7f4a5c1e59f0
         resops: 0x7f4a5c1e59fe
       failures: 0x7f4a5c1e5c90
            end: 0x7f4a5c1e5ee7
[3e4c22b08fa9ffe] jit-backend-addr}
[3e4c22b08fadb51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5a0e +0  C1020000
[3e4c22b08fae9ae] jit-backend-dump}
[3e4c22b08fb1f0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5a25 +0  C6020000
[3e4c22b08fb2c0b] jit-backend-dump}
[3e4c22b08fb614f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5a3c +0  CB020000
[3e4c22b08fb6e27] jit-backend-dump}
[3e4c22b08fba2cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5a48 +0  DB020000
[3e4c22b08fbafb1] jit-backend-dump}
[3e4c22b08fbe2f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5a5c +0  E3020000
[3e4c22b08fbefc2] jit-backend-dump}
[3e4c22b08fc2492] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5a7c +0  FB020000
[3e4c22b08fc318c] jit-backend-dump}
[3e4c22b08fc659e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5a90 +0  03030000
[3e4c22b08fc724c] jit-backend-dump}
[3e4c22b08fca5e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5aa5 +0  0A030000
[3e4c22b08fcb276] jit-backend-dump}
[3e4c22b08fce5c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5ab2 +0  19030000
[3e4c22b08fcf23e] jit-backend-dump}
[3e4c22b08fd255b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5ac9 +0  1E030000
[3e4c22b08fd31f3] jit-backend-dump}
[3e4c22b08fd64ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5ae1 +0  22030000
[3e4c22b08fd7178] jit-backend-dump}
[3e4c22b08fda4ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5af7 +0  28030000
[3e4c22b08fdb174] jit-backend-dump}
[3e4c22b08fde47c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5b0f +0  2C030000
[3e4c22b08fdf102] jit-backend-dump}
[3e4c22b08fe240a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5b25 +0  32030000
[3e4c22b08fe308d] jit-backend-dump}
[3e4c22b08fe6395] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5b3d +0  36030000
[3e4c22b08fe701b] jit-backend-dump}
[3e4c22b08fea34e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5b53 +0  3C030000
[3e4c22b08feafcd] jit-backend-dump}
[3e4c22b08fee2c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5b6a +0  41030000
[3e4c22b08feef4f] jit-backend-dump}
[3e4c22b08ff225d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e5b8e +0  39030000
[3e4c22b08ff2ee3] jit-backend-dump}
[3e4c22b08ff64f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d16be +0  2E430100
[3e4c22b08ff719e] jit-backend-dump}
[3e4c22b08ffb5c0] jit-backend}
[3e4c22b08fff602] {jit-log-opt-bridge
# bridge out of Guard 0x3b651c0 with 67 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x3dffb80>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x3dffbe0>) [p0, p1]
+249: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+253: guard_nonnull_class(p5, 16470384, descr=<Guard0x3dffc40>) [p0, p1]
+272: guard_class(p0, 16437896, descr=<Guard0x3e13070>) [p0, p1]
+284: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+295: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3e130b8>) [p0, p1]
+304: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+304: guard_not_invalidated(descr=<Guard0x3e13100>) [p0, p1]
+304: p11 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+308: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+312: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (cons AppRand15 AppRand16)')
+316: guard_nonnull_class(p11, 16478448, descr=<Guard0x3dffca0>) [p0, p1]
+336: guard_nonnull_class(p12, 16470384, descr=<Guard0x3dffd00>) [p0, p1]
+356: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+368: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3e13148>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+377: guard_class(p13, 16437896, descr=<Guard0x3e13190>) [p0, p1]
+390: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+394: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x3dffd60>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+413: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+418: guard_nonnull_class(p21, 16470384, descr=<Guard0x3dffdc0>) [p0, p1]
+437: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+441: guard_nonnull_class(p23, ConstClass(W_Symbol), descr=<Guard0x3dffe20>) [p0, p1]
+459: p25 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+464: guard_nonnull_class(p25, 16470384, descr=<Guard0x3dffe80>) [p0, p1]
+483: p27 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+487: guard_nonnull_class(p27, ConstClass(W_Vector), descr=<Guard0x3dffee0>) [p0, p1]
+505: p29 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+510: guard_nonnull_class(p29, 16470384, descr=<Guard0x3dfff40>) [p0, p1]
+529: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+533: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x3dfffa0>) [p0, p1]
+551: p33 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+555: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3f66020>) [p0, p1]
+574: p35 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+579: p36 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+590: guard_nonnull_class(p36, 16470384, descr=<Guard0x3f66080>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+610: p38 = new_with_vtable(descr=<SizeDescr 32>)
+657: p39 = new_with_vtable(descr=<SizeDescr 24>)
+668: setfield_gc(p39, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+672: setfield_gc(p39, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+676: p40 = new_with_vtable(descr=<SizeDescr 48>)
+687: p41 = new_with_vtable(descr=<SizeDescr 32>)
+698: setfield_gc(p41, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+706: p44 = new_array_clear(5, descr=<ArrayP 8>)
+740: setarrayitem_gc(p44, 0, ConstPtr(ptr46), descr=<ArrayP 8>)
+744: setarrayitem_gc(p44, 1, p23, descr=<ArrayP 8>)
+748: setarrayitem_gc(p44, 2, p27, descr=<ArrayP 8>)
+752: setarrayitem_gc(p44, 3, p31, descr=<ArrayP 8>)
+756: setarrayitem_gc(p44, 4, p33, descr=<ArrayP 8>)
+760: setfield_gc(p41, p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+771: setfield_gc(p41, ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+775: setfield_gc(p38, p36, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+786: setfield_gc(p38, p39, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+797: setfield_gc(p40, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+801: setfield_gc(p40, p35, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+805: setfield_gc(p40, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+809: setfield_gc(p40, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+813: setfield_gc(p38, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+824: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+828: jump(p38, p40, descr=TargetToken(59469840))
+864: --end of the loop--
[3e4c22b0903a7e7] jit-log-opt-bridge}
[3e4c22b0925f15a] {jit-backend
[3e4c22b092c160a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6060 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5202000048FF04250094D1038139700B01000F85000000004C8B71104D85F60F84000000004C8B2D0AFFFFFF4D39EE0F85000000004C8B69184983FD01720841817D00B09700000F850000000041813FC81800000F85000000004D8B77204C8B25F1FEFFFF4D39E60F85000000004D8B67284D8B77304D8B57184983FC01720841813C2420BA00000F85000000004983FE01720741813EB09700000F85000000004D8B4C24104C8B05D1FEFFFF4D39C10F850000000041813AC81800000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B4C2428498B7C2430498B742408813E102001000F8500000000498B5C24384883FB017206813B601400000F8500000000498B5424204883FA017206813A601400000F8500000000488B43084C89AD300100004C8B6A084C39E80F8400000000498B4424184883F80172068138F08C00000F85000000004983FD000F8C000000004C89A5380100004C8B60084D39E50F8D000000004C8B601841813C24C8EB02000F85000000004C8B60104C89B5400100004F8B74EC1041813EB09700000F85000000004C8995480100004C8B95400100004C8985500100004D8B42104983F8017207418138B09700000F85000000004C8B9D300100004C899D600100004C8B9D500100004C899D400100004889BD680100004C898D700100004889B57801000048899D5001000048899530010000488985800100004D89E74C89AD58010000488B95480100004C89D04C89F34C8B9D380100004C899D48010000564C89C64D89C8415949BBD07A1C5C4A7F000041FFE3662E0F1F84000000000048C7442408FFFFFF0049BBF05E1E5C4A7F00004C895D204D8D9B00E4FDFF41FFD3E988FDFFFFFF35A4FCFFFF49BB005F1E5C4A7F000041534D8D9B00E1FDFF41FFE3FF3590FCFFFF49BB105F1E5C4A7F000041534D8D9BF0E0FDFF41FFE3FF3584FCFFFF49BB205F1E5C4A7F000041534D8D9BE0E0FDFF41FFE3FF3570FCFFFF49BB305F1E5C4A7F000041534D8D9BD0E0FDFF41FFE3FF355CFCFFFF49BB405F1E5C4A7F000041534D8D9BC0E0FDFF41FFE3FF3550FCFFFF49BB505F1E5C4A7F000041534D8D9BB0E0FDFF41FFE3FF353CFCFFFF49BB605F1E5C4A7F000041534D8D9BA0E0FDFF41FFE3FF3528FCFFFF49BB705F1E5C4A7F000041534D8D9B90E0FDFF41FFE3FF3514FCFFFF49BB805F1E5C4A7F000041534D8D9B80E0FDFF41FFE3FF3508FCFFFF49BB905F1E5C4A7F000041534D8D9B70E0FDFF41FFE3FF35F4FBFFFF49BBA05F1E5C4A7F000041534D8D9B60E0FDFF41FFE3FF35E0FBFFFF49BBB05F1E5C4A7F000041534D8D9B50E0FDFF41FFE3FF35CCFBFFFF49BBC05F1E5C4A7F000041534D8D9B40E0FDFF41FFE3FF35B8FBFFFF49BBD05F1E5C4A7F000041534D8D9B30E0FDFF41FFE3FF35A4FBFFFF49BBE05F1E5C4A7F000041534D8D9B20E0FDFF41FFE3FF3590FBFFFF49BBF05F1E5C4A7F000041534D8D9B10E0FDFF41FFE3FF357CFBFFFF49BB00601E5C4A7F000041534D8D9B00E0FDFF41FFE3FF3568FBFFFF49BB10601E5C4A7F000041534D8D9BF0DFFDFF41FFE3FF3554FBFFFF49BB20601E5C4A7F000041534D8D9BE0DFFDFF41FFE3FF3540FBFFFF49BB30601E5C4A7F000041534D8D9BD0DFFDFF41FFE3FF352CFBFFFF49BB40601E5C4A7F000041534D8D9BC0DFFDFF41FFE3FF3518FBFFFF49BB50601E5C4A7F000041534D8D9BB0DFFDFF41FFE3
[3e4c22b092c9f02] jit-backend-dump}
[3e4c22b092d4ed1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6134 +0  28000000
[3e4c22b092d643e] jit-backend-dump}
[3e4c22b092da803] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6395 +0  28000000
[3e4c22b092db7a1] jit-backend-dump}
[3e4c22b092deefd] {jit-backend-addr
bridge out of Guard 0x3da3df0 has address 0x7f4a5c1e6130 to 0x7f4a5c1e6390
       gc table: 0x7f4a5c1e6060
    jump target: 0x7f4a5c1e6130
         resops: 0x7f4a5c1e613e
       failures: 0x7f4a5c1e6390
            end: 0x7f4a5c1e661e
[3e4c22b092e1205] jit-backend-addr}
[3e4c22b092e4ab4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e614e +0  64020000
[3e4c22b092e5920] jit-backend-dump}
[3e4c22b092e8ff5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e615b +0  73020000
[3e4c22b092e9d08] jit-backend-dump}
[3e4c22b092ed2f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e616b +0  7F020000
[3e4c22b092edfc3] jit-backend-dump}
[3e4c22b092f13c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6183 +0  83020000
[3e4c22b092f20dc] jit-backend-dump}
[3e4c22b092f5449] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6190 +0  92020000
[3e4c22b092f6140] jit-backend-dump}
[3e4c22b092f948e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e61a4 +0  9A020000
[3e4c22b092fa17f] jit-backend-dump}
[3e4c22b092fd74d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e61c4 +0  B2020000
[3e4c22b092fe422] jit-backend-dump}
[3e4c22b09301994] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e61d7 +0  BB020000
[3e4c22b09302705] jit-backend-dump}
[3e4c22b09305aa0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e61ec +0  C2020000
[3e4c22b0930679d] jit-backend-dump}
[3e4c22b09309bbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e61f9 +0  D1020000
[3e4c22b0930a8bf] jit-backend-dump}
[3e4c22b0930dcb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6210 +0  D6020000
[3e4c22b0930e9da] jit-backend-dump}
[3e4c22b09311d5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e622b +0  D7020000
[3e4c22b09312a5d] jit-backend-dump}
[3e4c22b09315dd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6242 +0  DC020000
[3e4c22b09316aaf] jit-backend-dump}
[3e4c22b09319e44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6259 +0  E1020000
[3e4c22b0931ab31] jit-backend-dump}
[3e4c22b0931de95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6271 +0  E5020000
[3e4c22b0931eb6a] jit-backend-dump}
[3e4c22b0932537d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6288 +0  EA020000
[3e4c22b09326204] jit-backend-dump}
[3e4c22b09329c97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6292 +0  FC020000
[3e4c22b0932a9ec] jit-backend-dump}
[3e4c22b0932dea4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e62a6 +0  04030000
[3e4c22b0932eb7f] jit-backend-dump}
[3e4c22b09331f9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e62b8 +0  0E030000
[3e4c22b09332c73] jit-backend-dump}
[3e4c22b09336051] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e62d5 +0  0D030000
[3e4c22b09336d45] jit-backend-dump}
[3e4c22b0933a13c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6301 +0  FD020000
[3e4c22b0933ae36] jit-backend-dump}
[3e4c22b0933e532] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e33a1 +0  8B2D0000
[3e4c22b0933f242] jit-backend-dump}
[3e4c22b0934368b] jit-backend}
[3e4c22b09347555] {jit-log-opt-bridge
# bridge out of Guard 0x3da3df0 with 62 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x3f660e0>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x3e131d8>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x3e13220>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
+271: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+275: guard_nonnull_class(p6, 16470384, descr=<Guard0x3f66140>) [p0, p1]
+295: guard_class(p0, 16437896, descr=<Guard0x3e13268>) [p0, p1]
+308: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+319: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3e132b0>) [p0, p1]
+328: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+328: guard_not_invalidated(descr=<Guard0x3e132f8>) [p0, p1]
+328: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+332: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+336: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
+340: guard_nonnull_class(p12, 16479200, descr=<Guard0x3f661a0>) [p0, p1]
+360: guard_nonnull_class(p13, 16470384, descr=<Guard0x3f66200>) [p0, p1]
+379: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+391: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3e13340>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+400: guard_class(p14, 16437896, descr=<Guard0x3e13388>) [p0, p1]
+413: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+417: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3f66260>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+436: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+441: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+446: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+451: guard_class(p24, 16505296, descr=<Guard0x3e133d0>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+463: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+468: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3f662c0>) [p0, p1]
+486: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+491: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3f66320>) [p0, p1]
+509: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+513: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+524: i32 = int_eq(i30, i31)
+527: guard_false(i32, descr=<Guard0x3e13418>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+533: p33 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+538: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3f66380>) [p0, p1]
+556: i36 = int_ge(i31, 0)
+560: guard_true(i36, descr=<Guard0x3e13460>) [p0, p1]
+566: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+577: i38 = int_lt(i31, i37)
+580: guard_true(i38, descr=<Guard0x3e134a8>) [p0, p1]
+586: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+590: guard_class(p39, 16622984, descr=<Guard0x3e134f0>) [p0, p1]
+604: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: p42 = getarrayitem_gc_r(p41, i31, descr=<ArrayP 8>)
+620: guard_class(p42, 16470384, descr=<Guard0x3e13538>) [p0, p1]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+633: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+658: guard_nonnull_class(p44, 16470384, descr=<Guard0x3f663e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+677: i46 = arraylen_gc(p41, descr=<ArrayP 8>)
+677: jump(p12, p44, p6, p20, p24, p14, p22, p23, p13, p42, p23, p22, p24, p26, p28, p33, p41, i31, descr=TargetToken(59470080))
+816: --end of the loop--
[3e4c22b0938169b] jit-log-opt-bridge}
[3e4c22b09594695] {jit-backend
[3e4c22b095ee7e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e
[3e4c22b095f619e] jit-backend-dump}
[3e4c22b17f7e780] {jit-backend-addr
Loop 78 ((loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)) has address 0x7f4a5c1e684d to 0x7f4a5c1e6a50 (bootstrap 0x7f4a5c1e67c0)
       gc table: 0x7f4a5c1e6730
       function: 0x7f4a5c1e67c0
         resops: 0x7f4a5c1e684d
       failures: 0x7f4a5c1e6a50
            end: 0x7f4a5c1e6c07
[3e4c22b17f82290] jit-backend-addr}
[3e4c22b17f88c39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6864 +0  17020000
[3e4c22b17f8a2fc] jit-backend-dump}
[3e4c22b17f8dbee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e687a +0  1D020000
[3e4c22b17f8ea82] jit-backend-dump}
[3e4c22b17f91ba1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6890 +0  23020000
[3e4c22b17f928b0] jit-backend-dump}
[3e4c22b17f95958] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e68a6 +0  29020000
[3e4c22b17f9666d] jit-backend-dump}
[3e4c22b17f995e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e68ba +0  31020000
[3e4c22b17f9a2f2] jit-backend-dump}
[3e4c22b17f9d26b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e68cd +0  3A020000
[3e4c22b17f9df83] jit-backend-dump}
[3e4c22b17fa0e9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e68e3 +0  40020000
[3e4c22b17fa1baf] jit-backend-dump}
[3e4c22b17fa4bb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e68fa +0  61020000
[3e4c22b17fa58f8] jit-backend-dump}
[3e4c22b17fa8892] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6911 +0  66020000
[3e4c22b17fa9552] jit-backend-dump}
[3e4c22b17fac4da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6928 +0  6B020000
[3e4c22b17fad18e] jit-backend-dump}
[3e4c22b17fb00fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e693f +0  70020000
[3e4c22b17fb0df1] jit-backend-dump}
[3e4c22b17fb3d14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6956 +0  75020000
[3e4c22b17fb49da] jit-backend-dump}
[3e4c22b17fb793a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6972 +0  75020000
[3e4c22b17fb8609] jit-backend-dump}
[3e4c22b17fbc257] jit-backend}
[3e4c22b17fc00aa] {jit-log-opt-loop
# Loop 78 ((loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)) : entry bridge with 53 ops
[p0, p1]
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
+293: guard_class(p0, 16500368, descr=<Guard0x3f66440>) [p1, p0]
+312: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+316: guard_nonnull_class(p3, 16478072, descr=<Guard0x3f664a0>) [p1, p0]
+334: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+338: guard_nonnull_class(p5, 16470384, descr=<Guard0x3f66500>) [p1, p0]
+356: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+360: guard_nonnull_class(p7, 16470384, descr=<Guard0x3f66560>) [p1, p0]
+378: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+389: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3e135c8>) [p1, p0]
+398: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+398: guard_class(p1, 16435920, descr=<Guard0x3e13610>) [p1, p0]
+417: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+421: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3f665c0>) [p1, p0]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+439: guard_not_invalidated(descr=<Guard0x3e13658>) [p1, p0]
+439: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+443: guard_nonnull_class(p15, 16470384, descr=<Guard0x3f66620>) [p1, p0]
+462: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+466: guard_nonnull_class(p17, ConstClass(W_Symbol), descr=<Guard0x3f66680>) [p1, p0]
+485: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+489: guard_nonnull_class(p19, 16470384, descr=<Guard0x3f666e0>) [p1, p0]
+508: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+512: guard_nonnull_class(p21, ConstClass(W_Symbol), descr=<Guard0x3f66740>) [p1, p0]
+531: p23 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+535: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x3f667a0>) [p1, p0]
+554: p25 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+558: p26 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+562: guard_nonnull_class(p26, 16616448, descr=<Guard0x3f66800>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+582: p28 = new_with_vtable(descr=<SizeDescr 32>)
+626: p29 = new_with_vtable(descr=<SizeDescr 48>)
+637: p30 = new_with_vtable(descr=<SizeDescr 32>)
+648: setfield_gc(p30, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+656: p33 = new_array_clear(4, descr=<ArrayP 8>)
+689: setarrayitem_gc(p33, 0, ConstPtr(ptr35), descr=<ArrayP 8>)
+693: setarrayitem_gc(p33, 1, p17, descr=<ArrayP 8>)
+697: setarrayitem_gc(p33, 2, p21, descr=<ArrayP 8>)
+701: setarrayitem_gc(p33, 3, p23, descr=<ArrayP 8>)
+705: setfield_gc(p30, p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+716: setfield_gc(p30, ConstPtr(ptr39), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+720: setfield_gc(p28, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+731: setfield_gc(p29, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+735: setfield_gc(p28, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+739: setfield_gc(p28, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+743: setfield_gc(p29, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+747: setfield_gc(p29, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+758: setfield_gc(p29, ConstPtr(ptr40), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+762: setfield_gc(p29, p30, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+766: jump(p28, p29, descr=TargetToken(59469520))
+800: --end of the loop--
[3e4c22b17ff2d5b] jit-log-opt-loop}
[3e4c22b18292441] {jit-backend
[3e4c22b1831b0ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6e
[3e4c22b18326183] jit-backend-dump}
[3e4c22b1833075f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6f24 +0  25000000
[3e4c22b18331d58] jit-backend-dump}
[3e4c22b18335b46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7245 +0  25000000
[3e4c22b18336a60] jit-backend-dump}
[3e4c22b18339cb1] {jit-backend-addr
bridge out of Guard 0x3d7ebc0 has address 0x7f4a5c1e6f20 to 0x7f4a5c1e7240
       gc table: 0x7f4a5c1e6e00
    jump target: 0x7f4a5c1e6f20
         resops: 0x7f4a5c1e6f2e
       failures: 0x7f4a5c1e7240
            end: 0x7f4a5c1e7593
[3e4c22b1833c04c] jit-backend-addr}
[3e4c22b1833f4e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6f3e +0  41030000
[3e4c22b1834036a] jit-backend-dump}
[3e4c22b183435e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6f4b +0  50030000
[3e4c22b1834438a] jit-backend-dump}
[3e4c22b18347517] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6f5b +0  5C030000
[3e4c22b18348276] jit-backend-dump}
[3e4c22b1834b302] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6f72 +0  61030000
[3e4c22b1834c04c] jit-backend-dump}
[3e4c22b1834f14f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6f7e +0  71030000
[3e4c22b1834fe67] jit-backend-dump}
[3e4c22b1835300d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6f92 +0  79030000
[3e4c22b18353d59] jit-backend-dump}
[3e4c22b18356f82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6fb2 +0  91030000
[3e4c22b18357cdb] jit-backend-dump}
[3e4c22b1835ad98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6fc6 +0  99030000
[3e4c22b1835bab0] jit-backend-dump}
[3e4c22b1835eaa6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6fdb +0  A0030000
[3e4c22b1835f7cb] jit-backend-dump}
[3e4c22b1836276c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6fe8 +0  AF030000
[3e4c22b1836348a] jit-backend-dump}
[3e4c22b183663de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6fff +0  B4030000
[3e4c22b1836710c] jit-backend-dump}
[3e4c22b1836a05d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7015 +0  BA030000
[3e4c22b1836adcb] jit-backend-dump}
[3e4c22b1836dd41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7028 +0  C3030000
[3e4c22b1836ea8a] jit-backend-dump}
[3e4c22b18371a2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e703f +0  C8030000
[3e4c22b18372743] jit-backend-dump}
[3e4c22b183756a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7056 +0  CD030000
[3e4c22b183763d7] jit-backend-dump}
[3e4c22b18379325] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7067 +0  D8030000
[3e4c22b1837a059] jit-backend-dump}
[3e4c22b1837cf9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e707e +0  DD030000
[3e4c22b1837dccf] jit-backend-dump}
[3e4c22b18380c14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7088 +0  EF030000
[3e4c22b1838198b] jit-backend-dump}
[3e4c22b18384904] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7095 +0  FE030000
[3e4c22b1838562e] jit-backend-dump}
[3e4c22b183885a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e70a7 +0  08040000
[3e4c22b183892de] jit-backend-dump}
[3e4c22b1838c223] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e70bc +0  0F040000
[3e4c22b1838cf3b] jit-backend-dump}
[3e4c22b1838feab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e70d2 +0  15040000
[3e4c22b18390bdc] jit-backend-dump}
[3e4c22b18393b36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e70db +0  28040000
[3e4c22b1839485e] jit-backend-dump}
[3e4c22b183977af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e70f2 +0  2D040000
[3e4c22b183984d3] jit-backend-dump}
[3e4c22b1839b4ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7108 +0  33040000
[3e4c22b1839c1d0] jit-backend-dump}
[3e4c22b1839f133] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7120 +0  37040000
[3e4c22b1839fe79] jit-backend-dump}
[3e4c22b183a2dc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7136 +0  3D040000
[3e4c22b183a3ae3] jit-backend-dump}
[3e4c22b183a6d77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb9a +0  82A30000
[3e4c22b183a7aae] jit-backend-dump}
[3e4c22b183ab97e] jit-backend}
[3e4c22b183af3a2] {jit-log-opt-bridge
# bridge out of Guard 0x3d7ebc0 with 102 ops
[p0, p1]
+310: guard_class(p1, 16500016, descr=<Guard0x3f66860>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+326: guard_nonnull(p3, descr=<Guard0x3e136e8>) [p0, p1]
+342: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+345: guard_true(i5, descr=<Guard0x3e13730>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
+351: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+355: guard_nonnull_class(p6, 16470384, descr=<Guard0x3f668c0>) [p0, p1]
+374: guard_class(p0, 16437896, descr=<Guard0x3e13778>) [p0, p1]
+386: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+397: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3e137c0>) [p0, p1]
+406: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+406: guard_not_invalidated(descr=<Guard0x3e13808>) [p0, p1]
+406: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+410: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+414: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
+418: guard_nonnull_class(p12, 16478824, descr=<Guard0x3f66920>) [p0, p1]
+438: guard_nonnull_class(p13, 16470384, descr=<Guard0x3f66980>) [p0, p1]
+458: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+470: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3e13850>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+479: guard_class(p14, 16437896, descr=<Guard0x3e13898>) [p0, p1]
+492: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+496: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3f669e0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+515: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+520: p23 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+525: guard_class(p23, 16505296, descr=<Guard0x3e138e0>) [p0, p1]
+537: guard_nonnull_class(p22, 16470384, descr=<Guard0x3f66a40>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+556: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+561: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3f66aa0>) [p0, p1]
+579: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+584: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3f66b00>) [p0, p1]
+602: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+606: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+610: i32 = int_eq(i30, i31)
+613: guard_false(i32, descr=<Guard0x3e13928>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+619: p33 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+624: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3f66b60>) [p0, p1]
+642: i36 = int_ge(i31, 0)
+646: guard_true(i36, descr=<Guard0x3e13970>) [p0, p1]
+652: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+656: i38 = int_lt(i31, i37)
+659: guard_true(i38, descr=<Guard0x3e139b8>) [p0, p1]
+665: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+669: guard_class(p39, 16622984, descr=<Guard0x3e13a00>) [p0, p1]
+683: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+687: p42 = getarrayitem_gc_r(p41, i31, descr=<ArrayP 8>)
+692: guard_class(p42, 16470384, descr=<Guard0x3e13a48>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+704: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+708: guard_nonnull_class(p44, 16616448, descr=<Guard0x3f66bc0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+726: i47 = instance_ptr_eq(p44, ConstPtr(ptr46))
+729: guard_true(i47, descr=<Guard0x3e13a90>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+735: p48 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+739: guard_nonnull_class(p48, ConstClass(W_Vector), descr=<Guard0x3f66c20>) [p0, p1]
+758: p50 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+762: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x3f66c80>) [p0, p1]
+780: p52 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+784: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x3f66ce0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+804: p54 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+808: guard_nonnull_class(p54, 16470384, descr=<Guard0x3f66d40>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+826: p56 = new_with_vtable(descr=<SizeDescr 32>)
+873: p57 = new_with_vtable(descr=<SizeDescr 40>)
+884: setfield_gc(p57, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+895: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+899: setfield_gc(p57, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+903: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+907: p59 = new_with_vtable(descr=<SizeDescr 48>)
+919: p60 = new_with_vtable(descr=<SizeDescr 32>)
+930: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+938: p63 = new_array_clear(4, descr=<ArrayP 8>)
+971: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+975: setarrayitem_gc(p63, 1, p48, descr=<ArrayP 8>)
+979: setarrayitem_gc(p63, 2, p50, descr=<ArrayP 8>)
+983: setarrayitem_gc(p63, 3, p52, descr=<ArrayP 8>)
+987: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+998: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1002: setfield_gc(p56, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1013: setfield_gc(p56, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1024: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1028: setfield_gc(p59, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1032: setfield_gc(p59, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1036: setfield_gc(p59, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1040: setfield_gc(p56, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1044: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1048: jump(p56, p59, descr=TargetToken(59469520))
+1088: --end of the loop--
[3e4c22b183fe606] jit-log-opt-bridge}
[3e4c22b18701fb2] {jit-backend
[3e4c22b187d1ccb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e77e
[3e4c22b187de5e9] jit-backend-dump}
[3e4c22b187e8dba] {jit-backend-addr
Loop 80 ((if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 (cdr ps5069) lst5071)) has address 0x7f4a5c1e799d to 0x7f4a5c1e7d70 (bootstrap 0x7f4a5c1e7910)
       gc table: 0x7f4a5c1e77e0
       function: 0x7f4a5c1e7910
         resops: 0x7f4a5c1e799d
       failures: 0x7f4a5c1e7d70
            end: 0x7f4a5c1e8157
[3e4c22b187ec7cc] jit-backend-addr}
[3e4c22b187f0cfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e79c7 +0  D4030000
[3e4c22b187f201f] jit-backend-dump}
[3e4c22b187f54c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e79dd +0  DA030000
[3e4c22b187f648a] jit-backend-dump}
[3e4c22b187f962c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e79ed +0  E6030000
[3e4c22b187fa385] jit-backend-dump}
[3e4c22b187fd3cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7a00 +0  EF030000
[3e4c22b187fe0ef] jit-backend-dump}
[3e4c22b188010df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7a16 +0  F5030000
[3e4c22b18801df5] jit-backend-dump}
[3e4c22b18808803] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7a2c +0  FB030000
[3e4c22b18809644] jit-backend-dump}
[3e4c22b1880cce5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7a3a +0  25040000
[3e4c22b1880da25] jit-backend-dump}
[3e4c22b18810afb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7a4b +0  30040000
[3e4c22b1881186f] jit-backend-dump}
[3e4c22b188147fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7a5d +0  3A040000
[3e4c22b18815531] jit-backend-dump}
[3e4c22b18818432] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7a6b +0  48040000
[3e4c22b1881914b] jit-backend-dump}
[3e4c22b1881c031] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7a79 +0  56040000
[3e4c22b1881cd4f] jit-backend-dump}
[3e4c22b1881fc8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7a8e +0  5D040000
[3e4c22b188209b9] jit-backend-dump}
[3e4c22b1882389f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7aa2 +0  65040000
[3e4c22b1882459c] jit-backend-dump}
[3e4c22b188273ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7ab8 +0  6B040000
[3e4c22b188280d9] jit-backend-dump}
[3e4c22b1882af3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7acc +0  73040000
[3e4c22b1882bc1d] jit-backend-dump}
[3e4c22b1882ea73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7ad6 +0  85040000
[3e4c22b1882f764] jit-backend-dump}
[3e4c22b18832625] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7ae3 +0  94040000
[3e4c22b18833313] jit-backend-dump}
[3e4c22b18836150] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7af4 +0  9F040000
[3e4c22b18836e22] jit-backend-dump}
[3e4c22b18839ca0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7b0a +0  A5040000
[3e4c22b1883a994] jit-backend-dump}
[3e4c22b1883d7f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7b21 +0  AA040000
[3e4c22b1883e4b6] jit-backend-dump}
[3e4c22b18841331] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7b37 +0  B0040000
[3e4c22b18841ffa] jit-backend-dump}
[3e4c22b18844e25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7b7a +0  89040000
[3e4c22b18845aeb] jit-backend-dump}
[3e4c22b18848a0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7b88 +0  B3040000
[3e4c22b18849711] jit-backend-dump}
[3e4c22b1884c5b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7b99 +0  BE040000
[3e4c22b1884d29e] jit-backend-dump}
[3e4c22b188500fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7bb2 +0  C1040000
[3e4c22b18850dd6] jit-backend-dump}
[3e4c22b18853ced] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7bc7 +0  C8040000
[3e4c22b188549c5] jit-backend-dump}
[3e4c22b1885781e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7bdc +0  CF040000
[3e4c22b188584f6] jit-backend-dump}
[3e4c22b1885b371] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7bee +0  D9040000
[3e4c22b1885c050] jit-backend-dump}
[3e4c22b1885eeaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7c0d +0  D6040000
[3e4c22b1885fc26] jit-backend-dump}
[3e4c22b18862a7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7c1d +0  E2040000
[3e4c22b18863767] jit-backend-dump}
[3e4c22b188665b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7c41 +0  DA040000
[3e4c22b1886728c] jit-backend-dump}
[3e4c22b1886a0d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7c57 +0  E0040000
[3e4c22b1886ade8] jit-backend-dump}
[3e4c22b1886ea30] jit-backend}
[3e4c22b188727c8] {jit-log-opt-loop
# Loop 80 ((if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 (cdr ps5069) lst5071)) : loop with 134 ops
[p0, p1]
+453: label(p0, p1, descr=TargetToken(64566704))
debug_merge_point(0, 0, '(if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 (cdr ps5069) lst5071)')
+472: guard_class(p0, 16500016, descr=<Guard0x3f66da0>) [p1, p0]
+491: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+495: guard_nonnull_class(p3, 16470384, descr=<Guard0x3f66e00>) [p1, p0]
+520: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+523: guard_false(i6, descr=<Guard0x3e13ad8>) [p1, p0]
debug_merge_point(0, 0, '(let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))')
+529: guard_class(p1, 16437896, descr=<Guard0x3e13b20>) [p1, p0]
+548: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+552: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3f66e60>) [p1, p0]
debug_merge_point(0, 0, '(car ps5069)')
+570: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+574: guard_nonnull_class(p10, ConstClass(W_Vector), descr=<Guard0x3f66ec0>) [p1, p0]
+592: guard_not_invalidated(descr=<Guard0x3e13b68>) [p1, p0]
debug_merge_point(0, 0, '(let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24)))')
debug_merge_point(0, 0, '(vector-ref p5075 0)')
+592: i12 = getfield_gc_i(p10, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+596: i14 = int_lt(0, i12)
+600: guard_true(i14, descr=<Guard0x3e13bb0>) [p1, p0]
+606: p15 = getfield_gc_r(p10, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+610: guard_class(p15, 16623792, descr=<Guard0x3e13bf8>) [p1, p0]
+623: p17 = getfield_gc_r(p10, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+627: i19 = getarrayitem_gc_i(p17, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 1)')
+631: i21 = int_lt(1, i12)
+635: guard_true(i21, descr=<Guard0x3e13c40>) [p1, p0]
+641: i23 = getarrayitem_gc_i(p17, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 2)')
+645: i25 = int_lt(2, i12)
+649: guard_true(i25, descr=<Guard0x3e13c88>) [p1, p0]
+655: i27 = getarrayitem_gc_i(p17, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 3)')
+659: i29 = int_lt(3, i12)
+663: guard_true(i29, descr=<Guard0x3e13cd0>) [p1, p0]
+669: i31 = getarrayitem_gc_i(p17, 3, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))')
debug_merge_point(0, 0, '(lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))')
+673: p32 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+677: guard_class(p32, 16477696, descr=<Guard0x3e13d18>) [p1, p0]
+690: p34 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+701: guard_value(p34, ConstPtr(ptr35), descr=<Guard0x3e13d60>) [p1, p0]
+710: p36 = getfield_gc_r(p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+714: p37 = getfield_gc_r(p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+718: guard_class(p37, 16505296, descr=<Guard0x3e13da8>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref radicals nc15078)')
+732: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x3f66f20>) [p1, p0]
+752: i41 = int_ge(i19, 0)
+756: guard_true(i41, descr=<Guard0x3e13df0>) [p1, p0]
+762: i42 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+766: i43 = int_lt(i19, i42)
+769: guard_true(i43, descr=<Guard0x3e13e38>) [p1, p0]
+775: p44 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+779: guard_class(p44, 16622984, descr=<Guard0x3e13e80>) [p1, p0]
+792: p46 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+796: p47 = getarrayitem_gc_r(p46, i19, descr=<ArrayP 8>)
+801: guard_class(p47, 16470384, descr=<Guard0x3e13ec8>) [p1, p0]
debug_merge_point(0, 0, '(loop15067 (cdr ps5069) lst5071)')
+814: p49 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+818: guard_nonnull_class(p49, 16470384, descr=<Guard0x3f66f80>) [p1, p0]
+837: p51 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+841: guard_nonnull_class(p51, 16616448, descr=<Guard0x3f66fe0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 (cdr ps5069) lst5071)')
+859: p53 = same_as_r(p36)
+862: p54 = same_as_r(p37)
+872: label(p32, p49, p51, p8, p37, p1, p36, i19, i31, i23, i27, p47, p53, p54, descr=TargetToken(64566784))
debug_merge_point(0, 0, '(if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 (cdr ps5069) lst5071)')
debug_merge_point(0, 0, '(let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))')
debug_merge_point(0, 0, '(car ps5069)')
+904: p55 = getfield_gc_r(p49, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+908: guard_nonnull_class(p55, ConstClass(W_Vector), descr=<Guard0x3f67040>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
+926: guard_not_invalidated(descr=<Guard0x3e13f10>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
debug_merge_point(0, 0, '(let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24)))')
debug_merge_point(0, 0, '(vector-ref p5075 0)')
+926: i57 = getfield_gc_i(p55, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+930: i59 = int_lt(0, i57)
+934: guard_true(i59, descr=<Guard0x3e13f58>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
+940: p60 = getfield_gc_r(p55, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+944: guard_class(p60, 16623792, descr=<Guard0x3e13fa0>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
+957: p62 = getfield_gc_r(p55, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+961: i64 = getarrayitem_gc_i(p62, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 1)')
+972: i66 = int_lt(1, i57)
+976: guard_true(i66, descr=<Guard0x3f76020>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
+982: i68 = getarrayitem_gc_i(p62, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 2)')
+993: i70 = int_lt(2, i57)
+997: guard_true(i70, descr=<Guard0x3f76068>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
+1003: i72 = getarrayitem_gc_i(p62, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 3)')
+1014: i74 = int_lt(3, i57)
+1018: guard_true(i74, descr=<Guard0x3f760b0>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
+1024: i76 = getarrayitem_gc_i(p62, 3, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))')
debug_merge_point(0, 0, '(lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))')
debug_merge_point(0, 0, '(vector-ref radicals nc15078)')
+1028: i78 = int_ge(i64, 0)
+1036: guard_true(i78, descr=<Guard0x3f760f8>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
+1042: i79 = getfield_gc_i(p53, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1060: i80 = int_lt(i64, i79)
+1067: guard_true(i80, descr=<Guard0x3f76140>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
+1073: p81 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1077: guard_class(p81, 16622984, descr=<Guard0x3f76188>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
+1089: p83 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1093: p84 = getarrayitem_gc_r(p83, i64, descr=<ArrayP 8>)
+1112: guard_class(p84, 16470384, descr=<Guard0x3f761d0>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
debug_merge_point(0, 0, '(loop15067 (cdr ps5069) lst5071)')
+1125: p86 = getfield_gc_r(p49, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1129: guard_nonnull_class(p86, 16470384, descr=<Guard0x3f670a0>) [p55, i27, i23, i31, i19, p36, p47, p1, p37, p51, p49, p32, p8]
debug_merge_point(0, 0, '(if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 (cdr ps5069) lst5071)')
+1147: p88 = new_with_vtable(descr=<SizeDescr 56>)
+1197: p89 = new_with_vtable(descr=<SizeDescr 64>)
+1208: setfield_gc(p89, p37, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1219: setfield_gc(p89, ConstPtr(ptr90), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1223: setfield_gc(p89, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1227: p91 = new_with_vtable(descr=<SizeDescr 16>)
+1239: setfield_gc(p91, i19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1243: setfield_gc(p89, p91, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1247: p92 = new_with_vtable(descr=<SizeDescr 16>)
+1258: setfield_gc(p92, i31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1262: setfield_gc(p89, p92, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1266: p93 = new_with_vtable(descr=<SizeDescr 16>)
+1277: setfield_gc(p93, i23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1281: setfield_gc(p89, p93, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1285: p94 = new_with_vtable(descr=<SizeDescr 16>)
+1296: setfield_gc(p94, i27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1300: setfield_gc(p89, p94, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1304: setfield_gc(p88, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1315: setfield_gc(p88, p37, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1319: setfield_gc(p88, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1330: setfield_gc(p88, ConstPtr(ptr95), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1334: setfield_gc(p88, p89, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1338: setfield_gc(p88, p47, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1342: jump(p32, p86, p51, p8, p54, p88, p53, i64, i76, i68, i72, p84, p53, p54, descr=TargetToken(64566784))
+1424: --end of the loop--
[3e4c22b188f18a2] jit-log-opt-loop}
[3e4c22b18ae9285] {jit-backend
[3e4c22b18b5501d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e82f0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5202000048FF0425E099D2038139700B01000F85000000004C8B71104D85F60F84000000004C8B2DFAFEFFFF4D39EE0F85000000004C8B69184983FD01720841817D00B09700000F850000000041813FC81800000F85000000004D8B77204C8B25E1FEFFFF4D39E60F85000000004D8B67284D8B77304D8B57184983FC01720841813C2420BA00000F85000000004983FE01720741813EB09700000F85000000004D8B4C24104C8B05C1FEFFFF4D39C10F850000000041813AC81800000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B4C2428498B7C2430498B742408813E102001000F8500000000498B5C24384883FB017206813B601400000F8500000000498B5424204883FA017206813A601400000F8500000000488B4308488B5A084839D80F8400000000498B4424184883F80172068138F08C00000F85000000004883FB000F8C00000000488B50084839D30F8D00000000488B5018813AC8EB02000F8500000000488B5010488B44DA108138B09700000F8500000000498B5E104883FB017206813B40D202000F8500000000488B0C25F091F900488D9188000000483B14251092F9000F87C200000048891425F091F90048C701700B0100488D512048C702C81800004C8D7A3849C70730B700004989770848898D30010000488B0DEDFDFFFF49894F104D894F1849897F204D8977284C8BB53001000049895E104D896E184C8B2DCFFDFFFF4C896A20488972104C897A28488942304C8952184C8942084D8966084C89B5300100004889953801000049BB10791C5C4A7F000041FFE30F1F84000000000048C7442408FFFFFF0049BB68811E5C4A7F00004C895D204D8D9B88C1FDFF41FFD3E988FDFFFF49BBD8821E5C4A7F00004C895D204D8D9B18C8FDFF41FFD3E929FFFFFFFF3577FCFFFF49BB78811E5C4A7F000041534D8D9B88BEFDFF41FFE3FF3563FCFFFF49BB88811E5C4A7F000041534D8D9B78BEFDFF41FFE3FF3557FCFFFF49BB98811E5C4A7F000041534D8D9B68BEFDFF41FFE3FF3543FCFFFF49BBA8811E5C4A7F000041534D8D9B58BEFDFF41FFE3FF352FFCFFFF49BBB8811E5C4A7F000041534D8D9B48BEFDFF41FFE3FF3523FCFFFF49BBC8811E5C4A7F000041534D8D9B38BEFDFF41FFE3FF350FFCFFFF49BBD8811E5C4A7F000041534D8D9B28BEFDFF41FFE3FF35FBFBFFFF49BBE8811E5C4A7F000041534D8D9B18BEFDFF41FFE3FF35E7FBFFFF49BBF8811E5C4A7F000041534D8D9B08BEFDFF41FFE3FF35DBFBFFFF49BB08821E5C4A7F000041534D8D9BF8BDFDFF41FFE3FF35C7FBFFFF49BB18821E5C4A7F000041534D8D9BE8BDFDFF41FFE3FF35B3FBFFFF49BB28821E5C4A7F000041534D8D9BD8BDFDFF41FFE3FF359FFBFFFF49BB38821E5C4A7F000041534D8D9BC8BDFDFF41FFE3FF358BFBFFFF49BB48821E5C4A7F000041534D8D9BB8BDFDFF41FFE3FF3577FBFFFF49BB58821E5C4A7F000041534D8D9BA8BDFDFF41FFE3FF3563FBFFFF49BB68821E5C4A7F000041534D8D9B98BDFDFF41FFE3FF354FFBFFFF49BB78821E5C4A7F000041534D8D9B88BDFDFF41FFE3FF353BFBFFFF49BB88821E5C4A7F000041534D8D9B78BDFDFF41FFE3FF3527FBFFFF49BB98821E5C4A7F000041534D8D9B68BDFDFF41FFE3FF3513FBFFFF49BBA8821E5C4A7F000041534D8D9B58BDFDFF41FFE3FF35FFFAFFFF49BBB8821E5C4A7F000041534D8D9B48BDFDFF41FFE3FF35EBFAFFFF49BBC8821E5C4A7F000041534D8D9B38BDFDFF41FFE3
[3e4c22b18b5e4fb] jit-backend-dump}
[3e4c22b18b68974] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e83d4 +0  28000000
[3e4c22b18b69de5] jit-backend-dump}
[3e4c22b18b6de18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8635 +0  28000000
[3e4c22b18b6ee6b] jit-backend-dump}
[3e4c22b18b72218] {jit-backend-addr
bridge out of Guard 0x3f663e0 has address 0x7f4a5c1e83d0 to 0x7f4a5c1e8630
       gc table: 0x7f4a5c1e82f0
    jump target: 0x7f4a5c1e83d0
         resops: 0x7f4a5c1e83de
       failures: 0x7f4a5c1e8630
            end: 0x7f4a5c1e88db
[3e4c22b18b74787] jit-backend-addr}
[3e4c22b18b77b13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e83ee +0  81020000
[3e4c22b18b788da] jit-backend-dump}
[3e4c22b18b7b907] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e83fb +0  90020000
[3e4c22b18b7c623] jit-backend-dump}
[3e4c22b18b7f5b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e840b +0  9C020000
[3e4c22b18b80277] jit-backend-dump}
[3e4c22b18b83160] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8423 +0  A0020000
[3e4c22b18b83e1f] jit-backend-dump}
[3e4c22b18b86dcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8430 +0  AF020000
[3e4c22b18b87a9e] jit-backend-dump}
[3e4c22b18b8aaa7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8444 +0  B7020000
[3e4c22b18b8b75a] jit-backend-dump}
[3e4c22b18b8e7b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8464 +0  CF020000
[3e4c22b18b8f478] jit-backend-dump}
[3e4c22b18b923c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8477 +0  D8020000
[3e4c22b18b93076] jit-backend-dump}
[3e4c22b18b95f81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e848c +0  DF020000
[3e4c22b18b96c2e] jit-backend-dump}
[3e4c22b18b99b0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8499 +0  EE020000
[3e4c22b18b9a7c8] jit-backend-dump}
[3e4c22b18b9d6dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e84b0 +0  F3020000
[3e4c22b18b9e3df] jit-backend-dump}
[3e4c22b18ba12ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e84cb +0  F4020000
[3e4c22b18ba1fac] jit-backend-dump}
[3e4c22b18ba4e6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e84e2 +0  F9020000
[3e4c22b18ba5b24] jit-backend-dump}
[3e4c22b18ba8a07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e84f9 +0  FE020000
[3e4c22b18ba96d9] jit-backend-dump}
[3e4c22b18bac5d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e850a +0  09030000
[3e4c22b18bad27b] jit-backend-dump}
[3e4c22b18bb0167] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8521 +0  0E030000
[3e4c22b18bb0e15] jit-backend-dump}
[3e4c22b18bb3ccd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e852b +0  20030000
[3e4c22b18bb4990] jit-backend-dump}
[3e4c22b18bb7860] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8538 +0  2F030000
[3e4c22b18bb852f] jit-backend-dump}
[3e4c22b18bbb3e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8548 +0  3B030000
[3e4c22b18bbc0aa] jit-backend-dump}
[3e4c22b18bbef6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e855d +0  42030000
[3e4c22b18bbfc1f] jit-backend-dump}
[3e4c22b18bc2af5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8573 +0  48030000
[3e4c22b18bc37a6] jit-backend-dump}
[3e4c22b18bc694e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e6301 +0  CB200000
[3e4c22b18bc7633] jit-backend-dump}
[3e4c22b18bcb596] jit-backend}
[3e4c22b18bcf000] {jit-log-opt-bridge
# bridge out of Guard 0x3f663e0 with 78 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x3f67100>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x3f76218>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x3f76260>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16470384, descr=<Guard0x3f67160>) [p0, p1]
+311: guard_class(p0, 16437896, descr=<Guard0x3f762a8>) [p0, p1]
+324: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+335: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3f762f0>) [p0, p1]
+344: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+344: guard_not_invalidated(descr=<Guard0x3f76338>) [p0, p1]
+344: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+348: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+352: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
+356: guard_nonnull_class(p12, 16479200, descr=<Guard0x3f671c0>) [p0, p1]
+376: guard_nonnull_class(p13, 16470384, descr=<Guard0x3f67220>) [p0, p1]
+395: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+407: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3f76380>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+416: guard_class(p14, 16437896, descr=<Guard0x3f763c8>) [p0, p1]
+429: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+433: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3f67280>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+452: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+457: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+462: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+467: guard_class(p24, 16505296, descr=<Guard0x3f76410>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+479: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+484: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3f672e0>) [p0, p1]
+502: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+507: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3f67340>) [p0, p1]
+525: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+529: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+533: i32 = int_eq(i30, i31)
+536: guard_false(i32, descr=<Guard0x3f76458>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, '(vector-ref radicals nc4)')
+542: p33 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+547: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3f673a0>) [p0, p1]
+565: i36 = int_ge(i31, 0)
+569: guard_true(i36, descr=<Guard0x3f764a0>) [p0, p1]
+575: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+579: i38 = int_lt(i31, i37)
+582: guard_true(i38, descr=<Guard0x3f764e8>) [p0, p1]
+588: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+592: guard_class(p39, 16622984, descr=<Guard0x3f76530>) [p0, p1]
+604: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: p42 = getarrayitem_gc_r(p41, i31, descr=<ArrayP 8>)
+613: guard_class(p42, 16470384, descr=<Guard0x3f76578>) [p0, p1]
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+625: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+629: guard_nonnull_class(p44, 16616448, descr=<Guard0x3f67400>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+647: p46 = new_with_vtable(descr=<SizeDescr 32>)
+691: p47 = new_with_vtable(descr=<SizeDescr 56>)
+702: p48 = new_with_vtable(descr=<SizeDescr 48>)
+713: setfield_gc(p48, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+731: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+735: setfield_gc(p48, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+739: setfield_gc(p48, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+743: setfield_gc(p48, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+747: setfield_gc(p46, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+758: setfield_gc(p46, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+769: setfield_gc(p47, ConstPtr(ptr50), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+773: setfield_gc(p47, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+777: setfield_gc(p47, p48, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+781: setfield_gc(p47, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+785: setfield_gc(p47, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+789: setfield_gc(p47, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+793: setfield_gc(p46, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+797: jump(p46, p47, descr=TargetToken(59470000))
+832: --end of the loop--
[3e4c22b18c1c86d] jit-log-opt-bridge}
[3e4c22b18d65768] {jit-backend
[3e4c22b18dce9a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e
[3e4c22b18dd533e] jit-backend-dump}
[3e4c22b18ddf363] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e89c4 +0  28000000
[3e4c22b18de06b2] jit-backend-dump}
[3e4c22b18de4104] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8bd5 +0  28000000
[3e4c22b18de4ed1] jit-backend-dump}
[3e4c22b18de7fc8] {jit-backend-addr
bridge out of Guard 0x3b6fec8 has address 0x7f4a5c1e89c0 to 0x7f4a5c1e8bd0
       gc table: 0x7f4a5c1e8970
    jump target: 0x7f4a5c1e89c0
         resops: 0x7f4a5c1e89ce
       failures: 0x7f4a5c1e8bd0
            end: 0x7f4a5c1e8cbb
[3e4c22b18dea44c] jit-backend-addr}
[3e4c22b18ded9a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e89ed +0  3E020000
[3e4c22b18dee73f] jit-backend-dump}
[3e4c22b18df18ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8a03 +0  44020000
[3e4c22b18df25cc] jit-backend-dump}
[3e4c22b18df55f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8a1b +0  48020000
[3e4c22b18df633c] jit-backend-dump}
[3e4c22b18df92c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8a2c +0  53020000
[3e4c22b18df9fb2] jit-backend-dump}
[3e4c22b18dfcf86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8a56 +0  45020000
[3e4c22b18dfdc4c] jit-backend-dump}
[3e4c22b18e00e1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5755 +0  67320100
[3e4c22b18e01ad0] jit-backend-dump}
[3e4c22b18e057c6] jit-backend}
[3e4c22b18e09094] {jit-log-opt-bridge
# bridge out of Guard 0x3b6fec8 with 55 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+102: guard_not_invalidated(descr=<Guard0x3f67460>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+102: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+120: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3f765c0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+129: p19 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+133: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x3f674c0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+151: p21 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+155: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3f67520>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+175: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+179: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+183: i25 = int_eq(i23, i24)
+186: guard_true(i25, descr=<Guard0x3f76608>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
+192: p26 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+203: p27 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+214: guard_nonnull_class(p27, 16470384, descr=<Guard0x3f67580>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+234: p29 = new_with_vtable(descr=<SizeDescr 32>)
+292: p30 = new_with_vtable(descr=<SizeDescr 56>)
+303: p31 = new_with_vtable(descr=<SizeDescr 56>)
+321: setfield_gc(p31, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+339: setfield_gc(p31, p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+343: setfield_gc(p31, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+368: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+372: p33 = new_with_vtable(descr=<SizeDescr 64>)
+390: setfield_gc(p33, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+401: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+405: setfield_gc(p33, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+409: setfield_gc(p33, p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+413: setfield_gc(p33, p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+417: setfield_gc(p33, p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+421: setfield_gc(p33, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+425: setfield_gc(p31, p33, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+429: setfield_gc(p31, p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+433: p35 = new_with_vtable(descr=<SizeDescr 64>)
+444: setfield_gc(p35, p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+455: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+459: setfield_gc(p35, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+463: setfield_gc(p35, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+474: setfield_gc(p35, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+485: setfield_gc(p35, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+496: setfield_gc(p35, p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+507: setfield_gc(p29, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+519: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+524: setfield_gc(p29, p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+536: setfield_gc(p30, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+547: setfield_gc(p30, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+558: setfield_gc(p30, p31, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+562: setfield_gc(p30, ConstPtr(ptr37), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+573: setfield_gc(p30, p35, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+577: setfield_gc(p30, p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+581: jump(p29, p30, descr=TargetToken(61027120))
+608: --end of the loop--
[3e4c22b18e37fc5] jit-log-opt-bridge}
[3e4c22b1978a33a] {jit-backend
[3e4c22b1980dbe4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8eb0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C1203000048FF04252099D2038139700B01000F85000000004C8B79104D85FF0F84000000004C8B35BAFEFFFF4D39F70F85000000004C8B79184983FF01720741813FB09700000F8500000000813BC81800000F85000000004C8B6B204C8B25A3FEFFFF4D39E50F85000000004C8B63284C8B6B304C8B53184983FC01720841813C24A8B800000F85000000004983FD01720841817D00B09700000F85000000004D8B4C24104C8B0582FEFFFF4D39C10F850000000041813AC81800000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B4C2420498B7C2408813F102001000F85000000004983F9017207418139B09700000F8500000000498B7424284883FE017206813E601400000F8500000000498B5424304883FA017206813A601400000F8500000000488B4608488B72084839F00F8400000000498B4424184883F80172068138F08C00000F85000000004883FE000F8C000000004C8B60084C39E60F8D000000004C8B601841813C24C8EB02000F85000000004C8B6010498B44F4108138B09700000F8500000000498B75104883FE017206813E40D202000F85000000004C39F60F85000000004D8B71084983FE01720741813E382300000F8500000000498B75084883FE017206813EF08C00000F85000000004C8B60084983FC01720841813C24F08C00000F8500000000488B50104883FA017206813A40D202000F85000000004889D3488B0C25F091F900488D91C8000000483B14251092F9000F870C01000048891425F091F90048C701700B0100488D512048C702B8B5000048897A08488B0579FDFFFF488942104C894A184C896A204C8D6A2849C74500A81600004D8D4D3049C701F08C000049C7410804000000498D412048C700080E000048C740080400000048898D30010000488B0D35FDFFFF488948104C897018488970204C89602849894110488B0522FDFFFF49894118488B8530010000488958104C8978184C8B3D10FDFFFF4D897D2049897D104D8955184D894508488950084D894D28488985300100004C89AD3801000049BBC05A1C5C4A7F000041FFE3666666662E0F1F84000000000048C7442408FFFFFF0049BBC88C1E5C4A7F00004C895D204D8D9B28B6FDFF41FFD3E9C8FCFFFF49BB988E1E5C4A7F00004C895D204D8D9B58BCFDFF41FFD3E9DFFEFFFFFF3577FBFFFF49BBD88C1E5C4A7F000041534D8D9B28B3FDFF41FFE3FF3563FBFFFF49BBE88C1E5C4A7F000041534D8D9B18B3FDFF41FFE3FF3557FBFFFF49BBF88C1E5C4A7F000041534D8D9B08B3FDFF41FFE3FF3543FBFFFF49BB088D1E5C4A7F000041534D8D9BF8B2FDFF41FFE3FF352FFBFFFF49BB188D1E5C4A7F000041534D8D9BE8B2FDFF41FFE3FF3523FBFFFF49BB288D1E5C4A7F000041534D8D9BD8B2FDFF41FFE3FF350FFBFFFF49BB388D1E5C4A7F000041534D8D9BC8B2FDFF41FFE3FF35FBFAFFFF49BB488D1E5C4A7F000041534D8D9BB8B2FDFF41FFE3FF35E7FAFFFF49BB588D1E5C4A7F000041534D8D9BA8B2FDFF41FFE3FF35DBFAFFFF49BB688D1E5C4A7F000041534D8D9B98B2FDFF41FFE3FF35C7FAFFFF49BB788D1E5C4A7F000041534D8D9B88B2FDFF41FFE3FF35B3FAFFFF49BB888D1E5C4A7F000041534D8D9B78B2FDFF41FFE3FF359FFAFFFF49BB988D1E5C4A7F000041534D8D9B68B2FDFF41FFE3FF358BFAFFFF49BBA88D1E5C4A7F000041534D8D9B58B2FDFF41FFE3FF3577FAFFFF49BBB88D1E5C4A7F000041534D8D9B48B2FDFF41FFE3FF3563FAFFFF49BBC88D1E5C4A7F000041534D8D9B38B2FDFF41FFE3FF354FFAFFFF49BBD88D1E5C4A7F000041534D8D9B28B2FDFF41FFE3FF353BFAFFFF49BBE88D1E5C4A7F000041534D8D9B18B2FDFF41FFE3FF3527FAFFFF49BBF88D1E5C4A7F000041534D8D9B08B2FDFF41FFE3FF3513FAFFFF49BB088E1E5C4A7F000041534D8D9BF8B1FDFF41FFE3FF35FFF9FFFF49BB188E1E5C4A7F000041534D8D9BE8B1FDFF41FFE3FF35EBF9FFFF49BB288E1E5C4A7F000041534D8D9BD8B1FDFF41FFE3FF35D7F9FFFF49BB388E1E5C4A7F000041534D8D9BC8B1FDFF41FFE3FF35C3F9FFFF49BB488E1E5C4A7F000041534D8D9BB8B1FDFF41FFE3FF35AFF9FFFF49BB588E1E5C4A7F000041534D8D9BA8B1FDFF41FFE3FF359BF9FFFF49BB688E1E5C4A7F000041534D8D9B98B1FDFF41FFE3FF3587F9FFFF49BB788E1E5C4A7F000041534D8D9B88B1FDFF41FFE3FF3573F9FFFF49BB888E1E5C4A7F000041534D8D9B78B1FDFF41FFE3
[3e4c22b19819053] jit-backend-dump}
[3e4c22b19824286] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8fd4 +0  25000000
[3e4c22b1982579a] jit-backend-dump}
[3e4c22b198296d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e92f5 +0  25000000
[3e4c22b1982a6aa] jit-backend-dump}
[3e4c22b1982db6e] {jit-backend-addr
bridge out of Guard 0x3d7ece0 has address 0x7f4a5c1e8fd0 to 0x7f4a5c1e92f0
       gc table: 0x7f4a5c1e8eb0
    jump target: 0x7f4a5c1e8fd0
         resops: 0x7f4a5c1e8fde
       failures: 0x7f4a5c1e92f0
            end: 0x7f4a5c1e9643
[3e4c22b1982ffcd] jit-backend-addr}
[3e4c22b198332fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8fee +0  41030000
[3e4c22b19834194] jit-backend-dump}
[3e4c22b1983745c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8ffb +0  50030000
[3e4c22b198381d3] jit-backend-dump}
[3e4c22b1983b206] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e900b +0  5C030000
[3e4c22b1983bf4d] jit-backend-dump}
[3e4c22b1983ef40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9022 +0  61030000
[3e4c22b1983fc1b] jit-backend-dump}
[3e4c22b19842c02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e902e +0  71030000
[3e4c22b19843908] jit-backend-dump}
[3e4c22b198468ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9042 +0  79030000
[3e4c22b198475ac] jit-backend-dump}
[3e4c22b1984a6a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9062 +0  91030000
[3e4c22b1984b3af] jit-backend-dump}
[3e4c22b1984e3b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9076 +0  99030000
[3e4c22b1984f0c4] jit-backend-dump}
[3e4c22b198520a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e908b +0  A0030000
[3e4c22b19852da7] jit-backend-dump}
[3e4c22b19855d82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9098 +0  AF030000
[3e4c22b19856a66] jit-backend-dump}
[3e4c22b19859a44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e90af +0  B4030000
[3e4c22b1985a735] jit-backend-dump}
[3e4c22b1985d6c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e90c5 +0  BA030000
[3e4c22b1985e3a7] jit-backend-dump}
[3e4c22b19861382] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e90d8 +0  C3030000
[3e4c22b1986207c] jit-backend-dump}
[3e4c22b19865001] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e90ef +0  C8030000
[3e4c22b19865d01] jit-backend-dump}
[3e4c22b19868c9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9106 +0  CD030000
[3e4c22b19869995] jit-backend-dump}
[3e4c22b1986c920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9117 +0  D8030000
[3e4c22b1986d61d] jit-backend-dump}
[3e4c22b198705ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e912e +0  DD030000
[3e4c22b19871296] jit-backend-dump}
[3e4c22b19874224] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9138 +0  EF030000
[3e4c22b19874f05] jit-backend-dump}
[3e4c22b19877e84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9145 +0  FE030000
[3e4c22b19878b5f] jit-backend-dump}
[3e4c22b1987bb00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9157 +0  08040000
[3e4c22b1987c7fd] jit-backend-dump}
[3e4c22b1987f7d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e916c +0  0F040000
[3e4c22b198804b9] jit-backend-dump}
[3e4c22b19883453] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9182 +0  15040000
[3e4c22b1988412e] jit-backend-dump}
[3e4c22b198870c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e918b +0  28040000
[3e4c22b19887dea] jit-backend-dump}
[3e4c22b1988adcb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e91a2 +0  2D040000
[3e4c22b1988bab0] jit-backend-dump}
[3e4c22b1988eaca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e91b8 +0  33040000
[3e4c22b1988f7be] jit-backend-dump}
[3e4c22b1989275c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e91d0 +0  37040000
[3e4c22b19893452] jit-backend-dump}
[3e4c22b1989640e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e91e6 +0  3D040000
[3e4c22b198970f3] jit-backend-dump}
[3e4c22b1989a396] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcbdf +0  EDC30000
[3e4c22b1989b099] jit-backend-dump}
[3e4c22b1989efd8] jit-backend}
[3e4c22b198a2b3d] {jit-log-opt-bridge
# bridge out of Guard 0x3d7ece0 with 102 ops
[p0, p1]
+310: guard_class(p1, 16500016, descr=<Guard0x3f67640>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+326: guard_nonnull(p3, descr=<Guard0x3f766e0>) [p0, p1]
+342: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+345: guard_true(i5, descr=<Guard0x3f76728>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
+351: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+355: guard_nonnull_class(p6, 16470384, descr=<Guard0x3f676a0>) [p0, p1]
+374: guard_class(p0, 16437896, descr=<Guard0x3f76770>) [p0, p1]
+386: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+397: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3f767b8>) [p0, p1]
+406: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+406: guard_not_invalidated(descr=<Guard0x3f76800>) [p0, p1]
+406: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+410: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+414: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
+418: guard_nonnull_class(p12, 16478824, descr=<Guard0x3f67700>) [p0, p1]
+438: guard_nonnull_class(p13, 16470384, descr=<Guard0x3f67760>) [p0, p1]
+458: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+470: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3f76848>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+479: guard_class(p14, 16437896, descr=<Guard0x3f76890>) [p0, p1]
+492: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+496: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3f677c0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+515: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+520: p23 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+525: guard_class(p23, 16505296, descr=<Guard0x3f768d8>) [p0, p1]
+537: guard_nonnull_class(p22, 16470384, descr=<Guard0x3f67820>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+556: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+561: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3f67880>) [p0, p1]
+579: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+584: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x3f678e0>) [p0, p1]
+602: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+606: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+610: i32 = int_eq(i30, i31)
+613: guard_false(i32, descr=<Guard0x3f76920>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+619: p33 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+624: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3f67940>) [p0, p1]
+642: i36 = int_ge(i31, 0)
+646: guard_true(i36, descr=<Guard0x3f76968>) [p0, p1]
+652: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+656: i38 = int_lt(i31, i37)
+659: guard_true(i38, descr=<Guard0x3f769b0>) [p0, p1]
+665: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+669: guard_class(p39, 16622984, descr=<Guard0x3f769f8>) [p0, p1]
+683: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+687: p42 = getarrayitem_gc_r(p41, i31, descr=<ArrayP 8>)
+692: guard_class(p42, 16470384, descr=<Guard0x3f76a40>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+704: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+708: guard_nonnull_class(p44, 16616448, descr=<Guard0x3f679a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+726: i47 = instance_ptr_eq(p44, ConstPtr(ptr46))
+729: guard_true(i47, descr=<Guard0x3f76a88>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+735: p48 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+739: guard_nonnull_class(p48, ConstClass(W_Symbol), descr=<Guard0x3f67a00>) [p0, p1]
+758: p50 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+762: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x3f67a60>) [p0, p1]
+780: p52 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+784: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x3f67ac0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+804: p54 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+808: guard_nonnull_class(p54, 16616448, descr=<Guard0x3f67b20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+826: p56 = new_with_vtable(descr=<SizeDescr 32>)
+873: p57 = new_with_vtable(descr=<SizeDescr 40>)
+884: setfield_gc(p57, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+895: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+899: setfield_gc(p57, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+903: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+907: p59 = new_with_vtable(descr=<SizeDescr 48>)
+919: p60 = new_with_vtable(descr=<SizeDescr 32>)
+930: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+938: p63 = new_array_clear(4, descr=<ArrayP 8>)
+971: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+975: setarrayitem_gc(p63, 1, p48, descr=<ArrayP 8>)
+979: setarrayitem_gc(p63, 2, p50, descr=<ArrayP 8>)
+983: setarrayitem_gc(p63, 3, p52, descr=<ArrayP 8>)
+987: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+998: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1002: setfield_gc(p56, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1013: setfield_gc(p56, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1024: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1028: setfield_gc(p59, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1032: setfield_gc(p59, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1036: setfield_gc(p59, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1040: setfield_gc(p56, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1044: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1048: jump(p56, p59, descr=TargetToken(59469520))
+1088: --end of the loop--
[3e4c22b198f618b] jit-log-opt-bridge}
[3e4c22b19c12a00] {jit-backend
[3e4c22b19c930ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9820 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F871303000048FF0425A099D203488B8D300100008139700B01000F8500000000488B41104883F80172068138F08C00000F8500000000488B51184883FA017206813A40D202000F8500000000488B9D38010000813BC81800000F8500000000488B7320488B3D1EFEFFFF4839FE0F8500000000488B7B28488B73304C8B43184883FF017206813FA8B800000F85000000004883FE017206813EB09700000F85000000004C8B4F104C8B1502FEFFFF4D39D10F8500000000418138C81800000F85000000004D8B50084983FA01720741813A900F00000F85000000004C8B4F184C8B67204C8B6F304C8B770841813E102001000F85000000004C8B7F284983FF01720741813F601400000F85000000004983FC01720841813C24601400000F8500000000498B7F084D8B7C24084C39FF0F8500000000488B7E104883FF017206813F40D202000F85000000004C8B25A6FDFFFF4C39E70F85000000004983FD01720841817D00601400000F85000000004D8B65084D39E70F84000000004983F9017207418139F08C00000F85000000004983FC000F8C000000004D8B79084D39FC0F8D000000004D8B791841813FC8EB02000F85000000004D8B79104F8B4CE710418139B09700000F85000000004C8B66084983FC01720841813C24F08C00000F85000000004D8B79084983FF01720741813FF08C00000F85000000004D8B69104983FD01720841817D00B09700000F85000000004889D3488B0C25F091F900488D91E0000000483B14251092F9000F87F600000048891425F091F90048C701700B0100488D512048C702B8B500004C8972084C8B0DFFFCFFFF4C894A104889721848897220488D722848C706B09700004889460848895E10488D5E1848C703A8160000488D433048C700F08C000048C74008040000004C8D482049C701080E000049C7410804000000488B3DB0FCFFFF498979104D8961184D8961204D8979284C8948104C8B0D9DFCFFFF4C8948184C89691048897118488B3592FCFFFF488973204C8973104C8943184C895308488951084889432848898D3001000048899D3801000049BBC05A1C5C4A7F000041FFE30F1F800000000049BB50571C5C4A7F000041FFD3E9DBFCFFFF49BB10981E5C4A7F00004C895D204D8D9BE0B2FDFF41FFD3E9F5FEFFFFFF351BFBFFFF49BB60961E5C4A7F000041534D8D9BA0A9FDFF41FFE3FF3507FBFFFF49BB70961E5C4A7F000041534D8D9B90A9FDFF41FFE3FF35F3FAFFFF49BB80961E5C4A7F000041534D8D9B80A9FDFF41FFE3FF35DFFAFFFF49BB90961E5C4A7F000041534D8D9B70A9FDFF41FFE3FF35D3FAFFFF49BBA0961E5C4A7F000041534D8D9B60A9FDFF41FFE3FF35BFFAFFFF49BBB0961E5C4A7F000041534D8D9B50A9FDFF41FFE3FF35ABFAFFFF49BBC0961E5C4A7F000041534D8D9B40A9FDFF41FFE3FF3597FAFFFF49BBD0961E5C4A7F000041534D8D9B30A9FDFF41FFE3FF358BFAFFFF49BBE0961E5C4A7F000041534D8D9B20A9FDFF41FFE3FF3577FAFFFF49BBF0961E5C4A7F000041534D8D9B10A9FDFF41FFE3FF3563FAFFFF49BB00971E5C4A7F000041534D8D9B00A9FDFF41FFE3FF354FFAFFFF49BB10971E5C4A7F000041534D8D9BF0A8FDFF41FFE3FF353BFAFFFF49BB20971E5C4A7F000041534D8D9BE0A8FDFF41FFE3FF3527FAFFFF49BB30971E5C4A7F000041534D8D9BD0A8FDFF41FFE3FF3513FAFFFF49BB40971E5C4A7F000041534D8D9BC0A8FDFF41FFE3FF35FFF9FFFF49BB50971E5C4A7F000041534D8D9BB0A8FDFF41FFE3FF35F3F9FFFF49BB60971E5C4A7F000041534D8D9BA0A8FDFF41FFE3FF35DFF9FFFF49BB70971E5C4A7F000041534D8D9B90A8FDFF41FFE3FF35CBF9FFFF49BB80971E5C4A7F000041534D8D9B80A8FDFF41FFE3FF35B7F9FFFF49BB90971E5C4A7F000041534D8D9B70A8FDFF41FFE3FF35A3F9FFFF49BBA0971E5C4A7F000041534D8D9B60A8FDFF41FFE3FF358FF9FFFF49BBB0971E5C4A7F000041534D8D9B50A8FDFF41FFE3FF357BF9FFFF49BBC0971E5C4A7F000041534D8D9B40A8FDFF41FFE3FF3567F9FFFF49BBD0971E5C4A7F000041534D8D9B30A8FDFF41FFE3FF3553F9FFFF49BBE0971E5C4A7F000041534D8D9B20A8FDFF41FFE3FF353FF9FFFF49BBF0971E5C4A7F000041534D8D9B10A8FDFF41FFE3FF352BF9FFFF49BB00981E5C4A7F000041534D8D9B00A8FDFF41FFE3
[3e4c22b19c9e9c6] jit-backend-dump}
[3e4c22b19ca959e] {jit-backend-addr
Loop 84 ((cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)) has address 0x7f4a5c1e99bd to 0x7f4a5c1e9cd0 (bootstrap 0x7f4a5c1e9930)
       gc table: 0x7f4a5c1e9820
       function: 0x7f4a5c1e9930
         resops: 0x7f4a5c1e99bd
       failures: 0x7f4a5c1e9cd0
            end: 0x7f4a5c1e9ff3
[3e4c22b19cac582] jit-backend-addr}
[3e4c22b19cb086f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e99d4 +0  27030000
[3e4c22b19cb1c10] jit-backend-dump}
[3e4c22b19cb51d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e99ea +0  2D030000
[3e4c22b19cb5ffb] jit-backend-dump}
[3e4c22b19cb93b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a00 +0  33030000
[3e4c22b19cba0d9] jit-backend-dump}
[3e4c22b19cbd314] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a13 +0  3C030000
[3e4c22b19cbe04b] jit-backend-dump}
[3e4c22b19cc11cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a27 +0  44030000
[3e4c22b19cc1efa] jit-backend-dump}
[3e4c22b19cc50cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a45 +0  5E030000
[3e4c22b19cc5de6] jit-backend-dump}
[3e4c22b19cc8ebe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a57 +0  68030000
[3e4c22b19cc9baf] jit-backend-dump}
[3e4c22b19cccbdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a6b +0  70030000
[3e4c22b19ccd907] jit-backend-dump}
[3e4c22b19cd0898] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a78 +0  7F030000
[3e4c22b19cd1567] jit-backend-dump}
[3e4c22b19cd45f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a8f +0  84030000
[3e4c22b19cd52e4] jit-backend-dump}
[3e4c22b19cd8305] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9aac +0  83030000
[3e4c22b19cd8fe9] jit-backend-dump}
[3e4c22b19cdbfdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9ac3 +0  88030000
[3e4c22b19cdccdc] jit-backend-dump}
[3e4c22b19cdfc86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9ad7 +0  90030000
[3e4c22b19ce0961] jit-backend-dump}
[3e4c22b19ce39d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9ae9 +0  9A030000
[3e4c22b19ce46d8] jit-backend-dump}
[3e4c22b19ce7705] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9aff +0  A0030000
[3e4c22b19ce83f3] jit-backend-dump}
[3e4c22b19ceb3af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9b0f +0  AC030000
[3e4c22b19cec0bb] jit-backend-dump}
[3e4c22b19cef07a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9b23 +0  B4030000
[3e4c22b19cefd6b] jit-backend-dump}
[3e4c22b19cf2d3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9b30 +0  C3030000
[3e4c22b19cf3a17] jit-backend-dump}
[3e4c22b19cf69e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9b43 +0  CC030000
[3e4c22b19cf76c1] jit-backend-dump}
[3e4c22b19cfa689] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9b4d +0  DE030000
[3e4c22b19cfb374] jit-backend-dump}
[3e4c22b19cfe376] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9b5a +0  ED030000
[3e4c22b19cff045] jit-backend-dump}
[3e4c22b19d02029] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9b6b +0  F8030000
[3e4c22b19d02d6c] jit-backend-dump}
[3e4c22b19d05d38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9b81 +0  FE030000
[3e4c22b19d06a13] jit-backend-dump}
[3e4c22b19d099f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9b99 +0  02040000
[3e4c22b19d0a6de] jit-backend-dump}
[3e4c22b19d0d6b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9bb0 +0  07040000
[3e4c22b19d0e394] jit-backend-dump}
[3e4c22b19d1135c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9bc8 +0  0B040000
[3e4c22b19d12041] jit-backend-dump}
[3e4c22b19d15b60] jit-backend}
[3e4c22b19d198be] {jit-log-opt-loop
# Loop 84 ((cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)) : entry bridge with 116 ops
[p0, p1]
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+421: guard_class(p0, 16500016, descr=<Guard0x3f67b80>) [p1, p0]
+440: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+444: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x3f67be0>) [p1, p0]
+462: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+466: guard_nonnull_class(p5, 16616448, descr=<Guard0x3f67c40>) [p1, p0]
+484: guard_class(p1, 16437896, descr=<Guard0x3f76b18>) [p1, p0]
+503: p8 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+514: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3f76b60>) [p1, p0]
+523: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+523: guard_not_invalidated(descr=<Guard0x3f76ba8>) [p1, p0]
+523: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+527: p12 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+531: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+535: guard_nonnull_class(p11, 16478824, descr=<Guard0x3f67ca0>) [p1, p0]
+553: guard_nonnull_class(p12, 16470384, descr=<Guard0x3f67d00>) [p1, p0]
+571: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+582: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3f76bf0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+591: guard_class(p13, 16437896, descr=<Guard0x3f76c38>) [p1, p0]
+604: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+608: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x3f67d60>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+627: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+631: p22 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+635: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+639: p24 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+643: guard_class(p24, 16505296, descr=<Guard0x3f76c80>) [p1, p0]
debug_merge_point(0, 0, '(= nc1 nc2)')
+656: p26 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3f67dc0>) [p1, p0]
+679: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x3f67e20>) [p1, p0]
+699: i29 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+703: i30 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+708: i31 = int_eq(i29, i30)
+711: guard_true(i31, descr=<Guard0x3f76cc8>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+717: p32 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+721: guard_nonnull_class(p32, 16616448, descr=<Guard0x3f67e80>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+746: i35 = instance_ptr_eq(p32, ConstPtr(ptr34))
+749: guard_true(i35, descr=<Guard0x3f76d10>) [p1, p0]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+755: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x3f67ee0>) [p1, p0]
+775: i37 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+779: i38 = int_eq(i30, i37)
+782: guard_false(i38, descr=<Guard0x3f76d58>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+788: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x3f67f40>) [p1, p0]
+807: i41 = int_ge(i37, 0)
+811: guard_true(i41, descr=<Guard0x3f76da0>) [p1, p0]
+817: i42 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+821: i43 = int_lt(i37, i42)
+824: guard_true(i43, descr=<Guard0x3f76de8>) [p1, p0]
+830: p44 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+834: guard_class(p44, 16622984, descr=<Guard0x3f76e30>) [p1, p0]
+847: p46 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+851: p47 = getarrayitem_gc_r(p46, i37, descr=<ArrayP 8>)
+856: guard_class(p47, 16470384, descr=<Guard0x3f76e78>) [p1, p0]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+869: p49 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+873: guard_nonnull_class(p49, ConstClass(W_Vector), descr=<Guard0x3f67fa0>) [p1, p0]
+893: p51 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+897: guard_nonnull_class(p51, ConstClass(W_Vector), descr=<Guard0x40d8020>) [p1, p0]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+916: p53 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+920: guard_nonnull_class(p53, 16470384, descr=<Guard0x40d8080>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+940: p55 = new_with_vtable(descr=<SizeDescr 32>)
+987: p56 = new_with_vtable(descr=<SizeDescr 40>)
+998: setfield_gc(p56, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1009: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1013: setfield_gc(p56, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1017: setfield_gc(p56, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1021: p58 = new_with_vtable(descr=<SizeDescr 24>)
+1032: setfield_gc(p58, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1036: setfield_gc(p58, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1040: p59 = new_with_vtable(descr=<SizeDescr 48>)
+1051: p60 = new_with_vtable(descr=<SizeDescr 32>)
+1062: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1070: p63 = new_array_clear(4, descr=<ArrayP 8>)
+1096: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+1100: setarrayitem_gc(p63, 1, p49, descr=<ArrayP 8>)
+1104: setarrayitem_gc(p63, 2, p49, descr=<ArrayP 8>)
+1108: setarrayitem_gc(p63, 3, p51, descr=<ArrayP 8>)
+1112: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1123: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1127: setfield_gc(p55, p53, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1131: setfield_gc(p55, p58, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1142: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1146: setfield_gc(p59, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1150: setfield_gc(p59, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1154: setfield_gc(p59, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1158: setfield_gc(p55, p56, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1162: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1166: jump(p55, p59, descr=TargetToken(59469520))
+1200: --end of the loop--
[3e4c22b19d74f10] jit-log-opt-loop}
[3e4c22b1a07f19c] {jit-backend
[3e4c22b1a120acb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea210 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5203000048FF0425C099D2038139C81800000F85000000004C8B79204C8B35ABFEFFFF4D39F70F85000000004C8B71284C8B79304C8B69184983FE01720741813EA8B800000F85000000004983FF01720741813FB09700000F85000000004D8B66104C8B158DFEFFFF4D39D40F850000000041817D00C81800000F85000000004D8B55084983FA01720741813A900F00000F85000000004D8B66184D8B4E204D8B4630498B7E08813F102001000F8500000000498B76284883FE017206813E601400000F85000000004983F9017207418139601400000F85000000004C8B7608498B71084939F60F84000000004983FC01720841813C24F08C00000F85000000004883FE000F8C000000004D8B7424084C39F60F8D000000004D8B4C2418418139C8EB02000F85000000004D8B4C24104D8B64F11041813C24B09700000F8500000000498B5F104883FB017206813B40D202000F85000000004C8995400100004C8B15FFFDFFFF4C39D30F85000000004983F8017207418138601400000F8500000000498B58084839DE0F84000000004883FB000F8C000000004C39F30F8D000000004D8B74D91041813EB09700000F8500000000498B5C24104883FB017206813B40D202000F85000000004C39D30F85000000004D8B57084983FA01720741813A382300000F8500000000498B5C24084883FB017206813BF08C00000F85000000004D8B4E084983F9017207418139F08C00000F8500000000498B76104883FE017206813EB09700000F85000000004989D6488B0C25F091F900488D91F8000000483B14251092F9000F872C01000048891425F091F90048C701700B0100488D512048C702B8B5000048897A084C8B0559FDFFFF4C8942104C897A184C8962204C8D622849C70424B09700004C8BBD380100004D897C24084D8D7C241849C707B0970000498947084D8977104D897C24104D8D771849C706A81600004D8D7E3049C707F08C000049C7470804000000498D472048C700080E000048C74008040000004C8B05ECFCFFFF4C8940104C895018488958204C89482849894710488B05D9FCFFFF49894718488B05D6FCFFFF4989462049897E104D896E184C8BAD400100004D896E0848895108488971104C8961184D897E2848898D300100004C89B53801000049BBC05A1C5C4A7F000041FFE30F1F400048C7442408FFFFFF0049BB08A01E5C4A7F00004C895D204D8D9BE8A2FDFF41FFD3E988FCFFFF49BBF8A11E5C4A7F00004C895D204D8D9BF8A8FDFF41FFD3E9BFFEFFFFFF3527FBFFFF49BB18A01E5C4A7F000041534D8D9BE89FFDFF41FFE3FF351BFBFFFF49BB28A01E5C4A7F000041534D8D9BD89FFDFF41FFE3FF3507FBFFFF49BB38A01E5C4A7F000041534D8D9BC89FFDFF41FFE3FF35F3FAFFFF49BB48A01E5C4A7F000041534D8D9BB89FFDFF41FFE3FF35DFFAFFFF49BB58A01E5C4A7F000041534D8D9BA89FFDFF41FFE3FF35D3FAFFFF49BB68A01E5C4A7F000041534D8D9B989FFDFF41FFE3FF35BFFAFFFF49BB78A01E5C4A7F000041534D8D9B889FFDFF41FFE3FF35ABFAFFFF49BB88A01E5C4A7F000041534D8D9B789FFDFF41FFE3FF3597FAFFFF49BB98A01E5C4A7F000041534D8D9B689FFDFF41FFE3FF3583FAFFFF49BBA8A01E5C4A7F000041534D8D9B589FFDFF41FFE3FF356FFAFFFF49BBB8A01E5C4A7F000041534D8D9B489FFDFF41FFE3FF355BFAFFFF49BBC8A01E5C4A7F000041534D8D9B389FFDFF41FFE3FF3547FAFFFF49BBD8A01E5C4A7F000041534D8D9B289FFDFF41FFE3FF3533FAFFFF49BBE8A01E5C4A7F000041534D8D9B189FFDFF41FFE3FF351FFAFFFF49BBF8A01E5C4A7F000041534D8D9B089FFDFF41FFE3FF350BFAFFFF49BB08A11E5C4A7F000041534D8D9BF89EFDFF41FFE3FF35F7F9FFFF49BB18A11E5C4A7F000041534D8D9BE89EFDFF41FFE3FF35E3F9FFFF49BB28A11E5C4A7F000041534D8D9BD89EFDFF41FFE3FF35D7F9FFFF49BB38A11E5C4A7F000041534D8D9BC89EFDFF41FFE3FF35C3F9FFFF49BB48A11E5C4A7F000041534D8D9BB89EFDFF41FFE3FF35AFF9FFFF49BB58A11E5C4A7F000041534D8D9BA89EFDFF41FFE3FF359BF9FFFF49BB68A11E5C4A7F000041534D8D9B989EFDFF41FFE3FF3587F9FFFF49BB78A11E5C4A7F000041534D8D9B889EFDFF41FFE3FF3573F9FFFF49BB88A11E5C4A7F000041534D8D9B789EFDFF41FFE3FF355FF9FFFF49BB98A11E5C4A7F000041534D8D9B689EFDFF41FFE3FF354BF9FFFF49BBA8A11E5C4A7F000041534D8D9B589EFDFF41FFE3FF3537F9FFFF49BBB8A11E5C4A7F000041534D8D9B489EFDFF41FFE3FF3523F9FFFF49BBC8A11E5C4A7F000041534D8D9B389EFDFF41FFE3FF350FF9FFFF49BBD8A11E5C4A7F000041534D8D9B289EFDFF41FFE3FF35FBF8FFFF49BBE8A11E5C4A7F000041534D8D9B189EFDFF41FFE3
[3e4c22b1a12bb34] jit-backend-dump}
[3e4c22b1a1369ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea344 +0  25000000
[3e4c22b1a138189] jit-backend-dump}
[3e4c22b1a13bfc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea6a5 +0  25000000
[3e4c22b1a13ce88] jit-backend-dump}
[3e4c22b1a140092] {jit-backend-addr
bridge out of Guard 0x3d727b8 has address 0x7f4a5c1ea340 to 0x7f4a5c1ea6a0
       gc table: 0x7f4a5c1ea210
    jump target: 0x7f4a5c1ea340
         resops: 0x7f4a5c1ea34e
       failures: 0x7f4a5c1ea6a0
            end: 0x7f4a5c1eaa2b
[3e4c22b1a142471] jit-backend-addr}
[3e4c22b1a1458ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea35e +0  81030000
[3e4c22b1a146726] jit-backend-dump}
[3e4c22b1a1498db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea372 +0  89030000
[3e4c22b1a14a5cc] jit-backend-dump}
[3e4c22b1a14d722] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea391 +0  A2030000
[3e4c22b1a14e406] jit-backend-dump}
[3e4c22b1a151443] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea3a4 +0  AB030000
[3e4c22b1a152118] jit-backend-dump}
[3e4c22b1a1550a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea3b8 +0  B3030000
[3e4c22b1a155d84] jit-backend-dump}
[3e4c22b1a158d03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea3c6 +0  C1030000
[3e4c22b1a1599d2] jit-backend-dump}
[3e4c22b1a15c94e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea3dd +0  C6030000
[3e4c22b1a15d632] jit-backend-dump}
[3e4c22b1a1605c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea3f9 +0  C6030000
[3e4c22b1a161296] jit-backend-dump}
[3e4c22b1a16461e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea40f +0  CC030000
[3e4c22b1a165315] jit-backend-dump}
[3e4c22b1a168376] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea422 +0  D5030000
[3e4c22b1a169042] jit-backend-dump}
[3e4c22b1a16c017] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea433 +0  E0030000
[3e4c22b1a16cd45] jit-backend-dump}
[3e4c22b1a16fce5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea447 +0  E8030000
[3e4c22b1a1709c4] jit-backend-dump}
[3e4c22b1a173936] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea451 +0  FA030000
[3e4c22b1a17460b] jit-backend-dump}
[3e4c22b1a177528] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea45f +0  08040000
[3e4c22b1a178204] jit-backend-dump}
[3e4c22b1a17b167] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea471 +0  12040000
[3e4c22b1a17be4e] jit-backend-dump}
[3e4c22b1a17ed87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea489 +0  16040000
[3e4c22b1a17fa5c] jit-backend-dump}
[3e4c22b1a182985] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea49f +0  1C040000
[3e4c22b1a183667] jit-backend-dump}
[3e4c22b1a186660] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea4b6 +0  21040000
[3e4c22b1a187338] jit-backend-dump}
[3e4c22b1a18a274] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea4c9 +0  2A040000
[3e4c22b1a18af49] jit-backend-dump}
[3e4c22b1a18de7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea4d6 +0  39040000
[3e4c22b1a18eb69] jit-backend-dump}
[3e4c22b1a191a98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea4e0 +0  4B040000
[3e4c22b1a19276a] jit-backend-dump}
[3e4c22b1a195696] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea4e9 +0  5E040000
[3e4c22b1a196372] jit-backend-dump}
[3e4c22b1a19929b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea4fb +0  68040000
[3e4c22b1a199f82] jit-backend-dump}
[3e4c22b1a19ceca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea512 +0  6D040000
[3e4c22b1a19dbaf] jit-backend-dump}
[3e4c22b1a1a0ae7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea51b +0  80040000
[3e4c22b1a1a17bf] jit-backend-dump}
[3e4c22b1a1a4713] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea532 +0  85040000
[3e4c22b1a1a53f8] jit-backend-dump}
[3e4c22b1a1a834c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea549 +0  8A040000
[3e4c22b1a1a9033] jit-backend-dump}
[3e4c22b1a1abfa0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea560 +0  8F040000
[3e4c22b1a1acc75] jit-backend-dump}
[3e4c22b1a1afbd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea576 +0  95040000
[3e4c22b1a1b08aa] jit-backend-dump}
[3e4c22b1a1b3ab2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dacb6 +0  86F60000
[3e4c22b1a1b47b8] jit-backend-dump}
[3e4c22b1a1b86aa] jit-backend}
[3e4c22b1a1bc145] {jit-log-opt-bridge
# bridge out of Guard 0x3d727b8 with 125 ops
[p0, p1, p2, p3, p4]
+326: guard_class(p0, 16437896, descr=<Guard0x40d80e0>) [p0, p1, p2, p3, p4]
+338: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+349: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3f76f08>) [p0, p1, p2, p3, p4]
+358: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+358: guard_not_invalidated(descr=<Guard0x3f76f50>) [p0, p1, p2, p3, p4]
+358: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+362: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+366: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+370: guard_nonnull_class(p9, 16478824, descr=<Guard0x40d8140>) [p0, p1, p2, p3, p4]
+389: guard_nonnull_class(p10, 16470384, descr=<Guard0x40d81a0>) [p0, p1, p2, p3, p4]
+408: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+419: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f76f98>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+428: guard_class(p11, 16437896, descr=<Guard0x3f76fe0>) [p0, p1, p2, p3, p4]
+442: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+446: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x40d8200>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+465: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+469: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+473: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+477: p22 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+481: guard_class(p22, 16505296, descr=<Guard0x3f77028>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc1 nc2)')
+493: p24 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+497: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x40d8260>) [p0, p1, p2, p3, p4]
+515: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x40d82c0>) [p0, p1, p2, p3, p4]
+534: i27 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+538: i28 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+542: i29 = int_eq(i27, i28)
+545: guard_false(i29, descr=<Guard0x3f77070>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+551: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x40d8320>) [p0, p1, p2, p3, p4]
+571: i32 = int_ge(i28, 0)
+575: guard_true(i32, descr=<Guard0x3f770b8>) [p0, p1, p2, p3, p4]
+581: i33 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+586: i34 = int_lt(i28, i33)
+589: guard_true(i34, descr=<Guard0x3f77100>) [p0, p1, p2, p3, p4]
+595: p35 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+600: guard_class(p35, 16622984, descr=<Guard0x3f77148>) [p0, p1, p2, p3, p4]
+613: p37 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+618: p38 = getarrayitem_gc_r(p37, i28, descr=<ArrayP 8>)
+623: guard_class(p38, 16470384, descr=<Guard0x3f77190>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+637: p40 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+641: guard_nonnull_class(p40, 16616448, descr=<Guard0x40d8380>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+673: i43 = instance_ptr_eq(p40, ConstPtr(ptr42))
+676: guard_true(i43, descr=<Guard0x3f771d8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+682: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x40d83e0>) [p0, p1, p2, p3, p4]
+701: i45 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+705: i46 = int_eq(i28, i45)
+708: guard_false(i46, descr=<Guard0x3f77220>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+714: i48 = int_ge(i45, 0)
+718: guard_true(i48, descr=<Guard0x3f77268>) [p0, p1, p2, p3, p4]
+724: i49 = int_lt(i45, i33)
+727: guard_true(i49, descr=<Guard0x3f772b0>) [p0, p1, p2, p3, p4]
+733: p50 = getarrayitem_gc_r(p37, i45, descr=<ArrayP 8>)
+738: guard_class(p50, 16470384, descr=<Guard0x3f772f8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+751: p52 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+756: guard_nonnull_class(p52, 16616448, descr=<Guard0x40d8440>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+774: i55 = instance_ptr_eq(p52, ConstPtr(ptr54))
+777: guard_true(i55, descr=<Guard0x3f77340>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+783: p56 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+787: guard_nonnull_class(p56, ConstClass(W_Symbol), descr=<Guard0x40d84a0>) [p0, p1, p2, p3, p4]
+806: p58 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+811: guard_nonnull_class(p58, ConstClass(W_Vector), descr=<Guard0x40d8500>) [p0, p1, p2, p3, p4]
+829: p60 = getfield_gc_r(p50, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+833: guard_nonnull_class(p60, ConstClass(W_Vector), descr=<Guard0x40d8560>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+852: p62 = getfield_gc_r(p50, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+856: guard_nonnull_class(p62, 16470384, descr=<Guard0x40d85c0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+874: p64 = new_with_vtable(descr=<SizeDescr 32>)
+921: p65 = new_with_vtable(descr=<SizeDescr 40>)
+932: setfield_gc(p65, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+943: setfield_gc(p65, ConstPtr(ptr66), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+947: setfield_gc(p65, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+951: setfield_gc(p65, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+955: p67 = new_with_vtable(descr=<SizeDescr 24>)
+967: setfield_gc(p67, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+979: p68 = new_with_vtable(descr=<SizeDescr 24>)
+991: setfield_gc(p68, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+995: setfield_gc(p68, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+999: setfield_gc(p67, p68, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1004: p69 = new_with_vtable(descr=<SizeDescr 48>)
+1015: p70 = new_with_vtable(descr=<SizeDescr 32>)
+1026: setfield_gc(p70, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1034: p73 = new_array_clear(4, descr=<ArrayP 8>)
+1060: setarrayitem_gc(p73, 0, ConstPtr(ptr75), descr=<ArrayP 8>)
+1064: setarrayitem_gc(p73, 1, p56, descr=<ArrayP 8>)
+1068: setarrayitem_gc(p73, 2, p58, descr=<ArrayP 8>)
+1072: setarrayitem_gc(p73, 3, p60, descr=<ArrayP 8>)
+1076: setfield_gc(p70, p73, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1087: setfield_gc(p70, ConstPtr(ptr79), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1098: setfield_gc(p69, ConstPtr(ptr80), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1102: setfield_gc(p69, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1106: setfield_gc(p69, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1110: setfield_gc(p69, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1121: setfield_gc(p64, p65, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1125: setfield_gc(p64, p62, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1129: setfield_gc(p64, p67, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1133: setfield_gc(p69, p70, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1137: jump(p64, p69, descr=TargetToken(59469520))
+1168: --end of the loop--
[3e4c22b1a220210] jit-log-opt-bridge}
[3e4c22b1a42d91f] {jit-backend
[3e4c22b1a487c5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eab60 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CD201000048FF042500D6D2038139101100000F85000000004C8B79084983FF01720741813F900F00000F8500000000813A301901000F85000000004C8B7A104C8B720841813E20BA00000F85000000004D8B6E104C8B2533FFFFFF4D39E50F85000000004D8B66284983FC01720841813C24601400000F85000000004D8B6C24084D39EF0F8C000000004D8B6E184983FD01720841817D00601400000F85000000004D8B65084D89E54D01FC0F80000000004D8B56204983FA01720741813A601400000F85000000004D8B4A084D01CC0F80000000004D8B56304983FA01720741813A601400000F85000000004D8B42084D29E00F80000000004D89FC4983EF010F80000000004C8B52184983FA01720741813AB09700000F85000000004889CB488B0C25F091F900488D9188000000483B14251092F9000F87BE00000048891425F091F90048C70130190100488D512048C702B0970000488D7A1848C707F08C000048C7470804000000488D772048C7060802000048C74608040000004C894E104C896E184C8966204C89462848897710488B3555FEFFFF4889771848897A084C8952104C8979104C8971084889511848898D3001000048899D3801000049BB90701D5C4A7F000041FFE3662E0F1F84000000000048C7442408FFFFFF0049BB38AA1E5C4A7F00004C895D204D8D9BB898FDFF41FFD3E908FEFFFF49BB48AB1E5C4A7F00004C895D204D8D9BA89FFDFF41FFD3E92DFFFFFFFF3547FDFFFF49BB48AA1E5C4A7F000041534D8D9BB895FDFF41FFE3FF3533FDFFFF49BB58AA1E5C4A7F000041534D8D9BA895FDFF41FFE3FF351FFDFFFF49BB68AA1E5C4A7F000041534D8D9B9895FDFF41FFE3FF350BFDFFFF49BB78AA1E5C4A7F000041534D8D9B8895FDFF41FFE3FF35F7FCFFFF49BB88AA1E5C4A7F000041534D8D9B7895FDFF41FFE3FF35EBFCFFFF49BB98AA1E5C4A7F000041534D8D9B6895FDFF41FFE3FF35D7FCFFFF49BBA8AA1E5C4A7F000041534D8D9B5895FDFF41FFE3FF35C3FCFFFF49BBB8AA1E5C4A7F000041534D8D9B4895FDFF41FFE3FF35AFFCFFFF49BBC8AA1E5C4A7F000041534D8D9B3895FDFF41FFE3FF359BFCFFFF49BBD8AA1E5C4A7F000041534D8D9B2895FDFF41FFE3FF3587FCFFFF49BBE8AA1E5C4A7F000041534D8D9B1895FDFF41FFE3FF3573FCFFFF49BBF8AA1E5C4A7F000041534D8D9B0895FDFF41FFE3FF355FFCFFFF49BB08AB1E5C4A7F000041534D8D9BF894FDFF41FFE3FF354BFCFFFF49BB18AB1E5C4A7F000041534D8D9BE894FDFF41FFE3FF3537FCFFFF49BB28AB1E5C4A7F000041534D8D9BD894FDFF41FFE3FF3523FCFFFF49BB38AB1E5C4A7F000041534D8D9BC894FDFF41FFE3
[3e4c22b1a48f9b3] jit-backend-dump}
[3e4c22b1a49a0e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eabf4 +0  28000000
[3e4c22b1a49b59a] jit-backend-dump}
[3e4c22b1a49f3ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eadd5 +0  28000000
[3e4c22b1a4a02c7] jit-backend-dump}
[3e4c22b1a4a34d1] {jit-backend-addr
bridge out of Guard 0x3cec800 has address 0x7f4a5c1eabf0 to 0x7f4a5c1eadd0
       gc table: 0x7f4a5c1eab60
    jump target: 0x7f4a5c1eabf0
         resops: 0x7f4a5c1eabfe
       failures: 0x7f4a5c1eadd0
            end: 0x7f4a5c1eafd3
[3e4c22b1a4a58ff] jit-backend-addr}
[3e4c22b1a4a8c63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eac0e +0  01020000
[3e4c22b1a4a9b06] jit-backend-dump}
[3e4c22b1a4accb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eac25 +0  06020000
[3e4c22b1a4ada32] jit-backend-dump}
[3e4c22b1a4b0cbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eac31 +0  32020000
[3e4c22b1a4b1a0a] jit-backend-dump}
[3e4c22b1a4b4b3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eac46 +0  39020000
[3e4c22b1a4b58b2] jit-backend-dump}
[3e4c22b1a4b88be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eac5a +0  41020000
[3e4c22b1a4b95ec] jit-backend-dump}
[3e4c22b1a4bc5f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eac72 +0  45020000
[3e4c22b1a4bd328] jit-backend-dump}
[3e4c22b1a4c0300] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eac80 +0  53020000
[3e4c22b1a4c101e] jit-backend-dump}
[3e4c22b1a4c407f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eac98 +0  57020000
[3e4c22b1a4c4dad] jit-backend-dump}
[3e4c22b1a4c7d82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eaca8 +0  63020000
[3e4c22b1a4c8ac5] jit-backend-dump}
[3e4c22b1a4cba47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eacbf +0  68020000
[3e4c22b1a4cc78a] jit-backend-dump}
[3e4c22b1a4cf6c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eaccc +0  77020000
[3e4c22b1a4d03e1] jit-backend-dump}
[3e4c22b1a4d32d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eace3 +0  7C020000
[3e4c22b1a4d4001] jit-backend-dump}
[3e4c22b1a4d6f4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eacf0 +0  8B020000
[3e4c22b1a4d7c86] jit-backend-dump}
[3e4c22b1a4dabc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eacfd +0  9A020000
[3e4c22b1a4db8f0] jit-backend-dump}
[3e4c22b1a4de822] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ead14 +0  9F020000
[3e4c22b1a4df550] jit-backend-dump}
[3e4c22b1a4e2742] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d711c +0  D03A0100
[3e4c22b1a4e348b] jit-backend-dump}
[3e4c22b1a4e7279] jit-backend}
[3e4c22b1a4eae2b] {jit-log-opt-bridge
# bridge out of Guard 0x3cec800 with 64 ops
[p0, p1]
+166: guard_class(p1, 16435920, descr=<Guard0x40d8620>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+182: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x40d8680>) [p0, p1]
debug_merge_point(0, 0, '(< nc35240 start)')
+201: guard_not_invalidated(descr=<Guard0x3f773d0>) [p0, p1]
+201: guard_class(p0, 16503536, descr=<Guard0x3f77418>) [p0, p1]
+213: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+217: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+221: guard_class(p7, 16479200, descr=<Guard0x3f77460>) [p0, p1]
+234: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+245: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3f774a8>) [p0, p1]
+254: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+258: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x40d86e0>) [p0, p1]
+278: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+283: i14 = int_lt(i6, i13)
+286: guard_false(i14, descr=<Guard0x3f774f0>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+292: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+296: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x40d8740>) [p0, p1]
+316: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+320: i18 = int_add_ovf(i17, i6)
+326: guard_no_overflow(descr=<Guard0x3f77538>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+332: p19 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+336: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x40d87a0>) [p0, p1]
+355: i21 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+359: i22 = int_add_ovf(i21, i18)
+362: guard_no_overflow(descr=<Guard0x3f77580>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+368: p23 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+372: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x40d8800>) [p0, p1]
+391: i25 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+395: i26 = int_sub_ovf(i25, i22)
+398: guard_no_overflow(descr=<Guard0x3f775c8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+404: i28 = int_sub_ovf(i6, 1)
+411: guard_no_overflow(descr=<Guard0x3f77610>) [p0, p1]
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
+417: p29 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+421: guard_nonnull_class(p29, 16470384, descr=<Guard0x40d8860>) [p0, p1]
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+440: p31 = new_with_vtable(descr=<SizeDescr 32>)
+487: p32 = new_with_vtable(descr=<SizeDescr 24>)
+498: p33 = new_with_vtable(descr=<SizeDescr 32>)
+509: setfield_gc(p33, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+517: p36 = new_array(4, descr=<ArrayS 8>)
+536: setarrayitem_gc(p36, 0, i21, descr=<ArrayS 8>)
+540: setarrayitem_gc(p36, 1, i17, descr=<ArrayS 8>)
+544: setarrayitem_gc(p36, 2, i6, descr=<ArrayS 8>)
+548: setarrayitem_gc(p36, 3, i26, descr=<ArrayS 8>)
+552: setfield_gc(p33, p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+563: setfield_gc(p33, ConstPtr(ptr41), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+567: setfield_gc(p32, p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+571: setfield_gc(p32, p29, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+575: setfield_gc(p31, i28, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+579: setfield_gc(p31, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+583: setfield_gc(p31, p32, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+587: jump(p31, p1, descr=TargetToken(61027280))
+624: --end of the loop--
[3e4c22b1a5202da] jit-log-opt-bridge}
[3e4c22b1a6a9d3e] {jit-backend
[3e4c22b1a709e44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb
[3e4c22b1a712325] jit-backend-dump}
[3e4c22b1a71cd8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb1c4 +0  28000000
[3e4c22b1a71e1e4] jit-backend-dump}
[3e4c22b1a721e85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb3c5 +0  28000000
[3e4c22b1a722d2b] jit-backend-dump}
[3e4c22b1a726080] {jit-backend-addr
bridge out of Guard 0x3dfea40 has address 0x7f4a5c1eb1c0 to 0x7f4a5c1eb3c0
       gc table: 0x7f4a5c1eb110
    jump target: 0x7f4a5c1eb1c0
         resops: 0x7f4a5c1eb1ce
       failures: 0x7f4a5c1eb3c0
            end: 0x7f4a5c1eb5df
[3e4c22b1a72839a] jit-backend-addr}
[3e4c22b1a72b898] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb1de +0  21020000
[3e4c22b1a72c6e3] jit-backend-dump}
[3e4c22b1a72f87c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb1eb +0  30020000
[3e4c22b1a7305ce] jit-backend-dump}
[3e4c22b1a733617] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb1fb +0  3C020000
[3e4c22b1a73437f] jit-backend-dump}
[3e4c22b1a737313] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb213 +0  40020000
[3e4c22b1a738041] jit-backend-dump}
[3e4c22b1a73af64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb220 +0  4F020000
[3e4c22b1a73bc7d] jit-backend-dump}
[3e4c22b1a73ebe3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb234 +0  57020000
[3e4c22b1a73f957] jit-backend-dump}
[3e4c22b1a742e43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb254 +0  6F020000
[3e4c22b1a743b71] jit-backend-dump}
[3e4c22b1a746cae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb267 +0  78020000
[3e4c22b1a7479cd] jit-backend-dump}
[3e4c22b1a74a94c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb27c +0  7F020000
[3e4c22b1a74b661] jit-backend-dump}
[3e4c22b1a74e5e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb289 +0  8E020000
[3e4c22b1a74f2e3] jit-backend-dump}
[3e4c22b1a7521ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb2a0 +0  93020000
[3e4c22b1a752eaa] jit-backend-dump}
[3e4c22b1a755dac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb2bb +0  94020000
[3e4c22b1a756b35] jit-backend-dump}
[3e4c22b1a759a0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb2d2 +0  99020000
[3e4c22b1a75a70c] jit-backend-dump}
[3e4c22b1a75db12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb2e9 +0  9E020000
[3e4c22b1a75e803] jit-backend-dump}
[3e4c22b1a761775] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb2fa +0  A9020000
[3e4c22b1a76246f] jit-backend-dump}
[3e4c22b1a765367] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb310 +0  AF020000
[3e4c22b1a766067] jit-backend-dump}
[3e4c22b1a76923e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e33b7 +0  057E0000
[3e4c22b1a769f56] jit-backend-dump}
[3e4c22b1a76dd50] jit-backend}
[3e4c22b1a77183b] {jit-log-opt-bridge
# bridge out of Guard 0x3dfea40 with 66 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x40d88c0>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull(p3, descr=<Guard0x3f77658>) [p0, p1]
+230: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+233: guard_true(i5, descr=<Guard0x3f776a0>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
+239: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+243: guard_nonnull_class(p6, 16470384, descr=<Guard0x40d8920>) [p0, p1]
+263: guard_class(p0, 16437896, descr=<Guard0x3f776e8>) [p0, p1]
+276: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+287: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3f77730>) [p0, p1]
+296: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+296: guard_not_invalidated(descr=<Guard0x3f77778>) [p0, p1]
+296: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+300: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+304: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
+308: guard_nonnull_class(p12, 16479200, descr=<Guard0x40d8980>) [p0, p1]
+328: guard_nonnull_class(p13, 16470384, descr=<Guard0x40d89e0>) [p0, p1]
+347: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+359: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3f777c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+368: guard_class(p14, 16437896, descr=<Guard0x3f77808>) [p0, p1]
+381: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+385: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x40d8a40>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+404: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+409: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+414: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+419: guard_class(p24, 16505296, descr=<Guard0x3f77850>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+431: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+436: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x40d8aa0>) [p0, p1]
+454: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+459: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x40d8b00>) [p0, p1]
+477: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+481: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+485: i32 = int_eq(i30, i31)
+488: guard_true(i32, descr=<Guard0x3f77898>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+494: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+498: guard_nonnull_class(p33, 16616448, descr=<Guard0x40d8b60>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+516: p35 = new_with_vtable(descr=<SizeDescr 32>)
+560: p36 = new_with_vtable(descr=<SizeDescr 56>)
+571: p37 = new_with_vtable(descr=<SizeDescr 48>)
+582: setfield_gc(p37, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+593: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+597: setfield_gc(p37, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+601: setfield_gc(p37, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+605: setfield_gc(p37, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+609: setfield_gc(p35, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+613: setfield_gc(p35, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+624: setfield_gc(p36, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+628: setfield_gc(p36, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+632: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+636: setfield_gc(p36, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+640: setfield_gc(p36, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+644: setfield_gc(p36, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+648: setfield_gc(p35, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+652: jump(p35, p36, descr=TargetToken(59470000))
+688: --end of the loop--
[3e4c22b1a7a7226] jit-log-opt-bridge}
[3e4c22b1a9cf08b] {jit-backend
[3e4c22b1aa25819] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb6f
[3e4c22b1aa2cf98] jit-backend-dump}
[3e4c22b1aa37696] {jit-backend-addr
Loop 88 ((if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 AppRand23 AppRand24)) has address 0x7f4a5c1eb80d to 0x7f4a5c1eba00 (bootstrap 0x7f4a5c1eb780)
       gc table: 0x7f4a5c1eb6f0
       function: 0x7f4a5c1eb780
         resops: 0x7f4a5c1eb80d
       failures: 0x7f4a5c1eba00
            end: 0x7f4a5c1ebbb7
[3e4c22b1aa3abc2] jit-backend-addr}
[3e4c22b1aa3f106] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb824 +0  07020000
[3e4c22b1aa40235] jit-backend-dump}
[3e4c22b1aa43705] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb83a +0  0D020000
[3e4c22b1aa4448b] jit-backend-dump}
[3e4c22b1aa47530] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb84a +0  19020000
[3e4c22b1aa48236] jit-backend-dump}
[3e4c22b1aa4b1f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb85d +0  22020000
[3e4c22b1aa4bf04] jit-backend-dump}
[3e4c22b1aa4eea2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb873 +0  28020000
[3e4c22b1aa4fbc0] jit-backend-dump}
[3e4c22b1aa52c06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb883 +0  34020000
[3e4c22b1aa5390f] jit-backend-dump}
[3e4c22b1aa568e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb897 +0  3C020000
[3e4c22b1aa575e7] jit-backend-dump}
[3e4c22b1aa5a547] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb8b9 +0  36020000
[3e4c22b1aa5b272] jit-backend-dump}
[3e4c22b1aa5e3bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb8d1 +0  56020000
[3e4c22b1aa5f0c8] jit-backend-dump}
[3e4c22b1aa62154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb8e4 +0  5F020000
[3e4c22b1aa62e75] jit-backend-dump}
[3e4c22b1aa65ed0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb8f5 +0  6A020000
[3e4c22b1aa66bca] jit-backend-dump}
[3e4c22b1aa69b4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb90d +0  6E020000
[3e4c22b1aa6a88f] jit-backend-dump}
[3e4c22b1aa6d80e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb924 +0  73020000
[3e4c22b1aa6e517] jit-backend-dump}
[3e4c22b1aa720b7] jit-backend}
[3e4c22b1aa7603f] {jit-log-opt-loop
# Loop 88 ((if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 AppRand23 AppRand24)) : entry bridge with 60 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 AppRand23 AppRand24)')
+293: guard_class(p0, 16500016, descr=<Guard0x40d8bc0>) [p1, p0]
+312: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+316: guard_nonnull_class(p3, 16470384, descr=<Guard0x40d8c20>) [p1, p0]
+341: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+344: guard_false(i6, descr=<Guard0x3f778e0>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+350: guard_class(p1, 16437896, descr=<Guard0x3f77928>) [p1, p0]
+369: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+373: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x40d8c80>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+391: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+395: guard_class(p10, 16479200, descr=<Guard0x3f77970>) [p1, p0]
+407: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+418: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3f779b8>) [p1, p0]
+427: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+431: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+435: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+439: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+443: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+447: guard_class(p18, 16505296, descr=<Guard0x3f77a00>) [p1, p0]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+461: guard_not_invalidated(descr=<Guard0x3f77a48>) [p1, p0]
+461: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+465: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x40d8ce0>) [p1, p0]
+485: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x40d8d40>) [p1, p0]
+504: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+508: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+512: i25 = int_eq(i23, i24)
+515: guard_true(i25, descr=<Guard0x3f77a90>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+521: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+525: guard_nonnull_class(p26, 16616448, descr=<Guard0x40d8da0>) [p1, p0]
+545: p28 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+549: guard_nonnull_class(p28, 16470384, descr=<Guard0x40d8e00>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+568: p30 = new_with_vtable(descr=<SizeDescr 32>)
+615: p31 = new_with_vtable(descr=<SizeDescr 56>)
+626: p32 = new_with_vtable(descr=<SizeDescr 64>)
+644: setfield_gc(p32, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+662: setfield_gc(p32, ConstPtr(ptr33), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+666: setfield_gc(p32, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+670: setfield_gc(p32, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+674: setfield_gc(p32, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+678: setfield_gc(p32, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+682: setfield_gc(p32, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+686: setfield_gc(p30, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+697: setfield_gc(p31, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+708: setfield_gc(p30, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+712: setfield_gc(p30, p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+716: setfield_gc(p31, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+720: setfield_gc(p31, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+731: setfield_gc(p31, ConstPtr(ptr34), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+735: setfield_gc(p31, p32, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+739: setfield_gc(p31, p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+743: jump(p30, p31, descr=TargetToken(61027440))
+784: --end of the loop--
[3e4c22b1aaad154] jit-log-opt-loop}
[3e4c22b1b5422f6] {jit-backend
[3e4c22b1b5c9eeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebdc
[3e4c22b1b5d4893] jit-backend-dump}
[3e4c22b1b5dfe93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebee4 +0  25000000
[3e4c22b1b5e15e6] jit-backend-dump}
[3e4c22b1b5e56e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec1f5 +0  25000000
[3e4c22b1b5e6613] jit-backend-dump}
[3e4c22b1b5e99cc] {jit-backend-addr
bridge out of Guard 0x3cf7e80 has address 0x7f4a5c1ebee0 to 0x7f4a5c1ec1f0
       gc table: 0x7f4a5c1ebdc0
    jump target: 0x7f4a5c1ebee0
         resops: 0x7f4a5c1ebeee
       failures: 0x7f4a5c1ec1f0
            end: 0x7f4a5c1ec55f
[3e4c22b1b5ec187] jit-backend-addr}
[3e4c22b1b5ef601] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebefe +0  31030000
[3e4c22b1b5f0439] jit-backend-dump}
[3e4c22b1b5f3598] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebf0b +0  40030000
[3e4c22b1b5f429b] jit-backend-dump}
[3e4c22b1b5f72c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebf1b +0  4C030000
[3e4c22b1b5f7fb9] jit-backend-dump}
[3e4c22b1b5faf2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebf32 +0  51030000
[3e4c22b1b5fbc4a] jit-backend-dump}
[3e4c22b1b5feb9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebf47 +0  58030000
[3e4c22b1b5ff88c] jit-backend-dump}
[3e4c22b1b602802] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebf5b +0  60030000
[3e4c22b1b6034f2] jit-backend-dump}
[3e4c22b1b606614] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebf7a +0  79030000
[3e4c22b1b607330] jit-backend-dump}
[3e4c22b1b60a38e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebf8e +0  81030000
[3e4c22b1b60b088] jit-backend-dump}
[3e4c22b1b60e0ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebfa2 +0  89030000
[3e4c22b1b60ede0] jit-backend-dump}
[3e4c22b1b611d86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebfaf +0  98030000
[3e4c22b1b612a71] jit-backend-dump}
[3e4c22b1b6159e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebfc5 +0  9E030000
[3e4c22b1b6166ce] jit-backend-dump}
[3e4c22b1b619659] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebfe1 +0  9E030000
[3e4c22b1b61a35c] jit-backend-dump}
[3e4c22b1b61d2fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebff7 +0  A4030000
[3e4c22b1b61e000] jit-backend-dump}
[3e4c22b1b620fd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec009 +0  AE030000
[3e4c22b1b621cf6] jit-backend-dump}
[3e4c22b1b624cf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec01a +0  B9030000
[3e4c22b1b625a08] jit-backend-dump}
[3e4c22b1b6289d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec02d +0  C2030000
[3e4c22b1b6296df] jit-backend-dump}
[3e4c22b1b62c725] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec037 +0  D4030000
[3e4c22b1b62d465] jit-backend-dump}
[3e4c22b1b6304dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec044 +0  E3030000
[3e4c22b1b6311eb] jit-backend-dump}
[3e4c22b1b63421b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec055 +0  EE030000
[3e4c22b1b634f18] jit-backend-dump}
[3e4c22b1b637f76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec06b +0  F4030000
[3e4c22b1b638c73] jit-backend-dump}
[3e4c22b1b63bcb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec083 +0  F8030000
[3e4c22b1b63c9c8] jit-backend-dump}
[3e4c22b1b63f95f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec08c +0  0B040000
[3e4c22b1b640659] jit-backend-dump}
[3e4c22b1b643603] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec09e +0  15040000
[3e4c22b1b644303] jit-backend-dump}
[3e4c22b1b6472bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec0ab +0  24040000
[3e4c22b1b647fa3] jit-backend-dump}
[3e4c22b1b64af4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec0c2 +0  29040000
[3e4c22b1b64bc4d] jit-backend-dump}
[3e4c22b1b64ebea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec0cb +0  3C040000
[3e4c22b1b64f8db] jit-backend-dump}
[3e4c22b1b65288e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec0e3 +0  40040000
[3e4c22b1b65359a] jit-backend-dump}
[3e4c22b1b656547] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec0f9 +0  46040000
[3e4c22b1b65723b] jit-backend-dump}
[3e4c22b1b65a4bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db62d +0  AF080100
[3e4c22b1b65b1ed] jit-backend-dump}
[3e4c22b1b65f184] jit-backend}
[3e4c22b1b662d64] {jit-log-opt-bridge
# bridge out of Guard 0x3cf7e80 with 117 ops
[p0, p1]
+310: guard_class(p1, 16500016, descr=<Guard0x40d8e60>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+326: guard_nonnull(p3, descr=<Guard0x3f77b20>) [p0, p1]
+342: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+345: guard_true(i5, descr=<Guard0x3f77b68>) [p0, p1]
debug_merge_point(0, 0, 'lst')
+351: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+355: guard_nonnull_class(p6, 16616448, descr=<Guard0x40d8ec0>) [p0, p1]
+374: guard_class(p0, 16437896, descr=<Guard0x3f77bb0>) [p0, p1]
+395: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+406: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3f77bf8>) [p0, p1]
+415: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+415: guard_not_invalidated(descr=<Guard0x3f77c40>) [p0, p1]
+415: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+419: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+423: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)')
+427: guard_nonnull_class(p12, 16478824, descr=<Guard0x40d8f20>) [p0, p1]
+446: guard_nonnull_class(p13, 16470384, descr=<Guard0x40d8f80>) [p0, p1]
+466: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+477: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3f77c88>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+486: guard_class(p14, 16437896, descr=<Guard0x3f77cd0>) [p0, p1]
+499: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+503: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x40d8fe0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+521: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+525: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+529: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+533: p25 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+537: guard_class(p25, 16505296, descr=<Guard0x3f77d18>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+549: p27 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+553: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x40d9040>) [p0, p1]
+571: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x40d90a0>) [p0, p1]
+589: i30 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+593: i31 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+597: i32 = int_eq(i30, i31)
+600: guard_false(i32, descr=<Guard0x3f77d60>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+606: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x40d9100>) [p0, p1]
+625: i35 = int_ge(i31, 0)
+629: guard_true(i35, descr=<Guard0x3f77da8>) [p0, p1]
+635: i36 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+639: i37 = int_lt(i31, i36)
+642: guard_true(i37, descr=<Guard0x3f77df0>) [p0, p1]
+648: p38 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+652: guard_class(p38, 16622984, descr=<Guard0x3f77e38>) [p0, p1]
+665: p40 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+669: p41 = getarrayitem_gc_r(p40, i31, descr=<ArrayP 8>)
+674: guard_class(p41, 16470384, descr=<Guard0x3f77e80>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+687: p43 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+692: guard_nonnull_class(p43, 16616448, descr=<Guard0x40d9160>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+711: i46 = instance_ptr_eq(p43, ConstPtr(ptr45))
+714: guard_true(i46, descr=<Guard0x3f77ec8>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+720: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x40d91c0>) [p0, p1]
+738: i48 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+742: i49 = int_eq(i31, i48)
+745: guard_true(i49, descr=<Guard0x3f77f10>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+751: p50 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+755: guard_nonnull_class(p50, 16616448, descr=<Guard0x40d9220>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+774: i53 = instance_ptr_eq(p50, ConstPtr(ptr52))
+777: guard_true(i53, descr=<Guard0x3f77f58>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+783: p54 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+788: guard_nonnull_class(p54, ConstClass(W_Symbol), descr=<Guard0x40d9280>) [p0, p1]
+807: p56 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+811: guard_nonnull_class(p56, ConstClass(W_Vector), descr=<Guard0x40d92e0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+829: p58 = new_with_vtable(descr=<SizeDescr 32>)
+876: p59 = new_with_vtable(descr=<SizeDescr 40>)
+887: setfield_gc(p59, p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+898: setfield_gc(p59, ConstPtr(ptr60), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+902: setfield_gc(p59, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+906: setfield_gc(p59, p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+910: p61 = new_with_vtable(descr=<SizeDescr 48>)
+921: p62 = new_with_vtable(descr=<SizeDescr 32>)
+933: setfield_gc(p62, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+942: p65 = new_array_clear(4, descr=<ArrayP 8>)
+969: setarrayitem_gc(p65, 0, ConstPtr(ptr67), descr=<ArrayP 8>)
+973: setarrayitem_gc(p65, 1, p54, descr=<ArrayP 8>)
+977: setarrayitem_gc(p65, 2, p56, descr=<ArrayP 8>)
+981: setarrayitem_gc(p65, 3, p56, descr=<ArrayP 8>)
+985: setfield_gc(p62, p65, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+997: setfield_gc(p62, ConstPtr(ptr71), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1002: setfield_gc(p58, p50, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1006: setfield_gc(p58, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1017: setfield_gc(p61, ConstPtr(ptr72), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1021: setfield_gc(p61, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1025: setfield_gc(p61, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1029: setfield_gc(p61, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1033: setfield_gc(p58, p59, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1037: setfield_gc(p61, p62, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1041: jump(p58, p61, descr=TargetToken(59469520))
+1072: --end of the loop--
[3e4c22b1b6c09cb] jit-log-opt-bridge}
[3e4c22b1b958c9f] {jit-backend
[3e4c22b1b9de4bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec6e0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C9202000048FF042530D8D2034C8BBD300100004D8B6F104C8B1500FFFFFF4D39D50F85000000004D8B57184983FA01720741813A601400000F85000000004D8B6A084C39EB0F8D000000004C8B95380100004D8B42084983F8017207418138900F00000F85000000004D8D45FF4D8B6F204983FD01720841817D00D0C800000F8500000000498B75104C8B2DBEFEFFFF4C39EE0F85000000004983F8000F8D000000004D8B42204C8B2DB8FEFFFF4D39E80F85000000004D8B6A104D8B421841817D00301901000F8500000000498B75184883FE017206813E40B400000F85000000004C8B6E10488B1598FEFFFF4939D50F8500000000418138101100000F8500000000498B50084883FA017206813A900F00000F85000000004C8B6E18488B46088138102001000F85000000004983FD01720841817D00F08C00000F85000000004983F9000F8C00000000498B4D084939C90F8D00000000498B4D188139C8EB02000F8500000000498B4D104C89B5480100004E8B74C91041813EB09700000F8500000000488B8D480100004883F90172068139B09700000F85000000004989D74889CB488B0C25F091F900488D91C0000000483B14251092F9000F87FA00000048891425F091F90048C701700B0100488D512048C702C81800004C8D523849C702A8B800004989420848898D30010000488B0DE5FDFFFF49894A104D896A184D8D6A3849C745006014000049897D084D896A20498D7D1048C707601400004C894F0849897A284C8D4F1049C701601400004D8961084D894A304C897A084C8BBD3001000049897708488B3595FDFFFF48897220488942104C89421849895F10488B1D86FDFFFF49895F184C8952284C8972304C89BD300100004889953801000049BB00B61D5C4A7F000041FFE30F1F800000000048C7442408FFFFFF0049BB68C51E5C4A7F00004C895D204D8D9B887DFDFF41FFD3E948FDFFFF49BBC8C61E5C4A7F00004C895D204D8D9B2884FDFF41FFD3E9F1FEFFFFFF3537FCFFFF49BB78C51E5C4A7F000041534D8D9B887AFDFF41FFE3FF352BFCFFFF49BB88C51E5C4A7F000041534D8D9B787AFDFF41FFE3FF3517FCFFFF49BB98C51E5C4A7F000041534D8D9B687AFDFF41FFE3FF3503FCFFFF49BBA8C51E5C4A7F000041534D8D9B587AFDFF41FFE3FF35EFFBFFFF49BBB8C51E5C4A7F000041534D8D9B487AFDFF41FFE3FF35DBFBFFFF49BBC8C51E5C4A7F000041534D8D9B387AFDFF41FFE3FF35CFFBFFFF49BBD8C51E5C4A7F000041534D8D9B287AFDFF41FFE3FF35BBFBFFFF49BBE8C51E5C4A7F000041534D8D9B187AFDFF41FFE3FF35AFFBFFFF49BBF8C51E5C4A7F000041534D8D9B087AFDFF41FFE3FF359BFBFFFF49BB08C61E5C4A7F000041534D8D9BF879FDFF41FFE3FF3587FBFFFF49BB18C61E5C4A7F000041534D8D9BE879FDFF41FFE3FF357BFBFFFF49BB28C61E5C4A7F000041534D8D9BD879FDFF41FFE3FF3567FBFFFF49BB38C61E5C4A7F000041534D8D9BC879FDFF41FFE3FF3553FBFFFF49BB48C61E5C4A7F000041534D8D9BB879FDFF41FFE3FF353FFBFFFF49BB58C61E5C4A7F000041534D8D9BA879FDFF41FFE3FF352BFBFFFF49BB68C61E5C4A7F000041534D8D9B9879FDFF41FFE3FF3517FBFFFF49BB78C61E5C4A7F000041534D8D9B8879FDFF41FFE3FF3503FBFFFF49BB88C61E5C4A7F000041534D8D9B7879FDFF41FFE3FF35EFFAFFFF49BB98C61E5C4A7F000041534D8D9B6879FDFF41FFE3FF35DBFAFFFF49BBA8C61E5C4A7F000041534D8D9B5879FDFF41FFE3FF35C7FAFFFF49BBB8C61E5C4A7F000041534D8D9B4879FDFF41FFE3
[3e4c22b1b9e7653] jit-backend-dump}
[3e4c22b1b9f255f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec7c4 +0  25000000
[3e4c22b1b9f3c50] jit-backend-dump}
[3e4c22b1b9f7f55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eca65 +0  25000000
[3e4c22b1b9f91d1] jit-backend-dump}
[3e4c22b1b9fc5ac] {jit-backend-addr
bridge out of Guard 0x3d72578 has address 0x7f4a5c1ec7c0 to 0x7f4a5c1eca60
       gc table: 0x7f4a5c1ec6e0
    jump target: 0x7f4a5c1ec7c0
         resops: 0x7f4a5c1ec7ce
       failures: 0x7f4a5c1eca60
            end: 0x7f4a5c1eccef
[3e4c22b1b9feaa1] jit-backend-addr}
[3e4c22b1ba02182] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec7ed +0  CE020000
[3e4c22b1ba030dd] jit-backend-dump}
[3e4c22b1ba06328] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec804 +0  D3020000
[3e4c22b1ba070d9] jit-backend-dump}
[3e4c22b1ba0a0f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec811 +0  E2020000
[3e4c22b1ba0ae12] jit-backend-dump}
[3e4c22b1ba0de1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec82f +0  E0020000
[3e4c22b1ba0eb21] jit-backend-dump}
[3e4c22b1ba11add] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec84b +0  E0020000
[3e4c22b1ba127e3] jit-backend-dump}
[3e4c22b1ba15835] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec85f +0  E8020000
[3e4c22b1ba1655a] jit-backend-dump}
[3e4c22b1ba19556] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec869 +0  FA020000
[3e4c22b1ba1a253] jit-backend-dump}
[3e4c22b1ba1d203] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec87d +0  02030000
[3e4c22b1ba1df06] jit-backend-dump}
[3e4c22b1ba20ef0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec893 +0  08030000
[3e4c22b1ba21be6] jit-backend-dump}
[3e4c22b1ba24c69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec8a9 +0  0E030000
[3e4c22b1ba2598e] jit-backend-dump}
[3e4c22b1ba28950] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec8bd +0  16030000
[3e4c22b1ba2964a] jit-backend-dump}
[3e4c22b1ba2c5ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec8ca +0  25030000
[3e4c22b1ba2d2fd] jit-backend-dump}
[3e4c22b1ba30294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec8e0 +0  2B030000
[3e4c22b1ba30f91] jit-backend-dump}
[3e4c22b1ba33f41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec8f4 +0  33030000
[3e4c22b1ba34c53] jit-backend-dump}
[3e4c22b1ba37cc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec908 +0  3B030000
[3e4c22b1ba389ca] jit-backend-dump}
[3e4c22b1ba3ba93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec912 +0  4D030000
[3e4c22b1ba3c7a8] jit-backend-dump}
[3e4c22b1ba3f78c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec91f +0  5C030000
[3e4c22b1ba4048c] jit-backend-dump}
[3e4c22b1ba43420] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec92f +0  68030000
[3e4c22b1ba44154] jit-backend-dump}
[3e4c22b1ba47132] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec94c +0  67030000
[3e4c22b1ba47e5a] jit-backend-dump}
[3e4c22b1ba4ae50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec965 +0  6A030000
[3e4c22b1ba4bb44] jit-backend-dump}
[3e4c22b1ba4ed5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da68d +0  2F210100
[3e4c22b1ba4fa91] jit-backend-dump}
[3e4c22b1ba53a90] jit-backend}
[3e4c22b1ba577dc] {jit-log-opt-bridge
# bridge out of Guard 0x3d72578 with 92 ops
[i0, i1, i2, p3, i4, p5, p6, p7]
+246: guard_not_invalidated(descr=<Guard0x40d9340>) [i0, i1, i2, p3, i4, p5, p6, p7]
+246: p8 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+264: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3f77fa0>) [i0, i1, i2, p3, i4, p5, p6, p7]
+273: p10 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+277: guard_nonnull_class(p10, ConstClass(W_Fixnum), descr=<Guard0x40d93a0>) [i0, i1, i2, p3, i4, p5, p6, p7]
+296: i12 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+300: i13 = int_lt(i4, i12)
+303: guard_true(i13, descr=<Guard0x42c2020>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31))')
+309: p14 = getfield_gc_r(p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+320: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x40d9400>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(- nc15181 1)')
+339: i17 = int_sub(i12, 1)
debug_merge_point(0, 0, '(loop15177 lst5187 AppRand31)')
+343: p18 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+347: guard_nonnull_class(p18, 16482960, descr=<Guard0x40d9460>) [i0, i1, i2, p3, i4, p5, p6, p7]
+367: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+378: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x42c2068>) [i0, i1, i2, p3, i4, p5, p6, p7]
+387: p22 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
+387: i24 = int_lt(i17, 0)
+391: guard_true(i24, descr=<Guard0x42c20b0>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, 'lst5179')
+397: p25 = getfield_gc_r(p6, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+408: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x42c20f8>) [i0, i1, i2, p3, i4, p5, p6, p7]
+417: p27 = getfield_gc_r(p6, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+421: p28 = getfield_gc_r(p6, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop1 AppRand10 '())')
+425: guard_class(p27, 16503536, descr=<Guard0x42c2140>) [i0, i1, i2, p3, i4, p5, p6, p7]
+439: p30 = getfield_gc_r(p27, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+443: guard_nonnull_class(p30, 16477696, descr=<Guard0x40d94c0>) [i0, i1, i2, p3, i4, p5, p6, p7]
+461: p32 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+472: guard_value(p32, ConstPtr(ptr33), descr=<Guard0x42c2188>) [i0, i1, i2, p3, i4, p5, p6, p7]
+481: p34 = getfield_gc_r(p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 AppRand10 '())')
debug_merge_point(0, 0, '(let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))')
+481: guard_class(p28, 16435920, descr=<Guard0x42c21d0>) [i0, i1, i2, p3, i4, p5, p6, p7]
+494: p36 = getfield_gc_r(p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+498: guard_nonnull_class(p36, ConstClass(ForwardLink), descr=<Guard0x40d9520>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(car ps)')
debug_merge_point(0, 0, '(let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8)))')
debug_merge_point(0, 0, '(vector-ref p 0)')
debug_merge_point(0, 0, '(vector-ref p 1)')
debug_merge_point(0, 0, '(vector-ref p 2)')
debug_merge_point(0, 0, '(let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))')
debug_merge_point(0, 0, '(lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))')
+516: p38 = getfield_gc_r(p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+520: p39 = getfield_gc_r(p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+524: guard_class(p39, 16505296, descr=<Guard0x42c2218>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(vector-ref radicals nc1)')
+536: guard_nonnull_class(p38, ConstClass(W_Vector), descr=<Guard0x40d9580>) [i0, i1, i2, p3, i4, p5, p6, p7]
+556: i43 = int_ge(i2, 0)
+560: guard_true(i43, descr=<Guard0x42c2260>) [i0, i1, i2, p3, i4, p5, p6, p7]
+566: i44 = getfield_gc_i(p38, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+570: i45 = int_lt(i2, i44)
+573: guard_true(i45, descr=<Guard0x42c22a8>) [i0, i1, i2, p3, i4, p5, p6, p7]
+579: p46 = getfield_gc_r(p38, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+583: guard_class(p46, 16622984, descr=<Guard0x42c22f0>) [i0, i1, i2, p3, i4, p5, p6, p7]
+595: p48 = getfield_gc_r(p38, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+599: p49 = getarrayitem_gc_r(p48, i2, descr=<ArrayP 8>)
+611: guard_class(p49, 16470384, descr=<Guard0x42c2338>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(loop1 (cdr ps) lst)')
+624: guard_nonnull_class(p3, 16470384, descr=<Guard0x40d95e0>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)')
+649: p52 = new_with_vtable(descr=<SizeDescr 32>)
+699: p53 = new_with_vtable(descr=<SizeDescr 56>)
+710: p54 = new_with_vtable(descr=<SizeDescr 56>)
+721: setfield_gc(p54, p39, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+739: setfield_gc(p54, ConstPtr(ptr55), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+743: setfield_gc(p54, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+747: p56 = new_with_vtable(descr=<SizeDescr 16>)
+759: setfield_gc(p56, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+763: setfield_gc(p54, p56, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+767: p57 = new_with_vtable(descr=<SizeDescr 16>)
+778: setfield_gc(p57, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+782: setfield_gc(p54, p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+786: p58 = new_with_vtable(descr=<SizeDescr 16>)
+797: setfield_gc(p58, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+801: setfield_gc(p54, p58, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+805: setfield_gc(p53, p36, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+809: setfield_gc(p52, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+827: setfield_gc(p53, ConstPtr(ptr59), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+831: setfield_gc(p53, p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+835: setfield_gc(p53, p28, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+839: setfield_gc(p52, p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+850: setfield_gc(p52, ConstPtr(ptr60), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+854: setfield_gc(p53, p54, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+858: setfield_gc(p53, p49, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+862: jump(p52, p53, descr=TargetToken(61029440))
+896: --end of the loop--
[3e4c22b1baa8d6d] jit-log-opt-bridge}
[3e4c22b1bce81aa] {jit-backend
[3e4c22b1bd642d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ece
[3e4c22b1bd6cbdb] jit-backend-dump}
[3e4c22b1bd77b2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecef4 +0  28000000
[3e4c22b1bd790e3] jit-backend-dump}
[3e4c22b1bd7ce50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed165 +0  28000000
[3e4c22b1bd7dce4] jit-backend-dump}
[3e4c22b1bd81060] {jit-backend-addr
bridge out of Guard 0x3cf6e60 has address 0x7f4a5c1ecef0 to 0x7f4a5c1ed160
       gc table: 0x7f4a5c1ece40
    jump target: 0x7f4a5c1ecef0
         resops: 0x7f4a5c1ecefe
       failures: 0x7f4a5c1ed160
            end: 0x7f4a5c1ed39b
[3e4c22b1bd833e0] jit-backend-addr}
[3e4c22b1bd86753] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecf0e +0  91020000
[3e4c22b1bd87588] jit-backend-dump}
[3e4c22b1bd8a7b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecf22 +0  99020000
[3e4c22b1bd8b510] jit-backend-dump}
[3e4c22b1bd8ea82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecf41 +0  B2020000
[3e4c22b1bd8f7cf] jit-backend-dump}
[3e4c22b1bd928d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecf54 +0  BB020000
[3e4c22b1bd935e7] jit-backend-dump}
[3e4c22b1bd96585] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecf68 +0  C3020000
[3e4c22b1bd972d7] jit-backend-dump}
[3e4c22b1bd9a253] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecf76 +0  D1020000
[3e4c22b1bd9af6c] jit-backend-dump}
[3e4c22b1bd9defd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecf8d +0  D6020000
[3e4c22b1bd9ec40] jit-backend-dump}
[3e4c22b1bda1bb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecfad +0  D2020000
[3e4c22b1bda28c8] jit-backend-dump}
[3e4c22b1bda5816] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecfc3 +0  D8020000
[3e4c22b1bda6525] jit-backend-dump}
[3e4c22b1bda94c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecfd6 +0  E1020000
[3e4c22b1bdaa1f4] jit-backend-dump}
[3e4c22b1bdad16f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ecfee +0  E5020000
[3e4c22b1bdadefc] jit-backend-dump}
[3e4c22b1bdb0e53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed002 +0  ED020000
[3e4c22b1bdb1bb2] jit-backend-dump}
[3e4c22b1bdb4afd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed00c +0  FF020000
[3e4c22b1bdb5834] jit-backend-dump}
[3e4c22b1bdb875a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed01a +0  0D030000
[3e4c22b1bdb9488] jit-backend-dump}
[3e4c22b1bdbc39f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed02c +0  17030000
[3e4c22b1bdbd0b1] jit-backend-dump}
[3e4c22b1bdc0011] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed04a +0  15030000
[3e4c22b1bdc0d3c] jit-backend-dump}
[3e4c22b1bdc3d04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed060 +0  1B030000
[3e4c22b1bdc4a35] jit-backend-dump}
[3e4c22b1bdc7c36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8fb0 +0  3C3F0100
[3e4c22b1bdc8974] jit-backend-dump}
[3e4c22b1bdcc84d] jit-backend}
[3e4c22b1bdd04d2] {jit-log-opt-bridge
# bridge out of Guard 0x3cf6e60 with 78 ops
[p0, p1, p2, p3, p4]
+198: guard_class(p0, 16437896, descr=<Guard0x40d9640>) [p0, p1, p2, p3, p4]
+210: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+221: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x42c2380>) [p0, p1, p2, p3, p4]
+230: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+230: guard_not_invalidated(descr=<Guard0x42c23c8>) [p0, p1, p2, p3, p4]
+230: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+234: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+238: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop25089 AppRand23 AppRand24) from (cons AppRand15 AppRand16)')
+242: guard_nonnull_class(p9, 16479200, descr=<Guard0x40d96a0>) [p0, p1, p2, p3, p4]
+261: guard_nonnull_class(p10, 16470384, descr=<Guard0x40d9700>) [p0, p1, p2, p3, p4]
+280: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+291: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x42c2410>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 AppRand23 AppRand24)')
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+300: guard_class(p11, 16437896, descr=<Guard0x42c2458>) [p0, p1, p2, p3, p4]
+314: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+318: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x40d9760>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+337: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+341: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+345: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+349: p22 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+353: p23 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+357: guard_class(p23, 16505296, descr=<Guard0x42c24a0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+369: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+373: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x40d97c0>) [p0, p1, p2, p3, p4]
+391: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x40d9820>) [p0, p1, p2, p3, p4]
+410: i28 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+421: i29 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+425: i30 = int_eq(i28, i29)
+428: guard_false(i30, descr=<Guard0x42c24e8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, '(vector-ref radicals nc25081)')
+434: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x40d9880>) [p0, p1, p2, p3, p4]
+454: i33 = int_ge(i29, 0)
+458: guard_true(i33, descr=<Guard0x42c2530>) [p0, p1, p2, p3, p4]
+464: i34 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+469: i35 = int_lt(i29, i34)
+472: guard_true(i35, descr=<Guard0x42c2578>) [p0, p1, p2, p3, p4]
+478: p36 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+483: guard_class(p36, 16622984, descr=<Guard0x42c25c0>) [p0, p1, p2, p3, p4]
+496: p38 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+501: p39 = getarrayitem_gc_r(p38, i29, descr=<ArrayP 8>)
+513: guard_class(p39, 16470384, descr=<Guard0x42c2608>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+526: p41 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+530: guard_nonnull_class(p41, 16470384, descr=<Guard0x40d98e0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+548: p43 = new_with_vtable(descr=<SizeDescr 32>)
+595: p44 = new_with_vtable(descr=<SizeDescr 24>)
+606: setfield_gc(p44, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+624: p45 = new_with_vtable(descr=<SizeDescr 24>)
+635: setfield_gc(p45, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+639: setfield_gc(p45, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+643: setfield_gc(p44, p45, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+647: p46 = new_with_vtable(descr=<SizeDescr 56>)
+658: p47 = new_with_vtable(descr=<SizeDescr 64>)
+669: setfield_gc(p47, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+680: setfield_gc(p47, ConstPtr(ptr48), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+684: setfield_gc(p47, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+688: setfield_gc(p47, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+692: setfield_gc(p47, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+696: setfield_gc(p47, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+700: setfield_gc(p47, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+711: setfield_gc(p46, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+715: setfield_gc(p46, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+719: setfield_gc(p46, p47, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+723: setfield_gc(p46, p39, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+727: setfield_gc(p46, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+731: setfield_gc(p46, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+742: setfield_gc(p43, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+760: setfield_gc(p43, p41, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+764: setfield_gc(p43, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+768: jump(p43, p46, descr=TargetToken(61027440))
+800: --end of the loop--
[3e4c22b1be15d37] jit-log-opt-bridge}
[3e4c22b1c02b469] {jit-backend
[3e4c22b1c09591a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed4a
[3e4c22b1c09cc31] jit-backend-dump}
[3e4c22b1c0a7c90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed534 +0  28000000
[3e4c22b1c0a9124] jit-backend-dump}
[3e4c22b1c0ad0d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed745 +0  28000000
[3e4c22b1c0ae018] jit-backend-dump}
[3e4c22b1c0b14b1] {jit-backend-addr
bridge out of Guard 0x3ceda90 has address 0x7f4a5c1ed530 to 0x7f4a5c1ed740
       gc table: 0x7f4a5c1ed4a0
    jump target: 0x7f4a5c1ed530
         resops: 0x7f4a5c1ed53e
       failures: 0x7f4a5c1ed740
            end: 0x7f4a5c1ed8ef
[3e4c22b1c0b3901] jit-backend-addr}
[3e4c22b1c0b6e0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed54e +0  31020000
[3e4c22b1c0b7c99] jit-backend-dump}
[3e4c22b1c0baed7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed562 +0  39020000
[3e4c22b1c0bbbf0] jit-backend-dump}
[3e4c22b1c0bedc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed581 +0  52020000
[3e4c22b1c0bfac9] jit-backend-dump}
[3e4c22b1c0c2bdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed594 +0  5B020000
[3e4c22b1c0c38cc] jit-backend-dump}
[3e4c22b1c0c6983] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed5a8 +0  63020000
[3e4c22b1c0c7683] jit-backend-dump}
[3e4c22b1c0ca76e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed5b6 +0  71020000
[3e4c22b1c0cb44f] jit-backend-dump}
[3e4c22b1c0ce525] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed5cd +0  76020000
[3e4c22b1c0cf200] jit-backend-dump}
[3e4c22b1c0d2303] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed5ed +0  72020000
[3e4c22b1c0d2ff4] jit-backend-dump}
[3e4c22b1c0d60b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed603 +0  78020000
[3e4c22b1c0d6db1] jit-backend-dump}
[3e4c22b1c0d9e99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed616 +0  81020000
[3e4c22b1c0dab93] jit-backend-dump}
[3e4c22b1c0ddc31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed62e +0  85020000
[3e4c22b1c0de92e] jit-backend-dump}
[3e4c22b1c0e1a06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed644 +0  8B020000
[3e4c22b1c0e2700] jit-backend-dump}
[3e4c22b1c0e5a5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8f3e +0  EE450100
[3e4c22b1c0e676a] jit-backend-dump}
[3e4c22b1c0edde0] jit-backend}
[3e4c22b1c0f1f23] {jit-log-opt-bridge
# bridge out of Guard 0x3ceda90 with 67 ops
[p0, p1, p2, p3, p4]
+166: guard_class(p0, 16437896, descr=<Guard0x40d9940>) [p0, p1, p2, p3, p4]
+178: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+189: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x42c2650>) [p0, p1, p2, p3, p4]
+198: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+198: guard_not_invalidated(descr=<Guard0x42c2698>) [p0, p1, p2, p3, p4]
+198: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+202: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+206: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop25089 AppRand23 AppRand24) from (cons AppRand15 AppRand16)')
+210: guard_nonnull_class(p9, 16479200, descr=<Guard0x40d99a0>) [p0, p1, p2, p3, p4]
+229: guard_nonnull_class(p10, 16470384, descr=<Guard0x40d9a00>) [p0, p1, p2, p3, p4]
+248: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+259: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x42c26e0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 AppRand23 AppRand24)')
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+268: guard_class(p11, 16437896, descr=<Guard0x42c2728>) [p0, p1, p2, p3, p4]
+282: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+286: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x40d9a60>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+305: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+309: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+313: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+317: p22 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+321: p23 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+325: guard_class(p23, 16505296, descr=<Guard0x42c2770>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+337: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+341: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x40d9ac0>) [p0, p1, p2, p3, p4]
+359: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x40d9b20>) [p0, p1, p2, p3, p4]
+378: i28 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+389: i29 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+393: i30 = int_eq(i28, i29)
+396: guard_true(i30, descr=<Guard0x42c27b8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+402: p31 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+406: guard_nonnull_class(p31, 16616448, descr=<Guard0x40d9b80>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+424: p33 = new_with_vtable(descr=<SizeDescr 32>)
+471: p34 = new_with_vtable(descr=<SizeDescr 24>)
+482: setfield_gc(p34, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+500: p35 = new_with_vtable(descr=<SizeDescr 24>)
+511: setfield_gc(p35, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+515: setfield_gc(p35, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+519: setfield_gc(p34, p35, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+523: p36 = new_with_vtable(descr=<SizeDescr 56>)
+534: p37 = new_with_vtable(descr=<SizeDescr 64>)
+545: setfield_gc(p37, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+556: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+560: setfield_gc(p37, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+564: setfield_gc(p37, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+568: setfield_gc(p37, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+572: setfield_gc(p37, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+576: setfield_gc(p37, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+587: setfield_gc(p36, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+591: setfield_gc(p36, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+595: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+599: setfield_gc(p36, p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+603: setfield_gc(p36, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+607: setfield_gc(p36, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+611: setfield_gc(p33, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+629: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+633: setfield_gc(p33, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+637: jump(p33, p36, descr=TargetToken(61027440))
+672: --end of the loop--
[3e4c22b1c12f205] jit-log-opt-bridge}
[3e4c22b1c2e58f7] {jit-backend
[3e4c22b1c33327d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eda
[3e4c22b1c33ac26] jit-backend-dump}
[3e4c22b1c345778] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edae4 +0  28000000
[3e4c22b1c346c3f] jit-backend-dump}
[3e4c22b1c34aaa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edce5 +0  28000000
[3e4c22b1c34ba20] jit-backend-dump}
[3e4c22b1c34ef92] {jit-backend-addr
bridge out of Guard 0x3d72140 has address 0x7f4a5c1edae0 to 0x7f4a5c1edce0
       gc table: 0x7f4a5c1eda30
    jump target: 0x7f4a5c1edae0
         resops: 0x7f4a5c1edaee
       failures: 0x7f4a5c1edce0
            end: 0x7f4a5c1edefe
[3e4c22b1c3513ba] jit-backend-addr}
[3e4c22b1c3548f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edafe +0  04020000
[3e4c22b1c35570c] jit-backend-dump}
[3e4c22b1c358b1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edb0b +0  13020000
[3e4c22b1c3598a2] jit-backend-dump}
[3e4c22b1c35c9b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edb1b +0  1F020000
[3e4c22b1c35d6dc] jit-backend-dump}
[3e4c22b1c36076b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edb33 +0  23020000
[3e4c22b1c364a6d] jit-backend-dump}
[3e4c22b1c36855b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edb40 +0  32020000
[3e4c22b1c369334] jit-backend-dump}
[3e4c22b1c36cb20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edb54 +0  3A020000
[3e4c22b1c36d8a0] jit-backend-dump}
[3e4c22b1c370da4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edb74 +0  52020000
[3e4c22b1c371b03] jit-backend-dump}
[3e4c22b1c374d4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edb87 +0  5B020000
[3e4c22b1c375a20] jit-backend-dump}
[3e4c22b1c378a96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edb9c +0  62020000
[3e4c22b1c379765] jit-backend-dump}
[3e4c22b1c37c7b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edba9 +0  71020000
[3e4c22b1c37d49f] jit-backend-dump}
[3e4c22b1c3804c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edbc0 +0  76020000
[3e4c22b1c381167] jit-backend-dump}
[3e4c22b1c38417c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edbe5 +0  6D020000
[3e4c22b1c384e17] jit-backend-dump}
[3e4c22b1c387e38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edbfc +0  72020000
[3e4c22b1c388aeb] jit-backend-dump}
[3e4c22b1c38bb06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edc0e +0  7C020000
[3e4c22b1c38c7b3] jit-backend-dump}
[3e4c22b1c38f7c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edc2d +0  79020000
[3e4c22b1c39045d] jit-backend-dump}
[3e4c22b1c3934a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edc45 +0  7D020000
[3e4c22b1c39414d] jit-backend-dump}
[3e4c22b1c3971dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edc58 +0  86020000
[3e4c22b1c397eba] jit-backend-dump}
[3e4c22b1c39b1d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9edd +0  FF3B0100
[3e4c22b1c39bec0] jit-backend-dump}
[3e4c22b1c39ff2a] jit-backend}
[3e4c22b1c3a3ae5] {jit-log-opt-bridge
# bridge out of Guard 0x3d72140 with 51 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x40d9be0>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull(p3, descr=<Guard0x42c2800>) [p0, p1]
+230: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+233: guard_true(i5, descr=<Guard0x42c2848>) [p0, p1]
debug_merge_point(0, 0, 'lst5093')
+239: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+243: guard_nonnull_class(p6, 16470384, descr=<Guard0x40d9c40>) [p0, p1]
+263: guard_class(p0, 16437896, descr=<Guard0x42c2890>) [p0, p1]
+276: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+287: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x42c28d8>) [p0, p1]
+296: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+296: guard_not_invalidated(descr=<Guard0x42c2920>) [p0, p1]
+296: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+300: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+304: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)')
+308: guard_nonnull_class(p12, 16479200, descr=<Guard0x40d9ca0>) [p0, p1]
+328: guard_nonnull_class(p13, 16470384, descr=<Guard0x40d9d00>) [p0, p1]
+347: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+359: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x42c2968>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+368: guard_class(p14, 16437896, descr=<Guard0x42c29b0>) [p0, p1]
+381: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+385: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x40d9d60>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+404: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+409: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+414: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+419: p25 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+424: p26 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+429: guard_class(p26, 16505296, descr=<Guard0x42c29f8>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+441: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+446: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x40d9dc0>) [p0, p1]
+464: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x40d9e20>) [p0, p1]
+482: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+493: i32 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+504: i33 = int_eq(i31, i32)
+507: guard_true(i33, descr=<Guard0x42c2a40>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+513: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+517: guard_nonnull_class(p34, 16470384, descr=<Guard0x40d9e80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+537: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x40d9ee0>) [p6, p34, p12, p25, p24, p23, p22, p13, p14, p26, p20]
+556: jump(p12, p34, p6, p20, p26, p14, p22, p23, p24, p13, p25, p13, p25, p24, p23, p22, p26, p28, i31, descr=TargetToken(61027200))
+688: --end of the loop--
[3e4c22b1c3d5b04] jit-log-opt-bridge}
[3e4c22b1d16e6e5] {jit-backend
[3e4c22b1d1e3d03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee080 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C6202000048FF0425A040D3038139700B01000F85000000004C8B79104983FF01720741813FB09700000F85000000004C8B3500FFFFFF4D39F70F8400000000813AC81800000F85000000004C8B72084983FE01720741813E900F00000F85000000004D8B6F084983FD01720841817D00F08C00000F85000000004D8B65084983FC000F8E000000004D8B551841813AF0EE02000F85000000004D8B55104D8B6A104983FC010F8E000000004D8B4A184983FC020F8E000000004D8B62204C8B510841813A40B400000F85000000004D8B4210488B3DB5FEFFFF4939F80F8500000000498B7A184D8B4208418138102001000F85000000004883FF017206813FF08C00000F85000000004983FD000F8C00000000488B77084939F50F8D00000000488B7718813EC8EB02000F8500000000488B77104A8B5CEE10813BB09700000F8500000000498B77104883FE017206813E40D202000F85000000004C8B79184983FF01720741813F40D202000F850000000048899530010000488B0C25F091F900488D91C0000000483B14251092F9000F87F600000048891425F091F90048C701700B0100488D512048C702C8180000488D423848C700A8B800004C89400848898D38010000488B0D11FEFFFF4889481048897818488D783848C707601400004C894F08488978204C8D4F1049C701601400004D8969084C8948284D8D691049C74500601400004D8965084C8968304C8BAD38010000498975104C8972084D8955084D897D184C8942104C8B85300100004C8942184C8B05AAFDFFFF4C8942204889422848895A304C89AD300100004889953801000049BB00B61D5C4A7F000041FFE30F1F0048C7442408FFFFFF0049BB08DF1E5C4A7F00004C895D204D8D9BE863FDFF41FFD3E978FDFFFF49BB68E01E5C4A7F00004C895D204D8D9B886AFDFF41FFD3E9F5FEFFFFFF3577FCFFFF49BB18DF1E5C4A7F000041534D8D9BE860FDFF41FFE3FF3563FCFFFF49BB28DF1E5C4A7F000041534D8D9BD860FDFF41FFE3FF3557FCFFFF49BB38DF1E5C4A7F000041534D8D9BC860FDFF41FFE3FF3543FCFFFF49BB48DF1E5C4A7F000041534D8D9BB860FDFF41FFE3FF352FFCFFFF49BB58DF1E5C4A7F000041534D8D9BA860FDFF41FFE3FF351BFCFFFF49BB68DF1E5C4A7F000041534D8D9B9860FDFF41FFE3FF3507FCFFFF49BB78DF1E5C4A7F000041534D8D9B8860FDFF41FFE3FF35F3FBFFFF49BB88DF1E5C4A7F000041534D8D9B7860FDFF41FFE3FF35DFFBFFFF49BB98DF1E5C4A7F000041534D8D9B6860FDFF41FFE3FF35CBFBFFFF49BBA8DF1E5C4A7F000041534D8D9B5860FDFF41FFE3FF35B7FBFFFF49BBB8DF1E5C4A7F000041534D8D9B4860FDFF41FFE3FF35A3FBFFFF49BBC8DF1E5C4A7F000041534D8D9B3860FDFF41FFE3FF3597FBFFFF49BBD8DF1E5C4A7F000041534D8D9B2860FDFF41FFE3FF3583FBFFFF49BBE8DF1E5C4A7F000041534D8D9B1860FDFF41FFE3FF356FFBFFFF49BBF8DF1E5C4A7F000041534D8D9B0860FDFF41FFE3FF355BFBFFFF49BB08E01E5C4A7F000041534D8D9BF85FFDFF41FFE3FF3547FBFFFF49BB18E01E5C4A7F000041534D8D9BE85FFDFF41FFE3FF3533FBFFFF49BB28E01E5C4A7F000041534D8D9BD85FFDFF41FFE3FF351FFBFFFF49BB38E01E5C4A7F000041534D8D9BC85FFDFF41FFE3FF350BFBFFFF49BB48E01E5C4A7F000041534D8D9BB85FFDFF41FFE3FF35F7FAFFFF49BB58E01E5C4A7F000041534D8D9BA85FFDFF41FFE3
[3e4c22b1d1ec433] jit-backend-dump}
[3e4c22b1d1f8b24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee154 +0  25000000
[3e4c22b1d1fa18f] jit-backend-dump}
[3e4c22b1d1fe123] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee3c5 +0  25000000
[3e4c22b1d1fefb6] jit-backend-dump}
[3e4c22b1d2024cd] {jit-backend-addr
bridge out of Guard 0x3d7e020 has address 0x7f4a5c1ee150 to 0x7f4a5c1ee3c0
       gc table: 0x7f4a5c1ee080
    jump target: 0x7f4a5c1ee150
         resops: 0x7f4a5c1ee15e
       failures: 0x7f4a5c1ee3c0
            end: 0x7f4a5c1ee64f
[3e4c22b1d204923] jit-backend-addr}
[3e4c22b1d207f43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee16e +0  91020000
[3e4c22b1d208e17] jit-backend-dump}
[3e4c22b1d20c06b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee185 +0  96020000
[3e4c22b1d20cda8] jit-backend-dump}
[3e4c22b1d20fde8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee195 +0  A2020000
[3e4c22b1d210b06] jit-backend-dump}
[3e4c22b1d213f7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee1a1 +0  B2020000
[3e4c22b1d214c77] jit-backend-dump}
[3e4c22b1d217bb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee1b8 +0  B7020000
[3e4c22b1d2188bc] jit-backend-dump}
[3e4c22b1d21b7d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee1d0 +0  BB020000
[3e4c22b1d21c4ee] jit-backend-dump}
[3e4c22b1d21f5ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee1de +0  E5020000
[3e4c22b1d220341] jit-backend-dump}
[3e4c22b1d223337] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee1ef +0  F0020000
[3e4c22b1d22405c] jit-backend-dump}
[3e4c22b1d226fd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee201 +0  FA020000
[3e4c22b1d227ce7] jit-backend-dump}
[3e4c22b1d22ac16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee20f +0  08030000
[3e4c22b1d22b93e] jit-backend-dump}
[3e4c22b1d22e88c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee224 +0  0F030000
[3e4c22b1d22f5ae] jit-backend-dump}
[3e4c22b1d2324ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee238 +0  17030000
[3e4c22b1d2331e3] jit-backend-dump}
[3e4c22b1d23610f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee24d +0  1E030000
[3e4c22b1d236e1f] jit-backend-dump}
[3e4c22b1d23cf4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee25f +0  28030000
[3e4c22b1d23dd75] jit-backend-dump}
[3e4c22b1d2412f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee269 +0  3A030000
[3e4c22b1d241ff3] jit-backend-dump}
[3e4c22b1d24501a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee276 +0  49030000
[3e4c22b1d245d26] jit-backend-dump}
[3e4c22b1d248da9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee286 +0  55030000
[3e4c22b1d249aa3] jit-backend-dump}
[3e4c22b1d24ca96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee29b +0  5C030000
[3e4c22b1d24d793] jit-backend-dump}
[3e4c22b1d2507df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee2b1 +0  62030000
[3e4c22b1d2514d3] jit-backend-dump}
[3e4c22b1d2544b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee2c8 +0  67030000
[3e4c22b1d2551a1] jit-backend-dump}
[3e4c22b1d2584cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db767 +0  E5290100
[3e4c22b1d2591da] jit-backend-dump}
[3e4c22b1d25d0a4] jit-backend}
[3e4c22b1d260d7f] {jit-log-opt-bridge
# bridge out of Guard 0x3d7e020 with 82 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x40d9f40>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull_class(p3, 16470384, descr=<Guard0x40d9fa0>) [p0, p1]
+272: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+275: guard_false(i6, descr=<Guard0x42c2a88>) [p0, p1]
debug_merge_point(0, 0, '(let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))')
+281: guard_class(p0, 16437896, descr=<Guard0x42c2ad0>) [p0, p1]
+293: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+297: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x4610020>) [p0, p1]
debug_merge_point(0, 0, '(car ps)')
+316: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+320: guard_nonnull_class(p10, ConstClass(W_Vector), descr=<Guard0x4610080>) [p0, p1]
+340: guard_not_invalidated(descr=<Guard0x42c2b18>) [p0, p1]
debug_merge_point(0, 0, '(let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8)))')
debug_merge_point(0, 0, '(vector-ref p 0)')
+340: i12 = getfield_gc_i(p10, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+344: i14 = int_lt(0, i12)
+348: guard_true(i14, descr=<Guard0x42c2b60>) [p0, p1]
+354: p15 = getfield_gc_r(p10, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+358: guard_class(p15, 16623792, descr=<Guard0x42c2ba8>) [p0, p1]
+371: p17 = getfield_gc_r(p10, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+375: i19 = getarrayitem_gc_i(p17, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 1)')
+379: i21 = int_lt(1, i12)
+383: guard_true(i21, descr=<Guard0x42c2bf0>) [p0, p1]
+389: i23 = getarrayitem_gc_i(p17, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 2)')
+393: i25 = int_lt(2, i12)
+397: guard_true(i25, descr=<Guard0x42c2c38>) [p0, p1]
+403: i27 = getarrayitem_gc_i(p17, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))')
debug_merge_point(0, 0, '(lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))')
+407: p28 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+411: guard_class(p28, 16477696, descr=<Guard0x42c2c80>) [p0, p1]
+424: p30 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+435: guard_value(p30, ConstPtr(ptr31), descr=<Guard0x42c2cc8>) [p0, p1]
+444: p32 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+448: p33 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+452: guard_class(p33, 16505296, descr=<Guard0x42c2d10>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref radicals nc1)')
+465: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x46100e0>) [p0, p1]
+483: i37 = int_ge(i19, 0)
+487: guard_true(i37, descr=<Guard0x42c2d58>) [p0, p1]
+493: i38 = getfield_gc_i(p32, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+497: i39 = int_lt(i19, i38)
+500: guard_true(i39, descr=<Guard0x42c2da0>) [p0, p1]
+506: p40 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+510: guard_class(p40, 16622984, descr=<Guard0x42c2de8>) [p0, p1]
+522: p42 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+526: p43 = getarrayitem_gc_r(p42, i19, descr=<ArrayP 8>)
+531: guard_class(p43, 16470384, descr=<Guard0x42c2e30>) [p0, p1]
debug_merge_point(0, 0, '(loop1 (cdr ps) lst)')
+543: p45 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+547: guard_nonnull_class(p45, 16616448, descr=<Guard0x4610140>) [p0, p1]
+565: p47 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+569: guard_nonnull_class(p47, 16616448, descr=<Guard0x46101a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)')
+588: p49 = new_with_vtable(descr=<SizeDescr 32>)
+639: p50 = new_with_vtable(descr=<SizeDescr 56>)
+650: p51 = new_with_vtable(descr=<SizeDescr 56>)
+661: setfield_gc(p51, p33, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+679: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+683: setfield_gc(p51, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+687: p53 = new_with_vtable(descr=<SizeDescr 16>)
+698: setfield_gc(p53, i23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+702: setfield_gc(p51, p53, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+706: p54 = new_with_vtable(descr=<SizeDescr 16>)
+717: setfield_gc(p54, i19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+721: setfield_gc(p51, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+725: p55 = new_with_vtable(descr=<SizeDescr 16>)
+737: setfield_gc(p55, i27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+741: setfield_gc(p51, p55, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+745: setfield_gc(p49, p45, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+756: setfield_gc(p50, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+760: setfield_gc(p49, p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+764: setfield_gc(p49, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+768: setfield_gc(p50, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+772: setfield_gc(p50, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+790: setfield_gc(p50, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+794: setfield_gc(p50, p51, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+798: setfield_gc(p50, p43, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+802: jump(p49, p50, descr=TargetToken(61029440))
+832: --end of the loop--
[3e4c22b1d2a5eb3] jit-log-opt-bridge}
[3e4c22b1d4aef80] {jit-backend
[3e4c22b1d508e48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee
[3e4c22b1d50fccb] jit-backend-dump}
[3e4c22b1d51a367] {jit-backend-addr
Loop 95 ((let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))) has address 0x7f4a5c1ee85d to 0x7f4a5c1ee9f0 (bootstrap 0x7f4a5c1ee7d0)
       gc table: 0x7f4a5c1ee750
       function: 0x7f4a5c1ee7d0
         resops: 0x7f4a5c1ee85d
       failures: 0x7f4a5c1ee9f0
            end: 0x7f4a5c1eeb8b
[3e4c22b1d51d3fc] jit-backend-addr}
[3e4c22b1d52193d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee874 +0  A7010000
[3e4c22b1d522ba7] jit-backend-dump}
[3e4c22b1d526196] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee88a +0  AD010000
[3e4c22b1d526f42] jit-backend-dump}
[3e4c22b1d52a37f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee89d +0  D2010000
[3e4c22b1d52b0b6] jit-backend-dump}
[3e4c22b1d52e356] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee8b1 +0  DA010000
[3e4c22b1d52f075] jit-backend-dump}
[3e4c22b1d532285] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee8c5 +0  E2010000
[3e4c22b1d532f8e] jit-backend-dump}
[3e4c22b1d5362a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee8db +0  E8010000
[3e4c22b1d536fa3] jit-backend-dump}
[3e4c22b1d53a023] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee8e8 +0  F7010000
[3e4c22b1d53acf5] jit-backend-dump}
[3e4c22b1d53dd62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee8f4 +0  07020000
[3e4c22b1d53ea4a] jit-backend-dump}
[3e4c22b1d541ab1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee90b +0  0C020000
[3e4c22b1d542774] jit-backend-dump}
[3e4c22b1d5457db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee918 +0  1B020000
[3e4c22b1d5464d8] jit-backend-dump}
[3e4c22b1d549533] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee925 +0  2A020000
[3e4c22b1d54a20b] jit-backend-dump}
[3e4c22b1d54d288] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee93c +0  2F020000
[3e4c22b1d54df76] jit-backend-dump}
[3e4c22b1d551b49] jit-backend}
[3e4c22b1d5559a8] {jit-log-opt-loop
# Loop 95 ((let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))) : entry bridge with 54 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
+277: guard_class(p1, 16435920, descr=<Guard0x4610200>) [p0, p1]
+296: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x4610260>) [p0, p1]
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+318: guard_not_invalidated(descr=<Guard0x42c2ec0>) [p0, p1]
+318: guard_class(p0, 16503536, descr=<Guard0x42c2f08>) [p0, p1]
+337: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+341: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+345: guard_class(p7, 16478448, descr=<Guard0x42c2f50>) [p0, p1]
+357: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+368: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x42c2f98>) [p0, p1]
+377: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+381: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x46102c0>) [p0, p1]
+399: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+403: i14 = int_lt(i6, i13)
+406: guard_false(i14, descr=<Guard0x42c2fe0>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+412: i15 = int_add_ovf(i13, i6)
+418: guard_no_overflow(descr=<Guard0x42c3028>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+424: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+428: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x4610320>) [p0, p1]
+447: i18 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+451: i19 = int_sub_ovf(i18, i15)
+454: guard_no_overflow(descr=<Guard0x42c3070>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+460: i21 = int_sub_ovf(i6, 1)
+467: guard_no_overflow(descr=<Guard0x42c30b8>) [p0, p1]
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
+473: p22 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+477: guard_nonnull_class(p22, 16616448, descr=<Guard0x4610380>) [p0, p1]
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+496: p24 = new_with_vtable(descr=<SizeDescr 32>)
+546: p25 = new_with_vtable(descr=<SizeDescr 24>)
+557: p26 = new_with_vtable(descr=<SizeDescr 32>)
+568: setfield_gc(p26, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+576: p29 = new_array(3, descr=<ArrayS 8>)
+595: setarrayitem_gc(p29, 0, i13, descr=<ArrayS 8>)
+599: setarrayitem_gc(p29, 1, i6, descr=<ArrayS 8>)
+603: setarrayitem_gc(p29, 2, i19, descr=<ArrayS 8>)
+607: setfield_gc(p26, p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+618: setfield_gc(p26, ConstPtr(ptr33), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+622: setfield_gc(p25, p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+626: setfield_gc(p25, p22, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+630: setfield_gc(p24, i21, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+634: setfield_gc(p24, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+638: setfield_gc(p24, p25, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+642: jump(p24, p1, descr=TargetToken(61029280))
+672: --end of the loop--
[3e4c22b1d58792b] jit-log-opt-loop}
[3e4c22b1d77c22f] {jit-backend
[3e4c22b1d7d3a16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eecd
[3e4c22b1d7db93e] jit-backend-dump}
[3e4c22b1d7e64b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eed74 +0  28000000
[3e4c22b1d7e77ee] jit-backend-dump}
[3e4c22b1d7eb571] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eefb5 +0  28000000
[3e4c22b1d7ec37b] jit-backend-dump}
[3e4c22b1d7ef680] {jit-backend-addr
bridge out of Guard 0x3b64fe0 has address 0x7f4a5c1eed70 to 0x7f4a5c1eefb0
       gc table: 0x7f4a5c1eecd0
    jump target: 0x7f4a5c1eed70
         resops: 0x7f4a5c1eed7e
       failures: 0x7f4a5c1eefb0
            end: 0x7f4a5c1ef1cf
[3e4c22b1d7f1b35] jit-backend-addr}
[3e4c22b1d7f505a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eed8e +0  61020000
[3e4c22b1d7f5e74] jit-backend-dump}
[3e4c22b1d7f903e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eeda5 +0  66020000
[3e4c22b1d7f9d53] jit-backend-dump}
[3e4c22b1d7fcd90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eedbc +0  6B020000
[3e4c22b1d7fda93] jit-backend-dump}
[3e4c22b1d800b44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eedd1 +0  72020000
[3e4c22b1d801868] jit-backend-dump}
[3e4c22b1d8048d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eede5 +0  7A020000
[3e4c22b1d805619] jit-backend-dump}
[3e4c22b1d8087d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eee04 +0  93020000
[3e4c22b1d809536] jit-backend-dump}
[3e4c22b1d80c605] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eee18 +0  9B020000
[3e4c22b1d80d364] jit-backend-dump}
[3e4c22b1d81039a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eee2c +0  A3020000
[3e4c22b1d8110d7] jit-backend-dump}
[3e4c22b1d8140d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eee39 +0  B2020000
[3e4c22b1d814e1d] jit-backend-dump}
[3e4c22b1d817dd9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eee4f +0  B8020000
[3e4c22b1d818b32] jit-backend-dump}
[3e4c22b1d81baf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eee6f +0  B4020000
[3e4c22b1d81c834] jit-backend-dump}
[3e4c22b1d81f7e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eee8d +0  B2020000
[3e4c22b1d820555] jit-backend-dump}
[3e4c22b1d8234e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eee9f +0  BC020000
[3e4c22b1d824239] jit-backend-dump}
[3e4c22b1d827204] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eeebe +0  B9020000
[3e4c22b1d827f2c] jit-backend-dump}
[3e4c22b1d82ae89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eeee2 +0  B1020000
[3e4c22b1d82bbc6] jit-backend-dump}
[3e4c22b1d82eb73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eeef5 +0  BA020000
[3e4c22b1d82f88e] jit-backend-dump}
[3e4c22b1d832b4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d1600 +0  6CD70100
[3e4c22b1d8338a3] jit-backend-dump}
[3e4c22b1d83781e] jit-backend}
[3e4c22b1d83b4cb] {jit-log-opt-bridge
# bridge out of Guard 0x3b64fe0 with 51 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x46103e0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x4610440>) [p0, p1]
+217: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+221: guard_nonnull_class(p5, 16616448, descr=<Guard0x46104a0>) [p0, p1]
+240: guard_class(p0, 16437896, descr=<Guard0x42c3100>) [p0, p1]
+261: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+272: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x42c3148>) [p0, p1]
+281: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+281: guard_not_invalidated(descr=<Guard0x42c3190>) [p0, p1]
+281: p11 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+285: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+289: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (cons AppRand15 AppRand16)')
+293: guard_nonnull_class(p11, 16479200, descr=<Guard0x4610500>) [p0, p1]
+312: guard_nonnull_class(p12, 16470384, descr=<Guard0x4610560>) [p0, p1]
+332: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+343: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x42c31d8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+352: guard_class(p13, 16437896, descr=<Guard0x42c3220>) [p0, p1]
+365: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+369: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x46105c0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+387: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+391: p22 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+395: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+399: p24 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+403: p25 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+407: guard_class(p25, 16505296, descr=<Guard0x42c3268>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+419: p27 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+430: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x4610620>) [p0, p1]
+449: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x4610680>) [p0, p1]
+467: i30 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+478: i31 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+489: i32 = int_eq(i30, i31)
+492: guard_true(i32, descr=<Guard0x42c32b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+498: p33 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+516: guard_nonnull_class(p33, 16470384, descr=<Guard0x46106e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+534: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x4610740>) [p5, p3, p33, p11, p24, p23, p22, p21, p12, p13, p25, p19]
+553: p36 = new_with_vtable(descr=<SizeDescr 24>)
+597: setfield_gc(p36, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+601: setfield_gc(p36, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+605: jump(p11, p33, p36, p19, p25, p13, p21, p22, p23, p12, p24, p12, p24, p23, p22, p21, p25, p27, i30, descr=TargetToken(61027200))
+736: --end of the loop--
[3e4c22b1d86c316] jit-log-opt-bridge}
[3e4c22b1dbab3e7] {jit-backend
[3e4c22b1dc26530] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef
[3e4c22b1dc2fc8a] jit-backend-dump}
[3e4c22b1dc3aeb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef464 +0  28000000
[3e4c22b1dc3c433] jit-backend-dump}
[3e4c22b1dc40551] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef745 +0  28000000
[3e4c22b1dc414a9] jit-backend-dump}
[3e4c22b1dc4488a] {jit-backend-addr
bridge out of Guard 0x3cf7160 has address 0x7f4a5c1ef460 to 0x7f4a5c1ef740
       gc table: 0x7f4a5c1ef370
    jump target: 0x7f4a5c1ef460
         resops: 0x7f4a5c1ef46e
       failures: 0x7f4a5c1ef740
            end: 0x7f4a5c1efa07
[3e4c22b1dc46cbb] jit-backend-addr}
[3e4c22b1dc4a19e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef47e +0  01030000
[3e4c22b1dc4b01f] jit-backend-dump}
[3e4c22b1dc4e2b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef48b +0  10030000
[3e4c22b1dc4f015] jit-backend-dump}
[3e4c22b1dc52131] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef49b +0  1C030000
[3e4c22b1dc52eae] jit-backend-dump}
[3e4c22b1dc55f28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef4b3 +0  20030000
[3e4c22b1dc56c06] jit-backend-dump}
[3e4c22b1dc59c43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef4c0 +0  2F030000
[3e4c22b1dc5a927] jit-backend-dump}
[3e4c22b1dc5d908] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef4d4 +0  37030000
[3e4c22b1dc5e5ff] jit-backend-dump}
[3e4c22b1dc618df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef4eb +0  58030000
[3e4c22b1dc625d9] jit-backend-dump}
[3e4c22b1dc657e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef4fc +0  63030000
[3e4c22b1dc664f0] jit-backend-dump}
[3e4c22b1dc69582] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef510 +0  6B030000
[3e4c22b1dc6a294] jit-backend-dump}
[3e4c22b1dc6d2af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef52f +0  68030000
[3e4c22b1dc6df93] jit-backend-dump}
[3e4c22b1dc70f96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef542 +0  71030000
[3e4c22b1dc71c6b] jit-backend-dump}
[3e4c22b1dc74c27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef556 +0  79030000
[3e4c22b1dc758e7] jit-backend-dump}
[3e4c22b1dc788a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef562 +0  89030000
[3e4c22b1dc7957b] jit-backend-dump}
[3e4c22b1dc7c537] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef578 +0  8F030000
[3e4c22b1dc7d200] jit-backend-dump}
[3e4c22b1dc801b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef58f +0  94030000
[3e4c22b1dc80e91] jit-backend-dump}
[3e4c22b1dc83e8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef5a5 +0  9A030000
[3e4c22b1dc84b5c] jit-backend-dump}
[3e4c22b1dc87b34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef5bc +0  9F030000
[3e4c22b1dc88812] jit-backend-dump}
[3e4c22b1dc8b824] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef5d2 +0  A5030000
[3e4c22b1dc8c502] jit-backend-dump}
[3e4c22b1dc8f4da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef5e9 +0  AA030000
[3e4c22b1dc901c4] jit-backend-dump}
[3e4c22b1dc931b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef5ff +0  B0030000
[3e4c22b1dc93eab] jit-backend-dump}
[3e4c22b1dc96e80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef616 +0  B5030000
[3e4c22b1dc97b64] jit-backend-dump}
[3e4c22b1dc9ab1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef63e +0  A9030000
[3e4c22b1dc9b7ef] jit-backend-dump}
[3e4c22b1dc9ea4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d96c5 +0  975D0100
[3e4c22b1dc9f740] jit-backend-dump}
[3e4c22b1dca352e] jit-backend}
[3e4c22b1dca70d6] {jit-log-opt-bridge
# bridge out of Guard 0x3cf7160 with 78 ops
[p0, p1]
+262: guard_class(p1, 16500016, descr=<Guard0x46107a0>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+278: guard_nonnull(p3, descr=<Guard0x42c3340>) [p0, p1]
+294: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+297: guard_true(i5, descr=<Guard0x42c3388>) [p0, p1]
debug_merge_point(0, 0, 'lst5115')
+303: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+307: guard_nonnull_class(p6, 16470384, descr=<Guard0x4610800>) [p0, p1]
+327: guard_class(p0, 16437352, descr=<Guard0x42c33d0>) [p0, p1]
+340: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+351: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x42c3418>) [p0, p1]
+360: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+360: guard_not_invalidated(descr=<Guard0x42c3460>) [p0, p1]
+360: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+364: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x4610860>) [p0, p1]
+383: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (loop5 (cdr rads4) lst5115)')
+387: guard_class(p14, 16437896, descr=<Guard0x42c34a8>) [p0, p1]
+400: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+411: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x42c34f0>) [p0, p1]
+420: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+420: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+424: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+428: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (cons AppRand15 AppRand16)')
+432: guard_nonnull_class(p19, 16478448, descr=<Guard0x46108c0>) [p0, p1]
+451: guard_nonnull_class(p20, 16470384, descr=<Guard0x4610920>) [p0, p1]
+470: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+481: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x42c3538>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+490: guard_class(p21, 16437896, descr=<Guard0x42c3580>) [p0, p1]
+502: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+506: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x4610980>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+524: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+528: guard_nonnull_class(p29, 16470384, descr=<Guard0x46109e0>) [p0, p1]
+547: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+551: guard_nonnull_class(p31, ConstClass(W_Symbol), descr=<Guard0x4610a40>) [p0, p1]
+569: p33 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+573: guard_nonnull_class(p33, 16470384, descr=<Guard0x4610aa0>) [p0, p1]
+592: p35 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+596: guard_nonnull_class(p35, ConstClass(W_Symbol), descr=<Guard0x4610b00>) [p0, p1]
+614: p37 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+618: guard_nonnull_class(p37, 16470384, descr=<Guard0x4610b60>) [p0, p1]
+637: p39 = getfield_gc_r(p37, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+641: guard_nonnull_class(p39, ConstClass(W_Vector), descr=<Guard0x4610bc0>) [p0, p1]
+659: p41 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+663: guard_nonnull_class(p41, ConstClass(W_Vector), descr=<Guard0x4610c20>) [p0, p1]
+682: p43 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+693: p44 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+704: guard_nonnull_class(p44, 16470384, descr=<Guard0x4610c80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+722: p46 = new_with_vtable(descr=<SizeDescr 32>)
+769: p47 = new_with_vtable(descr=<SizeDescr 24>)
+780: setfield_gc(p47, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+784: setfield_gc(p47, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+788: p48 = new_with_vtable(descr=<SizeDescr 48>)
+800: p49 = new_with_vtable(descr=<SizeDescr 32>)
+811: setfield_gc(p49, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+819: p52 = new_array_clear(5, descr=<ArrayP 8>)
+852: setarrayitem_gc(p52, 0, ConstPtr(ptr54), descr=<ArrayP 8>)
+856: setarrayitem_gc(p52, 1, p31, descr=<ArrayP 8>)
+860: setarrayitem_gc(p52, 2, p35, descr=<ArrayP 8>)
+864: setarrayitem_gc(p52, 3, p39, descr=<ArrayP 8>)
+868: setarrayitem_gc(p52, 4, p41, descr=<ArrayP 8>)
+872: setfield_gc(p49, p52, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+883: setfield_gc(p49, ConstPtr(ptr59), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+887: setfield_gc(p46, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+898: setfield_gc(p46, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+902: setfield_gc(p48, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+906: setfield_gc(p48, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+910: setfield_gc(p48, p49, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+914: setfield_gc(p48, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+918: setfield_gc(p48, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+929: setfield_gc(p46, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+940: jump(p46, p48, descr=TargetToken(59469840))
+976: --end of the loop--
[3e4c22b1dcea747] jit-log-opt-bridge}
[3e4c22b1e02f991] {jit-backend
[3e4c22b1e090163] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efb
[3e4c22b1e0985fe] jit-backend-dump}
[3e4c22b1e0a3302] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efbf4 +0  28000000
[3e4c22b1e0a486e] jit-backend-dump}
[3e4c22b1e0a8af3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efe35 +0  28000000
[3e4c22b1e0a9a1f] jit-backend-dump}
[3e4c22b1e0ad04c] {jit-backend-addr
bridge out of Guard 0x3cf7460 has address 0x7f4a5c1efbf0 to 0x7f4a5c1efe30
       gc table: 0x7f4a5c1efb40
    jump target: 0x7f4a5c1efbf0
         resops: 0x7f4a5c1efbfe
       failures: 0x7f4a5c1efe30
            end: 0x7f4a5c1f004f
[3e4c22b1e0af3fd] jit-backend-addr}
[3e4c22b1e0b2d4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efc0e +0  61020000
[3e4c22b1e0b3ba8] jit-backend-dump}
[3e4c22b1e0b708a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efc1b +0  70020000
[3e4c22b1e0b7dcd] jit-backend-dump}
[3e4c22b1e0bb02a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efc2b +0  7C020000
[3e4c22b1e0bbd40] jit-backend-dump}
[3e4c22b1e0bef87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efc42 +0  81020000
[3e4c22b1e0bfcb8] jit-backend-dump}
[3e4c22b1e0c2ee1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efc56 +0  89020000
[3e4c22b1e0c3c0f] jit-backend-dump}
[3e4c22b1e0c6eaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efc6a +0  91020000
[3e4c22b1e0c7ba6] jit-backend-dump}
[3e4c22b1e0cb357] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efc8a +0  A9020000
[3e4c22b1e0cc029] jit-backend-dump}
[3e4c22b1e0cf255] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efc9e +0  B1020000
[3e4c22b1e0cff0f] jit-backend-dump}
[3e4c22b1e0d2ffa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efcb3 +0  B8020000
[3e4c22b1e0d3ca1] jit-backend-dump}
[3e4c22b1e0d6da1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efcc0 +0  C7020000
[3e4c22b1e0d7a4f] jit-backend-dump}
[3e4c22b1e0dab40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efcd7 +0  CC020000
[3e4c22b1e0db7de] jit-backend-dump}
[3e4c22b1e0dea10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efcfc +0  C3020000
[3e4c22b1e0df6b1] jit-backend-dump}
[3e4c22b1e0e27a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efd13 +0  C8020000
[3e4c22b1e0e3446] jit-backend-dump}
[3e4c22b1e0e652b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efd25 +0  D2020000
[3e4c22b1e0e71d5] jit-backend-dump}
[3e4c22b1e0ea292] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efd3d +0  D6020000
[3e4c22b1e0eaf40] jit-backend-dump}
[3e4c22b1e0ee046] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1efd53 +0  DC020000
[3e4c22b1e0eecea] jit-backend-dump}
[3e4c22b1e0f20b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9de2 +0  0A5E0100
[3e4c22b1e0f2db0] jit-backend-dump}
[3e4c22b1e0f6db8] jit-backend}
[3e4c22b1e0fab5a] {jit-log-opt-bridge
# bridge out of Guard 0x3cf7460 with 69 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x4610ce0>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull(p3, descr=<Guard0x42c35c8>) [p0, p1]
+230: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+233: guard_true(i5, descr=<Guard0x42c3610>) [p0, p1]
debug_merge_point(0, 0, 'lst5093')
+239: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+243: guard_nonnull_class(p6, 16616448, descr=<Guard0x4610d40>) [p0, p1]
+262: guard_class(p0, 16437896, descr=<Guard0x42c3658>) [p0, p1]
+282: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+293: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x42c36a0>) [p0, p1]
+302: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+302: guard_not_invalidated(descr=<Guard0x42c36e8>) [p0, p1]
+302: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+306: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+310: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)')
+314: guard_nonnull_class(p12, 16479200, descr=<Guard0x4610da0>) [p0, p1]
+334: guard_nonnull_class(p13, 16470384, descr=<Guard0x4610e00>) [p0, p1]
+354: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+366: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x42c3730>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+375: guard_class(p14, 16437896, descr=<Guard0x42c3778>) [p0, p1]
+388: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+392: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x4610e60>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+411: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+416: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+421: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+426: p25 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+431: p26 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+436: guard_class(p26, 16505296, descr=<Guard0x42c37c0>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+448: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+453: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x4610ec0>) [p0, p1]
+471: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x4610f20>) [p0, p1]
+489: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+500: i32 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+504: i33 = int_eq(i31, i32)
+507: guard_true(i33, descr=<Guard0x42c3808>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+513: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+517: guard_nonnull_class(p34, 16616448, descr=<Guard0x4610f80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+535: p36 = new_with_vtable(descr=<SizeDescr 32>)
+582: p37 = new_with_vtable(descr=<SizeDescr 56>)
+593: p38 = new_with_vtable(descr=<SizeDescr 64>)
+605: setfield_gc(p38, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+624: setfield_gc(p38, ConstPtr(ptr39), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+629: setfield_gc(p38, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+634: setfield_gc(p38, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+639: setfield_gc(p38, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+644: setfield_gc(p38, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+649: setfield_gc(p38, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+654: setfield_gc(p36, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+665: setfield_gc(p36, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+676: setfield_gc(p37, ConstPtr(ptr40), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+680: setfield_gc(p37, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+684: setfield_gc(p37, p38, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+688: setfield_gc(p37, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+692: setfield_gc(p37, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+696: setfield_gc(p37, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+700: setfield_gc(p36, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+711: jump(p36, p37, descr=TargetToken(61027120))
+752: --end of the loop--
[3e4c22b1e13ee65] jit-log-opt-bridge}
[3e4c22b1e801ba5] {jit-backend
[3e4c22b1e882b96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f
[3e4c22b1e889ad7] jit-backend-dump}
[3e4c22b1e89501c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f01a4 +0  28000000
[3e4c22b1e896511] jit-backend-dump}
[3e4c22b1e89a5fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0425 +0  28000000
[3e4c22b1e89b53e] jit-backend-dump}
[3e4c22b1e89e893] {jit-backend-addr
bridge out of Guard 0x3be1580 has address 0x7f4a5c1f01a0 to 0x7f4a5c1f0420
       gc table: 0x7f4a5c1f0130
    jump target: 0x7f4a5c1f01a0
         resops: 0x7f4a5c1f01ae
       failures: 0x7f4a5c1f0420
            end: 0x7f4a5c1f0597
[3e4c22b1e8a0baa] jit-backend-addr}
[3e4c22b1e8a4300] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f01cd +0  AE020000
[3e4c22b1e8a511f] jit-backend-dump}
[3e4c22b1e8a843d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f01ec +0  AB020000
[3e4c22b1e8a91a5] jit-backend-dump}
[3e4c22b1e8ac320] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0203 +0  B0020000
[3e4c22b1e8acfcd] jit-backend-dump}
[3e4c22b1e8b0019] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f021b +0  B4020000
[3e4c22b1e8b0cbd] jit-backend-dump}
[3e4c22b1e8b3d34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0239 +0  B2020000
[3e4c22b1e8b49f3] jit-backend-dump}
[3e4c22b1e8b7a30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0243 +0  C4020000
[3e4c22b1e8b86f0] jit-backend-dump}
[3e4c22b1e8bb726] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0250 +0  D3020000
[3e4c22b1e8bc3d3] jit-backend-dump}
[3e4c22b1e8bf416] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0260 +0  DF020000
[3e4c22b1e8c00c6] jit-backend-dump}
[3e4c22b1e8c312b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0276 +0  E5020000
[3e4c22b1e8c3dc9] jit-backend-dump}
[3e4c22b1e8c6e0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f029f +0  D8020000
[3e4c22b1e8c7abf] jit-backend-dump}
[3e4c22b1e8cad31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d57b2 +0  EAA90100
[3e4c22b1e8cb9f4] jit-backend-dump}
[3e4c22b1e8cf917] jit-backend}
[3e4c22b1e8d342d] {jit-log-opt-bridge
# bridge out of Guard 0x3be1580 with 67 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+134: guard_not_invalidated(descr=<Guard0x4610fe0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+134: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+152: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x42c3850>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+161: p19 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+172: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x4611040>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+192: p21 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+196: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x46110a0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+215: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+226: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+230: i25 = int_eq(i23, i24)
+233: guard_false(i25, descr=<Guard0x42c3898>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+239: p26 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+250: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x4611100>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+269: i29 = int_ge(i24, 0)
+273: guard_true(i29, descr=<Guard0x42c38e0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+279: i30 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+283: i31 = int_lt(i24, i30)
+286: guard_true(i31, descr=<Guard0x42c3928>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+292: p32 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+296: guard_class(p32, 16622984, descr=<Guard0x42c3970>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+308: p34 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+312: p35 = getarrayitem_gc_r(p34, i24, descr=<ArrayP 8>)
+317: guard_class(p35, 16470384, descr=<Guard0x42c39b8>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+330: p37 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+341: p38 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+352: guard_nonnull_class(p38, 16616448, descr=<Guard0x4611160>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+371: p40 = new_with_vtable(descr=<SizeDescr 32>)
+429: p41 = new_with_vtable(descr=<SizeDescr 56>)
+440: p42 = new_with_vtable(descr=<SizeDescr 56>)
+458: setfield_gc(p42, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+476: setfield_gc(p42, p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+480: setfield_gc(p42, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+498: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+502: p44 = new_with_vtable(descr=<SizeDescr 64>)
+520: setfield_gc(p44, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+531: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+535: setfield_gc(p44, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+539: setfield_gc(p44, p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+543: setfield_gc(p44, p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+547: setfield_gc(p44, p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+551: setfield_gc(p44, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+555: setfield_gc(p42, p44, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+559: setfield_gc(p42, p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+563: p46 = new_with_vtable(descr=<SizeDescr 64>)
+574: setfield_gc(p46, p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+585: setfield_gc(p46, ConstPtr(ptr47), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+589: setfield_gc(p46, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+593: setfield_gc(p46, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+604: setfield_gc(p46, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+615: setfield_gc(p46, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+619: setfield_gc(p46, p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+630: setfield_gc(p40, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+641: setfield_gc(p40, p38, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+645: setfield_gc(p40, p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+656: setfield_gc(p41, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+674: setfield_gc(p41, p37, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+685: setfield_gc(p41, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+689: setfield_gc(p41, ConstPtr(ptr48), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+700: setfield_gc(p41, p46, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+704: setfield_gc(p41, p35, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+715: jump(p40, p41, descr=TargetToken(61027120))
+752: --end of the loop--
[3e4c22b1e912e27] jit-log-opt-bridge}
[3e4c22b1ed4e472] {jit-backend
[3e4c22b1edca443] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f06b
[3e4c22b1edd205f] jit-backend-dump}
[3e4c22b1eddd3be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0734 +0  28000000
[3e4c22b1edde8de] jit-backend-dump}
[3e4c22b1ede2a2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0965 +0  28000000
[3e4c22b1ede3920] jit-backend-dump}
[3e4c22b1ede6bd3] {jit-backend-addr
bridge out of Guard 0x3cecbf0 has address 0x7f4a5c1f0730 to 0x7f4a5c1f0960
       gc table: 0x7f4a5c1f06b0
    jump target: 0x7f4a5c1f0730
         resops: 0x7f4a5c1f073e
       failures: 0x7f4a5c1f0960
            end: 0x7f4a5c1f0b35
[3e4c22b1ede8ffe] jit-backend-addr}
[3e4c22b1edec43b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f074b +0  7A020000
[3e4c22b1eded2a1] jit-backend-dump}
[3e4c22b1edf052c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f076a +0  77020000
[3e4c22b1edf1210] jit-backend-dump}
[3e4c22b1edf435a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0776 +0  87020000
[3e4c22b1edf5066] jit-backend-dump}
[3e4c22b1edf813e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f078a +0  8F020000
[3e4c22b1edf8e4b] jit-backend-dump}
[3e4c22b1edfbf2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f07a5 +0  90020000
[3e4c22b1edfcc23] jit-backend-dump}
[3e4c22b1edffcbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f07b2 +0  9F020000
[3e4c22b1ee009cb] jit-backend-dump}
[3e4c22b1ee03a7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f07cc +0  A1020000
[3e4c22b1ee04788] jit-backend-dump}
[3e4c22b1ee07801] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f07df +0  AA020000
[3e4c22b1ee08507] jit-backend-dump}
[3e4c22b1ee0b5a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f07f2 +0  B3020000
[3e4c22b1ee0c296] jit-backend-dump}
[3e4c22b1ee0f319] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f08a9 +0  18020000
[3e4c22b1ee10019] jit-backend-dump}
[3e4c22b1ee130c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f08bf +0  1E020000
[3e4c22b1ee13dbe] jit-backend-dump}
[3e4c22b1ee16e81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f08d7 +0  22020000
[3e4c22b1ee17b62] jit-backend-dump}
[3e4c22b1ee1ac0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f08ed +0  28020000
[3e4c22b1ee1b8e5] jit-backend-dump}
[3e4c22b1ee1ec43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d72ed +0  3F940100
[3e4c22b1ee1f971] jit-backend-dump}
[3e4c22b1ee23822] jit-backend}
[3e4c22b1ee273c5] {jit-log-opt-bridge
# bridge out of Guard 0x3cecbf0 with 53 ops
[i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+150: guard_not_invalidated(descr=<Guard0x46111c0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+150: i13 = int_lt(i10, i4)
+153: guard_false(i13, descr=<Guard0x42c3a90>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
+159: p14 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+170: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x4611220>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+190: i16 = int_add_ovf(i5, i10)
+196: guard_no_overflow(descr=<Guard0x42c3ad8>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+202: i17 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+213: i18 = int_add_ovf(i17, i16)
+216: guard_no_overflow(descr=<Guard0x42c3b20>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+222: i19 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+240: i20 = int_sub_ovf(i19, i18)
+243: guard_no_overflow(descr=<Guard0x42c3b68>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+249: i22 = int_sub_ovf(i10, 1)
+256: guard_no_overflow(descr=<Guard0x42c3bb0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+262: guard_nonnull_class(p9, 16505296, descr=<Guard0x4611280>) [p11, i20, i17, i22, i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, None, None]
+288: i26 = int_le(i22, 4611686018427387903)
+301: guard_true(i26, descr=<Guard0x46112e0>) [p11, i20, i17, i22, i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, None, None]
+307: i28 = int_ge(i10, -4611686018427387904)
+320: guard_true(i28, descr=<Guard0x4611340>) [p11, i20, i17, i22, i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, None, None]
+326: p29 = new_with_vtable(descr=<SizeDescr 24>)
+381: p30 = new_with_vtable(descr=<SizeDescr 32>)
+392: setfield_gc(p30, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+400: p33 = new_array(4, descr=<ArrayS 8>)
+427: setarrayitem_gc(p33, 0, i2, descr=<ArrayS 8>)
+431: setarrayitem_gc(p33, 1, i5, descr=<ArrayS 8>)
+435: setarrayitem_gc(p33, 2, i1, descr=<ArrayS 8>)
+439: setarrayitem_gc(p33, 3, i0, descr=<ArrayS 8>)
+443: setfield_gc(p30, p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+454: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+474: p39 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+485: setfield_gc(p29, p30, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+489: setfield_gc(p29, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+500: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x46113a0>) [p11, p29, i20, i17, i22, None, None, None, None, i4, i5, p6, p7, p8, p9, i10, None, None]
+509: p41 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+513: guard_nonnull_class(p41, ConstClass(W_Fixnum), descr=<Guard0x4611400>) [p11, p29, i20, i17, i22, None, None, None, None, i4, i5, p6, p7, p8, p9, i10, None, None]
+531: p43 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+535: guard_nonnull_class(p43, ConstClass(W_Fixnum), descr=<Guard0x4611460>) [p11, p29, i20, i17, i22, None, None, None, None, i4, i5, p6, p7, p8, p9, i10, None, None]
+555: p45 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+559: guard_nonnull_class(p45, 16505296, descr=<Guard0x46114c0>) [p11, p29, i20, i17, i22, None, None, None, None, i4, i5, p6, p7, p8, p9, i10, None, None]
+577: jump(p9, i5, p8, i4, p7, p6, i22, i17, i10, i20, p29, p11, p14, p41, p43, p45, descr=TargetToken(61027360))
+688: --end of the loop--
[3e4c22b1ee61f24] jit-log-opt-bridge}
[3e4c22b1ef7cc62] {jit-backend
[3e4c22b1efbf527] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0c
[3e4c22b1efc5f7e] jit-backend-dump}
[3e4c22b1efd0554] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0cb4 +0  28000000
[3e4c22b1efd199a] jit-backend-dump}
[3e4c22b1efd56e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0e45 +0  28000000
[3e4c22b1efd6509] jit-backend-dump}
[3e4c22b1efd9873] {jit-backend-addr
bridge out of Guard 0x40d8da0 has address 0x7f4a5c1f0cb0 to 0x7f4a5c1f0e40
       gc table: 0x7f4a5c1f0c30
    jump target: 0x7f4a5c1f0cb0
         resops: 0x7f4a5c1f0cbe
       failures: 0x7f4a5c1f0e40
            end: 0x7f4a5c1f0fee
[3e4c22b1efdbcc0] jit-backend-addr}
[3e4c22b1efdf207] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0cce +0  94010000
[3e4c22b1efdffd1] jit-backend-dump}
[3e4c22b1efe330a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0ce5 +0  99010000
[3e4c22b1efe4004] jit-backend-dump}
[3e4c22b1efe721a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0cf5 +0  A5010000
[3e4c22b1efeb443] jit-backend-dump}
[3e4c22b1efeedfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0d01 +0  B5010000
[3e4c22b1efefb2a] jit-backend-dump}
[3e4c22b1eff2d4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0d18 +0  BA010000
[3e4c22b1eff3a2e] jit-backend-dump}
[3e4c22b1eff6b63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0d2a +0  C4010000
[3e4c22b1eff7860] jit-backend-dump}
[3e4c22b1effaa42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0d3e +0  CC010000
[3e4c22b1effb736] jit-backend-dump}
[3e4c22b1effe839] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0d5e +0  C8010000
[3e4c22b1efff539] jit-backend-dump}
[3e4c22b1f0027e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0d74 +0  EA010000
[3e4c22b1f0034c7] jit-backend-dump}
[3e4c22b1f006679] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0d87 +0  F3010000
[3e4c22b1f0073c8] jit-backend-dump}
[3e4c22b1f00a58f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0d98 +0  FE010000
[3e4c22b1f00b2e2] jit-backend-dump}
[3e4c22b1f00e3a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0dae +0  04020000
[3e4c22b1f00f09c] jit-backend-dump}
[3e4c22b1f01215f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0dcb +0  03020000
[3e4c22b1f012e8d] jit-backend-dump}
[3e4c22b1f0161c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1eb90d +0  9F530000
[3e4c22b1f016ede] jit-backend-dump}
[3e4c22b1f01aec5] jit-backend}
[3e4c22b1f01eb0d] {jit-log-opt-bridge
# bridge out of Guard 0x40d8da0 with 40 ops
[p0, p1]
+150: guard_class(p1, 16500016, descr=<Guard0x4611520>) [p0, p1]
+162: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+166: guard_nonnull_class(p3, 16470384, descr=<Guard0x4611580>) [p0, p1]
+192: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+195: guard_false(i6, descr=<Guard0x42c3bf8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+201: guard_class(p0, 16437896, descr=<Guard0x42c3c40>) [p0, p1]
+213: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+217: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x46115e0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+236: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+240: guard_class(p10, 16479200, descr=<Guard0x42c3c88>) [p0, p1]
+254: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+265: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x42c3cd0>) [p0, p1]
+274: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+278: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+282: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+286: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+290: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+294: guard_class(p18, 16505296, descr=<Guard0x42c3d18>) [p0, p1]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+306: guard_not_invalidated(descr=<Guard0x42c3d60>) [p0, p1]
+306: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+310: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x4611640>) [p0, p1]
+328: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x46116a0>) [p0, p1]
+347: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+351: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+355: i25 = int_eq(i23, i24)
+358: guard_true(i25, descr=<Guard0x42c3da8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+364: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+368: guard_nonnull_class(p26, 16470384, descr=<Guard0x4611700>) [p0, p1]
+386: p28 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+397: guard_nonnull_class(p28, 16616448, descr=<Guard0x4611760>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+415: jump(p10, p26, p28, p8, p18, p0, p14, p15, p16, p3, p17, p17, p16, p15, p14, p18, p20, i23, descr=TargetToken(61027520))
+528: --end of the loop--
[3e4c22b1f0441a6] jit-log-opt-bridge}
[3e4c22b1f1aeebc] {jit-backend
[3e4c22b1f20c7b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f
[3e4c22b1f2137ed] jit-backend-dump}
[3e4c22b1f21dc5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1184 +0  28000000
[3e4c22b1f21f16d] jit-backend-dump}
[3e4c22b1f222eff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f13a5 +0  28000000
[3e4c22b1f223db8] jit-backend-dump}
[3e4c22b1f2270ee] {jit-backend-addr
bridge out of Guard 0x3ced928 has address 0x7f4a5c1f1180 to 0x7f4a5c1f13a0
       gc table: 0x7f4a5c1f1100
    jump target: 0x7f4a5c1f1180
         resops: 0x7f4a5c1f118e
       failures: 0x7f4a5c1f13a0
            end: 0x7f4a5c1f156b
[3e4c22b1f2293bf] jit-backend-addr}
[3e4c22b1f22c82a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f119e +0  41020000
[3e4c22b1f22d600] jit-backend-dump}
[3e4c22b1f2307c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f11b2 +0  49020000
[3e4c22b1f23146c] jit-backend-dump}
[3e4c22b1f2347f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f11d1 +0  62020000
[3e4c22b1f2354bd] jit-backend-dump}
[3e4c22b1f2385eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f11e4 +0  6B020000
[3e4c22b1f23927d] jit-backend-dump}
[3e4c22b1f23c31c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f11f8 +0  73020000
[3e4c22b1f23cf98] jit-backend-dump}
[3e4c22b1f240064] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1206 +0  81020000
[3e4c22b1f240ced] jit-backend-dump}
[3e4c22b1f243da4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f121d +0  86020000
[3e4c22b1f244a82] jit-backend-dump}
[3e4c22b1f247b1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f123d +0  82020000
[3e4c22b1f2487af] jit-backend-dump}
[3e4c22b1f24b84b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1253 +0  88020000
[3e4c22b1f24c4c4] jit-backend-dump}
[3e4c22b1f24f550] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1265 +0  92020000
[3e4c22b1f2501d0] jit-backend-dump}
[3e4c22b1f25325f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1284 +0  8F020000
[3e4c22b1f253f28] jit-backend-dump}
[3e4c22b1f256fba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f12aa +0  85020000
[3e4c22b1f257c4f] jit-backend-dump}
[3e4c22b1f25acf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f12be +0  8D020000
[3e4c22b1f25b97f] jit-backend-dump}
[3e4c22b1f25eca3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8e72 +0  0A830100
[3e4c22b1f25f962] jit-backend-dump}
[3e4c22b1f2670dc] jit-backend}
[3e4c22b1f26b023] {jit-log-opt-bridge
# bridge out of Guard 0x3ced928 with 49 ops
[p0, p1, p2, p3, p4]
+150: guard_class(p0, 16437896, descr=<Guard0x46117c0>) [p0, p1, p2, p3, p4]
+162: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+173: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x42c3df0>) [p0, p1, p2, p3, p4]
+182: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+182: guard_not_invalidated(descr=<Guard0x42c3e38>) [p0, p1, p2, p3, p4]
+182: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+186: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+190: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (cons AppRand15 AppRand16)')
+194: guard_nonnull_class(p9, 16479200, descr=<Guard0x4611820>) [p0, p1, p2, p3, p4]
+213: guard_nonnull_class(p10, 16470384, descr=<Guard0x4611880>) [p0, p1, p2, p3, p4]
+232: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+243: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x42c3e80>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+252: guard_class(p11, 16437896, descr=<Guard0x42c3ec8>) [p0, p1, p2, p3, p4]
+266: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+270: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x46118e0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+289: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+293: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+297: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+301: p22 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+305: p23 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+309: guard_class(p23, 16505296, descr=<Guard0x42c3f10>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+321: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+325: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x4611940>) [p0, p1, p2, p3, p4]
+343: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x46119a0>) [p0, p1, p2, p3, p4]
+361: i28 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+372: i29 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+383: i30 = int_eq(i28, i29)
+386: guard_true(i30, descr=<Guard0x42c3f58>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+392: p31 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+410: guard_nonnull_class(p31, 16470384, descr=<Guard0x4611a00>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+430: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x4611a60>) [p31, p9, p22, p21, p20, p19, p10, p11, p23, p17, p1, p2, p3, None]
+450: p35 = new_with_vtable(descr=<SizeDescr 24>)
+498: p36 = new_with_vtable(descr=<SizeDescr 24>)
+509: setfield_gc(p36, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+513: setfield_gc(p36, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+524: setfield_gc(p35, p36, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+528: setfield_gc(p35, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+539: jump(p9, p31, p35, p17, p23, p11, p19, p20, p21, p10, p22, p10, p22, p21, p20, p19, p23, p25, i28, descr=TargetToken(61027200))
+672: --end of the loop--
[3e4c22b1f29c036] jit-log-opt-bridge}
[3e4c22b1f7bae16] {jit-backend
[3e4c22b1f83ffd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f
[3e4c22b1f849e3b] jit-backend-dump}
[3e4c22b1f85557c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f18b4 +0  25000000
[3e4c22b1f856b60] jit-backend-dump}
[3e4c22b1f85adb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1bd5 +0  25000000
[3e4c22b1f85bd8e] jit-backend-dump}
[3e4c22b1f85f200] {jit-backend-addr
bridge out of Guard 0x3d72458 has address 0x7f4a5c1f18b0 to 0x7f4a5c1f1bd0
       gc table: 0x7f4a5c1f1780
    jump target: 0x7f4a5c1f18b0
         resops: 0x7f4a5c1f18be
       failures: 0x7f4a5c1f1bd0
            end: 0x7f4a5c1f1f5b
[3e4c22b1f8615c3] jit-backend-addr}
[3e4c22b1f864c9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f18ce +0  41030000
[3e4c22b1f865ab4] jit-backend-dump}
[3e4c22b1f868e34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f18e5 +0  46030000
[3e4c22b1f869b7a] jit-backend-dump}
[3e4c22b1f86cf0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f18f1 +0  72030000
[3e4c22b1f86dc8f] jit-backend-dump}
[3e4c22b1f870eb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1906 +0  79030000
[3e4c22b1f871c05] jit-backend-dump}
[3e4c22b1f874d42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f191a +0  81030000
[3e4c22b1f875a7c] jit-backend-dump}
[3e4c22b1f878c71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1932 +0  85030000
[3e4c22b1f879996] jit-backend-dump}
[3e4c22b1f87cad0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1940 +0  93030000
[3e4c22b1f87d7f5] jit-backend-dump}
[3e4c22b1f8808d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f195c +0  93030000
[3e4c22b1f8815e0] jit-backend-dump}
[3e4c22b1f8846b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1973 +0  98030000
[3e4c22b1f8853d4] jit-backend-dump}
[3e4c22b1f8884ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1987 +0  A0030000
[3e4c22b1f889208] jit-backend-dump}
[3e4c22b1f88c327] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1991 +0  B2030000
[3e4c22b1f88d027] jit-backend-dump}
[3e4c22b1f8900bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f19a5 +0  BA030000
[3e4c22b1f890daa] jit-backend-dump}
[3e4c22b1f893e76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f19bb +0  C0030000
[3e4c22b1f894ba4] jit-backend-dump}
[3e4c22b1f897c95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f19d3 +0  C4030000
[3e4c22b1f8989a4] jit-backend-dump}
[3e4c22b1f89ba83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f19e8 +0  CB030000
[3e4c22b1f89c79b] jit-backend-dump}
[3e4c22b1f89f8a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f19f5 +0  DA030000
[3e4c22b1f8a059b] jit-backend-dump}
[3e4c22b1f8a3674] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1a0c +0  DF030000
[3e4c22b1f8a439c] jit-backend-dump}
[3e4c22b1f8a7474] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1a24 +0  E3030000
[3e4c22b1f8a816e] jit-backend-dump}
[3e4c22b1f8ab23d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1a32 +0  F1030000
[3e4c22b1f8abf43] jit-backend-dump}
[3e4c22b1f8af01f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1a43 +0  FC030000
[3e4c22b1f8afd16] jit-backend-dump}
[3e4c22b1f8b2dfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1a55 +0  06040000
[3e4c22b1f8b3b07] jit-backend-dump}
[3e4c22b1f8b6bd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1a63 +0  14040000
[3e4c22b1f8b78c7] jit-backend-dump}
[3e4c22b1f8ba9e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1a7d +0  16040000
[3e4c22b1f8bb6ef] jit-backend-dump}
[3e4c22b1f8be7c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1a90 +0  1F040000
[3e4c22b1f8bf4bb] jit-backend-dump}
[3e4c22b1f8c2584] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1a9a +0  31040000
[3e4c22b1f8c328a] jit-backend-dump}
[3e4c22b1f8c6384] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1aa7 +0  40040000
[3e4c22b1f8c706f] jit-backend-dump}
[3e4c22b1f8ca135] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1ab7 +0  4C040000
[3e4c22b1f8cae2f] jit-backend-dump}
[3e4c22b1f8cdf32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1acc +0  53040000
[3e4c22b1f8cec2c] jit-backend-dump}
[3e4c22b1f8d1cbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1ae2 +0  59040000
[3e4c22b1f8d29c4] jit-backend-dump}
[3e4c22b1f8d5da0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1da5fc +0  B0720100
[3e4c22b1f8d6afb] jit-backend-dump}
[3e4c22b1f8daae8] jit-backend}
[3e4c22b1f8de85f] {jit-log-opt-bridge
# bridge out of Guard 0x3d72458 with 116 ops
[p0, p1]
+326: guard_class(p1, 16435920, descr=<Guard0x4611b80>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+342: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x4611e20>) [p0, p1]
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+361: guard_not_invalidated(descr=<Guard0x476e4e8>) [p0, p1]
+361: guard_class(p0, 16503536, descr=<Guard0x476e4a0>) [p0, p1]
+373: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+377: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+381: guard_class(p7, 16478448, descr=<Guard0x476e458>) [p0, p1]
+394: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+405: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x476e410>) [p0, p1]
+414: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+418: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x4611dc0>) [p0, p1]
+438: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+443: i14 = int_lt(i6, i13)
+446: guard_true(i14, descr=<Guard0x476e3c8>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31))')
debug_merge_point(0, 0, '(- nc15181 1)')
+452: i16 = int_sub(i13, 1)
debug_merge_point(0, 0, '(loop15177 lst5187 AppRand31)')
+456: p17 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+460: guard_nonnull_class(p17, 16482960, descr=<Guard0x4611d60>) [p0, p1]
+480: p19 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+484: guard_nonnull_class(p19, 16470384, descr=<Guard0x4611d00>) [p0, p1]
+503: p21 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+514: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x476e380>) [p0, p1]
+523: p23 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
+523: i25 = int_lt(i16, 0)
+527: guard_true(i25, descr=<Guard0x476e338>) [p0, p1]
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, 'lst5179')
+533: p26 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+544: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x476e2f0>) [p0, p1]
+553: p28 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+557: p29 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop1 AppRand10 '())')
+561: guard_class(p28, 16503536, descr=<Guard0x476e2a8>) [p0, p1]
+575: p31 = getfield_gc_r(p28, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+579: guard_nonnull_class(p31, 16477696, descr=<Guard0x4611ca0>) [p0, p1]
+599: p33 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+611: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x476e260>) [p0, p1]
+620: p35 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 AppRand10 '())')
debug_merge_point(0, 0, '(let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))')
+620: guard_class(p29, 16435920, descr=<Guard0x476e218>) [p0, p1]
+633: p37 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+637: guard_nonnull_class(p37, ConstClass(ForwardLink), descr=<Guard0x4611c40>) [p0, p1]
debug_merge_point(0, 0, '(car ps)')
+656: p39 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+660: guard_nonnull_class(p39, ConstClass(W_Vector), descr=<Guard0x4611be0>) [p0, p1]
debug_merge_point(0, 0, '(let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8)))')
debug_merge_point(0, 0, '(vector-ref p 0)')
+680: i41 = getfield_gc_i(p39, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+684: i43 = int_lt(0, i41)
+688: guard_true(i43, descr=<Guard0x476e1d0>) [p0, p1]
+694: p44 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+698: guard_class(p44, 16623792, descr=<Guard0x476e188>) [p0, p1]
+711: p46 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+715: i48 = getarrayitem_gc_i(p46, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 1)')
+719: i50 = int_lt(1, i41)
+723: guard_true(i50, descr=<Guard0x476e530>) [p0, p1]
+729: i52 = getarrayitem_gc_i(p46, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 2)')
+733: i54 = int_lt(2, i41)
+737: guard_true(i54, descr=<Guard0x476e578>) [p0, p1]
+743: i56 = getarrayitem_gc_i(p46, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))')
debug_merge_point(0, 0, '(lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))')
+747: p57 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+752: p58 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+757: guard_class(p58, 16505296, descr=<Guard0x476e5c0>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref radicals nc1)')
+769: guard_nonnull_class(p57, ConstClass(W_Vector), descr=<Guard0x4778140>) [p0, p1]
+788: i62 = int_ge(i48, 0)
+792: guard_true(i62, descr=<Guard0x476e608>) [p0, p1]
+798: i63 = getfield_gc_i(p57, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+802: i64 = int_lt(i48, i63)
+805: guard_true(i64, descr=<Guard0x476e650>) [p0, p1]
+811: p65 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+815: guard_class(p65, 16622984, descr=<Guard0x476e698>) [p0, p1]
+827: p67 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+831: p68 = getarrayitem_gc_r(p67, i48, descr=<ArrayP 8>)
+836: guard_class(p68, 16470384, descr=<Guard0x476e6e0>) [p0, p1]
debug_merge_point(0, 0, '(loop1 (cdr ps) lst)')
+848: p70 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+852: guard_nonnull_class(p70, 16616448, descr=<Guard0x47781a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)')
+870: p72 = new_with_vtable(descr=<SizeDescr 32>)
+914: p73 = new_with_vtable(descr=<SizeDescr 56>)
+925: p74 = new_with_vtable(descr=<SizeDescr 56>)
+936: setfield_gc(p74, p58, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+954: setfield_gc(p74, ConstPtr(ptr75), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+958: setfield_gc(p74, p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+962: p76 = new_with_vtable(descr=<SizeDescr 16>)
+973: setfield_gc(p76, i52, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+977: setfield_gc(p74, p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+981: p77 = new_with_vtable(descr=<SizeDescr 16>)
+992: setfield_gc(p77, i48, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+996: setfield_gc(p74, p77, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1000: p78 = new_with_vtable(descr=<SizeDescr 16>)
+1012: setfield_gc(p78, i56, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1016: setfield_gc(p74, p78, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1020: setfield_gc(p73, p37, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1024: setfield_gc(p72, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1042: setfield_gc(p73, ConstPtr(ptr79), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1046: setfield_gc(p73, p58, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1050: setfield_gc(p73, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1054: setfield_gc(p72, p70, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1065: setfield_gc(p72, ConstPtr(ptr80), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1069: setfield_gc(p73, p74, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1073: setfield_gc(p73, p68, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1077: jump(p72, p73, descr=TargetToken(61029440))
+1104: --end of the loop--
[3e4c22b1f9314ce] jit-log-opt-bridge}
[3e4c22b1fc17860] {jit-backend
[3e4c22b1fcaa0b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f
[3e4c22b1fcb3a8d] jit-backend-dump}
[3e4c22b1fcbee14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2254 +0  25000000
[3e4c22b1fcc04bb] jit-backend-dump}
[3e4c22b1fcc482b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2575 +0  25000000
[3e4c22b1fcc5837] jit-backend-dump}
[3e4c22b1fcc8f62] {jit-backend-addr
bridge out of Guard 0x3f67c40 has address 0x7f4a5c1f2250 to 0x7f4a5c1f2570
       gc table: 0x7f4a5c1f2140
    jump target: 0x7f4a5c1f2250
         resops: 0x7f4a5c1f225e
       failures: 0x7f4a5c1f2570
            end: 0x7f4a5c1f28a7
[3e4c22b1fccb56d] jit-backend-addr}
[3e4c22b1fccebdd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f226e +0  41030000
[3e4c22b1fccfa4f] jit-backend-dump}
[3e4c22b1fcd2dfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2285 +0  46030000
[3e4c22b1fcd3b37] jit-backend-dump}
[3e4c22b1fcd6f4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f229c +0  4B030000
[3e4c22b1fcd7cb1] jit-backend-dump}
[3e4c22b1fcdb0dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f22b1 +0  52030000
[3e4c22b1fcdbdfb] jit-backend-dump}
[3e4c22b1fcdf210] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f22c5 +0  5A030000
[3e4c22b1fcdff13] jit-backend-dump}
[3e4c22b1fce332f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f22e4 +0  73030000
[3e4c22b1fce4041] jit-backend-dump}
[3e4c22b1fce72f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f22f8 +0  7B030000
[3e4c22b1fce7fd2] jit-backend-dump}
[3e4c22b1fceb31a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f230c +0  83030000
[3e4c22b1fcebff9] jit-backend-dump}
[3e4c22b1fcef231] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2319 +0  92030000
[3e4c22b1fcefef7] jit-backend-dump}
[3e4c22b1fcf3163] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f232f +0  98030000
[3e4c22b1fcf3e48] jit-backend-dump}
[3e4c22b1fcf7015] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f234b +0  98030000
[3e4c22b1fcf7cf0] jit-backend-dump}
[3e4c22b1fcfae77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2361 +0  9E030000
[3e4c22b1fcfbb58] jit-backend-dump}
[3e4c22b1fcfecf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2373 +0  A8030000
[3e4c22b1fcff9e8] jit-backend-dump}
[3e4c22b1fd02ba0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2384 +0  B3030000
[3e4c22b1fd03875] jit-backend-dump}
[3e4c22b1fd069cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f239c +0  B7030000
[3e4c22b1fd076f9] jit-backend-dump}
[3e4c22b1fd0a858] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f23ac +0  C3030000
[3e4c22b1fd0b543] jit-backend-dump}
[3e4c22b1fd0e69f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f23be +0  CD030000
[3e4c22b1fd0f36e] jit-backend-dump}
[3e4c22b1fd12560] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f23cb +0  DC030000
[3e4c22b1fd13232] jit-backend-dump}
[3e4c22b1fd1637e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f23de +0  E5030000
[3e4c22b1fd17044] jit-backend-dump}
[3e4c22b1fd1a1a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f23e8 +0  F7030000
[3e4c22b1fd1ae6f] jit-backend-dump}
[3e4c22b1fd1dfb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f23f5 +0  06040000
[3e4c22b1fd1ec88] jit-backend-dump}
[3e4c22b1fd21de7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2405 +0  12040000
[3e4c22b1fd22af6] jit-backend-dump}
[3e4c22b1fd25c1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f241b +0  18040000
[3e4c22b1fd268e7] jit-backend-dump}
[3e4c22b1fd29a22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2432 +0  1D040000
[3e4c22b1fd2a6fd] jit-backend-dump}
[3e4c22b1fd2d82e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2448 +0  23040000
[3e4c22b1fd2e4fd] jit-backend-dump}
[3e4c22b1fd3164a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f245e +0  29040000
[3e4c22b1fd32325] jit-backend-dump}
[3e4c22b1fd356f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a00 +0  4C880000
[3e4c22b1fd363f1] jit-backend-dump}
[3e4c22b1fd3a4c0] jit-backend}
[3e4c22b1fd3e240] {jit-log-opt-bridge
# bridge out of Guard 0x3f67c40 with 115 ops
[p0, p1]
+294: guard_class(p1, 16500016, descr=<Guard0x4778200>) [p0, p1]
+306: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+310: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x4778260>) [p0, p1]
+329: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+333: guard_nonnull_class(p5, 16470384, descr=<Guard0x47782c0>) [p0, p1]
+352: guard_class(p0, 16437896, descr=<Guard0x476e770>) [p0, p1]
+373: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+384: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x476e7b8>) [p0, p1]
+393: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+393: guard_not_invalidated(descr=<Guard0x476e800>) [p0, p1]
+393: p11 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+397: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+401: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+405: guard_nonnull_class(p11, 16478824, descr=<Guard0x4778320>) [p0, p1]
+424: guard_nonnull_class(p12, 16470384, descr=<Guard0x4778380>) [p0, p1]
+444: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+455: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x476e848>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+464: guard_class(p13, 16435920, descr=<Guard0x476e890>) [p0, p1]
+477: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+481: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x47783e0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+499: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+503: p22 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+507: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+511: p24 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+515: guard_class(p24, 16505296, descr=<Guard0x476e8d8>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+527: p26 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+531: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x4778440>) [p0, p1]
+549: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x47784a0>) [p0, p1]
+567: i29 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+571: i30 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+575: i31 = int_eq(i29, i30)
+578: guard_true(i31, descr=<Guard0x476e920>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+584: p32 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+589: guard_nonnull_class(p32, 16616448, descr=<Guard0x4778500>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+615: i35 = instance_ptr_eq(p32, ConstPtr(ptr34))
+618: guard_true(i35, descr=<Guard0x476e968>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+624: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x4778560>) [p0, p1]
+642: i37 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+646: i38 = int_eq(i30, i37)
+649: guard_false(i38, descr=<Guard0x476e9b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+655: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x47785c0>) [p0, p1]
+674: i41 = int_ge(i37, 0)
+678: guard_true(i41, descr=<Guard0x476e9f8>) [p0, p1]
+684: i42 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+688: i43 = int_lt(i37, i42)
+691: guard_true(i43, descr=<Guard0x476ea40>) [p0, p1]
+697: p44 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+701: guard_class(p44, 16622984, descr=<Guard0x476ea88>) [p0, p1]
+713: p46 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+717: p47 = getarrayitem_gc_r(p46, i37, descr=<ArrayP 8>)
+722: guard_class(p47, 16470384, descr=<Guard0x476ead0>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+735: p49 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+740: guard_nonnull_class(p49, ConstClass(W_Symbol), descr=<Guard0x4778620>) [p0, p1]
+758: p51 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+762: guard_nonnull_class(p51, ConstClass(W_Vector), descr=<Guard0x4778680>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+780: p53 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+784: guard_nonnull_class(p53, 16470384, descr=<Guard0x47786e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+802: p55 = new_with_vtable(descr=<SizeDescr 32>)
+849: p56 = new_with_vtable(descr=<SizeDescr 40>)
+860: setfield_gc(p56, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+871: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+875: setfield_gc(p56, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+879: setfield_gc(p56, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+883: p58 = new_with_vtable(descr=<SizeDescr 24>)
+895: setfield_gc(p58, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+900: setfield_gc(p58, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+905: p59 = new_with_vtable(descr=<SizeDescr 48>)
+917: p60 = new_with_vtable(descr=<SizeDescr 32>)
+928: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+936: p63 = new_array_clear(4, descr=<ArrayP 8>)
+962: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+966: setarrayitem_gc(p63, 1, p49, descr=<ArrayP 8>)
+970: setarrayitem_gc(p63, 2, p49, descr=<ArrayP 8>)
+974: setarrayitem_gc(p63, 3, p51, descr=<ArrayP 8>)
+978: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+989: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+993: setfield_gc(p55, p53, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+997: setfield_gc(p55, p58, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1008: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1012: setfield_gc(p59, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1016: setfield_gc(p59, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1020: setfield_gc(p59, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1024: setfield_gc(p55, p56, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1028: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1032: jump(p55, p59, descr=TargetToken(59469520))
+1072: --end of the loop--
[3e4c22b1fd921b5] jit-log-opt-bridge}
[3e4c22b1ffc369e] {jit-backend
[3e4c22b200152f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f29c
[3e4c22b2001c5a3] jit-backend-dump}
[3e4c22b200272d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2a54 +0  28000000
[3e4c22b20028835] jit-backend-dump}
[3e4c22b2002c862] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2c45 +0  28000000
[3e4c22b2002d6a0] jit-backend-dump}
[3e4c22b20030c22] {jit-backend-addr
bridge out of Guard 0x4611760 has address 0x7f4a5c1f2a50 to 0x7f4a5c1f2c40
       gc table: 0x7f4a5c1f29c0
    jump target: 0x7f4a5c1f2a50
         resops: 0x7f4a5c1f2a5e
       failures: 0x7f4a5c1f2c40
            end: 0x7f4a5c1f2e0b
[3e4c22b200330e0] jit-backend-addr}
[3e4c22b200365e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2a6e +0  11020000
[3e4c22b20037403] jit-backend-dump}
[3e4c22b2003a7c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2a85 +0  16020000
[3e4c22b2003b53d] jit-backend-dump}
[3e4c22b2003e6e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2a95 +0  22020000
[3e4c22b2003f448] jit-backend-dump}
[3e4c22b20042570] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2aa9 +0  2A020000
[3e4c22b200432e1] jit-backend-dump}
[3e4c22b20046483] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2ac1 +0  2E020000
[3e4c22b200471eb] jit-backend-dump}
[3e4c22b2004a2c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2ad3 +0  38020000
[3e4c22b2004b010] jit-backend-dump}
[3e4c22b2004e08a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2ae8 +0  3F020000
[3e4c22b2004edcd] jit-backend-dump}
[3e4c22b20051e90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2b0d +0  36020000
[3e4c22b20052bac] jit-backend-dump}
[3e4c22b20055d63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2b24 +0  57020000
[3e4c22b20056aa7] jit-backend-dump}
[3e4c22b20059bed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2b37 +0  60020000
[3e4c22b2005a915] jit-backend-dump}
[3e4c22b2005d97f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2b48 +0  6B020000
[3e4c22b2005e6b6] jit-backend-dump}
[3e4c22b20061718] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2b5e +0  71020000
[3e4c22b200623ff] jit-backend-dump}
[3e4c22b20065451] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2b74 +0  77020000
[3e4c22b2006612c] jit-backend-dump}
[3e4c22b20069428] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f0dcb +0  811C0000
[3e4c22b2006a119] jit-backend-dump}
[3e4c22b2006e0bc] jit-backend}
[3e4c22b20071cf8] {jit-log-opt-bridge
# bridge out of Guard 0x4611760 with 59 ops
[p0, p1]
+166: guard_class(p1, 16500016, descr=<Guard0x4778740>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+182: guard_nonnull_class(p3, 16470384, descr=<Guard0x47787a0>) [p0, p1]
+208: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+211: guard_false(i6, descr=<Guard0x476eb18>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+217: guard_class(p0, 16437896, descr=<Guard0x476eb60>) [p0, p1]
+237: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+241: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x4778800>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+261: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+265: guard_class(p10, 16479200, descr=<Guard0x476eba8>) [p0, p1]
+279: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+291: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x476ebf0>) [p0, p1]
+300: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+305: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+310: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+315: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+320: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+325: guard_class(p18, 16505296, descr=<Guard0x476ec38>) [p0, p1]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+337: guard_not_invalidated(descr=<Guard0x476ec80>) [p0, p1]
+337: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+342: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x4778860>) [p0, p1]
+360: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x47788c0>) [p0, p1]
+379: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+383: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+387: i25 = int_eq(i23, i24)
+390: guard_true(i25, descr=<Guard0x476ecc8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+396: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+400: guard_nonnull_class(p26, 16470384, descr=<Guard0x4778920>) [p0, p1]
+418: p28 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+422: guard_nonnull_class(p28, 16470384, descr=<Guard0x4778980>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+440: p30 = new_with_vtable(descr=<SizeDescr 32>)
+491: p31 = new_with_vtable(descr=<SizeDescr 56>)
+502: p32 = new_with_vtable(descr=<SizeDescr 64>)
+513: setfield_gc(p32, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+531: setfield_gc(p32, ConstPtr(ptr33), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+535: setfield_gc(p32, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+539: setfield_gc(p32, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+543: setfield_gc(p32, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+547: setfield_gc(p32, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+551: setfield_gc(p32, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+555: setfield_gc(p30, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+566: setfield_gc(p31, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+570: setfield_gc(p30, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+574: setfield_gc(p30, p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+585: setfield_gc(p31, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+589: setfield_gc(p31, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+600: setfield_gc(p31, ConstPtr(ptr34), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+604: setfield_gc(p31, p32, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+608: setfield_gc(p31, p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+612: jump(p30, p31, descr=TargetToken(61027440))
+640: --end of the loop--
[3e4c22b200a2d26] jit-log-opt-bridge}
[3e4c22b206bc8b1] {jit-backend
[3e4c22b207839ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f2f
[3e4c22b2078d647] jit-backend-dump}
[3e4c22b20798c59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3064 +0  25000000
[3e4c22b2079a173] jit-backend-dump}
[3e4c22b2079e3b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3445 +0  25000000
[3e4c22b2079f239] jit-backend-dump}
[3e4c22b207a27a8] {jit-backend-addr
bridge out of Guard 0x3cf79a0 has address 0x7f4a5c1f3060 to 0x7f4a5c1f3440
       gc table: 0x7f4a5c1f2f70
    jump target: 0x7f4a5c1f3060
         resops: 0x7f4a5c1f306e
       failures: 0x7f4a5c1f3440
            end: 0x7f4a5c1f36bd
[3e4c22b207a4b62] jit-backend-addr}
[3e4c22b207a83ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f307e +0  27040000
[3e4c22b207a9289] jit-backend-dump}
[3e4c22b207ac74a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3092 +0  2F040000
[3e4c22b207ad49c] jit-backend-dump}
[3e4c22b207b0c6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f30a8 +0  51040000
[3e4c22b207b1994] jit-backend-dump}
[3e4c22b207b4d01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f30c0 +0  55040000
[3e4c22b207b59b8] jit-backend-dump}
[3e4c22b207b8b5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f30cd +0  64040000
[3e4c22b207b980a] jit-backend-dump}
[3e4c22b207bc963] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f30de +0  6F040000
[3e4c22b207bd626] jit-backend-dump}
[3e4c22b207c07bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f30f2 +0  77040000
[3e4c22b207c1454] jit-backend-dump}
[3e4c22b207c45b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3109 +0  7C040000
[3e4c22b207c5273] jit-backend-dump}
[3e4c22b207c83c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f311e +0  83040000
[3e4c22b207c905b] jit-backend-dump}
[3e4c22b207cc1b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3128 +0  95040000
[3e4c22b207cce49] jit-backend-dump}
[3e4c22b207cffee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3135 +0  A4040000
[3e4c22b207d0cab] jit-backend-dump}
[3e4c22b207d3e04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f31b6 +0  3F040000
[3e4c22b207d4a9f] jit-backend-dump}
[3e4c22b207d7c04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f31c3 +0  4E040000
[3e4c22b207d88a5] jit-backend-dump}
[3e4c22b207dba4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f31da +0  53040000
[3e4c22b207dc732] jit-backend-dump}
[3e4c22b207df88e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f31ee +0  5B040000
[3e4c22b207e0529] jit-backend-dump}
[3e4c22b207e3651] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3202 +0  63040000
[3e4c22b207e42ec] jit-backend-dump}
[3e4c22b207e73ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3215 +0  6C040000
[3e4c22b207e80a0] jit-backend-dump}
[3e4c22b207eb1bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3273 +0  2A040000
[3e4c22b207ebe60] jit-backend-dump}
[3e4c22b207ef1f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dac4e +0  0E840100
[3e4c22b207efebb] jit-backend-dump}
[3e4c22b207f3fbb] jit-backend}
[3e4c22b207f7be4] {jit-log-opt-bridge
# bridge out of Guard 0x3cf79a0 with 153 ops
[p0, p1, p2, p3, p4]
+262: guard_class(p0, 16435920, descr=<Guard0x47789e0>) [p0, p1, p2, p3, p4]
+274: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+285: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x476ed58>) [p0, p1, p2, p3, p4]
+294: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+298: guard_not_invalidated(descr=<Guard0x476eda0>) [p0, p1, p2, p3, p4]
+298: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+302: guard_class(p9, 16435920, descr=<Guard0x476ede8>) [p0, p1, p2, p3, p4]
+316: p11 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+320: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x4778a40>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(vector-set! radicals i AppRand29) from (cons AppRand1 AppRand2)')
+340: guard_class(p8, 16504944, descr=<Guard0x476ee30>) [p0, p1, p2, p3, p4]
+353: p14 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+357: guard_class(p14, 16479576, descr=<Guard0x476ee78>) [p0, p1, p2, p3, p4]
+370: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+381: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x476eec0>) [p0, p1, p2, p3, p4]
+390: p18 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+394: guard_nonnull_class(p18, ConstClass(W_Vector), descr=<Guard0x4778aa0>) [p0, p1, p2, p3, p4]
+413: i20 = getfield_gc_i(p8, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+417: p21 = getfield_gc_r(p18, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+421: guard_class(p21, 16622984, descr=<Guard0x476ef08>) [p0, p1, p2, p3, p4]
+434: i24 = int_ge(i20, 0)
+438: guard_true(i24, descr=<Guard0x476ef50>) [p0, p1, p2, p3, p4]
+444: i25 = getfield_gc_i(p18, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+448: i26 = int_lt(i20, i25)
+451: guard_true(i26, descr=<Guard0x476ef98>) [p0, p1, p2, p3, p4]
+457: p27 = getfield_gc_r(p18, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+461: p28 = new_with_vtable(descr=<SizeDescr 24>)
+511: setfield_gc(p28, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+522: p29 = new_with_vtable(descr=<SizeDescr 24>)
+533: setfield_gc(p29, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+537: setfield_gc(p29, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+541: setfield_gc(p28, p29, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+555: setarrayitem_gc(p27, i20, p28, descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand30 (+ i 1)]) (loop AppRand30))')
debug_merge_point(0, 0, '(+ i 1)')
+560: i31 = int_add(i20, 1)
debug_merge_point(0, 0, '(loop AppRand30)')
debug_merge_point(0, 0, '(let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))) from (loop AppRand30)')
debug_merge_point(0, 0, '(> i n/2)')
+564: p32 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+568: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x4778b00>) [p32, p14, p9, p11, i31, None, None, None, None]
+586: i35 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+590: i36 = int_gt(i31, i35)
+593: guard_false(i36, descr=<Guard0x476efe0>) [p32, p14, p9, p11, i31, None, None, None, None]
debug_merge_point(0, 0, '(if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))')
debug_merge_point(0, 0, '(let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30)))')
debug_merge_point(0, 0, '(rads-of-size i)')
+599: p37 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+603: guard_nonnull_class(p37, 16477696, descr=<Guard0x4778b60>) [p32, p14, p9, p11, i31, None, None, None, None]
+622: p39 = getfield_gc_r(p37, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+633: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x476f028>) [p32, p14, p9, p11, i31, None, None, None, None]
+642: p41 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '())))')
debug_merge_point(0, 0, '(lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))')
+642: p42 = getfield_gc_r(p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+646: p43 = getfield_gc_r(p37, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+650: guard_class(p43, 16505296, descr=<Guard0x476f070>) [p32, p14, p9, p11, i31, None, None, None, None]
+662: guard_nonnull_class(p42, ConstClass(W_Vector), descr=<Guard0x4778bc0>) [p32, p14, p9, p11, i31, None, None, None, None]
debug_merge_point(0, 0, '(- n4967 1)')
debug_merge_point(0, 0, '(let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))')
debug_merge_point(0, 0, '(three-partitions AppRand9)')
debug_merge_point(0, 0, '(let ([loop15177 (lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))]) (loop15177 '() (quotient m 3)))')
debug_merge_point(0, 0, '(lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))')
debug_merge_point(0, 0, '(loop15177 '() (quotient m 3))')
+681: i47 = uint_mul_high(i20, -6148914691236517205)
+708: i49 = uint_rshift(i47, 1)
+711: i51 = int_mul(i49, 3)
+711: i53 = int_xor(i20, 3)
+711: i54 = int_ne(i51, i20)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, '(let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))')
debug_merge_point(0, 0, 'lst5179')
debug_merge_point(0, 0, '(lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))')
debug_merge_point(0, 0, '(- m nc15181)')
+711: i55 = int_sub(i20, i49)
debug_merge_point(0, 0, '(loop25185 lst5179 (quotient AppRand36 2))')
+717: i57 = int_rshift(i55, 1)
+723: i59 = int_lshift(i57, 1)
+729: i61 = int_xor(i55, 2)
+736: i63 = int_rshift(i61, 63)
+740: i64 = int_ne(i59, i55)
+760: i65 = int_and(i63, i64)
+763: i66 = int_add(i57, i65)
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+766: i67 = int_lt(i66, i49)
+769: guard_false(i67, descr=<Guard0x476f0b8>) [p32, p14, p9, p11, i31, None, None, None, None]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+775: i68 = int_add(i49, i66)
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+781: i69 = int_sub(i20, i68)
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+787: i71 = int_sub(i66, 1)
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+792: p72 = new_with_vtable(descr=<SizeDescr 32>)
+810: p73 = new_with_vtable(descr=<SizeDescr 48>)
+828: setfield_gc(p73, ConstPtr(ptr74), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+846: setfield_gc(p73, ConstPtr(ptr75), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+850: p76 = new_with_vtable(descr=<SizeDescr 16>)
+861: setfield_gc(p76, i49, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+865: setfield_gc(p73, p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+869: p77 = new_with_vtable(descr=<SizeDescr 32>)
+887: setfield_gc(p77, ConstPtr(ptr78), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+898: setfield_gc(p77, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+902: setfield_gc(p77, i20, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+906: setfield_gc(p73, p77, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+910: p80 = new_with_vtable(descr=<SizeDescr 16>)
+921: setfield_gc(p80, i20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+925: setfield_gc(p73, p80, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+929: p81 = new_with_vtable(descr=<SizeDescr 24>)
+940: p82 = new_with_vtable(descr=<SizeDescr 32>)
+951: setfield_gc(p82, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+959: p85 = new_array(3, descr=<ArrayS 8>)
+978: setarrayitem_gc(p85, 0, i49, descr=<ArrayS 8>)
+982: setarrayitem_gc(p85, 1, i66, descr=<ArrayS 8>)
+986: setarrayitem_gc(p85, 2, i69, descr=<ArrayS 8>)
+990: setfield_gc(p82, p85, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1001: setfield_gc(p82, ConstPtr(ptr89), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1005: setfield_gc(p81, p82, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1016: setfield_gc(p81, ConstPtr(ptr90), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1020: p91 = new_with_vtable(descr=<SizeDescr 40>)
+1031: p92 = new_with_vtable(descr=<SizeDescr 32>)
+1042: setfield_gc(p92, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1053: setfield_gc(p92, i20, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1057: p93 = new_with_vtable(descr=<SizeDescr 32>)
+1068: setfield_gc(p93, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1079: setfield_gc(p93, ConstPtr(ptr94), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1083: setfield_gc(p93, p42, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1087: setfield_gc(p92, p93, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1091: p95 = new_with_vtable(descr=<SizeDescr 40>)
+1102: setfield_gc(p95, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1113: p96 = new_with_vtable(descr=<SizeDescr 24>)
+1124: setfield_gc(p96, p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1128: setfield_gc(p96, i31, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1132: setfield_gc(p95, p96, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1136: setfield_gc(p95, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1140: setfield_gc(p95, ConstPtr(ptr97), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1151: setfield_gc(p91, ConstPtr(ptr98), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1155: setfield_gc(p91, p92, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1159: setfield_gc(p91, p95, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1163: setfield_gc(p91, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1167: setfield_gc(p72, p73, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1178: setfield_gc(p72, i71, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1189: setfield_gc(p72, p81, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1193: jump(p72, p91, descr=TargetToken(61029280))
+1232: --end of the loop--
[3e4c22b2086d306] jit-log-opt-bridge}
[3e4c22b20997007] {jit-backend
[3e4c22b209fbf44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f
[3e4c22b20a03ddf] jit-backend-dump}
[3e4c22b20a0e2b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f38d4 +0  25000000
[3e4c22b20a0f719] jit-backend-dump}
[3e4c22b20a135c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3b25 +0  25000000
[3e4c22b20a1441e] jit-backend-dump}
[3e4c22b20a176da] {jit-backend-addr
bridge out of Guard 0x3be1ee0 has address 0x7f4a5c1f38d0 to 0x7f4a5c1f3b20
       gc table: 0x7f4a5c1f3810
    jump target: 0x7f4a5c1f38d0
         resops: 0x7f4a5c1f38de
       failures: 0x7f4a5c1f3b20
            end: 0x7f4a5c1f3d5b
[3e4c22b20a19b48] jit-backend-addr}
[3e4c22b20a1d0c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f38ee +0  71020000
[3e4c22b20a1de2e] jit-backend-dump}
[3e4c22b20a2126f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f38fb +0  80020000
[3e4c22b20a21f4a] jit-backend-dump}
[3e4c22b20a250a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f390b +0  8C020000
[3e4c22b20a25d60] jit-backend-dump}
[3e4c22b20a28e10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3922 +0  91020000
[3e4c22b20a29aae] jit-backend-dump}
[3e4c22b20a2cb87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f392e +0  A1020000
[3e4c22b20a2d82b] jit-backend-dump}
[3e4c22b20a308f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3942 +0  A9020000
[3e4c22b20a31592] jit-backend-dump}
[3e4c22b20a347af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3962 +0  C1020000
[3e4c22b20a354c8] jit-backend-dump}
[3e4c22b20a386a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3975 +0  CA020000
[3e4c22b20a39373] jit-backend-dump}
[3e4c22b20a3c458] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3989 +0  D2020000
[3e4c22b20a3d139] jit-backend-dump}
[3e4c22b20a401db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3997 +0  E0020000
[3e4c22b20a40ea4] jit-backend-dump}
[3e4c22b20a43f45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f39af +0  E4020000
[3e4c22b20a44bef] jit-backend-dump}
[3e4c22b20a47c5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f39c6 +0  E9020000
[3e4c22b20a48923] jit-backend-dump}
[3e4c22b20a4b965] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f39dd +0  EE020000
[3e4c22b20a4c628] jit-backend-dump}
[3e4c22b20a4f689] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f39f4 +0  F3020000
[3e4c22b20a50337] jit-backend-dump}
[3e4c22b20a53364] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3a0a +0  F9020000
[3e4c22b20a54011] jit-backend-dump}
[3e4c22b20a57066] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3a21 +0  FE020000
[3e4c22b20a57d0a] jit-backend-dump}
[3e4c22b20a5ad41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3a3b +0  00030000
[3e4c22b20a5b9e2] jit-backend-dump}
[3e4c22b20a5ed12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d68f4 +0  D8CF0100
[3e4c22b20a5f9ed] jit-backend-dump}
[3e4c22b20a63865] jit-backend}
[3e4c22b20a67485] {jit-log-opt-bridge
# bridge out of Guard 0x3be1ee0 with 62 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x4778c20>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull(p3, descr=<Guard0x476f148>) [p0, p1]
+246: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+249: guard_true(i5, descr=<Guard0x476f190>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
+255: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+259: guard_nonnull_class(p6, 16470384, descr=<Guard0x4778c80>) [p0, p1]
+278: guard_class(p0, 16437896, descr=<Guard0x476f1d8>) [p0, p1]
+290: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+301: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x476f220>) [p0, p1]
+310: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+310: guard_not_invalidated(descr=<Guard0x476f268>) [p0, p1]
+310: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+314: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+318: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
+322: guard_nonnull_class(p12, 16478072, descr=<Guard0x4778ce0>) [p0, p1]
+342: guard_nonnull_class(p13, 16470384, descr=<Guard0x4778d40>) [p0, p1]
+361: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+372: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x476f2b0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+381: guard_class(p14, 16437896, descr=<Guard0x476f2f8>) [p0, p1]
+395: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+400: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x4778da0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+419: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+423: guard_nonnull_class(p22, 16470384, descr=<Guard0x4778e00>) [p0, p1]
+442: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+446: guard_nonnull_class(p24, ConstClass(W_Symbol), descr=<Guard0x4778e60>) [p0, p1]
+465: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+469: guard_nonnull_class(p26, 16470384, descr=<Guard0x4778ec0>) [p0, p1]
+488: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+492: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x4778f20>) [p0, p1]
+510: p30 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+514: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x4778f80>) [p0, p1]
+533: p32 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+537: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+541: guard_nonnull_class(p33, 16616448, descr=<Guard0x4778fe0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+559: p35 = new_with_vtable(descr=<SizeDescr 32>)
+603: p36 = new_with_vtable(descr=<SizeDescr 48>)
+614: p37 = new_with_vtable(descr=<SizeDescr 32>)
+625: setfield_gc(p37, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+633: p40 = new_array_clear(4, descr=<ArrayP 8>)
+666: setarrayitem_gc(p40, 0, ConstPtr(ptr42), descr=<ArrayP 8>)
+670: setarrayitem_gc(p40, 1, p24, descr=<ArrayP 8>)
+674: setarrayitem_gc(p40, 2, p28, descr=<ArrayP 8>)
+678: setarrayitem_gc(p40, 3, p30, descr=<ArrayP 8>)
+682: setfield_gc(p37, p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+693: setfield_gc(p37, ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+697: setfield_gc(p35, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+708: setfield_gc(p35, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+719: setfield_gc(p36, ConstPtr(ptr47), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+723: setfield_gc(p36, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+727: setfield_gc(p36, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+731: setfield_gc(p36, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+735: setfield_gc(p35, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+739: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+743: jump(p35, p36, descr=TargetToken(59469520))
+784: --end of the loop--
[3e4c22b20a9af52] jit-log-opt-bridge}
[3e4c22b20cadec3] {jit-backend
[3e4c22b20d03431] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3e90 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87D301000048FF042590511504488B8D380100008139101100000F8500000000488B41084883F80172068138900F00000F8500000000488B85300100008138301901000F8500000000488B5010488B5808813B20BA00000F8500000000488B7310488B3DA8FEFFFF4839FE0F8500000000488B7B284883FF017206813F601400000F8500000000488B77084839F20F8C00000000488B73184883FE017206813E601400000F8500000000488B7E084889FE4801D70F80000000004C8B43204983F8017207418138601400000F85000000004D8B48084C01CF0F80000000004C8B43304983F8017207418138601400000F85000000004D8B50084929FA0F80000000004889D74883EA010F80000000004C8B40184983F8017207418138B09700000F85000000004989D44989CD488B0C25F091F900488D9188000000483B14251092F9000F87A100000048891425F091F90048C70130190100488D512048C702B0970000488D421848C700F08C000048C74008040000004C8D702049C7060802000049C74608040000004D894E104989761849897E204D8956284C8970104C8B35CCFDFFFF4C897018488942084C8942104C896110488959084889511848898D300100004C89AD3801000049BB90701D5C4A7F000041FFE39049BB50571C5C4A7F000041FFD3E91BFEFFFF49BB783E1F5C4A7F00004C895D204D8D9B780CFDFF41FFD3E94AFFFFFFFF35DBFCFFFF49BB783D1F5C4A7F000041534D8D9B8802FDFF41FFE3FF35C7FCFFFF49BB883D1F5C4A7F000041534D8D9B7802FDFF41FFE3FF35B3FCFFFF49BB983D1F5C4A7F000041534D8D9B6802FDFF41FFE3FF359FFCFFFF49BBA83D1F5C4A7F000041534D8D9B5802FDFF41FFE3FF358BFCFFFF49BBB83D1F5C4A7F000041534D8D9B4802FDFF41FFE3FF357FFCFFFF49BBC83D1F5C4A7F000041534D8D9B3802FDFF41FFE3FF356BFCFFFF49BBD83D1F5C4A7F000041534D8D9B2802FDFF41FFE3FF3557FCFFFF49BBE83D1F5C4A7F000041534D8D9B1802FDFF41FFE3FF3543FCFFFF49BBF83D1F5C4A7F000041534D8D9B0802FDFF41FFE3FF352FFCFFFF49BB083E1F5C4A7F000041534D8D9BF801FDFF41FFE3FF351BFCFFFF49BB183E1F5C4A7F000041534D8D9BE801FDFF41FFE3FF3507FCFFFF49BB283E1F5C4A7F000041534D8D9BD801FDFF41FFE3FF35F3FBFFFF49BB383E1F5C4A7F000041534D8D9BC801FDFF41FFE3FF35DFFBFFFF49BB483E1F5C4A7F000041534D8D9BB801FDFF41FFE3FF35CBFBFFFF49BB583E1F5C4A7F000041534D8D9BA801FDFF41FFE3FF35B7FBFFFF49BB683E1F5C4A7F000041534D8D9B9801FDFF41FFE3
[3e4c22b20d0ab7c] jit-backend-dump}
[3e4c22b20d1555f] {jit-backend-addr
Loop 108 ((let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))) has address 0x7f4a5c1f3fad to 0x7f4a5c1f4180 (bootstrap 0x7f4a5c1f3f20)
       gc table: 0x7f4a5c1f3e90
       function: 0x7f4a5c1f3f20
         resops: 0x7f4a5c1f3fad
       failures: 0x7f4a5c1f4180
            end: 0x7f4a5c1f436f
[3e4c22b20d187bf] jit-backend-addr}
[3e4c22b20d1cef8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3fc4 +0  E7010000
[3e4c22b20d1e1a8] jit-backend-dump}
[3e4c22b20d2181b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3fda +0  ED010000
[3e4c22b20d226a9] jit-backend-dump}
[3e4c22b20d25ba7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f3fed +0  12020000
[3e4c22b20d268c2] jit-backend-dump}
[3e4c22b20d29b4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4001 +0  1A020000
[3e4c22b20d2a869] jit-backend-dump}
[3e4c22b20d2da58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4015 +0  22020000
[3e4c22b20d2e7b3] jit-backend-dump}
[3e4c22b20d31950] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f402b +0  28020000
[3e4c22b20d326c4] jit-backend-dump}
[3e4c22b20d357f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4038 +0  37020000
[3e4c22b20d36507] jit-backend-dump}
[3e4c22b20d39651] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f404e +0  3D020000
[3e4c22b20d3a363] jit-backend-dump}
[3e4c22b20d3d4b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f405e +0  49020000
[3e4c22b20d3e1d8] jit-backend-dump}
[3e4c22b20d412d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4075 +0  4E020000
[3e4c22b20d41faa] jit-backend-dump}
[3e4c22b20d450a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4082 +0  5D020000
[3e4c22b20d45d6d] jit-backend-dump}
[3e4c22b20d48f6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4099 +0  62020000
[3e4c22b20d49c47] jit-backend-dump}
[3e4c22b20d4cdb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f40a6 +0  71020000
[3e4c22b20d4da87] jit-backend-dump}
[3e4c22b20d50be6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f40b3 +0  80020000
[3e4c22b20d518ec] jit-backend-dump}
[3e4c22b20d54a36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f40ca +0  85020000
[3e4c22b20d556f9] jit-backend-dump}
[3e4c22b20d59448] jit-backend}
[3e4c22b20d5d4b8] {jit-log-opt-loop
# Loop 108 ((let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))) : entry bridge with 65 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
+293: guard_class(p1, 16435920, descr=<Guard0x4779040>) [p0, p1]
+312: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+316: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x47790a0>) [p0, p1]
debug_merge_point(0, 0, '(< nc35240 start)')
+334: guard_not_invalidated(descr=<Guard0x476f388>) [p0, p1]
+334: guard_class(p0, 16503536, descr=<Guard0x476f3d0>) [p0, p1]
+353: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+357: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+361: guard_class(p7, 16479200, descr=<Guard0x476f418>) [p0, p1]
+373: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+384: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x476f460>) [p0, p1]
+393: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+397: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x4779100>) [p0, p1]
+415: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+419: i14 = int_lt(i6, i13)
+422: guard_false(i14, descr=<Guard0x476f4a8>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+428: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+432: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x4779160>) [p0, p1]
+450: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+454: i18 = int_add_ovf(i17, i6)
+460: guard_no_overflow(descr=<Guard0x476f4f0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+466: p19 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+470: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x47791c0>) [p0, p1]
+489: i21 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+493: i22 = int_add_ovf(i21, i18)
+496: guard_no_overflow(descr=<Guard0x476f538>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+502: p23 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+506: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x4779220>) [p0, p1]
+525: i25 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+529: i26 = int_sub_ovf(i25, i22)
+532: guard_no_overflow(descr=<Guard0x476f580>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+538: i28 = int_sub_ovf(i6, 1)
+545: guard_no_overflow(descr=<Guard0x476f5c8>) [p0, p1]
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
+551: p29 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+555: guard_nonnull_class(p29, 16470384, descr=<Guard0x4779280>) [p0, p1]
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+574: p31 = new_with_vtable(descr=<SizeDescr 32>)
+624: p32 = new_with_vtable(descr=<SizeDescr 24>)
+635: p33 = new_with_vtable(descr=<SizeDescr 32>)
+646: setfield_gc(p33, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+654: p36 = new_array(4, descr=<ArrayS 8>)
+673: setarrayitem_gc(p36, 0, i21, descr=<ArrayS 8>)
+677: setarrayitem_gc(p36, 1, i17, descr=<ArrayS 8>)
+681: setarrayitem_gc(p36, 2, i6, descr=<ArrayS 8>)
+685: setarrayitem_gc(p36, 3, i26, descr=<ArrayS 8>)
+689: setfield_gc(p33, p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+700: setfield_gc(p33, ConstPtr(ptr41), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+704: setfield_gc(p32, p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+708: setfield_gc(p32, p29, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+712: setfield_gc(p31, i28, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+716: setfield_gc(p31, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+720: setfield_gc(p31, p32, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+724: jump(p31, p1, descr=TargetToken(61027280))
+752: --end of the loop--
[3e4c22b20d94364] jit-log-opt-loop}
[3e4c22b20fde0ed] {jit-backend
[3e4c22b2106a23b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f
[3e4c22b210750fe] jit-backend-dump}
[3e4c22b2108065c] {jit-backend-addr
Loop 109 ((let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)) has address 0x7f4a5c1f474d to 0x7f4a5c1f4aa0 (bootstrap 0x7f4a5c1f46c0)
       gc table: 0x7f4a5c1f4590
       function: 0x7f4a5c1f46c0
         resops: 0x7f4a5c1f474d
       failures: 0x7f4a5c1f4aa0
            end: 0x7f4a5c1f4e33
[3e4c22b21083bb8] jit-backend-addr}
[3e4c22b2108850c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4764 +0  67030000
[3e4c22b210898a2] jit-backend-dump}
[3e4c22b2108d0a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f477a +0  6D030000
[3e4c22b2108df58] jit-backend-dump}
[3e4c22b21091541] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f478d +0  92030000
[3e4c22b2109235b] jit-backend-dump}
[3e4c22b21095727] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f47a1 +0  9A030000
[3e4c22b21096495] jit-backend-dump}
[3e4c22b2109979d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f47b5 +0  A2030000
[3e4c22b2109a4bf] jit-backend-dump}
[3e4c22b2109d6f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f47cb +0  A8030000
[3e4c22b2109e43d] jit-backend-dump}
[3e4c22b210a161d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f47d8 +0  B7030000
[3e4c22b210a238b] jit-backend-dump}
[3e4c22b210a5580] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f47f2 +0  B9030000
[3e4c22b210a62df] jit-backend-dump}
[3e4c22b210a94ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4808 +0  BF030000
[3e4c22b210aa242] jit-backend-dump}
[3e4c22b210ad406] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f481c +0  C7030000
[3e4c22b210ae152] jit-backend-dump}
[3e4c22b210b1369] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4826 +0  D9030000
[3e4c22b210b20cb] jit-backend-dump}
[3e4c22b210b52a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f483a +0  E1030000
[3e4c22b210b5fdb] jit-backend-dump}
[3e4c22b210b91cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f484e +0  E9030000
[3e4c22b210b9f07] jit-backend-dump}
[3e4c22b210bd192] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4864 +0  EF030000
[3e4c22b210bdede] jit-backend-dump}
[3e4c22b210c10e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4878 +0  F7030000
[3e4c22b210c1e17] jit-backend-dump}
[3e4c22b210c4fe1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4884 +0  07040000
[3e4c22b210c5d24] jit-backend-dump}
[3e4c22b210c8ec0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f489b +0  0C040000
[3e4c22b210c9c07] jit-backend-dump}
[3e4c22b210ccd8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f48b1 +0  12040000
[3e4c22b210cdab2] jit-backend-dump}
[3e4c22b210d0c58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f48bf +0  20040000
[3e4c22b210d1992] jit-backend-dump}
[3e4c22b210d4aeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f48d0 +0  2B040000
[3e4c22b210d5809] jit-backend-dump}
[3e4c22b210d8953] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f48e2 +0  35040000
[3e4c22b210d9684] jit-backend-dump}
[3e4c22b210dc814] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f48f0 +0  43040000
[3e4c22b210dd54e] jit-backend-dump}
[3e4c22b210e06cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f48fe +0  51040000
[3e4c22b210e1406] jit-backend-dump}
[3e4c22b210e4540] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4917 +0  54040000
[3e4c22b210e5290] jit-backend-dump}
[3e4c22b210e8407] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f492a +0  5D040000
[3e4c22b210e9154] jit-backend-dump}
[3e4c22b210ec291] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4934 +0  6F040000
[3e4c22b210ecfc2] jit-backend-dump}
[3e4c22b210f0155] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4941 +0  7E040000
[3e4c22b210f0e95] jit-backend-dump}
[3e4c22b210f4019] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4952 +0  89040000
[3e4c22b210f4d56] jit-backend-dump}
[3e4c22b210f7ebe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f496e +0  89040000
[3e4c22b210f8c20] jit-backend-dump}
[3e4c22b210fbdcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4985 +0  8E040000
[3e4c22b210fcb28] jit-backend-dump}
[3e4c22b21100965] jit-backend}
[3e4c22b21104885] {jit-log-opt-loop
# Loop 109 ((let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)) : entry bridge with 124 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)')
+453: guard_class(p1, 16435920, descr=<Guard0x47792e0>) [p0, p1]
+472: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+476: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x4779340>) [p0, p1]
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+494: guard_not_invalidated(descr=<Guard0x476f610>) [p0, p1]
+494: guard_class(p0, 16503536, descr=<Guard0x476f658>) [p0, p1]
+513: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+517: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+521: guard_class(p7, 16478448, descr=<Guard0x476f6a0>) [p0, p1]
+533: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+544: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x476f6e8>) [p0, p1]
+553: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+557: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x47793a0>) [p0, p1]
+575: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+579: i14 = int_lt(i6, i13)
+582: guard_true(i14, descr=<Guard0x476f730>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37))')
debug_merge_point(0, 0, '(- nc15216 1)')
+588: i16 = int_sub(i13, 1)
debug_merge_point(0, 0, '(loop15212 lst5222 AppRand37)')
+592: p17 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+596: guard_nonnull_class(p17, 16482960, descr=<Guard0x4779400>) [p0, p1]
+614: p19 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+618: guard_nonnull_class(p19, 16470384, descr=<Guard0x4779460>) [p0, p1]
+636: p21 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+647: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x476f778>) [p0, p1]
+656: p23 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if8 (< nc15216 0)]) (if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3)))))')
debug_merge_point(0, 0, '(< nc15216 0)')
+656: i25 = int_lt(i16, 0)
+660: guard_true(i25, descr=<Guard0x476f7c0>) [p0, p1]
debug_merge_point(0, 0, '(if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3))))')
debug_merge_point(0, 0, 'lst5214')
+666: p26 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+677: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x476f808>) [p0, p1]
+686: p28 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+690: p29 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop15067 AppRand26 '())')
+694: guard_class(p28, 16503536, descr=<Guard0x476f850>) [p0, p1]
+706: p31 = getfield_gc_r(p28, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+710: guard_nonnull_class(p31, 16477696, descr=<Guard0x47794c0>) [p0, p1]
+728: p33 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+739: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x476f898>) [p0, p1]
+748: p35 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 AppRand26 '())')
debug_merge_point(0, 0, '(let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))')
+748: guard_class(p29, 16437352, descr=<Guard0x476f8e0>) [p0, p1]
+760: p37 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+764: guard_nonnull_class(p37, ConstClass(ForwardLink), descr=<Guard0x4779520>) [p0, p1]
debug_merge_point(0, 0, '(car ps5069)')
+783: p39 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+787: guard_nonnull_class(p39, ConstClass(W_Vector), descr=<Guard0x4779580>) [p0, p1]
debug_merge_point(0, 0, '(let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24)))')
debug_merge_point(0, 0, '(vector-ref p5075 0)')
+805: i41 = getfield_gc_i(p39, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+809: i43 = int_lt(0, i41)
+813: guard_true(i43, descr=<Guard0x476f928>) [p0, p1]
+819: p44 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+823: guard_class(p44, 16623792, descr=<Guard0x476f970>) [p0, p1]
+836: p46 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+840: i48 = getarrayitem_gc_i(p46, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 1)')
+844: i50 = int_lt(1, i41)
+848: guard_true(i50, descr=<Guard0x476f9b8>) [p0, p1]
+854: i52 = getarrayitem_gc_i(p46, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 2)')
+858: i54 = int_lt(2, i41)
+862: guard_true(i54, descr=<Guard0x476fa00>) [p0, p1]
+868: i56 = getarrayitem_gc_i(p46, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 3)')
+872: i58 = int_lt(3, i41)
+876: guard_true(i58, descr=<Guard0x476fa48>) [p0, p1]
+882: i60 = getarrayitem_gc_i(p46, 3, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))')
debug_merge_point(0, 0, '(lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))')
+886: p61 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+890: p62 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+894: guard_class(p62, 16505296, descr=<Guard0x476fa90>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref radicals nc15078)')
+907: guard_nonnull_class(p61, ConstClass(W_Vector), descr=<Guard0x47795e0>) [p0, p1]
+926: i66 = int_ge(i48, 0)
+930: guard_true(i66, descr=<Guard0x476fad8>) [p0, p1]
+936: i67 = getfield_gc_i(p61, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+940: i68 = int_lt(i48, i67)
+943: guard_true(i68, descr=<Guard0x476fb20>) [p0, p1]
+949: p69 = getfield_gc_r(p61, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+953: guard_class(p69, 16622984, descr=<Guard0x476fb68>) [p0, p1]
+966: p71 = getfield_gc_r(p61, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+970: p72 = getarrayitem_gc_r(p71, i48, descr=<ArrayP 8>)
+982: guard_class(p72, 16470384, descr=<Guard0x476fbb0>) [p0, p1]
debug_merge_point(0, 0, '(loop15067 (cdr ps5069) lst5071)')
+994: p74 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+998: guard_nonnull_class(p74, 16470384, descr=<Guard0x4779640>) [p0, p1]
debug_merge_point(0, 0, '(if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 (cdr ps5069) lst5071)')
+1017: p76 = new_with_vtable(descr=<SizeDescr 32>)
+1064: p77 = new_with_vtable(descr=<SizeDescr 56>)
+1075: p78 = new_with_vtable(descr=<SizeDescr 64>)
+1086: setfield_gc(p78, p62, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1104: setfield_gc(p78, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1108: setfield_gc(p78, p61, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1112: p80 = new_with_vtable(descr=<SizeDescr 16>)
+1123: setfield_gc(p80, i48, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1127: setfield_gc(p78, p80, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1131: p81 = new_with_vtable(descr=<SizeDescr 16>)
+1142: setfield_gc(p81, i60, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1146: setfield_gc(p78, p81, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1150: p82 = new_with_vtable(descr=<SizeDescr 16>)
+1161: setfield_gc(p82, i52, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1165: setfield_gc(p78, p82, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1169: p83 = new_with_vtable(descr=<SizeDescr 16>)
+1181: setfield_gc(p83, i56, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1186: setfield_gc(p78, p83, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1190: setfield_gc(p77, p37, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1194: setfield_gc(p76, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1212: setfield_gc(p77, ConstPtr(ptr84), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1216: setfield_gc(p77, p62, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1220: setfield_gc(p77, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1231: setfield_gc(p76, p74, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1242: setfield_gc(p76, ConstPtr(ptr85), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1246: setfield_gc(p77, p78, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1250: setfield_gc(p77, p72, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1254: jump(p76, p77, descr=TargetToken(64566704))
+1296: --end of the loop--
[3e4c22b2116b390] jit-log-opt-loop}
[3e4c22b213ede49] {jit-backend
[3e4c22b214609ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f4fd
[3e4c22b2146987f] jit-backend-dump}
[3e4c22b214749b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f50c4 +0  28000000
[3e4c22b21475edb] jit-backend-dump}
[3e4c22b2147a257] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f53a5 +0  28000000
[3e4c22b2147b137] jit-backend-dump}
[3e4c22b2147e938] {jit-backend-addr
bridge out of Guard 0x4610b00 has address 0x7f4a5c1f50c0 to 0x7f4a5c1f53a0
       gc table: 0x7f4a5c1f4fd0
    jump target: 0x7f4a5c1f50c0
         resops: 0x7f4a5c1f50ce
       failures: 0x7f4a5c1f53a0
            end: 0x7f4a5c1f5667
[3e4c22b21480d44] jit-backend-addr}
[3e4c22b2148467a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f50de +0  01030000
[3e4c22b214854be] jit-backend-dump}
[3e4c22b21488a92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f50eb +0  10030000
[3e4c22b2148986b] jit-backend-dump}
[3e4c22b2148cb58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f50fb +0  1C030000
[3e4c22b2148d8f1] jit-backend-dump}
[3e4c22b21490bb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5113 +0  20030000
[3e4c22b214918f6] jit-backend-dump}
[3e4c22b21494b56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5120 +0  2F030000
[3e4c22b214958ca] jit-backend-dump}
[3e4c22b21498b09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5134 +0  37030000
[3e4c22b21499846] jit-backend-dump}
[3e4c22b2149cba1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f514b +0  58030000
[3e4c22b2149d8e1] jit-backend-dump}
[3e4c22b214a0b50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f515c +0  63030000
[3e4c22b214a18a9] jit-backend-dump}
[3e4c22b214a4aa7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5170 +0  6B030000
[3e4c22b214a57fd] jit-backend-dump}
[3e4c22b214a8a0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f518f +0  68030000
[3e4c22b214a974a] jit-backend-dump}
[3e4c22b214ac91b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f51a2 +0  71030000
[3e4c22b214ad661] jit-backend-dump}
[3e4c22b214b0850] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f51b6 +0  79030000
[3e4c22b214b159f] jit-backend-dump}
[3e4c22b214b4b1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f51c2 +0  89030000
[3e4c22b214b5880] jit-backend-dump}
[3e4c22b214b8b14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f51d8 +0  8F030000
[3e4c22b214b9860] jit-backend-dump}
[3e4c22b214bcacc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f51ef +0  94030000
[3e4c22b214bd7dc] jit-backend-dump}
[3e4c22b214c0a2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5205 +0  9A030000
[3e4c22b214c1748] jit-backend-dump}
[3e4c22b214c4915] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f521c +0  9F030000
[3e4c22b214c5646] jit-backend-dump}
[3e4c22b214c880d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5232 +0  A5030000
[3e4c22b214c94fe] jit-backend-dump}
[3e4c22b214cc68e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5249 +0  AA030000
[3e4c22b214cd38b] jit-backend-dump}
[3e4c22b214d053f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f525f +0  B0030000
[3e4c22b214d1239] jit-backend-dump}
[3e4c22b214d43c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5276 +0  B5030000
[3e4c22b214d50c3] jit-backend-dump}
[3e4c22b214d8278] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f529e +0  A9030000
[3e4c22b214d8f62] jit-backend-dump}
[3e4c22b214dc420] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ef5d2 +0  EA5A0000
[3e4c22b214dd132] jit-backend-dump}
[3e4c22b214e12b3] jit-backend}
[3e4c22b214e51b1] {jit-log-opt-bridge
# bridge out of Guard 0x4610b00 with 78 ops
[p0, p1]
+262: guard_class(p1, 16500016, descr=<Guard0x4779700>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+278: guard_nonnull(p3, descr=<Guard0x476fd18>) [p0, p1]
+294: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+297: guard_true(i5, descr=<Guard0x476fd60>) [p0, p1]
debug_merge_point(0, 0, 'lst5115')
+303: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+307: guard_nonnull_class(p6, 16470384, descr=<Guard0x4779760>) [p0, p1]
+327: guard_class(p0, 16437352, descr=<Guard0x476fda8>) [p0, p1]
+340: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+351: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x476fdf0>) [p0, p1]
+360: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+360: guard_not_invalidated(descr=<Guard0x476fe38>) [p0, p1]
+360: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+364: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x47797c0>) [p0, p1]
+383: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (loop5 (cdr rads4) lst5115)')
+387: guard_class(p14, 16437896, descr=<Guard0x476fe80>) [p0, p1]
+400: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+411: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x476fec8>) [p0, p1]
+420: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+420: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+424: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+428: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (cons AppRand15 AppRand16)')
+432: guard_nonnull_class(p19, 16478448, descr=<Guard0x4779820>) [p0, p1]
+451: guard_nonnull_class(p20, 16470384, descr=<Guard0x4779880>) [p0, p1]
+470: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+481: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x476ff10>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+490: guard_class(p21, 16437896, descr=<Guard0x476ff58>) [p0, p1]
+502: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+506: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x47798e0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+524: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+528: guard_nonnull_class(p29, 16470384, descr=<Guard0x4779940>) [p0, p1]
+547: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+551: guard_nonnull_class(p31, ConstClass(W_Symbol), descr=<Guard0x47799a0>) [p0, p1]
+569: p33 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+573: guard_nonnull_class(p33, 16470384, descr=<Guard0x4779a00>) [p0, p1]
+592: p35 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+596: guard_nonnull_class(p35, ConstClass(W_Vector), descr=<Guard0x4779a60>) [p0, p1]
+614: p37 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+618: guard_nonnull_class(p37, 16470384, descr=<Guard0x4779ac0>) [p0, p1]
+637: p39 = getfield_gc_r(p37, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+641: guard_nonnull_class(p39, ConstClass(W_Vector), descr=<Guard0x4779b20>) [p0, p1]
+659: p41 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+663: guard_nonnull_class(p41, ConstClass(W_Vector), descr=<Guard0x4779b80>) [p0, p1]
+682: p43 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+693: p44 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+704: guard_nonnull_class(p44, 16470384, descr=<Guard0x4779be0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+722: p46 = new_with_vtable(descr=<SizeDescr 32>)
+769: p47 = new_with_vtable(descr=<SizeDescr 24>)
+780: setfield_gc(p47, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+784: setfield_gc(p47, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+788: p48 = new_with_vtable(descr=<SizeDescr 48>)
+800: p49 = new_with_vtable(descr=<SizeDescr 32>)
+811: setfield_gc(p49, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+819: p52 = new_array_clear(5, descr=<ArrayP 8>)
+852: setarrayitem_gc(p52, 0, ConstPtr(ptr54), descr=<ArrayP 8>)
+856: setarrayitem_gc(p52, 1, p31, descr=<ArrayP 8>)
+860: setarrayitem_gc(p52, 2, p35, descr=<ArrayP 8>)
+864: setarrayitem_gc(p52, 3, p39, descr=<ArrayP 8>)
+868: setarrayitem_gc(p52, 4, p41, descr=<ArrayP 8>)
+872: setfield_gc(p49, p52, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+883: setfield_gc(p49, ConstPtr(ptr59), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+887: setfield_gc(p46, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+898: setfield_gc(p46, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+902: setfield_gc(p48, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+906: setfield_gc(p48, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+910: setfield_gc(p48, p49, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+914: setfield_gc(p48, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+918: setfield_gc(p48, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+929: setfield_gc(p46, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+940: jump(p46, p48, descr=TargetToken(59469840))
+976: --end of the loop--
[3e4c22b2152914b] jit-log-opt-bridge}
[3e4c22b219f0595] {jit-backend
[3e4c22b21a7a014] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5890 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5203000048FF0425D0D013048139700B01000F85000000004C8B79104D85FF0F84000000004C8B35AAFEFFFF4D39F70F85000000004C8B79184983FF01720741813F40D202000F850000000041817D00A81600000F85000000004D8B65204C8B1591FEFFFF4D39D40F85000000004D8B65284983FC01720841813C24F08C00000F85000000004D8B4D18418139C81800000F85000000004D8B4120488B3D7CFEFFFF4939F80F8500000000498B79284D8B4130498B71184883FF017206813FA8B800000F85000000004983F8017207418138B09700000F85000000004C8B4F10488B1D57FEFFFF4939D90F8500000000813EC81800000F8500000000488B5E084883FB017206813B900F00000F85000000004C8B4F18488B5720488B473048899D30010000488B5F08813B102001000F85000000004889B538010000488B77284883FE017206813E601400000F85000000004883FA017206813A601400000F8500000000488B7E08488B72084839F70F8500000000498B78104883FF017206813F40D202000F85000000004C39F70F85000000004883F80172068138601400000F85000000004C8B70084C39F60F84000000004983F9017207418139F08C00000F85000000004983FE000F8C00000000498B71084939F60F8D00000000498B7118813EC8EB02000F8500000000498B71104E8B4CF610418139B09700000F85000000004D8B70084983FE01720741813EF08C00000F8500000000498B71084883FE017206813EF08C00000F8500000000498B41104883F80172068138B09700000F8500000000488B0C25F091F900488D91E0000000483B14251092F9000F871901000048891425F091F90048C701700B0100488D512048C702B8B5000048895A084C8B2D56FDFFFF4C896A104C8942184C8942204C8D422849C700B09700004D8960084D8978104D8D781849C707A81600004D8D673049C70424F08C000049C7442408040000004D8D6C242049C74500080E000049C74508040000004C8B0D03FDFFFF4D894D104D8975184D897520498975284D896C24104C8B2DEFFCFFFF4D896C2418488941104C8941184D89572049895F104D8967284C8BA5380100004D8967184C8BA5300100004D8967084889510848898D300100004C89BD3801000049BBC05A1C5C4A7F000041FFE3660F1F84000000000048C7442408FFFFFF0049BB78561F5C4A7F00004C895D204D8D9B78ECFCFF41FFD3E988FCFFFF49BB78581F5C4A7F00004C895D204D8D9B78F2FCFF41FFD3E9D2FEFFFFFF3527FBFFFF49BB88561F5C4A7F000041534D8D9B78E9FCFF41FFE3FF3513FBFFFF49BB98561F5C4A7F000041534D8D9B68E9FCFF41FFE3FF3507FBFFFF49BBA8561F5C4A7F000041534D8D9B58E9FCFF41FFE3FF35F3FAFFFF49BBB8561F5C4A7F000041534D8D9B48E9FCFF41FFE3FF35DFFAFFFF49BBC8561F5C4A7F000041534D8D9B38E9FCFF41FFE3FF35D3FAFFFF49BBD8561F5C4A7F000041534D8D9B28E9FCFF41FFE3FF35BFFAFFFF49BBE8561F5C4A7F000041534D8D9B18E9FCFF41FFE3FF35ABFAFFFF49BBF8561F5C4A7F000041534D8D9B08E9FCFF41FFE3FF3597FAFFFF49BB08571F5C4A7F000041534D8D9BF8E8FCFF41FFE3FF358BFAFFFF49BB18571F5C4A7F000041534D8D9BE8E8FCFF41FFE3FF3577FAFFFF49BB28571F5C4A7F000041534D8D9BD8E8FCFF41FFE3FF3563FAFFFF49BB38571F5C4A7F000041534D8D9BC8E8FCFF41FFE3FF3557FAFFFF49BB48571F5C4A7F000041534D8D9BB8E8FCFF41FFE3FF3543FAFFFF49BB58571F5C4A7F000041534D8D9BA8E8FCFF41FFE3FF352FFAFFFF49BB68571F5C4A7F000041534D8D9B98E8FCFF41FFE3FF351BFAFFFF49BB78571F5C4A7F000041534D8D9B88E8FCFF41FFE3FF3507FAFFFF49BB88571F5C4A7F000041534D8D9B78E8FCFF41FFE3FF35F3F9FFFF49BB98571F5C4A7F000041534D8D9B68E8FCFF41FFE3FF35DFF9FFFF49BBA8571F5C4A7F000041534D8D9B58E8FCFF41FFE3FF35CBF9FFFF49BBB8571F5C4A7F000041534D8D9B48E8FCFF41FFE3FF35B7F9FFFF49BBC8571F5C4A7F000041534D8D9B38E8FCFF41FFE3FF35A3F9FFFF49BBD8571F5C4A7F000041534D8D9B28E8FCFF41FFE3FF358FF9FFFF49BBE8571F5C4A7F000041534D8D9B18E8FCFF41FFE3FF357BF9FFFF49BBF8571F5C4A7F000041534D8D9B08E8FCFF41FFE3FF3567F9FFFF49BB08581F5C4A7F000041534D8D9BF8E7FCFF41FFE3FF3553F9FFFF49BB18581F5C4A7F000041534D8D9BE8E7FCFF41FFE3FF353FF9FFFF49BB28581F5C4A7F000041534D8D9BD8E7FCFF41FFE3FF352BF9FFFF49BB38581F5C4A7F000041534D8D9BC8E7FCFF41FFE3FF3517F9FFFF49BB48581F5C4A7F000041534D8D9BB8E7FCFF41FFE3FF3503F9FFFF49BB58581F5C4A7F000041534D8D9BA8E7FCFF41FFE3FF35EFF8FFFF49BB68581F5C4A7F000041534D8D9B98E7FCFF41FFE3
[3e4c22b21a84731] jit-backend-dump}
[3e4c22b21a900a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f59c4 +0  25000000
[3e4c22b21a915f3] jit-backend-dump}
[3e4c22b21a95a36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5d25 +0  25000000
[3e4c22b21a969bb] jit-backend-dump}
[3e4c22b21a9a170] {jit-backend-addr
bridge out of Guard 0x3e124e8 has address 0x7f4a5c1f59c0 to 0x7f4a5c1f5d20
       gc table: 0x7f4a5c1f5890
    jump target: 0x7f4a5c1f59c0
         resops: 0x7f4a5c1f59ce
       failures: 0x7f4a5c1f5d20
            end: 0x7f4a5c1f60c7
[3e4c22b21a9c511] jit-backend-addr}
[3e4c22b21a9fd2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f59de +0  81030000
[3e4c22b21aa0c60] jit-backend-dump}
[3e4c22b21aa40da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f59eb +0  90030000
[3e4c22b21aa4e55] jit-backend-dump}
[3e4c22b21aa81ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f59fb +0  9C030000
[3e4c22b21aa8ee7] jit-backend-dump}
[3e4c22b21aac1b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5a12 +0  A1030000
[3e4c22b21aaced3] jit-backend-dump}
[3e4c22b21ab01ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5a20 +0  AF030000
[3e4c22b21ab0ed2] jit-backend-dump}
[3e4c22b21ab4182] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5a34 +0  B7030000
[3e4c22b21ab4e9a] jit-backend-dump}
[3e4c22b21ab831b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5a4c +0  D7030000
[3e4c22b21ab9033] jit-backend-dump}
[3e4c22b21abc3f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5a5d +0  E2030000
[3e4c22b21abd112] jit-backend-dump}
[3e4c22b21ac03f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5a71 +0  EA030000
[3e4c22b21ac10f8] jit-backend-dump}
[3e4c22b21ac4386] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5a8f +0  E8030000
[3e4c22b21ac509c] jit-backend-dump}
[3e4c22b21ac82a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5aa2 +0  F1030000
[3e4c22b21ac8fa6] jit-backend-dump}
[3e4c22b21acc21b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5ab6 +0  F9030000
[3e4c22b21accf34] jit-backend-dump}
[3e4c22b21ad0154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5ac2 +0  09040000
[3e4c22b21ad0e5a] jit-backend-dump}
[3e4c22b21ad4083] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5ad8 +0  0F040000
[3e4c22b21ad4dba] jit-backend-dump}
[3e4c22b21ad8017] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5afb +0  08040000
[3e4c22b21ad8cf2] jit-backend-dump}
[3e4c22b21adbed8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b18 +0  07040000
[3e4c22b21adcbe1] jit-backend-dump}
[3e4c22b21adfd89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b2a +0  11040000
[3e4c22b21ae0a6b] jit-backend-dump}
[3e4c22b21ae3bf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b3b +0  1C040000
[3e4c22b21ae491c] jit-backend-dump}
[3e4c22b21ae7b48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b51 +0  22040000
[3e4c22b21ae884e] jit-backend-dump}
[3e4c22b21aeba00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b5a +0  35040000
[3e4c22b21aec6fd] jit-backend-dump}
[3e4c22b21aef899] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b6c +0  3F040000
[3e4c22b21af0587] jit-backend-dump}
[3e4c22b21af37db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b79 +0  4E040000
[3e4c22b21af44ea] jit-backend-dump}
[3e4c22b21af7707] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b8c +0  57040000
[3e4c22b21af83e2] jit-backend-dump}
[3e4c22b21afb5b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b96 +0  69040000
[3e4c22b21afc2b8] jit-backend-dump}
[3e4c22b21aff4f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5ba3 +0  78040000
[3e4c22b21b00228] jit-backend-dump}
[3e4c22b21b03420] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5bb3 +0  84040000
[3e4c22b21b04154] jit-backend-dump}
[3e4c22b21b07364] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5bc9 +0  8A040000
[3e4c22b21b0806a] jit-backend-dump}
[3e4c22b21b0b1fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5be0 +0  8F040000
[3e4c22b21b0bf1c] jit-backend-dump}
[3e4c22b21b0f0ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5bf6 +0  95040000
[3e4c22b21b0fda9] jit-backend-dump}
[3e4c22b21b12f54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5c0c +0  9B040000
[3e4c22b21b13cbf] jit-backend-dump}
[3e4c22b21b17121] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e40b4 +0  08190100
[3e4c22b21b17e37] jit-backend-dump}
[3e4c22b21b1bfae] jit-backend}
[3e4c22b21b1fc70] {jit-log-opt-bridge
# bridge out of Guard 0x3e124e8 with 126 ops
[p0, p1]
+326: guard_class(p1, 16500016, descr=<Guard0x4779c40>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+342: guard_nonnull(p3, descr=<Guard0x47a8020>) [p0, p1]
+358: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+361: guard_true(i5, descr=<Guard0x47a8068>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+367: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+371: guard_nonnull_class(p6, 16616448, descr=<Guard0x4779ca0>) [p0, p1]
+390: guard_class(p0, 16437352, descr=<Guard0x47a80b0>) [p0, p1]
+404: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+415: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x47a80f8>) [p0, p1]
+424: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+424: guard_not_invalidated(descr=<Guard0x47a8140>) [p0, p1]
+424: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+428: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x4779d00>) [p0, p1]
+448: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+452: guard_class(p14, 16437896, descr=<Guard0x47a8188>) [p0, p1]
+465: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+476: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x47a81d0>) [p0, p1]
+485: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+485: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+489: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+493: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+497: guard_nonnull_class(p19, 16478824, descr=<Guard0x4779d60>) [p0, p1]
+515: guard_nonnull_class(p20, 16470384, descr=<Guard0x4779dc0>) [p0, p1]
+534: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+545: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x47a8218>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+554: guard_class(p21, 16437896, descr=<Guard0x47a8260>) [p0, p1]
+566: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+570: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x4779e20>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+588: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+592: p30 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+596: p31 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+600: p32 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+611: guard_class(p32, 16505296, descr=<Guard0x47a82a8>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+623: p34 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+634: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x4779e80>) [p0, p1]
+652: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x4779ee0>) [p0, p1]
+670: i37 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+674: i38 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+678: i39 = int_eq(i37, i38)
+681: guard_true(i39, descr=<Guard0x47a82f0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+687: p40 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+691: guard_nonnull_class(p40, 16616448, descr=<Guard0x4779f40>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+709: i43 = instance_ptr_eq(p40, ConstPtr(ptr42))
+712: guard_true(i43, descr=<Guard0x47a8338>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+718: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x4779fa0>) [p0, p1]
+736: i45 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+740: i46 = int_eq(i38, i45)
+743: guard_false(i46, descr=<Guard0x47a8380>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+749: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x47aa020>) [p0, p1]
+768: i49 = int_ge(i45, 0)
+772: guard_true(i49, descr=<Guard0x47a83c8>) [p0, p1]
+778: i50 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+782: i51 = int_lt(i45, i50)
+785: guard_true(i51, descr=<Guard0x47a8410>) [p0, p1]
+791: p52 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+795: guard_class(p52, 16622984, descr=<Guard0x47a8458>) [p0, p1]
+807: p54 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+811: p55 = getarrayitem_gc_r(p54, i45, descr=<ArrayP 8>)
+816: guard_class(p55, 16470384, descr=<Guard0x47a84a0>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+829: p57 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+833: guard_nonnull_class(p57, ConstClass(W_Vector), descr=<Guard0x47aa080>) [p0, p1]
+852: p59 = getfield_gc_r(p55, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+856: guard_nonnull_class(p59, ConstClass(W_Vector), descr=<Guard0x47aa0e0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+874: p61 = getfield_gc_r(p55, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+878: guard_nonnull_class(p61, 16470384, descr=<Guard0x47aa140>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+896: p63 = new_with_vtable(descr=<SizeDescr 32>)
+940: p64 = new_with_vtable(descr=<SizeDescr 40>)
+951: setfield_gc(p64, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+962: setfield_gc(p64, ConstPtr(ptr65), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+966: setfield_gc(p64, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+970: setfield_gc(p64, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+974: p66 = new_with_vtable(descr=<SizeDescr 24>)
+985: setfield_gc(p66, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+989: setfield_gc(p66, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+993: p67 = new_with_vtable(descr=<SizeDescr 48>)
+1004: p68 = new_with_vtable(descr=<SizeDescr 32>)
+1016: setfield_gc(p68, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1025: p71 = new_array_clear(4, descr=<ArrayP 8>)
+1053: setarrayitem_gc(p71, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+1057: setarrayitem_gc(p71, 1, p57, descr=<ArrayP 8>)
+1061: setarrayitem_gc(p71, 2, p57, descr=<ArrayP 8>)
+1065: setarrayitem_gc(p71, 3, p59, descr=<ArrayP 8>)
+1069: setfield_gc(p68, p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1081: setfield_gc(p68, ConstPtr(ptr77), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1086: setfield_gc(p63, p61, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1090: setfield_gc(p63, p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1094: setfield_gc(p67, ConstPtr(ptr78), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1098: setfield_gc(p67, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1102: setfield_gc(p67, p68, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1106: setfield_gc(p67, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1117: setfield_gc(p67, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1128: setfield_gc(p63, p64, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1132: jump(p63, p67, descr=TargetToken(59469520))
+1168: --end of the loop--
[3e4c22b21b7f3c5] jit-log-opt-bridge}
[3e4c22b21dac9e1] {jit-backend
[3e4c22b21e138a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6240 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C7202000048FF042560D113048139700B01000F85000000004C8B79104D85FF0F84000000004C8B350AFFFFFF4D39F70F85000000004C8B71184983FE01720741813E40D202000F85000000004C8BBD3801000041813FA81600000F85000000004D8B6F204C8B25EBFEFFFF4D39E50F85000000004D8B67284983FC01720841813C24F08C00000F85000000004D8B6F1841817D00C81800000F85000000004D8B55204C8B0DD5FEFFFF4D39CA0F85000000004D8B4D284D8B55304D8B45184983F901720741813920BA00000F85000000004983FA01720741813AB09700000F85000000004D8B6910488B3DAFFEFFFF4939FD0F8500000000418138C81800000F8500000000498B78084883FF017206813F900F00000F85000000004D8B6918498B7120498B5930498B5138498B41088138102001000F85000000004C898D300100004D8B49284983F9017207418139601400000F85000000004883FA017206813A601400000F85000000004C8995400100004D8B51084C8985480100004C8B42084D39C20F85000000004C8B85400100004889BD50010000498B78104883FF017206813FB09700000F85000000004983FD01720841817D00F08C00000F85000000004989D7488B0C25F091F900488D5118483B14251092F9000F87BD00000048891425F091F90048C701B09700004C8971104C8961084889BD5801000048898D600100004C8B9D500100004C899D400100004989C4488B95480100004889F74C89F948899D680100004889B570010000488985780100004C8995500100004C8B9D300100004C899D480100004C89C04D89FA4C89C64D89EF4C898D300100004D89E84989D949BB40571D5C4A7F000041FFE30F1F400048C7442408FFFFFF0049BBD0601F5C4A7F00004C895D204D8D9B20E2FCFF41FFD3E968FDFFFF49BB30621F5C4A7F00004C895D204D8D9BC0E8FCFF41FFD3E92EFFFFFFFF3567FCFFFF49BBE0601F5C4A7F000041534D8D9B20DFFCFF41FFE3FF3553FCFFFF49BBF0601F5C4A7F000041534D8D9B10DFFCFF41FFE3FF3547FCFFFF49BB00611F5C4A7F000041534D8D9B00DFFCFF41FFE3FF3533FCFFFF49BB10611F5C4A7F000041534D8D9BF0DEFCFF41FFE3FF351FFCFFFF49BB20611F5C4A7F000041534D8D9BE0DEFCFF41FFE3FF3513FCFFFF49BB30611F5C4A7F000041534D8D9BD0DEFCFF41FFE3FF35FFFBFFFF49BB40611F5C4A7F000041534D8D9BC0DEFCFF41FFE3FF35EBFBFFFF49BB50611F5C4A7F000041534D8D9BB0DEFCFF41FFE3FF35D7FBFFFF49BB60611F5C4A7F000041534D8D9BA0DEFCFF41FFE3FF35CBFBFFFF49BB70611F5C4A7F000041534D8D9B90DEFCFF41FFE3FF35B7FBFFFF49BB80611F5C4A7F000041534D8D9B80DEFCFF41FFE3FF35A3FBFFFF49BB90611F5C4A7F000041534D8D9B70DEFCFF41FFE3FF3597FBFFFF49BBA0611F5C4A7F000041534D8D9B60DEFCFF41FFE3FF3583FBFFFF49BBB0611F5C4A7F000041534D8D9B50DEFCFF41FFE3FF356FFBFFFF49BBC0611F5C4A7F000041534D8D9B40DEFCFF41FFE3FF355BFBFFFF49BBD0611F5C4A7F000041534D8D9B30DEFCFF41FFE3FF3547FBFFFF49BBE0611F5C4A7F000041534D8D9B20DEFCFF41FFE3FF3533FBFFFF49BBF0611F5C4A7F000041534D8D9B10DEFCFF41FFE3FF351FFBFFFF49BB00621F5C4A7F000041534D8D9B00DEFCFF41FFE3FF350BFBFFFF49BB10621F5C4A7F000041534D8D9BF0DDFCFF41FFE3FF35F7FAFFFF49BB20621F5C4A7F000041534D8D9BE0DDFCFF41FFE3
[3e4c22b21e1c236] jit-backend-dump}
[3e4c22b21e27313] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6314 +0  28000000
[3e4c22b21e2887f] jit-backend-dump}
[3e4c22b21e2ca65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6595 +0  28000000
[3e4c22b21e2d8ef] jit-backend-dump}
[3e4c22b21e30e7a] {jit-backend-addr
bridge out of Guard 0x39085c0 has address 0x7f4a5c1f6310 to 0x7f4a5c1f6590
       gc table: 0x7f4a5c1f6240
    jump target: 0x7f4a5c1f6310
         resops: 0x7f4a5c1f631e
       failures: 0x7f4a5c1f6590
            end: 0x7f4a5c1f681f
[3e4c22b21e33423] jit-backend-addr}
[3e4c22b21e36af5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f632e +0  A1020000
[3e4c22b21e379d2] jit-backend-dump}
[3e4c22b21e3adfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f633b +0  B0020000
[3e4c22b21e3bb8a] jit-backend-dump}
[3e4c22b21e3eeee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f634b +0  BC020000
[3e4c22b21e3fc6b] jit-backend-dump}
[3e4c22b21e42f52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6362 +0  C1020000
[3e4c22b21e43c9e] jit-backend-dump}
[3e4c22b21e46fbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6376 +0  C9020000
[3e4c22b21e47d15] jit-backend-dump}
[3e4c22b21e4affe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f638a +0  D1020000
[3e4c22b21e4bd66] jit-backend-dump}
[3e4c22b21e4f0c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f63a2 +0  F1020000
[3e4c22b21e4fde3] jit-backend-dump}
[3e4c22b21e53116] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f63b4 +0  FB020000
[3e4c22b21e53e47] jit-backend-dump}
[3e4c22b21e56fbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f63c8 +0  03030000
[3e4c22b21e57cd1] jit-backend-dump}
[3e4c22b21e5ae33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f63e7 +0  00030000
[3e4c22b21e5bb5b] jit-backend-dump}
[3e4c22b21e5eca7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f63fa +0  09030000
[3e4c22b21e5f9b4] jit-backend-dump}
[3e4c22b21e62bfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f640e +0  11030000
[3e4c22b21e63914] jit-backend-dump}
[3e4c22b21e66a5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f641b +0  20030000
[3e4c22b21e6778e] jit-backend-dump}
[3e4c22b21e6a8d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6431 +0  26030000
[3e4c22b21e6b5f0] jit-backend-dump}
[3e4c22b21e6e72b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6451 +0  22030000
[3e4c22b21e6f443] jit-backend-dump}
[3e4c22b21e7266f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f646f +0  20030000
[3e4c22b21e7337b] jit-backend-dump}
[3e4c22b21e764da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6481 +0  2A030000
[3e4c22b21e771f3] jit-backend-dump}
[3e4c22b21e7a383] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f64a0 +0  27030000
[3e4c22b21e7b08c] jit-backend-dump}
[3e4c22b21e7e1bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f64c4 +0  1F030000
[3e4c22b21e7eed0] jit-backend-dump}
[3e4c22b21e82108] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f64d8 +0  27030000
[3e4c22b21e82e20] jit-backend-dump}
[3e4c22b21e8620e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6d92 +0  7AF50200
[3e4c22b21e86f26] jit-backend-dump}
[3e4c22b21e8afec] jit-backend}
[3e4c22b21e8ebdb] {jit-log-opt-bridge
# bridge out of Guard 0x39085c0 with 62 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x47aa1a0>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x47a84e8>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x47a8530>) [p0, p1]
debug_merge_point(0, 0, 'lst5115')
+271: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+275: guard_nonnull_class(p6, 16616448, descr=<Guard0x47aa200>) [p0, p1]
+294: guard_class(p0, 16437352, descr=<Guard0x47a8578>) [p0, p1]
+314: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+325: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x47a85c0>) [p0, p1]
+334: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+334: guard_not_invalidated(descr=<Guard0x47a8608>) [p0, p1]
+334: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+338: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x47aa260>) [p0, p1]
+358: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand15 AppRand16) from (loop5 (cdr rads4) lst5115)')
+362: guard_class(p14, 16437896, descr=<Guard0x47a8650>) [p0, p1]
+376: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+387: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x47a8698>) [p0, p1]
+396: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+396: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+400: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+404: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (cons AppRand15 AppRand16)')
+408: guard_nonnull_class(p19, 16479200, descr=<Guard0x47aa2c0>) [p0, p1]
+427: guard_nonnull_class(p20, 16470384, descr=<Guard0x47aa320>) [p0, p1]
+446: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+457: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x47a86e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+466: guard_class(p21, 16437896, descr=<Guard0x47a8728>) [p0, p1]
+479: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+483: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x47aa380>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+501: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+505: p30 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+509: p31 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+513: p32 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+517: p33 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+521: guard_class(p33, 16505296, descr=<Guard0x47a8770>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+533: p35 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+544: guard_nonnull_class(p35, ConstClass(W_Fixnum), descr=<Guard0x47aa3e0>) [p0, p1]
+563: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x47aa440>) [p0, p1]
+581: i38 = getfield_gc_i(p35, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+592: i39 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+603: i40 = int_eq(i38, i39)
+606: guard_true(i40, descr=<Guard0x47a87b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+612: p41 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+630: guard_nonnull_class(p41, 16470384, descr=<Guard0x47aa4a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+648: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x47aa500>) [p6, p12, p41, p19, p32, p31, p30, p29, p20, p21, p33, p27]
+668: p44 = new_with_vtable(descr=<SizeDescr 24>)
+712: setfield_gc(p44, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+716: setfield_gc(p44, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+720: jump(p19, p41, p44, p27, p33, p21, p29, p30, p31, p20, p32, p20, p32, p31, p30, p29, p33, p35, i38, descr=TargetToken(61027200))
+848: --end of the loop--
[3e4c22b21ec3b8c] jit-log-opt-bridge}
[3e4c22b22a7a672] {jit-backend
[3e4c22b22b058b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6a
[3e4c22b22b0fd87] jit-backend-dump}
[3e4c22b22b1beaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6b74 +0  25000000
[3e4c22b22b1d3ca] jit-backend-dump}
[3e4c22b22b2172a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6ea5 +0  25000000
[3e4c22b22b22651] jit-backend-dump}
[3e4c22b22b25af6] {jit-backend-addr
bridge out of Guard 0x3dff640 has address 0x7f4a5c1f6b70 to 0x7f4a5c1f6ea0
       gc table: 0x7f4a5c1f6a40
    jump target: 0x7f4a5c1f6b70
         resops: 0x7f4a5c1f6b7e
       failures: 0x7f4a5c1f6ea0
            end: 0x7f4a5c1f7247
[3e4c22b22b27e9b] jit-backend-addr}
[3e4c22b22b2b594] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6b8e +0  51030000
[3e4c22b22b2c3e5] jit-backend-dump}
[3e4c22b22b2f8af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6ba5 +0  56030000
[3e4c22b22b30648] jit-backend-dump}
[3e4c22b22b33a3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6bb5 +0  62030000
[3e4c22b22b3478b] jit-backend-dump}
[3e4c22b22b37ab5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6bc1 +0  72030000
[3e4c22b22b387ef] jit-backend-dump}
[3e4c22b22b3b9f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6bd9 +0  76030000
[3e4c22b22b3c77d] jit-backend-dump}
[3e4c22b22b3f91c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6beb +0  80030000
[3e4c22b22b4068a] jit-backend-dump}
[3e4c22b22b437fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6c00 +0  87030000
[3e4c22b22b44570] jit-backend-dump}
[3e4c22b22b4af2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6c20 +0  83030000
[3e4c22b22b4be15] jit-backend-dump}
[3e4c22b22b4f45a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6c37 +0  A4030000
[3e4c22b22b501c8] jit-backend-dump}
[3e4c22b22b535b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6c4a +0  AD030000
[3e4c22b22b542d4] jit-backend-dump}
[3e4c22b22b57596] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6c5b +0  B8030000
[3e4c22b22b58262] jit-backend-dump}
[3e4c22b22b5b4bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6c6e +0  C1030000
[3e4c22b22b5c15a] jit-backend-dump}
[3e4c22b22b5f29b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6c78 +0  D3030000
[3e4c22b22b5ff20] jit-backend-dump}
[3e4c22b22b630d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6c85 +0  E2030000
[3e4c22b22b63d61] jit-backend-dump}
[3e4c22b22b66ed8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6c96 +0  ED030000
[3e4c22b22b67b80] jit-backend-dump}
[3e4c22b22b6ad37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6cac +0  F3030000
[3e4c22b22b6b9e8] jit-backend-dump}
[3e4c22b22b6eb72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6cc2 +0  F9030000
[3e4c22b22b6f80a] jit-backend-dump}
[3e4c22b22b729a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6cd8 +0  FF030000
[3e4c22b22b73638] jit-backend-dump}
[3e4c22b22b76833] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6ce1 +0  12040000
[3e4c22b22b774dd] jit-backend-dump}
[3e4c22b22b7a6a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6cf4 +0  1B040000
[3e4c22b22b7b339] jit-backend-dump}
[3e4c22b22b7e4ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6d01 +0  2A040000
[3e4c22b22b7f177] jit-backend-dump}
[3e4c22b22b8232e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6d0b +0  3C040000
[3e4c22b22b82fc3] jit-backend-dump}
[3e4c22b22b86119] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6d14 +0  4F040000
[3e4c22b22b86dae] jit-backend-dump}
[3e4c22b22b89edf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6d27 +0  58040000
[3e4c22b22b8ab74] jit-backend-dump}
[3e4c22b22b8dcbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6d3d +0  5E040000
[3e4c22b22b8e944] jit-backend-dump}
[3e4c22b22b91a5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6d46 +0  71040000
[3e4c22b22b926f1] jit-backend-dump}
[3e4c22b22b9581f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6d5d +0  76040000
[3e4c22b22b96566] jit-backend-dump}
[3e4c22b22b9967b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6d73 +0  7C040000
[3e4c22b22b9a326] jit-backend-dump}
[3e4c22b22b9d41d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6d8b +0  80040000
[3e4c22b22b9e09f] jit-backend-dump}
[3e4c22b22ba11dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f6da2 +0  85040000
[3e4c22b22ba1e72] jit-backend-dump}
[3e4c22b22ba51f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4ded +0  7F1D0100
[3e4c22b22ba5e9c] jit-backend-dump}
[3e4c22b22ba9ffa] jit-backend}
[3e4c22b22badd49] {jit-log-opt-bridge
# bridge out of Guard 0x3dff640 with 117 ops
[p0, p1]
+326: guard_class(p1, 16500016, descr=<Guard0x47aa560>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+342: guard_nonnull_class(p3, 16470384, descr=<Guard0x47aa5c0>) [p0, p1]
+368: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+371: guard_false(i6, descr=<Guard0x47a8848>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+377: guard_class(p0, 16437896, descr=<Guard0x47a8890>) [p0, p1]
+389: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+393: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x47aa620>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+413: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+417: guard_class(p10, 16478824, descr=<Guard0x47a88d8>) [p0, p1]
+431: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+443: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x47a8920>) [p0, p1]
+452: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+457: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+462: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+467: p17 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+472: guard_class(p17, 16505296, descr=<Guard0x47a8968>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+484: guard_not_invalidated(descr=<Guard0x47a89b0>) [p0, p1]
+484: p19 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+489: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x47aa680>) [p0, p1]
+507: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x47aa6e0>) [p0, p1]
+526: i22 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+530: i23 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+534: i24 = int_eq(i22, i23)
+537: guard_false(i24, descr=<Guard0x47a89f8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+543: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x47aa740>) [p0, p1]
+562: i27 = int_ge(i23, 0)
+566: guard_true(i27, descr=<Guard0x47a8a40>) [p0, p1]
+572: i28 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+576: i29 = int_lt(i23, i28)
+579: guard_true(i29, descr=<Guard0x47a8a88>) [p0, p1]
+585: p30 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+589: guard_class(p30, 16622984, descr=<Guard0x47a8ad0>) [p0, p1]
+602: p32 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+606: p33 = getarrayitem_gc_r(p32, i23, descr=<ArrayP 8>)
+611: guard_class(p33, 16470384, descr=<Guard0x47a8b18>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+624: p35 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+628: guard_nonnull_class(p35, 16616448, descr=<Guard0x47aa7a0>) [p0, p1]
+646: p37 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+650: guard_nonnull_class(p37, 16470384, descr=<Guard0x47aa800>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+668: i40 = instance_ptr_eq(p35, ConstPtr(ptr39))
+671: guard_true(i40, descr=<Guard0x47a8b60>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+677: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x47aa860>) [p0, p1]
+696: i42 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+700: i43 = int_eq(i23, i42)
+703: guard_false(i43, descr=<Guard0x47a8ba8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+709: i45 = int_ge(i42, 0)
+713: guard_true(i45, descr=<Guard0x47a8bf0>) [p0, p1]
+719: i46 = int_lt(i42, i28)
+722: guard_true(i46, descr=<Guard0x47a8c38>) [p0, p1]
+728: p47 = getarrayitem_gc_r(p32, i42, descr=<ArrayP 8>)
+733: guard_class(p47, 16470384, descr=<Guard0x47a8c80>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+747: p49 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+751: guard_nonnull_class(p49, 16616448, descr=<Guard0x47aa8c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+769: i52 = instance_ptr_eq(p49, ConstPtr(ptr51))
+772: guard_true(i52, descr=<Guard0x47a8cc8>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+778: p53 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+782: guard_nonnull_class(p53, ConstClass(W_Vector), descr=<Guard0x47aa920>) [p0, p1]
+801: p55 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+805: guard_nonnull_class(p55, ConstClass(W_Vector), descr=<Guard0x47aa980>) [p0, p1]
+823: p57 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+828: guard_nonnull_class(p57, ConstClass(W_Vector), descr=<Guard0x47aa9e0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+847: p59 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+852: guard_nonnull_class(p59, 16470384, descr=<Guard0x47aaa40>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+870: p61 = new_with_vtable(descr=<SizeDescr 32>)
+917: p62 = new_with_vtable(descr=<SizeDescr 40>)
+928: setfield_gc(p62, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+939: setfield_gc(p62, ConstPtr(ptr63), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+943: setfield_gc(p62, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+947: setfield_gc(p62, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+951: p64 = new_with_vtable(descr=<SizeDescr 48>)
+962: p65 = new_with_vtable(descr=<SizeDescr 32>)
+973: setfield_gc(p65, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+981: p68 = new_array_clear(4, descr=<ArrayP 8>)
+1014: setarrayitem_gc(p68, 0, ConstPtr(ptr70), descr=<ArrayP 8>)
+1018: setarrayitem_gc(p68, 1, p53, descr=<ArrayP 8>)
+1022: setarrayitem_gc(p68, 2, p55, descr=<ArrayP 8>)
+1026: setarrayitem_gc(p68, 3, p57, descr=<ArrayP 8>)
+1030: setfield_gc(p65, p68, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1041: setfield_gc(p65, ConstPtr(ptr74), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1045: setfield_gc(p61, p59, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1056: setfield_gc(p64, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1060: setfield_gc(p61, p62, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1064: setfield_gc(p61, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1068: setfield_gc(p64, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1072: setfield_gc(p64, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1083: setfield_gc(p64, ConstPtr(ptr75), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1087: setfield_gc(p64, p65, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1091: jump(p61, p64, descr=TargetToken(59469520))
+1120: --end of the loop--
[3e4c22b22c06bdb] jit-log-opt-bridge}
[3e4c22b22ef7766] {jit-backend
[3e4c22b22f52075] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f73d0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C4202000048FF0425F0D113048139700B01000F85000000004C8B71104D85F60F84000000004C8B2D0AFFFFFF4D39EE0F85000000004C8B69184983FD01720841817D00B09700000F850000000041813FC81800000F85000000004D8B77204C8B25F1FEFFFF4D39E60F85000000004D8B67284D8B77304D8B57184983FC01720841813C2420BA00000F85000000004983FE01720741813EB09700000F85000000004D8B4C24104C8B05D1FEFFFF4D39C10F850000000041813AC81800000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B4C2418498B7C2420498B742430498B5C2438498B542408813A102001000F8500000000498B4424284883F80172068138601400000F85000000004883FB017206813B601400000F85000000004C89AD300100004C8B68084C89A5380100004C8B63084D39E50F84000000004983F9017207418139F08C00000F85000000004983FC000F8C000000004C89B5400100004D8B71084D39F40F8D000000004D8B711841813EC8EB02000F85000000004D8B71104C8995480100004F8B54E61041813AB09700000F85000000004C8BA5400100004D8B7424104983FE01720741813EB09700000F85000000004C89B5580100004C8B9D300100004C899D600100004C8985400100004D89C84889D94889B5680100004889BD700100004D89CF48899578010000488985300100004C89AD500100004989F14C89E04C89D64989D4488B95480100004989DA4C8B9D380100004C899D4801000049BB40571D5C4A7F000041FFE30F1F84000000000048C7442408FFFFFF0049BB58721F5C4A7F00004C895D204D8D9B98D0FCFF41FFD3E998FDFFFFFF35B4FCFFFF49BB68721F5C4A7F000041534D8D9B98CDFCFF41FFE3FF35A0FCFFFF49BB78721F5C4A7F000041534D8D9B88CDFCFF41FFE3FF3594FCFFFF49BB88721F5C4A7F000041534D8D9B78CDFCFF41FFE3FF3580FCFFFF49BB98721F5C4A7F000041534D8D9B68CDFCFF41FFE3FF356CFCFFFF49BBA8721F5C4A7F000041534D8D9B58CDFCFF41FFE3FF3560FCFFFF49BBB8721F5C4A7F000041534D8D9B48CDFCFF41FFE3FF354CFCFFFF49BBC8721F5C4A7F000041534D8D9B38CDFCFF41FFE3FF3538FCFFFF49BBD8721F5C4A7F000041534D8D9B28CDFCFF41FFE3FF3524FCFFFF49BBE8721F5C4A7F000041534D8D9B18CDFCFF41FFE3FF3518FCFFFF49BBF8721F5C4A7F000041534D8D9B08CDFCFF41FFE3FF3504FCFFFF49BB08731F5C4A7F000041534D8D9BF8CCFCFF41FFE3FF35F0FBFFFF49BB18731F5C4A7F000041534D8D9BE8CCFCFF41FFE3FF35DCFBFFFF49BB28731F5C4A7F000041534D8D9BD8CCFCFF41FFE3FF35C8FBFFFF49BB38731F5C4A7F000041534D8D9BC8CCFCFF41FFE3FF35B4FBFFFF49BB48731F5C4A7F000041534D8D9BB8CCFCFF41FFE3FF35A0FBFFFF49BB58731F5C4A7F000041534D8D9BA8CCFCFF41FFE3FF358CFBFFFF49BB68731F5C4A7F000041534D8D9B98CCFCFF41FFE3FF3578FBFFFF49BB78731F5C4A7F000041534D8D9B88CCFCFF41FFE3FF3564FBFFFF49BB88731F5C4A7F000041534D8D9B78CCFCFF41FFE3FF3550FBFFFF49BB98731F5C4A7F000041534D8D9B68CCFCFF41FFE3FF353CFBFFFF49BBA8731F5C4A7F000041534D8D9B58CCFCFF41FFE3FF3528FBFFFF49BBB8731F5C4A7F000041534D8D9B48CCFCFF41FFE3
[3e4c22b22f5acb8] jit-backend-dump}
[3e4c22b22f66168] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f74a4 +0  28000000
[3e4c22b22f676b9] jit-backend-dump}
[3e4c22b22f6bcfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f76f5 +0  28000000
[3e4c22b22f6cdfb] jit-backend-dump}
[3e4c22b22f7058e] {jit-backend-addr
bridge out of Guard 0x3cf7700 has address 0x7f4a5c1f74a0 to 0x7f4a5c1f76f0
       gc table: 0x7f4a5c1f73d0
    jump target: 0x7f4a5c1f74a0
         resops: 0x7f4a5c1f74ae
       failures: 0x7f4a5c1f76f0
            end: 0x7f4a5c1f797e
[3e4c22b22f729f0] jit-backend-addr}
[3e4c22b22f76192] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f74be +0  54020000
[3e4c22b22f7708b] jit-backend-dump}
[3e4c22b22f7a48e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f74cb +0  63020000
[3e4c22b22f7b15d] jit-backend-dump}
[3e4c22b22f7e434] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f74db +0  6F020000
[3e4c22b22f7f0f4] jit-backend-dump}
[3e4c22b22f82394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f74f3 +0  73020000
[3e4c22b22f8306f] jit-backend-dump}
[3e4c22b22f862bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7500 +0  82020000
[3e4c22b22f86f98] jit-backend-dump}
[3e4c22b22f8a1ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7514 +0  8A020000
[3e4c22b22f8aed7] jit-backend-dump}
[3e4c22b22f8e30e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7534 +0  A2020000
[3e4c22b22f8f008] jit-backend-dump}
[3e4c22b22f922a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7547 +0  AB020000
[3e4c22b22f92f49] jit-backend-dump}
[3e4c22b22f96166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f755c +0  B2020000
[3e4c22b22f96e66] jit-backend-dump}
[3e4c22b22f99fd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7569 +0  C1020000
[3e4c22b22f9ac91] jit-backend-dump}
[3e4c22b22f9ddf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7580 +0  C6020000
[3e4c22b22f9eab6] jit-backend-dump}
[3e4c22b22fa1c2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f75a5 +0  BD020000
[3e4c22b22fa28f3] jit-backend-dump}
[3e4c22b22fa5a6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f75bc +0  C2020000
[3e4c22b22fa6709] jit-backend-dump}
[3e4c22b22fa987d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f75ce +0  CC020000
[3e4c22b22faa540] jit-backend-dump}
[3e4c22b22fad741] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f75ed +0  C9020000
[3e4c22b22fae3e2] jit-backend-dump}
[3e4c22b22fb155a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7600 +0  D2020000
[3e4c22b22fb21f8] jit-backend-dump}
[3e4c22b22fb5394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f760a +0  E4020000
[3e4c22b22fb6094] jit-backend-dump}
[3e4c22b22fb9258] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f761e +0  EC020000
[3e4c22b22fb9f0f] jit-backend-dump}
[3e4c22b22fbd09c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f762f +0  F7020000
[3e4c22b22fbdd62] jit-backend-dump}
[3e4c22b22fc0ed6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f764c +0  F6020000
[3e4c22b22fc1b8a] jit-backend-dump}
[3e4c22b22fc4d26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f766b +0  F3020000
[3e4c22b22fc59c4] jit-backend-dump}
[3e4c22b22fc8de0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9f4c +0  50D50100
[3e4c22b22fc9ad0] jit-backend-dump}
[3e4c22b22fcdbef] jit-backend}
[3e4c22b22fd1a26] {jit-log-opt-bridge
# bridge out of Guard 0x3cf7700 with 61 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x47aaaa0>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x47a8d10>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x47a8d58>) [p0, p1]
debug_merge_point(0, 0, 'lst5093')
+271: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+275: guard_nonnull_class(p6, 16470384, descr=<Guard0x47aab00>) [p0, p1]
+295: guard_class(p0, 16437896, descr=<Guard0x47a8da0>) [p0, p1]
+308: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+319: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x47a8de8>) [p0, p1]
+328: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+328: guard_not_invalidated(descr=<Guard0x47a8e30>) [p0, p1]
+328: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+332: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+336: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)')
+340: guard_nonnull_class(p12, 16479200, descr=<Guard0x47aab60>) [p0, p1]
+360: guard_nonnull_class(p13, 16470384, descr=<Guard0x47aabc0>) [p0, p1]
+379: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+391: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x47a8e78>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+400: guard_class(p14, 16437896, descr=<Guard0x47a8ec0>) [p0, p1]
+413: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+417: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x47aac20>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+436: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+441: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+446: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+451: p25 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+456: p26 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+461: guard_class(p26, 16505296, descr=<Guard0x47a8f08>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+473: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+478: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x47aac80>) [p0, p1]
+496: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x47aace0>) [p0, p1]
+514: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+525: i32 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+536: i33 = int_eq(i31, i32)
+539: guard_false(i33, descr=<Guard0x47a8f50>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+545: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x47aad40>) [p0, p1]
+564: i36 = int_ge(i32, 0)
+568: guard_true(i36, descr=<Guard0x47a8f98>) [p0, p1]
+574: i37 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+585: i38 = int_lt(i32, i37)
+588: guard_true(i38, descr=<Guard0x47a8fe0>) [p0, p1]
+594: p39 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+598: guard_class(p39, 16622984, descr=<Guard0x47a9028>) [p0, p1]
+611: p41 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+615: p42 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+627: guard_class(p42, 16470384, descr=<Guard0x47a9070>) [p0, p1]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+640: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+652: guard_nonnull_class(p44, 16470384, descr=<Guard0x47aada0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+671: jump(p12, p44, p6, p20, p26, p14, p22, p23, p24, p13, p25, p42, p25, p24, p23, p22, p26, p28, i31, descr=TargetToken(61027200))
+800: --end of the loop--
[3e4c22b23009794] jit-log-opt-bridge}
[3e4c22b235d5823] {jit-backend
[3e4c22b2364a860] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7b40 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8202000048FF0425207614044C8BBD3801000041813F101100000F85000000004D8B77084983FE01720741813E900F00000F8500000000813A301901000F85000000004C8B6A104C8B620841813C2420BA00000F85000000004D8B5424104C8B0DD9FEFFFF4D39CA0F85000000004D8B4C24284983F9017207418139601400000F85000000004D8B51084D39D50F8D000000004D8B5424184983FA01720741813A601400000F85000000004D8B6A084983ED010F80000000004D8B5424384983FA01720741813A30B700000F85000000004C8B62184983FC01720841813C24B09700000F85000000004D8B4A104C8B058AFEFFFF4D39C10F85000000004D8B42204983F8017207418138601400000F85000000004D8B48084D39CD0F8C00000000498B7A284883FF017206813F601400000F8500000000488B77084889F34883C6010F80000000004C89C84D01E90F80000000004889F148D1FE4889B53001000048D1E648898D400100004883F10248C1F93F483BB54001000041BF00000000410F95C74921CF4C03BD300100004D29CF0F80000000004D39FD0F8C000000004D8B7A0841813F102001000F85000000004889D94C29CB0F80000000004989D948D1FB4889DE48D1E34C898D300100004983F10249C1F93F4C89B540010000483B9D3001000041BE00000000410F95C64D21CE4901F64D39EE0F8C000000004C89EE4D01F50F80000000004901C50F80000000004C29E90F8000000000498D56FF4C8985480100004889BD580100004C8995300100004C8B9D400100004C899D500100004C89C34989FD4C89BD600100004C89BD400100004989F0514889F14C89E6415C41564989C65849BBE0721D5C4A7F000041FFE36666666666662E0F1F84000000000048C7442408FFFFFF0049BB88791F5C4A7F00004C895D204D8D9B68C9FCFF41FFD3E958FDFFFFFF3564FCFFFF49BB98791F5C4A7F000041534D8D9B68C6FCFF41FFE3FF3550FCFFFF49BBA8791F5C4A7F000041534D8D9B58C6FCFF41FFE3FF353CFCFFFF49BBB8791F5C4A7F000041534D8D9B48C6FCFF41FFE3FF3528FCFFFF49BBC8791F5C4A7F000041534D8D9B38C6FCFF41FFE3FF3514FCFFFF49BBD8791F5C4A7F000041534D8D9B28C6FCFF41FFE3FF3508FCFFFF49BBE8791F5C4A7F000041534D8D9B18C6FCFF41FFE3FF35F4FBFFFF49BBF8791F5C4A7F000041534D8D9B08C6FCFF41FFE3FF35E0FBFFFF49BB087A1F5C4A7F000041534D8D9BF8C5FCFF41FFE3FF35CCFBFFFF49BB187A1F5C4A7F000041534D8D9BE8C5FCFF41FFE3FF35B8FBFFFF49BB287A1F5C4A7F000041534D8D9BD8C5FCFF41FFE3FF35A4FBFFFF49BB387A1F5C4A7F000041534D8D9BC8C5FCFF41FFE3FF3590FBFFFF49BB487A1F5C4A7F000041534D8D9BB8C5FCFF41FFE3FF3584FBFFFF49BB587A1F5C4A7F000041534D8D9BA8C5FCFF41FFE3FF3570FBFFFF49BB687A1F5C4A7F000041534D8D9B98C5FCFF41FFE3FF355CFBFFFF49BB787A1F5C4A7F000041534D8D9B88C5FCFF41FFE3FF3548FBFFFF49BB887A1F5C4A7F000041534D8D9B78C5FCFF41FFE3FF3534FBFFFF49BB987A1F5C4A7F000041534D8D9B68C5FCFF41FFE3FF3520FBFFFF49BBA87A1F5C4A7F000041534D8D9B58C5FCFF41FFE3FF350CFBFFFF49BBB87A1F5C4A7F000041534D8D9B48C5FCFF41FFE3FF35F8FAFFFF49BBC87A1F5C4A7F000041534D8D9B38C5FCFF41FFE3FF35E4FAFFFF49BBD87A1F5C4A7F000041534D8D9B28C5FCFF41FFE3FF35D0FAFFFF49BBE87A1F5C4A7F000041534D8D9B18C5FCFF41FFE3FF35BCFAFFFF49BBF87A1F5C4A7F000041534D8D9B08C5FCFF41FFE3FF35A8FAFFFF49BB087B1F5C4A7F000041534D8D9BF8C4FCFF41FFE3FF3594FAFFFF49BB187B1F5C4A7F000041534D8D9BE8C4FCFF41FFE3FF3580FAFFFF49BB287B1F5C4A7F000041534D8D9BD8C4FCFF41FFE3
[3e4c22b23653e7c] jit-backend-dump}
[3e4c22b2365f246] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7c24 +0  28000000
[3e4c22b23660818] jit-backend-dump}
[3e4c22b23664d83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7eb5 +0  28000000
[3e4c22b23665cbf] jit-backend-dump}
[3e4c22b23669382] {jit-backend-addr
bridge out of Guard 0x3cec9f8 has address 0x7f4a5c1f7c20 to 0x7f4a5c1f7eb0
       gc table: 0x7f4a5c1f7b40
    jump target: 0x7f4a5c1f7c20
         resops: 0x7f4a5c1f7c2e
       failures: 0x7f4a5c1f7eb0
            end: 0x7f4a5c1f81ae
[3e4c22b2366b821] jit-backend-addr}
[3e4c22b2366ef98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7c46 +0  8C020000
[3e4c22b2366fe04] jit-backend-dump}
[3e4c22b236731fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7c5d +0  91020000
[3e4c22b23673f88] jit-backend-dump}
[3e4c22b23677809] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7c69 +0  BD020000
[3e4c22b236784fa] jit-backend-dump}
[3e4c22b2367b949] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7c7f +0  C3020000
[3e4c22b2367c640] jit-backend-dump}
[3e4c22b2367f902] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7c94 +0  CA020000
[3e4c22b236805b2] jit-backend-dump}
[3e4c22b23683859] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7cac +0  CE020000
[3e4c22b2368452b] jit-backend-dump}
[3e4c22b236877a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7cb9 +0  DD020000
[3e4c22b23688466] jit-backend-dump}
[3e4c22b2368b6a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7cd1 +0  E1020000
[3e4c22b2368c367] jit-backend-dump}
[3e4c22b2368f572] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7cdf +0  EF020000
[3e4c22b23690244] jit-backend-dump}
[3e4c22b2369345a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7cf7 +0  F3020000
[3e4c22b2369411d] jit-backend-dump}
[3e4c22b236973e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7d0f +0  F7020000
[3e4c22b236980ab] jit-backend-dump}
[3e4c22b2369b2fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7d23 +0  FF020000
[3e4c22b2369bf91] jit-backend-dump}
[3e4c22b2369f189] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7d3a +0  04030000
[3e4c22b2369fdff] jit-backend-dump}
[3e4c22b236a3000] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7d47 +0  13030000
[3e4c22b236a3c8f] jit-backend-dump}
[3e4c22b236a6eaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7d5d +0  19030000
[3e4c22b236a7b41] jit-backend-dump}
[3e4c22b236aad6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7d6e +0  24030000
[3e4c22b236ab9e6] jit-backend-dump}
[3e4c22b236aec0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7d7a +0  34030000
[3e4c22b236af89b] jit-backend-dump}
[3e4c22b236b2acd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7dbd +0  0D030000
[3e4c22b236b3759] jit-backend-dump}
[3e4c22b236b697f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7dc6 +0  20030000
[3e4c22b236b75f5] jit-backend-dump}
[3e4c22b236ba7e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7dd7 +0  2B030000
[3e4c22b236bb473] jit-backend-dump}
[3e4c22b236be674] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7de3 +0  3B030000
[3e4c22b236bf2e7] jit-backend-dump}
[3e4c22b236c24fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7e25 +0  15030000
[3e4c22b236c3207] jit-backend-dump}
[3e4c22b236c6402] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7e31 +0  25030000
[3e4c22b236c707e] jit-backend-dump}
[3e4c22b236ca2c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7e3a +0  38030000
[3e4c22b236caf55] jit-backend-dump}
[3e4c22b236ce147] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f7e43 +0  4B030000
[3e4c22b236cedba] jit-backend-dump}
[3e4c22b236d2278] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7223 +0  F9090200
[3e4c22b236d2f2e] jit-backend-dump}
[3e4c22b236d6fee] jit-backend}
[3e4c22b236dae1f] {jit-log-opt-bridge
# bridge out of Guard 0x3cec9f8 with 107 ops
[p0, p1]
+246: guard_class(p1, 16435920, descr=<Guard0x47aae00>) [p0, p1]
+266: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+270: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x47aae60>) [p0, p1]
debug_merge_point(0, 0, '(< nc35240 start)')
+289: guard_not_invalidated(descr=<Guard0x47a9100>) [p0, p1]
+289: guard_class(p0, 16503536, descr=<Guard0x47a9148>) [p0, p1]
+301: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+305: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+309: guard_class(p7, 16479200, descr=<Guard0x47a9190>) [p0, p1]
+323: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+335: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x47a91d8>) [p0, p1]
+344: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+349: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x47aaec0>) [p0, p1]
+368: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+372: i14 = int_lt(i6, i13)
+375: guard_true(i14, descr=<Guard0x47a9220>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41))')
debug_merge_point(0, 0, '(- nc25224 1)')
+381: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+386: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x47aaf20>) [p0, p1]
+405: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+409: i19 = int_sub_ovf(i17, 1)
+413: guard_no_overflow(descr=<Guard0x47a9268>) [p0, p1]
debug_merge_point(0, 0, '(loop25220 lst5238 AppRand41)')
+419: p20 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+424: guard_nonnull_class(p20, 16478448, descr=<Guard0x47aaf80>) [p0, p1]
+443: p22 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+447: guard_nonnull_class(p22, 16470384, descr=<Guard0x47aafe0>) [p0, p1]
+467: p24 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+478: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x47a92b0>) [p0, p1]
+487: p26 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+487: p27 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+491: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x47ab040>) [p0, p1]
+510: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+514: i30 = int_lt(i19, i29)
+517: guard_false(i30, descr=<Guard0x47a92f8>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))))')
debug_merge_point(0, 0, '(+ m5210 1)')
+523: p31 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+527: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x47ab0a0>) [p0, p1]
+545: i33 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+549: i35 = int_add_ovf(i33, 1)
+556: guard_no_overflow(descr=<Guard0x47a9340>) [p0, p1]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
+562: i36 = int_add_ovf(i29, i19)
+568: guard_no_overflow(descr=<Guard0x47a9388>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))')
debug_merge_point(0, 0, '(- (quotient AppRand38 2) AppRand39)')
+574: i38 = int_rshift(i35, 1)
+580: i40 = int_lshift(i38, 1)
+590: i42 = int_xor(i35, 2)
+601: i44 = int_rshift(i42, 63)
+605: i45 = int_ne(i40, i35)
+622: i46 = int_and(i44, i45)
+625: i47 = int_add(i38, i46)
+632: i48 = int_sub_ovf(i47, i36)
+635: guard_no_overflow(descr=<Guard0x47a93d0>) [p0, p1]
debug_merge_point(0, 0, '(let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))')
debug_merge_point(0, 0, '(max nc25224 AppRand40)')
+641: i49 = int_lt(i19, i48)
+644: guard_false(i49, descr=<Guard0x47a9418>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))')
debug_merge_point(0, 0, '(lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))')
+650: p50 = getfield_gc_r(p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+654: guard_class(p50, 16505296, descr=<Guard0x47a9460>) [p0, p1]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
debug_merge_point(0, 0, '(let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))')
debug_merge_point(0, 0, '(- m5210 AppRand47)')
+667: i52 = int_sub_ovf(i33, i36)
+673: guard_no_overflow(descr=<Guard0x47a94a8>) [p0, p1]
debug_merge_point(0, 0, '(loop35236 lst5222 (quotient AppRand48 2))')
+679: i54 = int_eq(i52, -9223372036854775808)
+679: i56 = int_rshift(i52, 1)
+685: i58 = int_lshift(i56, 1)
+691: i60 = int_xor(i52, 2)
+702: i62 = int_rshift(i60, 63)
+706: i63 = int_ne(i58, i52)
+730: i64 = int_and(i62, i63)
+733: i65 = int_add(i56, i64)
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
debug_merge_point(0, 0, '(< nc35240 start)')
+736: i66 = int_lt(i65, i19)
+739: guard_false(i66, descr=<Guard0x47a94f0>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+745: i67 = int_add_ovf(i19, i65)
+751: guard_no_overflow(descr=<Guard0x47a9538>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+757: i68 = int_add_ovf(i29, i67)
+760: guard_no_overflow(descr=<Guard0x47a9580>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+766: i69 = int_sub_ovf(i33, i68)
+769: guard_no_overflow(descr=<Guard0x47a95c8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+775: i71 = int_sub(i65, 1)
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+779: jump(p50, i19, p27, i19, p31, p20, i71, i29, i65, i69, p22, p1, p3, p27, p31, p50, descr=TargetToken(61027360))
+880: --end of the loop--
[3e4c22b2372b427] jit-log-opt-bridge}
[3e4c22b2389ea81] {jit-backend
[3e4c22b2390a100] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f82b0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C0202000048FF0425A07614048139C81800000F85000000004C8B79204C8B354BFFFFFF4D39F70F85000000004C8B71284C8B79304C8B69184983FE01720741813E20BA00000F85000000004983FF01720741813FB09700000F85000000004D8B66104C8B152DFFFFFF4D39D40F850000000041817D00C81800000F85000000004D8B55084983FA01720741813A900F00000F85000000004D8B66184D8B4E284D8B4630498B7E38498B7608813E102001000F8500000000498B5E204883FB017206813B601400000F85000000004983F8017207418138601400000F85000000004C89B5400100004C8B7308498B58084939DE0F8500000000498B5F104883FB017206813BB09700000F85000000004989D6488B0C25F091F900488D91C8000000483B14251092F9000F87FE00000048891425F091F90048C701700B0100488D512048C702B097000048898D30010000488B8D3801000048894A08488D4A1848C701B0970000488941084C89711048894A104C8D711849C706C8180000498D4E3848C70120BA000048897108488B054CFEFFFF488941104C8961184C8949204C8941284C89793048897938488B3D35FEFFFF49897E204989761049894E284D897E304D896E184D8956084C8B95300100004C8BAD400100004D896A0849895A10498952184C8995300100004C89B53801000049BBE07B1D5C4A7F000041FFE30F1F84000000000048C7442408FFFFFF0049BBB8811F5C4A7F00004C895D204D8D9B38C1FCFF41FFD3E9D8FDFFFF49BB98821F5C4A7F00004C895D204D8D9B58C8FCFF41FFD3E9EDFEFFFFFF3517FDFFFF49BBC8811F5C4A7F000041534D8D9B38BEFCFF41FFE3FF350BFDFFFF49BBD8811F5C4A7F000041534D8D9B28BEFCFF41FFE3FF35F7FCFFFF49BBE8811F5C4A7F000041534D8D9B18BEFCFF41FFE3FF35E3FCFFFF49BBF8811F5C4A7F000041534D8D9B08BEFCFF41FFE3FF35CFFCFFFF49BB08821F5C4A7F000041534D8D9BF8BDFCFF41FFE3FF35C3FCFFFF49BB18821F5C4A7F000041534D8D9BE8BDFCFF41FFE3FF35AFFCFFFF49BB28821F5C4A7F000041534D8D9BD8BDFCFF41FFE3FF359BFCFFFF49BB38821F5C4A7F000041534D8D9BC8BDFCFF41FFE3FF3587FCFFFF49BB48821F5C4A7F000041534D8D9BB8BDFCFF41FFE3FF3573FCFFFF49BB58821F5C4A7F000041534D8D9BA8BDFCFF41FFE3FF355FFCFFFF49BB68821F5C4A7F000041534D8D9B98BDFCFF41FFE3FF354BFCFFFF49BB78821F5C4A7F000041534D8D9B88BDFCFF41FFE3FF3537FCFFFF49BB88821F5C4A7F000041534D8D9B78BDFCFF41FFE3
[3e4c22b239113af] jit-backend-dump}
[3e4c22b2391bc1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8344 +0  28000000
[3e4c22b2391d0af] jit-backend-dump}
[3e4c22b239211da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8555 +0  28000000
[3e4c22b2392205f] jit-backend-dump}
[3e4c22b2392566a] {jit-backend-addr
bridge out of Guard 0x40d9b80 has address 0x7f4a5c1f8340 to 0x7f4a5c1f8550
       gc table: 0x7f4a5c1f82b0
    jump target: 0x7f4a5c1f8340
         resops: 0x7f4a5c1f834e
       failures: 0x7f4a5c1f8550
            end: 0x7f4a5c1f86ff
[3e4c22b239279c2] jit-backend-addr}
[3e4c22b2392b066] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f835e +0  31020000
[3e4c22b2392beb3] jit-backend-dump}
[3e4c22b2392f4a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8372 +0  39020000
[3e4c22b23930217] jit-backend-dump}
[3e4c22b23933868] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8391 +0  52020000
[3e4c22b2393458a] jit-backend-dump}
[3e4c22b23937944] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f83a4 +0  5B020000
[3e4c22b23938637] jit-backend-dump}
[3e4c22b2393b9f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f83b8 +0  63020000
[3e4c22b2393c6cf] jit-backend-dump}
[3e4c22b2393fa33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f83c6 +0  71020000
[3e4c22b2394072d] jit-backend-dump}
[3e4c22b23943a51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f83dd +0  76020000
[3e4c22b2394475a] jit-backend-dump}
[3e4c22b23947a87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f83fd +0  72020000
[3e4c22b239487c1] jit-backend-dump}
[3e4c22b2394ba1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8413 +0  78020000
[3e4c22b2394c706] jit-backend-dump}
[3e4c22b2394f9c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8426 +0  81020000
[3e4c22b23950681] jit-backend-dump}
[3e4c22b23953898] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f843e +0  85020000
[3e4c22b23954564] jit-backend-dump}
[3e4c22b2395773a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8454 +0  8B020000
[3e4c22b23958400] jit-backend-dump}
[3e4c22b2395b85c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ed644 +0  F8AC0000
[3e4c22b2395c537] jit-backend-dump}
[3e4c22b23960788] jit-backend}
[3e4c22b239644f8] {jit-log-opt-bridge
# bridge out of Guard 0x40d9b80 with 67 ops
[p0, p1, p2, p3, p4]
+166: guard_class(p0, 16437896, descr=<Guard0x47ab100>) [p0, p1, p2, p3, p4]
+178: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+189: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x47a9610>) [p0, p1, p2, p3, p4]
+198: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+198: guard_not_invalidated(descr=<Guard0x47a9658>) [p0, p1, p2, p3, p4]
+198: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+202: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+206: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop25089 AppRand23 AppRand24) from (cons AppRand15 AppRand16)')
+210: guard_nonnull_class(p9, 16479200, descr=<Guard0x47ab160>) [p0, p1, p2, p3, p4]
+229: guard_nonnull_class(p10, 16470384, descr=<Guard0x47ab1c0>) [p0, p1, p2, p3, p4]
+248: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+259: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x47a96a0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 AppRand23 AppRand24)')
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+268: guard_class(p11, 16437896, descr=<Guard0x47a96e8>) [p0, p1, p2, p3, p4]
+282: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+286: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x47ab220>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+305: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+309: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+313: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+317: p22 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+321: p23 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+325: guard_class(p23, 16505296, descr=<Guard0x47a9730>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+337: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+341: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x47ab280>) [p0, p1, p2, p3, p4]
+359: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x47ab2e0>) [p0, p1, p2, p3, p4]
+378: i28 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+389: i29 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+393: i30 = int_eq(i28, i29)
+396: guard_true(i30, descr=<Guard0x47a9778>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+402: p31 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+406: guard_nonnull_class(p31, 16470384, descr=<Guard0x47ab340>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+424: p33 = new_with_vtable(descr=<SizeDescr 32>)
+471: p34 = new_with_vtable(descr=<SizeDescr 24>)
+482: setfield_gc(p34, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+500: p35 = new_with_vtable(descr=<SizeDescr 24>)
+511: setfield_gc(p35, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+515: setfield_gc(p35, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+519: setfield_gc(p34, p35, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+523: p36 = new_with_vtable(descr=<SizeDescr 56>)
+534: p37 = new_with_vtable(descr=<SizeDescr 64>)
+545: setfield_gc(p37, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+556: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+560: setfield_gc(p37, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+564: setfield_gc(p37, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+568: setfield_gc(p37, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+572: setfield_gc(p37, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+576: setfield_gc(p37, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+587: setfield_gc(p36, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+591: setfield_gc(p36, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+595: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+599: setfield_gc(p36, p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+603: setfield_gc(p36, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+607: setfield_gc(p36, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+611: setfield_gc(p33, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+629: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+633: setfield_gc(p33, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+637: jump(p33, p36, descr=TargetToken(61027440))
+672: --end of the loop--
[3e4c22b2399f71a] jit-log-opt-bridge}
[3e4c22b24012436] {jit-backend
[3e4c22b2407adff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8790 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CE201000048FF0425508114044C8BB5300100004D8B6E10488B1D90FFFFFF4939DD0F8500000000498B5E204883FB017206813B601400000F85000000004D8B6E304983FD01720841817D00601400000F8500000000488B4B08498B5D084839D90F8500000000498B5E08498B4F104883F9017206813940D202000F85000000004989D548898D38010000488B0C25F091F900488D9110010000483B14251092F9000F876501000048891425F091F90048C701700B0100488D512048C702C818000048898D48010000488D4A3848C701C818000048899550010000488B9540010000488951084C8961104C8969184C8B2DEAFEFFFF4C8969204C89BD580100004C8D793849C70720BA00004D8967084C8B25D1FEFFFF4D8967104D89471849897F204D894F28498947304D8957384C89792848894130498D474048C70020BA00004C8BBD800100004C8978084C8960104C8BA5780100004C8960184C8BA5700100004C89602048897028488BB558010000488970304C8BA5680100004C8960384C8BA5480100004D897424084C8BB5380100004D897424104C8BB5600100004D897424184C8BB5500100004989560849895E1049894E184D896E2049894628498976304C89A5300100004C89B53801000049BBE07B1D5C4A7F000041FFE3660F1F84000000000048C7442408FFFFFF0049BB08871F5C4A7F00004C895D204D8D9BE8BBFCFF41FFD3E9F8FDFFFF49BB78871F5C4A7F00004C895D204D8D9B78C3FCFF41FFD3E986FEFFFFFF3577FDFFFF49BB18871F5C4A7F000041534D8D9BE8B8FCFF41FFE3FF356BFDFFFF49BB28871F5C4A7F000041534D8D9BD8B8FCFF41FFE3FF3557FDFFFF49BB38871F5C4A7F000041534D8D9BC8B8FCFF41FFE3FF3543FDFFFF49BB48871F5C4A7F000041534D8D9BB8B8FCFF41FFE3FF352FFDFFFF49BB58871F5C4A7F000041534D8D9BA8B8FCFF41FFE3FF351BFDFFFF49BB68871F5C4A7F000041534D8D9B98B8FCFF41FFE3
[3e4c22b24080b41] jit-backend-dump}
[3e4c22b2408c1ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f87e4 +0  28000000
[3e4c22b2408d86c] jit-backend-dump}
[3e4c22b24091d0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f89d5 +0  28000000
[3e4c22b24092c59] jit-backend-dump}
[3e4c22b24096518] {jit-backend-addr
bridge out of Guard 0x3cf65c0 has address 0x7f4a5c1f87e0 to 0x7f4a5c1f89d0
       gc table: 0x7f4a5c1f8790
    jump target: 0x7f4a5c1f87e0
         resops: 0x7f4a5c1f87ee
       failures: 0x7f4a5c1f89d0
            end: 0x7f4a5c1f8abb
[3e4c22b24098936] jit-backend-addr}
[3e4c22b2409c3cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f880d +0  1E020000
[3e4c22b2409d2e9] jit-backend-dump}
[3e4c22b240a0947] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8823 +0  24020000
[3e4c22b240a16d4] jit-backend-dump}
[3e4c22b240a4b8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f883b +0  28020000
[3e4c22b240a58ad] jit-backend-dump}
[3e4c22b240a8af7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f884c +0  33020000
[3e4c22b240a9810] jit-backend-dump}
[3e4c22b240ac9e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8866 +0  35020000
[3e4c22b240ad70b] jit-backend-dump}
[3e4c22b240b0c68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7d83 +0  590A0200
[3e4c22b240b1992] jit-backend-dump}
[3e4c22b240b5a86] jit-backend}
[3e4c22b240b9916] {jit-log-opt-bridge
# bridge out of Guard 0x3cf65c0 with 55 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15]
+102: guard_not_invalidated(descr=<Guard0x47ab3a0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15]
+102: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+120: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x47a97c0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15]
+129: p18 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+133: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x47ab400>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15]
+151: p20 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+155: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x47ab460>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15]
+175: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+179: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+183: i24 = int_eq(i22, i23)
+186: guard_true(i24, descr=<Guard0x47a9808>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
+192: p25 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+196: p26 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+200: guard_nonnull_class(p26, 16616448, descr=<Guard0x47ab4c0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+218: p28 = new_with_vtable(descr=<SizeDescr 32>)
+272: p29 = new_with_vtable(descr=<SizeDescr 56>)
+283: p30 = new_with_vtable(descr=<SizeDescr 56>)
+301: setfield_gc(p30, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+319: setfield_gc(p30, p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+323: setfield_gc(p30, p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+334: setfield_gc(p30, ConstPtr(ptr31), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+338: p32 = new_with_vtable(descr=<SizeDescr 64>)
+356: setfield_gc(p32, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+367: setfield_gc(p32, ConstPtr(ptr33), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+371: setfield_gc(p32, p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+375: setfield_gc(p32, p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+379: setfield_gc(p32, p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+383: setfield_gc(p32, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+387: setfield_gc(p32, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+391: setfield_gc(p30, p32, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+395: setfield_gc(p30, p9, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+399: p34 = new_with_vtable(descr=<SizeDescr 64>)
+410: setfield_gc(p34, p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+421: setfield_gc(p34, ConstPtr(ptr35), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+425: setfield_gc(p34, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+436: setfield_gc(p34, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+447: setfield_gc(p34, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+451: setfield_gc(p34, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+462: setfield_gc(p34, p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+473: setfield_gc(p28, p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+485: setfield_gc(p28, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+497: setfield_gc(p28, p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+509: setfield_gc(p29, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+520: setfield_gc(p29, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+524: setfield_gc(p29, p30, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+528: setfield_gc(p29, ConstPtr(ptr36), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+532: setfield_gc(p29, p34, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+536: setfield_gc(p29, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+540: jump(p28, p29, descr=TargetToken(61027440))
+576: --end of the loop--
[3e4c22b240e9b56] jit-log-opt-bridge}
[3e4c22b246830ed] {jit-backend
[3e4c22b247a44bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8c
[3e4c22b247ad81c] jit-backend-dump}
[3e4c22b247b8dcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8d84 +0  25000000
[3e4c22b247ba424] jit-backend-dump}
[3e4c22b247be763] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9055 +0  25000000
[3e4c22b247bf671] jit-backend-dump}
[3e4c22b247c2d99] {jit-backend-addr
bridge out of Guard 0x3d7e500 has address 0x7f4a5c1f8d80 to 0x7f4a5c1f9050
       gc table: 0x7f4a5c1f8c80
    jump target: 0x7f4a5c1f8d80
         resops: 0x7f4a5c1f8d8e
       failures: 0x7f4a5c1f9050
            end: 0x7f4a5c1f934f
[3e4c22b247c5269] jit-backend-addr}
[3e4c22b247c8acc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8d9e +0  F1020000
[3e4c22b247c992e] jit-backend-dump}
[3e4c22b247ccf1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8db5 +0  F6020000
[3e4c22b247cdc52] jit-backend-dump}
[3e4c22b247d0fb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8dc5 +0  02030000
[3e4c22b247d1cdb] jit-backend-dump}
[3e4c22b247d4f04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8dd1 +0  12030000
[3e4c22b247d5c1f] jit-backend-dump}
[3e4c22b247d8fc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8de9 +0  16030000
[3e4c22b247d9cf7] jit-backend-dump}
[3e4c22b247dd0df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8dfb +0  20030000
[3e4c22b247dde04] jit-backend-dump}
[3e4c22b247e12a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8e10 +0  27030000
[3e4c22b247e201a] jit-backend-dump}
[3e4c22b247e5313] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8e30 +0  23030000
[3e4c22b247e608a] jit-backend-dump}
[3e4c22b247e9459] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8e47 +0  44030000
[3e4c22b247ea1af] jit-backend-dump}
[3e4c22b247ed4e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8e5a +0  4D030000
[3e4c22b247ee210] jit-backend-dump}
[3e4c22b247f1552] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8e6b +0  58030000
[3e4c22b247f224f] jit-backend-dump}
[3e4c22b247f5533] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8e83 +0  5C030000
[3e4c22b247f6217] jit-backend-dump}
[3e4c22b247f94f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8e9a +0  61030000
[3e4c22b247fa1ee] jit-backend-dump}
[3e4c22b247fd4ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8ea3 +0  74030000
[3e4c22b247fe179] jit-backend-dump}
[3e4c22b2480eabb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8eb6 +0  7D030000
[3e4c22b2480fa2e] jit-backend-dump}
[3e4c22b248131d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8ec3 +0  8C030000
[3e4c22b24813f8b] jit-backend-dump}
[3e4c22b24817427] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8ed6 +0  95030000
[3e4c22b24818195] jit-backend-dump}
[3e4c22b2481b5b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8ee0 +0  A7030000
[3e4c22b2481c2c9] jit-backend-dump}
[3e4c22b2481f6db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8eed +0  B6030000
[3e4c22b248203cc] jit-backend-dump}
[3e4c22b248236da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8efd +0  C2030000
[3e4c22b248243e3] jit-backend-dump}
[3e4c22b24827704] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8f13 +0  C8030000
[3e4c22b24828407] jit-backend-dump}
[3e4c22b2482b72b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8f2a +0  CD030000
[3e4c22b2482c41c] jit-backend-dump}
[3e4c22b2482f73c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8f40 +0  D3030000
[3e4c22b2483042d] jit-backend-dump}
[3e4c22b2483372f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f8f57 +0  D8030000
[3e4c22b24834426] jit-backend-dump}
[3e4c22b24837aa5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc18e +0  EECB0100
[3e4c22b24838796] jit-backend-dump}
[3e4c22b2483caf7] jit-backend}
[3e4c22b248409ca] {jit-log-opt-bridge
# bridge out of Guard 0x3d7e500 with 105 ops
[p0, p1]
+278: guard_class(p1, 16500016, descr=<Guard0x47ab760>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull_class(p3, 16470384, descr=<Guard0x47aba60>) [p0, p1]
+320: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+323: guard_false(i6, descr=<Guard0x47a9c40>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+329: guard_class(p0, 16437896, descr=<Guard0x47a9bf8>) [p0, p1]
+341: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+345: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x47aba00>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+365: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p10, 16478824, descr=<Guard0x47a9bb0>) [p0, p1]
+383: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+395: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x47a9b68>) [p0, p1]
+404: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+409: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+414: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+419: p17 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+424: guard_class(p17, 16505296, descr=<Guard0x47a9b20>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+436: guard_not_invalidated(descr=<Guard0x47a9ad8>) [p0, p1]
+436: p19 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+441: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x47ab9a0>) [p0, p1]
+459: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x47ab940>) [p0, p1]
+478: i22 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+482: i23 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+486: i24 = int_eq(i22, i23)
+489: guard_true(i24, descr=<Guard0x47a9a90>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+495: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+499: guard_nonnull_class(p25, 16616448, descr=<Guard0x47ab8e0>) [p0, p1]
+519: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+523: guard_nonnull_class(p27, 16470384, descr=<Guard0x47ab880>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+542: i30 = instance_ptr_eq(p25, ConstPtr(ptr29))
+545: guard_true(i30, descr=<Guard0x47a9a48>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+551: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x47ab820>) [p0, p1]
+570: i32 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+574: i33 = int_eq(i23, i32)
+577: guard_false(i33, descr=<Guard0x47a9a00>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+583: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x47ab7c0>) [p0, p1]
+602: i36 = int_ge(i32, 0)
+606: guard_true(i36, descr=<Guard0x47a99b8>) [p0, p1]
+612: i37 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+616: i38 = int_lt(i32, i37)
+619: guard_true(i38, descr=<Guard0x47a9970>) [p0, p1]
+625: p39 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+629: guard_class(p39, 16622984, descr=<Guard0x47a9928>) [p0, p1]
+641: p41 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+645: p42 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+650: guard_class(p42, 16470384, descr=<Guard0x47a98e0>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+663: p44 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+667: guard_nonnull_class(p44, ConstClass(W_Vector), descr=<Guard0x47ab700>) [p0, p1]
+686: p46 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+690: guard_nonnull_class(p46, ConstClass(W_Vector), descr=<Guard0x47ab6a0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+708: p48 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+712: guard_nonnull_class(p48, 16470384, descr=<Guard0x47ab640>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+731: p50 = new_with_vtable(descr=<SizeDescr 32>)
+775: p51 = new_with_vtable(descr=<SizeDescr 40>)
+786: setfield_gc(p51, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+797: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+801: setfield_gc(p51, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+805: setfield_gc(p51, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+809: p53 = new_with_vtable(descr=<SizeDescr 48>)
+820: p54 = new_with_vtable(descr=<SizeDescr 32>)
+831: setfield_gc(p54, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+839: p57 = new_array_clear(4, descr=<ArrayP 8>)
+867: setarrayitem_gc(p57, 0, ConstPtr(ptr59), descr=<ArrayP 8>)
+872: setarrayitem_gc(p57, 1, p44, descr=<ArrayP 8>)
+877: setarrayitem_gc(p57, 2, p44, descr=<ArrayP 8>)
+882: setarrayitem_gc(p57, 3, p46, descr=<ArrayP 8>)
+887: setfield_gc(p54, p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+898: setfield_gc(p54, ConstPtr(ptr63), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+902: setfield_gc(p50, p48, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+906: setfield_gc(p53, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+910: setfield_gc(p50, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+914: setfield_gc(p50, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+918: setfield_gc(p53, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+922: setfield_gc(p53, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+933: setfield_gc(p53, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+937: setfield_gc(p53, p54, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+941: jump(p50, p53, descr=TargetToken(59469520))
+976: --end of the loop--
[3e4c22b2488813d] jit-log-opt-bridge}
[3e4c22b24dad93e] {jit-backend
[3e4c22b24e2fa45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f
[3e4c22b24e38d8f] jit-backend-dump}
[3e4c22b24e44793] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9614 +0  25000000
[3e4c22b24e45cf3] jit-backend-dump}
[3e4c22b24e4a136] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f98e5 +0  25000000
[3e4c22b24e4b03e] jit-backend-dump}
[3e4c22b24e4e72e] {jit-backend-addr
bridge out of Guard 0x3d73460 has address 0x7f4a5c1f9610 to 0x7f4a5c1f98e0
       gc table: 0x7f4a5c1f9510
    jump target: 0x7f4a5c1f9610
         resops: 0x7f4a5c1f961e
       failures: 0x7f4a5c1f98e0
            end: 0x7f4a5c1f9bdf
[3e4c22b24e50bec] jit-backend-addr}
[3e4c22b24e54506] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f962e +0  F1020000
[3e4c22b24e553b6] jit-backend-dump}
[3e4c22b24e58900] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9645 +0  F6020000
[3e4c22b24e59634] jit-backend-dump}
[3e4c22b24e5c8fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9655 +0  02030000
[3e4c22b24e5d642] jit-backend-dump}
[3e4c22b24e6084d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9661 +0  12030000
[3e4c22b24e61596] jit-backend-dump}
[3e4c22b24e64794] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9679 +0  16030000
[3e4c22b24e654ff] jit-backend-dump}
[3e4c22b24e686ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f968b +0  20030000
[3e4c22b24e69416] jit-backend-dump}
[3e4c22b24e6c5ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f96a0 +0  27030000
[3e4c22b24e6d323] jit-backend-dump}
[3e4c22b24e704e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f96c0 +0  23030000
[3e4c22b24e7121e] jit-backend-dump}
[3e4c22b24e7477b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f96d7 +0  44030000
[3e4c22b24e754ec] jit-backend-dump}
[3e4c22b24e78973] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f96ea +0  4D030000
[3e4c22b24e79706] jit-backend-dump}
[3e4c22b24e7c9e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f96fb +0  58030000
[3e4c22b24e7d71a] jit-backend-dump}
[3e4c22b24e808fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9713 +0  5C030000
[3e4c22b24e81631] jit-backend-dump}
[3e4c22b24e84894] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f972a +0  61030000
[3e4c22b24e855dd] jit-backend-dump}
[3e4c22b24e8879b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9733 +0  74030000
[3e4c22b24e894c0] jit-backend-dump}
[3e4c22b24e8c6b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9746 +0  7D030000
[3e4c22b24e8d3e0] jit-backend-dump}
[3e4c22b24e905c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9753 +0  8C030000
[3e4c22b24e912ea] jit-backend-dump}
[3e4c22b24e944a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9766 +0  95030000
[3e4c22b24e951b7] jit-backend-dump}
[3e4c22b24e98394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9770 +0  A7030000
[3e4c22b24e990af] jit-backend-dump}
[3e4c22b24e9c2e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f977d +0  B6030000
[3e4c22b24e9d000] jit-backend-dump}
[3e4c22b24ea0223] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f978d +0  C2030000
[3e4c22b24ea0f3b] jit-backend-dump}
[3e4c22b24ea410b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f97a3 +0  C8030000
[3e4c22b24ea4e21] jit-backend-dump}
[3e4c22b24ea8037] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f97ba +0  CD030000
[3e4c22b24ea8d59] jit-backend-dump}
[3e4c22b24eabf48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f97d0 +0  D3030000
[3e4c22b24eaccaa] jit-backend-dump}
[3e4c22b24eafeae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f97e7 +0  D8030000
[3e4c22b24eb0bc6] jit-backend-dump}
[3e4c22b24eb3fd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dc0cd +0  3FD50100
[3e4c22b24eb4d56] jit-backend-dump}
[3e4c22b24eb9092] jit-backend}
[3e4c22b24ebce8c] {jit-log-opt-bridge
# bridge out of Guard 0x3d73460 with 105 ops
[p0, p1]
+278: guard_class(p1, 16500016, descr=<Guard0x47abac0>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull_class(p3, 16470384, descr=<Guard0x47abb20>) [p0, p1]
+320: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+323: guard_false(i6, descr=<Guard0x47a9cd0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+329: guard_class(p0, 16435920, descr=<Guard0x47a9d18>) [p0, p1]
+341: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+345: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x47abb80>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+365: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p10, 16478824, descr=<Guard0x47a9d60>) [p0, p1]
+383: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+395: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x47a9da8>) [p0, p1]
+404: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+409: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+414: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+419: p17 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+424: guard_class(p17, 16505296, descr=<Guard0x47a9df0>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+436: guard_not_invalidated(descr=<Guard0x47a9e38>) [p0, p1]
+436: p19 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+441: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x47abbe0>) [p0, p1]
+459: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x47abc40>) [p0, p1]
+478: i22 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+482: i23 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+486: i24 = int_eq(i22, i23)
+489: guard_true(i24, descr=<Guard0x47a9e80>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+495: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+499: guard_nonnull_class(p25, 16616448, descr=<Guard0x47abca0>) [p0, p1]
+519: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+523: guard_nonnull_class(p27, 16616448, descr=<Guard0x47abd00>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+542: i30 = instance_ptr_eq(p25, ConstPtr(ptr29))
+545: guard_true(i30, descr=<Guard0x47a9ec8>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+551: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x47abd60>) [p0, p1]
+570: i32 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+574: i33 = int_eq(i23, i32)
+577: guard_false(i33, descr=<Guard0x47a9f10>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+583: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x47abdc0>) [p0, p1]
+602: i36 = int_ge(i32, 0)
+606: guard_true(i36, descr=<Guard0x47a9f58>) [p0, p1]
+612: i37 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+616: i38 = int_lt(i32, i37)
+619: guard_true(i38, descr=<Guard0x47a9fa0>) [p0, p1]
+625: p39 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+629: guard_class(p39, 16622984, descr=<Guard0x4a7c020>) [p0, p1]
+641: p41 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+645: p42 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+650: guard_class(p42, 16470384, descr=<Guard0x4a7c068>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+663: p44 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+667: guard_nonnull_class(p44, ConstClass(W_Symbol), descr=<Guard0x47abe20>) [p0, p1]
+686: p46 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+690: guard_nonnull_class(p46, ConstClass(W_Vector), descr=<Guard0x47abe80>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+708: p48 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+712: guard_nonnull_class(p48, 16616448, descr=<Guard0x47abee0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+731: p50 = new_with_vtable(descr=<SizeDescr 32>)
+775: p51 = new_with_vtable(descr=<SizeDescr 40>)
+786: setfield_gc(p51, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+797: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+801: setfield_gc(p51, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+805: setfield_gc(p51, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+809: p53 = new_with_vtable(descr=<SizeDescr 48>)
+820: p54 = new_with_vtable(descr=<SizeDescr 32>)
+831: setfield_gc(p54, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+839: p57 = new_array_clear(4, descr=<ArrayP 8>)
+867: setarrayitem_gc(p57, 0, ConstPtr(ptr59), descr=<ArrayP 8>)
+872: setarrayitem_gc(p57, 1, p44, descr=<ArrayP 8>)
+877: setarrayitem_gc(p57, 2, p44, descr=<ArrayP 8>)
+882: setarrayitem_gc(p57, 3, p46, descr=<ArrayP 8>)
+887: setfield_gc(p54, p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+898: setfield_gc(p54, ConstPtr(ptr63), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+902: setfield_gc(p50, p48, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+906: setfield_gc(p53, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+910: setfield_gc(p50, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+914: setfield_gc(p50, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+918: setfield_gc(p53, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+922: setfield_gc(p53, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+933: setfield_gc(p53, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+937: setfield_gc(p53, p54, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+941: jump(p50, p53, descr=TargetToken(59469520))
+976: --end of the loop--
[3e4c22b24f1c14e] jit-log-opt-bridge}
[3e4c22b250f432d] {jit-backend
[3e4c22b25130420] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9cd
[3e4c22b251364c7] jit-backend-dump}
[3e4c22b25141194] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9d44 +0  25000000
[3e4c22b251424f5] jit-backend-dump}
[3e4c22b251465f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9e75 +0  25000000
[3e4c22b2514741b] jit-backend-dump}
[3e4c22b2514ac0f] {jit-backend-addr
bridge out of Guard 0x4610380 has address 0x7f4a5c1f9d40 to 0x7f4a5c1f9e70
       gc table: 0x7f4a5c1f9cd0
    jump target: 0x7f4a5c1f9d40
         resops: 0x7f4a5c1f9d4e
       failures: 0x7f4a5c1f9e70
            end: 0x7f4a5c1fa002
[3e4c22b2514cf52] jit-backend-addr}
[3e4c22b25150676] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9d5e +0  34010000
[3e4c22b25151486] jit-backend-dump}
[3e4c22b25154877] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9d75 +0  39010000
[3e4c22b251555ee] jit-backend-dump}
[3e4c22b25158a94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9d81 +0  65010000
[3e4c22b251597e3] jit-backend-dump}
[3e4c22b2515cb6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9d97 +0  6B010000
[3e4c22b2515d8ac] jit-backend-dump}
[3e4c22b25160b68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9dab +0  73010000
[3e4c22b251618a8] jit-backend-dump}
[3e4c22b25164b24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9dc2 +0  78010000
[3e4c22b2516586a] jit-backend-dump}
[3e4c22b25168ac1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9dcf +0  87010000
[3e4c22b25169804] jit-backend-dump}
[3e4c22b2516ca6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9ddb +0  97010000
[3e4c22b2516d79e] jit-backend-dump}
[3e4c22b251709f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9df2 +0  9C010000
[3e4c22b25171720] jit-backend-dump}
[3e4c22b2517498f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9e02 +0  A8010000
[3e4c22b251756ba] jit-backend-dump}
[3e4c22b25178923] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9e0f +0  B7010000
[3e4c22b2517965d] jit-backend-dump}
[3e4c22b2517c8ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f9e25 +0  BD010000
[3e4c22b2517d5d3] jit-backend-dump}
[3e4c22b25180ac7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ee93c +0  00B40000
[3e4c22b2518185a] jit-backend-dump}
[3e4c22b25185a24] jit-backend}
[3e4c22b2518966f] {jit-log-opt-bridge
# bridge out of Guard 0x4610380 with 38 ops
[p0, p1]
+134: guard_class(p1, 16435920, descr=<Guard0x47abf40>) [p0, p1]
+146: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+150: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x47abfa0>) [p0, p1]
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+169: guard_not_invalidated(descr=<Guard0x4a7c0f8>) [p0, p1]
+169: guard_class(p0, 16503536, descr=<Guard0x4a7c140>) [p0, p1]
+181: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+185: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+189: guard_class(p7, 16478448, descr=<Guard0x4a7c188>) [p0, p1]
+203: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+214: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x4a7c1d0>) [p0, p1]
+223: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+227: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x4a7e020>) [p0, p1]
+246: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+250: i14 = int_lt(i6, i13)
+253: guard_false(i14, descr=<Guard0x4a7c218>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+259: i15 = int_add_ovf(i13, i6)
+265: guard_no_overflow(descr=<Guard0x4a7c260>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+271: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+275: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x4a7e080>) [p0, p1]
+294: i18 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+298: i19 = int_sub_ovf(i18, i15)
+304: guard_no_overflow(descr=<Guard0x4a7c2a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+310: i21 = int_sub_ovf(i6, 1)
+317: guard_no_overflow(descr=<Guard0x4a7c2f0>) [p0, p1]
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
+323: p22 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+327: guard_nonnull_class(p22, 16470384, descr=<Guard0x4a7e0e0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+345: jump(p7, i21, i13, i6, i19, p22, p1, p3, p11, i13, p16, i18, descr=TargetToken(61029360))
+416: --end of the loop--
[3e4c22b251ad5e0] jit-log-opt-bridge}
[3e4c22b25ec71e8] {jit-backend
[3e4c22b25f4720a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa1b
[3e4c22b25f51393] jit-backend-dump}
[3e4c22b25f5db60] {jit-backend-addr
Loop 121 ((loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)) has address 0x7f4a5c1fa32d to 0x7f4a5c1fa5f0 (bootstrap 0x7f4a5c1fa2a0)
       gc table: 0x7f4a5c1fa1b0
       function: 0x7f4a5c1fa2a0
         resops: 0x7f4a5c1fa32d
       failures: 0x7f4a5c1fa5f0
            end: 0x7f4a5c1fa8bf
[3e4c22b25f60ae8] jit-backend-addr}
[3e4c22b25f6541e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa344 +0  D7020000
[3e4c22b25f6676a] jit-backend-dump}
[3e4c22b25f69f12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa35a +0  DD020000
[3e4c22b25f6ad87] jit-backend-dump}
[3e4c22b25f6e137] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa370 +0  E3020000
[3e4c22b25f6eed0] jit-backend-dump}
[3e4c22b25f721b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa386 +0  E9020000
[3e4c22b25f72ecc] jit-backend-dump}
[3e4c22b25f76166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa39a +0  F1020000
[3e4c22b25f76e8b] jit-backend-dump}
[3e4c22b25f7a0a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa3ad +0  FA020000
[3e4c22b25f7ae25] jit-backend-dump}
[3e4c22b25f7e045] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa3c3 +0  00030000
[3e4c22b25f7eda4] jit-backend-dump}
[3e4c22b25f81f7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa3e1 +0  FE020000
[3e4c22b25f82c83] jit-backend-dump}
[3e4c22b25f8607a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa3f9 +0  1E030000
[3e4c22b25f86d90] jit-backend-dump}
[3e4c22b25f8a04b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa40c +0  27030000
[3e4c22b25f8ad4e] jit-backend-dump}
[3e4c22b25f8dfd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa41d +0  32030000
[3e4c22b25f8ed29] jit-backend-dump}
[3e4c22b25f91fba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa433 +0  38030000
[3e4c22b25f92cba] jit-backend-dump}
[3e4c22b25f95ee9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa443 +0  44030000
[3e4c22b25f96bd6] jit-backend-dump}
[3e4c22b25f99d94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa456 +0  4D030000
[3e4c22b25f9aa8b] jit-backend-dump}
[3e4c22b25f9dc34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa463 +0  5C030000
[3e4c22b25f9e91b] jit-backend-dump}
[3e4c22b25fa1aae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa476 +0  65030000
[3e4c22b25fa27c4] jit-backend-dump}
[3e4c22b25fa5972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa480 +0  77030000
[3e4c22b25fa6660] jit-backend-dump}
[3e4c22b25fa9824] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa48d +0  86030000
[3e4c22b25faa50e] jit-backend-dump}
[3e4c22b25fad69e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa49f +0  90030000
[3e4c22b25fae398] jit-backend-dump}
[3e4c22b25fb1541] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa4b5 +0  96030000
[3e4c22b25fb224a] jit-backend-dump}
[3e4c22b25fb544b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa4cc +0  9B030000
[3e4c22b25fb613c] jit-backend-dump}
[3e4c22b25fb92c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa4e4 +0  9F030000
[3e4c22b25fb9ff7] jit-backend-dump}
[3e4c22b25fbd1e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa4fb +0  A4030000
[3e4c22b25fbded6] jit-backend-dump}
[3e4c22b25fc1d38] jit-backend}
[3e4c22b25fc5d22] {jit-log-opt-loop
# Loop 121 ((loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)) : entry bridge with 106 ops
[p0, p1]
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)')
+389: guard_class(p0, 16500368, descr=<Guard0x4a7e140>) [p1, p0]
+408: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+412: guard_nonnull_class(p3, 16478824, descr=<Guard0x4a7e1a0>) [p1, p0]
+430: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+434: guard_nonnull_class(p5, 16470384, descr=<Guard0x4a7e200>) [p1, p0]
+452: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+456: guard_nonnull_class(p7, 16616448, descr=<Guard0x4a7e260>) [p1, p0]
+474: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+485: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x4a7c410>) [p1, p0]
+494: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+494: guard_class(p1, 16437896, descr=<Guard0x4a7c458>) [p1, p0]
+513: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+517: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x4a7e2c0>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+535: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+539: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+543: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+547: p18 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+551: guard_class(p18, 16505296, descr=<Guard0x4a7c4a0>) [p1, p0]
debug_merge_point(0, 0, '(= nc1 nc2)')
+565: guard_not_invalidated(descr=<Guard0x4a7c4e8>) [p1, p0]
+565: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+569: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x4a7e320>) [p1, p0]
+589: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x4a7e380>) [p1, p0]
+608: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+612: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+616: i25 = int_eq(i23, i24)
+619: guard_true(i25, descr=<Guard0x4a7c530>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+625: p26 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+629: guard_nonnull_class(p26, 16616448, descr=<Guard0x4a7e3e0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+654: i29 = instance_ptr_eq(p26, ConstPtr(ptr28))
+657: guard_true(i29, descr=<Guard0x4a7c578>) [p1, p0]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+663: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x4a7e440>) [p1, p0]
+682: i31 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+686: i32 = int_eq(i24, i31)
+689: guard_false(i32, descr=<Guard0x4a7c5c0>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+695: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x4a7e4a0>) [p1, p0]
+714: i35 = int_ge(i31, 0)
+718: guard_true(i35, descr=<Guard0x4a7c608>) [p1, p0]
+724: i36 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+728: i37 = int_lt(i31, i36)
+731: guard_true(i37, descr=<Guard0x4a7c650>) [p1, p0]
+737: p38 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+741: guard_class(p38, 16622984, descr=<Guard0x4a7c698>) [p1, p0]
+755: p40 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+759: p41 = getarrayitem_gc_r(p40, i31, descr=<ArrayP 8>)
+764: guard_class(p41, 16470384, descr=<Guard0x4a7c6e0>) [p1, p0]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+777: p43 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+781: guard_nonnull_class(p43, ConstClass(W_Vector), descr=<Guard0x4a7e500>) [p1, p0]
+800: p45 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+804: guard_nonnull_class(p45, ConstClass(W_Vector), descr=<Guard0x4a7e560>) [p1, p0]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+824: p47 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+828: guard_nonnull_class(p47, 16616448, descr=<Guard0x4a7e5c0>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+847: p49 = new_with_vtable(descr=<SizeDescr 32>)
+894: p50 = new_with_vtable(descr=<SizeDescr 40>)
+905: setfield_gc(p50, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+916: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+920: setfield_gc(p50, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+924: setfield_gc(p50, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+928: p52 = new_with_vtable(descr=<SizeDescr 48>)
+939: p53 = new_with_vtable(descr=<SizeDescr 32>)
+950: setfield_gc(p53, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+958: p56 = new_array_clear(4, descr=<ArrayP 8>)
+984: setarrayitem_gc(p56, 0, ConstPtr(ptr58), descr=<ArrayP 8>)
+988: setarrayitem_gc(p56, 1, p43, descr=<ArrayP 8>)
+992: setarrayitem_gc(p56, 2, p43, descr=<ArrayP 8>)
+996: setarrayitem_gc(p56, 3, p45, descr=<ArrayP 8>)
+1000: setfield_gc(p53, p56, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1011: setfield_gc(p53, ConstPtr(ptr62), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1015: setfield_gc(p49, p50, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1019: setfield_gc(p52, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1023: setfield_gc(p49, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1027: setfield_gc(p49, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1031: setfield_gc(p52, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1035: setfield_gc(p52, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1046: setfield_gc(p52, ConstPtr(ptr63), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1050: setfield_gc(p52, p53, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1054: jump(p49, p52, descr=TargetToken(59469520))
+1088: --end of the loop--
[3e4c22b26013a5f] jit-log-opt-loop}
[3e4c22b264a9b59] {jit-backend
[3e4c22b2655c8d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1faaf
[3e4c22b26568000] jit-backend-dump}
[3e4c22b26573d0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fac34 +0  25000000
[3e4c22b26575362] jit-backend-dump}
[3e4c22b26579645] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb045 +0  25000000
[3e4c22b2657a575] jit-backend-dump}
[3e4c22b2657da48] {jit-backend-addr
bridge out of Guard 0x40d8440 has address 0x7f4a5c1fac30 to 0x7f4a5c1fb040
       gc table: 0x7f4a5c1faaf0
    jump target: 0x7f4a5c1fac30
         resops: 0x7f4a5c1fac3e
       failures: 0x7f4a5c1fb040
            end: 0x7f4a5c1fb403
[3e4c22b2657fe48] jit-backend-addr}
[3e4c22b265834d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fac4e +0  31040000
[3e4c22b26584312] jit-backend-dump}
[3e4c22b265876f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fac62 +0  39040000
[3e4c22b265883cf] jit-backend-dump}
[3e4c22b2658b83a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fac81 +0  52040000
[3e4c22b2658c4e4] jit-backend-dump}
[3e4c22b2658f8b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fac94 +0  5B040000
[3e4c22b26590542] jit-backend-dump}
[3e4c22b265937fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1faca8 +0  63040000
[3e4c22b265944ab] jit-backend-dump}
[3e4c22b265976f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1facb6 +0  71040000
[3e4c22b26598372] jit-backend-dump}
[3e4c22b2659b5d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1faccd +0  76040000
[3e4c22b2659c289] jit-backend-dump}
[3e4c22b2659f4e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1face9 +0  76040000
[3e4c22b265a0168] jit-backend-dump}
[3e4c22b265a33a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1facff +0  7C040000
[3e4c22b265a4057] jit-backend-dump}
[3e4c22b265a72d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fad12 +0  85040000
[3e4c22b265a7f4c] jit-backend-dump}
[3e4c22b265ab132] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fad23 +0  90040000
[3e4c22b265abda8] jit-backend-dump}
[3e4c22b265aefda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fad37 +0  98040000
[3e4c22b265afca0] jit-backend-dump}
[3e4c22b265b2e83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fad41 +0  AA040000
[3e4c22b265b3afc] jit-backend-dump}
[3e4c22b265b6fb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fad4f +0  B8040000
[3e4c22b265b7c98] jit-backend-dump}
[3e4c22b265bafb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fad61 +0  C2040000
[3e4c22b265bbc32] jit-backend-dump}
[3e4c22b265bee8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fad79 +0  C6040000
[3e4c22b265bfb4c] jit-backend-dump}
[3e4c22b265c2dda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fad8f +0  CC040000
[3e4c22b265c3a62] jit-backend-dump}
[3e4c22b265c6d37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fada6 +0  D1040000
[3e4c22b265c79db] jit-backend-dump}
[3e4c22b265cac13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fadb9 +0  DA040000
[3e4c22b265cb899] jit-backend-dump}
[3e4c22b265ceb08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fadc6 +0  E9040000
[3e4c22b265cf7a9] jit-backend-dump}
[3e4c22b265d29fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fadd0 +0  FB040000
[3e4c22b265d3673] jit-backend-dump}
[3e4c22b265d68be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fadd9 +0  0E050000
[3e4c22b265d755c] jit-backend-dump}
[3e4c22b265da770] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fadeb +0  18050000
[3e4c22b265db3ef] jit-backend-dump}
[3e4c22b265de64f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fae02 +0  1D050000
[3e4c22b265df318] jit-backend-dump}
[3e4c22b265e253e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fae14 +0  27050000
[3e4c22b265e3204] jit-backend-dump}
[3e4c22b265e649b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fae2a +0  2D050000
[3e4c22b265e715e] jit-backend-dump}
[3e4c22b265ea3ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fae33 +0  40050000
[3e4c22b265eb06b] jit-backend-dump}
[3e4c22b265ee380] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fae4a +0  45050000
[3e4c22b265ef00e] jit-backend-dump}
[3e4c22b265f224d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fae60 +0  4B050000
[3e4c22b265f2ec6] jit-backend-dump}
[3e4c22b265f6173] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fae77 +0  50050000
[3e4c22b265f6e1a] jit-backend-dump}
[3e4c22b265fa027] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fae94 +0  4F050000
[3e4c22b265faccf] jit-backend-dump}
[3e4c22b265fe1dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea512 +0  1A070100
[3e4c22b265feef4] jit-backend-dump}
[3e4c22b26603108] jit-backend}
[3e4c22b26607034] {jit-log-opt-bridge
# bridge out of Guard 0x40d8440 with 150 ops
[p0, p1, p2, p3, p4]
+342: guard_class(p0, 16437896, descr=<Guard0x4a7e620>) [p0, p1, p2, p3, p4]
+354: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+365: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x4a7c770>) [p0, p1, p2, p3, p4]
+374: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+374: guard_not_invalidated(descr=<Guard0x4a7c7b8>) [p0, p1, p2, p3, p4]
+374: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+378: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+382: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+386: guard_nonnull_class(p9, 16478824, descr=<Guard0x4a7e680>) [p0, p1, p2, p3, p4]
+405: guard_nonnull_class(p10, 16470384, descr=<Guard0x4a7e6e0>) [p0, p1, p2, p3, p4]
+424: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+435: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x4a7c800>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+444: guard_class(p11, 16437896, descr=<Guard0x4a7c848>) [p0, p1, p2, p3, p4]
+458: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+462: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x4a7e740>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+481: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+485: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+489: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+493: p22 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+497: guard_class(p22, 16505296, descr=<Guard0x4a7c890>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc1 nc2)')
+509: p24 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+513: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x4a7e7a0>) [p0, p1, p2, p3, p4]
+531: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x4a7e800>) [p0, p1, p2, p3, p4]
+550: i27 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+554: i28 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+558: i29 = int_eq(i27, i28)
+561: guard_false(i29, descr=<Guard0x4a7c8d8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+567: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x4a7e860>) [p0, p1, p2, p3, p4]
+587: i32 = int_ge(i28, 0)
+591: guard_true(i32, descr=<Guard0x4a7c920>) [p0, p1, p2, p3, p4]
+597: i33 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+602: i34 = int_lt(i28, i33)
+605: guard_true(i34, descr=<Guard0x4a7c968>) [p0, p1, p2, p3, p4]
+611: p35 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+616: guard_class(p35, 16622984, descr=<Guard0x4a7c9b0>) [p0, p1, p2, p3, p4]
+629: p37 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+634: p38 = getarrayitem_gc_r(p37, i28, descr=<ArrayP 8>)
+639: guard_class(p38, 16470384, descr=<Guard0x4a7c9f8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+653: p40 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+657: guard_nonnull_class(p40, 16616448, descr=<Guard0x4a7e8c0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+689: i43 = instance_ptr_eq(p40, ConstPtr(ptr42))
+692: guard_true(i43, descr=<Guard0x4a7ca40>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+698: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x4a7e920>) [p0, p1, p2, p3, p4]
+717: i45 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+721: i46 = int_eq(i28, i45)
+724: guard_false(i46, descr=<Guard0x4a7ca88>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+730: i48 = int_ge(i45, 0)
+734: guard_true(i48, descr=<Guard0x4a7cad0>) [p0, p1, p2, p3, p4]
+740: i49 = int_lt(i45, i33)
+743: guard_true(i49, descr=<Guard0x4a7cb18>) [p0, p1, p2, p3, p4]
+749: p50 = getarrayitem_gc_r(p37, i45, descr=<ArrayP 8>)
+754: guard_class(p50, 16470384, descr=<Guard0x4a7cb60>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+767: p52 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+772: guard_nonnull_class(p52, 16470384, descr=<Guard0x4a7e980>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+790: p54 = getarrayitem_gc_r(p37, i45, descr=<ArrayP 8>)
+795: guard_class(p54, 16470384, descr=<Guard0x4a7cba8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+808: p56 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+812: guard_nonnull_class(p56, 16616448, descr=<Guard0x4a7e9e0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+830: i59 = instance_ptr_eq(p56, ConstPtr(ptr58))
+833: guard_true(i59, descr=<Guard0x4a7cbf0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+839: p60 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+843: guard_nonnull_class(p60, ConstClass(W_Symbol), descr=<Guard0x4a7ea40>) [p0, p1, p2, p3, p4]
+862: p62 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+866: guard_nonnull_class(p62, ConstClass(W_Vector), descr=<Guard0x4a7eaa0>) [p0, p1, p2, p3, p4]
+884: p64 = getfield_gc_r(p54, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+888: guard_nonnull_class(p64, ConstClass(W_Vector), descr=<Guard0x4a7eb00>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+907: p66 = getfield_gc_r(p54, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+918: guard_nonnull_class(p66, 16470384, descr=<Guard0x4a7eb60>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+936: p68 = new_with_vtable(descr=<SizeDescr 32>)
+987: p69 = new_with_vtable(descr=<SizeDescr 40>)
+998: setfield_gc(p69, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1023: setfield_gc(p69, ConstPtr(ptr70), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1027: setfield_gc(p69, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1031: setfield_gc(p69, p52, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1035: p71 = new_with_vtable(descr=<SizeDescr 24>)
+1046: setfield_gc(p71, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1064: p72 = new_with_vtable(descr=<SizeDescr 24>)
+1075: setfield_gc(p72, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1079: setfield_gc(p72, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1090: setfield_gc(p71, p72, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1094: p73 = new_with_vtable(descr=<SizeDescr 48>)
+1105: p74 = new_with_vtable(descr=<SizeDescr 56>)
+1116: setfield_gc(p74, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1134: setfield_gc(p74, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1138: setfield_gc(p74, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1149: setfield_gc(p74, ConstPtr(ptr75), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1153: p76 = new_with_vtable(descr=<SizeDescr 40>)
+1165: setfield_gc(p76, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1169: setfield_gc(p76, ConstPtr(ptr77), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1173: setfield_gc(p76, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1177: setfield_gc(p76, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1181: setfield_gc(p74, p76, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1185: setfield_gc(p74, p50, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1189: p78 = new_with_vtable(descr=<SizeDescr 32>)
+1200: setfield_gc(p78, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1208: p81 = new_array_clear(4, descr=<ArrayP 8>)
+1235: setarrayitem_gc(p81, 0, ConstPtr(ptr83), descr=<ArrayP 8>)
+1239: setarrayitem_gc(p81, 1, p60, descr=<ArrayP 8>)
+1243: setarrayitem_gc(p81, 2, p62, descr=<ArrayP 8>)
+1247: setarrayitem_gc(p81, 3, p64, descr=<ArrayP 8>)
+1251: setfield_gc(p78, p81, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1262: setfield_gc(p78, ConstPtr(ptr87), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1273: setfield_gc(p73, ConstPtr(ptr88), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1284: setfield_gc(p73, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1288: setfield_gc(p73, p74, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1292: setfield_gc(p73, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1296: setfield_gc(p68, p69, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1307: setfield_gc(p68, p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1318: setfield_gc(p68, p71, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1322: setfield_gc(p73, p78, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1326: jump(p68, p73, descr=TargetToken(59469520))
+1360: --end of the loop--
[3e4c22b26675eaa] jit-log-opt-bridge}
[3e4c22b26c61f57] {jit-backend
[3e4c22b26ce23f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb
[3e4c22b26cec3d0] jit-backend-dump}
[3e4c22b26cf8038] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb724 +0  25000000
[3e4c22b26cf95f4] jit-backend-dump}
[3e4c22b26cfd838] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fba25 +0  25000000
[3e4c22b26cfe768] jit-backend-dump}
[3e4c22b26d01cc1] {jit-backend-addr
bridge out of Guard 0x3f77d60 has address 0x7f4a5c1fb720 to 0x7f4a5c1fba20
       gc table: 0x7f4a5c1fb600
    jump target: 0x7f4a5c1fb720
         resops: 0x7f4a5c1fb72e
       failures: 0x7f4a5c1fba20
            end: 0x7f4a5c1fbd73
[3e4c22b26d04316] jit-backend-addr}
[3e4c22b26d07a7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb73e +0  21030000
[3e4c22b26d088ea] jit-backend-dump}
[3e4c22b26d0bd80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb74b +0  30030000
[3e4c22b26d0caeb] jit-backend-dump}
[3e4c22b26d0fea7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb75b +0  3C030000
[3e4c22b26d10bf1] jit-backend-dump}
[3e4c22b26d13e54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb772 +0  41030000
[3e4c22b26d14b8e] jit-backend-dump}
[3e4c22b26d17ddc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb780 +0  4F030000
[3e4c22b26d18b16] jit-backend-dump}
[3e4c22b26d1bd97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb794 +0  57030000
[3e4c22b26d1cb15] jit-backend-dump}
[3e4c22b26d20322] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb7b3 +0  70030000
[3e4c22b26d2100f] jit-backend-dump}
[3e4c22b26d24523] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb7c7 +0  78030000
[3e4c22b26d252ac] jit-backend-dump}
[3e4c22b26d28641] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb7db +0  80030000
[3e4c22b26d29397] jit-backend-dump}
[3e4c22b26d2c791] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb7e8 +0  8F030000
[3e4c22b26d2d4ff] jit-backend-dump}
[3e4c22b26d307ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb7fe +0  95030000
[3e4c22b26d314f8] jit-backend-dump}
[3e4c22b26d347aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb81a +0  95030000
[3e4c22b26d354e8] jit-backend-dump}
[3e4c22b26d387a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb830 +0  9B030000
[3e4c22b26d394ea] jit-backend-dump}
[3e4c22b26d3c7bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb842 +0  A5030000
[3e4c22b26d3d4f5] jit-backend-dump}
[3e4c22b26d40761] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb853 +0  B0030000
[3e4c22b26d414cf] jit-backend-dump}
[3e4c22b26d446e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb86b +0  B4030000
[3e4c22b26d45423] jit-backend-dump}
[3e4c22b26d48646] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb874 +0  C7030000
[3e4c22b26d49392] jit-backend-dump}
[3e4c22b26d4c5a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb886 +0  D1030000
[3e4c22b26d4d2f2] jit-backend-dump}
[3e4c22b26d50583] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb893 +0  E0030000
[3e4c22b26d512d3] jit-backend-dump}
[3e4c22b26d54517] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb8a6 +0  E9030000
[3e4c22b26d5526d] jit-backend-dump}
[3e4c22b26d58516] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb8b0 +0  FB030000
[3e4c22b26d5925d] jit-backend-dump}
[3e4c22b26d5c4d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb8bd +0  0A040000
[3e4c22b26d5d231] jit-backend-dump}
[3e4c22b26d60497] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb8cd +0  16040000
[3e4c22b26d611cb] jit-backend-dump}
[3e4c22b26d6441f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb8e3 +0  1C040000
[3e4c22b26d65168] jit-backend-dump}
[3e4c22b26d683c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb8fb +0  20040000
[3e4c22b26d69130] jit-backend-dump}
[3e4c22b26d6c375] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb911 +0  26040000
[3e4c22b26d6d0be] jit-backend-dump}
[3e4c22b26d702ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb927 +0  2C040000
[3e4c22b26d71027] jit-backend-dump}
[3e4c22b26d74584] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec01a +0  02F70000
[3e4c22b26d752e9] jit-backend-dump}
[3e4c22b26d795b4] jit-backend}
[3e4c22b26d7d416] {jit-log-opt-bridge
# bridge out of Guard 0x3f77d60 with 115 ops
[p0, p1]
+310: guard_class(p1, 16500016, descr=<Guard0x4a7ebc0>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+326: guard_nonnull(p3, descr=<Guard0x4a7cc80>) [p0, p1]
+342: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+345: guard_true(i5, descr=<Guard0x4a7ccc8>) [p0, p1]
debug_merge_point(0, 0, 'lst')
+351: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+355: guard_nonnull_class(p6, 16616448, descr=<Guard0x4a7ec20>) [p0, p1]
+374: guard_class(p0, 16437896, descr=<Guard0x4a7cd10>) [p0, p1]
+388: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+399: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x4a7cd58>) [p0, p1]
+408: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+408: guard_not_invalidated(descr=<Guard0x4a7cda0>) [p0, p1]
+408: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+412: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+416: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)')
+420: guard_nonnull_class(p12, 16478824, descr=<Guard0x4a7ec80>) [p0, p1]
+439: guard_nonnull_class(p13, 16470384, descr=<Guard0x4a7ece0>) [p0, p1]
+459: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+470: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x4a7cde8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+479: guard_class(p14, 16437896, descr=<Guard0x4a7ce30>) [p0, p1]
+492: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+496: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x4a7ed40>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+514: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+518: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+522: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+526: p25 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+530: guard_class(p25, 16505296, descr=<Guard0x4a7ce78>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+542: p27 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+546: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x4a7eda0>) [p0, p1]
+564: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x4a7ee00>) [p0, p1]
+582: i30 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+586: i31 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+590: i32 = int_eq(i30, i31)
+593: guard_true(i32, descr=<Guard0x4a7cec0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+599: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+604: guard_nonnull_class(p33, 16616448, descr=<Guard0x4a7ee60>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+623: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+626: guard_true(i36, descr=<Guard0x4a7cf08>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+632: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x4a7eec0>) [p0, p1]
+650: i38 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+654: i39 = int_eq(i31, i38)
+657: guard_false(i39, descr=<Guard0x4a7cf50>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+663: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x4a7ef20>) [p0, p1]
+682: i42 = int_ge(i38, 0)
+686: guard_true(i42, descr=<Guard0x4a7cf98>) [p0, p1]
+692: i43 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+696: i44 = int_lt(i38, i43)
+699: guard_true(i44, descr=<Guard0x4a7cfe0>) [p0, p1]
+705: p45 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+709: guard_class(p45, 16622984, descr=<Guard0x4a7d028>) [p0, p1]
+721: p47 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+725: p48 = getarrayitem_gc_r(p47, i38, descr=<ArrayP 8>)
+730: guard_class(p48, 16470384, descr=<Guard0x4a7d070>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+743: p50 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+748: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x4a7ef80>) [p0, p1]
+767: p52 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+771: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x4a7efe0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+789: p54 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+793: guard_nonnull_class(p54, 16470384, descr=<Guard0x4a7f040>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+811: p56 = new_with_vtable(descr=<SizeDescr 32>)
+858: p57 = new_with_vtable(descr=<SizeDescr 40>)
+869: setfield_gc(p57, p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+880: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+884: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+888: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+892: p59 = new_with_vtable(descr=<SizeDescr 48>)
+904: p60 = new_with_vtable(descr=<SizeDescr 32>)
+916: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+924: p63 = new_array_clear(4, descr=<ArrayP 8>)
+950: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+954: setarrayitem_gc(p63, 1, p50, descr=<ArrayP 8>)
+958: setarrayitem_gc(p63, 2, p50, descr=<ArrayP 8>)
+962: setarrayitem_gc(p63, 3, p52, descr=<ArrayP 8>)
+966: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+977: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+981: setfield_gc(p56, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+985: setfield_gc(p56, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+996: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1001: setfield_gc(p59, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1006: setfield_gc(p59, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1011: setfield_gc(p59, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1016: setfield_gc(p56, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1020: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1025: jump(p56, p59, descr=TargetToken(59469520))
+1056: --end of the loop--
[3e4c22b26ddac4e] jit-log-opt-bridge}
[3e4c22b26f0dda3] {jit-backend
[3e4c22b26f7eec6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fbe
[3e4c22b26f85438] jit-backend-dump}
[3e4c22b26f90410] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fbe54 +0  28000000
[3e4c22b26f91967] jit-backend-dump}
[3e4c22b26f95bc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc065 +0  28000000
[3e4c22b26f96ab4] jit-backend-dump}
[3e4c22b26f9a10b] {jit-backend-addr
bridge out of Guard 0x3f67580 has address 0x7f4a5c1fbe50 to 0x7f4a5c1fc060
       gc table: 0x7f4a5c1fbe00
    jump target: 0x7f4a5c1fbe50
         resops: 0x7f4a5c1fbe5e
       failures: 0x7f4a5c1fc060
            end: 0x7f4a5c1fc14b
[3e4c22b26f9c6ae] jit-backend-addr}
[3e4c22b26fa0074] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fbe76 +0  45020000
[3e4c22b26fa0ef8] jit-backend-dump}
[3e4c22b26fa43b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fbe8e +0  49020000
[3e4c22b26fa50f6] jit-backend-dump}
[3e4c22b26fa83ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fbea5 +0  4E020000
[3e4c22b26fa912c] jit-backend-dump}
[3e4c22b26fac3dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fbebd +0  52020000
[3e4c22b26fad0fa] jit-backend-dump}
[3e4c22b26fb03a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fbee6 +0  45020000
[3e4c22b26fb10b3] jit-backend-dump}
[3e4c22b26fb457a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e8a56 +0  F6330100
[3e4c22b26fb52b4] jit-backend-dump}
[3e4c22b26fb9413] jit-backend}
[3e4c22b26fbd1d6] {jit-log-opt-bridge
# bridge out of Guard 0x3f67580 with 55 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+102: guard_not_invalidated(descr=<Guard0x4a7f0a0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+102: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+113: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x4a7d0b8>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+122: p19 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+126: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x4a7f100>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+146: p21 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+150: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x4a7f160>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
+169: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+180: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+184: i25 = int_eq(i23, i24)
+187: guard_true(i25, descr=<Guard0x4a7d100>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
+193: p26 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+204: p27 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+215: guard_nonnull_class(p27, 16616448, descr=<Guard0x4a7f1c0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+234: p29 = new_with_vtable(descr=<SizeDescr 32>)
+292: p30 = new_with_vtable(descr=<SizeDescr 56>)
+303: p31 = new_with_vtable(descr=<SizeDescr 56>)
+321: setfield_gc(p31, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+339: setfield_gc(p31, p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+343: setfield_gc(p31, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+368: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+372: p33 = new_with_vtable(descr=<SizeDescr 64>)
+390: setfield_gc(p33, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+401: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+405: setfield_gc(p33, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+409: setfield_gc(p33, p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+413: setfield_gc(p33, p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+417: setfield_gc(p33, p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+421: setfield_gc(p33, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+425: setfield_gc(p31, p33, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+429: setfield_gc(p31, p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+433: p35 = new_with_vtable(descr=<SizeDescr 64>)
+444: setfield_gc(p35, p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+455: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+459: setfield_gc(p35, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+463: setfield_gc(p35, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+474: setfield_gc(p35, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+485: setfield_gc(p35, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+496: setfield_gc(p35, p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+507: setfield_gc(p29, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+519: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+524: setfield_gc(p29, p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+536: setfield_gc(p30, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+547: setfield_gc(p30, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+558: setfield_gc(p30, p31, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+562: setfield_gc(p30, ConstPtr(ptr37), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+573: setfield_gc(p30, p35, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+577: setfield_gc(p30, p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+581: jump(p29, p30, descr=TargetToken(61027120))
+608: --end of the loop--
[3e4c22b26fee071] jit-log-opt-bridge}
[3e4c22b276d0c77] {jit-backend
[3e4c22b277579fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc2e
[3e4c22b27760a66] jit-backend-dump}
[3e4c22b2776c6d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc3d4 +0  25000000
[3e4c22b2776dbf4] jit-backend-dump}
[3e4c22b27771f7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc6c5 +0  25000000
[3e4c22b27772e7b] jit-backend-dump}
[3e4c22b2777634b] {jit-backend-addr
bridge out of Guard 0x3d73850 has address 0x7f4a5c1fc3d0 to 0x7f4a5c1fc6c0
       gc table: 0x7f4a5c1fc2e0
    jump target: 0x7f4a5c1fc3d0
         resops: 0x7f4a5c1fc3de
       failures: 0x7f4a5c1fc6c0
            end: 0x7f4a5c1fc96b
[3e4c22b277786a6] jit-backend-addr}
[3e4c22b2777beed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc3ee +0  11030000
[3e4c22b2777cd68] jit-backend-dump}
[3e4c22b2778021a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc3fb +0  20030000
[3e4c22b27780f38] jit-backend-dump}
[3e4c22b277843a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc40b +0  2C030000
[3e4c22b277850cb] jit-backend-dump}
[3e4c22b2778832e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc422 +0  31030000
[3e4c22b27789081] jit-backend-dump}
[3e4c22b2778c279] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc42e +0  41030000
[3e4c22b2778cf91] jit-backend-dump}
[3e4c22b277901a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc442 +0  49030000
[3e4c22b27790edc] jit-backend-dump}
[3e4c22b2779442f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc462 +0  61030000
[3e4c22b27795142] jit-backend-dump}
[3e4c22b277985a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc476 +0  69030000
[3e4c22b277992ea] jit-backend-dump}
[3e4c22b2779c5be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc48b +0  70030000
[3e4c22b2779d2c4] jit-backend-dump}
[3e4c22b277a0512] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc498 +0  7F030000
[3e4c22b277a120f] jit-backend-dump}
[3e4c22b277a4404] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc4af +0  84030000
[3e4c22b277a5101] jit-backend-dump}
[3e4c22b277a82e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc4c5 +0  8A030000
[3e4c22b277a8fd7] jit-backend-dump}
[3e4c22b277ac1a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc4d8 +0  93030000
[3e4c22b277acea1] jit-backend-dump}
[3e4c22b277b0078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc4ef +0  98030000
[3e4c22b277b0d65] jit-backend-dump}
[3e4c22b277b3f2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc506 +0  9D030000
[3e4c22b277b4c3c] jit-backend-dump}
[3e4c22b277b7e55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc517 +0  A8030000
[3e4c22b277b8b7d] jit-backend-dump}
[3e4c22b277bbd4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc52d +0  AE030000
[3e4c22b277bca44] jit-backend-dump}
[3e4c22b277bfc1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc545 +0  B2030000
[3e4c22b277c0927] jit-backend-dump}
[3e4c22b277c3b09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc54e +0  C5030000
[3e4c22b277c4809] jit-backend-dump}
[3e4c22b277c7a23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc565 +0  CA030000
[3e4c22b277c8717] jit-backend-dump}
[3e4c22b277cb8fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fc57b +0  D0030000
[3e4c22b277cc646] jit-backend-dump}
[3e4c22b277cfa8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dcb0f +0  BDF80100
[3e4c22b277d07bd] jit-backend-dump}
[3e4c22b277d48a8] jit-backend}
[3e4c22b277d85a7] {jit-log-opt-bridge
# bridge out of Guard 0x3d73850 with 109 ops
[p0, p1]
+262: guard_class(p1, 16500016, descr=<Guard0x4a7f220>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+278: guard_nonnull(p3, descr=<Guard0x4a7d190>) [p0, p1]
+294: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+297: guard_true(i5, descr=<Guard0x4a7d1d8>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
+303: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+307: guard_nonnull_class(p6, 16470384, descr=<Guard0x4a7f280>) [p0, p1]
+326: guard_class(p0, 16437896, descr=<Guard0x4a7d220>) [p0, p1]
+338: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+349: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x4a7d268>) [p0, p1]
+358: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+358: guard_not_invalidated(descr=<Guard0x4a7d2b0>) [p0, p1]
+358: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+362: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+366: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
+370: guard_nonnull_class(p12, 16478824, descr=<Guard0x4a7f2e0>) [p0, p1]
+390: guard_nonnull_class(p13, 16470384, descr=<Guard0x4a7f340>) [p0, p1]
+410: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+422: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x4a7d2f8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+431: guard_class(p14, 16437896, descr=<Guard0x4a7d340>) [p0, p1]
+444: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+448: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x4a7f3a0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+467: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+472: p23 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+477: guard_class(p23, 16505296, descr=<Guard0x4a7d388>) [p0, p1]
+489: guard_nonnull_class(p22, 16470384, descr=<Guard0x4a7f400>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+508: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+513: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x4a7f460>) [p0, p1]
+531: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+536: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x4a7f4c0>) [p0, p1]
+554: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+558: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+562: i32 = int_eq(i30, i31)
+565: guard_true(i32, descr=<Guard0x4a7d3d0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+571: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+575: guard_nonnull_class(p33, 16470384, descr=<Guard0x4a7f520>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+593: p35 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+597: guard_nonnull_class(p35, 16616448, descr=<Guard0x4a7f580>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+617: i38 = instance_ptr_eq(p35, ConstPtr(ptr37))
+620: guard_true(i38, descr=<Guard0x4a7d418>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+626: p39 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+630: guard_nonnull_class(p39, ConstClass(W_Symbol), descr=<Guard0x4a7f5e0>) [p0, p1]
+649: p41 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+653: guard_nonnull_class(p41, ConstClass(W_Vector), descr=<Guard0x4a7f640>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+671: p43 = new_with_vtable(descr=<SizeDescr 32>)
+718: p44 = new_with_vtable(descr=<SizeDescr 40>)
+729: setfield_gc(p44, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+740: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+744: setfield_gc(p44, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+748: setfield_gc(p44, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+752: p46 = new_with_vtable(descr=<SizeDescr 48>)
+763: p47 = new_with_vtable(descr=<SizeDescr 56>)
+781: setfield_gc(p47, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+785: setfield_gc(p47, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+789: setfield_gc(p47, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+800: setfield_gc(p47, ConstPtr(ptr48), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+804: p49 = new_with_vtable(descr=<SizeDescr 40>)
+815: setfield_gc(p49, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+819: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+823: setfield_gc(p49, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+827: setfield_gc(p49, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+831: setfield_gc(p47, p49, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+835: setfield_gc(p47, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+839: p51 = new_with_vtable(descr=<SizeDescr 32>)
+851: setfield_gc(p51, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+859: p54 = new_array_clear(4, descr=<ArrayP 8>)
+885: setarrayitem_gc(p54, 0, ConstPtr(ptr56), descr=<ArrayP 8>)
+889: setarrayitem_gc(p54, 1, p39, descr=<ArrayP 8>)
+893: setarrayitem_gc(p54, 2, p41, descr=<ArrayP 8>)
+897: setarrayitem_gc(p54, 3, p41, descr=<ArrayP 8>)
+901: setfield_gc(p51, p54, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+912: setfield_gc(p51, ConstPtr(ptr60), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+916: setfield_gc(p43, p35, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+927: setfield_gc(p43, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+938: setfield_gc(p46, ConstPtr(ptr61), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+942: setfield_gc(p46, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+946: setfield_gc(p46, p47, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+950: setfield_gc(p46, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+954: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+958: setfield_gc(p46, p51, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+962: jump(p43, p46, descr=TargetToken(59469520))
+992: --end of the loop--
[3e4c22b2782eb9b] jit-log-opt-bridge}
[3e4c22b279db4a4] {jit-backend
[3e4c22b27a42803] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcac
[3e4c22b27a4a346] jit-backend-dump}
[3e4c22b27a550bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcb84 +0  25000000
[3e4c22b27a56576] jit-backend-dump}
[3e4c22b27a5a8ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcdd5 +0  25000000
[3e4c22b27a5b7f1] jit-backend-dump}
[3e4c22b27a5ee8f] {jit-backend-addr
bridge out of Guard 0x3cec4a0 has address 0x7f4a5c1fcb80 to 0x7f4a5c1fcdd0
       gc table: 0x7f4a5c1fcac0
    jump target: 0x7f4a5c1fcb80
         resops: 0x7f4a5c1fcb8e
       failures: 0x7f4a5c1fcdd0
            end: 0x7f4a5c1fd00b
[3e4c22b27a6133d] jit-backend-addr}
[3e4c22b27a64afb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcb9e +0  71020000
[3e4c22b27a658ec] jit-backend-dump}
[3e4c22b27a68dbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcbb5 +0  76020000
[3e4c22b27a69acc] jit-backend-dump}
[3e4c22b27a701ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcbc5 +0  82020000
[3e4c22b27a71037] jit-backend-dump}
[3e4c22b27a74b0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcbda +0  89020000
[3e4c22b27a7580f] jit-backend-dump}
[3e4c22b27a78c77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcbf2 +0  8D020000
[3e4c22b27a79977] jit-backend-dump}
[3e4c22b27a7cd3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcc03 +0  98020000
[3e4c22b27a7da46] jit-backend-dump}
[3e4c22b27a80dfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcc17 +0  A0020000
[3e4c22b27a81b03] jit-backend-dump}
[3e4c22b27a84e58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcc2c +0  A7020000
[3e4c22b27a85b6a] jit-backend-dump}
[3e4c22b27a88e88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcc3f +0  B0020000
[3e4c22b27a89bb9] jit-backend-dump}
[3e4c22b27a8d15c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcc55 +0  D2020000
[3e4c22b27a8de99] jit-backend-dump}
[3e4c22b27a9138e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcc6b +0  D8020000
[3e4c22b27a920a3] jit-backend-dump}
[3e4c22b27a9552a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcc7c +0  E3020000
[3e4c22b27a9624e] jit-backend-dump}
[3e4c22b27a99698] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcc92 +0  E9020000
[3e4c22b27a9a3d8] jit-backend-dump}
[3e4c22b27a9d6a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fcca9 +0  EE020000
[3e4c22b27a9e3d7] jit-backend-dump}
[3e4c22b27aa1699] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fccb2 +0  01030000
[3e4c22b27aa23bb] jit-backend-dump}
[3e4c22b27aa56c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fccc9 +0  06030000
[3e4c22b27aa63f7] jit-backend-dump}
[3e4c22b27aa96a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fccdf +0  0C030000
[3e4c22b27aaa3c2] jit-backend-dump}
[3e4c22b27aad95f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d67c1 +0  BB630200
[3e4c22b27aae662] jit-backend-dump}
[3e4c22b27ab271f] jit-backend}
[3e4c22b27ab6489] {jit-log-opt-bridge
# bridge out of Guard 0x3cec4a0 with 76 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x4a7f6a0>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull_class(p3, 16470384, descr=<Guard0x4a7f700>) [p0, p1]
+256: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+259: guard_false(i6, descr=<Guard0x4a7d4a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+265: guard_class(p0, 16437896, descr=<Guard0x4a7d4f0>) [p0, p1]
+286: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+290: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x4a7f760>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+310: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+314: guard_class(p10, 16478824, descr=<Guard0x4a7d538>) [p0, p1]
+327: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+338: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x4a7d580>) [p0, p1]
+347: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+351: p15 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+355: guard_class(p15, 16505296, descr=<Guard0x4a7d5c8>) [p0, p1]
+368: guard_nonnull_class(p14, 16470384, descr=<Guard0x4a7f7c0>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+387: guard_not_invalidated(descr=<Guard0x4a7d610>) [p0, p1]
+387: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+391: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x4a7f820>) [p0, p1]
+409: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+413: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x4a7f880>) [p0, p1]
+431: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+435: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+439: i24 = int_eq(i22, i23)
+442: guard_true(i24, descr=<Guard0x4a7d658>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+448: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+452: guard_nonnull_class(p25, 16616448, descr=<Guard0x4a7f8e0>) [p0, p1]
+470: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+474: guard_nonnull_class(p27, 16470384, descr=<Guard0x4a7f940>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+493: i30 = instance_ptr_eq(p25, ConstPtr(ptr29))
+496: guard_true(i30, descr=<Guard0x4a7d6a0>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+502: p31 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+506: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x4a7f9a0>) [p0, p1]
+525: p33 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+529: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x4a7fa00>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+547: p35 = new_with_vtable(descr=<SizeDescr 32>)
+591: p36 = new_with_vtable(descr=<SizeDescr 40>)
+602: setfield_gc(p36, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+613: setfield_gc(p36, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+617: setfield_gc(p36, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+621: setfield_gc(p36, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+625: p38 = new_with_vtable(descr=<SizeDescr 48>)
+636: p39 = new_with_vtable(descr=<SizeDescr 32>)
+647: setfield_gc(p39, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+655: p42 = new_array_clear(4, descr=<ArrayP 8>)
+681: setarrayitem_gc(p42, 0, ConstPtr(ptr44), descr=<ArrayP 8>)
+685: setarrayitem_gc(p42, 1, p31, descr=<ArrayP 8>)
+689: setarrayitem_gc(p42, 2, p33, descr=<ArrayP 8>)
+693: setarrayitem_gc(p42, 3, p33, descr=<ArrayP 8>)
+697: setfield_gc(p39, p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+708: setfield_gc(p39, ConstPtr(ptr48), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+712: setfield_gc(p35, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+716: setfield_gc(p38, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+720: setfield_gc(p35, p36, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+724: setfield_gc(p35, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+728: setfield_gc(p38, p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+732: setfield_gc(p38, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+743: setfield_gc(p38, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+747: setfield_gc(p38, p39, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+751: jump(p35, p38, descr=TargetToken(59469520))
+784: --end of the loop--
[3e4c22b27aefa84] jit-log-opt-bridge}
[3e4c22b28d4e017] {jit-backend
[3e4c22b28dc73c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd0c
[3e4c22b28dcd9f6] jit-backend-dump}
[3e4c22b28ddd23d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd124 +0  25000000
[3e4c22b28dde78b] jit-backend-dump}
[3e4c22b28de2e6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd355 +0  25000000
[3e4c22b28de3df8] jit-backend-dump}
[3e4c22b28de75e9] {jit-backend-addr
bridge out of Guard 0x382fd00 has address 0x7f4a5c1fd120 to 0x7f4a5c1fd350
       gc table: 0x7f4a5c1fd0c0
    jump target: 0x7f4a5c1fd120
         resops: 0x7f4a5c1fd12e
       failures: 0x7f4a5c1fd350
            end: 0x7f4a5c1fd473
[3e4c22b28de9c75] jit-backend-addr}
[3e4c22b28ded6b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd14d +0  5E020000
[3e4c22b28dee54e] jit-backend-dump}
[3e4c22b28df1b63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd164 +0  63020000
[3e4c22b28df28e6] jit-backend-dump}
[3e4c22b28df5ca9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd17b +0  68020000
[3e4c22b28df69f2] jit-backend-dump}
[3e4c22b28df9d22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd192 +0  6D020000
[3e4c22b28dfaa19] jit-backend-dump}
[3e4c22b28dfdd46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd1a8 +0  73020000
[3e4c22b28dfea4c] jit-backend-dump}
[3e4c22b28e01d61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd1bf +0  78020000
[3e4c22b28e02a5e] jit-backend-dump}
[3e4c22b28e05cfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd1d9 +0  7A020000
[3e4c22b28e069f5] jit-backend-dump}
[3e4c22b28e0a077] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5c71 +0  AB740300
[3e4c22b28e0adc7] jit-backend-dump}
[3e4c22b28e0f901] jit-backend}
[3e4c22b28e13763] {jit-log-opt-bridge
# bridge out of Guard 0x382fd00 with 53 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8]
+118: guard_not_invalidated(descr=<Guard0x4a7fa60>) [p0, p1, p2, p3, p4, p5, p6, p7, p8]
+118: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+136: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x4a7d778>) [p0, p1, p2, p3, p4, p5, p6, p7, p8]
+145: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+149: guard_nonnull_class(p11, 16470384, descr=<Guard0x4a7fac0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8]
+168: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+172: guard_nonnull_class(p13, ConstClass(W_Symbol), descr=<Guard0x4a7fb20>) [p0, p1, p2, p3, p4, p5, p6, p7, p8]
+191: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+195: guard_nonnull_class(p15, 16470384, descr=<Guard0x4a7fb80>) [p0, p1, p2, p3, p4, p5, p6, p7, p8]
+214: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+218: guard_nonnull_class(p17, ConstClass(W_Symbol), descr=<Guard0x4a7fbe0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8]
+236: p19 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+240: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x4a7fc40>) [p0, p1, p2, p3, p4, p5, p6, p7, p8]
+259: p21 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+263: p22 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+267: guard_nonnull_class(p22, 16616448, descr=<Guard0x4a7fca0>) [p0, p1, p2, p3, p4, p5, p6, p7, p8]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+285: p24 = new_with_vtable(descr=<SizeDescr 32>)
+332: p25 = new_with_vtable(descr=<SizeDescr 48>)
+343: p26 = new_with_vtable(descr=<SizeDescr 48>)
+361: setfield_gc(p26, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+379: setfield_gc(p26, p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+383: setfield_gc(p26, p3, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+394: setfield_gc(p26, ConstPtr(ptr27), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+398: p28 = new_with_vtable(descr=<SizeDescr 32>)
+410: setfield_gc(p28, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+418: p31 = new_array_clear(4, descr=<ArrayP 8>)
+458: setarrayitem_gc(p31, 0, ConstPtr(ptr33), descr=<ArrayP 8>)
+462: setarrayitem_gc(p31, 1, p2, descr=<ArrayP 8>)
+466: setarrayitem_gc(p31, 2, p1, descr=<ArrayP 8>)
+470: setarrayitem_gc(p31, 3, p0, descr=<ArrayP 8>)
+474: setfield_gc(p28, p31, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+485: setfield_gc(p28, ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+489: setfield_gc(p26, p28, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+500: p38 = new_with_vtable(descr=<SizeDescr 32>)
+512: setfield_gc(p38, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+520: p41 = new_array_clear(4, descr=<ArrayP 8>)
+539: setarrayitem_gc(p41, 0, ConstPtr(ptr43), descr=<ArrayP 8>)
+543: setarrayitem_gc(p41, 1, p13, descr=<ArrayP 8>)
+547: setarrayitem_gc(p41, 2, p17, descr=<ArrayP 8>)
+551: setarrayitem_gc(p41, 3, p19, descr=<ArrayP 8>)
+555: setfield_gc(p38, p41, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+559: setfield_gc(p38, ConstPtr(ptr47), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+563: setfield_gc(p24, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+575: setfield_gc(p24, p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+580: setfield_gc(p24, p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+592: setfield_gc(p25, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+603: setfield_gc(p25, p21, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+607: setfield_gc(p25, p26, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+611: setfield_gc(p25, ConstPtr(ptr48), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+622: setfield_gc(p25, p38, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+626: jump(p24, p25, descr=TargetToken(59469520))
+656: --end of the loop--
[3e4c22b28e48359] jit-log-opt-bridge}
[3e4c22b2913a760] {jit-backend
[3e4c22b291b2093] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd5d0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CA202000048FF0425A0A914048139D00C01000F85000000004C8B79104983FF01720741813FA8B800000F85000000004C8B71184983FE01720741813EB09700000F85000000004C8B69204983FD01720841817D00B09700000F85000000004D8B67104C8B0DDDFEFFFF4D39CC0F850000000041813AC81800000F85000000004D8B4A084983F9017207418139900F00000F85000000004D8B67204D8B4708418138102001000F85000000004983FC01720841813C24B09700000F8500000000498B7F284883FF017206813F601400000F8500000000498B77304883FE017206813E601400000F85000000004C8B7F08488B7E084939FF0F8500000000498B7E104883FF017206813FB09700000F85000000004C8B7F104983FF01720741813F40D202000F8500000000488B3576FEFFFF4939F70F8500000000498B7424084883FE017206813EF08C00000F8500000000488B5F084883FB017206813BF08C00000F8500000000488B0C25F091F900488D9128010000483B14251092F9000F874901000048891425F091F90048C701700B0100488D512048C702B8B500004C894208488B051EFEFFFF488942104C89621848897A20488D7A2848C707A816000048898D30010000488D4F3048C701C81800004C8949084C8941104C8951184C8B15EAFDFFFF4C8951204C8D513849C702B8B500004D894208498942104D8962184D8972204C8951284C8971304D8D722849C706F08C000049C74608040000004D8D562049C702080E000049C74208040000004C8B259EFDFFFF4D8962104989721849895A2049895A284D8956104C8B158BFDFFFF4D8956184C8B9530010000498952084C894F084D897A104D896A184C89471048894F18488B0D69FDFFFF48894F204C8977284C8995300100004889BD3801000049BBC05A1C5C4A7F000041FFE3660F1F44000048C7442408FFFFFF0049BB88D41F5C4A7F00004C895D204D8D9B686EFCFF41FFD3E938FDFFFF49BBB8D51F5C4A7F00004C895D204D8D9B3875FCFF41FFD3E9A2FEFFFFFF3537FCFFFF49BB98D41F5C4A7F000041534D8D9B686BFCFF41FFE3FF3523FCFFFF49BBA8D41F5C4A7F000041534D8D9B586BFCFF41FFE3FF350FFCFFFF49BBB8D41F5C4A7F000041534D8D9B486BFCFF41FFE3FF35FBFBFFFF49BBC8D41F5C4A7F000041534D8D9B386BFCFF41FFE3FF35EFFBFFFF49BBD8D41F5C4A7F000041534D8D9B286BFCFF41FFE3FF35DBFBFFFF49BBE8D41F5C4A7F000041534D8D9B186BFCFF41FFE3FF35C7FBFFFF49BBF8D41F5C4A7F000041534D8D9B086BFCFF41FFE3FF35B3FBFFFF49BB08D51F5C4A7F000041534D8D9BF86AFCFF41FFE3FF359FFBFFFF49BB18D51F5C4A7F000041534D8D9BE86AFCFF41FFE3FF358BFBFFFF49BB28D51F5C4A7F000041534D8D9BD86AFCFF41FFE3FF3577FBFFFF49BB38D51F5C4A7F000041534D8D9BC86AFCFF41FFE3FF3563FBFFFF49BB48D51F5C4A7F000041534D8D9BB86AFCFF41FFE3FF354FFBFFFF49BB58D51F5C4A7F000041534D8D9BA86AFCFF41FFE3FF353BFBFFFF49BB68D51F5C4A7F000041534D8D9B986AFCFF41FFE3FF3527FBFFFF49BB78D51F5C4A7F000041534D8D9B886AFCFF41FFE3FF351BFBFFFF49BB88D51F5C4A7F000041534D8D9B786AFCFF41FFE3FF3507FBFFFF49BB98D51F5C4A7F000041534D8D9B686AFCFF41FFE3FF35F3FAFFFF49BBA8D51F5C4A7F000041534D8D9B586AFCFF41FFE3
[3e4c22b291ba41d] jit-backend-dump}
[3e4c22b291c58e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd6a4 +0  25000000
[3e4c22b291c6e83] jit-backend-dump}
[3e4c22b291cb113] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd955 +0  25000000
[3e4c22b291cc034] jit-backend-dump}
[3e4c22b291cf6e7] {jit-backend-addr
bridge out of Guard 0x3da2f50 has address 0x7f4a5c1fd6a0 to 0x7f4a5c1fd950
       gc table: 0x7f4a5c1fd5d0
    jump target: 0x7f4a5c1fd6a0
         resops: 0x7f4a5c1fd6ae
       failures: 0x7f4a5c1fd950
            end: 0x7f4a5c1fdb8b
[3e4c22b291d1a58] jit-backend-addr}
[3e4c22b291d53e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd6be +0  D1020000
[3e4c22b291d6292] jit-backend-dump}
[3e4c22b291d9781] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd6d5 +0  D6020000
[3e4c22b291da53e] jit-backend-dump}
[3e4c22b291dd904] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd6ec +0  DB020000
[3e4c22b291de66f] jit-backend-dump}
[3e4c22b291e18ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd704 +0  DF020000
[3e4c22b291e25f1] jit-backend-dump}
[3e4c22b291e57fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd718 +0  E7020000
[3e4c22b291e653c] jit-backend-dump}
[3e4c22b291e97a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd725 +0  F6020000
[3e4c22b291ea4e8] jit-backend-dump}
[3e4c22b291ed726] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd73c +0  FB020000
[3e4c22b291ee46d] jit-backend-dump}
[3e4c22b291f1677] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd751 +0  02030000
[3e4c22b291f23eb] jit-backend-dump}
[3e4c22b291f560e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd765 +0  0A030000
[3e4c22b291f63a4] jit-backend-dump}
[3e4c22b291f9782] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd77b +0  2C030000
[3e4c22b291fa4c3] jit-backend-dump}
[3e4c22b291fd7e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd791 +0  32030000
[3e4c22b291fe548] jit-backend-dump}
[3e4c22b29201777] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd7a2 +0  3D030000
[3e4c22b292024be] jit-backend-dump}
[3e4c22b292056e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd7b8 +0  43030000
[3e4c22b29206418] jit-backend-dump}
[3e4c22b2920969c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd7cf +0  48030000
[3e4c22b2920a3f2] jit-backend-dump}
[3e4c22b2920d640] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd7df +0  54030000
[3e4c22b2920e3c9] jit-backend-dump}
[3e4c22b2921160e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd7f6 +0  59030000
[3e4c22b2921234e] jit-backend-dump}
[3e4c22b2921556e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fd80c +0  5F030000
[3e4c22b292162ae] jit-backend-dump}
[3e4c22b292197ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e0ae9 +0  B3CB0100
[3e4c22b2921a557] jit-backend-dump}
[3e4c22b2921e614] jit-backend}
[3e4c22b292224d5] {jit-log-opt-bridge
# bridge out of Guard 0x3da2f50 with 99 ops
[p0, p1]
+230: guard_class(p1, 16500368, descr=<Guard0x4a7fd00>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+246: guard_nonnull_class(p3, 16478824, descr=<Guard0x4a7fd60>) [p0, p1]
+265: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+269: guard_nonnull_class(p5, 16470384, descr=<Guard0x4a7fdc0>) [p0, p1]
+288: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+292: guard_nonnull_class(p7, 16470384, descr=<Guard0x4a7fe20>) [p0, p1]
+312: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+323: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x4a7d808>) [p0, p1]
+332: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+332: guard_class(p0, 16437896, descr=<Guard0x4a7d850>) [p0, p1]
+345: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+349: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x4a7fe80>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+368: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+372: p16 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+376: guard_class(p16, 16505296, descr=<Guard0x4a7d898>) [p0, p1]
+389: guard_nonnull_class(p15, 16470384, descr=<Guard0x4a7fee0>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+409: guard_not_invalidated(descr=<Guard0x4a7d8e0>) [p0, p1]
+409: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+413: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x4a7ff40>) [p0, p1]
+431: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+435: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x4a7ffa0>) [p0, p1]
+453: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+457: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+461: i25 = int_eq(i23, i24)
+464: guard_true(i25, descr=<Guard0x4a7d928>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+470: p26 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+474: guard_nonnull_class(p26, 16470384, descr=<Guard0x520e020>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+492: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+496: guard_nonnull_class(p28, 16616448, descr=<Guard0x520e080>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+522: i31 = instance_ptr_eq(p28, ConstPtr(ptr30))
+525: guard_true(i31, descr=<Guard0x4a7d970>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+531: p32 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+536: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x520e0e0>) [p0, p1]
+554: p34 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+558: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x520e140>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+576: p36 = new_with_vtable(descr=<SizeDescr 32>)
+620: p37 = new_with_vtable(descr=<SizeDescr 40>)
+631: setfield_gc(p37, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+642: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+646: setfield_gc(p37, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+650: setfield_gc(p37, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+654: p39 = new_with_vtable(descr=<SizeDescr 48>)
+665: p40 = new_with_vtable(descr=<SizeDescr 56>)
+683: setfield_gc(p40, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+687: setfield_gc(p40, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+691: setfield_gc(p40, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+702: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+706: p42 = new_with_vtable(descr=<SizeDescr 40>)
+717: setfield_gc(p42, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+721: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+725: setfield_gc(p42, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+729: setfield_gc(p42, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+733: setfield_gc(p40, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+737: setfield_gc(p40, p5, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+741: p44 = new_with_vtable(descr=<SizeDescr 32>)
+752: setfield_gc(p44, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+760: p47 = new_array_clear(4, descr=<ArrayP 8>)
+786: setarrayitem_gc(p47, 0, ConstPtr(ptr49), descr=<ArrayP 8>)
+790: setarrayitem_gc(p47, 1, p32, descr=<ArrayP 8>)
+794: setarrayitem_gc(p47, 2, p34, descr=<ArrayP 8>)
+798: setarrayitem_gc(p47, 3, p34, descr=<ArrayP 8>)
+802: setfield_gc(p44, p47, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+813: setfield_gc(p44, ConstPtr(ptr53), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+817: setfield_gc(p36, p37, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+828: setfield_gc(p39, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+832: setfield_gc(p36, p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+836: setfield_gc(p36, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+840: setfield_gc(p39, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+844: setfield_gc(p39, p40, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+855: setfield_gc(p39, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+859: setfield_gc(p39, p44, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+863: jump(p36, p39, descr=TargetToken(59469520))
+896: --end of the loop--
[3e4c22b2926dd0b] jit-log-opt-bridge}
[3e4c22b29906002] {jit-backend
[3e4c22b29994f54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdd
[3e4c22b299a072b] jit-backend-dump}
[3e4c22b299ac24b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fde84 +0  25000000
[3e4c22b299ad7e8] jit-backend-dump}
[3e4c22b299b205a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe1d5 +0  25000000
[3e4c22b299b2fae] jit-backend-dump}
[3e4c22b299b66e8] {jit-backend-addr
bridge out of Guard 0x3e12c38 has address 0x7f4a5c1fde80 to 0x7f4a5c1fe1d0
       gc table: 0x7f4a5c1fdd70
    jump target: 0x7f4a5c1fde80
         resops: 0x7f4a5c1fde8e
       failures: 0x7f4a5c1fe1d0
            end: 0x7f4a5c1fe507
[3e4c22b299b8c33] jit-backend-addr}
[3e4c22b299bc379] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fde9e +0  71030000
[3e4c22b299bd238] jit-backend-dump}
[3e4c22b299c06d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdeb5 +0  76030000
[3e4c22b299c141a] jit-backend-dump}
[3e4c22b299c477b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdec5 +0  82030000
[3e4c22b299c5456] jit-backend-dump}
[3e4c22b299c87ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fded1 +0  92030000
[3e4c22b299c9455] jit-backend-dump}
[3e4c22b299cc742] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdee9 +0  96030000
[3e4c22b299cd405] jit-backend-dump}
[3e4c22b299d06a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdefb +0  A0030000
[3e4c22b299d1340] jit-backend-dump}
[3e4c22b299d46a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdf10 +0  A7030000
[3e4c22b299d5333] jit-backend-dump}
[3e4c22b299d874b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdf30 +0  A3030000
[3e4c22b299d93fc] jit-backend-dump}
[3e4c22b299dc7d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdf47 +0  C4030000
[3e4c22b299dd488] jit-backend-dump}
[3e4c22b299e0826] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdf5a +0  CD030000
[3e4c22b299e14b8] jit-backend-dump}
[3e4c22b299e47b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdf6b +0  D8030000
[3e4c22b299e5430] jit-backend-dump}
[3e4c22b299e8723] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdf7e +0  E1030000
[3e4c22b299e9390] jit-backend-dump}
[3e4c22b299ec6c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdf88 +0  F3030000
[3e4c22b299ed34c] jit-backend-dump}
[3e4c22b299f064b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdf95 +0  02040000
[3e4c22b299f12be] jit-backend-dump}
[3e4c22b299f45ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdfa7 +0  0C040000
[3e4c22b299f522a] jit-backend-dump}
[3e4c22b299f851a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdfbd +0  12040000
[3e4c22b299f918a] jit-backend-dump}
[3e4c22b299fc465] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdfd5 +0  16040000
[3e4c22b299fd0fa] jit-backend-dump}
[3e4c22b29a003dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdfec +0  1B040000
[3e4c22b29a01060] jit-backend-dump}
[3e4c22b29a04309] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fdff5 +0  2E040000
[3e4c22b29a05022] jit-backend-dump}
[3e4c22b29a082e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe008 +0  37040000
[3e4c22b29a08f85] jit-backend-dump}
[3e4c22b29a0c23a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe015 +0  46040000
[3e4c22b29a0cec6] jit-backend-dump}
[3e4c22b29a10197] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe02d +0  4A040000
[3e4c22b29a10e4e] jit-backend-dump}
[3e4c22b29a14150] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe044 +0  4F040000
[3e4c22b29a14ddf] jit-backend-dump}
[3e4c22b29a180cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe04d +0  62040000
[3e4c22b29a18d54] jit-backend-dump}
[3e4c22b29a1c03b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe064 +0  67040000
[3e4c22b29a1ccae] jit-backend-dump}
[3e4c22b29a1ffaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe07c +0  6B040000
[3e4c22b29a20c1a] jit-backend-dump}
[3e4c22b29a241e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4d91 +0  EB900100
[3e4c22b29a24eb4] jit-backend-dump}
[3e4c22b29a290a3] jit-backend}
[3e4c22b29a2ce63] {jit-log-opt-bridge
# bridge out of Guard 0x3e12c38 with 130 ops
[p0, p1]
+294: guard_class(p1, 16500016, descr=<Guard0x520e1a0>) [p0, p1]
+306: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+310: guard_nonnull_class(p3, 16470384, descr=<Guard0x520e200>) [p0, p1]
+336: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+339: guard_false(i6, descr=<Guard0x4a7da00>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+345: guard_class(p0, 16437896, descr=<Guard0x4a7da48>) [p0, p1]
+357: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+361: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x520e260>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+381: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+385: guard_class(p10, 16478824, descr=<Guard0x4a7da90>) [p0, p1]
+399: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+411: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x4a7dad8>) [p0, p1]
+420: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+425: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+430: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+435: p17 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+440: guard_class(p17, 16505296, descr=<Guard0x4a7db20>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+452: guard_not_invalidated(descr=<Guard0x4a7db68>) [p0, p1]
+452: p19 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+457: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x520e2c0>) [p0, p1]
+475: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x520e320>) [p0, p1]
+494: i22 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+498: i23 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+502: i24 = int_eq(i22, i23)
+505: guard_false(i24, descr=<Guard0x4a7dbb0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+511: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x520e380>) [p0, p1]
+530: i27 = int_ge(i23, 0)
+534: guard_true(i27, descr=<Guard0x4a7dbf8>) [p0, p1]
+540: i28 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+544: i29 = int_lt(i23, i28)
+547: guard_true(i29, descr=<Guard0x4a7dc40>) [p0, p1]
+553: p30 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+557: guard_class(p30, 16622984, descr=<Guard0x4a7dc88>) [p0, p1]
+571: p32 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+575: p33 = getarrayitem_gc_r(p32, i23, descr=<ArrayP 8>)
+580: guard_class(p33, 16470384, descr=<Guard0x4a7dcd0>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+593: p35 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+597: guard_nonnull_class(p35, 16616448, descr=<Guard0x520e3e0>) [p0, p1]
+617: p37 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+621: guard_nonnull_class(p37, 16470384, descr=<Guard0x520e440>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+640: i40 = instance_ptr_eq(p35, ConstPtr(ptr39))
+643: guard_true(i40, descr=<Guard0x4a7dd18>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+649: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x520e4a0>) [p0, p1]
+668: i42 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+672: i43 = int_eq(i23, i42)
+675: guard_true(i43, descr=<Guard0x4a7dd60>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+681: p44 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+685: guard_nonnull_class(p44, 16470384, descr=<Guard0x520e500>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+705: p46 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+710: guard_nonnull_class(p46, 16616448, descr=<Guard0x520e560>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+728: i49 = instance_ptr_eq(p46, ConstPtr(ptr48))
+731: guard_true(i49, descr=<Guard0x4a7dda8>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+737: p50 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+741: guard_nonnull_class(p50, ConstClass(W_Symbol), descr=<Guard0x520e5c0>) [p0, p1]
+760: p52 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+765: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x520e620>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+784: p54 = new_with_vtable(descr=<SizeDescr 32>)
+828: p55 = new_with_vtable(descr=<SizeDescr 40>)
+839: setfield_gc(p55, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+850: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+854: setfield_gc(p55, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+858: setfield_gc(p55, p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+862: p57 = new_with_vtable(descr=<SizeDescr 48>)
+874: p58 = new_with_vtable(descr=<SizeDescr 56>)
+893: setfield_gc(p58, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+897: setfield_gc(p58, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+901: setfield_gc(p58, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+912: setfield_gc(p58, ConstPtr(ptr59), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+916: p60 = new_with_vtable(descr=<SizeDescr 40>)
+927: setfield_gc(p60, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+931: setfield_gc(p60, ConstPtr(ptr61), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+935: setfield_gc(p60, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+939: setfield_gc(p60, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+943: setfield_gc(p58, p60, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+947: setfield_gc(p58, p33, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+951: p62 = new_with_vtable(descr=<SizeDescr 32>)
+962: setfield_gc(p62, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+970: p65 = new_array_clear(4, descr=<ArrayP 8>)
+996: setarrayitem_gc(p65, 0, ConstPtr(ptr67), descr=<ArrayP 8>)
+1000: setarrayitem_gc(p65, 1, p50, descr=<ArrayP 8>)
+1004: setarrayitem_gc(p65, 2, p52, descr=<ArrayP 8>)
+1008: setarrayitem_gc(p65, 3, p52, descr=<ArrayP 8>)
+1012: setfield_gc(p62, p65, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1023: setfield_gc(p62, ConstPtr(ptr71), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1027: setfield_gc(p54, p46, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1038: setfield_gc(p57, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1043: setfield_gc(p54, p55, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1047: setfield_gc(p54, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1051: setfield_gc(p57, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1056: setfield_gc(p57, p58, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1068: setfield_gc(p57, ConstPtr(ptr72), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1073: setfield_gc(p57, p62, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1078: jump(p54, p57, descr=TargetToken(59469520))
+1120: --end of the loop--
[3e4c22b29a88c2d] jit-log-opt-bridge}
[3e4c22b29f36dcf] {jit-backend
[3e4c22b2a020c51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe
[3e4c22b2a02a377] jit-backend-dump}
[3e4c22b2a03562b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe734 +0  2A000000
[3e4c22b2a036a5c] jit-backend-dump}
[3e4c22b2a03b0c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fead5 +0  2A000000
[3e4c22b2a03bfc5] jit-backend-dump}
[3e4c22b2a03f7b0] {jit-backend-addr
bridge out of Guard 0x3cecc80 has address 0x7f4a5c1fe730 to 0x7f4a5c1fead0
       gc table: 0x7f4a5c1fe670
    jump target: 0x7f4a5c1fe730
         resops: 0x7f4a5c1fe73e
       failures: 0x7f4a5c1fead0
            end: 0x7f4a5c1fed43
[3e4c22b2a041edb] jit-backend-addr}
[3e4c22b2a0459f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe74b +0  E0030000
[3e4c22b2a046829] jit-backend-dump}
[3e4c22b2a049dfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe76a +0  DD030000
[3e4c22b2a04ab00] jit-backend-dump}
[3e4c22b2a04de73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe777 +0  EC030000
[3e4c22b2a04eb7c] jit-backend-dump}
[3e4c22b2a051f5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe792 +0  ED030000
[3e4c22b2a052c79] jit-backend-dump}
[3e4c22b2a056005] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe7a9 +0  F2030000
[3e4c22b2a056d6a] jit-backend-dump}
[3e4c22b2a05a237] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe7b6 +0  01040000
[3e4c22b2a05af3d] jit-backend-dump}
[3e4c22b2a05e1d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe7d1 +0  02040000
[3e4c22b2a05eed4] jit-backend-dump}
[3e4c22b2a062174] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe7ec +0  03040000
[3e4c22b2a062e8d] jit-backend-dump}
[3e4c22b2a066124] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe7f6 +0  15040000
[3e4c22b2a066e2d] jit-backend-dump}
[3e4c22b2a06a09c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe80b +0  1C040000
[3e4c22b2a06ad87] jit-backend-dump}
[3e4c22b2a06dfe4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe81b +0  28040000
[3e4c22b2a06ecf3] jit-backend-dump}
[3e4c22b2a071f6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe891 +0  CE030000
[3e4c22b2a072c7b] jit-backend-dump}
[3e4c22b2a075f40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe8a2 +0  D9030000
[3e4c22b2a076c4c] jit-backend-dump}
[3e4c22b2a07a0f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe8f6 +0  A1030000
[3e4c22b2a07ae2e] jit-backend-dump}
[3e4c22b2a07e1b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe8ff +0  B4030000
[3e4c22b2a07ee4f] jit-backend-dump}
[3e4c22b2a0821d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe90f +0  C0030000
[3e4c22b2a082ed8] jit-backend-dump}
[3e4c22b2a0862de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe94c +0  9F030000
[3e4c22b2a086fcc] jit-backend-dump}
[3e4c22b2a08a35a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe963 +0  A4030000
[3e4c22b2a08b05a] jit-backend-dump}
[3e4c22b2a08e3b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe973 +0  B0030000
[3e4c22b2a08f0a3] jit-backend-dump}
[3e4c22b2a09272e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7307 +0  25740200
[3e4c22b2a09341c] jit-backend-dump}
[3e4c22b2a0976db] jit-backend}
[3e4c22b2a09b543] {jit-log-opt-bridge
# bridge out of Guard 0x3cecc80 with 144 ops
[i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+214: guard_not_invalidated(descr=<Guard0x520e680>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+214: i13 = int_lt(i10, i4)
+217: guard_true(i13, descr=<Guard0x4a7de80>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41))')
+223: p14 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+234: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x520e6e0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(- nc25224 1)')
+254: i17 = int_sub_ovf(i5, 1)
+261: guard_no_overflow(descr=<Guard0x4a7dec8>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(loop25220 lst5238 AppRand41)')
+267: p18 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+285: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x4a7df10>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+294: p20 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+298: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x520e740>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+317: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+321: i23 = int_lt(i17, i22)
+324: guard_true(i23, descr=<Guard0x4a7df58>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37))')
debug_merge_point(0, 0, '(- nc15216 1)')
+330: i25 = int_sub(i22, 1)
debug_merge_point(0, 0, '(loop15212 lst5222 AppRand37)')
+334: p26 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+338: guard_nonnull_class(p26, 16482960, descr=<Guard0x520e7a0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+357: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+375: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x4a7dfa0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+384: p30 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if8 (< nc15216 0)]) (if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3)))))')
debug_merge_point(0, 0, '(< nc15216 0)')
+384: i32 = int_lt(i25, 0)
+388: guard_false(i32, descr=<Guard0x5216020>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3))))')
debug_merge_point(0, 0, '(let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3)))')
debug_merge_point(0, 0, 'lst5214')
debug_merge_point(0, 0, '(lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))')
+394: i33 = getfield_gc_i(p26, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+398: p34 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+402: guard_class(p34, 16505296, descr=<Guard0x5216068>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(- m5210 nc15216)')
+415: i36 = int_sub_ovf(i33, i25)
+425: guard_no_overflow(descr=<Guard0x52160b0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(loop25220 lst5214 (quotient AppRand49 3))')
+431: i38 = int_eq(i36, -9223372036854775808)
+431: i40 = int_rshift(i36, 63)
+442: i41 = int_xor(i36, i40)
+459: i43 = uint_mul_high(i41, -6148914691236517205)
+486: i45 = uint_rshift(i43, 1)
+489: i46 = int_xor(i45, i40)
+492: i48 = int_mul(i46, 3)
+499: i50 = int_xor(i36, 3)
+510: i52 = int_rshift(i50, 63)
+514: i53 = int_ne(i48, i36)
+530: i54 = int_and(i52, i53)
+533: i55 = int_add(i46, i54)
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5214 (quotient AppRand49 3))')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+536: i56 = int_lt(i55, i25)
+543: guard_false(i56, descr=<Guard0x52160f8>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))))')
debug_merge_point(0, 0, '(+ m5210 1)')
+549: i58 = int_add_ovf(i33, 1)
+560: guard_no_overflow(descr=<Guard0x5216140>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
+566: i59 = int_add(i25, i55)
debug_merge_point(0, 0, '(let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))')
debug_merge_point(0, 0, '(- (quotient AppRand38 2) AppRand39)')
+576: i61 = int_rshift(i58, 1)
+582: i63 = int_lshift(i61, 1)
+592: i65 = int_xor(i58, 2)
+603: i67 = int_rshift(i65, 63)
+607: i68 = int_ne(i63, i58)
+631: i69 = int_and(i67, i68)
+634: i70 = int_add(i61, i69)
+641: i71 = int_sub_ovf(i70, i59)
+644: guard_no_overflow(descr=<Guard0x5216188>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))')
debug_merge_point(0, 0, '(max nc25224 AppRand40)')
+650: i72 = int_lt(i55, i71)
+653: guard_false(i72, descr=<Guard0x52161d0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))')
debug_merge_point(0, 0, '(lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))')
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
debug_merge_point(0, 0, '(let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))')
debug_merge_point(0, 0, '(- m5210 AppRand47)')
+659: i73 = int_sub_ovf(i33, i59)
+669: guard_no_overflow(descr=<Guard0x5216218>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(loop35236 lst5222 (quotient AppRand48 2))')
+675: i75 = int_eq(i73, -9223372036854775808)
+675: i77 = int_rshift(i73, 1)
+681: i79 = int_lshift(i77, 1)
+687: i81 = int_xor(i73, 2)
+694: i83 = int_rshift(i81, 63)
+698: i84 = int_ne(i79, i73)
+717: i85 = int_and(i83, i84)
+720: i86 = int_add(i77, i85)
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
debug_merge_point(0, 0, '(< nc35240 start)')
+723: i87 = int_lt(i86, i55)
+730: guard_false(i87, descr=<Guard0x5216260>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+736: i88 = int_add(i55, i86)
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+746: i89 = int_add_ovf(i25, i88)
+753: guard_no_overflow(descr=<Guard0x52162a8>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+759: i90 = int_sub_ovf(i33, i89)
+769: guard_no_overflow(descr=<Guard0x52162f0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+775: i92 = int_sub(i86, 1)
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+779: p93 = new_with_vtable(descr=<SizeDescr 16>)
+823: p94 = new_with_vtable(descr=<SizeDescr 16>)
+834: setfield_gc(p93, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+845: p95 = new_with_vtable(descr=<SizeDescr 48>)
+856: p96 = new_with_vtable(descr=<SizeDescr 24>)
+874: p97 = new_with_vtable(descr=<SizeDescr 32>)
+892: setfield_gc(p97, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+900: p100 = new_array(4, descr=<ArrayS 8>)
+926: setarrayitem_gc(p100, 0, i2, descr=<ArrayS 8>)
+930: setarrayitem_gc(p100, 1, i5, descr=<ArrayS 8>)
+934: setarrayitem_gc(p100, 2, i1, descr=<ArrayS 8>)
+945: setarrayitem_gc(p100, 3, i0, descr=<ArrayS 8>)
+949: setfield_gc(p97, p100, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+960: setfield_gc(p97, ConstPtr(ptr105), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+964: setfield_gc(p95, ConstPtr(ptr106), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+968: setfield_gc(p95, p93, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+972: setfield_gc(p94, i33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+983: setfield_gc(p95, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+987: setfield_gc(p95, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+998: setfield_gc(p95, p94, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1002: setfield_gc(p96, p97, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1006: setfield_gc(p96, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1010: jump(p34, i55, p93, i55, p94, p95, i92, i25, i86, i90, p96, p11, p14, p93, p94, p34, descr=TargetToken(61027360))
+1120: --end of the loop--
[3e4c22b2a149bd1] jit-log-opt-bridge}
[3e4c22b2a28e049] {jit-backend
[3e4c22b2a2e5234] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fee
[3e4c22b2a2ecd05] jit-backend-dump}
[3e4c22b2a2f7793] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1feef4 +0  28000000
[3e4c22b2a2f8b8a] jit-backend-dump}
[3e4c22b2a2fcb1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff0d5 +0  28000000
[3e4c22b2a2fd9c4] jit-backend-dump}
[3e4c22b2a301090] {jit-backend-addr
bridge out of Guard 0x3cf64a0 has address 0x7f4a5c1feef0 to 0x7f4a5c1ff0d0
       gc table: 0x7f4a5c1fee60
    jump target: 0x7f4a5c1feef0
         resops: 0x7f4a5c1feefe
       failures: 0x7f4a5c1ff0d0
            end: 0x7f4a5c1ff29b
[3e4c22b2a30331b] jit-backend-addr}
[3e4c22b2a306ac0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fef0e +0  01020000
[3e4c22b2a30788d] jit-backend-dump}
[3e4c22b2a30ae5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fef25 +0  06020000
[3e4c22b2a30bb6a] jit-backend-dump}
[3e4c22b2a30f02b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fef35 +0  12020000
[3e4c22b2a30fd43] jit-backend-dump}
[3e4c22b2a31323e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fef41 +0  22020000
[3e4c22b2a313f3e] jit-backend-dump}
[3e4c22b2a317335] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fef58 +0  27020000
[3e4c22b2a318041] jit-backend-dump}
[3e4c22b2a31b4c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fef6a +0  31020000
[3e4c22b2a31c1af] jit-backend-dump}
[3e4c22b2a31f5bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fef7e +0  39020000
[3e4c22b2a3202c8] jit-backend-dump}
[3e4c22b2a32367b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fef9e +0  35020000
[3e4c22b2a324391] jit-backend-dump}
[3e4c22b2a327a7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fefb4 +0  57020000
[3e4c22b2a3287d1] jit-backend-dump}
[3e4c22b2a32bd06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fefc7 +0  60020000
[3e4c22b2a32ca00] jit-backend-dump}
[3e4c22b2a32fdbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fefd8 +0  6B020000
[3e4c22b2a330ad2] jit-backend-dump}
[3e4c22b2a333ea1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fefee +0  71020000
[3e4c22b2a334bdb] jit-backend-dump}
[3e4c22b2a338254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff004 +0  77020000
[3e4c22b2a338fd8] jit-backend-dump}
[3e4c22b2a33c7c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7cdf +0  0D720200
[3e4c22b2a33d4ee] jit-backend-dump}
[3e4c22b2a341990] jit-backend}
[3e4c22b2a3458bc] {jit-log-opt-bridge
# bridge out of Guard 0x3cf64a0 with 59 ops
[p0, p1]
+166: guard_class(p1, 16500016, descr=<Guard0x520e800>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+182: guard_nonnull_class(p3, 16470384, descr=<Guard0x520e860>) [p0, p1]
+208: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+211: guard_false(i6, descr=<Guard0x5216338>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+217: guard_class(p0, 16437896, descr=<Guard0x5216380>) [p0, p1]
+229: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+233: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x520e8c0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+252: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+256: guard_class(p10, 16479200, descr=<Guard0x52163c8>) [p0, p1]
+270: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+281: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x5216410>) [p0, p1]
+290: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+294: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+298: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+302: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+306: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+310: guard_class(p18, 16505296, descr=<Guard0x5216458>) [p0, p1]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+322: guard_not_invalidated(descr=<Guard0x52164a0>) [p0, p1]
+322: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+326: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x520e920>) [p0, p1]
+344: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x520e980>) [p0, p1]
+363: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+367: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+371: i25 = int_eq(i23, i24)
+374: guard_true(i25, descr=<Guard0x52164e8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+380: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+384: guard_nonnull_class(p26, 16616448, descr=<Guard0x520e9e0>) [p0, p1]
+402: p28 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+406: guard_nonnull_class(p28, 16470384, descr=<Guard0x520ea40>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+424: p30 = new_with_vtable(descr=<SizeDescr 32>)
+475: p31 = new_with_vtable(descr=<SizeDescr 56>)
+486: p32 = new_with_vtable(descr=<SizeDescr 64>)
+497: setfield_gc(p32, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+515: setfield_gc(p32, ConstPtr(ptr33), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+519: setfield_gc(p32, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+523: setfield_gc(p32, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+527: setfield_gc(p32, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+531: setfield_gc(p32, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+535: setfield_gc(p32, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+539: setfield_gc(p30, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+550: setfield_gc(p31, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+554: setfield_gc(p30, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+558: setfield_gc(p30, p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+562: setfield_gc(p31, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+566: setfield_gc(p31, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+584: setfield_gc(p31, ConstPtr(ptr34), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+588: setfield_gc(p31, p32, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+592: setfield_gc(p31, p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+596: jump(p30, p31, descr=TargetToken(61027440))
+624: --end of the loop--
[3e4c22b2a3794ac] jit-log-opt-bridge}
[3e4c22b2a9f6438] {jit-backend
[3e4c22b2aa62743] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff3e
[3e4c22b2aa6a845] jit-backend-dump}
[3e4c22b2aa75f00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff484 +0  25000000
[3e4c22b2aa77454] jit-backend-dump}
[3e4c22b2aa7b6ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff6d5 +0  25000000
[3e4c22b2aa7c5d7] jit-backend-dump}
[3e4c22b2aa7fcd7] {jit-backend-addr
bridge out of Guard 0x476e338 has address 0x7f4a5c1ff480 to 0x7f4a5c1ff6d0
       gc table: 0x7f4a5c1ff3e0
    jump target: 0x7f4a5c1ff480
         resops: 0x7f4a5c1ff48e
       failures: 0x7f4a5c1ff6d0
            end: 0x7f4a5c1ff8ef
[3e4c22b2aa8209a] jit-backend-addr}
[3e4c22b2aa85674] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff49e +0  71020000
[3e4c22b2aa864ef] jit-backend-dump}
[3e4c22b2aa89a4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff4b5 +0  76020000
[3e4c22b2aa8a7c3] jit-backend-dump}
[3e4c22b2aa8e22e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff4c1 +0  A2020000
[3e4c22b2aa8efb8] jit-backend-dump}
[3e4c22b2aa92634] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff4d7 +0  A8020000
[3e4c22b2aa93377] jit-backend-dump}
[3e4c22b2aa967a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff4eb +0  B0020000
[3e4c22b2aa97499] jit-backend-dump}
[3e4c22b2aa9a987] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff503 +0  B4020000
[3e4c22b2aa9b6b8] jit-backend-dump}
[3e4c22b2aa9eb67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff511 +0  C2020000
[3e4c22b2aa9f88e] jit-backend-dump}
[3e4c22b2aaa2c1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff52c +0  C3020000
[3e4c22b2aaa3939] jit-backend-dump}
[3e4c22b2aaa6ce3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff544 +0  C7020000
[3e4c22b2aaa79dd] jit-backend-dump}
[3e4c22b2aaaad0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff558 +0  CF020000
[3e4c22b2aaab9d6] jit-backend-dump}
[3e4c22b2aaaed9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff562 +0  E1020000
[3e4c22b2aaafa65] jit-backend-dump}
[3e4c22b2aab2df4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff578 +0  E7020000
[3e4c22b2aab3aad] jit-backend-dump}
[3e4c22b2aab6df0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff584 +0  F7020000
[3e4c22b2aab7aaf] jit-backend-dump}
[3e4c22b2aabae5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff5bd +0  DA020000
[3e4c22b2aabbb35] jit-backend-dump}
[3e4c22b2aabeedc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff5c9 +0  EA020000
[3e4c22b2aabfb99] jit-backend-dump}
[3e4c22b2aac2eb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ff5d5 +0  FA020000
[3e4c22b2aac3b5b] jit-backend-dump}
[3e4c22b2aac70ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1991 +0  EBDA0000
[3e4c22b2aac7d96] jit-backend-dump}
[3e4c22b2aacc02d] jit-backend}
[3e4c22b2aacfdea] {jit-log-opt-bridge
# bridge out of Guard 0x476e338 with 83 ops
[p0, p1]
+182: guard_class(p1, 16435920, descr=<Guard0x520eaa0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+198: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x520eb00>) [p0, p1]
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+217: guard_not_invalidated(descr=<Guard0x5216578>) [p0, p1]
+217: guard_class(p0, 16503536, descr=<Guard0x52165c0>) [p0, p1]
+229: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+233: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+237: guard_class(p7, 16478448, descr=<Guard0x5216608>) [p0, p1]
+251: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+262: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x5216650>) [p0, p1]
+271: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+275: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x520eb60>) [p0, p1]
+295: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+300: i14 = int_lt(i6, i13)
+303: guard_true(i14, descr=<Guard0x5216698>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31))')
debug_merge_point(0, 0, '(- nc15181 1)')
+309: i16 = int_sub(i13, 1)
debug_merge_point(0, 0, '(loop15177 lst5187 AppRand31)')
+313: p17 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+317: guard_nonnull_class(p17, 16482960, descr=<Guard0x520ebc0>) [p0, p1]
+336: p19 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+340: guard_nonnull_class(p19, 16470384, descr=<Guard0x520ec20>) [p0, p1]
+360: p21 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+371: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x52166e0>) [p0, p1]
+380: p23 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
+380: i25 = int_lt(i16, 0)
+384: guard_false(i25, descr=<Guard0x5216728>) [p0, p1]
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, '(let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))')
debug_merge_point(0, 0, 'lst5179')
debug_merge_point(0, 0, '(lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))')
+390: i26 = getfield_gc_i(p17, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+394: p27 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+398: guard_class(p27, 16505296, descr=<Guard0x5216770>) [p0, p1]
debug_merge_point(0, 0, '(- m nc15181)')
+412: i29 = int_sub_ovf(i26, i16)
+418: guard_no_overflow(descr=<Guard0x52167b8>) [p0, p1]
debug_merge_point(0, 0, '(loop25185 lst5179 (quotient AppRand36 2))')
+424: i31 = int_eq(i29, -9223372036854775808)
+424: i33 = int_rshift(i29, 1)
+430: i35 = int_lshift(i33, 1)
+436: i37 = int_xor(i29, 2)
+443: i39 = int_rshift(i37, 63)
+447: i40 = int_ne(i35, i29)
+466: i41 = int_and(i39, i40)
+469: i42 = int_add(i33, i41)
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+472: i43 = int_lt(i42, i16)
+475: guard_false(i43, descr=<Guard0x5216800>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+481: i44 = int_add_ovf(i16, i42)
+487: guard_no_overflow(descr=<Guard0x5216848>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+493: i45 = int_sub_ovf(i26, i44)
+499: guard_no_overflow(descr=<Guard0x5216890>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+505: i47 = int_sub(i42, 1)
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+509: p48 = new_with_vtable(descr=<SizeDescr 48>)
+560: p49 = new_with_vtable(descr=<SizeDescr 16>)
+571: setfield_gc(p49, i16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+575: p50 = new_with_vtable(descr=<SizeDescr 16>)
+586: setfield_gc(p50, i26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+630: i51 = getfield_gc_i(p49, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+634: i52 = getfield_gc_i(p50, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+638: setfield_gc(p48, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+642: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+646: setfield_gc(p48, p49, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+650: setfield_gc(p48, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+654: setfield_gc(p48, p50, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+658: jump(p48, i47, i16, i42, i45, p19, p1, p3, p49, i51, p50, i52, descr=TargetToken(61029360))
+752: --end of the loop--
[3e4c22b2ab0f522] jit-log-opt-bridge}
[3e4c22b2ae0f1c6] {jit-backend
[3e4c22b2ae9fb4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffb
[3e4c22b2aeaaacc] jit-backend-dump}
[3e4c22b2aeb6064] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffc74 +0  25000000
[3e4c22b2aeb766c] jit-backend-dump}
[3e4c22b2aebbc40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200005 +0  25000000
[3e4c22b2aebcc1b] jit-backend-dump}
[3e4c22b2aec052c] {jit-backend-addr
bridge out of Guard 0x3f76cc8 has address 0x7f4a5c1ffc70 to 0x7f4a5c200000
       gc table: 0x7f4a5c1ffb30
    jump target: 0x7f4a5c1ffc70
         resops: 0x7f4a5c1ffc7e
       failures: 0x7f4a5c200000
            end: 0x7f4a5c2003df
[3e4c22b2aec2c38] jit-backend-addr}
[3e4c22b2aec65b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffc8e +0  B1030000
[3e4c22b2aec74aa] jit-backend-dump}
[3e4c22b2aeca9c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffca5 +0  B6030000
[3e4c22b2aecb74d] jit-backend-dump}
[3e4c22b2aecebfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffcbc +0  BB030000
[3e4c22b2aecf94b] jit-backend-dump}
[3e4c22b2aed2d1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffcc8 +0  CB030000
[3e4c22b2aed3a38] jit-backend-dump}
[3e4c22b2aed6e85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffcdc +0  D3030000
[3e4c22b2aed7b91] jit-backend-dump}
[3e4c22b2aedb05e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffcfc +0  EB030000
[3e4c22b2aedbdde] jit-backend-dump}
[3e4c22b2aedf1a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffd10 +0  F3030000
[3e4c22b2aedfec9] jit-backend-dump}
[3e4c22b2aee31b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffd25 +0  FA030000
[3e4c22b2aee3ef3] jit-backend-dump}
[3e4c22b2aee7207] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffd32 +0  09040000
[3e4c22b2aee7f4b] jit-backend-dump}
[3e4c22b2aeeb1c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffd49 +0  0E040000
[3e4c22b2aeebee5] jit-backend-dump}
[3e4c22b2aeef197] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffd69 +0  0A040000
[3e4c22b2aeefecb] jit-backend-dump}
[3e4c22b2aef3214] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffd80 +0  0F040000
[3e4c22b2aef3f48] jit-backend-dump}
[3e4c22b2aef71df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffd92 +0  19040000
[3e4c22b2aef7ef1] jit-backend-dump}
[3e4c22b2aefb145] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffda3 +0  24040000
[3e4c22b2aefbe6d] jit-backend-dump}
[3e4c22b2aeff0c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffdb6 +0  2D040000
[3e4c22b2aeffe0a] jit-backend-dump}
[3e4c22b2af0307c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffdc0 +0  3F040000
[3e4c22b2af03db6] jit-backend-dump}
[3e4c22b2af0702c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffdcd +0  4E040000
[3e4c22b2af07d54] jit-backend-dump}
[3e4c22b2af0b06b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffddd +0  5A040000
[3e4c22b2af0bdbb] jit-backend-dump}
[3e4c22b2af0f039] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffdf3 +0  60040000
[3e4c22b2af0fd73] jit-backend-dump}
[3e4c22b2af1302c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe11 +0  5E040000
[3e4c22b2af13d69] jit-backend-dump}
[3e4c22b2af1704d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe28 +0  63040000
[3e4c22b2af17d78] jit-backend-dump}
[3e4c22b2af1b05e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe3a +0  6D040000
[3e4c22b2af1bdae] jit-backend-dump}
[3e4c22b2af1f020] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe47 +0  7C040000
[3e4c22b2af1fd4b] jit-backend-dump}
[3e4c22b2af22feb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe51 +0  8E040000
[3e4c22b2af23d19] jit-backend-dump}
[3e4c22b2af26fde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe5a +0  A1040000
[3e4c22b2af27d24] jit-backend-dump}
[3e4c22b2af2b002] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe6d +0  AA040000
[3e4c22b2af2bdde] jit-backend-dump}
[3e4c22b2af2f097] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe84 +0  AF040000
[3e4c22b2af2fdef] jit-backend-dump}
[3e4c22b2af330a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe8d +0  C2040000
[3e4c22b2af33deb] jit-backend-dump}
[3e4c22b2af370d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffea4 +0  C7040000
[3e4c22b2af37e49] jit-backend-dump}
[3e4c22b2af3b0f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffebb +0  CC040000
[3e4c22b2af3be08] jit-backend-dump}
[3e4c22b2af3f129] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffed2 +0  D1040000
[3e4c22b2af3fe3b] jit-backend-dump}
[3e4c22b2af4310c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffee9 +0  D6040000
[3e4c22b2af43e22] jit-backend-dump}
[3e4c22b2af4733b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9ae9 +0  83610100
[3e4c22b2af48060] jit-backend-dump}
[3e4c22b2af4c163] jit-backend}
[3e4c22b2af500a1] {jit-log-opt-bridge
# bridge out of Guard 0x3f76cc8 with 127 ops
[p0, p1]
+342: guard_class(p1, 16500016, descr=<Guard0x520ec80>) [p0, p1]
+354: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+358: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x520ece0>) [p0, p1]
+377: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+381: guard_nonnull_class(p5, 16616448, descr=<Guard0x520ed40>) [p0, p1]
+400: guard_class(p0, 16437896, descr=<Guard0x5216920>) [p0, p1]
+412: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+423: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x5216968>) [p0, p1]
+432: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+432: guard_not_invalidated(descr=<Guard0x52169b0>) [p0, p1]
+432: p11 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+436: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+440: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+444: guard_nonnull_class(p11, 16478824, descr=<Guard0x520eda0>) [p0, p1]
+464: guard_nonnull_class(p12, 16470384, descr=<Guard0x520ee00>) [p0, p1]
+484: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+496: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x52169f8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+505: guard_class(p13, 16437896, descr=<Guard0x5216a40>) [p0, p1]
+518: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+522: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x520ee60>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+541: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+546: p22 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+551: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+556: p24 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+561: guard_class(p24, 16505296, descr=<Guard0x5216a88>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+573: p26 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+578: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x520eec0>) [p0, p1]
+596: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x520ef20>) [p0, p1]
+614: i29 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+618: i30 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+622: i31 = int_eq(i29, i30)
+625: guard_false(i31, descr=<Guard0x5216ad0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+631: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x520ef80>) [p0, p1]
+650: i34 = int_ge(i30, 0)
+654: guard_true(i34, descr=<Guard0x5216b18>) [p0, p1]
+660: i35 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+664: i36 = int_lt(i30, i35)
+667: guard_true(i36, descr=<Guard0x5216b60>) [p0, p1]
+673: p37 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+677: guard_class(p37, 16622984, descr=<Guard0x5216ba8>) [p0, p1]
+689: p39 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+693: p40 = getarrayitem_gc_r(p39, i30, descr=<ArrayP 8>)
+698: guard_class(p40, 16470384, descr=<Guard0x5216bf0>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+711: p42 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+722: guard_nonnull_class(p42, 16616448, descr=<Guard0x520efe0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+755: i45 = instance_ptr_eq(p42, ConstPtr(ptr44))
+758: guard_true(i45, descr=<Guard0x5216c38>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+764: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x520f040>) [p0, p1]
+782: i47 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+786: i48 = int_eq(i30, i47)
+789: guard_false(i48, descr=<Guard0x5216c80>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+795: i50 = int_ge(i47, 0)
+799: guard_true(i50, descr=<Guard0x5216cc8>) [p0, p1]
+805: i51 = int_lt(i47, i35)
+808: guard_true(i51, descr=<Guard0x5216d10>) [p0, p1]
+814: p52 = getarrayitem_gc_r(p39, i47, descr=<ArrayP 8>)
+819: guard_class(p52, 16470384, descr=<Guard0x5216d58>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+833: p54 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+837: guard_nonnull_class(p54, 16616448, descr=<Guard0x520f0a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+856: i57 = instance_ptr_eq(p54, ConstPtr(ptr56))
+859: guard_true(i57, descr=<Guard0x5216da0>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+865: p58 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+869: guard_nonnull_class(p58, ConstClass(W_Vector), descr=<Guard0x520f100>) [p0, p1]
+888: p60 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+892: guard_nonnull_class(p60, ConstClass(W_Vector), descr=<Guard0x520f160>) [p0, p1]
+911: p62 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+916: guard_nonnull_class(p62, ConstClass(W_Vector), descr=<Guard0x520f1c0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+934: p64 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+939: guard_nonnull_class(p64, 16470384, descr=<Guard0x520f220>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+957: p66 = new_with_vtable(descr=<SizeDescr 32>)
+1004: p67 = new_with_vtable(descr=<SizeDescr 40>)
+1015: setfield_gc(p67, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1026: setfield_gc(p67, ConstPtr(ptr68), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1030: setfield_gc(p67, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1034: setfield_gc(p67, p40, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1038: p69 = new_with_vtable(descr=<SizeDescr 24>)
+1049: setfield_gc(p69, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1053: setfield_gc(p69, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1057: p70 = new_with_vtable(descr=<SizeDescr 48>)
+1068: p71 = new_with_vtable(descr=<SizeDescr 32>)
+1079: setfield_gc(p71, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1087: p74 = new_array_clear(4, descr=<ArrayP 8>)
+1114: setarrayitem_gc(p74, 0, ConstPtr(ptr76), descr=<ArrayP 8>)
+1118: setarrayitem_gc(p74, 1, p58, descr=<ArrayP 8>)
+1122: setarrayitem_gc(p74, 2, p60, descr=<ArrayP 8>)
+1126: setarrayitem_gc(p74, 3, p62, descr=<ArrayP 8>)
+1130: setfield_gc(p71, p74, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1141: setfield_gc(p71, ConstPtr(ptr80), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1145: setfield_gc(p66, p64, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1149: setfield_gc(p66, p69, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1160: setfield_gc(p70, ConstPtr(ptr81), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1164: setfield_gc(p70, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1168: setfield_gc(p70, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1179: setfield_gc(p70, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1190: setfield_gc(p66, p67, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1194: setfield_gc(p70, p71, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1198: jump(p66, p70, descr=TargetToken(59469520))
+1232: --end of the loop--
[3e4c22b2afad6e4] jit-log-opt-bridge}
[3e4c22b2c36745a] {jit-backend
[3e4c22b2c3fbda1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2004e0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB202000048FF0425F09714044D8B6F104C8B0567FFFFFF4D39C50F85000000004D8B6F184983FD01720841817D00601400000F8500000000498B75084839F30F8D000000004D8B6A084983FD01720841817D00900F00000F8500000000488D56FF498B77204883FE017206813ED0C800000F8500000000488B4610488B0D2CFFFFFF4839C80F85000000004883FA000F8C00000000488B4E18488B46088138102001000F850000000048898D300100004829D10F800000000048898D3801000048D1F948898D4801000048D1E14C8995500100004C8B95380100004983F20249C1FA3F4C89AD58010000483B8D3801000041BD00000000410F95C54D21D54C03AD480100004939D50F8C000000004989D24C01EA0F8000000000488B8D300100004829D10F80000000004D8D7DFF4889CB488B0C25F091F900488D91B0000000483B14251092F9000F878E01000048891425F091F90048C70130B70000488D513048C702601400004C8952084C89AD380100004C8D6A1049C74500601400004C8995400100004C8B95300100004D8955084D8D551049C702B097000048899D30010000498D5A1848C703F08C000048C74308030000004C89BD480100004C8D7B2049C7070802000049C74708030000004D894F1049897F184D8967204C897B104C8B3D07FEFFFF4C897B1848C741080000000048C741100000000048C741180000000048C741200000000048C741280000000049C742080000000049C74210000000004C8B7A084D8B65084C8941104889511848897120488941084C89692849895A084D897210488B9D480100004C8B8D40010000488BBD380100004D89D64C8B9D500100004C899D380100004C8B9D580100004C899D40010000488995480100004C89FA4C89AD500100004D89E54C8BA53001000048898D3001000049BB80A61D5C4A7F000041FFE36666662E0F1F84000000000048C7442408FFFFFF0049BBE803205C4A7F00004C895D204D8D9B083FFCFF41FFD3E928FDFFFF49BBC804205C4A7F00004C895D204D8D9B2846FCFF41FFD3E95DFEFFFFFF3577FCFFFF49BBF803205C4A7F000041534D8D9B083CFCFF41FFE3FF356BFCFFFF49BB0804205C4A7F000041534D8D9BF83BFCFF41FFE3FF3557FCFFFF49BB1804205C4A7F000041534D8D9BE83BFCFF41FFE3FF3543FCFFFF49BB2804205C4A7F000041534D8D9BD83BFCFF41FFE3FF352FFCFFFF49BB3804205C4A7F000041534D8D9BC83BFCFF41FFE3FF351BFCFFFF49BB4804205C4A7F000041534D8D9BB83BFCFF41FFE3FF350FFCFFFF49BB5804205C4A7F000041534D8D9BA83BFCFF41FFE3FF35FBFBFFFF49BB6804205C4A7F000041534D8D9B983BFCFF41FFE3FF35E7FBFFFF49BB7804205C4A7F000041534D8D9B883BFCFF41FFE3FF35D3FBFFFF49BB8804205C4A7F000041534D8D9B783BFCFF41FFE3FF35BFFBFFFF49BB9804205C4A7F000041534D8D9B683BFCFF41FFE3FF35ABFBFFFF49BBA804205C4A7F000041534D8D9B583BFCFF41FFE3FF3597FBFFFF49BBB804205C4A7F000041534D8D9B483BFCFF41FFE3
[3e4c22b2c403b42] jit-backend-dump}
[3e4c22b2c412674] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200564 +0  25000000
[3e4c22b2c413e28] jit-backend-dump}
[3e4c22b2c418200] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200825 +0  25000000
[3e4c22b2c4191d2] jit-backend-dump}
[3e4c22b2c41cad7] {jit-backend-addr
bridge out of Guard 0x42c20b0 has address 0x7f4a5c200560 to 0x7f4a5c200820
       gc table: 0x7f4a5c2004e0
    jump target: 0x7f4a5c200560
         resops: 0x7f4a5c20056e
       failures: 0x7f4a5c200820
            end: 0x7f4a5c2009cf
[3e4c22b2c41f309] jit-backend-addr}
[3e4c22b2c422fa9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200586 +0  F5020000
[3e4c22b2c423ee2] jit-backend-dump}
[3e4c22b2c427512] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20059e +0  F9020000
[3e4c22b2c4282d0] jit-backend-dump}
[3e4c22b2c42b6bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2005ab +0  08030000
[3e4c22b2c42c43b] jit-backend-dump}
[3e4c22b2c42f8da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2005c3 +0  0C030000
[3e4c22b2c4305b5] jit-backend-dump}
[3e4c22b2c433947] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2005dd +0  0E030000
[3e4c22b2c434644] jit-backend-dump}
[3e4c22b2c437989] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2005f1 +0  16030000
[3e4c22b2c43868f] jit-backend-dump}
[3e4c22b2c43bbb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2005fb +0  28030000
[3e4c22b2c43c8ec] jit-backend-dump}
[3e4c22b2c43fcc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20060f +0  30030000
[3e4c22b2c44098d] jit-backend-dump}
[3e4c22b2c443c89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20061f +0  3C030000
[3e4c22b2c444937] jit-backend-dump}
[3e4c22b2c447c79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200674 +0  03030000
[3e4c22b2c448942] jit-backend-dump}
[3e4c22b2c44bce0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200680 +0  13030000
[3e4c22b2c44c9b8] jit-backend-dump}
[3e4c22b2c44fd22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200690 +0  1F030000
[3e4c22b2c450a07] jit-backend-dump}
[3e4c22b2c4540ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec869 +0  F33C0100
[3e4c22b2c454d86] jit-backend-dump}
[3e4c22b2c45908e] jit-backend}
[3e4c22b2c45ced8] {jit-log-opt-bridge
# bridge out of Guard 0x42c20b0 with 86 ops
[i0, i1, i2, p3, i4, p5, p6, p7]
+150: guard_not_invalidated(descr=<Guard0x520f280>) [i0, i1, i2, p3, i4, p5, p6, p7]
+150: p8 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+161: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x5216e78>) [i0, i1, i2, p3, i4, p5, p6, p7]
+170: p10 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+174: guard_nonnull_class(p10, ConstClass(W_Fixnum), descr=<Guard0x520f2e0>) [i0, i1, i2, p3, i4, p5, p6, p7]
+194: i12 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+198: i13 = int_lt(i4, i12)
+201: guard_true(i13, descr=<Guard0x5216ec0>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31))')
+207: p14 = getfield_gc_r(p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+211: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x520f340>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(- nc15181 1)')
+231: i17 = int_sub(i12, 1)
debug_merge_point(0, 0, '(loop15177 lst5187 AppRand31)')
+235: p18 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+239: guard_nonnull_class(p18, 16482960, descr=<Guard0x520f3a0>) [i0, i1, i2, p3, i4, p5, p6, p7]
+257: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+268: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x5216f08>) [i0, i1, i2, p3, i4, p5, p6, p7]
+277: p22 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
+277: i24 = int_lt(i17, 0)
+281: guard_false(i24, descr=<Guard0x5216f50>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, '(let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))')
debug_merge_point(0, 0, 'lst5179')
debug_merge_point(0, 0, '(lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))')
+287: i25 = getfield_gc_i(p18, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+291: p26 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+295: guard_class(p26, 16505296, descr=<Guard0x5216f98>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(- m nc15181)')
+307: i28 = int_sub_ovf(i25, i17)
+317: guard_no_overflow(descr=<Guard0x5216fe0>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(loop25185 lst5179 (quotient AppRand36 2))')
+323: i30 = int_eq(i28, -9223372036854775808)
+323: i32 = int_rshift(i28, 1)
+333: i34 = int_lshift(i32, 1)
+343: i36 = int_xor(i28, 2)
+361: i38 = int_rshift(i36, 63)
+365: i39 = int_ne(i34, i28)
+389: i40 = int_and(i38, i39)
+392: i41 = int_add(i32, i40)
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+399: i42 = int_lt(i41, i17)
+402: guard_false(i42, descr=<Guard0x5217028>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+408: i43 = int_add_ovf(i17, i41)
+414: guard_no_overflow(descr=<Guard0x5217070>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+420: i44 = int_sub_ovf(i25, i43)
+430: guard_no_overflow(descr=<Guard0x52170b8>) [i0, i1, i2, p3, i4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+436: i46 = int_sub(i41, 1)
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+440: p47 = new_with_vtable(descr=<SizeDescr 48>)
+487: p48 = new_with_vtable(descr=<SizeDescr 16>)
+498: setfield_gc(p48, i17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+502: p49 = new_with_vtable(descr=<SizeDescr 16>)
+521: setfield_gc(p49, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+539: p50 = new_with_vtable(descr=<SizeDescr 24>)
+550: p51 = new_with_vtable(descr=<SizeDescr 32>)
+568: setfield_gc(p51, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+576: p54 = new_array(3, descr=<ArrayS 8>)
+602: setarrayitem_gc(p54, 0, i2, descr=<ArrayS 8>)
+606: setarrayitem_gc(p54, 1, i1, descr=<ArrayS 8>)
+610: setarrayitem_gc(p54, 2, i0, descr=<ArrayS 8>)
+614: setfield_gc(p51, p54, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+625: setfield_gc(p51, ConstPtr(ptr58), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+685: i59 = getfield_gc_i(p48, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+689: i60 = getfield_gc_i(p49, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+693: setfield_gc(p47, ConstPtr(ptr61), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+697: setfield_gc(p47, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+701: setfield_gc(p47, p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+705: setfield_gc(p47, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+709: setfield_gc(p47, p49, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+713: setfield_gc(p50, p51, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+717: setfield_gc(p50, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+721: jump(p47, i46, i17, i41, i44, p50, p6, p14, p48, i59, p49, i60, descr=TargetToken(61029360))
+832: --end of the loop--
[3e4c22b2c4aa8cc] jit-log-opt-bridge}
[3e4c22b2c582a58] {jit-backend
[3e4c22b2c5d5387] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200af
[3e4c22b2c5dc85c] jit-backend-dump}
[3e4c22b2c5e70fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200b94 +0  25000000
[3e4c22b2c5e83e8] jit-backend-dump}
[3e4c22b2c5ec314] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200da5 +0  25000000
[3e4c22b2c5ed183] jit-backend-dump}
[3e4c22b2c5f0882] {jit-backend-addr
bridge out of Guard 0x3dfe200 has address 0x7f4a5c200b90 to 0x7f4a5c200da0
       gc table: 0x7f4a5c200af0
    jump target: 0x7f4a5c200b90
         resops: 0x7f4a5c200b9e
       failures: 0x7f4a5c200da0
            end: 0x7f4a5c200f87
[3e4c22b2c5f2d2b] jit-backend-addr}
[3e4c22b2c5f65e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200bae +0  31020000
[3e4c22b2c5f747d] jit-backend-dump}
[3e4c22b2c5fa959] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200bc5 +0  36020000
[3e4c22b2c5fb68a] jit-backend-dump}
[3e4c22b2c5fea59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200bd5 +0  42020000
[3e4c22b2c5ff75f] jit-backend-dump}
[3e4c22b2c602b2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200be1 +0  52020000
[3e4c22b2c60384d] jit-backend-dump}
[3e4c22b2c606c28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200bf8 +0  57020000
[3e4c22b2c607941] jit-backend-dump}
[3e4c22b2c60ae45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200c0a +0  7D020000
[3e4c22b2c60bb57] jit-backend-dump}
[3e4c22b2c60f043] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200c1e +0  85020000
[3e4c22b2c60fd92] jit-backend-dump}
[3e4c22b2c61318c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200c35 +0  8A020000
[3e4c22b2c613ea8] jit-backend-dump}
[3e4c22b2c61728c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200c4d +0  8E020000
[3e4c22b2c617fcf] jit-backend-dump}
[3e4c22b2c61b392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200c64 +0  93020000
[3e4c22b2c61c095] jit-backend-dump}
[3e4c22b2c61f489] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200c7b +0  98020000
[3e4c22b2c6201b4] jit-backend-dump}
[3e4c22b2c623552] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200c92 +0  9D020000
[3e4c22b2c62425b] jit-backend-dump}
[3e4c22b2c627661] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200cac +0  9F020000
[3e4c22b2c628395] jit-backend-dump}
[3e4c22b2c62b758] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c200cc3 +0  A4020000
[3e4c22b2c62c455] jit-backend-dump}
[3e4c22b2c62fa7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e25f5 +0  97E50100
[3e4c22b2c630797] jit-backend-dump}
[3e4c22b2c6349c9] jit-backend}
[3e4c22b2c63892f] {jit-log-opt-bridge
# bridge out of Guard 0x3dfe200 with 52 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x520f400>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16470384, descr=<Guard0x520f460>) [p0, p1]
+224: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+227: guard_false(i6, descr=<Guard0x5217148>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+233: guard_class(p0, 16437896, descr=<Guard0x5217190>) [p0, p1]
+245: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+249: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x520f4c0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+268: guard_not_invalidated(descr=<Guard0x52171d8>) [p0, p1]
+268: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+272: guard_class(p10, 16478072, descr=<Guard0x5217220>) [p0, p1]
+286: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+297: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x5217268>) [p0, p1]
+306: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+310: guard_nonnull_class(p14, 16470384, descr=<Guard0x520f520>) [p0, p1]
+329: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+333: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x520f580>) [p0, p1]
+353: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+357: guard_nonnull_class(p18, 16470384, descr=<Guard0x520f5e0>) [p0, p1]
+376: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+380: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x520f640>) [p0, p1]
+399: p22 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+403: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x520f6a0>) [p0, p1]
+422: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+426: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+430: guard_nonnull_class(p25, 16470384, descr=<Guard0x520f700>) [p0, p1]
+448: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+452: guard_nonnull_class(p27, 16470384, descr=<Guard0x520f760>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+471: p29 = new_with_vtable(descr=<SizeDescr 32>)
+518: p30 = new_with_vtable(descr=<SizeDescr 48>)
+529: p31 = new_with_vtable(descr=<SizeDescr 32>)
+540: setfield_gc(p31, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+548: p34 = new_array_clear(4, descr=<ArrayP 8>)
+581: setarrayitem_gc(p34, 0, ConstPtr(ptr36), descr=<ArrayP 8>)
+585: setarrayitem_gc(p34, 1, p16, descr=<ArrayP 8>)
+589: setarrayitem_gc(p34, 2, p20, descr=<ArrayP 8>)
+593: setarrayitem_gc(p34, 3, p22, descr=<ArrayP 8>)
+597: setfield_gc(p31, p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: setfield_gc(p31, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+612: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+623: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+627: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+631: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+635: setfield_gc(p30, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p30, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+658: jump(p29, p30, descr=TargetToken(59469520))
+688: --end of the loop--
[3e4c22b2c662ae7] jit-log-opt-bridge}
[3e4c22b2d59f4bc] {jit-backend
[3e4c22b2d639c84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b2d64258e] jit-backend-dump}
[3e4c22b2d6505e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201124 +0  25000000
[3e4c22b2d651c2f] jit-backend-dump}
[3e4c22b2d65659e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2013f5 +0  25000000
[3e4c22b2d6575b4] jit-backend-dump}
[3e4c22b2d65ae32] {jit-backend-addr
bridge out of Guard 0x3d7e140 has address 0x7f4a5c201120 to 0x7f4a5c2013f0
       gc table: 0x7f4a5c201090
    jump target: 0x7f4a5c201120
         resops: 0x7f4a5c20112e
       failures: 0x7f4a5c2013f0
            end: 0x7f4a5c2015bb
[3e4c22b2d65d5d4] jit-backend-addr}
[3e4c22b2d660dd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201145 +0  EA020000
[3e4c22b2d661cd0] jit-backend-dump}
[3e4c22b2d66547e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201153 +0  14030000
[3e4c22b2d6661c8] jit-backend-dump}
[3e4c22b2d66970f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201163 +0  20030000
[3e4c22b2d66a41b] jit-backend-dump}
[3e4c22b2d66d865] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201175 +0  2A030000
[3e4c22b2d66e51e] jit-backend-dump}
[3e4c22b2d671892] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201183 +0  38030000
[3e4c22b2d672542] jit-backend-dump}
[3e4c22b2d6758d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2011a9 +0  2E030000
[3e4c22b2d676572] jit-backend-dump}
[3e4c22b2d679920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2011c5 +0  2E030000
[3e4c22b2d67a5f2] jit-backend-dump}
[3e4c22b2d67d984] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2011d7 +0  38030000
[3e4c22b2d67e653] jit-backend-dump}
[3e4c22b2d681a6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2011e1 +0  4A030000
[3e4c22b2d682759] jit-backend-dump}
[3e4c22b2d685b93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2011f5 +0  52030000
[3e4c22b2d686834] jit-backend-dump}
[3e4c22b2d689cd9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201206 +0  5D030000
[3e4c22b2d68a977] jit-backend-dump}
[3e4c22b2d68ddf5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201222 +0  5D030000
[3e4c22b2d68ea9f] jit-backend-dump}
[3e4c22b2d691e8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201239 +0  62030000
[3e4c22b2d692b1f] jit-backend-dump}
[3e4c22b2d6961a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1db885 +0  97580200
[3e4c22b2d696e39] jit-backend-dump}
[3e4c22b2d69b2b9] jit-backend}
[3e4c22b2d69f1dc] {jit-log-opt-bridge
# bridge out of Guard 0x3d7e140 with 87 ops
[p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+166: guard_nonnull_class(p0, ConstClass(W_Vector), descr=<Guard0x520f7c0>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+185: guard_not_invalidated(descr=<Guard0x52172b0>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
debug_merge_point(0, 0, '(let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8)))')
debug_merge_point(0, 0, '(vector-ref p 0)')
+185: i13 = getfield_gc_i(p0, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+189: i15 = int_lt(0, i13)
+193: guard_true(i15, descr=<Guard0x52172f8>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+199: p16 = getfield_gc_r(p0, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+203: guard_class(p16, 16623792, descr=<Guard0x5217340>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+215: p18 = getfield_gc_r(p0, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+219: i20 = getarrayitem_gc_i(p18, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 1)')
+223: i22 = int_lt(1, i13)
+227: guard_true(i22, descr=<Guard0x5217388>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+233: i24 = getarrayitem_gc_i(p18, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 2)')
+237: i26 = int_lt(2, i13)
+241: guard_true(i26, descr=<Guard0x52173d0>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+247: i28 = getarrayitem_gc_i(p18, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))')
debug_merge_point(0, 0, '(lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))')
+251: p29 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+276: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x5217418>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+285: p31 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+296: p32 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+300: guard_class(p32, 16505296, descr=<Guard0x5217460>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
debug_merge_point(0, 0, '(vector-ref radicals nc1)')
+313: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x520f820>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+331: i36 = int_ge(i20, 0)
+335: guard_true(i36, descr=<Guard0x52174a8>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+341: i37 = getfield_gc_i(p31, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+352: i38 = int_lt(i20, i37)
+355: guard_true(i38, descr=<Guard0x52174f0>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+361: p39 = getfield_gc_r(p31, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+365: guard_class(p39, 16622984, descr=<Guard0x5217538>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
+378: p41 = getfield_gc_r(p31, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+382: p42 = getarrayitem_gc_r(p41, i20, descr=<ArrayP 8>)
+394: guard_class(p42, 16470384, descr=<Guard0x5217580>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
debug_merge_point(0, 0, '(loop1 (cdr ps) lst)')
+406: p44 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+410: guard_nonnull_class(p44, 16616448, descr=<Guard0x520f880>) [p0, i1, i2, i3, p4, p5, p6, p7, p8, p9, p10, p11]
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)')
+429: p46 = new_with_vtable(descr=<SizeDescr 32>)
+479: p47 = new_with_vtable(descr=<SizeDescr 56>)
+490: p48 = new_with_vtable(descr=<SizeDescr 56>)
+508: setfield_gc(p48, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+526: setfield_gc(p48, p7, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+530: setfield_gc(p48, p6, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+541: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+545: p50 = new_with_vtable(descr=<SizeDescr 56>)
+563: setfield_gc(p50, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+574: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+578: setfield_gc(p50, p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+582: p52 = new_with_vtable(descr=<SizeDescr 16>)
+594: setfield_gc(p52, i3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+599: setfield_gc(p50, p52, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+603: p53 = new_with_vtable(descr=<SizeDescr 16>)
+615: setfield_gc(p53, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+619: setfield_gc(p50, p53, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+623: p54 = new_with_vtable(descr=<SizeDescr 16>)
+634: setfield_gc(p54, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+638: setfield_gc(p50, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+642: setfield_gc(p48, p50, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+646: setfield_gc(p48, p5, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+650: p55 = new_with_vtable(descr=<SizeDescr 56>)
+661: setfield_gc(p55, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+672: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+676: setfield_gc(p55, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+680: p57 = new_with_vtable(descr=<SizeDescr 16>)
+691: setfield_gc(p57, i24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+695: setfield_gc(p55, p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+699: p58 = new_with_vtable(descr=<SizeDescr 16>)
+710: setfield_gc(p58, i20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+721: setfield_gc(p55, p58, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+725: p59 = new_with_vtable(descr=<SizeDescr 16>)
+736: setfield_gc(p59, i28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+747: setfield_gc(p55, p59, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+751: setfield_gc(p46, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+769: setfield_gc(p46, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+773: setfield_gc(p46, p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+784: setfield_gc(p47, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+795: setfield_gc(p47, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+799: setfield_gc(p47, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+803: setfield_gc(p47, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+807: setfield_gc(p47, p55, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+811: setfield_gc(p47, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+822: jump(p46, p47, descr=TargetToken(61029440))
+864: --end of the loop--
[3e4c22b2d6e9438] jit-log-opt-bridge}
[3e4c22b2db83d0a] {jit-backend
[3e4c22b2dc1a929] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2017b
[3e4c22b2dc2528b] jit-backend-dump}
[3e4c22b2dc30b35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2018b4 +0  2A000000
[3e4c22b2dc321f8] jit-backend-dump}
[3e4c22b2dc366bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201c15 +0  2A000000
[3e4c22b2dc37599] jit-backend-dump}
[3e4c22b2dc3ad56] {jit-backend-addr
bridge out of Guard 0x3cec8d8 has address 0x7f4a5c2018b0 to 0x7f4a5c201c10
       gc table: 0x7f4a5c2017b0
    jump target: 0x7f4a5c2018b0
         resops: 0x7f4a5c2018be
       failures: 0x7f4a5c201c10
            end: 0x7f4a5c201f63
[3e4c22b2dc3d25e] jit-backend-addr}
[3e4c22b2dc40aa5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2018ce +0  81030000
[3e4c22b2dc41920] jit-backend-dump}
[3e4c22b2dc44e0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2018e5 +0  86030000
[3e4c22b2dc45bbd] jit-backend-dump}
[3e4c22b2dc492d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2018f1 +0  B2030000
[3e4c22b2dc4a034] jit-backend-dump}
[3e4c22b2dc4d4a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201907 +0  B8030000
[3e4c22b2dc4e1a5] jit-backend-dump}
[3e4c22b2dc5152b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20191b +0  C0030000
[3e4c22b2dc52206] jit-backend-dump}
[3e4c22b2dc55729] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201932 +0  C5030000
[3e4c22b2dc56404] jit-backend-dump}
[3e4c22b2dc5975f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20193f +0  D4030000
[3e4c22b2dc5a453] jit-backend-dump}
[3e4c22b2dc5d7aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201957 +0  D8030000
[3e4c22b2dc5e48c] jit-backend-dump}
[3e4c22b2dc618bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201966 +0  E5030000
[3e4c22b2dc625a4] jit-backend-dump}
[3e4c22b2dc6590e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20197e +0  E9030000
[3e4c22b2dc665d7] jit-backend-dump}
[3e4c22b2dc69923] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201996 +0  ED030000
[3e4c22b2dc6a604] jit-backend-dump}
[3e4c22b2dc6d931] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2019ab +0  F4030000
[3e4c22b2dc6e600] jit-backend-dump}
[3e4c22b2dc718ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2019c3 +0  F8030000
[3e4c22b2dc725cb] jit-backend-dump}
[3e4c22b2dc758c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2019d0 +0  07040000
[3e4c22b2dc765b8] jit-backend-dump}
[3e4c22b2dc798df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2019ec +0  07040000
[3e4c22b2dc7a5d9] jit-backend-dump}
[3e4c22b2dc7d8cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201a00 +0  0F040000
[3e4c22b2dc7e59e] jit-backend-dump}
[3e4c22b2dc81894] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201a0a +0  21040000
[3e4c22b2dc82566] jit-backend-dump}
[3e4c22b2dc85862] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201a20 +0  27040000
[3e4c22b2dc8656b] jit-backend-dump}
[3e4c22b2dc8987f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201a2c +0  37040000
[3e4c22b2dc8a54b] jit-backend-dump}
[3e4c22b2dc8d863] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201a80 +0  FF030000
[3e4c22b2dc8e538] jit-backend-dump}
[3e4c22b2dc9183d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201a8d +0  0E040000
[3e4c22b2dc92534] jit-backend-dump}
[3e4c22b2dc958eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201ad4 +0  E3030000
[3e4c22b2dc965bd] jit-backend-dump}
[3e4c22b2dc998bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201add +0  F6030000
[3e4c22b2dc9a58e] jit-backend-dump}
[3e4c22b2dc9d893] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201ae9 +0  06040000
[3e4c22b2dc9e590] jit-backend-dump}
[3e4c22b2dca18cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201b1b +0  F0030000
[3e4c22b2dca25cc] jit-backend-dump}
[3e4c22b2dca597a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201b2a +0  FD030000
[3e4c22b2dca665e] jit-backend-dump}
[3e4c22b2dca99c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c201b36 +0  0D040000
[3e4c22b2dcaa6bf] jit-backend-dump}
[3e4c22b2dcadc84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d71a4 +0  08A70200
[3e4c22b2dcae987] jit-backend-dump}
[3e4c22b2dcb2c6d] jit-backend}
[3e4c22b2dcb6c2f] {jit-log-opt-bridge
# bridge out of Guard 0x3cec8d8 with 151 ops
[p0, p1]
+278: guard_class(p1, 16435920, descr=<Guard0x520f8e0>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+294: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x520f940>) [p0, p1]
debug_merge_point(0, 0, '(< nc35240 start)')
+313: guard_not_invalidated(descr=<Guard0x5217610>) [p0, p1]
+313: guard_class(p0, 16503536, descr=<Guard0x5217658>) [p0, p1]
+325: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+329: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+333: guard_class(p7, 16479200, descr=<Guard0x52176a0>) [p0, p1]
+347: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+358: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x52176e8>) [p0, p1]
+367: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+371: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x520f9a0>) [p0, p1]
+390: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+394: i14 = int_lt(i6, i13)
+397: guard_true(i14, descr=<Guard0x5217730>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41))')
debug_merge_point(0, 0, '(- nc25224 1)')
+403: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+407: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x520fa00>) [p0, p1]
+427: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+432: i19 = int_sub_ovf(i17, 1)
+436: guard_no_overflow(descr=<Guard0x5217778>) [p0, p1]
debug_merge_point(0, 0, '(loop25220 lst5238 AppRand41)')
+442: p20 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+446: guard_nonnull_class(p20, 16478448, descr=<Guard0x520fa60>) [p0, p1]
+466: p22 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+470: guard_nonnull_class(p22, 16470384, descr=<Guard0x520fac0>) [p0, p1]
+490: p24 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+502: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x52177c0>) [p0, p1]
+511: p26 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+511: p27 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+516: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x520fb20>) [p0, p1]
+535: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+539: i30 = int_lt(i19, i29)
+542: guard_true(i30, descr=<Guard0x5217808>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37))')
debug_merge_point(0, 0, '(- nc15216 1)')
+548: i32 = int_sub(i29, 1)
debug_merge_point(0, 0, '(loop15212 lst5222 AppRand37)')
+552: p33 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+557: guard_nonnull_class(p33, 16482960, descr=<Guard0x520fb80>) [p0, p1]
+576: p35 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+587: guard_value(p35, ConstPtr(ptr36), descr=<Guard0x5217850>) [p0, p1]
+596: p37 = getfield_gc_r(p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if8 (< nc15216 0)]) (if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3)))))')
debug_merge_point(0, 0, '(< nc15216 0)')
+596: i39 = int_lt(i32, 0)
+600: guard_false(i39, descr=<Guard0x5217898>) [p0, p1]
debug_merge_point(0, 0, '(if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3))))')
debug_merge_point(0, 0, '(let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3)))')
debug_merge_point(0, 0, 'lst5214')
debug_merge_point(0, 0, '(lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))')
+606: i40 = getfield_gc_i(p33, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+610: p41 = getfield_gc_r(p33, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+614: guard_class(p41, 16505296, descr=<Guard0x52178e0>) [p0, p1]
debug_merge_point(0, 0, '(- m5210 nc15216)')
+628: i43 = int_sub_ovf(i40, i32)
+634: guard_no_overflow(descr=<Guard0x5217928>) [p0, p1]
debug_merge_point(0, 0, '(loop25220 lst5214 (quotient AppRand49 3))')
+640: i45 = int_eq(i43, -9223372036854775808)
+640: i47 = int_rshift(i43, 63)
+647: i48 = int_xor(i43, i47)
+653: i50 = uint_mul_high(i48, -6148914691236517205)
+673: i52 = uint_rshift(i50, 1)
+676: i53 = int_xor(i52, i47)
+679: i55 = int_mul(i53, 3)
+686: i57 = int_xor(i43, 3)
+693: i59 = int_rshift(i57, 63)
+697: i60 = int_ne(i55, i43)
+709: i61 = int_and(i59, i60)
+712: i62 = int_add(i53, i61)
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5214 (quotient AppRand49 3))')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+715: i63 = int_lt(i62, i32)
+718: guard_false(i63, descr=<Guard0x5217970>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))))')
debug_merge_point(0, 0, '(+ m5210 1)')
+724: i65 = int_add_ovf(i40, 1)
+731: guard_no_overflow(descr=<Guard0x52179b8>) [p0, p1]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
+737: i66 = int_add(i32, i62)
debug_merge_point(0, 0, '(let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))')
debug_merge_point(0, 0, '(- (quotient AppRand38 2) AppRand39)')
+743: i68 = int_rshift(i65, 1)
+749: i70 = int_lshift(i68, 1)
+755: i72 = int_xor(i65, 2)
+766: i74 = int_rshift(i72, 63)
+770: i75 = int_ne(i70, i65)
+793: i76 = int_and(i74, i75)
+796: i77 = int_add(i68, i76)
+799: i78 = int_sub_ovf(i77, i66)
+802: guard_no_overflow(descr=<Guard0x5217a00>) [p0, p1]
debug_merge_point(0, 0, '(let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))')
debug_merge_point(0, 0, '(max nc25224 AppRand40)')
+808: i79 = int_lt(i62, i78)
+811: guard_false(i79, descr=<Guard0x5217a48>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))')
debug_merge_point(0, 0, '(lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))')
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
debug_merge_point(0, 0, '(let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))')
debug_merge_point(0, 0, '(- m5210 AppRand47)')
+817: i80 = int_sub_ovf(i40, i66)
+823: guard_no_overflow(descr=<Guard0x5217a90>) [p0, p1]
debug_merge_point(0, 0, '(loop35236 lst5222 (quotient AppRand48 2))')
+829: i82 = int_eq(i80, -9223372036854775808)
+829: i84 = int_rshift(i80, 1)
+835: i86 = int_lshift(i84, 1)
+841: i88 = int_xor(i80, 2)
+848: i90 = int_rshift(i88, 63)
+852: i91 = int_ne(i86, i80)
+864: i92 = int_and(i90, i91)
+867: i93 = int_add(i84, i92)
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
debug_merge_point(0, 0, '(< nc35240 start)')
+870: i94 = int_lt(i93, i62)
+873: guard_false(i94, descr=<Guard0x5217ad8>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+879: i95 = int_add(i62, i93)
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+885: i96 = int_add_ovf(i32, i95)
+888: guard_no_overflow(descr=<Guard0x5217b20>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+894: i97 = int_sub_ovf(i40, i96)
+900: guard_no_overflow(descr=<Guard0x5217b68>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+906: i99 = int_sub(i93, 1)
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+910: p100 = new_with_vtable(descr=<SizeDescr 16>)
+958: p101 = new_with_vtable(descr=<SizeDescr 16>)
+969: setfield_gc(p100, i32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+973: p102 = new_with_vtable(descr=<SizeDescr 48>)
+984: setfield_gc(p102, p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+988: setfield_gc(p102, ConstPtr(ptr103), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+992: setfield_gc(p101, i40, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+996: setfield_gc(p102, p100, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1000: setfield_gc(p102, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1004: setfield_gc(p102, p101, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1008: jump(p41, i62, p100, i62, p101, p102, i99, i32, i93, i97, p22, p1, p3, p100, p101, p41, descr=TargetToken(61027360))
+1120: --end of the loop--
[3e4c22b2dd1e0f7] jit-log-opt-bridge}
[3e4c22b2de8f85e] {jit-backend
[3e4c22b2dee9a4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b2def0f85] jit-backend-dump}
[3e4c22b2defc003] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2020f4 +0  28000000
[3e4c22b2defd450] jit-backend-dump}
[3e4c22b2df0170b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2022d5 +0  28000000
[3e4c22b2df0260d] jit-backend-dump}
[3e4c22b2df05d22] {jit-backend-addr
bridge out of Guard 0x3da3418 has address 0x7f4a5c2020f0 to 0x7f4a5c2022d0
       gc table: 0x7f4a5c202070
    jump target: 0x7f4a5c2020f0
         resops: 0x7f4a5c2020fe
       failures: 0x7f4a5c2022d0
            end: 0x7f4a5c20247f
[3e4c22b2df08157] jit-backend-addr}
[3e4c22b2df0b8ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20210e +0  01020000
[3e4c22b2df0c715] jit-backend-dump}
[3e4c22b2df0fcc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202125 +0  06020000
[3e4c22b2df10a0e] jit-backend-dump}
[3e4c22b2df13d90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20213c +0  0B020000
[3e4c22b2df14b08] jit-backend-dump}
[3e4c22b2df17e2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202154 +0  0F020000
[3e4c22b2df18b41] jit-backend-dump}
[3e4c22b2df1bdde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202168 +0  17020000
[3e4c22b2df1cb7d] jit-backend-dump}
[3e4c22b2df1fead] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202174 +0  27020000
[3e4c22b2df20c06] jit-backend-dump}
[3e4c22b2df23e0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20218b +0  2C020000
[3e4c22b2df24b72] jit-backend-dump}
[3e4c22b2df27d6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2021ab +0  28020000
[3e4c22b2df28a8f] jit-backend-dump}
[3e4c22b2df2be45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2021c1 +0  4A020000
[3e4c22b2df2cb70] jit-backend-dump}
[3e4c22b2df2fe8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2021d3 +0  54020000
[3e4c22b2df30bd7] jit-backend-dump}
[3e4c22b2df33e3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2021e4 +0  5F020000
[3e4c22b2df34b9c] jit-backend-dump}
[3e4c22b2df37dfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2021fa +0  65020000
[3e4c22b2df38b33] jit-backend-dump}
[3e4c22b2df3c01c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e1839 +0  B3080200
[3e4c22b2df3cd5f] jit-backend-dump}
[3e4c22b2df40e9c] jit-backend}
[3e4c22b2df44d72] {jit-log-opt-bridge
# bridge out of Guard 0x3da3418 with 59 ops
[p0, p1]
+150: guard_class(p1, 16500368, descr=<Guard0x520fbe0>) [p0, p1]
+162: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+166: guard_nonnull_class(p3, 16479200, descr=<Guard0x520fc40>) [p0, p1]
+185: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+189: guard_nonnull_class(p5, 16470384, descr=<Guard0x520fca0>) [p0, p1]
+208: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+212: guard_nonnull_class(p7, 16470384, descr=<Guard0x520fd00>) [p0, p1]
+232: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+243: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x5217bb0>) [p0, p1]
+252: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+252: guard_class(p0, 16437896, descr=<Guard0x5217bf8>) [p0, p1]
+264: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+268: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x520fd60>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+287: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+291: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+295: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+299: p18 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+303: p19 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+307: guard_class(p19, 16505296, descr=<Guard0x5217c40>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+319: guard_not_invalidated(descr=<Guard0x5217c88>) [p0, p1]
+319: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+323: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x520fdc0>) [p0, p1]
+341: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x520fe20>) [p0, p1]
+359: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+363: i25 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+367: i26 = int_eq(i24, i25)
+370: guard_true(i26, descr=<Guard0x5217cd0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+376: p27 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+380: guard_nonnull_class(p27, 16616448, descr=<Guard0x520fe80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+398: p29 = new_with_vtable(descr=<SizeDescr 32>)
+449: p30 = new_with_vtable(descr=<SizeDescr 56>)
+460: p31 = new_with_vtable(descr=<SizeDescr 64>)
+471: setfield_gc(p31, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+489: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+493: setfield_gc(p31, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+497: setfield_gc(p31, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+501: setfield_gc(p31, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+505: setfield_gc(p31, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+509: setfield_gc(p31, p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+513: setfield_gc(p29, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+524: setfield_gc(p30, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+528: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+539: setfield_gc(p29, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+543: setfield_gc(p30, p19, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+547: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+558: setfield_gc(p30, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+562: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+566: setfield_gc(p30, p5, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+570: jump(p29, p30, descr=TargetToken(61027120))
+608: --end of the loop--
[3e4c22b2df7565d] jit-log-opt-bridge}
[3e4c22b2e4c7804] {jit-backend
[3e4c22b2e56de35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b2e579d5c] jit-backend-dump}
[3e4c22b2e58589e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202864 +0  25000000
[3e4c22b2e586ddd] jit-backend-dump}
[3e4c22b2e58b386] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202c25 +0  25000000
[3e4c22b2e58c2b2] jit-backend-dump}
[3e4c22b2e58fae4] {jit-backend-addr
bridge out of Guard 0x3a746e0 has address 0x7f4a5c202860 to 0x7f4a5c202c20
       gc table: 0x7f4a5c202700
    jump target: 0x7f4a5c202860
         resops: 0x7f4a5c20286e
       failures: 0x7f4a5c202c20
            end: 0x7f4a5c20306f
[3e4c22b2e591f28] jit-backend-addr}
[3e4c22b2e5958bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20287e +0  E1030000
[3e4c22b2e5966cc] jit-backend-dump}
[3e4c22b2e599dfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20288b +0  F0030000
[3e4c22b2e59abca] jit-backend-dump}
[3e4c22b2e59e057] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20289b +0  FC030000
[3e4c22b2e59edb2] jit-backend-dump}
[3e4c22b2e5a219a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2028b2 +0  01040000
[3e4c22b2e5a2ef3] jit-backend-dump}
[3e4c22b2e5a627e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2028bf +0  10040000
[3e4c22b2e5a6fc2] jit-backend-dump}
[3e4c22b2e5aa33b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2028d3 +0  18040000
[3e4c22b2e5ab05d] jit-backend-dump}
[3e4c22b2e5ae686] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2028eb +0  38040000
[3e4c22b2e5af3ba] jit-backend-dump}
[3e4c22b2e5b2847] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2028fc +0  43040000
[3e4c22b2e5b356f] jit-backend-dump}
[3e4c22b2e5b68e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202910 +0  4B040000
[3e4c22b2e5b7638] jit-backend-dump}
[3e4c22b2e5ba92e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20292e +0  49040000
[3e4c22b2e5bb64f] jit-backend-dump}
[3e4c22b2e5be9a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202941 +0  52040000
[3e4c22b2e5bf69e] jit-backend-dump}
[3e4c22b2e5c2a6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202955 +0  5A040000
[3e4c22b2e5c3795] jit-backend-dump}
[3e4c22b2e5c6d53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202961 +0  6A040000
[3e4c22b2e5c7ad7] jit-backend-dump}
[3e4c22b2e5caf39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202977 +0  70040000
[3e4c22b2e5cbc4b] jit-backend-dump}
[3e4c22b2e5cef78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20299a +0  69040000
[3e4c22b2e5cfca3] jit-backend-dump}
[3e4c22b2e5d3007] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2029b7 +0  68040000
[3e4c22b2e5d3d47] jit-backend-dump}
[3e4c22b2e5d7062] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2029c9 +0  72040000
[3e4c22b2e5d7d7a] jit-backend-dump}
[3e4c22b2e5db0c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2029da +0  7D040000
[3e4c22b2e5dbdde] jit-backend-dump}
[3e4c22b2e5df130] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2029ed +0  86040000
[3e4c22b2e5dfe5b] jit-backend-dump}
[3e4c22b2e5e31cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2029f7 +0  98040000
[3e4c22b2e5e3ec5] jit-backend-dump}
[3e4c22b2e5e71d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a04 +0  A7040000
[3e4c22b2e5e7f04] jit-backend-dump}
[3e4c22b2e5eb262] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a14 +0  B3040000
[3e4c22b2e5ebf8d] jit-backend-dump}
[3e4c22b2e5ef2c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a2a +0  B9040000
[3e4c22b2e5effc6] jit-backend-dump}
[3e4c22b2e5f32e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a47 +0  B8040000
[3e4c22b2e5f3ff6] jit-backend-dump}
[3e4c22b2e5f734e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a50 +0  CB040000
[3e4c22b2e5f806c] jit-backend-dump}
[3e4c22b2e5fb3bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a62 +0  D5040000
[3e4c22b2e5fc0b5] jit-backend-dump}
[3e4c22b2e5ff398] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a6f +0  E4040000
[3e4c22b2e6000b1] jit-backend-dump}
[3e4c22b2e6034ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a79 +0  F6040000
[3e4c22b2e6041d2] jit-backend-dump}
[3e4c22b2e607521] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a82 +0  09050000
[3e4c22b2e608258] jit-backend-dump}
[3e4c22b2e60b784] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202a93 +0  14050000
[3e4c22b2e60c4cd] jit-backend-dump}
[3e4c22b2e60f803] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202aa9 +0  1A050000
[3e4c22b2e610528] jit-backend-dump}
[3e4c22b2e61384f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202ab2 +0  2D050000
[3e4c22b2e614583] jit-backend-dump}
[3e4c22b2e6178e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202aca +0  31050000
[3e4c22b2e6185fc] jit-backend-dump}
[3e4c22b2e61b8e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202ae0 +0  37050000
[3e4c22b2e61c62c] jit-backend-dump}
[3e4c22b2e61f956] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202af6 +0  3D050000
[3e4c22b2e62065c] jit-backend-dump}
[3e4c22b2e623977] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202b0c +0  43050000
[3e4c22b2e6246ab] jit-backend-dump}
[3e4c22b2e627c54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc307 +0  55650300
[3e4c22b2e628979] jit-backend-dump}
[3e4c22b2e62cc16] jit-backend}
[3e4c22b2e630c86] {jit-log-opt-bridge
# bridge out of Guard 0x3a746e0 with 138 ops
[p0, p1]
+374: guard_class(p1, 16500016, descr=<Guard0x520fee0>) [p0, p1]
+386: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+390: guard_nonnull(p3, descr=<Guard0x5217d60>) [p0, p1]
+406: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+409: guard_true(i5, descr=<Guard0x5217da8>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+415: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+419: guard_nonnull_class(p6, 16470384, descr=<Guard0x520ff40>) [p0, p1]
+438: guard_class(p0, 16437352, descr=<Guard0x5217df0>) [p0, p1]
+451: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+462: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x5217e38>) [p0, p1]
+471: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+471: guard_not_invalidated(descr=<Guard0x5217e80>) [p0, p1]
+471: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+475: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x520ffa0>) [p0, p1]
+495: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+499: guard_class(p14, 16437896, descr=<Guard0x5217ec8>) [p0, p1]
+512: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+523: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x5217f10>) [p0, p1]
+532: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+532: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+536: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+540: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+544: guard_nonnull_class(p19, 16478824, descr=<Guard0x59c8020>) [p0, p1]
+562: guard_nonnull_class(p20, 16470384, descr=<Guard0x59c8080>) [p0, p1]
+581: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+592: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x5217f58>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+601: guard_class(p21, 16437896, descr=<Guard0x5217fa0>) [p0, p1]
+613: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+617: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x59c80e0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+635: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+639: p30 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+643: p31 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+647: p32 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+658: guard_class(p32, 16505296, descr=<Guard0x59ca020>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+670: p34 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+681: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x59c8140>) [p0, p1]
+699: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x59c81a0>) [p0, p1]
+717: i37 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+721: i38 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+725: i39 = int_eq(i37, i38)
+728: guard_false(i39, descr=<Guard0x59ca068>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+734: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x59c8200>) [p0, p1]
+753: i42 = int_ge(i38, 0)
+757: guard_true(i42, descr=<Guard0x59ca0b0>) [p0, p1]
+763: i43 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+767: i44 = int_lt(i38, i43)
+770: guard_true(i44, descr=<Guard0x59ca0f8>) [p0, p1]
+776: p45 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+780: guard_class(p45, 16622984, descr=<Guard0x59ca140>) [p0, p1]
+792: p47 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+796: p48 = getarrayitem_gc_r(p47, i38, descr=<ArrayP 8>)
+801: guard_class(p48, 16470384, descr=<Guard0x59ca188>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+814: p50 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+825: guard_nonnull_class(p50, 16616448, descr=<Guard0x59c8260>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+843: i53 = instance_ptr_eq(p50, ConstPtr(ptr52))
+846: guard_true(i53, descr=<Guard0x59ca1d0>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+852: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x59c82c0>) [p0, p1]
+870: i55 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+874: i56 = int_eq(i38, i55)
+877: guard_false(i56, descr=<Guard0x59ca218>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+883: i58 = int_ge(i55, 0)
+887: guard_true(i58, descr=<Guard0x59ca260>) [p0, p1]
+893: i59 = int_lt(i55, i43)
+896: guard_true(i59, descr=<Guard0x59ca2a8>) [p0, p1]
+902: p60 = getarrayitem_gc_r(p47, i55, descr=<ArrayP 8>)
+907: guard_class(p60, 16470384, descr=<Guard0x59ca2f0>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+919: p62 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+923: guard_nonnull_class(p62, 16616448, descr=<Guard0x59c8320>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+941: i65 = instance_ptr_eq(p62, ConstPtr(ptr64))
+944: guard_true(i65, descr=<Guard0x59ca338>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+950: p66 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+954: guard_nonnull_class(p66, ConstClass(W_Symbol), descr=<Guard0x59c8380>) [p0, p1]
+974: p68 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+978: guard_nonnull_class(p68, ConstClass(W_Vector), descr=<Guard0x59c83e0>) [p0, p1]
+996: p70 = getfield_gc_r(p60, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1000: guard_nonnull_class(p70, ConstClass(W_Vector), descr=<Guard0x59c8440>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+1018: p72 = getfield_gc_r(p60, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1022: guard_nonnull_class(p72, 16470384, descr=<Guard0x59c84a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+1040: p74 = new_with_vtable(descr=<SizeDescr 32>)
+1087: p75 = new_with_vtable(descr=<SizeDescr 40>)
+1098: setfield_gc(p75, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1116: setfield_gc(p75, ConstPtr(ptr76), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1120: setfield_gc(p75, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1124: setfield_gc(p75, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1128: p77 = new_with_vtable(descr=<SizeDescr 24>)
+1139: setfield_gc(p77, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1143: setfield_gc(p77, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1147: p78 = new_with_vtable(descr=<SizeDescr 48>)
+1158: p79 = new_with_vtable(descr=<SizeDescr 32>)
+1170: setfield_gc(p79, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1179: p82 = new_array_clear(4, descr=<ArrayP 8>)
+1206: setarrayitem_gc(p82, 0, ConstPtr(ptr84), descr=<ArrayP 8>)
+1210: setarrayitem_gc(p82, 1, p66, descr=<ArrayP 8>)
+1214: setarrayitem_gc(p82, 2, p68, descr=<ArrayP 8>)
+1218: setarrayitem_gc(p82, 3, p70, descr=<ArrayP 8>)
+1222: setfield_gc(p79, p82, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1234: setfield_gc(p79, ConstPtr(ptr88), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1239: setfield_gc(p74, p72, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1243: setfield_gc(p74, p77, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1247: setfield_gc(p78, ConstPtr(ptr89), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1251: setfield_gc(p78, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1255: setfield_gc(p78, p79, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1259: setfield_gc(p78, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1270: setfield_gc(p78, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1281: setfield_gc(p74, p75, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1285: jump(p74, p78, descr=TargetToken(59469520))
+1312: --end of the loop--
[3e4c22b2e69cffc] jit-log-opt-bridge}
[3e4c22b2ef52616] {jit-backend
[3e4c22b2efcd395] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b2efd68a7] jit-backend-dump}
[3e4c22b2efe24e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203344 +0  25000000
[3e4c22b2efe3bdb] jit-backend-dump}
[3e4c22b2efe7f07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203615 +0  25000000
[3e4c22b2efe8e6e] jit-backend-dump}
[3e4c22b2efec46a] {jit-backend-addr
bridge out of Guard 0x520e500 has address 0x7f4a5c203340 to 0x7f4a5c203610
       gc table: 0x7f4a5c203240
    jump target: 0x7f4a5c203340
         resops: 0x7f4a5c20334e
       failures: 0x7f4a5c203610
            end: 0x7f4a5c20392b
[3e4c22b2efeeaf9] jit-backend-addr}
[3e4c22b2eff2475] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20335e +0  F1020000
[3e4c22b2eff32cb] jit-backend-dump}
[3e4c22b2eff6834] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203375 +0  F6020000
[3e4c22b2eff75af] jit-backend-dump}
[3e4c22b2effab89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203385 +0  02030000
[3e4c22b2effb937] jit-backend-dump}
[3e4c22b2effed40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203391 +0  12030000
[3e4c22b2efffa7a] jit-backend-dump}
[3e4c22b2f002e22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2033a9 +0  16030000
[3e4c22b2f003b56] jit-backend-dump}
[3e4c22b2f006ef1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2033bb +0  20030000
[3e4c22b2f007c09] jit-backend-dump}
[3e4c22b2f00afcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2033d0 +0  27030000
[3e4c22b2f00bd09] jit-backend-dump}
[3e4c22b2f00f0de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2033f0 +0  23030000
[3e4c22b2f00fe22] jit-backend-dump}
[3e4c22b2f013271] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203407 +0  44030000
[3e4c22b2f013fc1] jit-backend-dump}
[3e4c22b2f01731c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20341a +0  4D030000
[3e4c22b2f018025] jit-backend-dump}
[3e4c22b2f01b392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20342b +0  58030000
[3e4c22b2f01c0b7] jit-backend-dump}
[3e4c22b2f01f3d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20343e +0  61030000
[3e4c22b2f0200f3] jit-backend-dump}
[3e4c22b2f0233d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203448 +0  73030000
[3e4c22b2f02410a] jit-backend-dump}
[3e4c22b2f027386] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203455 +0  82030000
[3e4c22b2f0280ba] jit-backend-dump}
[3e4c22b2f02b317] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203467 +0  8C030000
[3e4c22b2f02c03c] jit-backend-dump}
[3e4c22b2f02f27d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20347d +0  92030000
[3e4c22b2f02ff8c] jit-backend-dump}
[3e4c22b2f03320b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203495 +0  96030000
[3e4c22b2f033f14] jit-backend-dump}
[3e4c22b2f0371b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2034ac +0  9B030000
[3e4c22b2f037ee5] jit-backend-dump}
[3e4c22b2f03b142] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2034b5 +0  AE030000
[3e4c22b2f03be5b] jit-backend-dump}
[3e4c22b2f03f0be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2034c8 +0  B7030000
[3e4c22b2f03fdfb] jit-backend-dump}
[3e4c22b2f0430a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2034d5 +0  C6030000
[3e4c22b2f043daa] jit-backend-dump}
[3e4c22b2f046ff5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2034ed +0  CA030000
[3e4c22b2f047d17] jit-backend-dump}
[3e4c22b2f04af67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2034f6 +0  DD030000
[3e4c22b2f04bc7d] jit-backend-dump}
[3e4c22b2f04eee6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20350d +0  E2030000
[3e4c22b2f04fbec] jit-backend-dump}
[3e4c22b2f052e4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203523 +0  E8030000
[3e4c22b2f053b52] jit-backend-dump}
[3e4c22b2f057038] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe02d +0  0F530000
[3e4c22b2f057da6] jit-backend-dump}
[3e4c22b2f05c0a8] jit-backend}
[3e4c22b2f05ff81] {jit-log-opt-bridge
# bridge out of Guard 0x520e500 with 107 ops
[p0, p1]
+278: guard_class(p1, 16500016, descr=<Guard0x59c8560>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull_class(p3, 16470384, descr=<Guard0x59c85c0>) [p0, p1]
+320: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+323: guard_false(i6, descr=<Guard0x59ca410>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+329: guard_class(p0, 16437896, descr=<Guard0x59ca458>) [p0, p1]
+341: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+345: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x59c8620>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+365: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p10, 16478824, descr=<Guard0x59ca4a0>) [p0, p1]
+383: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+395: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x59ca4e8>) [p0, p1]
+404: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+409: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+414: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+419: p17 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+424: guard_class(p17, 16505296, descr=<Guard0x59ca530>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+436: guard_not_invalidated(descr=<Guard0x59ca578>) [p0, p1]
+436: p19 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+441: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x59c8680>) [p0, p1]
+459: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x59c86e0>) [p0, p1]
+478: i22 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+482: i23 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+486: i24 = int_eq(i22, i23)
+489: guard_false(i24, descr=<Guard0x59ca5c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+495: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x59c8740>) [p0, p1]
+514: i27 = int_ge(i23, 0)
+518: guard_true(i27, descr=<Guard0x59ca608>) [p0, p1]
+524: i28 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+528: i29 = int_lt(i23, i28)
+531: guard_true(i29, descr=<Guard0x59ca650>) [p0, p1]
+537: p30 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+541: guard_class(p30, 16622984, descr=<Guard0x59ca698>) [p0, p1]
+555: p32 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+559: p33 = getarrayitem_gc_r(p32, i23, descr=<ArrayP 8>)
+564: guard_class(p33, 16470384, descr=<Guard0x59ca6e0>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+577: p35 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+581: guard_nonnull_class(p35, 16616448, descr=<Guard0x59c87a0>) [p0, p1]
+601: p37 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+605: guard_nonnull_class(p37, 16470384, descr=<Guard0x59c8800>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+624: i40 = instance_ptr_eq(p35, ConstPtr(ptr39))
+627: guard_true(i40, descr=<Guard0x59ca728>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+633: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x59c8860>) [p0, p1]
+652: i42 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+656: i43 = int_eq(i23, i42)
+659: guard_true(i43, descr=<Guard0x59ca770>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+665: p44 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+669: guard_nonnull_class(p44, 16616448, descr=<Guard0x59c88c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+689: i47 = instance_ptr_eq(p44, ConstPtr(ptr46))
+692: guard_true(i47, descr=<Guard0x59ca7b8>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+698: p48 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+702: guard_nonnull_class(p48, ConstClass(W_Symbol), descr=<Guard0x59c8920>) [p0, p1]
+721: p50 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+725: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x59c8980>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+743: p52 = new_with_vtable(descr=<SizeDescr 32>)
+787: p53 = new_with_vtable(descr=<SizeDescr 40>)
+798: setfield_gc(p53, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+809: setfield_gc(p53, ConstPtr(ptr54), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+813: setfield_gc(p53, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+817: setfield_gc(p53, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+821: p55 = new_with_vtable(descr=<SizeDescr 48>)
+832: p56 = new_with_vtable(descr=<SizeDescr 32>)
+843: setfield_gc(p56, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+851: p59 = new_array_clear(4, descr=<ArrayP 8>)
+877: setarrayitem_gc(p59, 0, ConstPtr(ptr61), descr=<ArrayP 8>)
+881: setarrayitem_gc(p59, 1, p48, descr=<ArrayP 8>)
+885: setarrayitem_gc(p59, 2, p50, descr=<ArrayP 8>)
+889: setarrayitem_gc(p59, 3, p50, descr=<ArrayP 8>)
+893: setfield_gc(p56, p59, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+904: setfield_gc(p56, ConstPtr(ptr65), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+908: setfield_gc(p52, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+912: setfield_gc(p55, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+916: setfield_gc(p52, p53, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+920: setfield_gc(p52, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+924: setfield_gc(p55, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+928: setfield_gc(p55, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+939: setfield_gc(p55, ConstPtr(ptr66), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+943: setfield_gc(p55, p56, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+947: jump(p52, p55, descr=TargetToken(59469520))
+976: --end of the loop--
[3e4c22b2f0aec3b] jit-log-opt-bridge}
[3e4c22b2f733120] {jit-backend
[3e4c22b2f7d615e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203bb
[3e4c22b2fda9b69] jit-backend-dump}
[3e4c22b2fdb840f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203d14 +0  25000000
[3e4c22b2fdb9a5b] jit-backend-dump}
[3e4c22b2fdbd662] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2040d5 +0  25000000
[3e4c22b2fdbe555] jit-backend-dump}
[3e4c22b2fdc169f] {jit-backend-addr
bridge out of Guard 0x47a82f0 has address 0x7f4a5c203d10 to 0x7f4a5c2040d0
       gc table: 0x7f4a5c203bb0
    jump target: 0x7f4a5c203d10
         resops: 0x7f4a5c203d1e
       failures: 0x7f4a5c2040d0
            end: 0x7f4a5c20451f
[3e4c22b2fdc3b60] jit-backend-addr}
[3e4c22b2fdc6eb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203d2e +0  E1030000
[3e4c22b2fdc7cdd] jit-backend-dump}
[3e4c22b2fdcad9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203d3b +0  F0030000
[3e4c22b2fdcbada] jit-backend-dump}
[3e4c22b2fdce921] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203d4b +0  FC030000
[3e4c22b2fdcf627] jit-backend-dump}
[3e4c22b2fdd23c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203d62 +0  01040000
[3e4c22b2fdd30c9] jit-backend-dump}
[3e4c22b2fdd5e77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203d70 +0  0F040000
[3e4c22b2fdd6b83] jit-backend-dump}
[3e4c22b2fdd99a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203d84 +0  17040000
[3e4c22b2fdda6a8] jit-backend-dump}
[3e4c22b2fddd793] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203d9c +0  37040000
[3e4c22b2fdde4cd] jit-backend-dump}
[3e4c22b2fde152e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203dad +0  42040000
[3e4c22b2fde2200] jit-backend-dump}
[3e4c22b2fde528c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203dc1 +0  4A040000
[3e4c22b2fde5fa5] jit-backend-dump}
[3e4c22b2fde8ebf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203ddf +0  48040000
[3e4c22b2fde9b9a] jit-backend-dump}
[3e4c22b2fdecafd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203df2 +0  51040000
[3e4c22b2fded816] jit-backend-dump}
[3e4c22b2fdf06d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203e06 +0  59040000
[3e4c22b2fdf13af] jit-backend-dump}
[3e4c22b2fdf4218] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203e12 +0  69040000
[3e4c22b2fdf4eea] jit-backend-dump}
[3e4c22b2fdf7d6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203e28 +0  6F040000
[3e4c22b2fdf8a27] jit-backend-dump}
[3e4c22b2fdfb874] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203e4b +0  68040000
[3e4c22b2fdfc53d] jit-backend-dump}
[3e4c22b2fdff372] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203e68 +0  67040000
[3e4c22b2fe0002b] jit-backend-dump}
[3e4c22b2fe02ea3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203e7a +0  71040000
[3e4c22b2fe03b75] jit-backend-dump}
[3e4c22b2fe069f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203e8b +0  7C040000
[3e4c22b2fe076c8] jit-backend-dump}
[3e4c22b2fe0a515] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203e9e +0  85040000
[3e4c22b2fe0b1d2] jit-backend-dump}
[3e4c22b2fe0e068] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203ea8 +0  97040000
[3e4c22b2fe0ed2b] jit-backend-dump}
[3e4c22b2fe11b7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203eb5 +0  A6040000
[3e4c22b2fe1284a] jit-backend-dump}
[3e4c22b2fe156b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203ec5 +0  B2040000
[3e4c22b2fe1637c] jit-backend-dump}
[3e4c22b2fe191cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203edb +0  B8040000
[3e4c22b2fe19ee7] jit-backend-dump}
[3e4c22b2fe1cd6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203ef8 +0  B7040000
[3e4c22b2fe1da31] jit-backend-dump}
[3e4c22b2fe20884] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f01 +0  CA040000
[3e4c22b2fe21550] jit-backend-dump}
[3e4c22b2fe243da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f13 +0  D4040000
[3e4c22b2fe250a9] jit-backend-dump}
[3e4c22b2fe27f27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f20 +0  E3040000
[3e4c22b2fe28bff] jit-backend-dump}
[3e4c22b2fe2ba6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f2a +0  F5040000
[3e4c22b2fe2c731] jit-backend-dump}
[3e4c22b2fe2f578] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f33 +0  08050000
[3e4c22b2fe30237] jit-backend-dump}
[3e4c22b2fe3310e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f44 +0  13050000
[3e4c22b2fe33dce] jit-backend-dump}
[3e4c22b2fe36c55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f5a +0  19050000
[3e4c22b2fe3791e] jit-backend-dump}
[3e4c22b2fe3a78c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f63 +0  2C050000
[3e4c22b2fe3b458] jit-backend-dump}
[3e4c22b2fe3e2d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f7a +0  31050000
[3e4c22b2fe3efa8] jit-backend-dump}
[3e4c22b2fe41e0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f90 +0  37050000
[3e4c22b2fe42ada] jit-backend-dump}
[3e4c22b2fe4593c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203fa6 +0  3D050000
[3e4c22b2fe46611] jit-backend-dump}
[3e4c22b2fe4948c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203fbc +0  43050000
[3e4c22b2fe4a164] jit-backend-dump}
[3e4c22b2fe4d390] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5b3b +0  D1E10000
[3e4c22b2fe4e084] jit-backend-dump}
[3e4c22b2fe52490] jit-backend}
[3e4c22b2fe560ad] {jit-log-opt-bridge
# bridge out of Guard 0x47a82f0 with 138 ops
[p0, p1]
+374: guard_class(p1, 16500016, descr=<Guard0x59c8c20>) [p0, p1]
+386: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+390: guard_nonnull(p3, descr=<Guard0x59cae30>) [p0, p1]
+406: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+409: guard_true(i5, descr=<Guard0x59cade8>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+415: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+419: guard_nonnull_class(p6, 16616448, descr=<Guard0x59c9040>) [p0, p1]
+438: guard_class(p0, 16437352, descr=<Guard0x59cada0>) [p0, p1]
+452: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+463: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x59cad58>) [p0, p1]
+472: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+472: guard_not_invalidated(descr=<Guard0x59cad10>) [p0, p1]
+472: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+476: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x59c8fe0>) [p0, p1]
+496: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+500: guard_class(p14, 16437896, descr=<Guard0x59cacc8>) [p0, p1]
+513: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+524: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x59cac80>) [p0, p1]
+533: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+533: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+537: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+541: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+545: guard_nonnull_class(p19, 16478824, descr=<Guard0x59c8f80>) [p0, p1]
+563: guard_nonnull_class(p20, 16470384, descr=<Guard0x59c8f20>) [p0, p1]
+582: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+593: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x59cac38>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+602: guard_class(p21, 16437896, descr=<Guard0x59cabf0>) [p0, p1]
+614: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+618: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x59c8ec0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+636: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+640: p30 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+644: p31 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+648: p32 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+659: guard_class(p32, 16505296, descr=<Guard0x59caba8>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+671: p34 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+682: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x59c8e60>) [p0, p1]
+700: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x59c8e00>) [p0, p1]
+718: i37 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+722: i38 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+726: i39 = int_eq(i37, i38)
+729: guard_false(i39, descr=<Guard0x59cab60>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+735: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x59c8da0>) [p0, p1]
+754: i42 = int_ge(i38, 0)
+758: guard_true(i42, descr=<Guard0x59cab18>) [p0, p1]
+764: i43 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+768: i44 = int_lt(i38, i43)
+771: guard_true(i44, descr=<Guard0x59caad0>) [p0, p1]
+777: p45 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+781: guard_class(p45, 16622984, descr=<Guard0x59caa88>) [p0, p1]
+793: p47 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+797: p48 = getarrayitem_gc_r(p47, i38, descr=<ArrayP 8>)
+802: guard_class(p48, 16470384, descr=<Guard0x59caa40>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+815: p50 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+826: guard_nonnull_class(p50, 16616448, descr=<Guard0x59c8d40>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+844: i53 = instance_ptr_eq(p50, ConstPtr(ptr52))
+847: guard_true(i53, descr=<Guard0x59ca9f8>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+853: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x59c8ce0>) [p0, p1]
+871: i55 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+875: i56 = int_eq(i38, i55)
+878: guard_false(i56, descr=<Guard0x59ca9b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+884: i58 = int_ge(i55, 0)
+888: guard_true(i58, descr=<Guard0x59ca968>) [p0, p1]
+894: i59 = int_lt(i55, i43)
+897: guard_true(i59, descr=<Guard0x59ca920>) [p0, p1]
+903: p60 = getarrayitem_gc_r(p47, i55, descr=<ArrayP 8>)
+908: guard_class(p60, 16470384, descr=<Guard0x59ca8d8>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+920: p62 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+924: guard_nonnull_class(p62, 16616448, descr=<Guard0x59c8c80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+942: i65 = instance_ptr_eq(p62, ConstPtr(ptr64))
+945: guard_true(i65, descr=<Guard0x59ca890>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+951: p66 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+955: guard_nonnull_class(p66, ConstClass(W_Vector), descr=<Guard0x59c8bc0>) [p0, p1]
+974: p68 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+978: guard_nonnull_class(p68, ConstClass(W_Vector), descr=<Guard0x59c8b60>) [p0, p1]
+996: p70 = getfield_gc_r(p60, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1000: guard_nonnull_class(p70, ConstClass(W_Vector), descr=<Guard0x59c8b00>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+1018: p72 = getfield_gc_r(p60, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1022: guard_nonnull_class(p72, 16470384, descr=<Guard0x59c8aa0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+1040: p74 = new_with_vtable(descr=<SizeDescr 32>)
+1087: p75 = new_with_vtable(descr=<SizeDescr 40>)
+1098: setfield_gc(p75, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1116: setfield_gc(p75, ConstPtr(ptr76), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1120: setfield_gc(p75, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1124: setfield_gc(p75, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1128: p77 = new_with_vtable(descr=<SizeDescr 24>)
+1139: setfield_gc(p77, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1143: setfield_gc(p77, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1147: p78 = new_with_vtable(descr=<SizeDescr 48>)
+1158: p79 = new_with_vtable(descr=<SizeDescr 32>)
+1170: setfield_gc(p79, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1179: p82 = new_array_clear(4, descr=<ArrayP 8>)
+1206: setarrayitem_gc(p82, 0, ConstPtr(ptr84), descr=<ArrayP 8>)
+1210: setarrayitem_gc(p82, 1, p66, descr=<ArrayP 8>)
+1214: setarrayitem_gc(p82, 2, p68, descr=<ArrayP 8>)
+1218: setarrayitem_gc(p82, 3, p70, descr=<ArrayP 8>)
+1222: setfield_gc(p79, p82, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1234: setfield_gc(p79, ConstPtr(ptr88), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1239: setfield_gc(p74, p72, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1243: setfield_gc(p74, p77, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1247: setfield_gc(p78, ConstPtr(ptr89), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1251: setfield_gc(p78, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1255: setfield_gc(p78, p79, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1259: setfield_gc(p78, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1270: setfield_gc(p78, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1281: setfield_gc(p74, p75, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1285: jump(p74, p78, descr=TargetToken(59469520))
+1312: --end of the loop--
[3e4c22b2feb1c2f] jit-log-opt-bridge}
[3e4c22b3031fcf8] {jit-backend
[3e4c22b3039a8c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2046d
[3e4c22b303a43fb] jit-backend-dump}
[3e4c22b303aeefa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2047c4 +0  25000000
[3e4c22b303b056a] jit-backend-dump}
[3e4c22b303b43c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204aa5 +0  25000000
[3e4c22b303b530e] jit-backend-dump}
[3e4c22b303b852b] {jit-backend-addr
bridge out of Guard 0x3da2c80 has address 0x7f4a5c2047c0 to 0x7f4a5c204aa0
       gc table: 0x7f4a5c2046d0
    jump target: 0x7f4a5c2047c0
         resops: 0x7f4a5c2047ce
       failures: 0x7f4a5c204aa0
            end: 0x7f4a5c204d83
[3e4c22b303bab46] jit-backend-addr}
[3e4c22b303bde3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2047de +0  01030000
[3e4c22b303becc3] jit-backend-dump}
[3e4c22b303c1e84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2047f5 +0  06030000
[3e4c22b303c2c2f] jit-backend-dump}
[3e4c22b303c5ac9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20480c +0  0B030000
[3e4c22b303c6809] jit-backend-dump}
[3e4c22b303c95fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204824 +0  0F030000
[3e4c22b303ca316] jit-backend-dump}
[3e4c22b303cd122] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204838 +0  17030000
[3e4c22b303cde38] jit-backend-dump}
[3e4c22b303d0c32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204844 +0  27030000
[3e4c22b303d198b] jit-backend-dump}
[3e4c22b303d4798] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20485b +0  2C030000
[3e4c22b303d54a1] jit-backend-dump}
[3e4c22b303d8298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204870 +0  33030000
[3e4c22b303d8fcc] jit-backend-dump}
[3e4c22b303dbdbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204884 +0  3B030000
[3e4c22b303dcad6] jit-backend-dump}
[3e4c22b303dfa61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20489b +0  5C030000
[3e4c22b303e079b] jit-backend-dump}
[3e4c22b303e3650] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2048b1 +0  62030000
[3e4c22b303e4347] jit-backend-dump}
[3e4c22b303e7169] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2048c2 +0  6D030000
[3e4c22b303e7e50] jit-backend-dump}
[3e4c22b303eac5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2048d8 +0  73030000
[3e4c22b303eb960] jit-backend-dump}
[3e4c22b303ee773] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2048e2 +0  85030000
[3e4c22b303ef479] jit-backend-dump}
[3e4c22b303f2298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2048ef +0  94030000
[3e4c22b303f2fb4] jit-backend-dump}
[3e4c22b303f5e22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204900 +0  9F030000
[3e4c22b303f6b3e] jit-backend-dump}
[3e4c22b303f9c69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204915 +0  A6030000
[3e4c22b303fa963] jit-backend-dump}
[3e4c22b303fd898] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20492c +0  AB030000
[3e4c22b303fe59b] jit-backend-dump}
[3e4c22b30401453] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20493c +0  B7030000
[3e4c22b3040218a] jit-backend-dump}
[3e4c22b30405076] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204954 +0  BB030000
[3e4c22b30405d7f] jit-backend-dump}
[3e4c22b30408cac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20496b +0  C0030000
[3e4c22b30409990] jit-backend-dump}
[3e4c22b3040c833] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204981 +0  C6030000
[3e4c22b3040d551] jit-backend-dump}
[3e4c22b3041038c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204997 +0  CC030000
[3e4c22b30411092] jit-backend-dump}
[3e4c22b30414253] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e036d +0  4F440200
[3e4c22b30414f50] jit-backend-dump}
[3e4c22b30418c0c] jit-backend}
[3e4c22b3041c57f] {jit-log-opt-bridge
# bridge out of Guard 0x3da2c80 with 92 ops
[p0, p1]
+262: guard_class(p1, 16500368, descr=<Guard0x59c90a0>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+278: guard_nonnull_class(p3, 16478824, descr=<Guard0x59c9100>) [p0, p1]
+297: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+301: guard_nonnull_class(p5, 16470384, descr=<Guard0x59c9160>) [p0, p1]
+320: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+324: guard_nonnull_class(p7, 16616448, descr=<Guard0x59c91c0>) [p0, p1]
+344: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+355: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x59caec0>) [p0, p1]
+364: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+364: guard_class(p0, 16435920, descr=<Guard0x59caf08>) [p0, p1]
+376: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+380: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x59c9220>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+399: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+403: p16 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+407: guard_class(p16, 16505296, descr=<Guard0x59caf50>) [p0, p1]
+420: guard_nonnull_class(p15, 16470384, descr=<Guard0x59c9280>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+440: guard_not_invalidated(descr=<Guard0x59caf98>) [p0, p1]
+440: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+444: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x59c92e0>) [p0, p1]
+463: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+467: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x59c9340>) [p0, p1]
+485: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+489: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+493: i25 = int_eq(i23, i24)
+496: guard_false(i25, descr=<Guard0x59cafe0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+502: p26 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+506: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x59c93a0>) [p0, p1]
+524: i29 = int_ge(i24, 0)
+528: guard_true(i29, descr=<Guard0x59cb028>) [p0, p1]
+534: i30 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+538: i31 = int_lt(i24, i30)
+541: guard_true(i31, descr=<Guard0x59cb070>) [p0, p1]
+547: p32 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+551: guard_class(p32, 16622984, descr=<Guard0x59cb0b8>) [p0, p1]
+564: p34 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+568: p35 = getarrayitem_gc_r(p34, i24, descr=<ArrayP 8>)
+573: guard_class(p35, 16470384, descr=<Guard0x59cb100>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+585: p37 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+589: guard_nonnull_class(p37, 16616448, descr=<Guard0x59c9400>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+615: i40 = instance_ptr_eq(p37, ConstPtr(ptr39))
+618: guard_true(i40, descr=<Guard0x59cb148>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+624: p41 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+629: guard_nonnull_class(p41, ConstClass(W_Symbol), descr=<Guard0x59c9460>) [p0, p1]
+648: p43 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+652: guard_nonnull_class(p43, ConstClass(W_Symbol), descr=<Guard0x59c94c0>) [p0, p1]
+671: p45 = getfield_gc_r(p35, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+675: guard_nonnull_class(p45, ConstClass(W_Vector), descr=<Guard0x59c9520>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+693: p47 = getfield_gc_r(p35, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+697: guard_nonnull_class(p47, 16616448, descr=<Guard0x59c9580>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+715: p49 = new_with_vtable(descr=<SizeDescr 32>)
+762: p50 = new_with_vtable(descr=<SizeDescr 40>)
+773: setfield_gc(p50, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+784: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+788: setfield_gc(p50, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+792: setfield_gc(p50, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+796: p52 = new_with_vtable(descr=<SizeDescr 48>)
+807: p53 = new_with_vtable(descr=<SizeDescr 32>)
+819: setfield_gc(p53, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+828: p56 = new_array_clear(4, descr=<ArrayP 8>)
+862: setarrayitem_gc(p56, 0, ConstPtr(ptr58), descr=<ArrayP 8>)
+866: setarrayitem_gc(p56, 1, p41, descr=<ArrayP 8>)
+870: setarrayitem_gc(p56, 2, p43, descr=<ArrayP 8>)
+874: setarrayitem_gc(p56, 3, p45, descr=<ArrayP 8>)
+878: setfield_gc(p53, p56, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+890: setfield_gc(p53, ConstPtr(ptr62), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+895: setfield_gc(p49, p50, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+906: setfield_gc(p52, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+910: setfield_gc(p49, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+914: setfield_gc(p49, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+918: setfield_gc(p52, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+922: setfield_gc(p52, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+933: setfield_gc(p52, ConstPtr(ptr63), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+937: setfield_gc(p52, p53, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+941: jump(p49, p52, descr=TargetToken(59469520))
+976: --end of the loop--
[3e4c22b30467273] jit-log-opt-bridge}
[3e4c22b30631cbc] {jit-backend
[3e4c22b3068ca90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204eb
[3e4c22b30694a23] jit-backend-dump}
[3e4c22b3069e8d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204f54 +0  28000000
[3e4c22b3069fd38] jit-backend-dump}
[3e4c22b306a39bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205145 +0  28000000
[3e4c22b306a481d] jit-backend-dump}
[3e4c22b306a7998] {jit-backend-addr
bridge out of Guard 0x3f66e00 has address 0x7f4a5c204f50 to 0x7f4a5c205140
       gc table: 0x7f4a5c204eb0
    jump target: 0x7f4a5c204f50
         resops: 0x7f4a5c204f5e
       failures: 0x7f4a5c205140
            end: 0x7f4a5c205342
[3e4c22b306a9d9b] jit-backend-addr}
[3e4c22b306ad1a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204f6e +0  F4010000
[3e4c22b306adfca] jit-backend-dump}
[3e4c22b306b12a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204f7b +0  03020000
[3e4c22b306b1fc6] jit-backend-dump}
[3e4c22b306b505e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204f8b +0  0F020000
[3e4c22b306b5d42] jit-backend-dump}
[3e4c22b306b8cd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204fa2 +0  14020000
[3e4c22b306b9a20] jit-backend-dump}
[3e4c22b306bc94f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204fb6 +0  1C020000
[3e4c22b306bd646] jit-backend-dump}
[3e4c22b306c04ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204fca +0  24020000
[3e4c22b306c11c4] jit-backend-dump}
[3e4c22b306c419f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204fea +0  3C020000
[3e4c22b306c4e83] jit-backend-dump}
[3e4c22b306c7dc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c204ffe +0  44020000
[3e4c22b306c8a94] jit-backend-dump}
[3e4c22b306cb8f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205013 +0  4B020000
[3e4c22b306cc5bc] jit-backend-dump}
[3e4c22b306cf3f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205020 +0  5A020000
[3e4c22b306d00b3] jit-backend-dump}
[3e4c22b306d2ee2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205037 +0  5F020000
[3e4c22b306d3b9b] jit-backend-dump}
[3e4c22b306d6a56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20505c +0  56020000
[3e4c22b306d7735] jit-backend-dump}
[3e4c22b306da61e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205073 +0  5B020000
[3e4c22b306db2d4] jit-backend-dump}
[3e4c22b306de143] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205085 +0  65020000
[3e4c22b306dedea] jit-backend-dump}
[3e4c22b306e1c90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2050a4 +0  62020000
[3e4c22b306e2937] jit-backend-dump}
[3e4c22b306e57b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2050bc +0  66020000
[3e4c22b306e646f] jit-backend-dump}
[3e4c22b306e95e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e79dd +0  6FD50100
[3e4c22b306ea2a6] jit-backend-dump}
[3e4c22b306edf50] jit-backend}
[3e4c22b306f18d2] {jit-log-opt-bridge
# bridge out of Guard 0x3f66e00 with 50 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x59c95e0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull(p3, descr=<Guard0x59cb190>) [p0, p1]
+214: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+217: guard_true(i5, descr=<Guard0x59cb1d8>) [p0, p1]
debug_merge_point(0, 0, 'lst5071')
+223: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+227: guard_nonnull_class(p6, 16616448, descr=<Guard0x59c9640>) [p0, p1]
+246: guard_class(p0, 16437896, descr=<Guard0x59cb220>) [p0, p1]
+266: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+277: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x59cb268>) [p0, p1]
+286: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+286: guard_not_invalidated(descr=<Guard0x59cb2b0>) [p0, p1]
+286: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+290: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+294: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop25089 AppRand23 AppRand24) from (loop15067 (cdr ps5069) lst5071)')
+298: guard_nonnull_class(p12, 16479200, descr=<Guard0x59c96a0>) [p0, p1]
+318: guard_nonnull_class(p13, 16470384, descr=<Guard0x59c9700>) [p0, p1]
+338: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+350: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x59cb2f8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 AppRand23 AppRand24)')
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+359: guard_class(p14, 16437896, descr=<Guard0x59cb340>) [p0, p1]
+372: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+376: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x59c9760>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+395: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+400: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+405: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+410: p25 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+415: p26 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+420: guard_class(p26, 16505296, descr=<Guard0x59cb388>) [p0, p1]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+432: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+437: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x59c97c0>) [p0, p1]
+455: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x59c9820>) [p0, p1]
+473: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+484: i32 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+495: i33 = int_eq(i31, i32)
+498: guard_true(i33, descr=<Guard0x59cb3d0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+504: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+508: guard_nonnull_class(p34, 16470384, descr=<Guard0x59c9880>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+528: jump(p12, p34, p6, p20, p26, p14, p22, p23, p24, p13, p25, p25, p24, p23, p22, p26, p28, i31, descr=TargetToken(61027520))
+656: --end of the loop--
[3e4c22b3071dd8c] jit-log-opt-bridge}
[3e4c22b3131fcfb] {jit-backend
[3e4c22b31389283] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2054d
[3e4c22b31392ed2] jit-backend-dump}
[3e4c22b3139ee24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2055b4 +0  25000000
[3e4c22b313a02cd] jit-backend-dump}
[3e4c22b313a41e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205845 +0  25000000
[3e4c22b313a50e8] jit-backend-dump}
[3e4c22b313a8382] {jit-backend-addr
bridge out of Guard 0x3da3b68 has address 0x7f4a5c2055b0 to 0x7f4a5c205840
       gc table: 0x7f4a5c2054d0
    jump target: 0x7f4a5c2055b0
         resops: 0x7f4a5c2055be
       failures: 0x7f4a5c205840
            end: 0x7f4a5c205acf
[3e4c22b313aa764] jit-backend-addr}
[3e4c22b313adb67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2055ce +0  B1020000
[3e4c22b313ae990] jit-backend-dump}
[3e4c22b313b1a99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2055db +0  C0020000
[3e4c22b313b27e6] jit-backend-dump}
[3e4c22b313b58b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2055eb +0  CC020000
[3e4c22b313b664b] jit-backend-dump}
[3e4c22b313b96d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205602 +0  D1020000
[3e4c22b313ba3b5] jit-backend-dump}
[3e4c22b313bd3dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205610 +0  DF020000
[3e4c22b313be0ca] jit-backend-dump}
[3e4c22b313c1103] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205624 +0  E7020000
[3e4c22b313c1de8] jit-backend-dump}
[3e4c22b313c4e4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205643 +0  00030000
[3e4c22b313c5b34] jit-backend-dump}
[3e4c22b313c8b02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205657 +0  08030000
[3e4c22b313ccf76] jit-backend-dump}
[3e4c22b313d091d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20566b +0  10030000
[3e4c22b313d1666] jit-backend-dump}
[3e4c22b313d46e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205678 +0  1F030000
[3e4c22b313d542c] jit-backend-dump}
[3e4c22b313d830f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20568e +0  25030000
[3e4c22b313d901e] jit-backend-dump}
[3e4c22b313dbf63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2056a2 +0  2D030000
[3e4c22b313dcc82] jit-backend-dump}
[3e4c22b313dfc62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2056b5 +0  36030000
[3e4c22b313e095c] jit-backend-dump}
[3e4c22b313e394c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2056cb +0  3C030000
[3e4c22b313e4699] jit-backend-dump}
[3e4c22b313e7602] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2056e1 +0  42030000
[3e4c22b313e83d2] jit-backend-dump}
[3e4c22b313eb31a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2056f2 +0  4D030000
[3e4c22b313ec057] jit-backend-dump}
[3e4c22b313ef03e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205709 +0  52030000
[3e4c22b313efce8] jit-backend-dump}
[3e4c22b313f2c2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205712 +0  65030000
[3e4c22b313f38d1] jit-backend-dump}
[3e4c22b313f67c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205729 +0  6A030000
[3e4c22b313f7480] jit-backend-dump}
[3e4c22b313fa360] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205741 +0  6E030000
[3e4c22b313fb023] jit-backend-dump}
[3e4c22b313fe1a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e2bef +0  BD290200
[3e4c22b313fee97] jit-backend-dump}
[3e4c22b31402e65] jit-backend}
[3e4c22b314068cd] {jit-log-opt-bridge
# bridge out of Guard 0x3da3b68 with 86 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x59c98e0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x59cb460>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x59cb4a8>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16616448, descr=<Guard0x59c9940>) [p0, p1]
+310: guard_class(p0, 16437896, descr=<Guard0x59cb4f0>) [p0, p1]
+324: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+335: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x59cb538>) [p0, p1]
+344: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+344: guard_not_invalidated(descr=<Guard0x59cb580>) [p0, p1]
+344: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+348: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+352: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
+356: guard_nonnull_class(p12, 16478824, descr=<Guard0x59c99a0>) [p0, p1]
+375: guard_nonnull_class(p13, 16470384, descr=<Guard0x59c9a00>) [p0, p1]
+395: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+406: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x59cb5c8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+415: guard_class(p14, 16435920, descr=<Guard0x59cb610>) [p0, p1]
+428: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+432: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x59c9a60>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+450: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+454: p23 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+458: guard_class(p23, 16505296, descr=<Guard0x59cb658>) [p0, p1]
+470: guard_nonnull_class(p22, 16470384, descr=<Guard0x59c9ac0>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+489: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+493: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x59c9b20>) [p0, p1]
+511: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+515: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x59c9b80>) [p0, p1]
+533: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+537: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+541: i32 = int_eq(i30, i31)
+544: guard_true(i32, descr=<Guard0x59cb6a0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+550: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+555: guard_nonnull_class(p33, 16616448, descr=<Guard0x59c9be0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+573: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+576: guard_true(i36, descr=<Guard0x59cb6e8>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+582: p37 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+586: guard_nonnull_class(p37, ConstClass(W_Symbol), descr=<Guard0x59c9c40>) [p0, p1]
+605: p39 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+610: guard_nonnull_class(p39, ConstClass(W_Symbol), descr=<Guard0x59c9ca0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+629: p41 = new_with_vtable(descr=<SizeDescr 32>)
+673: p42 = new_with_vtable(descr=<SizeDescr 40>)
+684: setfield_gc(p42, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+695: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+699: setfield_gc(p42, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+703: setfield_gc(p42, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+707: p44 = new_with_vtable(descr=<SizeDescr 48>)
+719: p45 = new_with_vtable(descr=<SizeDescr 32>)
+731: setfield_gc(p45, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+739: p48 = new_array_clear(4, descr=<ArrayP 8>)
+766: setarrayitem_gc(p48, 0, ConstPtr(ptr50), descr=<ArrayP 8>)
+770: setarrayitem_gc(p48, 1, p37, descr=<ArrayP 8>)
+774: setarrayitem_gc(p48, 2, p39, descr=<ArrayP 8>)
+778: setarrayitem_gc(p48, 3, p39, descr=<ArrayP 8>)
+782: setfield_gc(p45, p48, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+793: setfield_gc(p45, ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+797: setfield_gc(p41, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+801: setfield_gc(p41, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+812: setfield_gc(p44, ConstPtr(ptr55), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+817: setfield_gc(p44, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+822: setfield_gc(p44, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+827: setfield_gc(p44, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+832: setfield_gc(p41, p42, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+836: setfield_gc(p44, p45, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+841: jump(p41, p44, descr=TargetToken(59469520))
+880: --end of the loop--
[3e4c22b3144a2f1] jit-log-opt-bridge}
[3e4c22b317ab2d4] {jit-backend
[3e4c22b31868833] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205c
[3e4c22b31873849] jit-backend-dump}
[3e4c22b3187e4fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205d64 +0  25000000
[3e4c22b3187fb43] jit-backend-dump}
[3e4c22b31883b9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206155 +0  25000000
[3e4c22b31884a96] jit-backend-dump}
[3e4c22b31887fcb] {jit-backend-addr
bridge out of Guard 0x3f76b18 has address 0x7f4a5c205d60 to 0x7f4a5c206150
       gc table: 0x7f4a5c205c60
    jump target: 0x7f4a5c205d60
         resops: 0x7f4a5c205d6e
       failures: 0x7f4a5c206150
            end: 0x7f4a5c206421
[3e4c22b3188a3de] jit-backend-addr}
[3e4c22b3188d965] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205d7e +0  37040000
[3e4c22b3188e75a] jit-backend-dump}
[3e4c22b31891961] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205d95 +0  3C040000
[3e4c22b31892677] jit-backend-dump}
[3e4c22b31895698] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205dac +0  41040000
[3e4c22b318963f6] jit-backend-dump}
[3e4c22b318993af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205db8 +0  51040000
[3e4c22b3189a0bf] jit-backend-dump}
[3e4c22b3189d08a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205dcc +0  59040000
[3e4c22b3189dd5c] jit-backend-dump}
[3e4c22b318a0e25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205de1 +0  7C040000
[3e4c22b318a1b0d] jit-backend-dump}
[3e4c22b318a4b2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205df8 +0  81040000
[3e4c22b318a5843] jit-backend-dump}
[3e4c22b318a87a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205e06 +0  8F040000
[3e4c22b318a94a6] jit-backend-dump}
[3e4c22b318ac3eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205e17 +0  9A040000
[3e4c22b318ad0d3] jit-backend-dump}
[3e4c22b318b002a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205e2b +0  A2040000
[3e4c22b318b0d2a] jit-backend-dump}
[3e4c22b318b3c7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205e41 +0  A8040000
[3e4c22b318b4950] jit-backend-dump}
[3e4c22b318b78a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205e57 +0  AE040000
[3e4c22b318b857f] jit-backend-dump}
[3e4c22b318bb4c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205e61 +0  C0040000
[3e4c22b318bf7aa] jit-backend-dump}
[3e4c22b318c3179] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205e6e +0  CF040000
[3e4c22b318c3eb0] jit-backend-dump}
[3e4c22b318c7089] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205ed3 +0  86040000
[3e4c22b318c7da5] jit-backend-dump}
[3e4c22b318caddb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205ee0 +0  95040000
[3e4c22b318cbad8] jit-backend-dump}
[3e4c22b318ceaea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205ef7 +0  9A040000
[3e4c22b318cf7da] jit-backend-dump}
[3e4c22b318d26c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205f0b +0  A2040000
[3e4c22b318d3392] jit-backend-dump}
[3e4c22b318d628b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205f1f +0  AA040000
[3e4c22b318d6f63] jit-backend-dump}
[3e4c22b318d9ecc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205f31 +0  B4040000
[3e4c22b318dac25] jit-backend-dump}
[3e4c22b318ddab8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c205f90 +0  71040000
[3e4c22b318de794] jit-backend-dump}
[3e4c22b318e190b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a13 +0  49C30100
[3e4c22b318e260b] jit-backend-dump}
[3e4c22b318e650f] jit-backend}
[3e4c22b318e9f89] {jit-log-opt-bridge
# bridge out of Guard 0x3f76b18 with 155 ops
[p0, p1]
+278: guard_class(p1, 16500016, descr=<Guard0x59c9d00>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x59c9d60>) [p0, p1]
+313: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+317: guard_nonnull_class(p5, 16616448, descr=<Guard0x59c9dc0>) [p0, p1]
+336: guard_class(p0, 16435920, descr=<Guard0x59cb778>) [p0, p1]
+348: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+359: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x59cb7c0>) [p0, p1]
+368: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+372: guard_not_invalidated(descr=<Guard0x59cb808>) [p0, p1]
+372: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+376: guard_class(p11, 16435920, descr=<Guard0x59cb850>) [p0, p1]
+389: p13 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+393: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x59c9e20>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! radicals i AppRand29) from (cons AppRand1 AppRand2)')
+412: guard_class(p10, 16504944, descr=<Guard0x59cb898>) [p0, p1]
+426: p16 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+430: guard_class(p16, 16479576, descr=<Guard0x59cb8e0>) [p0, p1]
+443: p18 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+454: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x59cb928>) [p0, p1]
+463: p20 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+467: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x59c9e80>) [p0, p1]
+485: i22 = getfield_gc_i(p10, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+489: p23 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+493: guard_class(p23, 16622984, descr=<Guard0x59cb970>) [p0, p1]
+507: i26 = int_ge(i22, 0)
+511: guard_true(i26, descr=<Guard0x59cb9b8>) [p0, p1]
+517: i27 = getfield_gc_i(p20, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+521: i28 = int_lt(i22, i27)
+524: guard_true(i28, descr=<Guard0x59cba00>) [p0, p1]
+530: p29 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+534: p30 = new_with_vtable(descr=<SizeDescr 24>)
+581: setfield_gc(p30, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+585: setfield_gc(p30, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+599: setarrayitem_gc(p29, i22, p30, descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand30 (+ i 1)]) (loop AppRand30))')
debug_merge_point(0, 0, '(+ i 1)')
+604: i32 = int_add(i22, 1)
debug_merge_point(0, 0, '(loop AppRand30)')
debug_merge_point(0, 0, '(let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))) from (loop AppRand30)')
debug_merge_point(0, 0, '(> i n/2)')
+608: p33 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+612: guard_nonnull_class(p33, ConstClass(W_Fixnum), descr=<Guard0x59c9ee0>) [p33, p16, p11, p13, i32]
+631: i35 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+635: i36 = int_gt(i32, i35)
+638: guard_false(i36, descr=<Guard0x59cba48>) [p33, p16, p11, p13, i32]
debug_merge_point(0, 0, '(if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))')
debug_merge_point(0, 0, '(let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30)))')
debug_merge_point(0, 0, '(rads-of-size i)')
+644: p37 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+648: guard_nonnull_class(p37, 16477696, descr=<Guard0x59c9f40>) [p33, p16, p11, p13, i32]
+667: p39 = getfield_gc_r(p37, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+678: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x59cba90>) [p33, p16, p11, p13, i32]
+687: p41 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '())))')
debug_merge_point(0, 0, '(lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))')
+687: p42 = getfield_gc_r(p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+691: p43 = getfield_gc_r(p37, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+695: guard_class(p43, 16505296, descr=<Guard0x59cbad8>) [p33, p16, p11, p13, i32]
+707: guard_nonnull_class(p42, ConstClass(W_Vector), descr=<Guard0x59c9fa0>) [p33, p16, p11, p13, i32]
debug_merge_point(0, 0, '(- n4967 1)')
debug_merge_point(0, 0, '(let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))')
debug_merge_point(0, 0, '(three-partitions AppRand9)')
debug_merge_point(0, 0, '(let ([loop15177 (lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))]) (loop15177 '() (quotient m 3)))')
debug_merge_point(0, 0, '(lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))')
debug_merge_point(0, 0, '(loop15177 '() (quotient m 3))')
+725: i47 = uint_mul_high(i22, -6148914691236517205)
+745: i49 = uint_rshift(i47, 1)
+748: i51 = int_mul(i49, 3)
+748: i53 = int_xor(i22, 3)
+748: i54 = int_ne(i51, i22)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, '(let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))')
debug_merge_point(0, 0, 'lst5179')
debug_merge_point(0, 0, '(lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))')
debug_merge_point(0, 0, '(- m nc15181)')
+748: i55 = int_sub(i22, i49)
debug_merge_point(0, 0, '(loop25185 lst5179 (quotient AppRand36 2))')
+754: i57 = int_rshift(i55, 1)
+760: i59 = int_lshift(i57, 1)
+766: i61 = int_xor(i55, 2)
+777: i63 = int_rshift(i61, 63)
+781: i64 = int_ne(i59, i55)
+805: i65 = int_and(i63, i64)
+808: i66 = int_add(i57, i65)
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+811: i67 = int_lt(i66, i49)
+814: guard_false(i67, descr=<Guard0x59cbb20>) [p33, p16, p11, p13, i32]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+820: i68 = int_add(i49, i66)
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+826: i69 = int_sub(i22, i68)
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+832: i71 = int_sub(i66, 1)
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+836: p72 = new_with_vtable(descr=<SizeDescr 32>)
+847: p73 = new_with_vtable(descr=<SizeDescr 48>)
+865: setfield_gc(p73, ConstPtr(ptr74), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+883: setfield_gc(p73, ConstPtr(ptr75), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+887: p76 = new_with_vtable(descr=<SizeDescr 16>)
+898: setfield_gc(p76, i49, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+902: setfield_gc(p73, p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+906: p77 = new_with_vtable(descr=<SizeDescr 32>)
+924: setfield_gc(p77, ConstPtr(ptr78), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+935: setfield_gc(p77, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+939: setfield_gc(p77, i22, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+943: setfield_gc(p73, p77, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+947: p80 = new_with_vtable(descr=<SizeDescr 16>)
+958: setfield_gc(p80, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+962: setfield_gc(p73, p80, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+966: p81 = new_with_vtable(descr=<SizeDescr 24>)
+977: p82 = new_with_vtable(descr=<SizeDescr 32>)
+988: setfield_gc(p82, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+996: p85 = new_array(3, descr=<ArrayS 8>)
+1015: setarrayitem_gc(p85, 0, i49, descr=<ArrayS 8>)
+1019: setarrayitem_gc(p85, 1, i66, descr=<ArrayS 8>)
+1023: setarrayitem_gc(p85, 2, i69, descr=<ArrayS 8>)
+1027: setfield_gc(p82, p85, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1038: setfield_gc(p82, ConstPtr(ptr89), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1042: setfield_gc(p81, p82, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1053: setfield_gc(p81, ConstPtr(ptr90), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1057: p91 = new_with_vtable(descr=<SizeDescr 40>)
+1068: p92 = new_with_vtable(descr=<SizeDescr 32>)
+1079: setfield_gc(p92, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1090: setfield_gc(p92, i22, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1094: p93 = new_with_vtable(descr=<SizeDescr 32>)
+1106: setfield_gc(p93, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1117: setfield_gc(p93, ConstPtr(ptr94), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1121: setfield_gc(p93, p42, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1125: setfield_gc(p92, p93, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1129: p95 = new_with_vtable(descr=<SizeDescr 40>)
+1140: setfield_gc(p95, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1151: p96 = new_with_vtable(descr=<SizeDescr 24>)
+1162: setfield_gc(p96, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1166: setfield_gc(p96, i32, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1170: setfield_gc(p95, p96, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1174: setfield_gc(p95, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1178: setfield_gc(p95, ConstPtr(ptr97), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1189: setfield_gc(p91, ConstPtr(ptr98), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1193: setfield_gc(p91, p92, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1197: setfield_gc(p91, p95, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1201: setfield_gc(p91, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1205: setfield_gc(p72, p73, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1216: setfield_gc(p72, i71, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1227: setfield_gc(p72, p81, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1231: jump(p72, p91, descr=TargetToken(61029280))
+1264: --end of the loop--
[3e4c22b3195a4dc] jit-log-opt-bridge}
[3e4c22b31c5b21c] {jit-backend
[3e4c22b31ce994a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2065d
[3e4c22b31cf4458] jit-backend-dump}
[3e4c22b31cff56f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2066d4 +0  25000000
[3e4c22b31d009e4] jit-backend-dump}
[3e4c22b31d04b7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2069d5 +0  25000000
[3e4c22b31d05abf] jit-backend-dump}
[3e4c22b31d08e48] {jit-backend-addr
bridge out of Guard 0x3f77070 has address 0x7f4a5c2066d0 to 0x7f4a5c2069d0
       gc table: 0x7f4a5c2065d0
    jump target: 0x7f4a5c2066d0
         resops: 0x7f4a5c2066de
       failures: 0x7f4a5c2069d0
            end: 0x7f4a5c206cb3
[3e4c22b31d0b39b] jit-backend-addr}
[3e4c22b31d0e847] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2066ee +0  21030000
[3e4c22b31d0f65d] jit-backend-dump}
[3e4c22b31d12846] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206702 +0  29030000
[3e4c22b31d13595] jit-backend-dump}
[3e4c22b31d1681d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206721 +0  42030000
[3e4c22b31d1753c] jit-backend-dump}
[3e4c22b31d1a57b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206734 +0  4B030000
[3e4c22b31d1b2b2] jit-backend-dump}
[3e4c22b31d1e231] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206748 +0  53030000
[3e4c22b31d1ef56] jit-backend-dump}
[3e4c22b31d21f49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206756 +0  61030000
[3e4c22b31d22c15] jit-backend-dump}
[3e4c22b31d25b56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20676d +0  66030000
[3e4c22b31d2682f] jit-backend-dump}
[3e4c22b31d297bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206789 +0  66030000
[3e4c22b31d2a476] jit-backend-dump}
[3e4c22b31d2d3c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20679f +0  6C030000
[3e4c22b31d2e0a6] jit-backend-dump}
[3e4c22b31d30f8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2067b2 +0  75030000
[3e4c22b31d31c6a] jit-backend-dump}
[3e4c22b31d34b90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2067c3 +0  80030000
[3e4c22b31d3586e] jit-backend-dump}
[3e4c22b31d387a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2067da +0  85030000
[3e4c22b31d394b6] jit-backend-dump}
[3e4c22b31d3c3bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2067ea +0  91030000
[3e4c22b31d3d093] jit-backend-dump}
[3e4c22b31d40012] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2067fd +0  9A030000
[3e4c22b31d40cf0] jit-backend-dump}
[3e4c22b31d43bfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20680a +0  A9030000
[3e4c22b31d448eb] jit-backend-dump}
[3e4c22b31d477ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20681e +0  B1030000
[3e4c22b31d484d7] jit-backend-dump}
[3e4c22b31d4b40a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206828 +0  C3030000
[3e4c22b31d4c0df] jit-backend-dump}
[3e4c22b31d4f0b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206836 +0  D1030000
[3e4c22b31d4fdf4] jit-backend-dump}
[3e4c22b31d52d07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206847 +0  DC030000
[3e4c22b31d539f2] jit-backend-dump}
[3e4c22b31d568f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20685f +0  E0030000
[3e4c22b31d575f0] jit-backend-dump}
[3e4c22b31d5a4f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206876 +0  E5030000
[3e4c22b31d5b1c7] jit-backend-dump}
[3e4c22b31d5e0cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20688d +0  EA030000
[3e4c22b31d5edbf] jit-backend-dump}
[3e4c22b31d61cd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2068a5 +0  EE030000
[3e4c22b31d629d3] jit-backend-dump}
[3e4c22b31d65bd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea433 +0  99C20100
[3e4c22b31d668e3] jit-backend-dump}
[3e4c22b31d6a90a] jit-backend}
[3e4c22b31d6e2e2] {jit-log-opt-bridge
# bridge out of Guard 0x3f77070 with 113 ops
[p0, p1, p2, p3, p4]
+278: guard_class(p0, 16437896, descr=<Guard0x5f20020>) [p0, p1, p2, p3, p4]
+290: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+301: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x59cbbb0>) [p0, p1, p2, p3, p4]
+310: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+310: guard_not_invalidated(descr=<Guard0x59cbbf8>) [p0, p1, p2, p3, p4]
+310: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+314: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+318: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+322: guard_nonnull_class(p9, 16478824, descr=<Guard0x5f20080>) [p0, p1, p2, p3, p4]
+341: guard_nonnull_class(p10, 16470384, descr=<Guard0x5f200e0>) [p0, p1, p2, p3, p4]
+360: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+371: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x59cbc40>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+380: guard_class(p11, 16437896, descr=<Guard0x59cbc88>) [p0, p1, p2, p3, p4]
+394: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+398: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x5f20140>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+417: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+421: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+425: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+429: p22 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+433: guard_class(p22, 16505296, descr=<Guard0x59cbcd0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc1 nc2)')
+445: p24 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+449: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x5f201a0>) [p0, p1, p2, p3, p4]
+467: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x5f20200>) [p0, p1, p2, p3, p4]
+486: i27 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+490: i28 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+494: i29 = int_eq(i27, i28)
+497: guard_true(i29, descr=<Guard0x59cbd18>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+503: p30 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+507: guard_nonnull_class(p30, 16616448, descr=<Guard0x5f20260>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+533: i33 = instance_ptr_eq(p30, ConstPtr(ptr32))
+536: guard_true(i33, descr=<Guard0x59cbd60>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+542: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x5f202c0>) [p0, p1, p2, p3, p4]
+561: i35 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+565: i36 = int_eq(i28, i35)
+568: guard_false(i36, descr=<Guard0x59cbda8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+574: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x5f20320>) [p0, p1, p2, p3, p4]
+594: i39 = int_ge(i35, 0)
+598: guard_true(i39, descr=<Guard0x59cbdf0>) [p0, p1, p2, p3, p4]
+604: i40 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+609: i41 = int_lt(i35, i40)
+612: guard_true(i41, descr=<Guard0x59cbe38>) [p0, p1, p2, p3, p4]
+618: p42 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+623: guard_class(p42, 16622984, descr=<Guard0x59cbe80>) [p0, p1, p2, p3, p4]
+635: p44 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+640: p45 = getarrayitem_gc_r(p44, i35, descr=<ArrayP 8>)
+645: guard_class(p45, 16470384, descr=<Guard0x59cbec8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+659: p47 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+663: guard_nonnull_class(p47, ConstClass(W_Vector), descr=<Guard0x5f20380>) [p0, p1, p2, p3, p4]
+682: p49 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+687: guard_nonnull_class(p49, ConstClass(W_Vector), descr=<Guard0x5f203e0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+705: p51 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+710: guard_nonnull_class(p51, 16470384, descr=<Guard0x5f20440>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+729: p53 = new_with_vtable(descr=<SizeDescr 32>)
+776: p54 = new_with_vtable(descr=<SizeDescr 40>)
+787: setfield_gc(p54, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+798: setfield_gc(p54, ConstPtr(ptr55), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+802: setfield_gc(p54, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+806: setfield_gc(p54, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+810: p56 = new_with_vtable(descr=<SizeDescr 24>)
+821: setfield_gc(p56, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+832: p57 = new_with_vtable(descr=<SizeDescr 24>)
+843: setfield_gc(p57, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+847: setfield_gc(p57, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+851: setfield_gc(p56, p57, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+855: p58 = new_with_vtable(descr=<SizeDescr 48>)
+867: p59 = new_with_vtable(descr=<SizeDescr 32>)
+879: setfield_gc(p59, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+887: p62 = new_array_clear(4, descr=<ArrayP 8>)
+913: setarrayitem_gc(p62, 0, ConstPtr(ptr64), descr=<ArrayP 8>)
+917: setarrayitem_gc(p62, 1, p47, descr=<ArrayP 8>)
+921: setarrayitem_gc(p62, 2, p47, descr=<ArrayP 8>)
+925: setarrayitem_gc(p62, 3, p49, descr=<ArrayP 8>)
+929: setfield_gc(p59, p62, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+940: setfield_gc(p59, ConstPtr(ptr68), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+951: setfield_gc(p58, ConstPtr(ptr69), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+956: setfield_gc(p58, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+961: setfield_gc(p58, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+966: setfield_gc(p58, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+971: setfield_gc(p53, p54, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+975: setfield_gc(p53, p51, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+979: setfield_gc(p53, p56, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+983: setfield_gc(p58, p59, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+988: jump(p53, p58, descr=TargetToken(59469520))
+1024: --end of the loop--
[3e4c22b31dcb4f6] jit-log-opt-bridge}
[3e4c22b3221a647] {jit-backend
[3e4c22b3227489b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206e
[3e4c22b3227ce2e] jit-backend-dump}
[3e4c22b32287b22] {jit-backend-addr
Loop 151 ((if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)) has address 0x7f4a5c206f3d to 0x7f4a5c207120 (bootstrap 0x7f4a5c206eb0)
       gc table: 0x7f4a5c206e00
       function: 0x7f4a5c206eb0
         resops: 0x7f4a5c206f3d
       failures: 0x7f4a5c207120
            end: 0x7f4a5c207346
[3e4c22b3228b1d0] jit-backend-addr}
[3e4c22b3228f6ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206f54 +0  DA010000
[3e4c22b32290a9a] jit-backend-dump}
[3e4c22b32293f76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206f6a +0  E0010000
[3e4c22b32294e3e] jit-backend-dump}
[3e4c22b32298137] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206f7a +0  EC010000
[3e4c22b32298e5e] jit-backend-dump}
[3e4c22b3229bf65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206f8d +0  F5010000
[3e4c22b3229cc46] jit-backend-dump}
[3e4c22b3229fc6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206fa3 +0  FB010000
[3e4c22b322a3e96] jit-backend-dump}
[3e4c22b322a77b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206fb3 +0  07020000
[3e4c22b322a8546] jit-backend-dump}
[3e4c22b322ab582] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206fc7 +0  0F020000
[3e4c22b322ac267] jit-backend-dump}
[3e4c22b322af254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c206fe9 +0  09020000
[3e4c22b322aff5d] jit-backend-dump}
[3e4c22b322b30a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207001 +0  29020000
[3e4c22b322b3d66] jit-backend-dump}
[3e4c22b322b6d2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207014 +0  32020000
[3e4c22b322b7a04] jit-backend-dump}
[3e4c22b322ba95b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207025 +0  3D020000
[3e4c22b322bb61e] jit-backend-dump}
[3e4c22b322be4d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207038 +0  46020000
[3e4c22b322bf18c] jit-backend-dump}
[3e4c22b322c206c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207042 +0  58020000
[3e4c22b322c2d07] jit-backend-dump}
[3e4c22b322c5bb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207056 +0  60020000
[3e4c22b322c684e] jit-backend-dump}
[3e4c22b322c96de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207066 +0  6C020000
[3e4c22b322ca392] jit-backend-dump}
[3e4c22b322cd25c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20707b +0  73020000
[3e4c22b322cdf1c] jit-backend-dump}
[3e4c22b322d0de9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207098 +0  72020000
[3e4c22b322d1a97] jit-backend-dump}
[3e4c22b322d4992] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2070b5 +0  71020000
[3e4c22b322d563f] jit-backend-dump}
[3e4c22b322d91df] jit-backend}
[3e4c22b322dcdcb] {jit-log-opt-loop
# Loop 151 ((if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)) : entry bridge with 52 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
+325: guard_class(p0, 16500016, descr=<Guard0x5f204a0>) [p1, p0]
+344: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+348: guard_nonnull_class(p3, 16470384, descr=<Guard0x5f20500>) [p1, p0]
+373: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+376: guard_false(i6, descr=<Guard0x59cbf10>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+382: guard_class(p1, 16437896, descr=<Guard0x59cbf58>) [p1, p0]
+401: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+405: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x5f20560>) [p1, p0]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+423: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+427: guard_class(p10, 16479200, descr=<Guard0x59cbfa0>) [p1, p0]
+439: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+450: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x5f24020>) [p1, p0]
+459: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+463: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+467: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+471: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+475: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+479: guard_class(p18, 16505296, descr=<Guard0x5f24068>) [p1, p0]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+493: guard_not_invalidated(descr=<Guard0x5f240b0>) [p1, p0]
+493: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+497: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x5f205c0>) [p1, p0]
+517: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x5f20620>) [p1, p0]
+536: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+540: i24 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+544: i25 = int_eq(i23, i24)
+547: guard_false(i25, descr=<Guard0x5f240f8>) [p1, p0]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+553: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x5f20680>) [p1, p0]
+572: i28 = int_ge(i24, 0)
+576: guard_true(i28, descr=<Guard0x5f24140>) [p1, p0]
+582: i29 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+593: i30 = int_lt(i24, i29)
+596: guard_true(i30, descr=<Guard0x5f24188>) [p1, p0]
+602: p31 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+606: guard_class(p31, 16622984, descr=<Guard0x5f241d0>) [p1, p0]
+618: p33 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+622: p34 = getarrayitem_gc_r(p33, i24, descr=<ArrayP 8>)
+627: guard_class(p34, 16470384, descr=<Guard0x5f24218>) [p1, p0]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+639: p36 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+650: guard_nonnull_class(p36, 16470384, descr=<Guard0x5f206e0>) [p1, p0]
+668: p38 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+679: guard_nonnull_class(p38, 16470384, descr=<Guard0x5f20740>) [p1, p0]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+697: jump(p10, p36, p38, p8, p18, p1, p14, p15, p16, p3, p17, p34, p17, p16, p15, p14, p18, p20, i23, descr=TargetToken(61027200))
+800: --end of the loop--
[3e4c22b32313e26] jit-log-opt-loop}
[3e4c22b32aaec09] {jit-backend
[3e4c22b32b1db04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2074d0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C9202000048FF042500DCD0048139700B01000F85000000004C8B71104D85F60F84000000004C8B2DFAFEFFFF4D39EE0F85000000004C8B69184983FD01720841817D00B09700000F850000000041813FA81600000F85000000004D8B77204C8B25E1FEFFFF4D39E60F85000000004D8B77284983FE01720741813EF08C00000F85000000004D8B571841813AC81800000F85000000004D8B4A204C8B05CDFEFFFF4D39C10F85000000004D8B42284D8B4A30498B7A184983F8017207418138B8B500000F85000000004983F9017207418139B09700000F85000000004D8B5010488B35A7FEFFFF4939F20F8500000000813FC81800000F8500000000488B77084883FE017206813E900F00000F85000000004D8B50184983FA01720741813AB09700000F8500000000498B5A084883FB017206813B382300000F85000000004D8B50204983FA01720741813AB09700000F8500000000498B52084883FA017206813AF08C00000F85000000004D8B51084983FA01720741813AF08C00000F8500000000498B40084C8985300100004D8B41104983F8017207418138B09700000F85000000004989D7488B0C25F091F900488D91B8000000483B14251092F9000F87F700000048891425F091F90048C701700B0100488D512048C702B09700004C8972084C896A104C8D6A1849C74500A81600004D8D753049C706F08C000049C74608040000004D8D4E2049C701080E000049C741080400000048898D38010000488B0DB7FDFFFF49894910498959184D8979204D8951284D894E104C8B0DA4FDFFFF4D894E184C8B8D380100004D894110498951184D896520498945104D89752849897D1849897508488BB530010000498971084C898D300100004C89AD3801000049BBC05A1C5C4A7F000041FFE30F1F800000000048C7442408FFFFFF0049BB5873205C4A7F00004C895D204D8D9B98CFFBFF41FFD3E948FDFFFF49BBB874205C4A7F00004C895D204D8D9B38D6FBFF41FFD3E9F4FEFFFFFF3537FCFFFF49BB6873205C4A7F000041534D8D9B98CCFBFF41FFE3FF3523FCFFFF49BB7873205C4A7F000041534D8D9B88CCFBFF41FFE3FF3517FCFFFF49BB8873205C4A7F000041534D8D9B78CCFBFF41FFE3FF3503FCFFFF49BB9873205C4A7F000041534D8D9B68CCFBFF41FFE3FF35EFFBFFFF49BBA873205C4A7F000041534D8D9B58CCFBFF41FFE3FF35E3FBFFFF49BBB873205C4A7F000041534D8D9B48CCFBFF41FFE3FF35CFFBFFFF49BBC873205C4A7F000041534D8D9B38CCFBFF41FFE3FF35BBFBFFFF49BBD873205C4A7F000041534D8D9B28CCFBFF41FFE3FF35A7FBFFFF49BBE873205C4A7F000041534D8D9B18CCFBFF41FFE3FF359BFBFFFF49BBF873205C4A7F000041534D8D9B08CCFBFF41FFE3FF3587FBFFFF49BB0874205C4A7F000041534D8D9BF8CBFBFF41FFE3FF3573FBFFFF49BB1874205C4A7F000041534D8D9BE8CBFBFF41FFE3FF3567FBFFFF49BB2874205C4A7F000041534D8D9BD8CBFBFF41FFE3FF3553FBFFFF49BB3874205C4A7F000041534D8D9BC8CBFBFF41FFE3FF353FFBFFFF49BB4874205C4A7F000041534D8D9BB8CBFBFF41FFE3FF352BFBFFFF49BB5874205C4A7F000041534D8D9BA8CBFBFF41FFE3FF3517FBFFFF49BB6874205C4A7F000041534D8D9B98CBFBFF41FFE3FF3503FBFFFF49BB7874205C4A7F000041534D8D9B88CBFBFF41FFE3FF35EFFAFFFF49BB8874205C4A7F000041534D8D9B78CBFBFF41FFE3FF35DBFAFFFF49BB9874205C4A7F000041534D8D9B68CBFBFF41FFE3FF35C7FAFFFF49BBA874205C4A7F000041534D8D9B58CBFBFF41FFE3
[3e4c22b32b26410] jit-backend-dump}
[3e4c22b32b31c4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2075b4 +0  25000000
[3e4c22b32b3318b] jit-backend-dump}
[3e4c22b32b37355] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207855 +0  25000000
[3e4c22b32b382b2] jit-backend-dump}
[3e4c22b32b3b590] {jit-backend-addr
bridge out of Guard 0x3917e80 has address 0x7f4a5c2075b0 to 0x7f4a5c207850
       gc table: 0x7f4a5c2074d0
    jump target: 0x7f4a5c2075b0
         resops: 0x7f4a5c2075be
       failures: 0x7f4a5c207850
            end: 0x7f4a5c207adf
[3e4c22b32b3d9c4] jit-backend-addr}
[3e4c22b32b40e85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2075ce +0  C1020000
[3e4c22b32b41caa] jit-backend-dump}
[3e4c22b32b44d80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2075db +0  D0020000
[3e4c22b32b45b1f] jit-backend-dump}
[3e4c22b32b48c4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2075eb +0  DC020000
[3e4c22b32b49944] jit-backend-dump}
[3e4c22b32b4c996] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207603 +0  E0020000
[3e4c22b32b4d6a8] jit-backend-dump}
[3e4c22b32b50605] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207610 +0  EF020000
[3e4c22b32b51305] jit-backend-dump}
[3e4c22b32b541b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207624 +0  F7020000
[3e4c22b32b54eae] jit-backend-dump}
[3e4c22b32b57f1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20763b +0  18030000
[3e4c22b32b58c1e] jit-backend-dump}
[3e4c22b32b5bc86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20764c +0  23030000
[3e4c22b32b5c992] jit-backend-dump}
[3e4c22b32b5f872] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207660 +0  2B030000
[3e4c22b32b6057b] jit-backend-dump}
[3e4c22b32b633da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20767f +0  28030000
[3e4c22b32b640da] jit-backend-dump}
[3e4c22b32b66f4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207692 +0  31030000
[3e4c22b32b67c5b] jit-backend-dump}
[3e4c22b32b6ab9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2076a6 +0  39030000
[3e4c22b32b6b8a6] jit-backend-dump}
[3e4c22b32b6e739] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2076b2 +0  49030000
[3e4c22b32b6f43f] jit-backend-dump}
[3e4c22b32b72292] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2076c8 +0  4F030000
[3e4c22b32b72f92] jit-backend-dump}
[3e4c22b32b75dfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2076df +0  54030000
[3e4c22b32b76b04] jit-backend-dump}
[3e4c22b32b7995d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2076f5 +0  5A030000
[3e4c22b32b7a679] jit-backend-dump}
[3e4c22b32b7d4e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20770c +0  5F030000
[3e4c22b32b7e1ea] jit-backend-dump}
[3e4c22b32b81065] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207722 +0  65030000
[3e4c22b32b81d6b] jit-backend-dump}
[3e4c22b32b84bbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207739 +0  6A030000
[3e4c22b32b858ac] jit-backend-dump}
[3e4c22b32b88708] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20775b +0  64030000
[3e4c22b32b89402] jit-backend-dump}
[3e4c22b32b8c4de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cc39c +0  10B20300
[3e4c22b32b8d1e1] jit-backend-dump}
[3e4c22b32b912cb] jit-backend}
[3e4c22b32b94d82] {jit-log-opt-bridge
# bridge out of Guard 0x3917e80 with 73 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x5f20800>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x5f242a8>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x5f242f0>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16470384, descr=<Guard0x5f20860>) [p0, p1]
+311: guard_class(p0, 16437352, descr=<Guard0x5f24338>) [p0, p1]
+324: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+335: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x5f24380>) [p0, p1]
+344: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+344: guard_not_invalidated(descr=<Guard0x5f243c8>) [p0, p1]
+344: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+348: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x5f208c0>) [p0, p1]
+367: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+371: guard_class(p14, 16437896, descr=<Guard0x5f24410>) [p0, p1]
+384: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+395: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x5f24458>) [p0, p1]
+404: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+404: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+408: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+412: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (cons AppRand1 AppRand2)')
+416: guard_nonnull_class(p19, 16478072, descr=<Guard0x5f20920>) [p0, p1]
+435: guard_nonnull_class(p20, 16470384, descr=<Guard0x5f20980>) [p0, p1]
+454: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+465: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x5f244a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+474: guard_class(p21, 16437896, descr=<Guard0x5f244e8>) [p0, p1]
+486: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+490: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x5f209e0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+508: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+512: guard_nonnull_class(p29, 16470384, descr=<Guard0x5f20a40>) [p0, p1]
+531: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+535: guard_nonnull_class(p31, ConstClass(W_Symbol), descr=<Guard0x5f20aa0>) [p0, p1]
+553: p33 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+557: guard_nonnull_class(p33, 16470384, descr=<Guard0x5f20b00>) [p0, p1]
+576: p35 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+580: guard_nonnull_class(p35, ConstClass(W_Vector), descr=<Guard0x5f20b60>) [p0, p1]
+598: p37 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+602: guard_nonnull_class(p37, ConstClass(W_Vector), descr=<Guard0x5f20bc0>) [p0, p1]
+621: p39 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+625: p40 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+636: guard_nonnull_class(p40, 16470384, descr=<Guard0x5f20c20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+655: p42 = new_with_vtable(descr=<SizeDescr 32>)
+702: p43 = new_with_vtable(descr=<SizeDescr 24>)
+713: setfield_gc(p43, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+717: setfield_gc(p43, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+721: p44 = new_with_vtable(descr=<SizeDescr 48>)
+733: p45 = new_with_vtable(descr=<SizeDescr 32>)
+744: setfield_gc(p45, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+752: p48 = new_array_clear(4, descr=<ArrayP 8>)
+785: setarrayitem_gc(p48, 0, ConstPtr(ptr50), descr=<ArrayP 8>)
+789: setarrayitem_gc(p48, 1, p31, descr=<ArrayP 8>)
+793: setarrayitem_gc(p48, 2, p35, descr=<ArrayP 8>)
+797: setarrayitem_gc(p48, 3, p37, descr=<ArrayP 8>)
+801: setfield_gc(p45, p48, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+812: setfield_gc(p45, ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+816: setfield_gc(p42, p40, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+827: setfield_gc(p42, p43, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+831: setfield_gc(p44, ConstPtr(ptr55), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+835: setfield_gc(p44, p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+839: setfield_gc(p44, p45, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+843: setfield_gc(p44, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+847: setfield_gc(p44, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+851: setfield_gc(p42, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+862: jump(p42, p44, descr=TargetToken(59469520))
+896: --end of the loop--
[3e4c22b32bd0ca7] jit-log-opt-bridge}
[3e4c22b32ee0f29] {jit-backend
[3e4c22b32f4732a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207c
[3e4c22b32f4ef0f] jit-backend-dump}
[3e4c22b32f59975] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207cf4 +0  2A000000
[3e4c22b32f5ae11] jit-backend-dump}
[3e4c22b32f5eb48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207ef5 +0  2A000000
[3e4c22b32f5f9f4] jit-backend-dump}
[3e4c22b32f62c23] {jit-backend-addr
bridge out of Guard 0x476f730 has address 0x7f4a5c207cf0 to 0x7f4a5c207ef0
       gc table: 0x7f4a5c207c40
    jump target: 0x7f4a5c207cf0
         resops: 0x7f4a5c207cfe
       failures: 0x7f4a5c207ef0
            end: 0x7f4a5c208146
[3e4c22b32f64f47] jit-backend-addr}
[3e4c22b32f6819b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207d0e +0  04020000
[3e4c22b32f68f27] jit-backend-dump}
[3e4c22b32f6bfde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207d25 +0  09020000
[3e4c22b32f6ccd8] jit-backend-dump}
[3e4c22b32f6fd80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207d31 +0  35020000
[3e4c22b32f70a73] jit-backend-dump}
[3e4c22b32f73aad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207d47 +0  3B020000
[3e4c22b32f74748] jit-backend-dump}
[3e4c22b32f776c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207d5b +0  43020000
[3e4c22b32f78368] jit-backend-dump}
[3e4c22b32f7b318] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207d72 +0  48020000
[3e4c22b32f7bfc2] jit-backend-dump}
[3e4c22b32f7ef59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207d7f +0  57020000
[3e4c22b32f7fc04] jit-backend-dump}
[3e4c22b32f82b70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207d96 +0  5C020000
[3e4c22b32f83876] jit-backend-dump}
[3e4c22b32f86814] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207da7 +0  67020000
[3e4c22b32f874a2] jit-backend-dump}
[3e4c22b32f8a492] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207db3 +0  77020000
[3e4c22b32f8b11e] jit-backend-dump}
[3e4c22b32f8e078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207df4 +0  52020000
[3e4c22b32f8ed16] jit-backend-dump}
[3e4c22b32f91c58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207dfd +0  65020000
[3e4c22b32f928ed] jit-backend-dump}
[3e4c22b32f9582f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207e0d +0  71020000
[3e4c22b32f964c7] jit-backend-dump}
[3e4c22b32f993f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207e19 +0  81020000
[3e4c22b32f9a0a6] jit-backend-dump}
[3e4c22b32f9d03e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207e31 +0  85020000
[3e4c22b32f9dd5f] jit-backend-dump}
[3e4c22b32fa0cb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207e73 +0  5F020000
[3e4c22b32fa193c] jit-backend-dump}
[3e4c22b32fa4884] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207e7f +0  6F020000
[3e4c22b32fa5503] jit-backend-dump}
[3e4c22b32fa8439] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207e88 +0  82020000
[3e4c22b32fa90b5] jit-backend-dump}
[3e4c22b32fabff1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c207e91 +0  95020000
[3e4c22b32facc6d] jit-backend-dump}
[3e4c22b32fafe56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f47d8 +0  14350100
[3e4c22b32fb0b1f] jit-backend-dump}
[3e4c22b32fb48d3] jit-backend}
[3e4c22b32fb8306] {jit-log-opt-bridge
# bridge out of Guard 0x476f730 with 86 ops
[p0, p1]
+198: guard_class(p1, 16435920, descr=<Guard0x5f20c80>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+214: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x5f20ce0>) [p0, p1]
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+233: guard_not_invalidated(descr=<Guard0x5f24578>) [p0, p1]
+233: guard_class(p0, 16503536, descr=<Guard0x5f245c0>) [p0, p1]
+245: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+249: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+253: guard_class(p7, 16478448, descr=<Guard0x5f24608>) [p0, p1]
+267: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+278: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x5f24650>) [p0, p1]
+287: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+291: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x5f20d40>) [p0, p1]
+310: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+314: i14 = int_lt(i6, i13)
+317: guard_false(i14, descr=<Guard0x5f24698>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))))')
debug_merge_point(0, 0, '(+ m5210 1)')
+323: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+327: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x5f20da0>) [p0, p1]
+346: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+350: i19 = int_add_ovf(i17, 1)
+357: guard_no_overflow(descr=<Guard0x5f246e0>) [p0, p1]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
+363: i20 = int_add_ovf(i13, i6)
+369: guard_no_overflow(descr=<Guard0x5f24728>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))')
debug_merge_point(0, 0, '(- (quotient AppRand38 2) AppRand39)')
+375: i22 = int_rshift(i19, 1)
+381: i24 = int_lshift(i22, 1)
+387: i26 = int_xor(i19, 2)
+398: i28 = int_rshift(i26, 63)
+402: i29 = int_ne(i24, i19)
+425: i30 = int_and(i28, i29)
+428: i31 = int_add(i22, i30)
+431: i32 = int_sub_ovf(i31, i20)
+434: guard_no_overflow(descr=<Guard0x5f24770>) [p0, p1]
debug_merge_point(0, 0, '(let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))')
debug_merge_point(0, 0, '(max nc25224 AppRand40)')
+440: i33 = int_lt(i6, i32)
+443: guard_false(i33, descr=<Guard0x5f247b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))')
debug_merge_point(0, 0, '(lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))')
+449: p34 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+453: guard_class(p34, 16505296, descr=<Guard0x5f24800>) [p0, p1]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
debug_merge_point(0, 0, '(let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))')
debug_merge_point(0, 0, '(- m5210 AppRand47)')
+465: i36 = int_sub_ovf(i17, i20)
+471: guard_no_overflow(descr=<Guard0x5f24848>) [p0, p1]
debug_merge_point(0, 0, '(loop35236 lst5222 (quotient AppRand48 2))')
+477: p37 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+481: guard_nonnull_class(p37, 16470384, descr=<Guard0x5f20e00>) [p0, p1]
+501: i40 = int_eq(i36, -9223372036854775808)
+501: i42 = int_rshift(i36, 1)
+507: i44 = int_lshift(i42, 1)
+513: i46 = int_xor(i36, 2)
+524: i48 = int_rshift(i46, 63)
+528: i49 = int_ne(i44, i36)
+552: i50 = int_and(i48, i49)
+555: i51 = int_add(i42, i50)
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
debug_merge_point(0, 0, '(< nc35240 start)')
+558: i52 = int_lt(i51, i6)
+561: guard_false(i52, descr=<Guard0x5f24890>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+567: i53 = int_add_ovf(i6, i51)
+573: guard_no_overflow(descr=<Guard0x5f248d8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+579: i54 = int_add_ovf(i13, i53)
+582: guard_no_overflow(descr=<Guard0x5f24920>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+588: i55 = int_sub_ovf(i17, i54)
+591: guard_no_overflow(descr=<Guard0x5f24968>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+597: i57 = int_sub(i51, 1)
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+601: jump(p34, i6, p11, i6, p15, p7, i57, i13, i51, i55, p37, p1, p3, p11, p15, p34, descr=TargetToken(61027360))
+688: --end of the loop--
[3e4c22b32ff7c74] jit-log-opt-bridge}
[3e4c22b334e3231] {jit-backend
[3e4c22b33563adb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b3356da2d] jit-backend-dump}
[3e4c22b33578d06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208454 +0  25000000
[3e4c22b3357a229] jit-backend-dump}
[3e4c22b3357e12a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208755 +0  25000000
[3e4c22b3357efd9] jit-backend-dump}
[3e4c22b33582331] {jit-backend-addr
bridge out of Guard 0x3f77cd0 has address 0x7f4a5c208450 to 0x7f4a5c208750
       gc table: 0x7f4a5c208330
    jump target: 0x7f4a5c208450
         resops: 0x7f4a5c20845e
       failures: 0x7f4a5c208750
            end: 0x7f4a5c208aa3
[3e4c22b33584750] jit-backend-addr}
[3e4c22b33587be6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20846e +0  21030000
[3e4c22b33588a42] jit-backend-dump}
[3e4c22b3358be52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20847b +0  30030000
[3e4c22b3358cb76] jit-backend-dump}
[3e4c22b3358fcc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20848b +0  3C030000
[3e4c22b335909fa] jit-backend-dump}
[3e4c22b3359394b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2084a2 +0  41030000
[3e4c22b33594642] jit-backend-dump}
[3e4c22b33597584] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2084b0 +0  4F030000
[3e4c22b33598262] jit-backend-dump}
[3e4c22b3359b1aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2084c4 +0  57030000
[3e4c22b3359beb9] jit-backend-dump}
[3e4c22b3359efed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2084e3 +0  70030000
[3e4c22b3359fce7] jit-backend-dump}
[3e4c22b335a2ca3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2084f7 +0  78030000
[3e4c22b335a39a6] jit-backend-dump}
[3e4c22b335a689e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20850b +0  80030000
[3e4c22b335a75ab] jit-backend-dump}
[3e4c22b335aa4e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208518 +0  8F030000
[3e4c22b335ab1fc] jit-backend-dump}
[3e4c22b335ae0fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20852e +0  95030000
[3e4c22b335aee09] jit-backend-dump}
[3e4c22b335b1ce3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20854a +0  95030000
[3e4c22b335b29d7] jit-backend-dump}
[3e4c22b335b58e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208560 +0  9B030000
[3e4c22b335b65e7] jit-backend-dump}
[3e4c22b335b94e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208572 +0  A5030000
[3e4c22b335ba1d3] jit-backend-dump}
[3e4c22b335bd0b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208583 +0  B0030000
[3e4c22b335bdda7] jit-backend-dump}
[3e4c22b33ac11ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20859b +0  B4030000
[3e4c22b33ac2a5b] jit-backend-dump}
[3e4c22b33ac970a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2085a4 +0  C7030000
[3e4c22b33aca5fd] jit-backend-dump}
[3e4c22b33acd94e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2085b6 +0  D1030000
[3e4c22b33ace6cc] jit-backend-dump}
[3e4c22b33ad1663] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2085c3 +0  E0030000
[3e4c22b33ad23c8] jit-backend-dump}
[3e4c22b33ad52fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2085d6 +0  E9030000
[3e4c22b33ad605c] jit-backend-dump}
[3e4c22b33ad8f2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2085e0 +0  FB030000
[3e4c22b33ad9c73] jit-backend-dump}
[3e4c22b33adcb19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2085ed +0  0A040000
[3e4c22b33add884] jit-backend-dump}
[3e4c22b33ae06e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2085fd +0  16040000
[3e4c22b33ae1426] jit-backend-dump}
[3e4c22b33ae4286] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208613 +0  1C040000
[3e4c22b33ae4ff7] jit-backend-dump}
[3e4c22b33ae7ea0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20862b +0  20040000
[3e4c22b33ae8be3] jit-backend-dump}
[3e4c22b33aeba39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208641 +0  26040000
[3e4c22b33aec79b] jit-backend-dump}
[3e4c22b33aef5e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208657 +0  2C040000
[3e4c22b33af0344] jit-backend-dump}
[3e4c22b33af3573] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ebfaf +0  9DC40100
[3e4c22b33af42e7] jit-backend-dump}
[3e4c22b33af81c3] jit-backend}
[3e4c22b33afbd9a] {jit-log-opt-bridge
# bridge out of Guard 0x3f77cd0 with 115 ops
[p0, p1]
+310: guard_class(p1, 16500016, descr=<Guard0x5f21040>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+326: guard_nonnull(p3, descr=<Guard0x5f24e30>) [p0, p1]
+342: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+345: guard_true(i5, descr=<Guard0x5f24de8>) [p0, p1]
debug_merge_point(0, 0, 'lst')
+351: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+355: guard_nonnull_class(p6, 16616448, descr=<Guard0x5f213a0>) [p0, p1]
+374: guard_class(p0, 16437896, descr=<Guard0x5f24da0>) [p0, p1]
+388: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+399: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x5f24d58>) [p0, p1]
+408: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+408: guard_not_invalidated(descr=<Guard0x5f24d10>) [p0, p1]
+408: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+412: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+416: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)')
+420: guard_nonnull_class(p12, 16478824, descr=<Guard0x5f21340>) [p0, p1]
+439: guard_nonnull_class(p13, 16470384, descr=<Guard0x5f212e0>) [p0, p1]
+459: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+470: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x5f24cc8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+479: guard_class(p14, 16435920, descr=<Guard0x5f24c80>) [p0, p1]
+492: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+496: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x5f21280>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+514: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+518: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+522: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+526: p25 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+530: guard_class(p25, 16505296, descr=<Guard0x5f24c38>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+542: p27 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+546: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x5f21220>) [p0, p1]
+564: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x5f211c0>) [p0, p1]
+582: i30 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+586: i31 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+590: i32 = int_eq(i30, i31)
+593: guard_true(i32, descr=<Guard0x5f24bf0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+599: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+604: guard_nonnull_class(p33, 16616448, descr=<Guard0x5f21160>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+623: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+626: guard_true(i36, descr=<Guard0x5f24ba8>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+632: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x5f21100>) [p0, p1]
+650: i38 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+654: i39 = int_eq(i31, i38)
+657: guard_false(i39, descr=<Guard0x5f24b60>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+663: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x5f210a0>) [p0, p1]
+682: i42 = int_ge(i38, 0)
+686: guard_true(i42, descr=<Guard0x5f24b18>) [p0, p1]
+692: i43 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+696: i44 = int_lt(i38, i43)
+699: guard_true(i44, descr=<Guard0x5f24ad0>) [p0, p1]
+705: p45 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+709: guard_class(p45, 16622984, descr=<Guard0x5f24a88>) [p0, p1]
+721: p47 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+725: p48 = getarrayitem_gc_r(p47, i38, descr=<ArrayP 8>)
+730: guard_class(p48, 16470384, descr=<Guard0x5f24a40>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+743: p50 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+748: guard_nonnull_class(p50, ConstClass(W_Symbol), descr=<Guard0x5f20fe0>) [p0, p1]
+767: p52 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+771: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x5f20f80>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+789: p54 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+793: guard_nonnull_class(p54, 16616448, descr=<Guard0x5f20f20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+811: p56 = new_with_vtable(descr=<SizeDescr 32>)
+858: p57 = new_with_vtable(descr=<SizeDescr 40>)
+869: setfield_gc(p57, p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+880: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+884: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+888: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+892: p59 = new_with_vtable(descr=<SizeDescr 48>)
+904: p60 = new_with_vtable(descr=<SizeDescr 32>)
+916: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+924: p63 = new_array_clear(4, descr=<ArrayP 8>)
+950: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+954: setarrayitem_gc(p63, 1, p50, descr=<ArrayP 8>)
+958: setarrayitem_gc(p63, 2, p50, descr=<ArrayP 8>)
+962: setarrayitem_gc(p63, 3, p52, descr=<ArrayP 8>)
+966: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+977: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+981: setfield_gc(p56, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+985: setfield_gc(p56, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+996: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1001: setfield_gc(p59, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1006: setfield_gc(p59, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1011: setfield_gc(p59, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1016: setfield_gc(p56, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1020: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1025: jump(p56, p59, descr=TargetToken(59469520))
+1056: --end of the loop--
[3e4c22b33b48b40] jit-log-opt-bridge}
[3e4c22b33fd0fae] {jit-backend
[3e4c22b340440e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208c
[3e4c22b3404bea2] jit-backend-dump}
[3e4c22b3405a1c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208ca4 +0  28000000
[3e4c22b3405bad8] jit-backend-dump}
[3e4c22b3405fc7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208f15 +0  28000000
[3e4c22b34060b2c] jit-backend-dump}
[3e4c22b34063e10] {jit-backend-addr
bridge out of Guard 0x42c3f58 has address 0x7f4a5c208ca0 to 0x7f4a5c208f10
       gc table: 0x7f4a5c208c00
    jump target: 0x7f4a5c208ca0
         resops: 0x7f4a5c208cae
       failures: 0x7f4a5c208f10
            end: 0x7f4a5c20914b
[3e4c22b34066351] jit-backend-addr}
[3e4c22b34069987] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208cbe +0  91020000
[3e4c22b3406a760] jit-backend-dump}
[3e4c22b3406d9ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208cd2 +0  99020000
[3e4c22b3406e6c0] jit-backend-dump}
[3e4c22b34071a4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208cf1 +0  B2020000
[3e4c22b34072755] jit-backend-dump}
[3e4c22b340757b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208d04 +0  BB020000
[3e4c22b340764cc] jit-backend-dump}
[3e4c22b34079420] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208d18 +0  C3020000
[3e4c22b3407a0f2] jit-backend-dump}
[3e4c22b3407cff6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208d26 +0  D1020000
[3e4c22b3407dcb0] jit-backend-dump}
[3e4c22b34080c8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208d3d +0  D6020000
[3e4c22b34081941] jit-backend-dump}
[3e4c22b3408487a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208d5d +0  D2020000
[3e4c22b34085533] jit-backend-dump}
[3e4c22b34088441] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208d73 +0  D8020000
[3e4c22b340890eb] jit-backend-dump}
[3e4c22b3408bffc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208d85 +0  E2020000
[3e4c22b3408ccbc] jit-backend-dump}
[3e4c22b3408fbdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208da4 +0  DF020000
[3e4c22b340908b1] jit-backend-dump}
[3e4c22b340937fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208db8 +0  E7020000
[3e4c22b340944bc] jit-backend-dump}
[3e4c22b340973c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208dc2 +0  F9020000
[3e4c22b34098092] jit-backend-dump}
[3e4c22b3409af97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208dd7 +0  00030000
[3e4c22b3409bc38] jit-backend-dump}
[3e4c22b3409eb33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208dea +0  09030000
[3e4c22b3409f7e4] jit-backend-dump}
[3e4c22b340a270d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208e08 +0  07030000
[3e4c22b340a33df] jit-backend-dump}
[3e4c22b340a62da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c208e27 +0  04030000
[3e4c22b340a6ffc] jit-backend-dump}
[3e4c22b340aa167] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1284 +0  187A0100
[3e4c22b340aae27] jit-backend-dump}
[3e4c22b340aeb91] jit-backend}
[3e4c22b340b26c3] {jit-log-opt-bridge
# bridge out of Guard 0x42c3f58 with 59 ops
[p0, p1, p2, p3, p4]
+182: guard_class(p0, 16437896, descr=<Guard0x5f21400>) [p0, p1, p2, p3, p4]
+194: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+205: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x5f24e78>) [p0, p1, p2, p3, p4]
+214: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+214: guard_not_invalidated(descr=<Guard0x5f24ec0>) [p0, p1, p2, p3, p4]
+214: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+218: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+222: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (cons AppRand15 AppRand16)')
+226: guard_nonnull_class(p9, 16479200, descr=<Guard0x5f21460>) [p0, p1, p2, p3, p4]
+245: guard_nonnull_class(p10, 16470384, descr=<Guard0x5f214c0>) [p0, p1, p2, p3, p4]
+264: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+275: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x5f24f08>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+284: guard_class(p11, 16437896, descr=<Guard0x5f24f50>) [p0, p1, p2, p3, p4]
+298: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+302: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x5f21520>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+321: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+325: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+329: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+333: p22 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+337: p23 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+341: guard_class(p23, 16505296, descr=<Guard0x5f24f98>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+353: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+357: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x5f21580>) [p0, p1, p2, p3, p4]
+375: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x5f215e0>) [p0, p1, p2, p3, p4]
+393: i28 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+404: i29 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+415: i30 = int_eq(i28, i29)
+418: guard_false(i30, descr=<Guard0x5f24fe0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+424: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x5f21640>) [p0, p1, p2, p3, p4]
+444: i33 = int_ge(i29, 0)
+448: guard_true(i33, descr=<Guard0x5f25028>) [p0, p1, p2, p3, p4]
+454: i34 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+466: i35 = int_lt(i29, i34)
+469: guard_true(i35, descr=<Guard0x5f25070>) [p0, p1, p2, p3, p4]
+475: p36 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+480: guard_class(p36, 16622984, descr=<Guard0x5f250b8>) [p0, p1, p2, p3, p4]
+494: p38 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+499: p39 = getarrayitem_gc_r(p38, i29, descr=<ArrayP 8>)
+511: guard_class(p39, 16470384, descr=<Guard0x5f25100>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+524: p41 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+535: guard_nonnull_class(p41, 16470384, descr=<Guard0x5f216a0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+555: p43 = new_with_vtable(descr=<SizeDescr 24>)
+603: p44 = new_with_vtable(descr=<SizeDescr 24>)
+614: setfield_gc(p44, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+618: setfield_gc(p44, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+629: setfield_gc(p43, p44, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+633: setfield_gc(p43, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+644: jump(p9, p41, p43, p17, p23, p11, p19, p20, p21, p10, p22, p39, p22, p21, p20, p19, p23, p25, i28, descr=TargetToken(61027200))
+784: --end of the loop--
[3e4c22b340ed203] jit-log-opt-bridge}
[3e4c22b34656bd3] {jit-backend
[3e4c22b346e6fd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b346f1d61] jit-backend-dump}
[3e4c22b346fd7a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2094d4 +0  25000000
[3e4c22b346fecce] jit-backend-dump}
[3e4c22b34702f6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209865 +0  25000000
[3e4c22b34703e73] jit-backend-dump}
[3e4c22b34707258] {jit-backend-addr
bridge out of Guard 0x520f100 has address 0x7f4a5c2094d0 to 0x7f4a5c209860
       gc table: 0x7f4a5c209390
    jump target: 0x7f4a5c2094d0
         resops: 0x7f4a5c2094de
       failures: 0x7f4a5c209860
            end: 0x7f4a5c209c3f
[3e4c22b34709756] jit-backend-addr}
[3e4c22b3470cced] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2094ee +0  B1030000
[3e4c22b3470dba2] jit-backend-dump}
[3e4c22b34710d48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209505 +0  B6030000
[3e4c22b34711ab9] jit-backend-dump}
[3e4c22b34714a8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20951c +0  BB030000
[3e4c22b347157e6] jit-backend-dump}
[3e4c22b34718838] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209528 +0  CB030000
[3e4c22b347195c8] jit-backend-dump}
[3e4c22b3471c58a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20953c +0  D3030000
[3e4c22b3471d2f2] jit-backend-dump}
[3e4c22b3472060f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20955c +0  EB030000
[3e4c22b3472135c] jit-backend-dump}
[3e4c22b347244e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209570 +0  F3030000
[3e4c22b3472522f] jit-backend-dump}
[3e4c22b34728253] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209585 +0  FA030000
[3e4c22b34728faf] jit-backend-dump}
[3e4c22b3472bfdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209592 +0  09040000
[3e4c22b3472cd16] jit-backend-dump}
[3e4c22b3472fcdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2095a9 +0  0E040000
[3e4c22b34730a12] jit-backend-dump}
[3e4c22b3473397c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2095c9 +0  0A040000
[3e4c22b347346f6] jit-backend-dump}
[3e4c22b34737641] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2095e0 +0  0F040000
[3e4c22b34738384] jit-backend-dump}
[3e4c22b3473b2d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2095f2 +0  19040000
[3e4c22b3473c01f] jit-backend-dump}
[3e4c22b3473efdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209603 +0  24040000
[3e4c22b3473fd36] jit-backend-dump}
[3e4c22b34742d57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209616 +0  2D040000
[3e4c22b34743ad5] jit-backend-dump}
[3e4c22b34746a94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209620 +0  3F040000
[3e4c22b347477e3] jit-backend-dump}
[3e4c22b3474a72e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20962d +0  4E040000
[3e4c22b3474b481] jit-backend-dump}
[3e4c22b3474e3b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20963d +0  5A040000
[3e4c22b3474f109] jit-backend-dump}
[3e4c22b34752078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209653 +0  60040000
[3e4c22b34752df3] jit-backend-dump}
[3e4c22b34755d28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209671 +0  5E040000
[3e4c22b34756a78] jit-backend-dump}
[3e4c22b347599db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209688 +0  63040000
[3e4c22b3475a734] jit-backend-dump}
[3e4c22b3475d694] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20969a +0  6D040000
[3e4c22b3475e3ce] jit-backend-dump}
[3e4c22b34761310] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2096a7 +0  7C040000
[3e4c22b34762047] jit-backend-dump}
[3e4c22b34764f64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2096b1 +0  8E040000
[3e4c22b34765ca1] jit-backend-dump}
[3e4c22b34768c07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2096ba +0  A1040000
[3e4c22b3476995d] jit-backend-dump}
[3e4c22b3476c8c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2096cd +0  AA040000
[3e4c22b3476d600] jit-backend-dump}
[3e4c22b34770570] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2096e4 +0  AF040000
[3e4c22b347712a4] jit-backend-dump}
[3e4c22b347741ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2096ed +0  C2040000
[3e4c22b34774f23] jit-backend-dump}
[3e4c22b34777e46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209704 +0  C7040000
[3e4c22b34778b7a] jit-backend-dump}
[3e4c22b3477ba97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20971b +0  CC040000
[3e4c22b3477c7d4] jit-backend-dump}
[3e4c22b3477f71c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209732 +0  D1040000
[3e4c22b34780450] jit-backend-dump}
[3e4c22b347833d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209749 +0  D6040000
[3e4c22b3478412a] jit-backend-dump}
[3e4c22b34787310] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffea4 +0  28960000
[3e4c22b3478808d] jit-backend-dump}
[3e4c22b3478bf73] jit-backend}
[3e4c22b3478fb37] {jit-log-opt-bridge
# bridge out of Guard 0x520f100 with 127 ops
[p0, p1]
+342: guard_class(p1, 16500016, descr=<Guard0x5f21700>) [p0, p1]
+354: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+358: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x5f21760>) [p0, p1]
+377: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+381: guard_nonnull_class(p5, 16616448, descr=<Guard0x5f217c0>) [p0, p1]
+400: guard_class(p0, 16437896, descr=<Guard0x5f251d8>) [p0, p1]
+412: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+423: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x5f25220>) [p0, p1]
+432: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+432: guard_not_invalidated(descr=<Guard0x5f25268>) [p0, p1]
+432: p11 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+436: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+440: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+444: guard_nonnull_class(p11, 16478824, descr=<Guard0x5f21820>) [p0, p1]
+464: guard_nonnull_class(p12, 16470384, descr=<Guard0x5f21880>) [p0, p1]
+484: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+496: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x5f252b0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+505: guard_class(p13, 16437896, descr=<Guard0x5f252f8>) [p0, p1]
+518: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+522: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x5f218e0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+541: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+546: p22 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+551: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+556: p24 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+561: guard_class(p24, 16505296, descr=<Guard0x5f25340>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+573: p26 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+578: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x5f21940>) [p0, p1]
+596: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x5f219a0>) [p0, p1]
+614: i29 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+618: i30 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+622: i31 = int_eq(i29, i30)
+625: guard_false(i31, descr=<Guard0x5f25388>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+631: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x5f21a00>) [p0, p1]
+650: i34 = int_ge(i30, 0)
+654: guard_true(i34, descr=<Guard0x5f253d0>) [p0, p1]
+660: i35 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+664: i36 = int_lt(i30, i35)
+667: guard_true(i36, descr=<Guard0x5f25418>) [p0, p1]
+673: p37 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+677: guard_class(p37, 16622984, descr=<Guard0x5f25460>) [p0, p1]
+689: p39 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+693: p40 = getarrayitem_gc_r(p39, i30, descr=<ArrayP 8>)
+698: guard_class(p40, 16470384, descr=<Guard0x5f254a8>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+711: p42 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+722: guard_nonnull_class(p42, 16616448, descr=<Guard0x5f21a60>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+755: i45 = instance_ptr_eq(p42, ConstPtr(ptr44))
+758: guard_true(i45, descr=<Guard0x5f254f0>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+764: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x5f21ac0>) [p0, p1]
+782: i47 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+786: i48 = int_eq(i30, i47)
+789: guard_false(i48, descr=<Guard0x5f25538>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+795: i50 = int_ge(i47, 0)
+799: guard_true(i50, descr=<Guard0x5f25580>) [p0, p1]
+805: i51 = int_lt(i47, i35)
+808: guard_true(i51, descr=<Guard0x5f255c8>) [p0, p1]
+814: p52 = getarrayitem_gc_r(p39, i47, descr=<ArrayP 8>)
+819: guard_class(p52, 16470384, descr=<Guard0x5f25610>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+833: p54 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+837: guard_nonnull_class(p54, 16616448, descr=<Guard0x5f21b20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+856: i57 = instance_ptr_eq(p54, ConstPtr(ptr56))
+859: guard_true(i57, descr=<Guard0x5f25658>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+865: p58 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+869: guard_nonnull_class(p58, ConstClass(W_Symbol), descr=<Guard0x5f21b80>) [p0, p1]
+888: p60 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+892: guard_nonnull_class(p60, ConstClass(W_Vector), descr=<Guard0x5f21be0>) [p0, p1]
+911: p62 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+916: guard_nonnull_class(p62, ConstClass(W_Vector), descr=<Guard0x5f21c40>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+934: p64 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+939: guard_nonnull_class(p64, 16616448, descr=<Guard0x5f21ca0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+957: p66 = new_with_vtable(descr=<SizeDescr 32>)
+1004: p67 = new_with_vtable(descr=<SizeDescr 40>)
+1015: setfield_gc(p67, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1026: setfield_gc(p67, ConstPtr(ptr68), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1030: setfield_gc(p67, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1034: setfield_gc(p67, p40, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1038: p69 = new_with_vtable(descr=<SizeDescr 24>)
+1049: setfield_gc(p69, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1053: setfield_gc(p69, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1057: p70 = new_with_vtable(descr=<SizeDescr 48>)
+1068: p71 = new_with_vtable(descr=<SizeDescr 32>)
+1079: setfield_gc(p71, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1087: p74 = new_array_clear(4, descr=<ArrayP 8>)
+1114: setarrayitem_gc(p74, 0, ConstPtr(ptr76), descr=<ArrayP 8>)
+1118: setarrayitem_gc(p74, 1, p58, descr=<ArrayP 8>)
+1122: setarrayitem_gc(p74, 2, p60, descr=<ArrayP 8>)
+1126: setarrayitem_gc(p74, 3, p62, descr=<ArrayP 8>)
+1130: setfield_gc(p71, p74, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1141: setfield_gc(p71, ConstPtr(ptr80), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1145: setfield_gc(p66, p64, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1149: setfield_gc(p66, p69, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1160: setfield_gc(p70, ConstPtr(ptr81), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1164: setfield_gc(p70, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1168: setfield_gc(p70, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1179: setfield_gc(p70, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1190: setfield_gc(p66, p67, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1194: setfield_gc(p70, p71, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1198: jump(p66, p70, descr=TargetToken(59469520))
+1232: --end of the loop--
[3e4c22b3480023f] jit-log-opt-bridge}
[3e4c22b34b8ac12] {jit-backend
[3e4c22b34c1e288] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209d
[3e4c22b34c26e45] jit-backend-dump}
[3e4c22b34c31efd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209e34 +0  2A000000
[3e4c22b34c33304] jit-backend-dump}
[3e4c22b34c3717e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a0f5 +0  2A000000
[3e4c22b34c380ab] jit-backend-dump}
[3e4c22b34c3b45e] {jit-backend-addr
bridge out of Guard 0x3cecda0 has address 0x7f4a5c209e30 to 0x7f4a5c20a0f0
       gc table: 0x7f4a5c209d90
    jump target: 0x7f4a5c209e30
         resops: 0x7f4a5c209e3e
       failures: 0x7f4a5c20a0f0
            end: 0x7f4a5c20a32b
[3e4c22b34c3d74b] jit-backend-addr}
[3e4c22b34c40cdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209e4b +0  00030000
[3e4c22b34c41afc] jit-backend-dump}
[3e4c22b34c44d74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209e6a +0  FD020000
[3e4c22b34c45aa8] jit-backend-dump}
[3e4c22b34c48b8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209e77 +0  0C030000
[3e4c22b34c498ae] jit-backend-dump}
[3e4c22b34c4c916] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209e92 +0  0D030000
[3e4c22b34c4d628] jit-backend-dump}
[3e4c22b34c505cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209ea8 +0  13030000
[3e4c22b34c512bf] jit-backend-dump}
[3e4c22b34c54207] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209eb5 +0  22030000
[3e4c22b34c54eef] jit-backend-dump}
[3e4c22b34c57e1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209ecc +0  27030000
[3e4c22b34c58af6] jit-backend-dump}
[3e4c22b34c5ba56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209ee8 +0  27030000
[3e4c22b34c5c722] jit-backend-dump}
[3e4c22b34c5f5e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209ef8 +0  33030000
[3e4c22b34c602b0] jit-backend-dump}
[3e4c22b34c6315e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209f46 +0  01030000
[3e4c22b34c63e74] jit-backend-dump}
[3e4c22b34c66d20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209f53 +0  10030000
[3e4c22b34c679f8] jit-backend-dump}
[3e4c22b34c6a894] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209f6a +0  15030000
[3e4c22b34c6b573] jit-backend-dump}
[3e4c22b34c6e418] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209f7a +0  21030000
[3e4c22b34c6f118] jit-backend-dump}
[3e4c22b34c71fd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209fc7 +0  F0020000
[3e4c22b34c72ce0] jit-backend-dump}
[3e4c22b34c75b7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209fd7 +0  FC020000
[3e4c22b34c76845] jit-backend-dump}
[3e4c22b34c796db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209fe4 +0  0B030000
[3e4c22b34c7a3cc] jit-backend-dump}
[3e4c22b34c7d28d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c209ff4 +0  17030000
[3e4c22b34c7df6c] jit-backend-dump}
[3e4c22b34c81130] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7386 +0  A62A0300
[3e4c22b34c81e9e] jit-backend-dump}
[3e4c22b34c85c82] jit-backend}
[3e4c22b34c897df] {jit-log-opt-bridge
# bridge out of Guard 0x3cecda0 with 100 ops
[i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+182: guard_not_invalidated(descr=<Guard0x5f21d00>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+182: i13 = int_lt(i10, i4)
+185: guard_true(i13, descr=<Guard0x5f25730>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41))')
+191: p14 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+202: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x5f21d60>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(- nc25224 1)')
+222: i17 = int_sub_ovf(i5, 1)
+229: guard_no_overflow(descr=<Guard0x5f25778>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(loop25220 lst5238 AppRand41)')
+235: p18 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+253: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x5f257c0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+262: p20 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+266: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x5f21dc0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+284: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+288: i23 = int_lt(i17, i22)
+291: guard_false(i23, descr=<Guard0x5f25808>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))))')
debug_merge_point(0, 0, '(+ m5210 1)')
+297: p24 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+301: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x5f21e20>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+320: i26 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+331: i28 = int_add_ovf(i26, 1)
+342: guard_no_overflow(descr=<Guard0x5f25850>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
+348: i29 = int_add_ovf(i22, i17)
+358: guard_no_overflow(descr=<Guard0x5f25898>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))')
debug_merge_point(0, 0, '(- (quotient AppRand38 2) AppRand39)')
+364: i31 = int_rshift(i28, 1)
+374: i33 = int_lshift(i31, 1)
+384: i35 = int_xor(i28, 2)
+402: i37 = int_rshift(i35, 63)
+406: i38 = int_ne(i33, i28)
+423: i39 = int_and(i37, i38)
+426: i40 = int_add(i31, i39)
+433: i41 = int_sub_ovf(i40, i29)
+436: guard_no_overflow(descr=<Guard0x5f258e0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))')
debug_merge_point(0, 0, '(max nc25224 AppRand40)')
+442: i42 = int_lt(i17, i41)
+449: guard_false(i42, descr=<Guard0x5f25928>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))')
debug_merge_point(0, 0, '(lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))')
+455: p43 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+466: guard_class(p43, 16505296, descr=<Guard0x5f25970>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
debug_merge_point(0, 0, '(let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))')
debug_merge_point(0, 0, '(- m5210 AppRand47)')
+478: i45 = int_sub_ovf(i26, i29)
+488: guard_no_overflow(descr=<Guard0x5f259b8>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(loop35236 lst5222 (quotient AppRand48 2))')
+494: i47 = int_eq(i45, -9223372036854775808)
+494: i49 = int_rshift(i45, 1)
+500: i51 = int_lshift(i49, 1)
+510: i53 = int_xor(i45, 2)
+521: i55 = int_rshift(i53, 63)
+525: i56 = int_ne(i51, i45)
+548: i57 = int_and(i55, i56)
+551: i58 = int_add(i49, i57)
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
debug_merge_point(0, 0, '(< nc35240 start)')
+558: i59 = int_lt(i58, i17)
+565: guard_false(i59, descr=<Guard0x5f25a00>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+571: i60 = int_add_ovf(i17, i58)
+581: guard_no_overflow(descr=<Guard0x5f25a48>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+587: i61 = int_add_ovf(i22, i60)
+594: guard_no_overflow(descr=<Guard0x5f25a90>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+600: i62 = int_sub_ovf(i26, i61)
+610: guard_no_overflow(descr=<Guard0x5f25ad8>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+616: i64 = int_sub(i58, 1)
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+620: p65 = new_with_vtable(descr=<SizeDescr 24>)
+668: p66 = new_with_vtable(descr=<SizeDescr 32>)
+679: setfield_gc(p66, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+687: p69 = new_array(4, descr=<ArrayS 8>)
+706: setarrayitem_gc(p69, 0, i2, descr=<ArrayS 8>)
+710: setarrayitem_gc(p69, 1, i5, descr=<ArrayS 8>)
+714: setarrayitem_gc(p69, 2, i1, descr=<ArrayS 8>)
+718: setarrayitem_gc(p69, 3, i0, descr=<ArrayS 8>)
+722: setfield_gc(p66, p69, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+733: setfield_gc(p66, ConstPtr(ptr74), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+737: setfield_gc(p65, p66, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+741: setfield_gc(p65, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+745: jump(p43, i17, p20, i17, p24, p6, i64, i22, i58, i62, p65, p11, p14, p20, p24, p43, descr=TargetToken(61027360))
+864: --end of the loop--
[3e4c22b34cdeca8] jit-log-opt-bridge}
[3e4c22b35e74024] {jit-backend
[3e4c22b35f0594b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a
[3e4c22b35f1046e] jit-backend-dump}
[3e4c22b35f1f095] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a644 +0  25000000
[3e4c22b35f2062f] jit-backend-dump}
[3e4c22b35f24903] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a945 +0  25000000
[3e4c22b35f25827] jit-backend-dump}
[3e4c22b35f28d4f] {jit-backend-addr
bridge out of Guard 0x4a7f040 has address 0x7f4a5c20a640 to 0x7f4a5c20a940
       gc table: 0x7f4a5c20a520
    jump target: 0x7f4a5c20a640
         resops: 0x7f4a5c20a64e
       failures: 0x7f4a5c20a940
            end: 0x7f4a5c20ac93
[3e4c22b35f2b3b6] jit-backend-addr}
[3e4c22b35f2e907] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a65e +0  21030000
[3e4c22b35f2f748] jit-backend-dump}
[3e4c22b35f32943] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a66b +0  30030000
[3e4c22b35f336a5] jit-backend-dump}
[3e4c22b35f3666d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a67b +0  3C030000
[3e4c22b35f3738c] jit-backend-dump}
[3e4c22b35f3a2fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a692 +0  41030000
[3e4c22b35f3b029] jit-backend-dump}
[3e4c22b35f3df90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a6a0 +0  4F030000
[3e4c22b35f3ecab] jit-backend-dump}
[3e4c22b35f41bfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a6b4 +0  57030000
[3e4c22b35f42908] jit-backend-dump}
[3e4c22b35f45a1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a6d3 +0  70030000
[3e4c22b35f46755] jit-backend-dump}
[3e4c22b35f497a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a6e7 +0  78030000
[3e4c22b35f4a4bf] jit-backend-dump}
[3e4c22b35f4d429] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a6fb +0  80030000
[3e4c22b35f4e14a] jit-backend-dump}
[3e4c22b35f51092] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a708 +0  8F030000
[3e4c22b35f51d9b] jit-backend-dump}
[3e4c22b35f54cec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a71e +0  95030000
[3e4c22b35f55a54] jit-backend-dump}
[3e4c22b35f58a13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a73a +0  95030000
[3e4c22b35f59729] jit-backend-dump}
[3e4c22b35f5c683] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a750 +0  9B030000
[3e4c22b35f5d392] jit-backend-dump}
[3e4c22b35f602e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a762 +0  A5030000
[3e4c22b35f60ffc] jit-backend-dump}
[3e4c22b35f63f6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a773 +0  B0030000
[3e4c22b35f64c77] jit-backend-dump}
[3e4c22b35f67c18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a78b +0  B4030000
[3e4c22b35f6892d] jit-backend-dump}
[3e4c22b35f6b897] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a794 +0  C7030000
[3e4c22b35f6c5a9] jit-backend-dump}
[3e4c22b35f6f55c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a7a6 +0  D1030000
[3e4c22b35f7027a] jit-backend-dump}
[3e4c22b35f73215] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a7b3 +0  E0030000
[3e4c22b35f73f43] jit-backend-dump}
[3e4c22b35f76eb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a7c6 +0  E9030000
[3e4c22b35f77bc8] jit-backend-dump}
[3e4c22b35f7ab3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a7d0 +0  FB030000
[3e4c22b35f7b843] jit-backend-dump}
[3e4c22b35f7e7ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a7dd +0  0A040000
[3e4c22b35f7f4bf] jit-backend-dump}
[3e4c22b35f82416] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a7ed +0  16040000
[3e4c22b35f83122] jit-backend-dump}
[3e4c22b35f860a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a803 +0  1C040000
[3e4c22b35f86db7] jit-backend-dump}
[3e4c22b35f89d32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a81b +0  20040000
[3e4c22b35f8aa4b] jit-backend-dump}
[3e4c22b35f8d9d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a831 +0  26040000
[3e4c22b35f8e6eb] jit-backend-dump}
[3e4c22b35f91676] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20a847 +0  2C040000
[3e4c22b35f9238f] jit-backend-dump}
[3e4c22b35f95697] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb927 +0  15ED0000
[3e4c22b35f963ea] jit-backend-dump}
[3e4c22b35f9a631] jit-backend}
[3e4c22b35f9e270] {jit-log-opt-bridge
# bridge out of Guard 0x4a7f040 with 115 ops
[p0, p1]
+310: guard_class(p1, 16500016, descr=<Guard0x5f21f40>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+326: guard_nonnull(p3, descr=<Guard0x5f25b68>) [p0, p1]
+342: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+345: guard_true(i5, descr=<Guard0x5f25bb0>) [p0, p1]
debug_merge_point(0, 0, 'lst')
+351: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+355: guard_nonnull_class(p6, 16616448, descr=<Guard0x5f21fa0>) [p0, p1]
+374: guard_class(p0, 16437896, descr=<Guard0x5f25bf8>) [p0, p1]
+388: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+399: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x5f25c40>) [p0, p1]
+408: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+408: guard_not_invalidated(descr=<Guard0x5f25c88>) [p0, p1]
+408: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+412: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+416: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)')
+420: guard_nonnull_class(p12, 16478824, descr=<Guard0x647a020>) [p0, p1]
+439: guard_nonnull_class(p13, 16470384, descr=<Guard0x647a080>) [p0, p1]
+459: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+470: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x5f25cd0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+479: guard_class(p14, 16437896, descr=<Guard0x5f25d18>) [p0, p1]
+492: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+496: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x647a0e0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+514: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+518: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+522: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+526: p25 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+530: guard_class(p25, 16505296, descr=<Guard0x5f25d60>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+542: p27 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+546: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x647a140>) [p0, p1]
+564: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x647a1a0>) [p0, p1]
+582: i30 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+586: i31 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+590: i32 = int_eq(i30, i31)
+593: guard_true(i32, descr=<Guard0x5f25da8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+599: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+604: guard_nonnull_class(p33, 16616448, descr=<Guard0x647a200>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+623: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+626: guard_true(i36, descr=<Guard0x5f25df0>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+632: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x647a260>) [p0, p1]
+650: i38 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+654: i39 = int_eq(i31, i38)
+657: guard_false(i39, descr=<Guard0x5f25e38>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+663: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x647a2c0>) [p0, p1]
+682: i42 = int_ge(i38, 0)
+686: guard_true(i42, descr=<Guard0x5f25e80>) [p0, p1]
+692: i43 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+696: i44 = int_lt(i38, i43)
+699: guard_true(i44, descr=<Guard0x5f25ec8>) [p0, p1]
+705: p45 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+709: guard_class(p45, 16622984, descr=<Guard0x5f25f10>) [p0, p1]
+721: p47 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+725: p48 = getarrayitem_gc_r(p47, i38, descr=<ArrayP 8>)
+730: guard_class(p48, 16470384, descr=<Guard0x5f25f58>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+743: p50 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+748: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x647a320>) [p0, p1]
+767: p52 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+771: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x647a380>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+789: p54 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+793: guard_nonnull_class(p54, 16616448, descr=<Guard0x647a3e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+811: p56 = new_with_vtable(descr=<SizeDescr 32>)
+858: p57 = new_with_vtable(descr=<SizeDescr 40>)
+869: setfield_gc(p57, p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+880: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+884: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+888: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+892: p59 = new_with_vtable(descr=<SizeDescr 48>)
+904: p60 = new_with_vtable(descr=<SizeDescr 32>)
+916: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+924: p63 = new_array_clear(4, descr=<ArrayP 8>)
+950: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+954: setarrayitem_gc(p63, 1, p50, descr=<ArrayP 8>)
+958: setarrayitem_gc(p63, 2, p50, descr=<ArrayP 8>)
+962: setarrayitem_gc(p63, 3, p52, descr=<ArrayP 8>)
+966: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+977: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+981: setfield_gc(p56, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+985: setfield_gc(p56, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+996: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1001: setfield_gc(p59, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1006: setfield_gc(p59, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1011: setfield_gc(p59, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1016: setfield_gc(p56, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1020: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1025: jump(p56, p59, descr=TargetToken(59469520))
+1056: --end of the loop--
[3e4c22b35ffaa15] jit-log-opt-bridge}
[3e4c22b37b4847b] {jit-backend
[3e4c22b37bffa10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20aea
[3e4c22b37c0b7e3] jit-backend-dump}
[3e4c22b37c1d327] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20afd4 +0  25000000
[3e4c22b37c1e8c7] jit-backend-dump}
[3e4c22b37c2299c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b335 +0  25000000
[3e4c22b37c23852] jit-backend-dump}
[3e4c22b37c26c4c] {jit-backend-addr
bridge out of Guard 0x40d84a0 has address 0x7f4a5c20afd0 to 0x7f4a5c20b330
       gc table: 0x7f4a5c20aea0
    jump target: 0x7f4a5c20afd0
         resops: 0x7f4a5c20afde
       failures: 0x7f4a5c20b330
            end: 0x7f4a5c20b6bb
[3e4c22b37c2955a] jit-backend-addr}
[3e4c22b37c2ca7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20afee +0  81030000
[3e4c22b37c2d89c] jit-backend-dump}
[3e4c22b37c30a3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b002 +0  89030000
[3e4c22b37c317dd] jit-backend-dump}
[3e4c22b37c34ba0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b021 +0  A2030000
[3e4c22b37c358a6] jit-backend-dump}
[3e4c22b37c389d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b034 +0  AB030000
[3e4c22b37c39708] jit-backend-dump}
[3e4c22b37c3c7e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b048 +0  B3030000
[3e4c22b37c3d577] jit-backend-dump}
[3e4c22b37c405d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b056 +0  C1030000
[3e4c22b37c4127c] jit-backend-dump}
[3e4c22b37c4485c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b06d +0  C6030000
[3e4c22b37c4558a] jit-backend-dump}
[3e4c22b37c4869d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b089 +0  C6030000
[3e4c22b37c49375] jit-backend-dump}
[3e4c22b37c4c463] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b09f +0  CC030000
[3e4c22b37c4d0ef] jit-backend-dump}
[3e4c22b37c500df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b0b2 +0  D5030000
[3e4c22b37c50d67] jit-backend-dump}
[3e4c22b37c53d76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b0c3 +0  E0030000
[3e4c22b37c54a11] jit-backend-dump}
[3e4c22b37c579fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b0d7 +0  E8030000
[3e4c22b37c58696] jit-backend-dump}
[3e4c22b37c5b68f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b0e1 +0  FA030000
[3e4c22b37c5c321] jit-backend-dump}
[3e4c22b37c5f308] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b0ef +0  08040000
[3e4c22b37c5ff9a] jit-backend-dump}
[3e4c22b37c62f96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b101 +0  12040000
[3e4c22b37c63c3a] jit-backend-dump}
[3e4c22b37c66c67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b119 +0  16040000
[3e4c22b37c678f3] jit-backend-dump}
[3e4c22b37c6a8b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b12f +0  1C040000
[3e4c22b37c6b53e] jit-backend-dump}
[3e4c22b37c6e623] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b146 +0  21040000
[3e4c22b37c6f2ab] jit-backend-dump}
[3e4c22b37c7228f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b159 +0  2A040000
[3e4c22b37c72f15] jit-backend-dump}
[3e4c22b37c75ef2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b166 +0  39040000
[3e4c22b37c76b8a] jit-backend-dump}
[3e4c22b37c79b8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b170 +0  4B040000
[3e4c22b37c7a822] jit-backend-dump}
[3e4c22b37c7d81b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b179 +0  5E040000
[3e4c22b37c7e4b3] jit-backend-dump}
[3e4c22b37c8147b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b18b +0  68040000
[3e4c22b37c8210a] jit-backend-dump}
[3e4c22b37c85100] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b1a2 +0  6D040000
[3e4c22b37c85d92] jit-backend-dump}
[3e4c22b37c88d82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b1ab +0  80040000
[3e4c22b37c899f8] jit-backend-dump}
[3e4c22b37c8c9d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b1c2 +0  85040000
[3e4c22b37c8d671] jit-backend-dump}
[3e4c22b37c9065b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b1d9 +0  8A040000
[3e4c22b37c912ed] jit-backend-dump}
[3e4c22b37c942c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b1f0 +0  8F040000
[3e4c22b37c94f5f] jit-backend-dump}
[3e4c22b37c97f34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b206 +0  95040000
[3e4c22b37c98bc6] jit-backend-dump}
[3e4c22b37c9bf5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea532 +0  9A0A0200
[3e4c22b37c9cc08] jit-backend-dump}
[3e4c22b37ca1430] jit-backend}
[3e4c22b37ca53d4] {jit-log-opt-bridge
# bridge out of Guard 0x40d84a0 with 125 ops
[p0, p1, p2, p3, p4]
+326: guard_class(p0, 16437896, descr=<Guard0x647a440>) [p0, p1, p2, p3, p4]
+338: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+349: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x69a4020>) [p0, p1, p2, p3, p4]
+358: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+358: guard_not_invalidated(descr=<Guard0x69a4068>) [p0, p1, p2, p3, p4]
+358: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+362: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+366: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+370: guard_nonnull_class(p9, 16478824, descr=<Guard0x647a4a0>) [p0, p1, p2, p3, p4]
+389: guard_nonnull_class(p10, 16470384, descr=<Guard0x647a500>) [p0, p1, p2, p3, p4]
+408: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+419: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x69a40b0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+428: guard_class(p11, 16437896, descr=<Guard0x69a40f8>) [p0, p1, p2, p3, p4]
+442: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+446: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x647a560>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+465: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+469: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+473: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+477: p22 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+481: guard_class(p22, 16505296, descr=<Guard0x69a4140>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc1 nc2)')
+493: p24 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+497: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x647a5c0>) [p0, p1, p2, p3, p4]
+515: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x647a620>) [p0, p1, p2, p3, p4]
+534: i27 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+538: i28 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+542: i29 = int_eq(i27, i28)
+545: guard_false(i29, descr=<Guard0x69a4188>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+551: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x647a680>) [p0, p1, p2, p3, p4]
+571: i32 = int_ge(i28, 0)
+575: guard_true(i32, descr=<Guard0x69a41d0>) [p0, p1, p2, p3, p4]
+581: i33 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+586: i34 = int_lt(i28, i33)
+589: guard_true(i34, descr=<Guard0x69a4218>) [p0, p1, p2, p3, p4]
+595: p35 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+600: guard_class(p35, 16622984, descr=<Guard0x69a4260>) [p0, p1, p2, p3, p4]
+613: p37 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+618: p38 = getarrayitem_gc_r(p37, i28, descr=<ArrayP 8>)
+623: guard_class(p38, 16470384, descr=<Guard0x69a42a8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+637: p40 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+641: guard_nonnull_class(p40, 16616448, descr=<Guard0x647a6e0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+673: i43 = instance_ptr_eq(p40, ConstPtr(ptr42))
+676: guard_true(i43, descr=<Guard0x69a42f0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+682: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x647a740>) [p0, p1, p2, p3, p4]
+701: i45 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+705: i46 = int_eq(i28, i45)
+708: guard_false(i46, descr=<Guard0x69a4338>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+714: i48 = int_ge(i45, 0)
+718: guard_true(i48, descr=<Guard0x69a4380>) [p0, p1, p2, p3, p4]
+724: i49 = int_lt(i45, i33)
+727: guard_true(i49, descr=<Guard0x69a43c8>) [p0, p1, p2, p3, p4]
+733: p50 = getarrayitem_gc_r(p37, i45, descr=<ArrayP 8>)
+738: guard_class(p50, 16470384, descr=<Guard0x69a4410>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+751: p52 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+756: guard_nonnull_class(p52, 16616448, descr=<Guard0x647a7a0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+774: i55 = instance_ptr_eq(p52, ConstPtr(ptr54))
+777: guard_true(i55, descr=<Guard0x69a4458>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+783: p56 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+787: guard_nonnull_class(p56, ConstClass(W_Vector), descr=<Guard0x647a800>) [p0, p1, p2, p3, p4]
+806: p58 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+811: guard_nonnull_class(p58, ConstClass(W_Vector), descr=<Guard0x647a860>) [p0, p1, p2, p3, p4]
+829: p60 = getfield_gc_r(p50, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+833: guard_nonnull_class(p60, ConstClass(W_Vector), descr=<Guard0x647a8c0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+852: p62 = getfield_gc_r(p50, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+856: guard_nonnull_class(p62, 16470384, descr=<Guard0x647a920>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+874: p64 = new_with_vtable(descr=<SizeDescr 32>)
+921: p65 = new_with_vtable(descr=<SizeDescr 40>)
+932: setfield_gc(p65, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+943: setfield_gc(p65, ConstPtr(ptr66), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+947: setfield_gc(p65, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+951: setfield_gc(p65, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+955: p67 = new_with_vtable(descr=<SizeDescr 24>)
+967: setfield_gc(p67, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+979: p68 = new_with_vtable(descr=<SizeDescr 24>)
+991: setfield_gc(p68, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+995: setfield_gc(p68, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+999: setfield_gc(p67, p68, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1004: p69 = new_with_vtable(descr=<SizeDescr 48>)
+1015: p70 = new_with_vtable(descr=<SizeDescr 32>)
+1026: setfield_gc(p70, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1034: p73 = new_array_clear(4, descr=<ArrayP 8>)
+1060: setarrayitem_gc(p73, 0, ConstPtr(ptr75), descr=<ArrayP 8>)
+1064: setarrayitem_gc(p73, 1, p56, descr=<ArrayP 8>)
+1068: setarrayitem_gc(p73, 2, p58, descr=<ArrayP 8>)
+1072: setarrayitem_gc(p73, 3, p60, descr=<ArrayP 8>)
+1076: setfield_gc(p70, p73, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1087: setfield_gc(p70, ConstPtr(ptr79), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1098: setfield_gc(p69, ConstPtr(ptr80), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1102: setfield_gc(p69, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1106: setfield_gc(p69, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1110: setfield_gc(p69, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1121: setfield_gc(p64, p65, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1125: setfield_gc(p64, p62, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1129: setfield_gc(p64, p67, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1133: setfield_gc(p69, p70, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1137: jump(p64, p69, descr=TargetToken(59469520))
+1168: --end of the loop--
[3e4c22b37d16aa1] jit-log-opt-bridge}
[3e4c22b38d38119] {jit-backend
[3e4c22b38da2f69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b800 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C3202000048FF042540BD28068139D00C01000F85000000004C8B79104983FF01720741813FA8B800000F85000000004C8B71184983FE01720741813EB09700000F85000000004C8B69204983FD01720841817D0040D202000F85000000004D8B67104C8B15EDFEFFFF4D39D40F8500000000813FC81800000F85000000004C8B57084983FA01720741813A900F00000F85000000004D8B67204D8B4F304D8B4708418138102001000F8500000000498B77284883FE017206813E601400000F85000000004983FC01720841813C24601400000F85000000004C8B7E08498B7424084939F70F85000000004D8B7E104983FF01720741813F40D202000F85000000004C8B259EFEFFFF4D39E70F85000000004983F9017207418139601400000F85000000004D8B61084C39E60F85000000004D8B66084983FC01720841813C24F08C00000F8500000000488B0C25F091F900488D91C8000000483B14251092F9000F87F600000048891425F091F90048C701700B0100488D512048C702B8B500004C894208488B3543FEFFFF488972104C8972184C8972204C8D722849C706A8160000498D763048C706F08C000048C74608040000004C8D4E2049C701080E000049C7410804000000488B1D07FEFFFF498959104D8961184D8961204D8961284C894E104C8B0DF4FDFFFF4C894E18488951084D8956084C8979104C8969184D89461049897E18488B3DD9FDFFFF49897E204989762848898D300100004C89B53801000049BBC05A1C5C4A7F000041FFE3660F1F44000048C7442408FFFFFF0049BBD0B6205C4A7F00004C895D204D8D9B208CFBFF41FFD3E9A8FDFFFF49BBF0B7205C4A7F00004C895D204D8D9B0093FBFF41FFD3E9F5FEFFFFFF35B7FCFFFF49BBE0B6205C4A7F000041534D8D9B2089FBFF41FFE3FF35A3FCFFFF49BBF0B6205C4A7F000041534D8D9B1089FBFF41FFE3FF358FFCFFFF49BB00B7205C4A7F000041534D8D9B0089FBFF41FFE3FF357BFCFFFF49BB10B7205C4A7F000041534D8D9BF088FBFF41FFE3FF356FFCFFFF49BB20B7205C4A7F000041534D8D9BE088FBFF41FFE3FF355BFCFFFF49BB30B7205C4A7F000041534D8D9BD088FBFF41FFE3FF3547FCFFFF49BB40B7205C4A7F000041534D8D9BC088FBFF41FFE3FF3533FCFFFF49BB50B7205C4A7F000041534D8D9BB088FBFF41FFE3FF351FFCFFFF49BB60B7205C4A7F000041534D8D9BA088FBFF41FFE3FF350BFCFFFF49BB70B7205C4A7F000041534D8D9B9088FBFF41FFE3FF35F7FBFFFF49BB80B7205C4A7F000041534D8D9B8088FBFF41FFE3FF35E3FBFFFF49BB90B7205C4A7F000041534D8D9B7088FBFF41FFE3FF35CFFBFFFF49BBA0B7205C4A7F000041534D8D9B6088FBFF41FFE3FF35C3FBFFFF49BBB0B7205C4A7F000041534D8D9B5088FBFF41FFE3FF35AFFBFFFF49BBC0B7205C4A7F000041534D8D9B4088FBFF41FFE3FF359BFBFFFF49BBD0B7205C4A7F000041534D8D9B3088FBFF41FFE3FF3587FBFFFF49BBE0B7205C4A7F000041534D8D9B2088FBFF41FFE3
[3e4c22b38daa9ee] jit-backend-dump}
[3e4c22b38db7e82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b8c4 +0  25000000
[3e4c22b38db93c0] jit-backend-dump}
[3e4c22b38dbd56f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20bb05 +0  25000000
[3e4c22b38dbe440] jit-backend-dump}
[3e4c22b38dc192b] {jit-backend-addr
bridge out of Guard 0x4a7c5c0 has address 0x7f4a5c20b8c0 to 0x7f4a5c20bb00
       gc table: 0x7f4a5c20b800
    jump target: 0x7f4a5c20b8c0
         resops: 0x7f4a5c20b8ce
       failures: 0x7f4a5c20bb00
            end: 0x7f4a5c20bd1f
[3e4c22b38dc3dfb] jit-backend-addr}
[3e4c22b38dc73a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b8de +0  61020000
[3e4c22b38dc8266] jit-backend-dump}
[3e4c22b38dcb5af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b8f5 +0  66020000
[3e4c22b38dcc36c] jit-backend-dump}
[3e4c22b38dcf647] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b90c +0  6B020000
[3e4c22b38dd03af] jit-backend-dump}
[3e4c22b38dd34ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b924 +0  6F020000
[3e4c22b38dd41da] jit-backend-dump}
[3e4c22b38dd7216] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b938 +0  77020000
[3e4c22b38dd7f2f] jit-backend-dump}
[3e4c22b38ddaf0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b944 +0  87020000
[3e4c22b38ddbc3a] jit-backend-dump}
[3e4c22b38ddeba7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b95b +0  8C020000
[3e4c22b38ddf8ad] jit-backend-dump}
[3e4c22b38de2813] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b974 +0  8F020000
[3e4c22b38de351f] jit-backend-dump}
[3e4c22b38de6675] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b98a +0  B1020000
[3e4c22b38de73a3] jit-backend-dump}
[3e4c22b38dea435] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b99e +0  B9020000
[3e4c22b38deb163] jit-backend-dump}
[3e4c22b38dee16f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b9b0 +0  C3020000
[3e4c22b38deeea6] jit-backend-dump}
[3e4c22b38df1eba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b9c7 +0  C8020000
[3e4c22b38df2c2f] jit-backend-dump}
[3e4c22b38df5c40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b9d7 +0  D4020000
[3e4c22b38df6977] jit-backend-dump}
[3e4c22b38df994c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b9ea +0  DD020000
[3e4c22b38dfa66a] jit-backend-dump}
[3e4c22b38dfd611] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20b9f7 +0  EC020000
[3e4c22b38dfe336] jit-backend-dump}
[3e4c22b38e012fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ba0f +0  F0020000
[3e4c22b38e02010] jit-backend-dump}
[3e4c22b38e05312] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa463 +0  59140100
[3e4c22b38e06093] jit-backend-dump}
[3e4c22b38e0a0b4] jit-backend}
[3e4c22b38e0dc53] {jit-log-opt-bridge
# bridge out of Guard 0x4a7c5c0 with 90 ops
[p0, p1]
+214: guard_class(p1, 16500368, descr=<Guard0x647a980>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+230: guard_nonnull_class(p3, 16478824, descr=<Guard0x647a9e0>) [p0, p1]
+249: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+253: guard_nonnull_class(p5, 16470384, descr=<Guard0x647aa40>) [p0, p1]
+272: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+276: guard_nonnull_class(p7, 16616448, descr=<Guard0x647aaa0>) [p0, p1]
+296: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+307: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x69a44e8>) [p0, p1]
+316: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+316: guard_class(p0, 16437896, descr=<Guard0x69a4530>) [p0, p1]
+328: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+332: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x647ab00>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+351: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+351: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+355: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+359: p18 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+363: guard_class(p18, 16505296, descr=<Guard0x69a4578>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+376: guard_not_invalidated(descr=<Guard0x69a45c0>) [p0, p1]
+376: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+380: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x647ab60>) [p0, p1]
+398: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x647abc0>) [p0, p1]
+418: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+422: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+427: i25 = int_eq(i23, i24)
+430: guard_true(i25, descr=<Guard0x69a4608>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+436: p26 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+440: guard_nonnull_class(p26, 16616448, descr=<Guard0x647ac20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+466: i29 = instance_ptr_eq(p26, ConstPtr(ptr28))
+469: guard_true(i29, descr=<Guard0x69a4650>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+475: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x647ac80>) [p0, p1]
+494: i31 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+498: i32 = int_eq(i24, i31)
+501: guard_true(i32, descr=<Guard0x69a4698>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+507: p33 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+511: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x647ace0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+531: p35 = new_with_vtable(descr=<SizeDescr 32>)
+575: p36 = new_with_vtable(descr=<SizeDescr 40>)
+586: setfield_gc(p36, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+597: setfield_gc(p36, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+601: setfield_gc(p36, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+605: setfield_gc(p36, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+609: p38 = new_with_vtable(descr=<SizeDescr 48>)
+620: p39 = new_with_vtable(descr=<SizeDescr 32>)
+631: setfield_gc(p39, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+639: p42 = new_array_clear(4, descr=<ArrayP 8>)
+665: setarrayitem_gc(p42, 0, ConstPtr(ptr44), descr=<ArrayP 8>)
+669: setarrayitem_gc(p42, 1, p33, descr=<ArrayP 8>)
+673: setarrayitem_gc(p42, 2, p33, descr=<ArrayP 8>)
+677: setarrayitem_gc(p42, 3, p33, descr=<ArrayP 8>)
+681: setfield_gc(p39, p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+692: setfield_gc(p39, ConstPtr(ptr48), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+696: setfield_gc(p35, p36, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+700: setfield_gc(p38, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+704: setfield_gc(p35, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+708: setfield_gc(p35, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+712: setfield_gc(p38, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+716: setfield_gc(p38, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+727: setfield_gc(p38, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+731: setfield_gc(p38, p39, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+735: jump(p35, p38, descr=TargetToken(59469520))
+768: --end of the loop--
[3e4c22b38e51d04] jit-log-opt-bridge}
[3e4c22b3937f80b] {jit-backend
[3e4c22b393ed147] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20bea0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C7202000048FF0425A0E528068139700B01000F85000000004C8B79104D85FF0F84000000004C8B35FAFEFFFF4D39F70F85000000004C8B79184983FF01720741813F40D202000F850000000041817D00C81800000F85000000004D8B65204C8B15E1FEFFFF4D39D40F85000000004D8B55284D8B65304D8B4D184983FA01720741813AA8B800000F85000000004983FC01720841813C24B09700000F85000000004D8B4210488B3DC2FEFFFF4939F80F8500000000418139C81800000F8500000000498B79084883FF017206813F900F00000F85000000004D8B4220498B7230498B5A08813B102001000F8500000000498B52284883FA017206813A601400000F85000000004983F8017207418138601400000F85000000004C8B5208498B50084939D20F85000000004D8B5424104983FA01720741813A40D202000F85000000004D39F20F85000000004883FE017206813E601400000F85000000004C8B76084C39F20F85000000004D8B7424084983FE01720741813EF08C00000F8500000000488B0C25F091F900488D91C8000000483B14251092F9000F87FD00000048891425F091F90048C701700B0100488D512048C702B8B5000048895A084C8B2D12FEFFFF4C896A104C8962184C8962204C8D622849C70424A81600004D8D6C243049C74500F08C000049C7450804000000498D752048C706080E000048C74608040000004C8B05D3FDFFFF4C8946104C8976184C8976204C89762849897510488B35C0FDFFFF498975184C8951104C8979184C8B3DB5FDFFFF4D897C242049895C24104D894C241849897C2408488951084D896C242848898D300100004C89A53801000049BBC05A1C5C4A7F000041FFE30F1F44000048C7442408FFFFFF0049BB30BD205C4A7F00004C895D204D8D9BC085FBFF41FFD3E968FDFFFF49BB90BE205C4A7F00004C895D204D8D9B608CFBFF41FFD3E9EEFEFFFFFF3557FCFFFF49BB40BD205C4A7F000041534D8D9BC082FBFF41FFE3FF3543FCFFFF49BB50BD205C4A7F000041534D8D9BB082FBFF41FFE3FF3537FCFFFF49BB60BD205C4A7F000041534D8D9BA082FBFF41FFE3FF3523FCFFFF49BB70BD205C4A7F000041534D8D9B9082FBFF41FFE3FF350FFCFFFF49BB80BD205C4A7F000041534D8D9B8082FBFF41FFE3FF3503FCFFFF49BB90BD205C4A7F000041534D8D9B7082FBFF41FFE3FF35EFFBFFFF49BBA0BD205C4A7F000041534D8D9B6082FBFF41FFE3FF35DBFBFFFF49BBB0BD205C4A7F000041534D8D9B5082FBFF41FFE3FF35C7FBFFFF49BBC0BD205C4A7F000041534D8D9B4082FBFF41FFE3FF35BBFBFFFF49BBD0BD205C4A7F000041534D8D9B3082FBFF41FFE3FF35A7FBFFFF49BBE0BD205C4A7F000041534D8D9B2082FBFF41FFE3FF3593FBFFFF49BBF0BD205C4A7F000041534D8D9B1082FBFF41FFE3FF357FFBFFFF49BB00BE205C4A7F000041534D8D9B0082FBFF41FFE3FF356BFBFFFF49BB10BE205C4A7F000041534D8D9BF081FBFF41FFE3FF3557FBFFFF49BB20BE205C4A7F000041534D8D9BE081FBFF41FFE3FF3543FBFFFF49BB30BE205C4A7F000041534D8D9BD081FBFF41FFE3FF352FFBFFFF49BB40BE205C4A7F000041534D8D9BC081FBFF41FFE3FF351BFBFFFF49BB50BE205C4A7F000041534D8D9BB081FBFF41FFE3FF3507FBFFFF49BB60BE205C4A7F000041534D8D9BA081FBFF41FFE3FF35F3FAFFFF49BB70BE205C4A7F000041534D8D9B9081FBFF41FFE3FF35DFFAFFFF49BB80BE205C4A7F000041534D8D9B8081FBFF41FFE3
[3e4c22b393f5a10] jit-backend-dump}
[3e4c22b394014b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20bf84 +0  25000000
[3e4c22b394029f8] jit-backend-dump}
[3e4c22b39406dbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c205 +0  25000000
[3e4c22b39407d55] jit-backend-dump}
[3e4c22b3940b351] {jit-backend-addr
bridge out of Guard 0x4a7cf50 has address 0x7f4a5c20bf80 to 0x7f4a5c20c200
       gc table: 0x7f4a5c20bea0
    jump target: 0x7f4a5c20bf80
         resops: 0x7f4a5c20bf8e
       failures: 0x7f4a5c20c200
            end: 0x7f4a5c20c48f
[3e4c22b3940d79a] jit-backend-addr}
[3e4c22b39410f8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20bf9e +0  A1020000
[3e4c22b39411e8b] jit-backend-dump}
[3e4c22b394151d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20bfab +0  B0020000
[3e4c22b39415f72] jit-backend-dump}
[3e4c22b394190bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20bfbb +0  BC020000
[3e4c22b39419e08] jit-backend-dump}
[3e4c22b3941cec8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20bfd2 +0  C1020000
[3e4c22b3941dbf0] jit-backend-dump}
[3e4c22b39420e38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20bfe0 +0  CF020000
[3e4c22b39421b50] jit-backend-dump}
[3e4c22b39424be2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20bff4 +0  D7020000
[3e4c22b394258f8] jit-backend-dump}
[3e4c22b39428ff4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c013 +0  F0020000
[3e4c22b39429d50] jit-backend-dump}
[3e4c22b3942cf79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c027 +0  F8020000
[3e4c22b3942dccf] jit-backend-dump}
[3e4c22b39430e6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c03b +0  00030000
[3e4c22b39431bcd] jit-backend-dump}
[3e4c22b39434c5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c048 +0  0F030000
[3e4c22b394359bb] jit-backend-dump}
[3e4c22b39438abb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c05e +0  15030000
[3e4c22b394397cd] jit-backend-dump}
[3e4c22b3943c884] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c076 +0  19030000
[3e4c22b3943d596] jit-backend-dump}
[3e4c22b39440622] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c08c +0  1F030000
[3e4c22b3944130a] jit-backend-dump}
[3e4c22b39444374] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c09f +0  28030000
[3e4c22b39445053] jit-backend-dump}
[3e4c22b3944817b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c0b0 +0  33030000
[3e4c22b39448e7b] jit-backend-dump}
[3e4c22b3944bee8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c0c8 +0  37030000
[3e4c22b3944cbd3] jit-backend-dump}
[3e4c22b3944fc5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c0d1 +0  4A030000
[3e4c22b3945091e] jit-backend-dump}
[3e4c22b39453992] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c0e3 +0  54030000
[3e4c22b39454698] jit-backend-dump}
[3e4c22b39457712] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c0f0 +0  63030000
[3e4c22b394583e1] jit-backend-dump}
[3e4c22b3945b41a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c108 +0  67030000
[3e4c22b3945c0e6] jit-backend-dump}
[3e4c22b3945f435] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fb893 +0  E9060100
[3e4c22b39460150] jit-backend-dump}
[3e4c22b39463ff0] jit-backend}
[3e4c22b39467c3a] {jit-log-opt-bridge
# bridge out of Guard 0x4a7cf50 with 100 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x647ad40>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x69a4728>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x69a4770>) [p0, p1]
debug_merge_point(0, 0, 'lst')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16616448, descr=<Guard0x647ada0>) [p0, p1]
+310: guard_class(p0, 16437896, descr=<Guard0x69a47b8>) [p0, p1]
+324: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+335: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x69a4800>) [p0, p1]
+344: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+344: guard_not_invalidated(descr=<Guard0x69a4848>) [p0, p1]
+344: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+348: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+352: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)')
+356: guard_nonnull_class(p12, 16478824, descr=<Guard0x647ae00>) [p0, p1]
+375: guard_nonnull_class(p13, 16470384, descr=<Guard0x647ae60>) [p0, p1]
+395: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+406: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x69a4890>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+415: guard_class(p14, 16437896, descr=<Guard0x69a48d8>) [p0, p1]
+428: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+432: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x647aec0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+450: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+450: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+454: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+458: p25 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+462: guard_class(p25, 16505296, descr=<Guard0x69a4920>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+474: p27 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+478: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x647af20>) [p0, p1]
+496: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x647af80>) [p0, p1]
+515: i30 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+519: i31 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+523: i32 = int_eq(i30, i31)
+526: guard_true(i32, descr=<Guard0x69a4968>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+532: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+537: guard_nonnull_class(p33, 16616448, descr=<Guard0x647afe0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+556: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+559: guard_true(i36, descr=<Guard0x69a49b0>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+565: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x647b040>) [p0, p1]
+583: i38 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+587: i39 = int_eq(i31, i38)
+590: guard_true(i39, descr=<Guard0x69a49f8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+596: p40 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+601: guard_nonnull_class(p40, ConstClass(W_Vector), descr=<Guard0x647b0a0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+620: p42 = new_with_vtable(descr=<SizeDescr 32>)
+664: p43 = new_with_vtable(descr=<SizeDescr 40>)
+675: setfield_gc(p43, p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+686: setfield_gc(p43, ConstPtr(ptr44), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+690: setfield_gc(p43, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+694: setfield_gc(p43, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+698: p45 = new_with_vtable(descr=<SizeDescr 48>)
+710: p46 = new_with_vtable(descr=<SizeDescr 32>)
+723: setfield_gc(p46, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+731: p49 = new_array_clear(4, descr=<ArrayP 8>)
+757: setarrayitem_gc(p49, 0, ConstPtr(ptr51), descr=<ArrayP 8>)
+761: setarrayitem_gc(p49, 1, p40, descr=<ArrayP 8>)
+765: setarrayitem_gc(p49, 2, p40, descr=<ArrayP 8>)
+769: setarrayitem_gc(p49, 3, p40, descr=<ArrayP 8>)
+773: setfield_gc(p46, p49, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+784: setfield_gc(p46, ConstPtr(ptr55), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+788: setfield_gc(p42, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+792: setfield_gc(p42, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+803: setfield_gc(p45, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+808: setfield_gc(p45, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+813: setfield_gc(p45, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+818: setfield_gc(p45, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+823: setfield_gc(p42, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+827: setfield_gc(p45, p46, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+832: jump(p42, p45, descr=TargetToken(59469520))
+864: --end of the loop--
[3e4c22b394c0657] jit-log-opt-bridge}
[3e4c22b39f8160b] {jit-backend
[3e4c22b39fe3788] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c5e
[3e4c22b39feb789] jit-backend-dump}
[3e4c22b39ff7535] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c6a4 +0  25000000
[3e4c22b39ff8a80] jit-backend-dump}
[3e4c22b39ffcc56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c8f5 +0  25000000
[3e4c22b39ffdb6d] jit-backend-dump}
[3e4c22b3a001090] {jit-backend-addr
bridge out of Guard 0x3cec608 has address 0x7f4a5c20c6a0 to 0x7f4a5c20c8f0
       gc table: 0x7f4a5c20c5e0
    jump target: 0x7f4a5c20c6a0
         resops: 0x7f4a5c20c6ae
       failures: 0x7f4a5c20c8f0
            end: 0x7f4a5c20cb2b
[3e4c22b3a0035af] jit-backend-addr}
[3e4c22b3a006b4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c6be +0  71020000
[3e4c22b3a0079cb] jit-backend-dump}
[3e4c22b3a00ad07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c6cb +0  80020000
[3e4c22b3a00ba0a] jit-backend-dump}
[3e4c22b3a00eb0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c6db +0  8C020000
[3e4c22b3a00f872] jit-backend-dump}
[3e4c22b3a0128fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c6f2 +0  91020000
[3e4c22b3a0135ef] jit-backend-dump}
[3e4c22b3a016589] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c6fe +0  A1020000
[3e4c22b3a0172a8] jit-backend-dump}
[3e4c22b3a01a267] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c712 +0  A9020000
[3e4c22b3a01af64] jit-backend-dump}
[3e4c22b3a01e2c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c732 +0  C1020000
[3e4c22b3a01efa0] jit-backend-dump}
[3e4c22b3a02209d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c745 +0  CA020000
[3e4c22b3a022d97] jit-backend-dump}
[3e4c22b3a025da3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c759 +0  D2020000
[3e4c22b3a026aa3] jit-backend-dump}
[3e4c22b3a029a9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c767 +0  E0020000
[3e4c22b3a02a793] jit-backend-dump}
[3e4c22b3a02d718] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c77f +0  E4020000
[3e4c22b3a02e421] jit-backend-dump}
[3e4c22b3a031375] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c796 +0  E9020000
[3e4c22b3a03206c] jit-backend-dump}
[3e4c22b3a035000] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c7ad +0  EE020000
[3e4c22b3a035d00] jit-backend-dump}
[3e4c22b3a038c66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c7c4 +0  F3020000
[3e4c22b3a039982] jit-backend-dump}
[3e4c22b3a03c8f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c7da +0  F9020000
[3e4c22b3a03d613] jit-backend-dump}
[3e4c22b3a040564] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c7f1 +0  FE020000
[3e4c22b3a041276] jit-backend-dump}
[3e4c22b3a0441e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20c80b +0  00030000
[3e4c22b3a044efb] jit-backend-dump}
[3e4c22b3a0481a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d684e +0  4E5E0300
[3e4c22b3a048eeb] jit-backend-dump}
[3e4c22b3a04cd1f] jit-backend}
[3e4c22b3a0508ac] {jit-log-opt-bridge
# bridge out of Guard 0x3cec608 with 62 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x647b100>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull(p3, descr=<Guard0x69a4a88>) [p0, p1]
+246: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+249: guard_true(i5, descr=<Guard0x69a4ad0>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
+255: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+259: guard_nonnull_class(p6, 16470384, descr=<Guard0x647b160>) [p0, p1]
+278: guard_class(p0, 16437896, descr=<Guard0x69a4b18>) [p0, p1]
+290: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+301: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x69a4b60>) [p0, p1]
+310: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+310: guard_not_invalidated(descr=<Guard0x69a4ba8>) [p0, p1]
+310: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+314: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+318: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
+322: guard_nonnull_class(p12, 16478072, descr=<Guard0x647b1c0>) [p0, p1]
+342: guard_nonnull_class(p13, 16470384, descr=<Guard0x647b220>) [p0, p1]
+361: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+372: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x69a4bf0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+381: guard_class(p14, 16435920, descr=<Guard0x69a4c38>) [p0, p1]
+395: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+400: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x647b280>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+419: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+423: guard_nonnull_class(p22, 16470384, descr=<Guard0x647b2e0>) [p0, p1]
+442: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+446: guard_nonnull_class(p24, ConstClass(W_Symbol), descr=<Guard0x647b340>) [p0, p1]
+465: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+469: guard_nonnull_class(p26, 16470384, descr=<Guard0x647b3a0>) [p0, p1]
+488: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+492: guard_nonnull_class(p28, ConstClass(W_Symbol), descr=<Guard0x647b400>) [p0, p1]
+510: p30 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+514: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x647b460>) [p0, p1]
+533: p32 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+537: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+541: guard_nonnull_class(p33, 16616448, descr=<Guard0x647b4c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+559: p35 = new_with_vtable(descr=<SizeDescr 32>)
+603: p36 = new_with_vtable(descr=<SizeDescr 48>)
+614: p37 = new_with_vtable(descr=<SizeDescr 32>)
+625: setfield_gc(p37, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+633: p40 = new_array_clear(4, descr=<ArrayP 8>)
+666: setarrayitem_gc(p40, 0, ConstPtr(ptr42), descr=<ArrayP 8>)
+670: setarrayitem_gc(p40, 1, p24, descr=<ArrayP 8>)
+674: setarrayitem_gc(p40, 2, p28, descr=<ArrayP 8>)
+678: setarrayitem_gc(p40, 3, p30, descr=<ArrayP 8>)
+682: setfield_gc(p37, p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+693: setfield_gc(p37, ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+697: setfield_gc(p35, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+708: setfield_gc(p35, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+719: setfield_gc(p36, ConstPtr(ptr47), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+723: setfield_gc(p36, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+727: setfield_gc(p36, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+731: setfield_gc(p36, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+735: setfield_gc(p35, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+739: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+743: jump(p35, p36, descr=TargetToken(59469520))
+784: --end of the loop--
[3e4c22b3a0856a1] jit-log-opt-bridge}
[3e4c22b3a379666] {jit-backend
[3e4c22b3a416907] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cdb
[3e4c22b3a422733] jit-backend-dump}
[3e4c22b3a42d93f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cf14 +0  25000000
[3e4c22b3a42ee3a] jit-backend-dump}
[3e4c22b3a432aea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d2d5 +0  25000000
[3e4c22b3a433953] jit-backend-dump}
[3e4c22b3a436d4a] {jit-backend-addr
bridge out of Guard 0x59c8bc0 has address 0x7f4a5c20cf10 to 0x7f4a5c20d2d0
       gc table: 0x7f4a5c20cdb0
    jump target: 0x7f4a5c20cf10
         resops: 0x7f4a5c20cf1e
       failures: 0x7f4a5c20d2d0
            end: 0x7f4a5c20d71f
[3e4c22b3a438ff0] jit-backend-addr}
[3e4c22b3a43c4f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cf2e +0  E1030000
[3e4c22b3a43d320] jit-backend-dump}
[3e4c22b3a440537] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cf3b +0  F0030000
[3e4c22b3a44125e] jit-backend-dump}
[3e4c22b3a4443ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cf4b +0  FC030000
[3e4c22b3a4450fe] jit-backend-dump}
[3e4c22b3a448201] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cf62 +0  01040000
[3e4c22b3a448f10] jit-backend-dump}
[3e4c22b3a44c00a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cf70 +0  0F040000
[3e4c22b3a44cd2c] jit-backend-dump}
[3e4c22b3a44fd84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cf84 +0  17040000
[3e4c22b3a450a72] jit-backend-dump}
[3e4c22b3a453dd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cf9c +0  37040000
[3e4c22b3a454aab] jit-backend-dump}
[3e4c22b3a457c01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cfad +0  42040000
[3e4c22b3a4588fb] jit-backend-dump}
[3e4c22b3a45b90f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cfc1 +0  4A040000
[3e4c22b3a45c5fd] jit-backend-dump}
[3e4c22b3a45f61e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cfdf +0  48040000
[3e4c22b3a46030f] jit-backend-dump}
[3e4c22b3a463326] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20cff2 +0  51040000
[3e4c22b3a46403c] jit-backend-dump}
[3e4c22b3a46723a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d006 +0  59040000
[3e4c22b3a467f03] jit-backend-dump}
[3e4c22b3a46afd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d012 +0  69040000
[3e4c22b3a46bc8c] jit-backend-dump}
[3e4c22b3a46ecb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d028 +0  6F040000
[3e4c22b3a46f985] jit-backend-dump}
[3e4c22b3a47294a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d04b +0  68040000
[3e4c22b3a47363e] jit-backend-dump}
[3e4c22b3a4765ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d068 +0  67040000
[3e4c22b3a4772eb] jit-backend-dump}
[3e4c22b3a47a2b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d07a +0  71040000
[3e4c22b3a47afaa] jit-backend-dump}
[3e4c22b3a47df75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d08b +0  7C040000
[3e4c22b3a47ec60] jit-backend-dump}
[3e4c22b3a481c1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d09e +0  85040000
[3e4c22b3a4828de] jit-backend-dump}
[3e4c22b3a4858bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d0a8 +0  97040000
[3e4c22b3a4865b3] jit-backend-dump}
[3e4c22b3a4895d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d0b5 +0  A6040000
[3e4c22b3a48a2a0] jit-backend-dump}
[3e4c22b3a48d243] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d0c5 +0  B2040000
[3e4c22b3a48df12] jit-backend-dump}
[3e4c22b3a490ef6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d0db +0  B8040000
[3e4c22b3a491bc2] jit-backend-dump}
[3e4c22b3a494bb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d0f8 +0  B7040000
[3e4c22b3a495881] jit-backend-dump}
[3e4c22b3a498831] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d101 +0  CA040000
[3e4c22b3a4994f7] jit-backend-dump}
[3e4c22b3a49c49a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d113 +0  D4040000
[3e4c22b3a49d1e1] jit-backend-dump}
[3e4c22b3a4a0184] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d120 +0  E3040000
[3e4c22b3a4a0e53] jit-backend-dump}
[3e4c22b3a4a3e6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d12a +0  F5040000
[3e4c22b3a4a4b40] jit-backend-dump}
[3e4c22b3a4a7ade] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d133 +0  08050000
[3e4c22b3a4a87aa] jit-backend-dump}
[3e4c22b3a4ab756] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d144 +0  13050000
[3e4c22b3a4ac42c] jit-backend-dump}
[3e4c22b3a4af3cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d15a +0  19050000
[3e4c22b3a4b0095] jit-backend-dump}
[3e4c22b3a4b3073] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d163 +0  2C050000
[3e4c22b3a4b3d3f] jit-backend-dump}
[3e4c22b3a4b6d44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d17a +0  31050000
[3e4c22b3a4b7a3b] jit-backend-dump}
[3e4c22b3a4ba9d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d190 +0  37050000
[3e4c22b3a4bb6c3] jit-backend-dump}
[3e4c22b3a4be65d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d1a6 +0  3D050000
[3e4c22b3a4bf354] jit-backend-dump}
[3e4c22b3a4c2310] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d1bc +0  43050000
[3e4c22b3a4c3010] jit-backend-dump}
[3e4c22b3a4c6362] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f7a +0  928F0000
[3e4c22b3a4c704f] jit-backend-dump}
[3e4c22b3a4cafac] jit-backend}
[3e4c22b3a4ceb83] {jit-log-opt-bridge
# bridge out of Guard 0x59c8bc0 with 138 ops
[p0, p1]
+374: guard_class(p1, 16500016, descr=<Guard0x647b520>) [p0, p1]
+386: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+390: guard_nonnull(p3, descr=<Guard0x69a4cc8>) [p0, p1]
+406: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+409: guard_true(i5, descr=<Guard0x69a4d10>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+415: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+419: guard_nonnull_class(p6, 16616448, descr=<Guard0x647b580>) [p0, p1]
+438: guard_class(p0, 16437352, descr=<Guard0x69a4d58>) [p0, p1]
+452: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+463: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x69a4da0>) [p0, p1]
+472: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+472: guard_not_invalidated(descr=<Guard0x69a4de8>) [p0, p1]
+472: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+476: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x647b5e0>) [p0, p1]
+496: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+500: guard_class(p14, 16437896, descr=<Guard0x69a4e30>) [p0, p1]
+513: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+524: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x69a4e78>) [p0, p1]
+533: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+533: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+537: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+541: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+545: guard_nonnull_class(p19, 16478824, descr=<Guard0x647b640>) [p0, p1]
+563: guard_nonnull_class(p20, 16470384, descr=<Guard0x647b6a0>) [p0, p1]
+582: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+593: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x69a4ec0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+602: guard_class(p21, 16437896, descr=<Guard0x69a4f08>) [p0, p1]
+614: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+618: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x647b700>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+636: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+640: p30 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+644: p31 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+648: p32 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+659: guard_class(p32, 16505296, descr=<Guard0x69a4f50>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+671: p34 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+682: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x647b760>) [p0, p1]
+700: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x647b7c0>) [p0, p1]
+718: i37 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+722: i38 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+726: i39 = int_eq(i37, i38)
+729: guard_false(i39, descr=<Guard0x69a4f98>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+735: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x647b820>) [p0, p1]
+754: i42 = int_ge(i38, 0)
+758: guard_true(i42, descr=<Guard0x69a4fe0>) [p0, p1]
+764: i43 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+768: i44 = int_lt(i38, i43)
+771: guard_true(i44, descr=<Guard0x69a5028>) [p0, p1]
+777: p45 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+781: guard_class(p45, 16622984, descr=<Guard0x69a5070>) [p0, p1]
+793: p47 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+797: p48 = getarrayitem_gc_r(p47, i38, descr=<ArrayP 8>)
+802: guard_class(p48, 16470384, descr=<Guard0x69a50b8>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+815: p50 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+826: guard_nonnull_class(p50, 16616448, descr=<Guard0x647b880>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+844: i53 = instance_ptr_eq(p50, ConstPtr(ptr52))
+847: guard_true(i53, descr=<Guard0x69a5100>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+853: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x647b8e0>) [p0, p1]
+871: i55 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+875: i56 = int_eq(i38, i55)
+878: guard_false(i56, descr=<Guard0x69a5148>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+884: i58 = int_ge(i55, 0)
+888: guard_true(i58, descr=<Guard0x69a5190>) [p0, p1]
+894: i59 = int_lt(i55, i43)
+897: guard_true(i59, descr=<Guard0x69a51d8>) [p0, p1]
+903: p60 = getarrayitem_gc_r(p47, i55, descr=<ArrayP 8>)
+908: guard_class(p60, 16470384, descr=<Guard0x69a5220>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+920: p62 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+924: guard_nonnull_class(p62, 16616448, descr=<Guard0x647b940>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+942: i65 = instance_ptr_eq(p62, ConstPtr(ptr64))
+945: guard_true(i65, descr=<Guard0x69a5268>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+951: p66 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+955: guard_nonnull_class(p66, ConstClass(W_Symbol), descr=<Guard0x647b9a0>) [p0, p1]
+974: p68 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+978: guard_nonnull_class(p68, ConstClass(W_Vector), descr=<Guard0x647ba00>) [p0, p1]
+996: p70 = getfield_gc_r(p60, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1000: guard_nonnull_class(p70, ConstClass(W_Vector), descr=<Guard0x647ba60>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+1018: p72 = getfield_gc_r(p60, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1022: guard_nonnull_class(p72, 16616448, descr=<Guard0x647bac0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+1040: p74 = new_with_vtable(descr=<SizeDescr 32>)
+1087: p75 = new_with_vtable(descr=<SizeDescr 40>)
+1098: setfield_gc(p75, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1116: setfield_gc(p75, ConstPtr(ptr76), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1120: setfield_gc(p75, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1124: setfield_gc(p75, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1128: p77 = new_with_vtable(descr=<SizeDescr 24>)
+1139: setfield_gc(p77, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1143: setfield_gc(p77, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1147: p78 = new_with_vtable(descr=<SizeDescr 48>)
+1158: p79 = new_with_vtable(descr=<SizeDescr 32>)
+1170: setfield_gc(p79, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1179: p82 = new_array_clear(4, descr=<ArrayP 8>)
+1206: setarrayitem_gc(p82, 0, ConstPtr(ptr84), descr=<ArrayP 8>)
+1210: setarrayitem_gc(p82, 1, p66, descr=<ArrayP 8>)
+1214: setarrayitem_gc(p82, 2, p68, descr=<ArrayP 8>)
+1218: setarrayitem_gc(p82, 3, p70, descr=<ArrayP 8>)
+1222: setfield_gc(p79, p82, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1234: setfield_gc(p79, ConstPtr(ptr88), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1239: setfield_gc(p74, p72, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1243: setfield_gc(p74, p77, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1247: setfield_gc(p78, ConstPtr(ptr89), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1251: setfield_gc(p78, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1255: setfield_gc(p78, p79, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1259: setfield_gc(p78, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1270: setfield_gc(p78, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1281: setfield_gc(p74, p75, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1285: jump(p74, p78, descr=TargetToken(59469520))
+1312: --end of the loop--
[3e4c22b3a534f8a] jit-log-opt-bridge}
[3e4c22b3b261763] {jit-backend
[3e4c22b3b2ebc2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20d
[3e4c22b3b2f6c7b] jit-backend-dump}
[3e4c22b3b303b12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20da34 +0  25000000
[3e4c22b3b3052c7] jit-backend-dump}
[3e4c22b3b3093f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dd55 +0  25000000
[3e4c22b3b30a3df] jit-backend-dump}
[3e4c22b3b30d9e7] {jit-backend-addr
bridge out of Guard 0x3d737c0 has address 0x7f4a5c20da30 to 0x7f4a5c20dd50
       gc table: 0x7f4a5c20d910
    jump target: 0x7f4a5c20da30
         resops: 0x7f4a5c20da3e
       failures: 0x7f4a5c20dd50
            end: 0x7f4a5c20e0a3
[3e4c22b3b310174] jit-backend-addr}
[3e4c22b3b3137ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20da4e +0  41030000
[3e4c22b3b314723] jit-backend-dump}
[3e4c22b3b317a2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20da5b +0  50030000
[3e4c22b3b3187b5] jit-backend-dump}
[3e4c22b3b31b816] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20da6b +0  5C030000
[3e4c22b3b31c5a3] jit-backend-dump}
[3e4c22b3b31f792] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20da82 +0  61030000
[3e4c22b3b320503] jit-backend-dump}
[3e4c22b3b323671] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20da8e +0  71030000
[3e4c22b3b3243ab] jit-backend-dump}
[3e4c22b3b3273f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20daa2 +0  79030000
[3e4c22b3b32812e] jit-backend-dump}
[3e4c22b3b32b241] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dac2 +0  91030000
[3e4c22b3b32bf75] jit-backend-dump}
[3e4c22b3b32f004] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dad6 +0  99030000
[3e4c22b3b32fd53] jit-backend-dump}
[3e4c22b3b332cf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20daeb +0  A0030000
[3e4c22b3b333a25] jit-backend-dump}
[3e4c22b3b3369c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20daf8 +0  AF030000
[3e4c22b3b3376ed] jit-backend-dump}
[3e4c22b3b33a62c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20db0f +0  B4030000
[3e4c22b3b33b335] jit-backend-dump}
[3e4c22b3b33e2bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20db25 +0  BA030000
[3e4c22b3b33efc9] jit-backend-dump}
[3e4c22b3b341f0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20db38 +0  C3030000
[3e4c22b3b342c1a] jit-backend-dump}
[3e4c22b3b345ba2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20db4f +0  C8030000
[3e4c22b3b3468b4] jit-backend-dump}
[3e4c22b3b34980e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20db66 +0  CD030000
[3e4c22b3b34a530] jit-backend-dump}
[3e4c22b3b34d4a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20db77 +0  D8030000
[3e4c22b3b34e1a6] jit-backend-dump}
[3e4c22b3b3511a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20db8e +0  DD030000
[3e4c22b3b351eb1] jit-backend-dump}
[3e4c22b3b354e08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20db98 +0  EF030000
[3e4c22b3b355b0b] jit-backend-dump}
[3e4c22b3b358b14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dba5 +0  FE030000
[3e4c22b3b35981a] jit-backend-dump}
[3e4c22b3b35c76b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dbb7 +0  08040000
[3e4c22b3b35d474] jit-backend-dump}
[3e4c22b3b3603ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dbcc +0  0F040000
[3e4c22b3b3610ea] jit-backend-dump}
[3e4c22b3b36405f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dbe2 +0  15040000
[3e4c22b3b364d72] jit-backend-dump}
[3e4c22b3b367ca1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dbeb +0  28040000
[3e4c22b3b3689a7] jit-backend-dump}
[3e4c22b3b36b901] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dc02 +0  2D040000
[3e4c22b3b36c601] jit-backend-dump}
[3e4c22b3b36f549] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dc18 +0  33040000
[3e4c22b3b370249] jit-backend-dump}
[3e4c22b3b3731a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dc30 +0  37040000
[3e4c22b3b373ec2] jit-backend-dump}
[3e4c22b3b376de8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20dc46 +0  3D040000
[3e4c22b3b377b03] jit-backend-dump}
[3e4c22b3b37ad54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dca8f +0  9D0F0300
[3e4c22b3b37ba97] jit-backend-dump}
[3e4c22b3b37f9c0] jit-backend}
[3e4c22b3b3836ad] {jit-log-opt-bridge
# bridge out of Guard 0x3d737c0 with 102 ops
[p0, p1]
+310: guard_class(p1, 16500016, descr=<Guard0x647bb20>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+326: guard_nonnull(p3, descr=<Guard0x69a52f8>) [p0, p1]
+342: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+345: guard_true(i5, descr=<Guard0x69a5340>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
+351: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+355: guard_nonnull_class(p6, 16470384, descr=<Guard0x647bb80>) [p0, p1]
+374: guard_class(p0, 16437896, descr=<Guard0x69a5388>) [p0, p1]
+386: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+397: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x69a53d0>) [p0, p1]
+406: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+406: guard_not_invalidated(descr=<Guard0x69a5418>) [p0, p1]
+406: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+410: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+414: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
+418: guard_nonnull_class(p12, 16478824, descr=<Guard0x647bbe0>) [p0, p1]
+438: guard_nonnull_class(p13, 16470384, descr=<Guard0x647bc40>) [p0, p1]
+458: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+470: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x69a5460>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
+479: guard_class(p14, 16435920, descr=<Guard0x69a54a8>) [p0, p1]
+492: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+496: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x647bca0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
+515: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+520: p23 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+525: guard_class(p23, 16505296, descr=<Guard0x69a54f0>) [p0, p1]
+537: guard_nonnull_class(p22, 16470384, descr=<Guard0x647bd00>) [p0, p1]
debug_merge_point(0, 0, '(= nc2 nc3)')
+556: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+561: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x647bd60>) [p0, p1]
+579: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+584: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x647bdc0>) [p0, p1]
+602: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+606: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+610: i32 = int_eq(i30, i31)
+613: guard_false(i32, descr=<Guard0x69a5538>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+619: p33 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+624: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x647be20>) [p0, p1]
+642: i36 = int_ge(i31, 0)
+646: guard_true(i36, descr=<Guard0x69a5580>) [p0, p1]
+652: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+656: i38 = int_lt(i31, i37)
+659: guard_true(i38, descr=<Guard0x69a55c8>) [p0, p1]
+665: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+669: guard_class(p39, 16622984, descr=<Guard0x69a5610>) [p0, p1]
+683: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+687: p42 = getarrayitem_gc_r(p41, i31, descr=<ArrayP 8>)
+692: guard_class(p42, 16470384, descr=<Guard0x69a5658>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+704: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+708: guard_nonnull_class(p44, 16616448, descr=<Guard0x647be80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+726: i47 = instance_ptr_eq(p44, ConstPtr(ptr46))
+729: guard_true(i47, descr=<Guard0x69a56a0>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+735: p48 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+739: guard_nonnull_class(p48, ConstClass(W_Symbol), descr=<Guard0x647bee0>) [p0, p1]
+758: p50 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+762: guard_nonnull_class(p50, ConstClass(W_Symbol), descr=<Guard0x647bf40>) [p0, p1]
+780: p52 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+784: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x647bfa0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+804: p54 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+808: guard_nonnull_class(p54, 16616448, descr=<Guard0x708c020>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+826: p56 = new_with_vtable(descr=<SizeDescr 32>)
+873: p57 = new_with_vtable(descr=<SizeDescr 40>)
+884: setfield_gc(p57, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+895: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+899: setfield_gc(p57, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+903: setfield_gc(p57, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+907: p59 = new_with_vtable(descr=<SizeDescr 48>)
+919: p60 = new_with_vtable(descr=<SizeDescr 32>)
+930: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+938: p63 = new_array_clear(4, descr=<ArrayP 8>)
+971: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+975: setarrayitem_gc(p63, 1, p48, descr=<ArrayP 8>)
+979: setarrayitem_gc(p63, 2, p50, descr=<ArrayP 8>)
+983: setarrayitem_gc(p63, 3, p52, descr=<ArrayP 8>)
+987: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+998: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1002: setfield_gc(p56, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1013: setfield_gc(p56, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1024: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1028: setfield_gc(p59, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1032: setfield_gc(p59, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1036: setfield_gc(p59, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1040: setfield_gc(p56, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1044: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1048: jump(p56, p59, descr=TargetToken(59469520))
+1088: --end of the loop--
[3e4c22b3b3d7001] jit-log-opt-bridge}
[3e4c22b3b98e201] {jit-backend
[3e4c22b3ba1264e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e
[3e4c22b3ba1b104] jit-backend-dump}
[3e4c22b3ba265b6] {jit-backend-addr
Loop 165 ((let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5214 (quotient AppRand49 3))) has address 0x7f4a5c20e36d to 0x7f4a5c20e600 (bootstrap 0x7f4a5c20e2e0)
       gc table: 0x7f4a5c20e220
       function: 0x7f4a5c20e2e0
         resops: 0x7f4a5c20e36d
       failures: 0x7f4a5c20e600
            end: 0x7f4a5c20e85f
[3e4c22b3ba29e0d] jit-backend-addr}
[3e4c22b3ba2e574] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e384 +0  A7020000
[3e4c22b3ba2fa2c] jit-backend-dump}
[3e4c22b3ba33062] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e39a +0  AD020000
[3e4c22b3ba33f83] jit-backend-dump}
[3e4c22b3ba373cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e3ad +0  D2020000
[3e4c22b3ba381ae] jit-backend-dump}
[3e4c22b3ba3b36f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e3c1 +0  DA020000
[3e4c22b3ba3c094] jit-backend-dump}
[3e4c22b3ba3f20c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e3d5 +0  E2020000
[3e4c22b3ba3ffd2] jit-backend-dump}
[3e4c22b3ba4317b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e3eb +0  E8020000
[3e4c22b3ba43ea9] jit-backend-dump}
[3e4c22b3ba46f66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e3f8 +0  F7020000
[3e4c22b3ba47c41] jit-backend-dump}
[3e4c22b3ba4acc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e40f +0  FC020000
[3e4c22b3ba4b9c4] jit-backend-dump}
[3e4c22b3ba4e9fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e420 +0  07030000
[3e4c22b3ba4f71c] jit-backend-dump}
[3e4c22b3ba5286c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e42c +0  17030000
[3e4c22b3ba53562] jit-backend-dump}
[3e4c22b3ba566bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e45e +0  01030000
[3e4c22b3ba573ec] jit-backend-dump}
[3e4c22b3ba5a5ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e467 +0  14030000
[3e4c22b3ba5b2db] jit-backend-dump}
[3e4c22b3ba5e3ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e477 +0  20030000
[3e4c22b3ba5f0e8] jit-backend-dump}
[3e4c22b3ba62146] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e483 +0  30030000
[3e4c22b3ba62e58] jit-backend-dump}
[3e4c22b3ba65eb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e499 +0  36030000
[3e4c22b3ba66bcc] jit-backend-dump}
[3e4c22b3ba69d93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e4d2 +0  19030000
[3e4c22b3ba6aad9] jit-backend-dump}
[3e4c22b3ba6db5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e4de +0  29030000
[3e4c22b3ba6e884] jit-backend-dump}
[3e4c22b3ba7185b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e4e7 +0  3C030000
[3e4c22b3ba7258f] jit-backend-dump}
[3e4c22b3ba755a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20e4f0 +0  4F030000
[3e4c22b3ba762e4] jit-backend-dump}
[3e4c22b3ba7a193] jit-backend}
[3e4c22b3ba7e17f] {jit-log-opt-loop
# Loop 165 ((let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5214 (quotient AppRand49 3))) : entry bridge with 115 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5214 (quotient AppRand49 3))')
+341: guard_class(p1, 16435920, descr=<Guard0x708c080>) [p0, p1]
+360: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+364: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x708c0e0>) [p0, p1]
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+382: guard_not_invalidated(descr=<Guard0x69a5730>) [p0, p1]
+382: guard_class(p0, 16503536, descr=<Guard0x69a5778>) [p0, p1]
+401: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+405: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+409: guard_class(p7, 16478448, descr=<Guard0x69a57c0>) [p0, p1]
+421: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+432: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x69a5808>) [p0, p1]
+441: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+445: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x708c140>) [p0, p1]
+463: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+467: i14 = int_lt(i6, i13)
+470: guard_false(i14, descr=<Guard0x69a5850>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))))')
debug_merge_point(0, 0, '(+ m5210 1)')
+476: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+480: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x708c1a0>) [p0, p1]
+499: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+503: i19 = int_add_ovf(i17, 1)
+510: guard_no_overflow(descr=<Guard0x69a5898>) [p0, p1]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
+516: i20 = int_add_ovf(i13, i6)
+522: guard_no_overflow(descr=<Guard0x69a58e0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))')
debug_merge_point(0, 0, '(- (quotient AppRand38 2) AppRand39)')
+528: i22 = int_rshift(i19, 1)
+534: i24 = int_lshift(i22, 1)
+540: i26 = int_xor(i19, 2)
+547: i28 = int_rshift(i26, 63)
+551: i29 = int_ne(i24, i19)
+563: i30 = int_and(i28, i29)
+566: i31 = int_add(i22, i30)
+569: i32 = int_sub_ovf(i31, i20)
+572: guard_no_overflow(descr=<Guard0x69a5928>) [p0, p1]
debug_merge_point(0, 0, '(let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))')
debug_merge_point(0, 0, '(max nc25224 AppRand40)')
+578: i33 = int_lt(i6, i32)
+581: guard_false(i33, descr=<Guard0x69a5970>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))')
debug_merge_point(0, 0, '(lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))')
+587: p34 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+591: guard_class(p34, 16505296, descr=<Guard0x69a59b8>) [p0, p1]
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
debug_merge_point(0, 0, '(let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))')
debug_merge_point(0, 0, '(- m5210 AppRand47)')
+603: i36 = int_sub_ovf(i17, i20)
+609: guard_no_overflow(descr=<Guard0x69a5a00>) [p0, p1]
debug_merge_point(0, 0, '(loop35236 lst5222 (quotient AppRand48 2))')
+615: p37 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+619: guard_nonnull_class(p37, 16616448, descr=<Guard0x708c200>) [p0, p1]
+637: i40 = int_eq(i36, -9223372036854775808)
+637: i42 = int_rshift(i36, 1)
+643: i44 = int_lshift(i42, 1)
+649: i46 = int_xor(i36, 2)
+656: i48 = int_rshift(i46, 63)
+660: i49 = int_ne(i44, i36)
+679: i50 = int_and(i48, i49)
+682: i51 = int_add(i42, i50)
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
debug_merge_point(0, 0, '(< nc35240 start)')
+685: i52 = int_lt(i51, i6)
+688: guard_false(i52, descr=<Guard0x69a5a48>) [p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+694: i53 = int_add_ovf(i6, i51)
+700: guard_no_overflow(descr=<Guard0x69a5a90>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+706: i54 = int_add_ovf(i13, i53)
+709: guard_no_overflow(descr=<Guard0x69a5ad8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+715: i55 = int_sub_ovf(i17, i54)
+718: guard_no_overflow(descr=<Guard0x69a5b20>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+724: i57 = int_sub(i51, 1)
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+728: p58 = new_with_vtable(descr=<SizeDescr 32>)
+775: p59 = new_with_vtable(descr=<SizeDescr 64>)
+786: setfield_gc(p59, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+797: setfield_gc(p59, ConstPtr(ptr60), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+801: p61 = new_with_vtable(descr=<SizeDescr 16>)
+813: setfield_gc(p61, i6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+817: setfield_gc(p59, p61, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+821: setfield_gc(p59, p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+825: p62 = new_with_vtable(descr=<SizeDescr 16>)
+836: setfield_gc(p62, i6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+840: setfield_gc(p59, p62, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+844: setfield_gc(p59, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+848: setfield_gc(p59, p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+852: p63 = new_with_vtable(descr=<SizeDescr 24>)
+863: p64 = new_with_vtable(descr=<SizeDescr 32>)
+874: setfield_gc(p64, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+882: p67 = new_array(4, descr=<ArrayS 8>)
+901: setarrayitem_gc(p67, 0, i13, descr=<ArrayS 8>)
+905: setarrayitem_gc(p67, 1, i6, descr=<ArrayS 8>)
+909: setarrayitem_gc(p67, 2, i51, descr=<ArrayS 8>)
+913: setarrayitem_gc(p67, 3, i55, descr=<ArrayS 8>)
+917: setfield_gc(p64, p67, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+928: setfield_gc(p64, ConstPtr(ptr72), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+932: setfield_gc(p63, p64, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+936: setfield_gc(p63, p37, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+947: setfield_gc(p58, i57, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+951: setfield_gc(p58, p59, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+955: setfield_gc(p58, p63, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+959: jump(p58, p1, descr=TargetToken(61027280))
+992: --end of the loop--
[3e4c22b3bad1986] jit-log-opt-loop}
[3e4c22b3c5865a7] {jit-backend
[3e4c22b3c60c695] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ea
[3e4c22b3c615fb7] jit-backend-dump}
[3e4c22b3c621cba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20eb24 +0  25000000
[3e4c22b3c623441] jit-backend-dump}
[3e4c22b3c6275be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20edf5 +0  25000000
[3e4c22b3c628522] jit-backend-dump}
[3e4c22b3c62b987] {jit-backend-addr
bridge out of Guard 0x47abd00 has address 0x7f4a5c20eb20 to 0x7f4a5c20edf0
       gc table: 0x7f4a5c20ea20
    jump target: 0x7f4a5c20eb20
         resops: 0x7f4a5c20eb2e
       failures: 0x7f4a5c20edf0
            end: 0x7f4a5c20f0ef
[3e4c22b3c62df0c] jit-backend-addr}
[3e4c22b3c63161b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20eb3e +0  F1020000
[3e4c22b3c63241f] jit-backend-dump}
[3e4c22b3c635623] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20eb55 +0  F6020000
[3e4c22b3c63633c] jit-backend-dump}
[3e4c22b3c639417] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20eb65 +0  02030000
[3e4c22b3c63a105] jit-backend-dump}
[3e4c22b3c63d469] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20eb71 +0  12030000
[3e4c22b3c63e138] jit-backend-dump}
[3e4c22b3c641220] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20eb89 +0  16030000
[3e4c22b3c641eef] jit-backend-dump}
[3e4c22b3c645004] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20eb9b +0  20030000
[3e4c22b3c645ce3] jit-backend-dump}
[3e4c22b3c648d7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ebb0 +0  27030000
[3e4c22b3c649a50] jit-backend-dump}
[3e4c22b3c64ca40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ebd0 +0  23030000
[3e4c22b3c64d734] jit-backend-dump}
[3e4c22b3c6508e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ebe7 +0  44030000
[3e4c22b3c6515ab] jit-backend-dump}
[3e4c22b3c654690] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ebfa +0  4D030000
[3e4c22b3c65535f] jit-backend-dump}
[3e4c22b3c6583b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec0b +0  58030000
[3e4c22b3c6590b7] jit-backend-dump}
[3e4c22b3c65c143] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec23 +0  5C030000
[3e4c22b3c65ce28] jit-backend-dump}
[3e4c22b3c65fe70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec3a +0  61030000
[3e4c22b3c660b5e] jit-backend-dump}
[3e4c22b3c663baa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec43 +0  74030000
[3e4c22b3c664882] jit-backend-dump}
[3e4c22b3c667902] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec56 +0  7D030000
[3e4c22b3c6685ec] jit-backend-dump}
[3e4c22b3c66b641] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec63 +0  8C030000
[3e4c22b3c66c323] jit-backend-dump}
[3e4c22b3c66f36e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec76 +0  95030000
[3e4c22b3c67005c] jit-backend-dump}
[3e4c22b3c67308f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec80 +0  A7030000
[3e4c22b3c673d74] jit-backend-dump}
[3e4c22b3c676e00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec8d +0  B6030000
[3e4c22b3c677aea] jit-backend-dump}
[3e4c22b3c67ab2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ec9d +0  C2030000
[3e4c22b3c67b802] jit-backend-dump}
[3e4c22b3c67e85d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ecb3 +0  C8030000
[3e4c22b3c67f54e] jit-backend-dump}
[3e4c22b3c6825b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ecca +0  CD030000
[3e4c22b3c6832a6] jit-backend-dump}
[3e4c22b3c6862e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ece0 +0  D3030000
[3e4c22b3c686fd0] jit-backend-dump}
[3e4c22b3c68a022] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20ecf7 +0  D8030000
[3e4c22b3c68ad4a] jit-backend-dump}
[3e4c22b3c68e0b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f972a +0  F2530100
[3e4c22b3c68edc6] jit-backend-dump}
[3e4c22b3c692ebd] jit-backend}
[3e4c22b3c696a04] {jit-log-opt-bridge
# bridge out of Guard 0x47abd00 with 105 ops
[p0, p1]
+278: guard_class(p1, 16500016, descr=<Guard0x708c260>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+294: guard_nonnull_class(p3, 16470384, descr=<Guard0x708c2c0>) [p0, p1]
+320: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+323: guard_false(i6, descr=<Guard0x69a5bb0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+329: guard_class(p0, 16435920, descr=<Guard0x69a5bf8>) [p0, p1]
+341: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+345: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x708c320>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+365: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p10, 16478824, descr=<Guard0x69a5c40>) [p0, p1]
+383: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+395: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x69a5c88>) [p0, p1]
+404: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+409: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+414: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+419: p17 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+424: guard_class(p17, 16505296, descr=<Guard0x69a5cd0>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+436: guard_not_invalidated(descr=<Guard0x69a5d18>) [p0, p1]
+436: p19 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+441: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x708c380>) [p0, p1]
+459: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x708c3e0>) [p0, p1]
+478: i22 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+482: i23 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+486: i24 = int_eq(i22, i23)
+489: guard_true(i24, descr=<Guard0x69a5d60>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+495: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+499: guard_nonnull_class(p25, 16616448, descr=<Guard0x708c440>) [p0, p1]
+519: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+523: guard_nonnull_class(p27, 16470384, descr=<Guard0x708c4a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+542: i30 = instance_ptr_eq(p25, ConstPtr(ptr29))
+545: guard_true(i30, descr=<Guard0x69a5da8>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+551: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x708c500>) [p0, p1]
+570: i32 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+574: i33 = int_eq(i23, i32)
+577: guard_false(i33, descr=<Guard0x69a5df0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+583: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x708c560>) [p0, p1]
+602: i36 = int_ge(i32, 0)
+606: guard_true(i36, descr=<Guard0x69a5e38>) [p0, p1]
+612: i37 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+616: i38 = int_lt(i32, i37)
+619: guard_true(i38, descr=<Guard0x69a5e80>) [p0, p1]
+625: p39 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+629: guard_class(p39, 16622984, descr=<Guard0x69a5ec8>) [p0, p1]
+641: p41 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+645: p42 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+650: guard_class(p42, 16470384, descr=<Guard0x69a5f10>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+663: p44 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+667: guard_nonnull_class(p44, ConstClass(W_Symbol), descr=<Guard0x708c5c0>) [p0, p1]
+686: p46 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+690: guard_nonnull_class(p46, ConstClass(W_Vector), descr=<Guard0x708c620>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+708: p48 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+712: guard_nonnull_class(p48, 16616448, descr=<Guard0x708c680>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+731: p50 = new_with_vtable(descr=<SizeDescr 32>)
+775: p51 = new_with_vtable(descr=<SizeDescr 40>)
+786: setfield_gc(p51, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+797: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+801: setfield_gc(p51, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+805: setfield_gc(p51, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+809: p53 = new_with_vtable(descr=<SizeDescr 48>)
+820: p54 = new_with_vtable(descr=<SizeDescr 32>)
+831: setfield_gc(p54, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+839: p57 = new_array_clear(4, descr=<ArrayP 8>)
+867: setarrayitem_gc(p57, 0, ConstPtr(ptr59), descr=<ArrayP 8>)
+872: setarrayitem_gc(p57, 1, p44, descr=<ArrayP 8>)
+877: setarrayitem_gc(p57, 2, p44, descr=<ArrayP 8>)
+882: setarrayitem_gc(p57, 3, p46, descr=<ArrayP 8>)
+887: setfield_gc(p54, p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+898: setfield_gc(p54, ConstPtr(ptr63), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+902: setfield_gc(p50, p48, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+906: setfield_gc(p53, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+910: setfield_gc(p50, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+914: setfield_gc(p50, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+918: setfield_gc(p53, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+922: setfield_gc(p53, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+933: setfield_gc(p53, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+937: setfield_gc(p53, p54, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+941: jump(p50, p53, descr=TargetToken(59469520))
+976: --end of the loop--
[3e4c22b3c6e744d] jit-log-opt-bridge}
[3e4c22b3f2fada8] {jit-backend
[3e4c22b3f399793] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f
[3e4c22b3f3a30e2] jit-backend-dump}
[3e4c22b3f3c00ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f2d4 +0  28000000
[3e4c22b3f3c17f4] jit-backend-dump}
[3e4c22b3f3c5ce9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f555 +0  28000000
[3e4c22b3f3c6c59] jit-backend-dump}
[3e4c22b3f3ca386] {jit-backend-addr
bridge out of Guard 0x38f0ec0 has address 0x7f4a5c20f2d0 to 0x7f4a5c20f550
       gc table: 0x7f4a5c20f220
    jump target: 0x7f4a5c20f2d0
         resops: 0x7f4a5c20f2de
       failures: 0x7f4a5c20f550
            end: 0x7f4a5c20f753
[3e4c22b3f3ccccc] jit-backend-addr}
[3e4c22b3f3d032f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f2ee +0  A1020000
[3e4c22b3f3d124a] jit-backend-dump}
[3e4c22b3f3d44cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f302 +0  A9020000
[3e4c22b3f3d5191] jit-backend-dump}
[3e4c22b3f3d8570] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f321 +0  C2020000
[3e4c22b3f3d9285] jit-backend-dump}
[3e4c22b3f3dc3ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f334 +0  CB020000
[3e4c22b3f3dd0ea] jit-backend-dump}
[3e4c22b3f3e01c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f348 +0  D3020000
[3e4c22b3f3e0eb6] jit-backend-dump}
[3e4c22b3f3e3fcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f356 +0  E1020000
[3e4c22b3f3e4c8c] jit-backend-dump}
[3e4c22b3f3e7d27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f36d +0  E6020000
[3e4c22b3f3e8a02] jit-backend-dump}
[3e4c22b3f3ebae4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f385 +0  EA020000
[3e4c22b3f3ec800] jit-backend-dump}
[3e4c22b3f3ef86a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f39d +0  EE020000
[3e4c22b3f3f0548] jit-backend-dump}
[3e4c22b3f3f366a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f3b5 +0  F2020000
[3e4c22b3f3f4318] jit-backend-dump}
[3e4c22b3f3f741e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f3cd +0  F6020000
[3e4c22b3f3f8115] jit-backend-dump}
[3e4c22b3f3fb1e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f3e5 +0  FA020000
[3e4c22b3f3fbe8b] jit-backend-dump}
[3e4c22b3f3fef1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f3fc +0  FF020000
[3e4c22b3f3ffbf9] jit-backend-dump}
[3e4c22b3f402cbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f414 +0  03030000
[3e4c22b3f403985] jit-backend-dump}
[3e4c22b3f4069ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f42e +0  05030000
[3e4c22b3f4076e6] jit-backend-dump}
[3e4c22b3f40ac5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c7206 +0  C6800400
[3e4c22b3f40b918] jit-backend-dump}
[3e4c22b3f40feb8] jit-backend}
[3e4c22b3f413ae4] {jit-log-opt-bridge
# bridge out of Guard 0x38f0ec0 with 65 ops
[p0, p1, p2, p3, p4]
+198: guard_class(p0, 16437896, descr=<Guard0x77aa020>) [p0, p1, p2, p3, p4]
+210: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+221: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x77a6068>) [p0, p1, p2, p3, p4]
+230: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+230: guard_not_invalidated(descr=<Guard0x77a60b0>) [p0, p1, p2, p3, p4]
+230: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+234: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+238: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (cons AppRand15 AppRand16)')
+242: guard_nonnull_class(p9, 16478448, descr=<Guard0x77aa080>) [p0, p1, p2, p3, p4]
+261: guard_nonnull_class(p10, 16470384, descr=<Guard0x77aa0e0>) [p0, p1, p2, p3, p4]
+280: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+291: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x77a60f8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+300: guard_class(p11, 16437352, descr=<Guard0x77a6140>) [p0, p1, p2, p3, p4]
+314: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+318: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x77aa140>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+337: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+341: guard_nonnull_class(p19, 16470384, descr=<Guard0x77aa1a0>) [p0, p1, p2, p3, p4]
+361: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+366: guard_nonnull_class(p21, ConstClass(W_Symbol), descr=<Guard0x77aa200>) [p0, p1, p2, p3, p4]
+385: p23 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+389: guard_nonnull_class(p23, 16470384, descr=<Guard0x77aa260>) [p0, p1, p2, p3, p4]
+409: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+414: guard_nonnull_class(p25, ConstClass(W_Symbol), descr=<Guard0x77aa2c0>) [p0, p1, p2, p3, p4]
+433: p27 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+437: guard_nonnull_class(p27, 16470384, descr=<Guard0x77aa320>) [p0, p1, p2, p3, p4]
+457: p29 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+462: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x77aa380>) [p0, p1, p2, p3, p4]
+480: p31 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+484: guard_nonnull_class(p31, ConstClass(W_Vector), descr=<Guard0x77aa3e0>) [p0, p1, p2, p3, p4]
+504: p33 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+508: p34 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+512: guard_nonnull_class(p34, 16470384, descr=<Guard0x77aa440>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+530: p36 = new_with_vtable(descr=<SizeDescr 32>)
+577: p37 = new_with_vtable(descr=<SizeDescr 24>)
+588: setfield_gc(p37, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+606: p38 = new_with_vtable(descr=<SizeDescr 24>)
+617: setfield_gc(p38, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+621: setfield_gc(p38, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+625: setfield_gc(p37, p38, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+629: p39 = new_with_vtable(descr=<SizeDescr 48>)
+640: p40 = new_with_vtable(descr=<SizeDescr 32>)
+651: setfield_gc(p40, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+659: p43 = new_array_clear(5, descr=<ArrayP 8>)
+692: setarrayitem_gc(p43, 0, ConstPtr(ptr45), descr=<ArrayP 8>)
+696: setarrayitem_gc(p43, 1, p21, descr=<ArrayP 8>)
+700: setarrayitem_gc(p43, 2, p25, descr=<ArrayP 8>)
+704: setarrayitem_gc(p43, 3, p29, descr=<ArrayP 8>)
+708: setarrayitem_gc(p43, 4, p31, descr=<ArrayP 8>)
+712: setfield_gc(p40, p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+723: setfield_gc(p40, ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+734: setfield_gc(p39, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+746: setfield_gc(p39, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+751: setfield_gc(p39, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+756: setfield_gc(p39, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+761: setfield_gc(p36, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+772: setfield_gc(p36, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+776: setfield_gc(p36, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+780: setfield_gc(p39, p40, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+785: jump(p36, p39, descr=TargetToken(59469840))
+816: --end of the loop--
[3e4c22b3f455bb4] jit-log-opt-bridge}
[3e4c22b3f98fa1d] {jit-backend
[3e4c22b3fa63c74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20f8d
[3e4c22b3fa701e4] jit-backend-dump}
[3e4c22b3fa7b38d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fa14 +0  25000000
[3e4c22b3fa7c8d2] jit-backend-dump}
[3e4c22b3fa80799] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fe85 +0  25000000
[3e4c22b3fa816fa] jit-backend-dump}
[3e4c22b3fa84b43] {jit-backend-addr
bridge out of Guard 0x38f0920 has address 0x7f4a5c20fa10 to 0x7f4a5c20fe80
       gc table: 0x7f4a5c20f8d0
    jump target: 0x7f4a5c20fa10
         resops: 0x7f4a5c20fa1e
       failures: 0x7f4a5c20fe80
            end: 0x7f4a5c21010f
[3e4c22b3fa86f25] jit-backend-addr}
[3e4c22b3fa8a598] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fa2e +0  91040000
[3e4c22b3fa8b3a2] jit-backend-dump}
[3e4c22b3fa8e718] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fa42 +0  99040000
[3e4c22b3fa8f471] jit-backend-dump}
[3e4c22b3fa9278f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fa59 +0  BA040000
[3e4c22b3fa934c9] jit-backend-dump}
[3e4c22b3fa96646] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fa6a +0  C5040000
[3e4c22b3fa97368] jit-backend-dump}
[3e4c22b3fa9a4f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fa7e +0  CD040000
[3e4c22b3fa9b1fb] jit-backend-dump}
[3e4c22b3fa9e33c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fa93 +0  D4040000
[3e4c22b3fa9efdd] jit-backend-dump}
[3e4c22b3faa207e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20faaa +0  D9040000
[3e4c22b3faa2d41] jit-backend-dump}
[3e4c22b3faa5e0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fabc +0  E3040000
[3e4c22b3faa6ac7] jit-backend-dump}
[3e4c22b3faa9b65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fad3 +0  E8040000
[3e4c22b3faaa81f] jit-backend-dump}
[3e4c22b3faad8df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20faff +0  D8040000
[3e4c22b3faae5b7] jit-backend-dump}
[3e4c22b3fab1662] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fb1a +0  D9040000
[3e4c22b3fab231b] jit-backend-dump}
[3e4c22b3fab53b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fb2e +0  E1040000
[3e4c22b3fab6080] jit-backend-dump}
[3e4c22b3fab9112] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fb3e +0  ED040000
[3e4c22b3fab9dce] jit-backend-dump}
[3e4c22b3fabce3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fb54 +0  F3040000
[3e4c22b3fabdae0] jit-backend-dump}
[3e4c22b3fac0f57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fb62 +0  01050000
[3e4c22b3fac1c14] jit-backend-dump}
[3e4c22b3fac4dc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fb76 +0  09050000
[3e4c22b3fac5a58] jit-backend-dump}
[3e4c22b3fac8b33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fb83 +0  18050000
[3e4c22b3fac97ce] jit-backend-dump}
[3e4c22b3facc876] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fb90 +0  27050000
[3e4c22b3facd50e] jit-backend-dump}
[3e4c22b3fad05da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fba7 +0  2C050000
[3e4c22b3fad1272] jit-backend-dump}
[3e4c22b3fad42f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c20fbb4 +0  3B050000
[3e4c22b3fad4fbb] jit-backend-dump}
[3e4c22b3fad8334] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c6214 +0  F8970400
[3e4c22b3fad9000] jit-backend-dump}
[3e4c22b3fadcff6] jit-backend}
[3e4c22b3fae0c4a] {jit-log-opt-bridge
# bridge out of Guard 0x38f0920 with 181 ops
[p0, p1, p2, p3, p4]
+342: guard_class(p0, 16437352, descr=<Guard0x77aa4a0>) [p0, p1, p2, p3, p4]
+354: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+365: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x77a6218>) [p0, p1, p2, p3, p4]
+374: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+374: guard_not_invalidated(descr=<Guard0x77a6260>) [p0, p1, p2, p3, p4]
+374: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+378: guard_nonnull_class(p9, 16616448, descr=<Guard0x77aa500>) [p0, p1, p2, p3, p4]
+397: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(vector AppRand27 AppRand28) from (cons AppRand15 AppRand16)')
+401: guard_class(p11, 16435920, descr=<Guard0x77a62a8>) [p0, p1, p2, p3, p4]
+414: p13 = getfield_gc_r(p11, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+425: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x77a62f0>) [p0, p1, p2, p3, p4]
+434: p15 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+438: p16 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand50 (vector-ref x 0)][AppRand51 (vector-ref x 1)]) (+ (length AppRand50) (length AppRand51)))')
+442: guard_class(p16, 16435208, descr=<Guard0x77a6338>) [p0, p1, p2, p3, p4]
+455: p18 = getfield_gc_r(p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+459: guard_nonnull_class(p18, ConstClass(ForwardLink), descr=<Guard0x77aa560>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(vector-ref x 0)')
debug_merge_point(0, 0, '(vector-ref x 1)')
debug_merge_point(0, 0, '(+ (length AppRand50) (length AppRand51))')
+478: guard_nonnull_class(p1, 16470384, descr=<Guard0x77aa5c0>) [p0, p1, p2, p3, p4]
+496: p21 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+500: guard_nonnull_class(p21, 16470384, descr=<Guard0x77aa620>) [p0, p1, p2, p3, p4]
+519: i24 = call_i(ConstClass(elidable_length), p21, descr=<Calli 8 r EF=4>)
+548: guard_no_exception(descr=<Guard0x77aa680>) [p16, i24, p9, p15, p1, p2, p3, None]
+563: i27 = int_add(i24, 3)
+563: p28 = getfield_gc_r(p16, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+581: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x77a6380>) [p16, i24, p9, p15, p1, p2, p3, None]
+590: p30 = getfield_gc_r(p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+594: p31 = getfield_gc_r(p16, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop5282 (add1 i5284)) from (+ (length AppRand50) (length AppRand51))')
+598: guard_class(p30, 16504944, descr=<Guard0x77a63c8>) [p16, i24, p9, p15, p1, p2, p3, None]
+610: p33 = getfield_gc_r(p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+614: guard_class(p33, 16499664, descr=<Guard0x77a6410>) [p16, i24, p9, p15, p1, p2, p3, None]
+626: p35 = getfield_gc_r(p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+630: guard_nonnull_class(p35, 16510992, descr=<Guard0x77aa6e0>) [p16, i24, p9, p15, p1, p2, p3, None]
+648: i37 = getfield_gc_i(p30, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+652: i39 = int_add_ovf(i37, 1)
+656: guard_no_overflow(descr=<Guard0x77a6458>) [p16, i24, p9, p15, p1, p2, p3, None]
+662: p40 = getfield_gc_r(p35, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+673: guard_value(p40, ConstPtr(ptr41), descr=<Guard0x77a64a0>) [p16, i24, p9, p15, p1, p2, p3, None]
+682: p42 = getfield_gc_r(p35, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+686: i43 = instance_ptr_eq(p33, p42)
+689: guard_true(i43, descr=<Guard0x77a64e8>) [p16, i24, p9, p15, p1, p2, p3, None]
debug_merge_point(0, 0, '(let ([if12 (> i5284 paraffins-iters)]) (if if12 (begin (void) (void)) (begin (nb 17) (doloop5282 (add1 i5284))))) from (doloop5282 (add1 i5284))')
+695: guard_class(p31, 16528368, descr=<Guard0x77a6530>) [p16, i24, p9, p15, p1, p2, p3, None]
+708: p45 = getfield_gc_r(p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+712: guard_nonnull_class(p45, ConstClass(ForwardLink), descr=<Guard0x77aa740>) [p16, i24, p9, p15, p1, p2, p3, None]
debug_merge_point(0, 0, '(> i5284 paraffins-iters)')
+731: i48 = int_gt(i39, 2000)
+738: guard_false(i48, descr=<Guard0x77a6578>) [p16, i24, p9, p15, p1, p2, p3, None]
debug_merge_point(0, 0, '(if if12 (begin (void) (void)) (begin (nb 17) (doloop5282 (add1 i5284))))')
debug_merge_point(0, 0, '(begin (nb 17) (doloop5282 (add1 i5284)))')
debug_merge_point(0, 0, '(nb 17)')
+744: p49 = getfield_gc_r(p33, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([x (gen n5268)]) (let ([AppRand50 (vector-ref x 0)][AppRand51 (vector-ref x 1)]) (+ (length AppRand50) (length AppRand51))))')
debug_merge_point(0, 0, '(gen n5268)')
debug_merge_point(0, 0, '(let ([n/2 (quotient n 2)]) (let ([AppRand0 (+ n/2 1)]) (let ([radicals (make-vector AppRand0 '('H))]) (let ([rads-of-size (lambda (n4967) (let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))))][bcp-generator (lambda (j) (if (odd? j) '() (let ([loop15035 (lambda (rads15037 lst5039) (if (null? rads15037) lst5039 (let ([loop25043 (lambda (rads25045 lst5047) (if (null? rads25045) lst5047 (let ([AppRand11 (vector 'BCP (car rads15037) (car rads25045))][AppRand12 (loop25043 (cdr rads25045) lst5047)]) (cons AppRand11 AppRand12))))][rads15037 rads15037][AppRand13 (loop15035 (cdr rads15037) lst5039)]) (loop25043 rads15037 AppRand13))))][AppRand14 (vector-ref radicals (quotient j 2))]) (loop15035 AppRand14 '()))))][ccp-generator (lambda (j5065) (let ([loop15067 (lambda (ps5069 lst5071) (if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))))][AppRand25 (- j5065 1)]) (let ([AppRand26 (four-partitions AppRand25)]) (loop15067 AppRand26 '()))))]) (let ([loop (lambda (i) (let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))))]) (loop 1))))))')
debug_merge_point(0, 0, '(quotient n 2)')
debug_merge_point(0, 0, '(let ([AppRand0 (+ n/2 1)]) (let ([radicals (make-vector AppRand0 '('H))]) (let ([rads-of-size (lambda (n4967) (let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))))][bcp-generator (lambda (j) (if (odd? j) '() (let ([loop15035 (lambda (rads15037 lst5039) (if (null? rads15037) lst5039 (let ([loop25043 (lambda (rads25045 lst5047) (if (null? rads25045) lst5047 (let ([AppRand11 (vector 'BCP (car rads15037) (car rads25045))][AppRand12 (loop25043 (cdr rads25045) lst5047)]) (cons AppRand11 AppRand12))))][rads15037 rads15037][AppRand13 (loop15035 (cdr rads15037) lst5039)]) (loop25043 rads15037 AppRand13))))][AppRand14 (vector-ref radicals (quotient j 2))]) (loop15035 AppRand14 '()))))][ccp-generator (lambda (j5065) (let ([loop15067 (lambda (ps5069 lst5071) (if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))))][AppRand25 (- j5065 1)]) (let ([AppRand26 (four-partitions AppRand25)]) (loop15067 AppRand26 '()))))]) (let ([loop (lambda (i) (let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))))]) (loop 1)))))')
debug_merge_point(0, 0, '(+ n/2 1)')
debug_merge_point(0, 0, '(let ([radicals (make-vector AppRand0 '('H))]) (let ([rads-of-size (lambda (n4967) (let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))))][bcp-generator (lambda (j) (if (odd? j) '() (let ([loop15035 (lambda (rads15037 lst5039) (if (null? rads15037) lst5039 (let ([loop25043 (lambda (rads25045 lst5047) (if (null? rads25045) lst5047 (let ([AppRand11 (vector 'BCP (car rads15037) (car rads25045))][AppRand12 (loop25043 (cdr rads25045) lst5047)]) (cons AppRand11 AppRand12))))][rads15037 rads15037][AppRand13 (loop15035 (cdr rads15037) lst5039)]) (loop25043 rads15037 AppRand13))))][AppRand14 (vector-ref radicals (quotient j 2))]) (loop15035 AppRand14 '()))))][ccp-generator (lambda (j5065) (let ([loop15067 (lambda (ps5069 lst5071) (if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))))][AppRand25 (- j5065 1)]) (let ([AppRand26 (four-partitions AppRand25)]) (loop15067 AppRand26 '()))))]) (let ([loop (lambda (i) (let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))))]) (loop 1))))')
debug_merge_point(0, 0, '(make-vector AppRand0 '('H))')
debug_merge_point(0, 0, '(let ([rads-of-size (lambda (n4967) (let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))))][bcp-generator (lambda (j) (if (odd? j) '() (let ([loop15035 (lambda (rads15037 lst5039) (if (null? rads15037) lst5039 (let ([loop25043 (lambda (rads25045 lst5047) (if (null? rads25045) lst5047 (let ([AppRand11 (vector 'BCP (car rads15037) (car rads25045))][AppRand12 (loop25043 (cdr rads25045) lst5047)]) (cons AppRand11 AppRand12))))][rads15037 rads15037][AppRand13 (loop15035 (cdr rads15037) lst5039)]) (loop25043 rads15037 AppRand13))))][AppRand14 (vector-ref radicals (quotient j 2))]) (loop15035 AppRand14 '()))))][ccp-generator (lambda (j5065) (let ([loop15067 (lambda (ps5069 lst5071) (if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))))][AppRand25 (- j5065 1)]) (let ([AppRand26 (four-partitions AppRand25)]) (loop15067 AppRand26 '()))))]) (let ([loop (lambda (i) (let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))))]) (loop 1)))')
debug_merge_point(0, 0, '(lambda (n4967) (let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))))')
debug_merge_point(0, 0, '(lambda (j) (if (odd? j) '() (let ([loop15035 (lambda (rads15037 lst5039) (if (null? rads15037) lst5039 (let ([loop25043 (lambda (rads25045 lst5047) (if (null? rads25045) lst5047 (let ([AppRand11 (vector 'BCP (car rads15037) (car rads25045))][AppRand12 (loop25043 (cdr rads25045) lst5047)]) (cons AppRand11 AppRand12))))][rads15037 rads15037][AppRand13 (loop15035 (cdr rads15037) lst5039)]) (loop25043 rads15037 AppRand13))))][AppRand14 (vector-ref radicals (quotient j 2))]) (loop15035 AppRand14 '()))))')
debug_merge_point(0, 0, '(lambda (j5065) (let ([loop15067 (lambda (ps5069 lst5071) (if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))))][AppRand25 (- j5065 1)]) (let ([AppRand26 (four-partitions AppRand25)]) (loop15067 AppRand26 '()))))')
debug_merge_point(0, 0, '(let ([loop (lambda (i) (let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))))]) (loop 1))')
debug_merge_point(0, 0, '(lambda (i) (let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))))')
debug_merge_point(0, 0, '(loop 1)')
debug_merge_point(0, 0, '(let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))) from (loop 1)')
debug_merge_point(0, 0, '(> i n/2)')
debug_merge_point(0, 0, '(if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))')
debug_merge_point(0, 0, '(let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30)))')
debug_merge_point(0, 0, '(rads-of-size i)')
debug_merge_point(0, 0, '(let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '())))')
debug_merge_point(0, 0, '(lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))')
debug_merge_point(0, 0, '(- n4967 1)')
debug_merge_point(0, 0, '(let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))')
debug_merge_point(0, 0, '(three-partitions AppRand9)')
debug_merge_point(0, 0, '(let ([loop15177 (lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))]) (loop15177 '() (quotient m 3)))')
debug_merge_point(0, 0, '(lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))')
debug_merge_point(0, 0, '(loop15177 '() (quotient m 3))')
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, '(let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))')
debug_merge_point(0, 0, 'lst5179')
debug_merge_point(0, 0, '(lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))')
debug_merge_point(0, 0, '(- m nc15181)')
debug_merge_point(0, 0, '(loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(< nc25189 nc15181)')
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+744: p50 = new_with_vtable(descr=<SizeDescr 32>)
+791: p51 = new_with_vtable(descr=<SizeDescr 24>)
+802: p52 = new_with_vtable(descr=<SizeDescr 32>)
+814: setfield_gc(p52, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+822: p55 = new_array(3, descr=<ArrayS 8>)
+841: setarrayitem_gc(p55, 0, 0, descr=<ArrayS 8>)
+849: setarrayitem_gc(p55, 1, 0, descr=<ArrayS 8>)
+857: setarrayitem_gc(p55, 2, 0, descr=<ArrayS 8>)
+865: setfield_gc(p52, p55, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+876: setfield_gc(p52, ConstPtr(ptr62), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+880: setfield_gc(p51, p52, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+891: setfield_gc(p51, ConstPtr(ptr63), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+895: p64 = new_with_vtable(descr=<SizeDescr 40>)
+907: p65 = new_with_vtable(descr=<SizeDescr 32>)
+925: setfield_gc(p65, ConstPtr(ptr66), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+929: setfield_gc(p65, 0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+937: p68 = new_with_vtable(descr=<SizeDescr 32>)
+948: setfield_gc(p68, ConstPtr(ptr66), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+959: setfield_gc(p68, ConstPtr(ptr69), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+963: p70 = new_with_vtable(descr=<SizeDescr 32>)
+974: setfield_gc(p70, 9, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+982: p73 = new_array_clear(1, descr=<ArrayP 8>)
+1022: setarrayitem_gc(p73, 0, ConstPtr(ptr75), descr=<ArrayP 8>)
+1026: setfield_gc(p70, p73, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1037: setfield_gc(p70, ConstPtr(ptr76), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1041: setfield_gc(p68, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1045: setfield_gc(p65, p68, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1049: p77 = new_with_vtable(descr=<SizeDescr 40>)
+1060: setfield_gc(p77, p45, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1064: p78 = new_with_vtable(descr=<SizeDescr 24>)
+1075: p79 = new_with_vtable(descr=<SizeDescr 72>)
+1087: setfield_gc(p79, ConstPtr(ptr80), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1105: setfield_gc(p79, ConstPtr(ptr81), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1109: setfield_gc(p79, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+1113: p82 = new_with_vtable(descr=<SizeDescr 32>)
+1124: setfield_gc(p82, ConstPtr(ptr83), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1142: setfield_gc(p82, ConstPtr(ptr84), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1146: setfield_gc(p82, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1150: setfield_gc(p79, p82, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+1154: p85 = new_with_vtable(descr=<SizeDescr 32>)
+1165: setfield_gc(p85, ConstPtr(ptr66), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1176: setfield_gc(p85, ConstPtr(ptr86), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1180: setfield_gc(p85, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1184: setfield_gc(p79, p85, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+1195: setfield_gc(p79, ConstPtr(ptr87), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+1199: p88 = new_with_vtable(descr=<SizeDescr 32>)
+1210: setfield_gc(p88, ConstPtr(ptr89), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1221: setfield_gc(p88, ConstPtr(ptr90), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1225: setfield_gc(p88, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1229: setfield_gc(p79, p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+1240: setfield_gc(p79, ConstPtr(ptr91), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+1244: setfield_gc(p78, p79, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1248: setfield_gc(p78, 1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1256: setfield_gc(p77, p78, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1260: p93 = new_with_vtable(descr=<SizeDescr 40>)
+1271: setfield_gc(p93, p45, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1282: setfield_gc(p93, ConstPtr(ptr94), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1286: p95 = new_with_vtable(descr=<SizeDescr 40>)
+1297: setfield_gc(p95, p45, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1301: p96 = new_with_vtable(descr=<SizeDescr 24>)
+1313: setfield_gc(p96, p33, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1317: setfield_gc(p96, i39, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1321: setfield_gc(p95, p96, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1325: setfield_gc(p95, p31, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1329: setfield_gc(p95, ConstPtr(ptr97), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1333: setfield_gc(p93, p95, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1337: setfield_gc(p93, ConstPtr(ptr98), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1341: setfield_gc(p77, p93, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1352: setfield_gc(p77, ConstPtr(ptr99), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1363: setfield_gc(p64, ConstPtr(ptr100), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1375: setfield_gc(p64, p65, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1380: setfield_gc(p64, p77, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1385: setfield_gc(p64, p45, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1397: setfield_gc(p50, ConstPtr(ptr101), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1408: setfield_gc(p50, -1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1416: setfield_gc(p50, p51, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1427: jump(p50, p64, descr=TargetToken(61029280))
+1456: --end of the loop--
[3e4c22b3fb89ca0] jit-log-opt-bridge}
[3e4c22b3fd5c874] {jit-backend
[3e4c22b3fe0c2c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b3fe1527d] jit-backend-dump}
[3e4c22b3fe20354] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2102c4 +0  28000000
[3e4c22b3fe2189c] jit-backend-dump}
[3e4c22b3fe2595e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2105f5 +0  28000000
[3e4c22b3fe26879] jit-backend-dump}
[3e4c22b3fe29d7a] {jit-backend-addr
bridge out of Guard 0x3f670a0 has address 0x7f4a5c2102c0 to 0x7f4a5c2105f0
       gc table: 0x7f4a5c210230
    jump target: 0x7f4a5c2102c0
         resops: 0x7f4a5c2102ce
       failures: 0x7f4a5c2105f0
            end: 0x7f4a5c2107d7
[3e4c22b3fe2c262] jit-backend-addr}
[3e4c22b3fe2f95c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2102e4 +0  4B030000
[3e4c22b3fe30797] jit-backend-dump}
[3e4c22b3fe33c86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2102f2 +0  75030000
[3e4c22b3fe349de] jit-backend-dump}
[3e4c22b3fe37c5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210302 +0  81030000
[3e4c22b3fe3897f] jit-backend-dump}
[3e4c22b3fe3baaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210314 +0  8B030000
[3e4c22b3fe3c7f6] jit-backend-dump}
[3e4c22b3fe3f8b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210329 +0  92030000
[3e4c22b3fe405aa] jit-backend-dump}
[3e4c22b3fe435f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21033e +0  99030000
[3e4c22b3fe442cb] jit-backend-dump}
[3e4c22b3fe4746a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210364 +0  8F030000
[3e4c22b3fe48152] jit-backend-dump}
[3e4c22b3fe4b19a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21037f +0  90030000
[3e4c22b3fe4be7c] jit-backend-dump}
[3e4c22b3fe4eed4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210391 +0  9A030000
[3e4c22b3fe4fbb5] jit-backend-dump}
[3e4c22b3fe52bcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21039f +0  A8030000
[3e4c22b3fe538d9] jit-backend-dump}
[3e4c22b3fe56922] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2103b7 +0  AC030000
[3e4c22b3fe575fa] jit-backend-dump}
[3e4c22b3fe5a61e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2103c7 +0  B8030000
[3e4c22b3fe5b309] jit-backend-dump}
[3e4c22b3fe5e339] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2103eb +0  B0030000
[3e4c22b3fe5f014] jit-backend-dump}
[3e4c22b3fe6205a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210401 +0  B6030000
[3e4c22b3fe62d3b] jit-backend-dump}
[3e4c22b3fe66050] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e7c57 +0  65860200
[3e4c22b3fe66d34] jit-backend-dump}
[3e4c22b3fe6ac0e] jit-backend}
[3e4c22b3fe6e87a] {jit-log-opt-bridge
# bridge out of Guard 0x3f670a0 with 97 ops
[p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+166: guard_nonnull_class(p0, ConstClass(W_Vector), descr=<Guard0x77aa7a0>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+184: guard_not_invalidated(descr=<Guard0x77a65c0>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(0, 0, '(let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24)))')
debug_merge_point(0, 0, '(vector-ref p5075 0)')
+184: i14 = getfield_gc_i(p0, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+188: i16 = int_lt(0, i14)
+192: guard_true(i16, descr=<Guard0x77a6608>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+198: p17 = getfield_gc_r(p0, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+202: guard_class(p17, 16623792, descr=<Guard0x77a6650>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+214: p19 = getfield_gc_r(p0, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+218: i21 = getarrayitem_gc_i(p19, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 1)')
+222: i23 = int_lt(1, i14)
+226: guard_true(i23, descr=<Guard0x77a6698>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+232: i25 = getarrayitem_gc_i(p19, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 2)')
+243: i27 = int_lt(2, i14)
+247: guard_true(i27, descr=<Guard0x77a66e0>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+253: i29 = getarrayitem_gc_i(p19, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p5075 3)')
+264: i31 = int_lt(3, i14)
+268: guard_true(i31, descr=<Guard0x77a6728>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+274: i33 = getarrayitem_gc_i(p19, 3, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))')
debug_merge_point(0, 0, '(lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))')
+278: p34 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+303: guard_value(p34, ConstPtr(ptr35), descr=<Guard0x77a6770>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+312: p36 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+323: p37 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+327: guard_class(p37, 16505296, descr=<Guard0x77a67b8>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(0, 0, '(vector-ref radicals nc15078)')
+339: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x77aa800>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+357: i41 = int_ge(i21, 0)
+365: guard_true(i41, descr=<Guard0x77a6800>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+371: i42 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+382: i43 = int_lt(i21, i42)
+389: guard_true(i43, descr=<Guard0x77a6848>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+395: p44 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+399: guard_class(p44, 16622984, descr=<Guard0x77a6890>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
+411: p46 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+415: p47 = getarrayitem_gc_r(p46, i21, descr=<ArrayP 8>)
+434: guard_class(p47, 16470384, descr=<Guard0x77a68d8>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(0, 0, '(loop15067 (cdr ps5069) lst5071)')
+447: p49 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+451: guard_nonnull_class(p49, 16616448, descr=<Guard0x77aa860>) [p0, i1, i2, i3, i4, p5, p6, p7, p8, p9, p10, p11, p12]
debug_merge_point(0, 0, '(if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 (cdr ps5069) lst5071)')
+469: p51 = new_with_vtable(descr=<SizeDescr 32>)
+519: p52 = new_with_vtable(descr=<SizeDescr 56>)
+530: p53 = new_with_vtable(descr=<SizeDescr 56>)
+548: setfield_gc(p53, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+566: setfield_gc(p53, p8, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+570: setfield_gc(p53, p7, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+581: setfield_gc(p53, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+585: p55 = new_with_vtable(descr=<SizeDescr 64>)
+603: setfield_gc(p55, p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+614: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+618: setfield_gc(p55, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+622: p57 = new_with_vtable(descr=<SizeDescr 16>)
+634: setfield_gc(p57, i4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+638: setfield_gc(p55, p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+642: p58 = new_with_vtable(descr=<SizeDescr 16>)
+653: setfield_gc(p58, i3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+657: setfield_gc(p55, p58, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+661: p59 = new_with_vtable(descr=<SizeDescr 16>)
+672: setfield_gc(p59, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+676: setfield_gc(p55, p59, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+680: p60 = new_with_vtable(descr=<SizeDescr 16>)
+691: setfield_gc(p60, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+695: setfield_gc(p55, p60, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+699: setfield_gc(p53, p55, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+703: setfield_gc(p53, p6, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+707: p61 = new_with_vtable(descr=<SizeDescr 64>)
+718: setfield_gc(p61, p37, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+729: setfield_gc(p61, ConstPtr(ptr62), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+733: setfield_gc(p61, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+737: p63 = new_with_vtable(descr=<SizeDescr 16>)
+748: setfield_gc(p63, i21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+759: setfield_gc(p61, p63, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+763: p64 = new_with_vtable(descr=<SizeDescr 16>)
+775: setfield_gc(p64, i33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+787: setfield_gc(p61, p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+791: p65 = new_with_vtable(descr=<SizeDescr 16>)
+803: setfield_gc(p65, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+814: setfield_gc(p61, p65, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+818: p66 = new_with_vtable(descr=<SizeDescr 16>)
+830: setfield_gc(p66, i29, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+842: setfield_gc(p61, p66, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+846: setfield_gc(p51, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+865: setfield_gc(p51, p49, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+870: setfield_gc(p51, p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+882: setfield_gc(p52, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+893: setfield_gc(p52, p37, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+897: setfield_gc(p52, p53, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p52, ConstPtr(ptr67), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p52, p61, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+909: setfield_gc(p52, p47, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+920: jump(p51, p52, descr=TargetToken(64566704))
+960: --end of the loop--
[3e4c22b3fec1f67] jit-log-opt-bridge}
[3e4c22b411058df] {jit-backend
[3e4c22b411a5114] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2108e
[3e4c22b411af344] jit-backend-dump}
[3e4c22b411d04c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210974 +0  28000000
[3e4c22b411d1a36] jit-backend-dump}
[3e4c22b411d5e30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210b85 +0  28000000
[3e4c22b411d6f65] jit-backend-dump}
[3e4c22b411da71f] {jit-backend-addr
bridge out of Guard 0x3ceda00 has address 0x7f4a5c210970 to 0x7f4a5c210b80
       gc table: 0x7f4a5c2108e0
    jump target: 0x7f4a5c210970
         resops: 0x7f4a5c21097e
       failures: 0x7f4a5c210b80
            end: 0x7f4a5c210d2f
[3e4c22b411dcdd0] jit-backend-addr}
[3e4c22b411e03d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21098e +0  31020000
[3e4c22b411e134b] jit-backend-dump}
[3e4c22b411e474e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2109a2 +0  39020000
[3e4c22b411e54a0] jit-backend-dump}
[3e4c22b411e89fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2109c1 +0  52020000
[3e4c22b411e9731] jit-backend-dump}
[3e4c22b411ec9a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2109d4 +0  5B020000
[3e4c22b411ed6c8] jit-backend-dump}
[3e4c22b411f0934] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2109e8 +0  63020000
[3e4c22b411f161f] jit-backend-dump}
[3e4c22b411f4820] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2109f6 +0  71020000
[3e4c22b411f54f8] jit-backend-dump}
[3e4c22b411f86c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210a0d +0  76020000
[3e4c22b411f93d8] jit-backend-dump}
[3e4c22b411fc5b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210a2d +0  72020000
[3e4c22b411fd290] jit-backend-dump}
[3e4c22b4120044a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210a43 +0  78020000
[3e4c22b412011a3] jit-backend-dump}
[3e4c22b41204395] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210a56 +0  81020000
[3e4c22b41205073] jit-backend-dump}
[3e4c22b41208265] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210a6e +0  85020000
[3e4c22b41208f5f] jit-backend-dump}
[3e4c22b4120c129] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210a84 +0  8B020000
[3e4c22b4120ce17] jit-backend-dump}
[3e4c22b41210481] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d8ec6 +0  A67A0300
[3e4c22b41211190] jit-backend-dump}
[3e4c22b41215bbd] jit-backend}
[3e4c22b41219952] {jit-log-opt-bridge
# bridge out of Guard 0x3ceda00 with 67 ops
[p0, p1, p2, p3, p4]
+166: guard_class(p0, 16437896, descr=<Guard0x708c6e0>) [p0, p1, p2, p3, p4]
+178: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+189: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x69a44a0>) [p0, p1, p2, p3, p4]
+198: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+198: guard_not_invalidated(descr=<Guard0x69a46e0>) [p0, p1, p2, p3, p4]
+198: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+202: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+206: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop25089 AppRand23 AppRand24) from (cons AppRand15 AppRand16)')
+210: guard_nonnull_class(p9, 16479200, descr=<Guard0x708c740>) [p0, p1, p2, p3, p4]
+229: guard_nonnull_class(p10, 16470384, descr=<Guard0x708c7a0>) [p0, p1, p2, p3, p4]
+248: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+259: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x69a4a40>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 AppRand23 AppRand24)')
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+268: guard_class(p11, 16437352, descr=<Guard0x69a4c80>) [p0, p1, p2, p3, p4]
+282: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+286: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x708c800>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+305: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+309: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+313: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+317: p22 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+321: p23 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+325: guard_class(p23, 16505296, descr=<Guard0x69a52b0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+337: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+341: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x708c860>) [p0, p1, p2, p3, p4]
+359: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x708c8c0>) [p0, p1, p2, p3, p4]
+378: i28 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+389: i29 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+393: i30 = int_eq(i28, i29)
+396: guard_true(i30, descr=<Guard0x69a56e8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, 'rads15091')
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+402: p31 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+406: guard_nonnull_class(p31, 16616448, descr=<Guard0x708c920>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+424: p33 = new_with_vtable(descr=<SizeDescr 32>)
+471: p34 = new_with_vtable(descr=<SizeDescr 24>)
+482: setfield_gc(p34, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+500: p35 = new_with_vtable(descr=<SizeDescr 24>)
+511: setfield_gc(p35, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+515: setfield_gc(p35, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+519: setfield_gc(p34, p35, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+523: p36 = new_with_vtable(descr=<SizeDescr 56>)
+534: p37 = new_with_vtable(descr=<SizeDescr 64>)
+545: setfield_gc(p37, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+556: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+560: setfield_gc(p37, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+564: setfield_gc(p37, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+568: setfield_gc(p37, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+572: setfield_gc(p37, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+576: setfield_gc(p37, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+587: setfield_gc(p36, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+591: setfield_gc(p36, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+595: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+599: setfield_gc(p36, p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+603: setfield_gc(p36, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+607: setfield_gc(p36, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+611: setfield_gc(p33, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+629: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+633: setfield_gc(p33, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+637: jump(p33, p36, descr=TargetToken(61027440))
+672: --end of the loop--
[3e4c22b41263987] jit-log-opt-bridge}
[3e4c22b413b2392] {jit-backend
[3e4c22b41405524] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210e
[3e4c22b4140d84a] jit-backend-dump}
[3e4c22b41417cc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210eb4 +0  28000000
[3e4c22b414191ac] jit-backend-dump}
[3e4c22b4141d017] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211065 +0  28000000
[3e4c22b4141de95] jit-backend-dump}
[3e4c22b414213f2] {jit-backend-addr
bridge out of Guard 0x3da27b8 has address 0x7f4a5c210eb0 to 0x7f4a5c211060
       gc table: 0x7f4a5c210e30
    jump target: 0x7f4a5c210eb0
         resops: 0x7f4a5c210ebe
       failures: 0x7f4a5c211060
            end: 0x7f4a5c21120f
[3e4c22b414237bb] jit-backend-addr}
[3e4c22b41426ec7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210ece +0  D1010000
[3e4c22b41427cb6] jit-backend-dump}
[3e4c22b4142affe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210ee5 +0  D6010000
[3e4c22b4142bcca] jit-backend-dump}
[3e4c22b4142f0f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210efc +0  DB010000
[3e4c22b4142ff24] jit-backend-dump}
[3e4c22b4143349f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210f14 +0  DF010000
[3e4c22b41434193] jit-backend-dump}
[3e4c22b414373a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210f28 +0  E7010000
[3e4c22b4143806f] jit-backend-dump}
[3e4c22b4143b2e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210f34 +0  F7010000
[3e4c22b4143bfae] jit-backend-dump}
[3e4c22b4143f144] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210f4b +0  FC010000
[3e4c22b4143fe19] jit-backend-dump}
[3e4c22b41442f35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210f64 +0  FF010000
[3e4c22b41443bfb] jit-backend-dump}
[3e4c22b41446e8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210f7a +0  21020000
[3e4c22b41447dc8] jit-backend-dump}
[3e4c22b4144af61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210f90 +0  27020000
[3e4c22b4144bc39] jit-backend-dump}
[3e4c22b4144ed30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210fa1 +0  32020000
[3e4c22b4144fa05] jit-backend-dump}
[3e4c22b41452ab3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c210fb7 +0  38020000
[3e4c22b4145377f] jit-backend-dump}
[3e4c22b41456b5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1df68d +0  1F180300
[3e4c22b4145783c] jit-backend-dump}
[3e4c22b4145b7f7] jit-backend}
[3e4c22b4145f366] {jit-log-opt-bridge
# bridge out of Guard 0x3da27b8 with 56 ops
[p0, p1]
+150: guard_class(p1, 16500368, descr=<Guard0x708c980>) [p0, p1]
+162: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+166: guard_nonnull_class(p3, 16479200, descr=<Guard0x708c9e0>) [p0, p1]
+185: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+189: guard_nonnull_class(p5, 16470384, descr=<Guard0x708ca40>) [p0, p1]
+208: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+212: guard_nonnull_class(p7, 16470384, descr=<Guard0x708caa0>) [p0, p1]
+232: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+243: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x69a5b68>) [p0, p1]
+252: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+252: guard_class(p0, 16437352, descr=<Guard0x69a5f58>) [p0, p1]
+264: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+268: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x708cb00>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+287: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+291: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+295: p17 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+299: guard_class(p17, 16505296, descr=<Guard0x69a5fa0>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+312: guard_not_invalidated(descr=<Guard0x7f4a5e124020>) [p0, p1]
+312: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+316: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x708cb60>) [p0, p1]
+334: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+338: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x708cbc0>) [p0, p1]
+356: i23 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+360: i24 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+364: i25 = int_eq(i23, i24)
+367: guard_true(i25, descr=<Guard0x7f4a5e124068>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+373: p26 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+377: guard_nonnull_class(p26, 16470384, descr=<Guard0x708cc20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+395: p28 = new_with_vtable(descr=<SizeDescr 32>)
+439: p29 = new_with_vtable(descr=<SizeDescr 56>)
+450: p30 = new_with_vtable(descr=<SizeDescr 48>)
+461: setfield_gc(p30, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+472: setfield_gc(p30, ConstPtr(ptr31), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+476: setfield_gc(p30, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+480: setfield_gc(p30, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+484: setfield_gc(p30, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+488: setfield_gc(p28, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+492: setfield_gc(p29, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+496: setfield_gc(p28, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+500: setfield_gc(p28, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+504: setfield_gc(p29, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+508: setfield_gc(p29, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+519: setfield_gc(p29, ConstPtr(ptr32), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+523: setfield_gc(p29, p30, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+527: setfield_gc(p29, p5, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+531: jump(p28, p29, descr=TargetToken(59470000))
+560: --end of the loop--
[3e4c22b41491727] jit-log-opt-bridge}
[3e4c22b417f414d] {jit-backend
[3e4c22b4185c66d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b41866ed4] jit-backend-dump}
[3e4c22b41872041] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211414 +0  25000000
[3e4c22b418736ab] jit-backend-dump}
[3e4c22b418779a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211655 +0  25000000
[3e4c22b418788fe] jit-backend-dump}
[3e4c22b4187bd3f] {jit-backend-addr
bridge out of Guard 0x4a7c458 has address 0x7f4a5c211410 to 0x7f4a5c211650
       gc table: 0x7f4a5c211350
    jump target: 0x7f4a5c211410
         resops: 0x7f4a5c21141e
       failures: 0x7f4a5c211650
            end: 0x7f4a5c21186f
[3e4c22b4187e280] jit-backend-addr}
[3e4c22b418817dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21142e +0  61020000
[3e4c22b418825d8] jit-backend-dump}
[3e4c22b418858c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211445 +0  66020000
[3e4c22b418865d7] jit-backend-dump}
[3e4c22b41889720] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21145c +0  6B020000
[3e4c22b4188a3e9] jit-backend-dump}
[3e4c22b4188d539] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211474 +0  6F020000
[3e4c22b4188e1dd] jit-backend-dump}
[3e4c22b418912c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211488 +0  77020000
[3e4c22b41891f82] jit-backend-dump}
[3e4c22b4189505d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211494 +0  87020000
[3e4c22b41895d26] jit-backend-dump}
[3e4c22b41898de6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2114ab +0  8C020000
[3e4c22b41899aa3] jit-backend-dump}
[3e4c22b4189cb16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2114c4 +0  8F020000
[3e4c22b4189d7bb] jit-backend-dump}
[3e4c22b418a09f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2114da +0  B1020000
[3e4c22b418a169d] jit-backend-dump}
[3e4c22b418a48df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2114ee +0  B9020000
[3e4c22b418a5586] jit-backend-dump}
[3e4c22b418a866e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211500 +0  C3020000
[3e4c22b418a9306] jit-backend-dump}
[3e4c22b418ac392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211517 +0  C8020000
[3e4c22b418ad02a] jit-backend-dump}
[3e4c22b418b00c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211527 +0  D4020000
[3e4c22b418b0d57] jit-backend-dump}
[3e4c22b418b3de9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21153a +0  DD020000
[3e4c22b418b4a96] jit-backend-dump}
[3e4c22b418b7b1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211547 +0  EC020000
[3e4c22b418b87b4] jit-backend-dump}
[3e4c22b418bb95d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21155f +0  F0020000
[3e4c22b418bc5f2] jit-backend-dump}
[3e4c22b418bf943] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa3ad +0  5F700100
[3e4c22b418c0603] jit-backend-dump}
[3e4c22b418c46e8] jit-backend}
[3e4c22b418c838e] {jit-log-opt-bridge
# bridge out of Guard 0x4a7c458 with 90 ops
[p0, p1]
+214: guard_class(p1, 16500368, descr=<Guard0x708cc80>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+230: guard_nonnull_class(p3, 16478824, descr=<Guard0x708cce0>) [p0, p1]
+249: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+253: guard_nonnull_class(p5, 16470384, descr=<Guard0x708cd40>) [p0, p1]
+272: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+276: guard_nonnull_class(p7, 16616448, descr=<Guard0x708cda0>) [p0, p1]
+296: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+307: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x7f4a5e1240f8>) [p0, p1]
+316: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+316: guard_class(p0, 16435920, descr=<Guard0x7f4a5e124140>) [p0, p1]
+328: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+332: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x708ce00>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+351: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+351: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+355: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+359: p18 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+363: guard_class(p18, 16505296, descr=<Guard0x7f4a5e124188>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+376: guard_not_invalidated(descr=<Guard0x7f4a5e1241d0>) [p0, p1]
+376: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+380: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x708ce60>) [p0, p1]
+398: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x708cec0>) [p0, p1]
+418: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+422: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+427: i25 = int_eq(i23, i24)
+430: guard_true(i25, descr=<Guard0x7f4a5e124218>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+436: p26 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+440: guard_nonnull_class(p26, 16616448, descr=<Guard0x708cf20>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+466: i29 = instance_ptr_eq(p26, ConstPtr(ptr28))
+469: guard_true(i29, descr=<Guard0x7f4a5e124260>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+475: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x708cf80>) [p0, p1]
+494: i31 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+498: i32 = int_eq(i24, i31)
+501: guard_true(i32, descr=<Guard0x7f4a5e1242a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+507: p33 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+511: guard_nonnull_class(p33, ConstClass(W_Symbol), descr=<Guard0x708cfe0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+531: p35 = new_with_vtable(descr=<SizeDescr 32>)
+575: p36 = new_with_vtable(descr=<SizeDescr 40>)
+586: setfield_gc(p36, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+597: setfield_gc(p36, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+601: setfield_gc(p36, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+605: setfield_gc(p36, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+609: p38 = new_with_vtable(descr=<SizeDescr 48>)
+620: p39 = new_with_vtable(descr=<SizeDescr 32>)
+631: setfield_gc(p39, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+639: p42 = new_array_clear(4, descr=<ArrayP 8>)
+665: setarrayitem_gc(p42, 0, ConstPtr(ptr44), descr=<ArrayP 8>)
+669: setarrayitem_gc(p42, 1, p33, descr=<ArrayP 8>)
+673: setarrayitem_gc(p42, 2, p33, descr=<ArrayP 8>)
+677: setarrayitem_gc(p42, 3, p33, descr=<ArrayP 8>)
+681: setfield_gc(p39, p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+692: setfield_gc(p39, ConstPtr(ptr48), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+696: setfield_gc(p35, p36, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+700: setfield_gc(p38, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+704: setfield_gc(p35, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+708: setfield_gc(p35, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+712: setfield_gc(p38, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+716: setfield_gc(p38, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+727: setfield_gc(p38, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+731: setfield_gc(p38, p39, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+735: jump(p35, p38, descr=TargetToken(59469520))
+768: --end of the loop--
[3e4c22b419165ef] jit-log-opt-bridge}
[3e4c22b41c12e3a] {jit-backend
[3e4c22b41cc52ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2119b
[3e4c22b41cd2f73] jit-backend-dump}
[3e4c22b41cde331] {jit-backend-addr
Loop 173 ((let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))) from (loop AppRand30)) has address 0x7f4a5c211b1d to 0x7f4a5c211e60 (bootstrap 0x7f4a5c211a90)
       gc table: 0x7f4a5c2119b0
       function: 0x7f4a5c211a90
         resops: 0x7f4a5c211b1d
       failures: 0x7f4a5c211e60
            end: 0x7f4a5c21206b
[3e4c22b41ce1810] jit-backend-addr}
[3e4c22b41ce5e83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211b34 +0  57030000
[3e4c22b41ce71de] jit-backend-dump}
[3e4c22b41cea8d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211b4a +0  5D030000
[3e4c22b41ceb713] jit-backend-dump}
[3e4c22b41ceedbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211b5d +0  82030000
[3e4c22b41cefc1d] jit-backend-dump}
[3e4c22b41cf32ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211b71 +0  8A030000
[3e4c22b41cf4007] jit-backend-dump}
[3e4c22b41cf72e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211b85 +0  92030000
[3e4c22b41cf8028] jit-backend-dump}
[3e4c22b41cfb1ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211b9c +0  97030000
[3e4c22b41cfbef2] jit-backend-dump}
[3e4c22b41cff0b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211ba9 +0  A6030000
[3e4c22b41cffda1] jit-backend-dump}
[3e4c22b41d02e7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211bbf +0  AC030000
[3e4c22b41d03b5e] jit-backend-dump}
[3e4c22b41d06cc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211bd3 +0  B4030000
[3e4c22b41d079b4] jit-backend-dump}
[3e4c22b41d0ab59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211be7 +0  BC030000
[3e4c22b41d0b816] jit-backend-dump}
[3e4c22b41d0e94d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211bfa +0  C5030000
[3e4c22b41d0f5f7] jit-backend-dump}
[3e4c22b41d127b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211c04 +0  D7030000
[3e4c22b41d13460] jit-backend-dump}
[3e4c22b41d16597] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211c59 +0  9E030000
[3e4c22b41d17241] jit-backend-dump}
[3e4c22b41d1a3b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211c65 +0  AE030000
[3e4c22b41d1b069] jit-backend-dump}
[3e4c22b41d1e194] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211c98 +0  97030000
[3e4c22b41d1ee45] jit-backend-dump}
[3e4c22b41d2206b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c211caa +0  A1030000
[3e4c22b41d22d24] jit-backend-dump}
[3e4c22b41d26b03] jit-backend}
[3e4c22b41d2a9ef] {jit-log-opt-loop
# Loop 173 ((let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))) from (loop AppRand30)) : entry bridge with 137 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))) from (loop AppRand30)')
+373: guard_class(p1, 16435920, descr=<Guard0x708d040>) [p0, p1]
+392: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+396: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x708d0a0>) [p0, p1]
debug_merge_point(0, 0, '(> i n/2)')
+414: guard_not_invalidated(descr=<Guard0x7f4a5e124338>) [p0, p1]
+414: guard_class(p0, 16504944, descr=<Guard0x7f4a5e124380>) [p0, p1]
+433: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+437: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+441: guard_class(p7, 16479576, descr=<Guard0x7f4a5e1243c8>) [p0, p1]
+453: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+464: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x7f4a5e124410>) [p0, p1]
+473: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+477: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x708d100>) [p0, p1]
+496: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+500: i14 = int_gt(i6, i13)
+503: guard_false(i14, descr=<Guard0x7f4a5e124458>) [p0, p1]
debug_merge_point(0, 0, '(if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))')
debug_merge_point(0, 0, '(let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30)))')
debug_merge_point(0, 0, '(rads-of-size i)')
+509: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+513: guard_nonnull_class(p15, 16477696, descr=<Guard0x708d160>) [p0, p1]
+531: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+542: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x7f4a5e1244a0>) [p0, p1]
+551: p19 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '())))')
debug_merge_point(0, 0, '(lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))')
+551: p20 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+555: p21 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+559: guard_class(p21, 16505296, descr=<Guard0x7f4a5e1244e8>) [p0, p1]
+571: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x708d1c0>) [p0, p1]
debug_merge_point(0, 0, '(- n4967 1)')
+590: i25 = int_sub_ovf(i6, 1)
+594: guard_no_overflow(descr=<Guard0x7f4a5e124530>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))')
debug_merge_point(0, 0, '(three-partitions AppRand9)')
debug_merge_point(0, 0, '(let ([loop15177 (lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))]) (loop15177 '() (quotient m 3)))')
debug_merge_point(0, 0, '(lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))')
debug_merge_point(0, 0, '(loop15177 '() (quotient m 3))')
+600: i27 = int_eq(i25, -9223372036854775808)
+600: i29 = int_rshift(i25, 63)
+607: i30 = int_xor(i25, i29)
+613: i32 = uint_mul_high(i30, -6148914691236517205)
+633: i34 = uint_rshift(i32, 1)
+636: i35 = int_xor(i34, i29)
+639: i37 = int_mul(i35, 3)
+646: i39 = int_xor(i25, 3)
+653: i41 = int_rshift(i39, 63)
+657: i42 = int_ne(i37, i25)
+669: i43 = int_and(i41, i42)
+672: i44 = int_add(i35, i43)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
+675: i46 = int_lt(i44, 0)
+679: guard_false(i46, descr=<Guard0x7f4a5e124578>) [p0, p1]
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, '(let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))')
debug_merge_point(0, 0, 'lst5179')
debug_merge_point(0, 0, '(lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))')
debug_merge_point(0, 0, '(- m nc15181)')
+685: i47 = int_sub_ovf(i25, i44)
+691: guard_no_overflow(descr=<Guard0x7f4a5e1245c0>) [p0, p1]
debug_merge_point(0, 0, '(loop25185 lst5179 (quotient AppRand36 2))')
+697: i49 = int_eq(i47, -9223372036854775808)
+697: i51 = int_rshift(i47, 1)
+703: i53 = int_lshift(i51, 1)
+709: i55 = int_xor(i47, 2)
+716: i57 = int_rshift(i55, 63)
+720: i58 = int_ne(i53, i47)
+733: i59 = int_and(i57, i58)
+736: i60 = int_add(i51, i59)
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+739: i61 = int_lt(i60, i44)
+742: guard_false(i61, descr=<Guard0x7f4a5e124608>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+748: i62 = int_add(i44, i60)
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+754: i63 = int_sub_ovf(i25, i62)
+760: guard_no_overflow(descr=<Guard0x7f4a5e124650>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+766: i65 = int_sub(i60, 1)
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+771: p66 = new_with_vtable(descr=<SizeDescr 32>)
+821: p67 = new_with_vtable(descr=<SizeDescr 48>)
+839: setfield_gc(p67, ConstPtr(ptr68), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+850: setfield_gc(p67, ConstPtr(ptr69), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+854: p70 = new_with_vtable(descr=<SizeDescr 16>)
+865: setfield_gc(p70, i44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+869: setfield_gc(p67, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+873: p71 = new_with_vtable(descr=<SizeDescr 32>)
+884: setfield_gc(p71, ConstPtr(ptr72), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+895: setfield_gc(p71, ConstPtr(ptr73), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+899: setfield_gc(p71, i25, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+903: setfield_gc(p67, p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+907: p74 = new_with_vtable(descr=<SizeDescr 16>)
+918: setfield_gc(p74, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+922: setfield_gc(p67, p74, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+926: p75 = new_with_vtable(descr=<SizeDescr 24>)
+937: p76 = new_with_vtable(descr=<SizeDescr 32>)
+948: setfield_gc(p76, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+956: p79 = new_array(3, descr=<ArrayS 8>)
+975: setarrayitem_gc(p79, 0, i44, descr=<ArrayS 8>)
+979: setarrayitem_gc(p79, 1, i60, descr=<ArrayS 8>)
+983: setarrayitem_gc(p79, 2, i63, descr=<ArrayS 8>)
+987: setfield_gc(p76, p79, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+998: setfield_gc(p76, ConstPtr(ptr83), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1002: setfield_gc(p75, p76, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1013: setfield_gc(p75, ConstPtr(ptr84), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1017: p85 = new_with_vtable(descr=<SizeDescr 40>)
+1028: p86 = new_with_vtable(descr=<SizeDescr 32>)
+1039: setfield_gc(p86, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1043: setfield_gc(p86, i25, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1047: p87 = new_with_vtable(descr=<SizeDescr 32>)
+1058: setfield_gc(p87, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1069: setfield_gc(p87, ConstPtr(ptr88), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1073: setfield_gc(p87, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1077: setfield_gc(p86, p87, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1081: p89 = new_with_vtable(descr=<SizeDescr 40>)
+1092: setfield_gc(p89, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1103: setfield_gc(p89, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1114: setfield_gc(p89, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1125: setfield_gc(p89, ConstPtr(ptr90), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1129: setfield_gc(p85, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1133: setfield_gc(p66, p67, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1137: setfield_gc(p66, i65, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1141: setfield_gc(p66, p75, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1145: setfield_gc(p85, p86, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1149: setfield_gc(p85, p89, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1160: setfield_gc(p85, ConstPtr(ptr91), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1164: jump(p66, p85, descr=TargetToken(61029280))
+1200: --end of the loop--
[3e4c22b41d9b0e1] jit-log-opt-loop}
[3e4c22b4377a3fe] {jit-backend
[3e4c22b4381be9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b438269ad] jit-backend-dump}
[3e4c22b43848a8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212224 +0  25000000
[3e4c22b4384a034] jit-backend-dump}
[3e4c22b4384e75f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212465 +0  25000000
[3e4c22b4384f734] jit-backend-dump}
[3e4c22b43852f6b] {jit-backend-addr
bridge out of Guard 0x3d726e0 has address 0x7f4a5c212220 to 0x7f4a5c212460
       gc table: 0x7f4a5c212180
    jump target: 0x7f4a5c212220
         resops: 0x7f4a5c21222e
       failures: 0x7f4a5c212460
            end: 0x7f4a5c21262b
[3e4c22b43855da0] jit-backend-addr}
[3e4c22b438597be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21223e +0  61020000
[3e4c22b4385a854] jit-backend-dump}
[3e4c22b4385dd1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212252 +0  69020000
[3e4c22b4385eb43] jit-backend-dump}
[3e4c22b43862448] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212271 +0  82020000
[3e4c22b438631db] jit-backend-dump}
[3e4c22b438664a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212284 +0  8B020000
[3e4c22b438671ca] jit-backend-dump}
[3e4c22b4386a2e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212298 +0  93020000
[3e4c22b4386afce] jit-backend-dump}
[3e4c22b4386e1ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2122a6 +0  A1020000
[3e4c22b4386eee4] jit-backend-dump}
[3e4c22b43871fc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2122bd +0  A6020000
[3e4c22b43872ccc] jit-backend-dump}
[3e4c22b43875dba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2122d5 +0  AA020000
[3e4c22b43876ac3] jit-backend-dump}
[3e4c22b43879b5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2122ed +0  AE020000
[3e4c22b4387a868] jit-backend-dump}
[3e4c22b4387d90c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212305 +0  B2020000
[3e4c22b4387e615] jit-backend-dump}
[3e4c22b43881703] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21231d +0  B6020000
[3e4c22b438823eb] jit-backend-dump}
[3e4c22b438854d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212335 +0  BA020000
[3e4c22b438861c6] jit-backend-dump}
[3e4c22b43889304] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21234f +0  BC020000
[3e4c22b43889ff1] jit-backend-dump}
[3e4c22b4388d5b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1dac62 +0  BA750300
[3e4c22b4388e291] jit-backend-dump}
[3e4c22b43892e92] jit-backend}
[3e4c22b43896c77] {jit-log-opt-bridge
# bridge out of Guard 0x3d726e0 with 60 ops
[p0, p1, p2, p3, p4]
+182: guard_class(p0, 16437896, descr=<Guard0x708d220>) [p0, p1, p2, p3, p4]
+194: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+205: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x7f4a5e1246e0>) [p0, p1, p2, p3, p4]
+214: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+214: guard_not_invalidated(descr=<Guard0x7f4a5e124728>) [p0, p1, p2, p3, p4]
+214: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+218: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+222: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (cons AppRand1 AppRand2)')
+226: guard_nonnull_class(p9, 16478072, descr=<Guard0x708d280>) [p0, p1, p2, p3, p4]
+245: guard_nonnull_class(p10, 16470384, descr=<Guard0x708d2e0>) [p0, p1, p2, p3, p4]
+264: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+275: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x7f4a5e124770>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+284: guard_class(p11, 16437896, descr=<Guard0x7f4a5e1247b8>) [p0, p1, p2, p3, p4]
+298: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+302: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x708d340>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+321: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+325: guard_nonnull_class(p19, 16470384, descr=<Guard0x708d3a0>) [p0, p1, p2, p3, p4]
+345: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+350: guard_nonnull_class(p21, ConstClass(W_Symbol), descr=<Guard0x708d400>) [p0, p1, p2, p3, p4]
+369: p23 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+373: guard_nonnull_class(p23, 16470384, descr=<Guard0x708d460>) [p0, p1, p2, p3, p4]
+393: p25 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+398: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x708d4c0>) [p0, p1, p2, p3, p4]
+417: p27 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+421: guard_nonnull_class(p27, ConstClass(W_Vector), descr=<Guard0x708d520>) [p0, p1, p2, p3, p4]
+441: p29 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+445: p30 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+449: guard_nonnull_class(p30, 16470384, descr=<Guard0x708d580>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+467: p32 = new_with_vtable(descr=<SizeDescr 32>)
+514: p33 = new_with_vtable(descr=<SizeDescr 24>)
+525: setfield_gc(p33, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+536: p34 = new_with_vtable(descr=<SizeDescr 24>)
+547: setfield_gc(p34, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+551: setfield_gc(p34, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+555: setfield_gc(p33, p34, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+559: p35 = new_with_vtable(descr=<SizeDescr 48>)
+570: p36 = new_with_vtable(descr=<SizeDescr 32>)
+581: setfield_gc(p36, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+589: p39 = new_array_clear(4, descr=<ArrayP 8>)
+622: setarrayitem_gc(p39, 0, ConstPtr(ptr41), descr=<ArrayP 8>)
+626: setarrayitem_gc(p39, 1, p21, descr=<ArrayP 8>)
+630: setarrayitem_gc(p39, 2, p25, descr=<ArrayP 8>)
+634: setarrayitem_gc(p39, 3, p27, descr=<ArrayP 8>)
+638: setfield_gc(p36, p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+649: setfield_gc(p36, ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+660: setfield_gc(p35, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+664: setfield_gc(p35, p29, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+668: setfield_gc(p35, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+672: setfield_gc(p35, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+676: setfield_gc(p32, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+687: setfield_gc(p32, p30, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+691: setfield_gc(p32, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+695: setfield_gc(p35, p36, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+699: jump(p32, p35, descr=TargetToken(59469520))
+736: --end of the loop--
[3e4c22b438d7a6f] jit-log-opt-bridge}
[3e4c22b43a512dc] {jit-backend
[3e4c22b43abbfa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b43ac7208] jit-backend-dump}
[3e4c22b43ad1f83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212854 +0  28000000
[3e4c22b43ad348b] jit-backend-dump}
[3e4c22b43ad768f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212a95 +0  28000000
[3e4c22b43ad85d1] jit-backend-dump}
[3e4c22b43adbd36] {jit-backend-addr
bridge out of Guard 0x3ced100 has address 0x7f4a5c212850 to 0x7f4a5c212a90
       gc table: 0x7f4a5c212790
    jump target: 0x7f4a5c212850
         resops: 0x7f4a5c21285e
       failures: 0x7f4a5c212a90
            end: 0x7f4a5c212ce7
[3e4c22b43ade19b] jit-backend-addr}
[3e4c22b43ae177e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21286e +0  61020000
[3e4c22b43ae266e] jit-backend-dump}
[3e4c22b43ae59b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212885 +0  66020000
[3e4c22b43ae6771] jit-backend-dump}
[3e4c22b43ae9b34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212895 +0  72020000
[3e4c22b43aea984] jit-backend-dump}
[3e4c22b43aedd72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2128a1 +0  82020000
[3e4c22b43aeeb42] jit-backend-dump}
[3e4c22b43af1f0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2128b8 +0  87020000
[3e4c22b43af2d8f] jit-backend-dump}
[3e4c22b43af625c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2128ca +0  91020000
[3e4c22b43af6fd3] jit-backend-dump}
[3e4c22b43afa3f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2128de +0  99020000
[3e4c22b43afb129] jit-backend-dump}
[3e4c22b43afe478] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2128fe +0  95020000
[3e4c22b43aff134] jit-backend-dump}
[3e4c22b43b02a0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212914 +0  B7020000
[3e4c22b43b0372a] jit-backend-dump}
[3e4c22b43b06a63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212927 +0  C0020000
[3e4c22b43b0775d] jit-backend-dump}
[3e4c22b43b0aaa2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212938 +0  CB020000
[3e4c22b43b0b76b] jit-backend-dump}
[3e4c22b43b0ea33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21294b +0  D4020000
[3e4c22b43b0f6fc] jit-backend-dump}
[3e4c22b43b12919] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212955 +0  E6020000
[3e4c22b43b135c6] jit-backend-dump}
[3e4c22b43b167b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212962 +0  F5020000
[3e4c22b43b17453] jit-backend-dump}
[3e4c22b43b1a63f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212972 +0  01030000
[3e4c22b43b1b36d] jit-backend-dump}
[3e4c22b43b1e69a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212987 +0  08030000
[3e4c22b43b1f3be] jit-backend-dump}
[3e4c22b43b225aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21299d +0  0E030000
[3e4c22b43b23273] jit-backend-dump}
[3e4c22b43b26465] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2129b3 +0  14030000
[3e4c22b43b27112] jit-backend-dump}
[3e4c22b43b2a5ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d7cc8 +0  84AB0300
[3e4c22b43b2b2a5] jit-backend-dump}
[3e4c22b43b2f2fd] jit-backend}
[3e4c22b43b33049] {jit-log-opt-bridge
# bridge out of Guard 0x3ced100 with 70 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x708d5e0>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull_class(p3, 16470384, descr=<Guard0x708d640>) [p0, p1]
+256: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+259: guard_false(i6, descr=<Guard0x7f4a5e124800>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))')
+265: guard_class(p0, 16437896, descr=<Guard0x7f4a5e124848>) [p0, p1]
+277: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+281: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x708d6a0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))')
+300: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+304: guard_class(p10, 16479200, descr=<Guard0x7f4a5e124890>) [p0, p1]
+318: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+329: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x7f4a5e1248d8>) [p0, p1]
+338: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+342: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+346: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+350: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+354: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+358: guard_class(p18, 16505296, descr=<Guard0x7f4a5e124920>) [p0, p1]
debug_merge_point(0, 0, '(= nc15078 nc25081)')
+370: guard_not_invalidated(descr=<Guard0x7f4a5e124968>) [p0, p1]
+370: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+374: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x708d700>) [p0, p1]
+392: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x708d760>) [p0, p1]
+411: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+415: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+419: i25 = int_eq(i23, i24)
+422: guard_false(i25, descr=<Guard0x7f4a5e1249b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22))')
debug_merge_point(0, 0, 'loop35097')
debug_merge_point(0, 0, '(if if4 rads15091 (vector-ref radicals nc25081))')
debug_merge_point(0, 0, '(vector-ref radicals nc25081)')
+428: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x708d7c0>) [p0, p1]
+447: i28 = int_ge(i24, 0)
+451: guard_true(i28, descr=<Guard0x7f4a5e1249f8>) [p0, p1]
+457: i29 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+461: i30 = int_lt(i24, i29)
+464: guard_true(i30, descr=<Guard0x7f4a5e124a40>) [p0, p1]
+470: p31 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+474: guard_class(p31, 16622984, descr=<Guard0x7f4a5e124a88>) [p0, p1]
+486: p33 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+490: p34 = getarrayitem_gc_r(p33, i24, descr=<ArrayP 8>)
+495: guard_class(p34, 16470384, descr=<Guard0x7f4a5e124ad0>) [p0, p1]
debug_merge_point(0, 0, '(loop25089 (cdr rads15091) lst5093)')
+507: p36 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+511: guard_nonnull_class(p36, 16616448, descr=<Guard0x708d820>) [p0, p1]
+529: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+533: guard_nonnull_class(p38, 16470384, descr=<Guard0x708d880>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))) from (loop25089 (cdr rads15091) lst5093)')
+551: p40 = new_with_vtable(descr=<SizeDescr 32>)
+602: p41 = new_with_vtable(descr=<SizeDescr 56>)
+613: p42 = new_with_vtable(descr=<SizeDescr 64>)
+631: setfield_gc(p42, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+649: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+653: setfield_gc(p42, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+657: setfield_gc(p42, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+661: setfield_gc(p42, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+665: setfield_gc(p42, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+669: setfield_gc(p42, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+673: setfield_gc(p40, p36, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+684: setfield_gc(p41, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+695: setfield_gc(p40, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+699: setfield_gc(p40, p38, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+703: setfield_gc(p41, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+707: setfield_gc(p41, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+725: setfield_gc(p41, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+729: setfield_gc(p41, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+733: setfield_gc(p41, p34, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+737: jump(p40, p41, descr=TargetToken(61027440))
+768: --end of the loop--
[3e4c22b43b7b6b5] jit-log-opt-bridge}
[3e4c22b44d1f217] {jit-backend
[3e4c22b44dc71ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212e70 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8202000048FF0425C0A714048139700B01000F85000000004C8B71104D85F60F84000000004C8B2DFAFEFFFF4D39EE0F85000000004C8B69184983FD01720841817D00B09700000F850000000041813FC81800000F85000000004D8B77204C8B25E1FEFFFF4D39E60F85000000004D8B67284D8B77304D8B57184983FC01720841813C2420BA00000F85000000004983FE01720741813EB09700000F85000000004D8B4C24104C8B05C1FEFFFF4D39C10F850000000041813AA81600000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B4C2418498B7C2420498B742430498B5C2438498B542408813A102001000F8500000000498B4424284883F80172068138601400000F85000000004883FB017206813B601400000F85000000004C89A5300100004C8B6008488B43084939C40F84000000004983F9017207418139F08C00000F85000000004883F8000F8C000000004D8B61084C39E00F8D000000004D8B611841813C24C8EB02000F85000000004D8B61104C8985380100004D8B44C410418138B09700000F8500000000498B46104883F8017206813840D202000F85000000004989D7488B0C25F091F900488D9198000000483B14251092F9000F87DD00000048891425F091F90048C701700B0100488D512048C702C81800004C8D623849C7042420BA00004D897C240848898D40010000488B0DD6FDFFFF49894C24104D894C241849897C242049897424284D8974243049895C2438488B9D40010000488943104C896B184C8B2DAAFDFFFF4C896A204C897A104C8962284C8942304C8952184C8B95380100004C8952084C8B95300100004C89530848899D300100004889953801000049BB80551D5C4A7F000041FFE30F1F44000048C7442408FFFFFF0049BBF02C215C4A7F00004C895D204D8D9B0016FBFF41FFD3E958FDFFFF49BB602E215C4A7F00004C895D204D8D9B901CFBFF41FFD3E90EFFFFFFFF3547FCFFFF49BB002D215C4A7F000041534D8D9B0013FBFF41FFE3FF3533FCFFFF49BB102D215C4A7F000041534D8D9BF012FBFF41FFE3FF3527FCFFFF49BB202D215C4A7F000041534D8D9BE012FBFF41FFE3FF3513FCFFFF49BB302D215C4A7F000041534D8D9BD012FBFF41FFE3FF35FFFBFFFF49BB402D215C4A7F000041534D8D9BC012FBFF41FFE3FF35F3FBFFFF49BB502D215C4A7F000041534D8D9BB012FBFF41FFE3FF35DFFBFFFF49BB602D215C4A7F000041534D8D9BA012FBFF41FFE3FF35CBFBFFFF49BB702D215C4A7F000041534D8D9B9012FBFF41FFE3FF35B7FBFFFF49BB802D215C4A7F000041534D8D9B8012FBFF41FFE3FF35ABFBFFFF49BB902D215C4A7F000041534D8D9B7012FBFF41FFE3FF3597FBFFFF49BBA02D215C4A7F000041534D8D9B6012FBFF41FFE3FF3583FBFFFF49BBB02D215C4A7F000041534D8D9B5012FBFF41FFE3FF356FFBFFFF49BBC02D215C4A7F000041534D8D9B4012FBFF41FFE3FF355BFBFFFF49BBD02D215C4A7F000041534D8D9B3012FBFF41FFE3FF3547FBFFFF49BBE02D215C4A7F000041534D8D9B2012FBFF41FFE3FF3533FBFFFF49BBF02D215C4A7F000041534D8D9B1012FBFF41FFE3FF351FFBFFFF49BB002E215C4A7F000041534D8D9B0012FBFF41FFE3FF350BFBFFFF49BB102E215C4A7F000041534D8D9BF011FBFF41FFE3FF35F7FAFFFF49BB202E215C4A7F000041534D8D9BE011FBFF41FFE3FF35E3FAFFFF49BB302E215C4A7F000041534D8D9BD011FBFF41FFE3FF35CFFAFFFF49BB402E215C4A7F000041534D8D9BC011FBFF41FFE3FF35BBFAFFFF49BB502E215C4A7F000041534D8D9BB011FBFF41FFE3
[3e4c22b44dd47e3] jit-backend-dump}
[3e4c22b44df3fda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212f54 +0  28000000
[3e4c22b44df597e] jit-backend-dump}
[3e4c22b44dfa72e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2131e5 +0  28000000
[3e4c22b44dfb7d0] jit-backend-dump}
[3e4c22b44dff00b] {jit-backend-addr
bridge out of Guard 0x3d720b0 has address 0x7f4a5c212f50 to 0x7f4a5c2131e0
       gc table: 0x7f4a5c212e70
    jump target: 0x7f4a5c212f50
         resops: 0x7f4a5c212f5e
       failures: 0x7f4a5c2131e0
            end: 0x7f4a5c21348b
[3e4c22b44e01b1e] jit-backend-addr}
[3e4c22b44e05497] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212f6e +0  B1020000
[3e4c22b44e06457] jit-backend-dump}
[3e4c22b44e099b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212f7b +0  C0020000
[3e4c22b44e0a7a8] jit-backend-dump}
[3e4c22b44e0da0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212f8b +0  CC020000
[3e4c22b44e0e806] jit-backend-dump}
[3e4c22b44e11af9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212fa3 +0  D0020000
[3e4c22b44e128b3] jit-backend-dump}
[3e4c22b44e159de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212fb0 +0  DF020000
[3e4c22b44e167cd] jit-backend-dump}
[3e4c22b44e19881] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212fc4 +0  E7020000
[3e4c22b44e1a62c] jit-backend-dump}
[3e4c22b44e1da85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212fe4 +0  FF020000
[3e4c22b44e1e827] jit-backend-dump}
[3e4c22b44e21a2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c212ff7 +0  08030000
[3e4c22b44e227c7] jit-backend-dump}
[3e4c22b44e25926] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21300c +0  0F030000
[3e4c22b44e2677d] jit-backend-dump}
[3e4c22b44e297f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213019 +0  1E030000
[3e4c22b44e2a5bd] jit-backend-dump}
[3e4c22b44e2d70d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213030 +0  23030000
[3e4c22b44e2e4dd] jit-backend-dump}
[3e4c22b44e316ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213055 +0  1A030000
[3e4c22b44e32501] jit-backend-dump}
[3e4c22b44e356e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21306c +0  1F030000
[3e4c22b44e3648c] jit-backend-dump}
[3e4c22b44e39653] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21307e +0  29030000
[3e4c22b44e3a3e2] jit-backend-dump}
[3e4c22b44e3d51a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213096 +0  2D030000
[3e4c22b44e3e29a] jit-backend-dump}
[3e4c22b44e413e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2130a9 +0  36030000
[3e4c22b44e42164] jit-backend-dump}
[3e4c22b44e451f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2130b3 +0  48030000
[3e4c22b44e45f24] jit-backend-dump}
[3e4c22b44e48f98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2130c0 +0  57030000
[3e4c22b44e49ccf] jit-backend-dump}
[3e4c22b44e4cd76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2130d2 +0  61030000
[3e4c22b44e4dacf] jit-backend-dump}
[3e4c22b44e50b49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2130ef +0  60030000
[3e4c22b44e51883] jit-backend-dump}
[3e4c22b44e5499f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213105 +0  66030000
[3e4c22b44e556df] jit-backend-dump}
[3e4c22b44e58cb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d9e60 +0  EC900300
[3e4c22b44e59a55] jit-backend-dump}
[3e4c22b44e5e50f] jit-backend}
[3e4c22b44e62141] {jit-log-opt-bridge
# bridge out of Guard 0x3d720b0 with 80 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x708d8e0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x7f4a5e124b18>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x7f4a5e124b60>) [p0, p1]
debug_merge_point(0, 0, 'lst5093')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16470384, descr=<Guard0x708d940>) [p0, p1]
+311: guard_class(p0, 16437896, descr=<Guard0x7f4a5e124ba8>) [p0, p1]
+324: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+335: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x7f4a5e124bf0>) [p0, p1]
+344: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+344: guard_not_invalidated(descr=<Guard0x7f4a5e124c38>) [p0, p1]
+344: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+348: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+352: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)')
+356: guard_nonnull_class(p12, 16479200, descr=<Guard0x708d9a0>) [p0, p1]
+376: guard_nonnull_class(p13, 16470384, descr=<Guard0x708da00>) [p0, p1]
+395: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+407: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x7f4a5e124c80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+416: guard_class(p14, 16437352, descr=<Guard0x7f4a5e124cc8>) [p0, p1]
+429: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+433: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x708da60>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+452: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+457: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+462: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+467: p25 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+472: p26 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+477: guard_class(p26, 16505296, descr=<Guard0x7f4a5e124d10>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+489: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+494: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x708dac0>) [p0, p1]
+512: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x708db20>) [p0, p1]
+530: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+541: i32 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+545: i33 = int_eq(i31, i32)
+548: guard_false(i33, descr=<Guard0x7f4a5e124d58>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, '(vector-ref radicals nc35084)')
+554: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x708db80>) [p0, p1]
+573: i36 = int_ge(i32, 0)
+577: guard_true(i36, descr=<Guard0x7f4a5e124da0>) [p0, p1]
+583: i37 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+587: i38 = int_lt(i32, i37)
+590: guard_true(i38, descr=<Guard0x7f4a5e124de8>) [p0, p1]
+596: p39 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+600: guard_class(p39, 16622984, descr=<Guard0x7f4a5e124e30>) [p0, p1]
+614: p41 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+618: p42 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+630: guard_class(p42, 16470384, descr=<Guard0x7f4a5e124e78>) [p0, p1]
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+643: p44 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+647: guard_nonnull_class(p44, 16616448, descr=<Guard0x708dbe0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+665: p46 = new_with_vtable(descr=<SizeDescr 32>)
+712: p47 = new_with_vtable(descr=<SizeDescr 56>)
+723: p48 = new_with_vtable(descr=<SizeDescr 64>)
+735: setfield_gc(p48, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+754: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+759: setfield_gc(p48, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+764: setfield_gc(p48, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+769: setfield_gc(p48, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+774: setfield_gc(p48, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+779: setfield_gc(p48, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+784: setfield_gc(p46, p44, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+795: setfield_gc(p46, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+806: setfield_gc(p47, ConstPtr(ptr50), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+810: setfield_gc(p47, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+814: setfield_gc(p47, p48, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+818: setfield_gc(p47, p42, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+822: setfield_gc(p47, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+826: setfield_gc(p47, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+837: setfield_gc(p46, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: jump(p46, p47, descr=TargetToken(61027120))
+880: --end of the loop--
[3e4c22b44eb2f08] jit-log-opt-bridge}
[3e4c22b45389008] {jit-backend
[3e4c22b45419ba5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b45428313] jit-backend-dump}
[3e4c22b4543407f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213784 +0  25000000
[3e4c22b454356b8] jit-backend-dump}
[3e4c22b45439cba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213ad5 +0  25000000
[3e4c22b4543ace1] jit-backend-dump}
[3e4c22b4543e21f] {jit-backend-addr
bridge out of Guard 0x520e5c0 has address 0x7f4a5c213780 to 0x7f4a5c213ad0
       gc table: 0x7f4a5c213670
    jump target: 0x7f4a5c213780
         resops: 0x7f4a5c21378e
       failures: 0x7f4a5c213ad0
            end: 0x7f4a5c213e07
[3e4c22b454406d7] jit-backend-addr}
[3e4c22b45443c68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21379e +0  71030000
[3e4c22b45444bb0] jit-backend-dump}
[3e4c22b45447f26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2137b5 +0  76030000
[3e4c22b45448cdb] jit-backend-dump}
[3e4c22b4544be62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2137c5 +0  82030000
[3e4c22b4544cbc4] jit-backend-dump}
[3e4c22b4544fec3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2137d1 +0  92030000
[3e4c22b45450c65] jit-backend-dump}
[3e4c22b45453f45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2137e9 +0  96030000
[3e4c22b45454ccc] jit-backend-dump}
[3e4c22b45457f0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2137fb +0  A0030000
[3e4c22b45458c8e] jit-backend-dump}
[3e4c22b4545beaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213810 +0  A7030000
[3e4c22b4545cbf7] jit-backend-dump}
[3e4c22b4545fcfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213830 +0  A3030000
[3e4c22b45460a4a] jit-backend-dump}
[3e4c22b45463eb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213847 +0  C4030000
[3e4c22b45464cbf] jit-backend-dump}
[3e4c22b45468142] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21385a +0  CD030000
[3e4c22b45468eb4] jit-backend-dump}
[3e4c22b4546c07e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21386b +0  D8030000
[3e4c22b4546cdd6] jit-backend-dump}
[3e4c22b4546ffce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21387e +0  E1030000
[3e4c22b45470ce1] jit-backend-dump}
[3e4c22b45473df0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213888 +0  F3030000
[3e4c22b45474b1e] jit-backend-dump}
[3e4c22b45477c0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213895 +0  02040000
[3e4c22b4547892e] jit-backend-dump}
[3e4c22b4547ba00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2138a7 +0  0C040000
[3e4c22b4547c6f1] jit-backend-dump}
[3e4c22b4547f7b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2138bd +0  12040000
[3e4c22b45480607] jit-backend-dump}
[3e4c22b45483a88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2138d5 +0  16040000
[3e4c22b45484797] jit-backend-dump}
[3e4c22b45487974] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2138ec +0  1B040000
[3e4c22b4548867a] jit-backend-dump}
[3e4c22b4548b8d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2138f5 +0  2E040000
[3e4c22b4548c5ef] jit-backend-dump}
[3e4c22b4548f726] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213908 +0  37040000
[3e4c22b45490433] jit-backend-dump}
[3e4c22b4549358c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213915 +0  46040000
[3e4c22b454942a1] jit-backend-dump}
[3e4c22b45497389] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21392d +0  4A040000
[3e4c22b454980cc] jit-backend-dump}
[3e4c22b4549b177] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213944 +0  4F040000
[3e4c22b4549bec9] jit-backend-dump}
[3e4c22b4549efd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21394d +0  62040000
[3e4c22b4549fcb4] jit-backend-dump}
[3e4c22b454a2da2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213964 +0  67040000
[3e4c22b454a3aa8] jit-backend-dump}
[3e4c22b454a6b40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21397c +0  6B040000
[3e4c22b454a7843] jit-backend-dump}
[3e4c22b454aabb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe064 +0  18570100
[3e4c22b454ab8b4] jit-backend-dump}
[3e4c22b454af92d] jit-backend}
[3e4c22b454b3626] {jit-log-opt-bridge
# bridge out of Guard 0x520e5c0 with 130 ops
[p0, p1]
+294: guard_class(p1, 16500016, descr=<Guard0x708dc40>) [p0, p1]
+306: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+310: guard_nonnull_class(p3, 16470384, descr=<Guard0x708dca0>) [p0, p1]
+336: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+339: guard_false(i6, descr=<Guard0x7f4a5e124f08>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+345: guard_class(p0, 16437896, descr=<Guard0x7f4a5e124f50>) [p0, p1]
+357: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+361: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x708dd00>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+381: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+385: guard_class(p10, 16478824, descr=<Guard0x7f4a5e124f98>) [p0, p1]
+399: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+411: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x7f4a5e124fe0>) [p0, p1]
+420: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+425: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+430: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+435: p17 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+440: guard_class(p17, 16505296, descr=<Guard0x7f4a5e125028>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+452: guard_not_invalidated(descr=<Guard0x7f4a5e125070>) [p0, p1]
+452: p19 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+457: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x708dd60>) [p0, p1]
+475: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x708ddc0>) [p0, p1]
+494: i22 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+498: i23 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+502: i24 = int_eq(i22, i23)
+505: guard_false(i24, descr=<Guard0x7f4a5e1250b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+511: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x708de20>) [p0, p1]
+530: i27 = int_ge(i23, 0)
+534: guard_true(i27, descr=<Guard0x7f4a5e125100>) [p0, p1]
+540: i28 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+544: i29 = int_lt(i23, i28)
+547: guard_true(i29, descr=<Guard0x7f4a5e125148>) [p0, p1]
+553: p30 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+557: guard_class(p30, 16622984, descr=<Guard0x7f4a5e125190>) [p0, p1]
+571: p32 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+575: p33 = getarrayitem_gc_r(p32, i23, descr=<ArrayP 8>)
+580: guard_class(p33, 16470384, descr=<Guard0x7f4a5e1251d8>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+593: p35 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+597: guard_nonnull_class(p35, 16616448, descr=<Guard0x708de80>) [p0, p1]
+617: p37 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+621: guard_nonnull_class(p37, 16470384, descr=<Guard0x708dee0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+640: i40 = instance_ptr_eq(p35, ConstPtr(ptr39))
+643: guard_true(i40, descr=<Guard0x7f4a5e125220>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+649: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x708df40>) [p0, p1]
+668: i42 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+672: i43 = int_eq(i23, i42)
+675: guard_true(i43, descr=<Guard0x7f4a5e125268>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+681: p44 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+685: guard_nonnull_class(p44, 16470384, descr=<Guard0x708dfa0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+705: p46 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+710: guard_nonnull_class(p46, 16616448, descr=<Guard0x7f4a5e13a020>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+728: i49 = instance_ptr_eq(p46, ConstPtr(ptr48))
+731: guard_true(i49, descr=<Guard0x7f4a5e1252b0>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+737: p50 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+741: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x7f4a5e13a500>) [p0, p1]
+760: p52 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+765: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x7f4a5e13a560>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+784: p54 = new_with_vtable(descr=<SizeDescr 32>)
+828: p55 = new_with_vtable(descr=<SizeDescr 40>)
+839: setfield_gc(p55, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+850: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+854: setfield_gc(p55, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+858: setfield_gc(p55, p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+862: p57 = new_with_vtable(descr=<SizeDescr 48>)
+874: p58 = new_with_vtable(descr=<SizeDescr 56>)
+893: setfield_gc(p58, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+897: setfield_gc(p58, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+901: setfield_gc(p58, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+912: setfield_gc(p58, ConstPtr(ptr59), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+916: p60 = new_with_vtable(descr=<SizeDescr 40>)
+927: setfield_gc(p60, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+931: setfield_gc(p60, ConstPtr(ptr61), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+935: setfield_gc(p60, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+939: setfield_gc(p60, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+943: setfield_gc(p58, p60, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+947: setfield_gc(p58, p33, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+951: p62 = new_with_vtable(descr=<SizeDescr 32>)
+962: setfield_gc(p62, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+970: p65 = new_array_clear(4, descr=<ArrayP 8>)
+996: setarrayitem_gc(p65, 0, ConstPtr(ptr67), descr=<ArrayP 8>)
+1000: setarrayitem_gc(p65, 1, p50, descr=<ArrayP 8>)
+1004: setarrayitem_gc(p65, 2, p52, descr=<ArrayP 8>)
+1008: setarrayitem_gc(p65, 3, p52, descr=<ArrayP 8>)
+1012: setfield_gc(p62, p65, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1023: setfield_gc(p62, ConstPtr(ptr71), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1027: setfield_gc(p54, p46, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1038: setfield_gc(p57, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1043: setfield_gc(p54, p55, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1047: setfield_gc(p54, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1051: setfield_gc(p57, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1056: setfield_gc(p57, p58, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1068: setfield_gc(p57, ConstPtr(ptr72), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1073: setfield_gc(p57, p62, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1078: jump(p54, p57, descr=TargetToken(59469520))
+1120: --end of the loop--
[3e4c22b4551878a] jit-log-opt-bridge}
[3e4c22b45edd130] {jit-backend
[3e4c22b45f37dbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c213f
[3e4c22b45f42973] jit-backend-dump}
[3e4c22b45f4eff9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214004 +0  28000000
[3e4c22b45f5064b] jit-backend-dump}
[3e4c22b45f548c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214205 +0  28000000
[3e4c22b45f557ed] jit-backend-dump}
[3e4c22b45f58ec2] {jit-backend-addr
bridge out of Guard 0x3da3e80 has address 0x7f4a5c214000 to 0x7f4a5c214200
       gc table: 0x7f4a5c213f50
    jump target: 0x7f4a5c214000
         resops: 0x7f4a5c21400e
       failures: 0x7f4a5c214200
            end: 0x7f4a5c21441f
[3e4c22b45f5b3a1] jit-backend-addr}
[3e4c22b45f5ea92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21401e +0  21020000
[3e4c22b45f5f92f] jit-backend-dump}
[3e4c22b45f62ecf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21402b +0  30020000
[3e4c22b45f63c74] jit-backend-dump}
[3e4c22b45f66f33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21403b +0  3C020000
[3e4c22b45f67ca4] jit-backend-dump}
[3e4c22b45f6ae68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214053 +0  40020000
[3e4c22b45f6bc1f] jit-backend-dump}
[3e4c22b45f6eda0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214060 +0  4F020000
[3e4c22b45f6fb3c] jit-backend-dump}
[3e4c22b45f72d0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214074 +0  57020000
[3e4c22b45f73b07] jit-backend-dump}
[3e4c22b45f770fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214094 +0  6F020000
[3e4c22b45f77e5f] jit-backend-dump}
[3e4c22b45f7b0e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2140a7 +0  78020000
[3e4c22b45f7be11] jit-backend-dump}
[3e4c22b45f7efee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2140bc +0  7F020000
[3e4c22b45f7fcf7] jit-backend-dump}
[3e4c22b45f82e62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2140c9 +0  8E020000
[3e4c22b45f83b6b] jit-backend-dump}
[3e4c22b45f86ca3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2140e0 +0  93020000
[3e4c22b45f879a9] jit-backend-dump}
[3e4c22b45f8ab05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2140fb +0  94020000
[3e4c22b45f8b83f] jit-backend-dump}
[3e4c22b45f8e9b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214112 +0  99020000
[3e4c22b45f8f6e1] jit-backend-dump}
[3e4c22b45f92859] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214129 +0  9E020000
[3e4c22b45f93590] jit-backend-dump}
[3e4c22b45f96726] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21413a +0  A9020000
[3e4c22b45f97448] jit-backend-dump}
[3e4c22b45f9a60c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214150 +0  AF020000
[3e4c22b45f9b343] jit-backend-dump}
[3e4c22b45f9e77a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e3330 +0  CC0C0300
[3e4c22b45f9f4ba] jit-backend-dump}
[3e4c22b45fa34b6] jit-backend}
[3e4c22b45fa72a7] {jit-log-opt-bridge
# bridge out of Guard 0x3da3e80 with 66 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x7f4a5e13a5c0>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull(p3, descr=<Guard0x7f4a5e1252f8>) [p0, p1]
+230: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+233: guard_true(i5, descr=<Guard0x7f4a5e125340>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
+239: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+243: guard_nonnull_class(p6, 16470384, descr=<Guard0x7f4a5e13a620>) [p0, p1]
+263: guard_class(p0, 16437896, descr=<Guard0x7f4a5e125388>) [p0, p1]
+276: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+287: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x7f4a5e1253d0>) [p0, p1]
+296: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+296: guard_not_invalidated(descr=<Guard0x7f4a5e125418>) [p0, p1]
+296: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+300: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+304: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
+308: guard_nonnull_class(p12, 16479200, descr=<Guard0x7f4a5e13a680>) [p0, p1]
+328: guard_nonnull_class(p13, 16470384, descr=<Guard0x7f4a5e13a6e0>) [p0, p1]
+347: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+359: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x7f4a5e125460>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+368: guard_class(p14, 16437352, descr=<Guard0x7f4a5e1254a8>) [p0, p1]
+381: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+385: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x7f4a5e13a740>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+404: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+409: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+414: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+419: guard_class(p24, 16505296, descr=<Guard0x7f4a5e1254f0>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+431: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+436: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13a7a0>) [p0, p1]
+454: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+459: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13a800>) [p0, p1]
+477: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+481: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+485: i32 = int_eq(i30, i31)
+488: guard_true(i32, descr=<Guard0x7f4a5e125538>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+494: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+498: guard_nonnull_class(p33, 16470384, descr=<Guard0x7f4a5e13a860>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+516: p35 = new_with_vtable(descr=<SizeDescr 32>)
+560: p36 = new_with_vtable(descr=<SizeDescr 56>)
+571: p37 = new_with_vtable(descr=<SizeDescr 48>)
+582: setfield_gc(p37, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+593: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+597: setfield_gc(p37, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+601: setfield_gc(p37, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+605: setfield_gc(p37, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+609: setfield_gc(p35, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+613: setfield_gc(p35, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+624: setfield_gc(p36, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+628: setfield_gc(p36, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+632: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+636: setfield_gc(p36, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+640: setfield_gc(p36, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+644: setfield_gc(p36, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+648: setfield_gc(p35, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+652: jump(p35, p36, descr=TargetToken(59470000))
+688: --end of the loop--
[3e4c22b45fe0688] jit-log-opt-bridge}
[3e4c22b46326e3b] {jit-backend
[3e4c22b463a1715] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b463ab979] jit-backend-dump}
[3e4c22b463b72c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214714 +0  25000000
[3e4c22b463b86fd] jit-backend-dump}
[3e4c22b463bc8a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214a25 +0  25000000
[3e4c22b463bd6e0] jit-backend-dump}
[3e4c22b463c0c28] {jit-backend-addr
bridge out of Guard 0x3f76c38 has address 0x7f4a5c214710 to 0x7f4a5c214a20
       gc table: 0x7f4a5c214600
    jump target: 0x7f4a5c214710
         resops: 0x7f4a5c21471e
       failures: 0x7f4a5c214a20
            end: 0x7f4a5c214d57
[3e4c22b463c2ef6] jit-backend-addr}
[3e4c22b463c6664] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21472e +0  31030000
[3e4c22b463c749c] jit-backend-dump}
[3e4c22b463ca85f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214745 +0  36030000
[3e4c22b463cb5ab] jit-backend-dump}
[3e4c22b463ce88f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21475c +0  3B030000
[3e4c22b463cf5c3] jit-backend-dump}
[3e4c22b463d299b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214768 +0  4B030000
[3e4c22b463d366d] jit-backend-dump}
[3e4c22b463d67eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21477c +0  53030000
[3e4c22b463d74c0] jit-backend-dump}
[3e4c22b463da7ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21479c +0  6B030000
[3e4c22b463db4a0] jit-backend-dump}
[3e4c22b463de6b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2147b0 +0  73030000
[3e4c22b463df36a] jit-backend-dump}
[3e4c22b463e2522] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2147c5 +0  7A030000
[3e4c22b463e31b1] jit-backend-dump}
[3e4c22b463e631f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2147d2 +0  89030000
[3e4c22b463e6fa2] jit-backend-dump}
[3e4c22b463ea0f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2147e9 +0  8E030000
[3e4c22b463ead6b] jit-backend-dump}
[3e4c22b463edeac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214809 +0  8A030000
[3e4c22b463eeb47] jit-backend-dump}
[3e4c22b463f1c8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214820 +0  8F030000
[3e4c22b463f2910] jit-backend-dump}
[3e4c22b463f5a78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214832 +0  99030000
[3e4c22b463f66fb] jit-backend-dump}
[3e4c22b463f9863] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214843 +0  A4030000
[3e4c22b463fa4dc] jit-backend-dump}
[3e4c22b463fd62c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21485b +0  A8030000
[3e4c22b463fe2b2] jit-backend-dump}
[3e4c22b464013e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21486b +0  B4030000
[3e4c22b4640206c] jit-backend-dump}
[3e4c22b464051ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21487d +0  BE030000
[3e4c22b46405e72] jit-backend-dump}
[3e4c22b46408fc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21488a +0  CD030000
[3e4c22b46409c66] jit-backend-dump}
[3e4c22b4640ce61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21489d +0  D6030000
[3e4c22b4640db3f] jit-backend-dump}
[3e4c22b46410d68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2148a7 +0  E8030000
[3e4c22b46411a1f] jit-backend-dump}
[3e4c22b46414c2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2148b4 +0  F7030000
[3e4c22b464158ef] jit-backend-dump}
[3e4c22b46418aa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2148c4 +0  03040000
[3e4c22b4641977f] jit-backend-dump}
[3e4c22b4641c8fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2148da +0  09040000
[3e4c22b4641d59b] jit-backend-dump}
[3e4c22b46420700] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2148f0 +0  0F040000
[3e4c22b464213a4] jit-backend-dump}
[3e4c22b464244f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214906 +0  15040000
[3e4c22b464251c3] jit-backend-dump}
[3e4c22b4642831f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21491c +0  1B040000
[3e4c22b46428fc3] jit-backend-dump}
[3e4c22b4642c44a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e9a78 +0  94AC0200
[3e4c22b4642d12b] jit-backend-dump}
[3e4c22b46434515] jit-backend}
[3e4c22b46438e13] {jit-log-opt-bridge
# bridge out of Guard 0x3f76c38 with 115 ops
[p0, p1]
+294: guard_class(p1, 16500016, descr=<Guard0x7f4a5e13a8c0>) [p0, p1]
+306: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+310: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x7f4a5e13a920>) [p0, p1]
+329: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+333: guard_nonnull_class(p5, 16616448, descr=<Guard0x7f4a5e13a980>) [p0, p1]
+352: guard_class(p0, 16437896, descr=<Guard0x7f4a5e1255c8>) [p0, p1]
+364: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+375: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x7f4a5e125610>) [p0, p1]
+384: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+384: guard_not_invalidated(descr=<Guard0x7f4a5e125658>) [p0, p1]
+384: p11 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+388: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+392: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+396: guard_nonnull_class(p11, 16478824, descr=<Guard0x7f4a5e13a9e0>) [p0, p1]
+416: guard_nonnull_class(p12, 16470384, descr=<Guard0x7f4a5e13aa40>) [p0, p1]
+436: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+448: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x7f4a5e1256a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+457: guard_class(p13, 16435920, descr=<Guard0x7f4a5e1256e8>) [p0, p1]
+470: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+474: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x7f4a5e13aaa0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+493: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+498: p22 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+503: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+508: p24 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+513: guard_class(p24, 16505296, descr=<Guard0x7f4a5e125730>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+525: p26 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+530: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13ab00>) [p0, p1]
+548: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13ab60>) [p0, p1]
+566: i29 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+570: i30 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+574: i31 = int_eq(i29, i30)
+577: guard_true(i31, descr=<Guard0x7f4a5e125778>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+583: p32 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+587: guard_nonnull_class(p32, 16616448, descr=<Guard0x7f4a5e13abc0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+614: i35 = instance_ptr_eq(p32, ConstPtr(ptr34))
+617: guard_true(i35, descr=<Guard0x7f4a5e1257c0>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+623: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13ac20>) [p0, p1]
+641: i37 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+645: i38 = int_eq(i30, i37)
+648: guard_false(i38, descr=<Guard0x7f4a5e125808>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+654: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x7f4a5e13ac80>) [p0, p1]
+673: i41 = int_ge(i37, 0)
+677: guard_true(i41, descr=<Guard0x7f4a5e125850>) [p0, p1]
+683: i42 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+687: i43 = int_lt(i37, i42)
+690: guard_true(i43, descr=<Guard0x7f4a5e125898>) [p0, p1]
+696: p44 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+700: guard_class(p44, 16622984, descr=<Guard0x7f4a5e1258e0>) [p0, p1]
+712: p46 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+716: p47 = getarrayitem_gc_r(p46, i37, descr=<ArrayP 8>)
+721: guard_class(p47, 16470384, descr=<Guard0x7f4a5e125928>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+734: p49 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+738: guard_nonnull_class(p49, ConstClass(W_Symbol), descr=<Guard0x7f4a5e13ace0>) [p0, p1]
+756: p51 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+760: guard_nonnull_class(p51, ConstClass(W_Vector), descr=<Guard0x7f4a5e13ad40>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+778: p53 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+782: guard_nonnull_class(p53, 16616448, descr=<Guard0x7f4a5e13ada0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+800: p55 = new_with_vtable(descr=<SizeDescr 32>)
+847: p56 = new_with_vtable(descr=<SizeDescr 40>)
+858: setfield_gc(p56, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+869: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+873: setfield_gc(p56, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+877: setfield_gc(p56, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+881: p58 = new_with_vtable(descr=<SizeDescr 24>)
+893: setfield_gc(p58, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+897: setfield_gc(p58, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+901: p59 = new_with_vtable(descr=<SizeDescr 48>)
+912: p60 = new_with_vtable(descr=<SizeDescr 32>)
+923: setfield_gc(p60, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+931: p63 = new_array_clear(4, descr=<ArrayP 8>)
+957: setarrayitem_gc(p63, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+961: setarrayitem_gc(p63, 1, p49, descr=<ArrayP 8>)
+965: setarrayitem_gc(p63, 2, p49, descr=<ArrayP 8>)
+969: setarrayitem_gc(p63, 3, p51, descr=<ArrayP 8>)
+973: setfield_gc(p60, p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+984: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+988: setfield_gc(p55, p53, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+992: setfield_gc(p55, p58, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1003: setfield_gc(p59, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1007: setfield_gc(p59, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1011: setfield_gc(p59, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1015: setfield_gc(p59, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1019: setfield_gc(p55, p56, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1023: setfield_gc(p59, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1027: jump(p55, p59, descr=TargetToken(59469520))
+1056: --end of the loop--
[3e4c22b46492e97] jit-log-opt-bridge}
[3e4c22b4684a5f3] {jit-backend
[3e4c22b468e7330] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c214f
[3e4c22b468f184b] jit-backend-dump}
[3e4c22b468fd02e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215034 +0  25000000
[3e4c22b468fe704] jit-backend-dump}
[3e4c22b469028be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2153b5 +0  25000000
[3e4c22b469038ac] jit-backend-dump}
[3e4c22b46906c81] {jit-backend-addr
bridge out of Guard 0x3f77220 has address 0x7f4a5c215030 to 0x7f4a5c2153b0
       gc table: 0x7f4a5c214f20
    jump target: 0x7f4a5c215030
         resops: 0x7f4a5c21503e
       failures: 0x7f4a5c2153b0
            end: 0x7f4a5c2156cb
[3e4c22b46908ef3] jit-backend-addr}
[3e4c22b4690c514] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21504e +0  A1030000
[3e4c22b4690d3bd] jit-backend-dump}
[3e4c22b46910755] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215062 +0  A9030000
[3e4c22b46911513] jit-backend-dump}
[3e4c22b46914993] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215081 +0  C2030000
[3e4c22b469157bf] jit-backend-dump}
[3e4c22b46918a62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215094 +0  CB030000
[3e4c22b4691979f] jit-backend-dump}
[3e4c22b4691c90e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2150a8 +0  D3030000
[3e4c22b4691d60e] jit-backend-dump}
[3e4c22b469207ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2150b6 +0  E1030000
[3e4c22b4692150f] jit-backend-dump}
[3e4c22b469279b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2150cd +0  E6030000
[3e4c22b469287df] jit-backend-dump}
[3e4c22b4692bf4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2150e9 +0  E6030000
[3e4c22b4692cc6c] jit-backend-dump}
[3e4c22b4692febf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2150ff +0  EC030000
[3e4c22b46930b73] jit-backend-dump}
[3e4c22b46933d2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215112 +0  F5030000
[3e4c22b469349c3] jit-backend-dump}
[3e4c22b46937b1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215123 +0  00040000
[3e4c22b469387d2] jit-backend-dump}
[3e4c22b4693b916] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215137 +0  08040000
[3e4c22b4693c5ba] jit-backend-dump}
[3e4c22b4693f6df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215141 +0  1A040000
[3e4c22b4694037a] jit-backend-dump}
[3e4c22b469434ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21514f +0  28040000
[3e4c22b46944162] jit-backend-dump}
[3e4c22b4694727a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215161 +0  32040000
[3e4c22b46947f28] jit-backend-dump}
[3e4c22b4694b099] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215179 +0  36040000
[3e4c22b4694bd47] jit-backend-dump}
[3e4c22b4694efb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215190 +0  3B040000
[3e4c22b4694fc7c] jit-backend-dump}
[3e4c22b46952e5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2151a0 +0  47040000
[3e4c22b46953b2a] jit-backend-dump}
[3e4c22b46956d97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2151b3 +0  50040000
[3e4c22b46957a75] jit-backend-dump}
[3e4c22b4695ac5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2151c0 +0  5F040000
[3e4c22b4695b933] jit-backend-dump}
[3e4c22b4695eb65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2151d8 +0  63040000
[3e4c22b4695f831] jit-backend-dump}
[3e4c22b46962a07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2151ee +0  69040000
[3e4c22b469636c1] jit-backend-dump}
[3e4c22b469668c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2151f7 +0  7C040000
[3e4c22b4696758b] jit-backend-dump}
[3e4c22b4696a786] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21520e +0  81040000
[3e4c22b4696b440] jit-backend-dump}
[3e4c22b4696e632] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215225 +0  86040000
[3e4c22b4696f2e8] jit-backend-dump}
[3e4c22b469727c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ea4d6 +0  56AB0200
[3e4c22b469734e9] jit-backend-dump}
[3e4c22b469776db] jit-backend}
[3e4c22b4697b41a] {jit-log-opt-bridge
# bridge out of Guard 0x3f77220 with 138 ops
[p0, p1, p2, p3, p4]
+294: guard_class(p0, 16437896, descr=<Guard0x7f4a5e13ae00>) [p0, p1, p2, p3, p4]
+306: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+317: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x7f4a5e157bf8>) [p0, p1, p2, p3, p4]
+326: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+326: guard_not_invalidated(descr=<Guard0x7f4a5e157c40>) [p0, p1, p2, p3, p4]
+326: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+330: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+334: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+338: guard_nonnull_class(p9, 16478824, descr=<Guard0x7f4a5e13ae60>) [p0, p1, p2, p3, p4]
+357: guard_nonnull_class(p10, 16470384, descr=<Guard0x7f4a5e13aec0>) [p0, p1, p2, p3, p4]
+376: p14 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+387: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x7f4a5e157c88>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+396: guard_class(p11, 16437896, descr=<Guard0x7f4a5e157cd0>) [p0, p1, p2, p3, p4]
+410: p17 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+414: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x7f4a5e13af20>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+433: p19 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+437: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+441: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+445: p22 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+449: guard_class(p22, 16505296, descr=<Guard0x7f4a5e157d18>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(= nc1 nc2)')
+461: p24 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+465: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13af80>) [p0, p1, p2, p3, p4]
+483: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13afe0>) [p0, p1, p2, p3, p4]
+502: i27 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+506: i28 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+510: i29 = int_eq(i27, i28)
+513: guard_false(i29, descr=<Guard0x7f4a5e157f10>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+519: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x7f4a5e13b040>) [p0, p1, p2, p3, p4]
+539: i32 = int_ge(i28, 0)
+543: guard_true(i32, descr=<Guard0x7f4a5e157f58>) [p0, p1, p2, p3, p4]
+549: i33 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+554: i34 = int_lt(i28, i33)
+557: guard_true(i34, descr=<Guard0x7f4a5e157fa0>) [p0, p1, p2, p3, p4]
+563: p35 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+568: guard_class(p35, 16622984, descr=<Guard0x7f4a5c338020>) [p0, p1, p2, p3, p4]
+581: p37 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+586: p38 = getarrayitem_gc_r(p37, i28, descr=<ArrayP 8>)
+591: guard_class(p38, 16470384, descr=<Guard0x7f4a5c338068>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+605: p40 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+609: guard_nonnull_class(p40, 16616448, descr=<Guard0x7f4a5e13b0a0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+635: i43 = instance_ptr_eq(p40, ConstPtr(ptr42))
+638: guard_true(i43, descr=<Guard0x7f4a5c3380b0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+644: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13b100>) [p0, p1, p2, p3, p4]
+663: i45 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+667: i46 = int_eq(i28, i45)
+670: guard_true(i46, descr=<Guard0x7f4a5c3380f8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+676: p47 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+681: guard_nonnull_class(p47, 16470384, descr=<Guard0x7f4a5e13b160>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+700: p49 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+704: guard_nonnull_class(p49, 16616448, descr=<Guard0x7f4a5e13b1c0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+722: i52 = instance_ptr_eq(p49, ConstPtr(ptr51))
+725: guard_true(i52, descr=<Guard0x7f4a5c338140>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+731: p53 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+735: guard_nonnull_class(p53, ConstClass(W_Symbol), descr=<Guard0x7f4a5e13b220>) [p0, p1, p2, p3, p4]
+754: p55 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+758: guard_nonnull_class(p55, ConstClass(W_Vector), descr=<Guard0x7f4a5e13b280>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+777: p57 = new_with_vtable(descr=<SizeDescr 32>)
+824: p58 = new_with_vtable(descr=<SizeDescr 40>)
+835: setfield_gc(p58, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+853: setfield_gc(p58, ConstPtr(ptr59), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+857: setfield_gc(p58, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+861: setfield_gc(p58, p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+865: p60 = new_with_vtable(descr=<SizeDescr 24>)
+876: setfield_gc(p60, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+894: p61 = new_with_vtable(descr=<SizeDescr 24>)
+905: setfield_gc(p61, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+909: setfield_gc(p61, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+913: setfield_gc(p60, p61, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+917: p62 = new_with_vtable(descr=<SizeDescr 48>)
+928: p63 = new_with_vtable(descr=<SizeDescr 56>)
+939: setfield_gc(p63, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+943: setfield_gc(p63, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+947: setfield_gc(p63, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+958: setfield_gc(p63, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+962: p65 = new_with_vtable(descr=<SizeDescr 40>)
+974: setfield_gc(p65, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+978: setfield_gc(p65, ConstPtr(ptr66), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+982: setfield_gc(p65, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+986: setfield_gc(p65, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+990: setfield_gc(p63, p65, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+994: setfield_gc(p63, p38, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+998: p67 = new_with_vtable(descr=<SizeDescr 32>)
+1010: setfield_gc(p67, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1019: p70 = new_array_clear(4, descr=<ArrayP 8>)
+1047: setarrayitem_gc(p70, 0, ConstPtr(ptr72), descr=<ArrayP 8>)
+1051: setarrayitem_gc(p70, 1, p53, descr=<ArrayP 8>)
+1055: setarrayitem_gc(p70, 2, p55, descr=<ArrayP 8>)
+1059: setarrayitem_gc(p70, 3, p55, descr=<ArrayP 8>)
+1063: setfield_gc(p67, p70, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1075: setfield_gc(p67, ConstPtr(ptr76), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1087: setfield_gc(p62, ConstPtr(ptr77), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1091: setfield_gc(p62, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1095: setfield_gc(p62, p63, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1099: setfield_gc(p62, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1103: setfield_gc(p57, p58, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1114: setfield_gc(p57, p49, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1125: setfield_gc(p57, p60, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1129: setfield_gc(p62, p67, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1133: jump(p57, p62, descr=TargetToken(59469520))
+1168: --end of the loop--
[3e4c22b469e3338] jit-log-opt-bridge}
[3e4c22b46f81474] {jit-backend
[3e4c22b4706218c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2158a
[3e4c22b47200963] jit-backend-dump}
[3e4c22b4720cb4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2159d4 +0  25000000
[3e4c22b4720e051] jit-backend-dump}
[3e4c22b47211f40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215e25 +0  25000000
[3e4c22b47212de0] jit-backend-dump}
[3e4c22b4721641c] {jit-backend-addr
bridge out of Guard 0x3e12698 has address 0x7f4a5c2159d0 to 0x7f4a5c215e20
       gc table: 0x7f4a5c2158a0
    jump target: 0x7f4a5c2159d0
         resops: 0x7f4a5c2159de
       failures: 0x7f4a5c215e20
            end: 0x7f4a5c216163
[3e4c22b4721863f] jit-backend-addr}
[3e4c22b4721bd36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2159ee +0  99040000
[3e4c22b4721cb80] jit-backend-dump}
[3e4c22b4721ff34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2159fb +0  A8040000
[3e4c22b47220c1e] jit-backend-dump}
[3e4c22b47223f9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215a0b +0  B4040000
[3e4c22b47224c7f] jit-backend-dump}
[3e4c22b47227e1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215a22 +0  B9040000
[3e4c22b47228b0c] jit-backend-dump}
[3e4c22b4722bd0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215a30 +0  C7040000
[3e4c22b4722c9fb] jit-backend-dump}
[3e4c22b4722fb9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215a44 +0  CF040000
[3e4c22b4723086f] jit-backend-dump}
[3e4c22b47233bf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215a5b +0  F0040000
[3e4c22b47234923] jit-backend-dump}
[3e4c22b47237beb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215a6d +0  FA040000
[3e4c22b4723889e] jit-backend-dump}
[3e4c22b4723baaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215a82 +0  01050000
[3e4c22b4723c75c] jit-backend-dump}
[3e4c22b4723f920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215a98 +0  07050000
[3e4c22b472405be] jit-backend-dump}
[3e4c22b47243782] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215ab0 +0  0B050000
[3e4c22b47244417] jit-backend-dump}
[3e4c22b472475ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215abd +0  1A050000
[3e4c22b472482a1] jit-backend-dump}
[3e4c22b4724b499] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215acd +0  26050000
[3e4c22b4724c153] jit-backend-dump}
[3e4c22b4724f3b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215ae1 +0  2E050000
[3e4c22b47250063] jit-backend-dump}
[3e4c22b4725324f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215af7 +0  34050000
[3e4c22b47253f1e] jit-backend-dump}
[3e4c22b472570d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215b0c +0  3B050000
[3e4c22b47257d83] jit-backend-dump}
[3e4c22b4725af69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215b16 +0  4D050000
[3e4c22b4725bc10] jit-backend-dump}
[3e4c22b4725edf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215b23 +0  5C050000
[3e4c22b4725fa9d] jit-backend-dump}
[3e4c22b47262c9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215b89 +0  12050000
[3e4c22b47263955] jit-backend-dump}
[3e4c22b47266b1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215b96 +0  21050000
[3e4c22b472677ee] jit-backend-dump}
[3e4c22b4726aa48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215bad +0  26050000
[3e4c22b4726b71a] jit-backend-dump}
[3e4c22b4726e92b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215bc1 +0  2E050000
[3e4c22b4726f5e7] jit-backend-dump}
[3e4c22b472727df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215bd5 +0  36050000
[3e4c22b472734a8] jit-backend-dump}
[3e4c22b472766a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215be8 +0  3F050000
[3e4c22b47277363] jit-backend-dump}
[3e4c22b4727a59b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c215c4f +0  F4040000
[3e4c22b4727b26a] jit-backend-dump}
[3e4c22b4727e799] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e4152 +0  7A180300
[3e4c22b4727f4c4] jit-backend-dump}
[3e4c22b47283718] jit-backend}
[3e4c22b472875e2] {jit-log-opt-bridge
# bridge out of Guard 0x3e12698 with 166 ops
[p0, p1]
+326: guard_class(p1, 16500016, descr=<Guard0x7f4a5e13b4c0>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+342: guard_nonnull(p3, descr=<Guard0x7f4a5c3386e0>) [p0, p1]
+358: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+361: guard_true(i5, descr=<Guard0x7f4a5c338698>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+367: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+371: guard_nonnull_class(p6, 16616448, descr=<Guard0x7f4a5e13b640>) [p0, p1]
+390: guard_class(p0, 16437352, descr=<Guard0x7f4a5c338650>) [p0, p1]
+404: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+415: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x7f4a5c338608>) [p0, p1]
+424: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+424: guard_not_invalidated(descr=<Guard0x7f4a5c3385c0>) [p0, p1]
+424: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+428: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x7f4a5e13b5e0>) [p0, p1]
+447: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+451: guard_class(p14, 16435920, descr=<Guard0x7f4a5c338578>) [p0, p1]
+465: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+477: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x7f4a5c338530>) [p0, p1]
+486: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+491: p19 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+496: guard_class(p19, 16435920, descr=<Guard0x7f4a5c3384e8>) [p0, p1]
+508: p21 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+512: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x7f4a5e13b580>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! radicals i AppRand29) from (cons AppRand1 AppRand2)')
+532: guard_class(p18, 16504944, descr=<Guard0x7f4a5c3384a0>) [p0, p1]
+545: p24 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+549: guard_class(p24, 16479576, descr=<Guard0x7f4a5c338458>) [p0, p1]
+561: p26 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+572: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x7f4a5c338410>) [p0, p1]
+581: p28 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+585: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x7f4a5e13b520>) [p0, p1]
+603: i30 = getfield_gc_i(p18, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+607: p31 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+611: guard_class(p31, 16622984, descr=<Guard0x7f4a5c3383c8>) [p0, p1]
+624: i34 = int_ge(i30, 0)
+628: guard_true(i34, descr=<Guard0x7f4a5c338380>) [p0, p1]
+634: i35 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+638: i36 = int_lt(i30, i35)
+641: guard_true(i36, descr=<Guard0x7f4a5c338338>) [p0, p1]
+647: p37 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+651: p38 = new_with_vtable(descr=<SizeDescr 24>)
+698: setfield_gc(p38, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+702: setfield_gc(p38, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+717: setarrayitem_gc(p37, i30, p38, descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand30 (+ i 1)]) (loop AppRand30))')
debug_merge_point(0, 0, '(+ i 1)')
+722: i40 = int_add(i30, 1)
debug_merge_point(0, 0, '(loop AppRand30)')
debug_merge_point(0, 0, '(let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))) from (loop AppRand30)')
debug_merge_point(0, 0, '(> i n/2)')
+726: p41 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+730: guard_nonnull_class(p41, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13b460>) [p41, p24, p19, p21, i40]
+749: i43 = getfield_gc_i(p41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+753: i44 = int_gt(i40, i43)
+756: guard_false(i44, descr=<Guard0x7f4a5c3382f0>) [p41, p24, p19, p21, i40]
debug_merge_point(0, 0, '(if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))')
debug_merge_point(0, 0, '(let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30)))')
debug_merge_point(0, 0, '(rads-of-size i)')
+762: p45 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+766: guard_nonnull_class(p45, 16477696, descr=<Guard0x7f4a5e13b400>) [p41, p24, p19, p21, i40]
+785: p47 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+796: guard_value(p47, ConstPtr(ptr48), descr=<Guard0x7f4a5c3382a8>) [p41, p24, p19, p21, i40]
+805: p49 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '())))')
debug_merge_point(0, 0, '(lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))')
+805: p50 = getfield_gc_r(p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+809: p51 = getfield_gc_r(p45, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+813: guard_class(p51, 16505296, descr=<Guard0x7f4a5c338260>) [p41, p24, p19, p21, i40]
+825: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x7f4a5e13b3a0>) [p41, p24, p19, p21, i40]
debug_merge_point(0, 0, '(- n4967 1)')
debug_merge_point(0, 0, '(let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))')
debug_merge_point(0, 0, '(three-partitions AppRand9)')
debug_merge_point(0, 0, '(let ([loop15177 (lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))]) (loop15177 '() (quotient m 3)))')
debug_merge_point(0, 0, '(lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))')
debug_merge_point(0, 0, '(loop15177 '() (quotient m 3))')
+844: i55 = uint_mul_high(i30, -6148914691236517205)
+864: i57 = uint_rshift(i55, 1)
+867: i59 = int_mul(i57, 3)
+867: i61 = int_xor(i30, 3)
+867: i62 = int_ne(i59, i30)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, '(let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))')
debug_merge_point(0, 0, 'lst5179')
debug_merge_point(0, 0, '(lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))')
debug_merge_point(0, 0, '(- m nc15181)')
+867: i63 = int_sub(i30, i57)
debug_merge_point(0, 0, '(loop25185 lst5179 (quotient AppRand36 2))')
+873: i65 = int_rshift(i63, 1)
+879: i67 = int_lshift(i65, 1)
+889: i69 = int_xor(i63, 2)
+900: i71 = int_rshift(i69, 63)
+904: i72 = int_ne(i67, i63)
+928: i73 = int_and(i71, i72)
+931: i74 = int_add(i65, i73)
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+938: i75 = int_lt(i74, i57)
+941: guard_false(i75, descr=<Guard0x7f4a5c338218>) [p41, p24, p19, p21, i40]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+947: i76 = int_add(i57, i74)
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+953: i77 = int_sub(i30, i76)
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+959: i79 = int_sub(i74, 1)
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+964: p80 = new_with_vtable(descr=<SizeDescr 32>)
+975: p81 = new_with_vtable(descr=<SizeDescr 48>)
+1000: setfield_gc(p81, ConstPtr(ptr82), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1018: setfield_gc(p81, ConstPtr(ptr83), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1022: p84 = new_with_vtable(descr=<SizeDescr 16>)
+1033: setfield_gc(p84, i57, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1037: setfield_gc(p81, p84, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1041: p85 = new_with_vtable(descr=<SizeDescr 32>)
+1059: setfield_gc(p85, ConstPtr(ptr86), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1070: setfield_gc(p85, ConstPtr(ptr87), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1074: setfield_gc(p85, i30, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+1078: setfield_gc(p81, p85, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1089: p88 = new_with_vtable(descr=<SizeDescr 16>)
+1100: setfield_gc(p88, i30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1104: setfield_gc(p81, p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1108: p89 = new_with_vtable(descr=<SizeDescr 24>)
+1119: p90 = new_with_vtable(descr=<SizeDescr 32>)
+1130: setfield_gc(p90, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1138: p93 = new_array(3, descr=<ArrayS 8>)
+1164: setarrayitem_gc(p93, 0, i57, descr=<ArrayS 8>)
+1168: setarrayitem_gc(p93, 1, i74, descr=<ArrayS 8>)
+1172: setarrayitem_gc(p93, 2, i77, descr=<ArrayS 8>)
+1176: setfield_gc(p90, p93, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1187: setfield_gc(p90, ConstPtr(ptr97), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1191: setfield_gc(p89, p90, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1202: setfield_gc(p89, ConstPtr(ptr98), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1206: p99 = new_with_vtable(descr=<SizeDescr 40>)
+1217: p100 = new_with_vtable(descr=<SizeDescr 32>)
+1228: setfield_gc(p100, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1239: setfield_gc(p100, i30, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1243: p101 = new_with_vtable(descr=<SizeDescr 32>)
+1254: setfield_gc(p101, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1265: setfield_gc(p101, ConstPtr(ptr102), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1269: setfield_gc(p101, p50, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1273: setfield_gc(p100, p101, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1277: p103 = new_with_vtable(descr=<SizeDescr 40>)
+1288: setfield_gc(p103, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1299: p104 = new_with_vtable(descr=<SizeDescr 24>)
+1310: setfield_gc(p104, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1314: setfield_gc(p104, i40, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1318: setfield_gc(p103, p104, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1322: setfield_gc(p103, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1326: setfield_gc(p103, ConstPtr(ptr105), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1337: setfield_gc(p99, ConstPtr(ptr106), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1341: setfield_gc(p99, p100, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1345: setfield_gc(p99, p103, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1349: setfield_gc(p99, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1353: setfield_gc(p80, p81, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1364: setfield_gc(p80, i79, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1375: setfield_gc(p80, p89, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1379: jump(p80, p99, descr=TargetToken(61029280))
+1408: --end of the loop--
[3e4c22b472f3ac7] jit-log-opt-bridge}
[3e4c22b4764ae85] {jit-backend
[3e4c22b47714351] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b4771f131] jit-backend-dump}
[3e4c22b4772aad0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216474 +0  25000000
[3e4c22b4772bf82] jit-backend-dump}
[3e4c22b477302cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2168c5 +0  25000000
[3e4c22b477311a7] jit-backend-dump}
[3e4c22b47734802] {jit-backend-addr
bridge out of Guard 0x3cec1d0 has address 0x7f4a5c216470 to 0x7f4a5c2168c0
       gc table: 0x7f4a5c216340
    jump target: 0x7f4a5c216470
         resops: 0x7f4a5c21647e
       failures: 0x7f4a5c2168c0
            end: 0x7f4a5c216c02
[3e4c22b47736ba6] jit-backend-addr}
[3e4c22b4773a4ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21648e +0  98040000
[3e4c22b4773b311] jit-backend-dump}
[3e4c22b4773e785] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21649b +0  A7040000
[3e4c22b4773f470] jit-backend-dump}
[3e4c22b477426e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2164ab +0  B3040000
[3e4c22b477433d6] jit-backend-dump}
[3e4c22b47746608] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2164c2 +0  B8040000
[3e4c22b477472f0] jit-backend-dump}
[3e4c22b4774a4d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2164cf +0  C7040000
[3e4c22b4774b1ba] jit-backend-dump}
[3e4c22b4774e378] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2164e3 +0  CF040000
[3e4c22b4774f04a] jit-backend-dump}
[3e4c22b47752820] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2164fa +0  F0040000
[3e4c22b477534fb] jit-backend-dump}
[3e4c22b4775681c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21650c +0  FA040000
[3e4c22b477574db] jit-backend-dump}
[3e4c22b4775a7b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216521 +0  01050000
[3e4c22b4775b51b] jit-backend-dump}
[3e4c22b4775e801] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216537 +0  07050000
[3e4c22b4775f4ec] jit-backend-dump}
[3e4c22b477627cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21654f +0  0B050000
[3e4c22b477634ba] jit-backend-dump}
[3e4c22b477666b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21655c +0  1A050000
[3e4c22b4776736c] jit-backend-dump}
[3e4c22b4776a50e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21656c +0  26050000
[3e4c22b4776b1c8] jit-backend-dump}
[3e4c22b4776e431] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216580 +0  2E050000
[3e4c22b4776f0fd] jit-backend-dump}
[3e4c22b4777234a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216596 +0  34050000
[3e4c22b47773010] jit-backend-dump}
[3e4c22b477761c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2165ab +0  3B050000
[3e4c22b47776e88] jit-backend-dump}
[3e4c22b4777a052] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2165b5 +0  4D050000
[3e4c22b4777ad40] jit-backend-dump}
[3e4c22b4777df1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2165c2 +0  5C050000
[3e4c22b4777ebfa] jit-backend-dump}
[3e4c22b47781da0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216628 +0  12050000
[3e4c22b47782a56] jit-backend-dump}
[3e4c22b47785c08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216635 +0  21050000
[3e4c22b477868c5] jit-backend-dump}
[3e4c22b47789a6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21664c +0  26050000
[3e4c22b4778a72d] jit-backend-dump}
[3e4c22b4778d8eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216660 +0  2E050000
[3e4c22b4778e5b1] jit-backend-dump}
[3e4c22b47791778] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216674 +0  36050000
[3e4c22b47792462] jit-backend-dump}
[3e4c22b47795620] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216687 +0  3F050000
[3e4c22b477962e6] jit-backend-dump}
[3e4c22b4779947f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2166ee +0  F4040000
[3e4c22b4779a139] jit-backend-dump}
[3e4c22b4779d60f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d5d8c +0  E0060400
[3e4c22b4779e303] jit-backend-dump}
[3e4c22b477a24e8] jit-backend}
[3e4c22b477a6388] {jit-log-opt-bridge
# bridge out of Guard 0x3cec1d0 with 166 ops
[p0, p1]
+326: guard_class(p1, 16500016, descr=<Guard0x7f4a5e13b6a0>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+342: guard_nonnull(p3, descr=<Guard0x7f4a5c338770>) [p0, p1]
+358: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+361: guard_true(i5, descr=<Guard0x7f4a5c3387b8>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+367: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+371: guard_nonnull_class(p6, 16470384, descr=<Guard0x7f4a5e13b700>) [p0, p1]
+390: guard_class(p0, 16437352, descr=<Guard0x7f4a5c338800>) [p0, p1]
+403: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+414: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x7f4a5c338848>) [p0, p1]
+423: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+423: guard_not_invalidated(descr=<Guard0x7f4a5c338890>) [p0, p1]
+423: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+427: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x7f4a5e13b760>) [p0, p1]
+446: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+450: guard_class(p14, 16435920, descr=<Guard0x7f4a5c3388d8>) [p0, p1]
+464: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+476: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x7f4a5c338920>) [p0, p1]
+485: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+490: p19 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+495: guard_class(p19, 16435920, descr=<Guard0x7f4a5c338968>) [p0, p1]
+507: p21 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+511: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x7f4a5e13b7c0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! radicals i AppRand29) from (cons AppRand1 AppRand2)')
+531: guard_class(p18, 16504944, descr=<Guard0x7f4a5c3389b0>) [p0, p1]
+544: p24 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+548: guard_class(p24, 16479576, descr=<Guard0x7f4a5c3389f8>) [p0, p1]
+560: p26 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+571: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x7f4a5c338a40>) [p0, p1]
+580: p28 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+584: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x7f4a5e13b820>) [p0, p1]
+602: i30 = getfield_gc_i(p18, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+606: p31 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+610: guard_class(p31, 16622984, descr=<Guard0x7f4a5c338a88>) [p0, p1]
+623: i34 = int_ge(i30, 0)
+627: guard_true(i34, descr=<Guard0x7f4a5c338ad0>) [p0, p1]
+633: i35 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+637: i36 = int_lt(i30, i35)
+640: guard_true(i36, descr=<Guard0x7f4a5c338b18>) [p0, p1]
+646: p37 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+650: p38 = new_with_vtable(descr=<SizeDescr 24>)
+697: setfield_gc(p38, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+701: setfield_gc(p38, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+716: setarrayitem_gc(p37, i30, p38, descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand30 (+ i 1)]) (loop AppRand30))')
debug_merge_point(0, 0, '(+ i 1)')
+721: i40 = int_add(i30, 1)
debug_merge_point(0, 0, '(loop AppRand30)')
debug_merge_point(0, 0, '(let ([if5 (> i n/2)]) (if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))) from (loop AppRand30)')
debug_merge_point(0, 0, '(> i n/2)')
+725: p41 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+729: guard_nonnull_class(p41, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13b880>) [p41, p24, p19, p21, i40]
+748: i43 = getfield_gc_i(p41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+752: i44 = int_gt(i40, i43)
+755: guard_false(i44, descr=<Guard0x7f4a5c338b60>) [p41, p24, p19, p21, i40]
debug_merge_point(0, 0, '(if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))')
debug_merge_point(0, 0, '(let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30)))')
debug_merge_point(0, 0, '(rads-of-size i)')
+761: p45 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+765: guard_nonnull_class(p45, 16477696, descr=<Guard0x7f4a5e13b8e0>) [p41, p24, p19, p21, i40]
+784: p47 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+795: guard_value(p47, ConstPtr(ptr48), descr=<Guard0x7f4a5c338ba8>) [p41, p24, p19, p21, i40]
+804: p49 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop1 (lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))][AppRand9 (- n4967 1)]) (let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '())))')
debug_merge_point(0, 0, '(lambda (ps lst) (if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))))')
+804: p50 = getfield_gc_r(p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+808: p51 = getfield_gc_r(p45, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+812: guard_class(p51, 16505296, descr=<Guard0x7f4a5c338bf0>) [p41, p24, p19, p21, i40]
+824: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x7f4a5e13b940>) [p41, p24, p19, p21, i40]
debug_merge_point(0, 0, '(- n4967 1)')
debug_merge_point(0, 0, '(let ([AppRand10 (three-partitions AppRand9)]) (loop1 AppRand10 '()))')
debug_merge_point(0, 0, '(three-partitions AppRand9)')
debug_merge_point(0, 0, '(let ([loop15177 (lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))]) (loop15177 '() (quotient m 3)))')
debug_merge_point(0, 0, '(lambda (lst5179 nc15181) (let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))))')
debug_merge_point(0, 0, '(loop15177 '() (quotient m 3))')
+843: i55 = uint_mul_high(i30, -6148914691236517205)
+863: i57 = uint_rshift(i55, 1)
+866: i59 = int_mul(i57, 3)
+866: i61 = int_xor(i30, 3)
+866: i62 = int_ne(i59, i30)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, '(let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))')
debug_merge_point(0, 0, 'lst5179')
debug_merge_point(0, 0, '(lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))')
debug_merge_point(0, 0, '(- m nc15181)')
+866: i63 = int_sub(i30, i57)
debug_merge_point(0, 0, '(loop25185 lst5179 (quotient AppRand36 2))')
+872: i65 = int_rshift(i63, 1)
+878: i67 = int_lshift(i65, 1)
+888: i69 = int_xor(i63, 2)
+899: i71 = int_rshift(i69, 63)
+903: i72 = int_ne(i67, i63)
+927: i73 = int_and(i71, i72)
+930: i74 = int_add(i65, i73)
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 lst5179 (quotient AppRand36 2))')
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+937: i75 = int_lt(i74, i57)
+940: guard_false(i75, descr=<Guard0x7f4a5c338c38>) [p41, p24, p19, p21, i40]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))))')
debug_merge_point(0, 0, '(+ nc15181 nc25189)')
+946: i76 = int_add(i57, i74)
debug_merge_point(0, 0, '(let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))')
debug_merge_point(0, 0, '(- m AppRand32)')
+952: i77 = int_sub(i30, i76)
debug_merge_point(0, 0, '(let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35))')
debug_merge_point(0, 0, '(vector nc15181 nc25189 AppRand33)')
debug_merge_point(0, 0, '(- nc25189 1)')
+958: i79 = int_sub(i74, 1)
debug_merge_point(0, 0, '(loop25185 (cons AppRand34 lst5187) AppRand35)')
debug_merge_point(0, 0, '(let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))) from (loop25185 (cons AppRand34 lst5187) AppRand35)')
+963: p80 = new_with_vtable(descr=<SizeDescr 32>)
+974: p81 = new_with_vtable(descr=<SizeDescr 48>)
+999: setfield_gc(p81, ConstPtr(ptr82), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1017: setfield_gc(p81, ConstPtr(ptr83), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1021: p84 = new_with_vtable(descr=<SizeDescr 16>)
+1032: setfield_gc(p84, i57, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1036: setfield_gc(p81, p84, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1040: p85 = new_with_vtable(descr=<SizeDescr 32>)
+1058: setfield_gc(p85, ConstPtr(ptr86), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1069: setfield_gc(p85, ConstPtr(ptr87), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1073: setfield_gc(p85, i30, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+1077: setfield_gc(p81, p85, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1088: p88 = new_with_vtable(descr=<SizeDescr 16>)
+1099: setfield_gc(p88, i30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1103: setfield_gc(p81, p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1107: p89 = new_with_vtable(descr=<SizeDescr 24>)
+1118: p90 = new_with_vtable(descr=<SizeDescr 32>)
+1129: setfield_gc(p90, 3, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1137: p93 = new_array(3, descr=<ArrayS 8>)
+1163: setarrayitem_gc(p93, 0, i57, descr=<ArrayS 8>)
+1167: setarrayitem_gc(p93, 1, i74, descr=<ArrayS 8>)
+1171: setarrayitem_gc(p93, 2, i77, descr=<ArrayS 8>)
+1175: setfield_gc(p90, p93, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1186: setfield_gc(p90, ConstPtr(ptr97), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1190: setfield_gc(p89, p90, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1201: setfield_gc(p89, ConstPtr(ptr98), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1205: p99 = new_with_vtable(descr=<SizeDescr 40>)
+1217: p100 = new_with_vtable(descr=<SizeDescr 32>)
+1228: setfield_gc(p100, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1239: setfield_gc(p100, i30, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1243: p101 = new_with_vtable(descr=<SizeDescr 32>)
+1254: setfield_gc(p101, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1265: setfield_gc(p101, ConstPtr(ptr102), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1269: setfield_gc(p101, p50, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1273: setfield_gc(p100, p101, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1277: p103 = new_with_vtable(descr=<SizeDescr 40>)
+1288: setfield_gc(p103, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1299: p104 = new_with_vtable(descr=<SizeDescr 24>)
+1310: setfield_gc(p104, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1314: setfield_gc(p104, i40, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1318: setfield_gc(p103, p104, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1322: setfield_gc(p103, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1326: setfield_gc(p103, ConstPtr(ptr105), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1337: setfield_gc(p99, ConstPtr(ptr106), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1341: setfield_gc(p99, p100, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1345: setfield_gc(p99, p103, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1349: setfield_gc(p99, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1353: setfield_gc(p80, p81, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1364: setfield_gc(p80, i79, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1375: setfield_gc(p80, p89, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1379: jump(p80, p99, descr=TargetToken(61029280))
+1408: --end of the loop--
[3e4c22b4781f674] jit-log-opt-bridge}
[3e4c22b484ea5f4] {jit-backend
[3e4c22b4855193d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216d
[3e4c22b485593b0] jit-backend-dump}
[3e4c22b48568ce6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216dc4 +0  25000000
[3e4c22b4856a31c] jit-backend-dump}
[3e4c22b4856e8ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216fd5 +0  25000000
[3e4c22b4856f921] jit-backend-dump}
[3e4c22b48573232] {jit-backend-addr
bridge out of Guard 0x3be1ac0 has address 0x7f4a5c216dc0 to 0x7f4a5c216fd0
       gc table: 0x7f4a5c216d20
    jump target: 0x7f4a5c216dc0
         resops: 0x7f4a5c216dce
       failures: 0x7f4a5c216fd0
            end: 0x7f4a5c2171b7
[3e4c22b485756ff] jit-backend-addr}
[3e4c22b485790b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216dde +0  31020000
[3e4c22b4857a0cd] jit-backend-dump}
[3e4c22b4857d630] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216df5 +0  36020000
[3e4c22b4857e3cf] jit-backend-dump}
[3e4c22b485817c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216e05 +0  42020000
[3e4c22b485824f7] jit-backend-dump}
[3e4c22b485857b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216e11 +0  52020000
[3e4c22b485864e4] jit-backend-dump}
[3e4c22b4858977b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216e28 +0  57020000
[3e4c22b4858a46e] jit-backend-dump}
[3e4c22b4858d93e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216e3a +0  7D020000
[3e4c22b4858e638] jit-backend-dump}
[3e4c22b485918e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216e4e +0  85020000
[3e4c22b485925dc] jit-backend-dump}
[3e4c22b48595832] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216e65 +0  8A020000
[3e4c22b4859657f] jit-backend-dump}
[3e4c22b485997d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216e7d +0  8E020000
[3e4c22b4859a4b4] jit-backend-dump}
[3e4c22b4859d6e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216e94 +0  93020000
[3e4c22b4859e3e0] jit-backend-dump}
[3e4c22b485a1612] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216eab +0  98020000
[3e4c22b485a2303] jit-backend-dump}
[3e4c22b485a550d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216ec2 +0  9D020000
[3e4c22b485a61fe] jit-backend-dump}
[3e4c22b485a94d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216edc +0  9F020000
[3e4c22b485aa1db] jit-backend-dump}
[3e4c22b485ad4a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c216ef3 +0  A4020000
[3e4c22b485ae18b] jit-backend-dump}
[3e4c22b485b166a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d6233 +0  890B0400
[3e4c22b485b23ba] jit-backend-dump}
[3e4c22b485b67ad] jit-backend}
[3e4c22b485ba68a] {jit-log-opt-bridge
# bridge out of Guard 0x3be1ac0 with 52 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x7f4a5e13ba00>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16470384, descr=<Guard0x7f4a5e13ba60>) [p0, p1]
+224: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+227: guard_false(i6, descr=<Guard0x7f4a5c338cc8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+233: guard_class(p0, 16437352, descr=<Guard0x7f4a5c338d10>) [p0, p1]
+245: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+249: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x7f4a5e13bac0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+268: guard_not_invalidated(descr=<Guard0x7f4a5c338d58>) [p0, p1]
+268: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+272: guard_class(p10, 16478072, descr=<Guard0x7f4a5c338da0>) [p0, p1]
+286: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+297: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x7f4a5c338de8>) [p0, p1]
+306: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+310: guard_nonnull_class(p14, 16470384, descr=<Guard0x7f4a5e13bb20>) [p0, p1]
+329: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+333: guard_nonnull_class(p16, ConstClass(W_Vector), descr=<Guard0x7f4a5e13bb80>) [p0, p1]
+353: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+357: guard_nonnull_class(p18, 16470384, descr=<Guard0x7f4a5e13bbe0>) [p0, p1]
+376: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+380: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x7f4a5e13bc40>) [p0, p1]
+399: p22 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+403: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x7f4a5e13bca0>) [p0, p1]
+422: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+426: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+430: guard_nonnull_class(p25, 16616448, descr=<Guard0x7f4a5e13bd00>) [p0, p1]
+448: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+452: guard_nonnull_class(p27, 16616448, descr=<Guard0x7f4a5e13bd60>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+471: p29 = new_with_vtable(descr=<SizeDescr 32>)
+518: p30 = new_with_vtable(descr=<SizeDescr 48>)
+529: p31 = new_with_vtable(descr=<SizeDescr 32>)
+540: setfield_gc(p31, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+548: p34 = new_array_clear(4, descr=<ArrayP 8>)
+581: setarrayitem_gc(p34, 0, ConstPtr(ptr36), descr=<ArrayP 8>)
+585: setarrayitem_gc(p34, 1, p16, descr=<ArrayP 8>)
+589: setarrayitem_gc(p34, 2, p20, descr=<ArrayP 8>)
+593: setarrayitem_gc(p34, 3, p22, descr=<ArrayP 8>)
+597: setfield_gc(p31, p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: setfield_gc(p31, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+612: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+623: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+627: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+631: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+635: setfield_gc(p30, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p30, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+658: jump(p29, p30, descr=TargetToken(59469520))
+688: --end of the loop--
[3e4c22b485ebb21] jit-log-opt-bridge}
[3e4c22b48a82f6a] {jit-backend
[3e4c22b48b5add1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b48b6629c] jit-backend-dump}
[3e4c22b48b71a55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217484 +0  2A000000
[3e4c22b48b73180] jit-backend-dump}
[3e4c22b48b77466] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217945 +0  2A000000
[3e4c22b48b7836b] jit-backend-dump}
[3e4c22b48b7b9c3] {jit-backend-addr
bridge out of Guard 0x476efe0 has address 0x7f4a5c217480 to 0x7f4a5c217940
       gc table: 0x7f4a5c217360
    jump target: 0x7f4a5c217480
         resops: 0x7f4a5c21748e
       failures: 0x7f4a5c217940
            end: 0x7f4a5c217c07
[3e4c22b48b7dc57] jit-backend-addr}
[3e4c22b48b81316] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2174a4 +0  DB040000
[3e4c22b48b82114] jit-backend-dump}
[3e4c22b48b854d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2174b1 +0  EA040000
[3e4c22b48b861e0] jit-backend-dump}
[3e4c22b48b895e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2174c8 +0  0B050000
[3e4c22b48b8a2a6] jit-backend-dump}
[3e4c22b48b8d727] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2174dc +0  13050000
[3e4c22b48b8e3bf] jit-backend-dump}
[3e4c22b48b9154f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2174f3 +0  18050000
[3e4c22b48b921f6] jit-backend-dump}
[3e4c22b48b95386] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21750a +0  1D050000
[3e4c22b48b96030] jit-backend-dump}
[3e4c22b48b991ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21751e +0  25050000
[3e4c22b48b99e5e] jit-backend-dump}
[3e4c22b48b9d01c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217536 +0  29050000
[3e4c22b48b9dce2] jit-backend-dump}
[3e4c22b48ba0ecb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21754d +0  2E050000
[3e4c22b48ba1b72] jit-backend-dump}
[3e4c22b48ba4d64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217561 +0  36050000
[3e4c22b48ba5a02] jit-backend-dump}
[3e4c22b48ba8b9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217575 +0  3E050000
[3e4c22b48ba9874] jit-backend-dump}
[3e4c22b48baca22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217587 +0  48050000
[3e4c22b48bad6eb] jit-backend-dump}
[3e4c22b48bb089d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217594 +0  57050000
[3e4c22b48bb1572] jit-backend-dump}
[3e4c22b48bb471a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2175d9 +0  2E050000
[3e4c22b48bb53af] jit-backend-dump}
[3e4c22b48bb854f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2175e9 +0  3A050000
[3e4c22b48bb9202] jit-backend-dump}
[3e4c22b48bbc3c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217658 +0  E7040000
[3e4c22b48bbd05e] jit-backend-dump}
[3e4c22b48bc04cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2176a0 +0  BB040000
[3e4c22b48bc11bd] jit-backend-dump}
[3e4c22b48bc443f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2176a9 +0  CE040000
[3e4c22b48bc802e] jit-backend-dump}
[3e4c22b48bcbcc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2176b9 +0  DA040000
[3e4c22b48bcca6a] jit-backend-dump}
[3e4c22b48bcfd69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2176ec +0  C3040000
[3e4c22b48bd0a66] jit-backend-dump}
[3e4c22b48bd3c77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2176fb +0  D0040000
[3e4c22b48bd49b4] jit-backend-dump}
[3e4c22b48bd7c45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21770b +0  DC040000
[3e4c22b48bd890b] jit-backend-dump}
[3e4c22b48bdbe40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f31c3 +0  B9420200
[3e4c22b48bdcb2d] jit-backend-dump}
[3e4c22b48be0bea] jit-backend}
[3e4c22b48be493c] {jit-log-opt-bridge
# bridge out of Guard 0x476efe0 with 199 ops
[p0, p1, p2, p3, i4]
+310: guard_nonnull_class(p0, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13bdc0>) [p0, p1, p2, p3, i4]
+328: i6 = getfield_gc_i(p0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+332: i7 = int_gt(i4, i6)
+335: guard_true(i7, descr=<Guard0x7f4a5c338e78>) [p0, p1, p2, p3, i4]
+341: guard_not_invalidated(descr=<Guard0x7f4a5c338ec0>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(if if5 (let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28)) (let ([AppRand29 (rads-of-size i)]) (vector-set! radicals i AppRand29) (let ([AppRand30 (+ i 1)]) (loop AppRand30))))')
debug_merge_point(0, 0, '(let ([AppRand27 (bcp-generator n)][AppRand28 (ccp-generator n)]) (vector AppRand27 AppRand28))')
+341: p8 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+345: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x7f4a5e13be20>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(bcp-generator n)')
+364: p10 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+375: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x7f4a5c338f08>) [p0, p1, p2, p3, i4]
+384: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+388: guard_nonnull_class(p12, 16477696, descr=<Guard0x7f4a5e13be80>) [p0, p1, p2, p3, i4]
+407: p14 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+411: guard_nonnull_class(p14, ConstClass(W_Fixnum), descr=<Guard0x7f4a5e13bee0>) [p0, p1, p2, p3, i4]
+430: p16 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+441: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x7f4a5c338f50>) [p0, p1, p2, p3, i4]
+450: p18 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+454: i19 = getfield_gc_i(p14, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(if (odd? j) '() (let ([loop15035 (lambda (rads15037 lst5039) (if (null? rads15037) lst5039 (let ([loop25043 (lambda (rads25045 lst5047) (if (null? rads25045) lst5047 (let ([AppRand11 (vector 'BCP (car rads15037) (car rads25045))][AppRand12 (loop25043 (cdr rads25045) lst5047)]) (cons AppRand11 AppRand12))))][rads15037 rads15037][AppRand13 (loop15035 (cdr rads15037) lst5039)]) (loop25043 rads15037 AppRand13))))][AppRand14 (vector-ref radicals (quotient j 2))]) (loop15035 AppRand14 '())))')
+458: i21 = int_and(i19, 1)
+465: guard_true(i21, descr=<Guard0x7f4a5c338f98>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, ''()')
debug_merge_point(0, 0, '(ccp-generator n) from (bcp-generator n)')
+474: p22 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+478: guard_nonnull_class(p22, 16477696, descr=<Guard0x7f4a5e13bf40>) [p0, p1, p2, p3, i4]
+497: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+508: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x7f4a5c338fe0>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(let ([loop15067 (lambda (ps5069 lst5071) (if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))))][AppRand25 (- j5065 1)]) (let ([AppRand26 (four-partitions AppRand25)]) (loop15067 AppRand26 '())))')
debug_merge_point(0, 0, '(lambda (ps5069 lst5071) (if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))))')
+517: p26 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+521: p27 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+525: guard_class(p27, 16505296, descr=<Guard0x7f4a5c339028>) [p0, p1, p2, p3, i4]
+537: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x7f4a5e13bfa0>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(- j5065 1)')
+555: i31 = int_sub_ovf(i19, 1)
+562: guard_no_overflow(descr=<Guard0x7f4a5c339070>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(let ([AppRand26 (four-partitions AppRand25)]) (loop15067 AppRand26 '()))')
debug_merge_point(0, 0, '(four-partitions AppRand25)')
debug_merge_point(0, 0, '(let ([loop15212 (lambda (lst5214 nc15216) (let ([if8 (< nc15216 0)]) (if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3))))))]) (loop15212 '() (quotient m5210 4)))')
debug_merge_point(0, 0, '(lambda (lst5214 nc15216) (let ([if8 (< nc15216 0)]) (if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3))))))')
debug_merge_point(0, 0, '(loop15212 '() (quotient m5210 4))')
+568: i33 = int_eq(i31, -9223372036854775808)
+568: i35 = int_rshift(i31, 2)
+575: i37 = int_lshift(i35, 2)
+582: i39 = int_xor(i31, 4)
+593: i41 = int_rshift(i39, 63)
+597: i42 = int_ne(i37, i31)
+621: i43 = int_and(i41, i42)
+624: i44 = int_add(i35, i43)
debug_merge_point(0, 0, '(let ([if8 (< nc15216 0)]) (if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3)))))')
debug_merge_point(0, 0, '(< nc15216 0)')
+627: i46 = int_lt(i44, 0)
+631: guard_false(i46, descr=<Guard0x7f4a5c3390b8>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3))))')
debug_merge_point(0, 0, '(let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3)))')
debug_merge_point(0, 0, 'lst5214')
debug_merge_point(0, 0, '(lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))')
debug_merge_point(0, 0, '(- m5210 nc15216)')
+637: i47 = int_sub_ovf(i31, i44)
+647: guard_no_overflow(descr=<Guard0x7f4a5c339100>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(loop25220 lst5214 (quotient AppRand49 3))')
+653: i49 = int_eq(i47, -9223372036854775808)
+653: i51 = int_rshift(i47, 63)
+660: i52 = int_xor(i47, i51)
+666: i54 = uint_mul_high(i52, -6148914691236517205)
+693: i56 = uint_rshift(i54, 1)
+696: i57 = int_xor(i56, i51)
+703: i59 = int_mul(i57, 3)
+710: i61 = int_xor(i47, 3)
+721: i63 = int_rshift(i61, 63)
+725: i64 = int_ne(i59, i47)
+749: i65 = int_and(i63, i64)
+752: i66 = int_add(i57, i65)
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5214 (quotient AppRand49 3))')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+755: i67 = int_lt(i66, i44)
+758: guard_false(i67, descr=<Guard0x7f4a5c339148>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))))')
debug_merge_point(0, 0, '(+ m5210 1)')
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
+764: i68 = int_add(i44, i66)
debug_merge_point(0, 0, '(let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))')
debug_merge_point(0, 0, '(- (quotient AppRand38 2) AppRand39)')
+770: i70 = int_rshift(i19, 1)
+776: i72 = int_lshift(i70, 1)
+782: i74 = int_xor(i19, 2)
+793: i76 = int_rshift(i74, 63)
+797: i77 = int_ne(i72, i19)
+821: i78 = int_and(i76, i77)
+824: i79 = int_add(i70, i78)
+827: i80 = int_sub_ovf(i79, i68)
+830: guard_no_overflow(descr=<Guard0x7f4a5c339190>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))))')
debug_merge_point(0, 0, '(max nc25224 AppRand40)')
+836: i81 = int_lt(i66, i80)
+839: guard_false(i81, descr=<Guard0x7f4a5c3391d8>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))')
debug_merge_point(0, 0, '(lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))')
debug_merge_point(0, 0, '(+ nc15216 nc25224)')
debug_merge_point(0, 0, '(let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2)))')
debug_merge_point(0, 0, '(- m5210 AppRand47)')
+845: i82 = int_sub_ovf(i31, i68)
+855: guard_no_overflow(descr=<Guard0x7f4a5c339220>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(loop35236 lst5222 (quotient AppRand48 2))')
+861: i84 = int_eq(i82, -9223372036854775808)
+861: i86 = int_rshift(i82, 1)
+867: i88 = int_lshift(i86, 1)
+873: i90 = int_xor(i82, 2)
+880: i92 = int_rshift(i90, 63)
+884: i93 = int_ne(i88, i82)
+897: i94 = int_and(i92, i93)
+900: i95 = int_add(i86, i94)
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 lst5222 (quotient AppRand48 2))')
debug_merge_point(0, 0, '(< nc35240 start)')
+903: i96 = int_lt(i95, i66)
+906: guard_false(i96, descr=<Guard0x7f4a5c339268>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))))')
debug_merge_point(0, 0, '(+ nc25224 nc35240)')
+912: i97 = int_add(i66, i95)
debug_merge_point(0, 0, '(let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))')
debug_merge_point(0, 0, '(+ nc15216 AppRand42)')
+918: i98 = int_add_ovf(i44, i97)
+921: guard_no_overflow(descr=<Guard0x7f4a5c3392b0>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46)))')
debug_merge_point(0, 0, '(- m5210 AppRand43)')
+927: i99 = int_sub_ovf(i31, i98)
+937: guard_no_overflow(descr=<Guard0x7f4a5c3392f8>) [p0, p1, p2, p3, i4]
debug_merge_point(0, 0, '(let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))')
debug_merge_point(0, 0, '(vector nc15216 nc25224 nc35240 AppRand44)')
debug_merge_point(0, 0, '(- nc35240 1)')
+943: i101 = int_sub(i95, 1)
debug_merge_point(0, 0, '(loop35236 (cons AppRand45 lst5238) AppRand46)')
debug_merge_point(0, 0, '(let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))) from (loop35236 (cons AppRand45 lst5238) AppRand46)')
+947: p102 = new_with_vtable(descr=<SizeDescr 32>)
+997: p103 = new_with_vtable(descr=<SizeDescr 64>)
+1015: setfield_gc(p103, ConstPtr(ptr104), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1026: setfield_gc(p103, ConstPtr(ptr105), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1030: p106 = new_with_vtable(descr=<SizeDescr 16>)
+1042: setfield_gc(p106, i66, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1046: setfield_gc(p103, p106, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1050: p107 = new_with_vtable(descr=<SizeDescr 16>)
+1061: setfield_gc(p107, i44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1065: setfield_gc(p103, p107, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1069: p108 = new_with_vtable(descr=<SizeDescr 16>)
+1081: setfield_gc(p108, i66, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1085: setfield_gc(p103, p108, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1089: p109 = new_with_vtable(descr=<SizeDescr 16>)
+1100: setfield_gc(p109, i31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1111: setfield_gc(p103, p109, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1115: p110 = new_with_vtable(descr=<SizeDescr 48>)
+1133: setfield_gc(p110, ConstPtr(ptr104), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1151: setfield_gc(p110, ConstPtr(ptr111), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1155: p112 = new_with_vtable(descr=<SizeDescr 32>)
+1166: setfield_gc(p112, ConstPtr(ptr113), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1177: setfield_gc(p112, ConstPtr(ptr114), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1181: setfield_gc(p112, i31, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+1185: setfield_gc(p110, p112, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1189: setfield_gc(p110, p107, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1193: setfield_gc(p110, p109, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1197: setfield_gc(p103, p110, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1201: p115 = new_with_vtable(descr=<SizeDescr 24>)
+1212: p116 = new_with_vtable(descr=<SizeDescr 32>)
+1223: setfield_gc(p116, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1231: p119 = new_array(4, descr=<ArrayS 8>)
+1250: setarrayitem_gc(p119, 0, i44, descr=<ArrayS 8>)
+1254: setarrayitem_gc(p119, 1, i66, descr=<ArrayS 8>)
+1258: setarrayitem_gc(p119, 2, i95, descr=<ArrayS 8>)
+1262: setarrayitem_gc(p119, 3, i99, descr=<ArrayS 8>)
+1266: setfield_gc(p116, p119, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1277: setfield_gc(p116, ConstPtr(ptr124), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1281: setfield_gc(p115, p116, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1292: setfield_gc(p115, ConstPtr(ptr125), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1296: p126 = new_with_vtable(descr=<SizeDescr 40>)
+1307: p127 = new_with_vtable(descr=<SizeDescr 32>)
+1318: setfield_gc(p127, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1322: setfield_gc(p127, i31, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1326: p128 = new_with_vtable(descr=<SizeDescr 32>)
+1338: setfield_gc(p128, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1349: setfield_gc(p128, ConstPtr(ptr129), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1353: setfield_gc(p128, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1357: setfield_gc(p127, p128, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1361: p130 = new_with_vtable(descr=<SizeDescr 48>)
+1372: setfield_gc(p130, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1383: setfield_gc(p130, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1394: setfield_gc(p130, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1412: setfield_gc(p130, ConstPtr(ptr131), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1416: setfield_gc(p130, ConstPtr(ptr132), descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1420: setfield_gc(p126, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1424: setfield_gc(p102, p103, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1435: setfield_gc(p102, i101, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1446: setfield_gc(p102, p115, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1450: setfield_gc(p126, p127, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1454: setfield_gc(p126, p130, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1465: setfield_gc(p126, ConstPtr(ptr133), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1469: jump(p102, p126, descr=TargetToken(61027280))
+1504: --end of the loop--
[3e4c22b48c76a61] jit-log-opt-bridge}
[3e4c22b494ead06] {jit-backend
[3e4c22b49572f2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217e
[3e4c22b4957d36a] jit-backend-dump}
[3e4c22b495890d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217f44 +0  25000000
[3e4c22b4958a9bf] jit-backend-dump}
[3e4c22b4958efcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218265 +0  25000000
[3e4c22b4958fee8] jit-backend-dump}
[3e4c22b49593530] {jit-backend-addr
bridge out of Guard 0x476e698 has address 0x7f4a5c217f40 to 0x7f4a5c218260
       gc table: 0x7f4a5c217e10
    jump target: 0x7f4a5c217f40
         resops: 0x7f4a5c217f4e
       failures: 0x7f4a5c218260
            end: 0x7f4a5c2185eb
[3e4c22b49595b32] jit-backend-addr}
[3e4c22b495992f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217f5e +0  41030000
[3e4c22b4959a180] jit-backend-dump}
[3e4c22b4959d607] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217f75 +0  46030000
[3e4c22b4959e34a] jit-backend-dump}
[3e4c22b495a188e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217f81 +0  72030000
[3e4c22b495a25ce] jit-backend-dump}
[3e4c22b495a5970] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217f96 +0  79030000
[3e4c22b495a66de] jit-backend-dump}
[3e4c22b495a9975] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217faa +0  81030000
[3e4c22b495ae093] jit-backend-dump}
[3e4c22b495b1d18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217fc2 +0  85030000
[3e4c22b495b2aa8] jit-backend-dump}
[3e4c22b495b5f65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217fd0 +0  93030000
[3e4c22b495b6caf] jit-backend-dump}
[3e4c22b495ba003] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c217fec +0  93030000
[3e4c22b495bad28] jit-backend-dump}
[3e4c22b495be153] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218003 +0  98030000
[3e4c22b495bef01] jit-backend-dump}
[3e4c22b495c21f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218017 +0  A0030000
[3e4c22b495c2f47] jit-backend-dump}
[3e4c22b495c61c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218021 +0  B2030000
[3e4c22b495c6f12] jit-backend-dump}
[3e4c22b495ca156] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218035 +0  BA030000
[3e4c22b495cae8a] jit-backend-dump}
[3e4c22b495ce0b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21804b +0  C0030000
[3e4c22b495cee00] jit-backend-dump}
[3e4c22b495d216d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218063 +0  C4030000
[3e4c22b495d2eaa] jit-backend-dump}
[3e4c22b495d6166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218078 +0  CB030000
[3e4c22b495d6e81] jit-backend-dump}
[3e4c22b495da165] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218085 +0  DA030000
[3e4c22b495dae7a] jit-backend-dump}
[3e4c22b495de0ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21809c +0  DF030000
[3e4c22b495dede3] jit-backend-dump}
[3e4c22b495e2037] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2180b4 +0  E3030000
[3e4c22b495e2d62] jit-backend-dump}
[3e4c22b495e5f88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2180c2 +0  F1030000
[3e4c22b495e6c9a] jit-backend-dump}
[3e4c22b495e9f25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2180d3 +0  FC030000
[3e4c22b495eac44] jit-backend-dump}
[3e4c22b495ede54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2180e5 +0  06040000
[3e4c22b495eeb66] jit-backend-dump}
[3e4c22b495f1d92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2180f3 +0  14040000
[3e4c22b495f2ac0] jit-backend-dump}
[3e4c22b495f5d8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21810d +0  16040000
[3e4c22b495f6ad2] jit-backend-dump}
[3e4c22b495f9d35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218120 +0  1F040000
[3e4c22b495faa69] jit-backend-dump}
[3e4c22b495fdc7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21812a +0  31040000
[3e4c22b495fe9ad] jit-backend-dump}
[3e4c22b49601bf5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218137 +0  40040000
[3e4c22b49602920] jit-backend-dump}
[3e4c22b49605b21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218147 +0  4C040000
[3e4c22b4960684f] jit-backend-dump}
[3e4c22b49609a5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21815b +0  54040000
[3e4c22b4960a77b] jit-backend-dump}
[3e4c22b4960d979] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218171 +0  5A040000
[3e4c22b4960e68b] jit-backend-dump}
[3e4c22b49611be2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f1ab7 +0  85640200
[3e4c22b49612944] jit-backend-dump}
[3e4c22b49616aec] jit-backend}
[3e4c22b4961aa43] {jit-log-opt-bridge
# bridge out of Guard 0x476e698 with 116 ops
[p0, p1]
+326: guard_class(p1, 16435920, descr=<Guard0x2802080>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+342: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x28020e0>) [p0, p1]
debug_merge_point(0, 0, '(< nc25189 nc15181)')
+361: guard_not_invalidated(descr=<Guard0x7f4a5c339388>) [p0, p1]
+361: guard_class(p0, 16503536, descr=<Guard0x7f4a5c3393d0>) [p0, p1]
+373: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+377: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+381: guard_class(p7, 16478448, descr=<Guard0x7f4a5c339418>) [p0, p1]
+394: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+405: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x7f4a5c339460>) [p0, p1]
+414: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+418: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x2802140>) [p0, p1]
+438: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+443: i14 = int_lt(i6, i13)
+446: guard_true(i14, descr=<Guard0x7f4a5c3394a8>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))')
debug_merge_point(0, 0, '(let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31))')
debug_merge_point(0, 0, '(- nc15181 1)')
+452: i16 = int_sub(i13, 1)
debug_merge_point(0, 0, '(loop15177 lst5187 AppRand31)')
+456: p17 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+460: guard_nonnull_class(p17, 16482960, descr=<Guard0x28021a0>) [p0, p1]
+480: p19 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+484: guard_nonnull_class(p19, 16470384, descr=<Guard0x2802200>) [p0, p1]
+503: p21 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+514: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x7f4a5c3394f0>) [p0, p1]
+523: p23 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if6 (< nc15181 0)]) (if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2)))))')
debug_merge_point(0, 0, '(< nc15181 0)')
+523: i25 = int_lt(i16, 0)
+527: guard_true(i25, descr=<Guard0x7f4a5c339538>) [p0, p1]
debug_merge_point(0, 0, '(if if6 lst5179 (let ([lst5179 lst5179][loop25185 (lambda (lst5187 nc25189) (let ([if7 (< nc25189 nc15181)]) (if if7 (let ([AppRand31 (- nc15181 1)]) (loop15177 lst5187 AppRand31)) (let ([AppRand32 (+ nc15181 nc25189)]) (let ([AppRand33 (- m AppRand32)]) (let ([AppRand34 (vector nc15181 nc25189 AppRand33)][AppRand35 (- nc25189 1)]) (loop25185 (cons AppRand34 lst5187) AppRand35)))))))][AppRand36 (- m nc15181)]) (loop25185 lst5179 (quotient AppRand36 2))))')
debug_merge_point(0, 0, 'lst5179')
+533: p26 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+544: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x7f4a5c339580>) [p0, p1]
+553: p28 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+557: p29 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop1 AppRand10 '())')
+561: guard_class(p28, 16503536, descr=<Guard0x7f4a5c3395c8>) [p0, p1]
+575: p31 = getfield_gc_r(p28, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+579: guard_nonnull_class(p31, 16477696, descr=<Guard0x2802260>) [p0, p1]
+599: p33 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+611: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x7f4a5c339610>) [p0, p1]
+620: p35 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 AppRand10 '())')
debug_merge_point(0, 0, '(let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))')
+620: guard_class(p29, 16435920, descr=<Guard0x7f4a5c339658>) [p0, p1]
+633: p37 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+637: guard_nonnull_class(p37, ConstClass(ForwardLink), descr=<Guard0x28022c0>) [p0, p1]
debug_merge_point(0, 0, '(car ps)')
+656: p39 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+660: guard_nonnull_class(p39, ConstClass(W_Vector), descr=<Guard0x2802320>) [p0, p1]
debug_merge_point(0, 0, '(let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8)))')
debug_merge_point(0, 0, '(vector-ref p 0)')
+680: i41 = getfield_gc_i(p39, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+684: i43 = int_lt(0, i41)
+688: guard_true(i43, descr=<Guard0x7f4a5c3396a0>) [p0, p1]
+694: p44 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+698: guard_class(p44, 16623792, descr=<Guard0x7f4a5c3396e8>) [p0, p1]
+711: p46 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+715: i48 = getarrayitem_gc_i(p46, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 1)')
+719: i50 = int_lt(1, i41)
+723: guard_true(i50, descr=<Guard0x7f4a5c339730>) [p0, p1]
+729: i52 = getarrayitem_gc_i(p46, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-ref p 2)')
+733: i54 = int_lt(2, i41)
+737: guard_true(i54, descr=<Guard0x7f4a5c339778>) [p0, p1]
+743: i56 = getarrayitem_gc_i(p46, 2, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))')
debug_merge_point(0, 0, '(lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))')
+747: p57 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+752: p58 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+757: guard_class(p58, 16505296, descr=<Guard0x7f4a5c3397c0>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref radicals nc1)')
+769: guard_nonnull_class(p57, ConstClass(W_Vector), descr=<Guard0x2802380>) [p0, p1]
+788: i62 = int_ge(i48, 0)
+792: guard_true(i62, descr=<Guard0x7f4a5c339808>) [p0, p1]
+798: i63 = getfield_gc_i(p57, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+802: i64 = int_lt(i48, i63)
+805: guard_true(i64, descr=<Guard0x7f4a5c339850>) [p0, p1]
+811: p65 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+815: guard_class(p65, 16693360, descr=<Guard0x7f4a5c339898>) [p0, p1]
+827: p67 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+831: p69 = getarrayitem_gc_pure_r(p67, 0, descr=<ArrayP 8>)
+835: guard_class(p69, 16470384, descr=<Guard0x7f4a5c3398e0>) [p0, p1]
debug_merge_point(0, 0, '(loop1 (cdr ps) lst)')
+847: p71 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+851: guard_nonnull_class(p71, 16616448, descr=<Guard0x28023e0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? ps) lst (let ([p (car ps)]) (let ([nc1 (vector-ref p 0)][nc2 (vector-ref p 1)][nc3 (vector-ref p 2)]) (let ([loop2 (lambda (rads1 lst4984) (if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))))][AppRand7 (vector-ref radicals nc1)][AppRand8 (loop1 (cdr ps) lst)]) (loop2 AppRand7 AppRand8))))) from (loop1 (cdr ps) lst)')
+869: p73 = new_with_vtable(descr=<SizeDescr 32>)
+913: p74 = new_with_vtable(descr=<SizeDescr 56>)
+924: p75 = new_with_vtable(descr=<SizeDescr 56>)
+935: setfield_gc(p75, p58, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+953: setfield_gc(p75, ConstPtr(ptr76), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+957: setfield_gc(p75, p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+961: p77 = new_with_vtable(descr=<SizeDescr 16>)
+972: setfield_gc(p77, i52, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+976: setfield_gc(p75, p77, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+980: p78 = new_with_vtable(descr=<SizeDescr 16>)
+991: setfield_gc(p78, i48, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+995: setfield_gc(p75, p78, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+999: p79 = new_with_vtable(descr=<SizeDescr 16>)
+1011: setfield_gc(p79, i56, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1015: setfield_gc(p75, p79, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1019: setfield_gc(p74, p37, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1023: setfield_gc(p73, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1041: setfield_gc(p74, ConstPtr(ptr80), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1045: setfield_gc(p74, p58, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1049: setfield_gc(p74, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1053: setfield_gc(p73, p71, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1064: setfield_gc(p73, ConstPtr(ptr81), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1068: setfield_gc(p74, p75, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1072: setfield_gc(p74, p69, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1076: jump(p73, p74, descr=TargetToken(61029440))
+1104: --end of the loop--
[3e4c22b4967817a] jit-log-opt-bridge}
[3e4c22b49b82ebf] {jit-backend
[3e4c22b49c0c5a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b49c17083] jit-backend-dump}
[3e4c22b49c22961] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218944 +0  25000000
[3e4c22b49c24030] jit-backend-dump}
[3e4c22b49c281c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218ca5 +0  25000000
[3e4c22b49c290bf] jit-backend-dump}
[3e4c22b49c2c716] {jit-backend-addr
bridge out of Guard 0x47a8260 has address 0x7f4a5c218940 to 0x7f4a5c218ca0
       gc table: 0x7f4a5c218810
    jump target: 0x7f4a5c218940
         resops: 0x7f4a5c21894e
       failures: 0x7f4a5c218ca0
            end: 0x7f4a5c219047
[3e4c22b49c2eaf5] jit-backend-addr}
[3e4c22b49c3216b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21895e +0  81030000
[3e4c22b49c32f78] jit-backend-dump}
[3e4c22b49c363c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21896b +0  90030000
[3e4c22b49c3710e] jit-backend-dump}
[3e4c22b49c3a457] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21897b +0  9C030000
[3e4c22b49c3b1ce] jit-backend-dump}
[3e4c22b49c3e4cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218992 +0  A1030000
[3e4c22b49c3f1cd] jit-backend-dump}
[3e4c22b49c423d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2189a0 +0  AF030000
[3e4c22b49c430a6] jit-backend-dump}
[3e4c22b49c46255] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2189b4 +0  B7030000
[3e4c22b49c46f2a] jit-backend-dump}
[3e4c22b49c4a2aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2189cc +0  D7030000
[3e4c22b49c4af85] jit-backend-dump}
[3e4c22b49c4e281] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2189dd +0  E2030000
[3e4c22b49c4ef81] jit-backend-dump}
[3e4c22b49c52154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2189f1 +0  EA030000
[3e4c22b49c52e42] jit-backend-dump}
[3e4c22b49c56049] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218a0f +0  E8030000
[3e4c22b49c56d34] jit-backend-dump}
[3e4c22b49c59f20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218a22 +0  F1030000
[3e4c22b49c5ac04] jit-backend-dump}
[3e4c22b49c5ddbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218a36 +0  F9030000
[3e4c22b49c5eaa0] jit-backend-dump}
[3e4c22b49c61c33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218a42 +0  09040000
[3e4c22b49c6299e] jit-backend-dump}
[3e4c22b49c65b5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218a58 +0  0F040000
[3e4c22b49c66841] jit-backend-dump}
[3e4c22b49c69a42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218a7b +0  08040000
[3e4c22b49c6a71d] jit-backend-dump}
[3e4c22b49c6d9a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218a98 +0  07040000
[3e4c22b49c6e6ab] jit-backend-dump}
[3e4c22b49c718e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218aaa +0  11040000
[3e4c22b49c725c5] jit-backend-dump}
[3e4c22b49c75798] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218abb +0  1C040000
[3e4c22b49c7649b] jit-backend-dump}
[3e4c22b49c796ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218ad1 +0  22040000
[3e4c22b49c7a3b2] jit-backend-dump}
[3e4c22b49c7d566] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218ada +0  35040000
[3e4c22b49c7e248] jit-backend-dump}
[3e4c22b49c81409] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218aec +0  3F040000
[3e4c22b49c820f3] jit-backend-dump}
[3e4c22b49c852ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218af9 +0  4E040000
[3e4c22b49c85f9c] jit-backend-dump}
[3e4c22b49c8913e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218b0c +0  57040000
[3e4c22b49c89e26] jit-backend-dump}
[3e4c22b49c8cff3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218b16 +0  69040000
[3e4c22b49c8dced] jit-backend-dump}
[3e4c22b49c90ec9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218b23 +0  78040000
[3e4c22b49c91bab] jit-backend-dump}
[3e4c22b49c94d59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218b33 +0  84040000
[3e4c22b49c95a41] jit-backend-dump}
[3e4c22b49c98c0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218b49 +0  8A040000
[3e4c22b49c998f2] jit-backend-dump}
[3e4c22b49c9cab6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218b60 +0  8F040000
[3e4c22b49c9d7fd] jit-backend-dump}
[3e4c22b49ca0a3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218b76 +0  95040000
[3e4c22b49ca173b] jit-backend-dump}
[3e4c22b49ca48ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c218b8c +0  9B040000
[3e4c22b49ca55d4] jit-backend-dump}
[3e4c22b49ca8aee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5ac2 +0  7A2E0200
[3e4c22b49ca97cf] jit-backend-dump}
[3e4c22b49cad8ba] jit-backend}
[3e4c22b49cb17e6] {jit-log-opt-bridge
# bridge out of Guard 0x47a8260 with 126 ops
[p0, p1]
+326: guard_class(p1, 16500016, descr=<Guard0x2802440>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+342: guard_nonnull(p3, descr=<Guard0x7f4a5c339a00>) [p0, p1]
+358: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+361: guard_true(i5, descr=<Guard0x7f4a5c339a48>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+367: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+371: guard_nonnull_class(p6, 16616448, descr=<Guard0x28024a0>) [p0, p1]
+390: guard_class(p0, 16437352, descr=<Guard0x7f4a5c339a90>) [p0, p1]
+404: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+415: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x7f4a5c339ad8>) [p0, p1]
+424: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+424: guard_not_invalidated(descr=<Guard0x7f4a5c339b20>) [p0, p1]
+424: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+428: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x2802500>) [p0, p1]
+448: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+452: guard_class(p14, 16437896, descr=<Guard0x7f4a5c339b68>) [p0, p1]
+465: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+476: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x7f4a5c339bb0>) [p0, p1]
+485: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+485: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+489: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+493: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+497: guard_nonnull_class(p19, 16478824, descr=<Guard0x2802560>) [p0, p1]
+515: guard_nonnull_class(p20, 16470384, descr=<Guard0x28025c0>) [p0, p1]
+534: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+545: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x7f4a5c339bf8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+554: guard_class(p21, 16435920, descr=<Guard0x7f4a5c339c40>) [p0, p1]
+566: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+570: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x2802620>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+588: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+592: p30 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+596: p31 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+600: p32 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+611: guard_class(p32, 16505296, descr=<Guard0x7f4a5c339c88>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+623: p34 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+634: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x2802680>) [p0, p1]
+652: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x28026e0>) [p0, p1]
+670: i37 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+674: i38 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+678: i39 = int_eq(i37, i38)
+681: guard_true(i39, descr=<Guard0x7f4a5c339cd0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+687: p40 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+691: guard_nonnull_class(p40, 16616448, descr=<Guard0x2802740>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+709: i43 = instance_ptr_eq(p40, ConstPtr(ptr42))
+712: guard_true(i43, descr=<Guard0x7f4a5c339d18>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+718: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x28027a0>) [p0, p1]
+736: i45 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+740: i46 = int_eq(i38, i45)
+743: guard_false(i46, descr=<Guard0x7f4a5c339d60>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+749: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x2802800>) [p0, p1]
+768: i49 = int_ge(i45, 0)
+772: guard_true(i49, descr=<Guard0x7f4a5c339da8>) [p0, p1]
+778: i50 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+782: i51 = int_lt(i45, i50)
+785: guard_true(i51, descr=<Guard0x7f4a5c339df0>) [p0, p1]
+791: p52 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+795: guard_class(p52, 16622984, descr=<Guard0x7f4a5c339e38>) [p0, p1]
+807: p54 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+811: p55 = getarrayitem_gc_r(p54, i45, descr=<ArrayP 8>)
+816: guard_class(p55, 16470384, descr=<Guard0x7f4a5c339e80>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+829: p57 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+833: guard_nonnull_class(p57, ConstClass(W_Symbol), descr=<Guard0x2802860>) [p0, p1]
+852: p59 = getfield_gc_r(p55, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+856: guard_nonnull_class(p59, ConstClass(W_Vector), descr=<Guard0x28028c0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+874: p61 = getfield_gc_r(p55, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+878: guard_nonnull_class(p61, 16616448, descr=<Guard0x2802920>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+896: p63 = new_with_vtable(descr=<SizeDescr 32>)
+940: p64 = new_with_vtable(descr=<SizeDescr 40>)
+951: setfield_gc(p64, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+962: setfield_gc(p64, ConstPtr(ptr65), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+966: setfield_gc(p64, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+970: setfield_gc(p64, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+974: p66 = new_with_vtable(descr=<SizeDescr 24>)
+985: setfield_gc(p66, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+989: setfield_gc(p66, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+993: p67 = new_with_vtable(descr=<SizeDescr 48>)
+1004: p68 = new_with_vtable(descr=<SizeDescr 32>)
+1016: setfield_gc(p68, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1025: p71 = new_array_clear(4, descr=<ArrayP 8>)
+1053: setarrayitem_gc(p71, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+1057: setarrayitem_gc(p71, 1, p57, descr=<ArrayP 8>)
+1061: setarrayitem_gc(p71, 2, p57, descr=<ArrayP 8>)
+1065: setarrayitem_gc(p71, 3, p59, descr=<ArrayP 8>)
+1069: setfield_gc(p68, p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1081: setfield_gc(p68, ConstPtr(ptr77), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1086: setfield_gc(p63, p61, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1090: setfield_gc(p63, p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1094: setfield_gc(p67, ConstPtr(ptr78), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1098: setfield_gc(p67, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1102: setfield_gc(p67, p68, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1106: setfield_gc(p67, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1117: setfield_gc(p67, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1128: setfield_gc(p63, p64, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1132: jump(p63, p67, descr=TargetToken(59469520))
+1168: --end of the loop--
[3e4c22b49d10c69] jit-log-opt-bridge}
[3e4c22b49db0a17] {jit-backend
[3e4c22b49de7ee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b49dee17a] jit-backend-dump}
[3e4c22b49df8863] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2191a4 +0  2A000000
[3e4c22b49df9c8e] jit-backend-dump}
[3e4c22b49dfdd29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2192e5 +0  2A000000
[3e4c22b49dfeb70] jit-backend-dump}
[3e4c22b49e0216c] {jit-backend-addr
bridge out of Guard 0x47a8188 has address 0x7f4a5c2191a0 to 0x7f4a5c2192e0
       gc table: 0x7f4a5c219130
    jump target: 0x7f4a5c2191a0
         resops: 0x7f4a5c2191ae
       failures: 0x7f4a5c2192e0
            end: 0x7f4a5c219457
[3e4c22b49e0445f] jit-backend-addr}
[3e4c22b49e07ade] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2191be +0  61010000
[3e4c22b49e0892c] jit-backend-dump}
[3e4c22b49e0bd6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2191cb +0  70010000
[3e4c22b49e0ca7e] jit-backend-dump}
[3e4c22b49e0fd00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2191db +0  7C010000
[3e4c22b49e109d5] jit-backend-dump}
[3e4c22b49e13d21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2191f2 +0  81010000
[3e4c22b49e149e4] jit-backend-dump}
[3e4c22b49e17ccd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219200 +0  8F010000
[3e4c22b49e189a2] jit-backend-dump}
[3e4c22b49e1bd1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219214 +0  97010000
[3e4c22b49e1ca06] jit-backend-dump}
[3e4c22b49e1ff1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21922b +0  B8010000
[3e4c22b49e20c1a] jit-backend-dump}
[3e4c22b49e23edc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21923c +0  C3010000
[3e4c22b49e24bcf] jit-backend-dump}
[3e4c22b49e27e29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219249 +0  D2010000
[3e4c22b49e28aec] jit-backend-dump}
[3e4c22b49e2bd09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219264 +0  D3010000
[3e4c22b49e2c9de] jit-backend-dump}
[3e4c22b49e2fe74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1f5a5d +0  3F370200
[3e4c22b49e30b68] jit-backend-dump}
[3e4c22b49e34c5b] jit-backend}
[3e4c22b49e38945] {jit-log-opt-bridge
# bridge out of Guard 0x47a8188 with 33 ops
[p0, p1]
+134: guard_class(p1, 16500016, descr=<Guard0x2802980>) [p0, p1]
+146: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+150: guard_nonnull(p3, descr=<Guard0x7f4a5c339ec8>) [p0, p1]
+166: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+169: guard_true(i5, descr=<Guard0x7f4a5c339f10>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+175: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+179: guard_nonnull_class(p6, 16616448, descr=<Guard0x28029e0>) [p0, p1]
+198: guard_class(p0, 16437352, descr=<Guard0x7f4a5c339f58>) [p0, p1]
+212: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+223: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x7f4a5c339fa0>) [p0, p1]
+232: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+232: guard_not_invalidated(descr=<Guard0x2960020>) [p0, p1]
+232: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+236: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x2802a40>) [p0, p1]
+255: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+259: guard_class(p14, 16437352, descr=<Guard0x2960068>) [p0, p1]
+272: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+276: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x29600b0>) [p0, p1]
+285: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+289: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+293: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x2802aa0>) [p0, p1]
+312: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (cons AppRand1 AppRand2)')
+316: p22 = new_with_vtable(descr=<SizeDescr 32>)
+360: p23 = new_with_vtable(descr=<SizeDescr 24>)
+371: setfield_gc(p23, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+375: setfield_gc(p23, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+379: setfield_gc(p22, p19, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+383: setfield_gc(p22, p23, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+387: setfield_gc(p22, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+391: jump(p22, p21, descr=TargetToken(61023440))
+432: --end of the loop--
[3e4c22b49e56bab] jit-log-opt-bridge}
[3e4c22b4b2ac410] {jit-backend
[3e4c22b4b334446] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c
[3e4c22b4b33ed71] jit-backend-dump}
[3e4c22b4b352c12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219714 +0  2A000000
[3e4c22b4b3543e6] jit-backend-dump}
[3e4c22b4b35bbec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2199e5 +0  2A000000
[3e4c22b4b35cd57] jit-backend-dump}
[3e4c22b4b360af6] {jit-backend-addr
bridge out of Guard 0x4a7c530 has address 0x7f4a5c219710 to 0x7f4a5c2199e0
       gc table: 0x7f4a5c219610
    jump target: 0x7f4a5c219710
         resops: 0x7f4a5c21971e
       failures: 0x7f4a5c2199e0
            end: 0x7f4a5c219cdf
[3e4c22b4b3632a1] jit-backend-addr}
[3e4c22b4b366b93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21972e +0  F1020000
[3e4c22b4b367a67] jit-backend-dump}
[3e4c22b4b36afef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219745 +0  F6020000
[3e4c22b4b36bd57] jit-backend-dump}
[3e4c22b4b36f2a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21975c +0  FB020000
[3e4c22b4b370006] jit-backend-dump}
[3e4c22b4b373412] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219774 +0  FF020000
[3e4c22b4b374122] jit-backend-dump}
[3e4c22b4b3773f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219788 +0  07030000
[3e4c22b4b3780a3] jit-backend-dump}
[3e4c22b4b37b359] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219794 +0  17030000
[3e4c22b4b37bfee] jit-backend-dump}
[3e4c22b4b37f2aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2197ab +0  1C030000
[3e4c22b4b37ff51] jit-backend-dump}
[3e4c22b4b3831ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2197c7 +0  1C030000
[3e4c22b4b383e9c] jit-backend-dump}
[3e4c22b4b38730d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2197dd +0  3E030000
[3e4c22b4b38800a] jit-backend-dump}
[3e4c22b4b38b419] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2197f0 +0  47030000
[3e4c22b4b38c0e8] jit-backend-dump}
[3e4c22b4b38f3c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219801 +0  52030000
[3e4c22b4b39006d] jit-backend-dump}
[3e4c22b4b393397] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219815 +0  5A030000
[3e4c22b4b39403e] jit-backend-dump}
[3e4c22b4b3972f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21981f +0  6C030000
[3e4c22b4b397fb3] jit-backend-dump}
[3e4c22b4b39b266] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21982d +0  7A030000
[3e4c22b4b39befe] jit-backend-dump}
[3e4c22b4b39f19e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21983f +0  84030000
[3e4c22b4b39fe6d] jit-backend-dump}
[3e4c22b4b3a313e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219857 +0  88030000
[3e4c22b4b3a3dd3] jit-backend-dump}
[3e4c22b4b3a705b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21986e +0  8D030000
[3e4c22b4b3a7cf0] jit-backend-dump}
[3e4c22b4b3aaf78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21987e +0  99030000
[3e4c22b4b3abc22] jit-backend-dump}
[3e4c22b4b3aeed8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219891 +0  A2030000
[3e4c22b4b3afb82] jit-backend-dump}
[3e4c22b4b3b2e2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21989e +0  B1030000
[3e4c22b4b3b3ac4] jit-backend-dump}
[3e4c22b4b3b6d70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2198b6 +0  B5030000
[3e4c22b4b3b7a08] jit-backend-dump}
[3e4c22b4b3bac6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2198bf +0  C8030000
[3e4c22b4b3bb922] jit-backend-dump}
[3e4c22b4b3becdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2198d6 +0  CD030000
[3e4c22b4b3bf9f1] jit-backend-dump}
[3e4c22b4b3c2e37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2198ed +0  D2030000
[3e4c22b4b3c3b37] jit-backend-dump}
[3e4c22b4b3c7360] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fa41d +0  EFF20100
[3e4c22b4b3c807b] jit-backend-dump}
[3e4c22b4b3cc747] jit-backend}
[3e4c22b4b3d072d] {jit-log-opt-bridge
# bridge out of Guard 0x4a7c530 with 107 ops
[p0, p1]
+278: guard_class(p1, 16500368, descr=<Guard0x2802b00>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+294: guard_nonnull_class(p3, 16478824, descr=<Guard0x2802b60>) [p0, p1]
+313: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+317: guard_nonnull_class(p5, 16470384, descr=<Guard0x2802bc0>) [p0, p1]
+336: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+340: guard_nonnull_class(p7, 16616448, descr=<Guard0x2802c20>) [p0, p1]
+360: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+371: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2960140>) [p0, p1]
+380: p11 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+380: guard_class(p0, 16437896, descr=<Guard0x2960188>) [p0, p1]
+392: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+396: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x2802c80>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+415: p15 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+419: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+423: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+427: p18 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+431: guard_class(p18, 16505296, descr=<Guard0x29601d0>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+443: guard_not_invalidated(descr=<Guard0x2960218>) [p0, p1]
+443: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+447: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x2802ce0>) [p0, p1]
+465: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x2802d40>) [p0, p1]
+484: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+488: i24 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+492: i25 = int_eq(i23, i24)
+495: guard_false(i25, descr=<Guard0x2960260>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+501: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x2802da0>) [p0, p1]
+521: i28 = int_ge(i24, 0)
+525: guard_true(i28, descr=<Guard0x29602a8>) [p0, p1]
+531: i29 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+536: i30 = int_lt(i24, i29)
+539: guard_true(i30, descr=<Guard0x29602f0>) [p0, p1]
+545: p31 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+550: guard_class(p31, 16622984, descr=<Guard0x2960338>) [p0, p1]
+563: p33 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+568: p34 = getarrayitem_gc_r(p33, i24, descr=<ArrayP 8>)
+573: guard_class(p34, 16470384, descr=<Guard0x2960380>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+587: p36 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+591: guard_nonnull_class(p36, 16616448, descr=<Guard0x2802e00>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+617: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+620: guard_true(i39, descr=<Guard0x29603c8>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+626: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x2802e60>) [p0, p1]
+645: i41 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+649: i42 = int_eq(i24, i41)
+652: guard_true(i42, descr=<Guard0x2960410>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+658: p43 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+663: guard_nonnull_class(p43, 16616448, descr=<Guard0x2802ec0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+682: i46 = instance_ptr_eq(p43, ConstPtr(ptr45))
+685: guard_true(i46, descr=<Guard0x2960458>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+691: p47 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+695: guard_nonnull_class(p47, ConstClass(W_Vector), descr=<Guard0x2802f20>) [p0, p1]
+714: p49 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+719: guard_nonnull_class(p49, ConstClass(W_Vector), descr=<Guard0x2802f80>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+737: p51 = new_with_vtable(descr=<SizeDescr 32>)
+781: p52 = new_with_vtable(descr=<SizeDescr 40>)
+792: setfield_gc(p52, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+803: setfield_gc(p52, ConstPtr(ptr53), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+807: setfield_gc(p52, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+811: setfield_gc(p52, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+815: p54 = new_with_vtable(descr=<SizeDescr 48>)
+827: p55 = new_with_vtable(descr=<SizeDescr 32>)
+839: setfield_gc(p55, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+847: p58 = new_array_clear(4, descr=<ArrayP 8>)
+873: setarrayitem_gc(p58, 0, ConstPtr(ptr60), descr=<ArrayP 8>)
+877: setarrayitem_gc(p58, 1, p47, descr=<ArrayP 8>)
+881: setarrayitem_gc(p58, 2, p49, descr=<ArrayP 8>)
+885: setarrayitem_gc(p58, 3, p49, descr=<ArrayP 8>)
+889: setfield_gc(p55, p58, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+900: setfield_gc(p55, ConstPtr(ptr64), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+904: setfield_gc(p51, p52, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+908: setfield_gc(p54, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+913: setfield_gc(p51, p43, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+917: setfield_gc(p51, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+921: setfield_gc(p54, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+926: setfield_gc(p54, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+938: setfield_gc(p54, ConstPtr(ptr65), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+943: setfield_gc(p54, p55, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+948: jump(p51, p54, descr=TargetToken(59469520))
+976: --end of the loop--
[3e4c22b4b426c4c] jit-log-opt-bridge}
[3e4c22b4bc3785b] {jit-backend
[3e4c22b4bca2955] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219e
[3e4c22b4bcab1db] jit-backend-dump}
[3e4c22b4bcb70c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219f24 +0  28000000
[3e4c22b4bcb8515] jit-backend-dump}
[3e4c22b4bcbc7f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a1b5 +0  28000000
[3e4c22b4bcbd78d] jit-backend-dump}
[3e4c22b4bcc0f9d] {jit-backend-addr
bridge out of Guard 0x3a7a0e0 has address 0x7f4a5c219f20 to 0x7f4a5c21a1b0
       gc table: 0x7f4a5c219e50
    jump target: 0x7f4a5c219f20
         resops: 0x7f4a5c219f2e
       failures: 0x7f4a5c21a1b0
            end: 0x7f4a5c21a423
[3e4c22b4bcc348c] jit-backend-addr}
[3e4c22b4bcc6d4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219f3e +0  B1020000
[3e4c22b4bcc7bd8] jit-backend-dump}
[3e4c22b4bccb0fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219f4b +0  C0020000
[3e4c22b4bccbe44] jit-backend-dump}
[3e4c22b4bccf1a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219f5b +0  CC020000
[3e4c22b4bccfec6] jit-backend-dump}
[3e4c22b4bcd3179] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219f72 +0  D1020000
[3e4c22b4bcd3e91] jit-backend-dump}
[3e4c22b4bcd705e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219f86 +0  D9020000
[3e4c22b4bcd7d52] jit-backend-dump}
[3e4c22b4bcdaf1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219f9a +0  E1020000
[3e4c22b4bcdbc4d] jit-backend-dump}
[3e4c22b4bcdf200] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219fba +0  F9020000
[3e4c22b4bcdff0f] jit-backend-dump}
[3e4c22b4bce325a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219fce +0  01030000
[3e4c22b4bce3f57] jit-backend-dump}
[3e4c22b4bce71e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219fe3 +0  08030000
[3e4c22b4bce7ed6] jit-backend-dump}
[3e4c22b4bceb108] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c219ff0 +0  17030000
[3e4c22b4bcebdff] jit-backend-dump}
[3e4c22b4bcef040] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a007 +0  1C030000
[3e4c22b4bcefd6e] jit-backend-dump}
[3e4c22b4bcf2fea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a01f +0  20030000
[3e4c22b4bcf3ced] jit-backend-dump}
[3e4c22b4bcf6fec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a035 +0  26030000
[3e4c22b4bcf7cf2] jit-backend-dump}
[3e4c22b4bcfaf49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a04d +0  2A030000
[3e4c22b4bcfbc86] jit-backend-dump}
[3e4c22b4bcfeedd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a063 +0  30030000
[3e4c22b4bcffbef] jit-backend-dump}
[3e4c22b4bd02e24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a07b +0  34030000
[3e4c22b4bd03b1e] jit-backend-dump}
[3e4c22b4bd06d69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a091 +0  3A030000
[3e4c22b4bd07a87] jit-backend-dump}
[3e4c22b4bd0acb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a0a8 +0  3F030000
[3e4c22b4bd0b9b3] jit-backend-dump}
[3e4c22b4bd0ec16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a0c3 +0  40030000
[3e4c22b4bd0f907] jit-backend-dump}
[3e4c22b4bd12e67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cca12 +0  0AD50400
[3e4c22b4bd13ba7] jit-backend-dump}
[3e4c22b4bd17d03] jit-backend}
[3e4c22b4bd1bc88] {jit-log-opt-bridge
# bridge out of Guard 0x3a7a0e0 with 67 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x2802fe0>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x29604e8>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x2960530>) [p0, p1]
debug_merge_point(0, 0, 'lst5109')
+271: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+275: guard_nonnull_class(p6, 16616448, descr=<Guard0x2803040>) [p0, p1]
+294: guard_class(p0, 16437896, descr=<Guard0x2960578>) [p0, p1]
+314: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+325: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x29605c0>) [p0, p1]
+334: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+334: guard_not_invalidated(descr=<Guard0x2960608>) [p0, p1]
+334: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+338: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+342: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (loop45105 (cdr rads35107) lst5109)')
+346: guard_nonnull_class(p12, 16478448, descr=<Guard0x28030a0>) [p0, p1]
+366: guard_nonnull_class(p13, 16470384, descr=<Guard0x2803100>) [p0, p1]
+386: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+398: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x2960650>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+407: guard_class(p14, 16437896, descr=<Guard0x2960698>) [p0, p1]
+420: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+424: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x2803160>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+443: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+448: guard_nonnull_class(p22, 16470384, descr=<Guard0x28031c0>) [p0, p1]
+467: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+471: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x2803220>) [p0, p1]
+489: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+494: guard_nonnull_class(p26, 16470384, descr=<Guard0x2803280>) [p0, p1]
+513: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+517: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x28032e0>) [p0, p1]
+535: p30 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+540: guard_nonnull_class(p30, 16470384, descr=<Guard0x2803340>) [p0, p1]
+559: p32 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+563: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x28033a0>) [p0, p1]
+581: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+585: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x2803400>) [p0, p1]
+604: p36 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+609: p37 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+613: guard_nonnull_class(p37, 16616448, descr=<Guard0x2803460>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+631: p39 = new_with_vtable(descr=<SizeDescr 32>)
+678: p40 = new_with_vtable(descr=<SizeDescr 48>)
+689: p41 = new_with_vtable(descr=<SizeDescr 32>)
+701: setfield_gc(p41, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+709: p44 = new_array_clear(5, descr=<ArrayP 8>)
+749: setarrayitem_gc(p44, 0, ConstPtr(ptr46), descr=<ArrayP 8>)
+753: setarrayitem_gc(p44, 1, p24, descr=<ArrayP 8>)
+757: setarrayitem_gc(p44, 2, p28, descr=<ArrayP 8>)
+761: setarrayitem_gc(p44, 3, p32, descr=<ArrayP 8>)
+765: setarrayitem_gc(p44, 4, p34, descr=<ArrayP 8>)
+769: setfield_gc(p41, p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+780: setfield_gc(p41, ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+784: setfield_gc(p39, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+795: setfield_gc(p39, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+806: setfield_gc(p40, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+817: setfield_gc(p40, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+821: setfield_gc(p40, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+825: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+829: setfield_gc(p39, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+833: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+837: jump(p39, p40, descr=TargetToken(59469840))
+864: --end of the loop--
[3e4c22b4bd5a389] jit-log-opt-bridge}
[3e4c22b4ce38dfd] {jit-backend
[3e4c22b4cee6426] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a5d
[3e4c22b4ceef4ae] jit-backend-dump}
[3e4c22b4ceffa04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a6c4 +0  28000000
[3e4c22b4cf0111a] jit-backend-dump}
[3e4c22b4cf053e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a9a5 +0  28000000
[3e4c22b4cf063f1] jit-backend-dump}
[3e4c22b4cf09ade] {jit-backend-addr
bridge out of Guard 0x5216020 has address 0x7f4a5c21a6c0 to 0x7f4a5c21a9a0
       gc table: 0x7f4a5c21a5d0
    jump target: 0x7f4a5c21a6c0
         resops: 0x7f4a5c21a6ce
       failures: 0x7f4a5c21a9a0
            end: 0x7f4a5c21ac67
[3e4c22b4cf0c14b] jit-backend-addr}
[3e4c22b4cf0ff33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a6db +0  20030000
[3e4c22b4cf10dc7] jit-backend-dump}
[3e4c22b4cf1438f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a6fa +0  1D030000
[3e4c22b4cf1510c] jit-backend-dump}
[3e4c22b4cf185d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a707 +0  2C030000
[3e4c22b4cf19360] jit-backend-dump}
[3e4c22b4cf1c879] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a71b +0  34030000
[3e4c22b4cf1d54e] jit-backend-dump}
[3e4c22b4cf207a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a731 +0  3A030000
[3e4c22b4cf21462] jit-backend-dump}
[3e4c22b4cf24714] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a73e +0  49030000
[3e4c22b4cf253c8] jit-backend-dump}
[3e4c22b4cf28609] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a759 +0  4A030000
[3e4c22b4cf292cf] jit-backend-dump}
[3e4c22b4cf2c4be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a76d +0  52030000
[3e4c22b4cf2d17b] jit-backend-dump}
[3e4c22b4cf3041e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a777 +0  64030000
[3e4c22b4cf31133] jit-backend-dump}
[3e4c22b4cf34328] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a78b +0  6C030000
[3e4c22b4cf35004] jit-backend-dump}
[3e4c22b4cf381e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a7a0 +0  73030000
[3e4c22b4cf38ecb] jit-backend-dump}
[3e4c22b4cf3c112] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a7b6 +0  79030000
[3e4c22b4cf3cdd5] jit-backend-dump}
[3e4c22b4cf400f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a7ca +0  81030000
[3e4c22b4cf40e33] jit-backend-dump}
[3e4c22b4cf44129] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a7d7 +0  90030000
[3e4c22b4cf44e57] jit-backend-dump}
[3e4c22b4cf48100] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a7ed +0  96030000
[3e4c22b4cf48e37] jit-backend-dump}
[3e4c22b4cf4c023] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a808 +0  97030000
[3e4c22b4cf4cd32] jit-backend-dump}
[3e4c22b4cf4ff58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a81b +0  A0030000
[3e4c22b4cf50c58] jit-backend-dump}
[3e4c22b4cf53dfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a825 +0  B2030000
[3e4c22b4cf54b07] jit-backend-dump}
[3e4c22b4cf57cd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a839 +0  BA030000
[3e4c22b4cf589da] jit-backend-dump}
[3e4c22b4cf5bc03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a84a +0  C5030000
[3e4c22b4cf5c91e] jit-backend-dump}
[3e4c22b4cf5faf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a866 +0  C5030000
[3e4c22b4cf607fb] jit-backend-dump}
[3e4c22b4cf639b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21a880 +0  C7030000
[3e4c22b4cf646d4] jit-backend-dump}
[3e4c22b4cf67b33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1fe7f6 +0  C6BE0100
[3e4c22b4cf6884c] jit-backend-dump}
[3e4c22b4cf6cce7] jit-backend}
[3e4c22b4cf70b62] {jit-log-opt-bridge
# bridge out of Guard 0x5216020 with 106 ops
[i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+262: guard_not_invalidated(descr=<Guard0x28034c0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+262: i13 = int_lt(i10, i4)
+265: guard_true(i13, descr=<Guard0x2960728>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))')
debug_merge_point(0, 0, '(let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41))')
+271: p14 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+282: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x2803520>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(- nc25224 1)')
+302: i17 = int_sub_ovf(i5, 1)
+309: guard_no_overflow(descr=<Guard0x2960770>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(loop25220 lst5238 AppRand41)')
+315: p18 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+326: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x29607b8>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))) from (loop25220 lst5238 AppRand41)')
debug_merge_point(0, 0, '(< nc25224 nc15216)')
+335: p20 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+339: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x2803640>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+357: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+361: i23 = int_lt(i17, i22)
+364: guard_true(i23, descr=<Guard0x2960800>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))')
debug_merge_point(0, 0, '(let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37))')
debug_merge_point(0, 0, '(- nc15216 1)')
+370: i25 = int_sub(i22, 1)
debug_merge_point(0, 0, '(loop15212 lst5222 AppRand37)')
+374: p26 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+378: guard_nonnull_class(p26, 16482960, descr=<Guard0x28036a0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+397: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+408: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x2960848>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+417: p30 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if8 (< nc15216 0)]) (if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3)))))')
debug_merge_point(0, 0, '(< nc15216 0)')
+417: i32 = int_lt(i25, 0)
+421: guard_true(i32, descr=<Guard0x2960890>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if if8 lst5214 (let ([lst5214 lst5214][loop25220 (lambda (lst5222 nc25224) (let ([if9 (< nc25224 nc15216)]) (if if9 (let ([AppRand37 (- nc15216 1)]) (loop15212 lst5222 AppRand37)) (let ([AppRand38 (+ m5210 1)][AppRand39 (+ nc15216 nc25224)]) (let ([AppRand40 (- (quotient AppRand38 2) AppRand39)]) (let ([start (max nc25224 AppRand40)]) (let ([loop35236 (lambda (lst5238 nc35240) (let ([if10 (< nc35240 start)]) (if if10 (let ([AppRand41 (- nc25224 1)]) (loop25220 lst5238 AppRand41)) (let ([AppRand42 (+ nc25224 nc35240)]) (let ([AppRand43 (+ nc15216 AppRand42)]) (let ([AppRand44 (- m5210 AppRand43)]) (let ([AppRand45 (vector nc15216 nc25224 nc35240 AppRand44)][AppRand46 (- nc35240 1)]) (loop35236 (cons AppRand45 lst5238) AppRand46))))))))][AppRand47 (+ nc15216 nc25224)]) (let ([AppRand48 (- m5210 AppRand47)]) (loop35236 lst5222 (quotient AppRand48 2))))))))))][AppRand49 (- m5210 nc15216)]) (loop25220 lst5214 (quotient AppRand49 3))))')
debug_merge_point(0, 0, 'lst5214')
+427: p33 = getfield_gc_r(p11, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+438: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x29608d8>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+447: p35 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+451: p36 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop15067 AppRand26 '())')
+455: guard_class(p35, 16503536, descr=<Guard0x2960920>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+468: p38 = getfield_gc_r(p35, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+472: guard_nonnull_class(p38, 16477696, descr=<Guard0x2803700>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+490: p40 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+501: guard_value(p40, ConstPtr(ptr41), descr=<Guard0x2960968>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+510: p42 = getfield_gc_r(p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 AppRand26 '())')
debug_merge_point(0, 0, '(let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))')
+510: guard_class(p36, 16437352, descr=<Guard0x29609b0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+523: p44 = getfield_gc_r(p36, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+527: guard_nonnull_class(p44, ConstClass(ForwardLink), descr=<Guard0x2803760>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(car ps5069)')
debug_merge_point(0, 0, '(let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24)))')
debug_merge_point(0, 0, '(vector-ref p5075 0)')
debug_merge_point(0, 0, '(vector-ref p5075 1)')
debug_merge_point(0, 0, '(vector-ref p5075 2)')
debug_merge_point(0, 0, '(vector-ref p5075 3)')
debug_merge_point(0, 0, '(let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))')
debug_merge_point(0, 0, '(lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))')
+545: p46 = getfield_gc_r(p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+549: p47 = getfield_gc_r(p38, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+560: guard_class(p47, 16505296, descr=<Guard0x29609f8>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(vector-ref radicals nc15078)')
+572: guard_nonnull_class(p46, ConstClass(W_Vector), descr=<Guard0x28037c0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+591: i51 = int_ge(i2, 0)
+595: guard_true(i51, descr=<Guard0x2960a40>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+601: i52 = getfield_gc_i(p46, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+612: i53 = int_lt(i2, i52)
+615: guard_true(i53, descr=<Guard0x2960a88>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+621: p54 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+625: guard_class(p54, 16622984, descr=<Guard0x2960ad0>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
+638: p56 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+642: p57 = getarrayitem_gc_r(p56, i2, descr=<ArrayP 8>)
+654: guard_class(p57, 16470384, descr=<Guard0x2960b18>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(loop15067 (cdr ps5069) lst5071)')
+666: guard_nonnull_class(p3, 16470384, descr=<Guard0x2803820>) [i0, i1, i2, p3, i4, i5, p6, p7, p8, p9, i10, p11, p12]
debug_merge_point(0, 0, '(if (null? ps5069) lst5071 (let ([p5075 (car ps5069)]) (let ([nc15078 (vector-ref p5075 0)][nc25081 (vector-ref p5075 1)][nc35084 (vector-ref p5075 2)][nc4 (vector-ref p5075 3)]) (let ([loop25089 (lambda (rads15091 lst5093) (if (null? rads15091) lst5093 (let ([loop35097 (lambda (rads25099 lst5101) (if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))))][if4 (= nc15078 nc25081)]) (let ([loop35097 loop35097][AppRand21 (if if4 rads15091 (vector-ref radicals nc25081))][AppRand22 (loop25089 (cdr rads15091) lst5093)]) (loop35097 AppRand21 AppRand22)))))][AppRand23 (vector-ref radicals nc15078)][AppRand24 (loop15067 (cdr ps5069) lst5071)]) (loop25089 AppRand23 AppRand24))))) from (loop15067 (cdr ps5069) lst5071)')
+692: p60 = new_with_vtable(descr=<SizeDescr 32>)
+736: p61 = new_with_vtable(descr=<SizeDescr 56>)
+747: p62 = new_with_vtable(descr=<SizeDescr 64>)
+758: setfield_gc(p62, p47, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+783: setfield_gc(p62, ConstPtr(ptr63), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+787: setfield_gc(p62, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+791: p64 = new_with_vtable(descr=<SizeDescr 16>)
+802: setfield_gc(p64, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+806: setfield_gc(p62, p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+810: p65 = new_with_vtable(descr=<SizeDescr 16>)
+821: setfield_gc(p65, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+825: setfield_gc(p62, p65, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+829: p66 = new_with_vtable(descr=<SizeDescr 16>)
+841: setfield_gc(p66, i5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+846: setfield_gc(p62, p66, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+850: p67 = new_with_vtable(descr=<SizeDescr 16>)
+863: setfield_gc(p67, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+867: setfield_gc(p62, p67, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+871: setfield_gc(p61, p44, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+875: setfield_gc(p60, p38, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+893: setfield_gc(p61, ConstPtr(ptr68), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+897: setfield_gc(p61, p47, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+901: setfield_gc(p61, p36, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+912: setfield_gc(p60, p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+923: setfield_gc(p60, ConstPtr(ptr69), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+927: setfield_gc(p61, p62, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+931: setfield_gc(p61, p57, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+935: jump(p60, p61, descr=TargetToken(64566704))
+976: --end of the loop--
[3e4c22b4cfd6520] jit-log-opt-bridge}
[3e4c22b4d7125c3] {jit-backend
[3e4c22b4d79c6aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ae
[3e4c22b4d7a664f] jit-backend-dump}
[3e4c22b4d7b2abb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21af74 +0  2A000000
[3e4c22b4d7b4034] jit-backend-dump}
[3e4c22b4d7b82d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b295 +0  2A000000
[3e4c22b4d7b9192] jit-backend-dump}
[3e4c22b4d7bc72c] {jit-backend-addr
bridge out of Guard 0x5216c80 has address 0x7f4a5c21af70 to 0x7f4a5c21b290
       gc table: 0x7f4a5c21ae50
    jump target: 0x7f4a5c21af70
         resops: 0x7f4a5c21af7e
       failures: 0x7f4a5c21b290
            end: 0x7f4a5c21b5e3
[3e4c22b4d7beab8] jit-backend-addr}
[3e4c22b4d7c2263] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21af8e +0  41030000
[3e4c22b4d7c3086] jit-backend-dump}
[3e4c22b4d7c6553] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21afa5 +0  46030000
[3e4c22b4d7c729c] jit-backend-dump}
[3e4c22b4d7ca5c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21afbc +0  4B030000
[3e4c22b4d7cb322] jit-backend-dump}
[3e4c22b4d7ce7e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21afc8 +0  5B030000
[3e4c22b4d7cf557] jit-backend-dump}
[3e4c22b4d7d278f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21afdc +0  63030000
[3e4c22b4d7d34c0] jit-backend-dump}
[3e4c22b4d7d680e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21affc +0  7B030000
[3e4c22b4d7d7542] jit-backend-dump}
[3e4c22b4d7da83e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b010 +0  83030000
[3e4c22b4d7db5bc] jit-backend-dump}
[3e4c22b4d7de7c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b025 +0  8A030000
[3e4c22b4d7df4f1] jit-backend-dump}
[3e4c22b4d7e272f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b032 +0  99030000
[3e4c22b4d7e3457] jit-backend-dump}
[3e4c22b4d7e66ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b049 +0  9E030000
[3e4c22b4d7e741f] jit-backend-dump}
[3e4c22b4d7ea639] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b069 +0  9A030000
[3e4c22b4d7eb354] jit-backend-dump}
[3e4c22b4d7ee63e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b080 +0  9F030000
[3e4c22b4d7ef36c] jit-backend-dump}
[3e4c22b4d7f25a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b092 +0  A9030000
[3e4c22b4d7f32e7] jit-backend-dump}
[3e4c22b4d7f652c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b0a3 +0  B4030000
[3e4c22b4d7f7254] jit-backend-dump}
[3e4c22b4d7fa46d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b0b6 +0  BD030000
[3e4c22b4d7fb176] jit-backend-dump}
[3e4c22b4d7fe37e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b0c0 +0  CF030000
[3e4c22b4d7ff0c4] jit-backend-dump}
[3e4c22b4d80270f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b0cd +0  DE030000
[3e4c22b4d803459] jit-backend-dump}
[3e4c22b4d80679b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b0df +0  E8030000
[3e4c22b4d8074fd] jit-backend-dump}
[3e4c22b4d80a717] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b0f5 +0  EE030000
[3e4c22b4d80b438] jit-backend-dump}
[3e4c22b4d80e6ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b10d +0  F2030000
[3e4c22b4d80f3eb] jit-backend-dump}
[3e4c22b4d812645] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b11d +0  FE030000
[3e4c22b4d813382] jit-backend-dump}
[3e4c22b4d816659] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b12f +0  08040000
[3e4c22b4d8173a0] jit-backend-dump}
[3e4c22b4d81a5b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b13c +0  17040000
[3e4c22b4d81b2db] jit-backend-dump}
[3e4c22b4d81e532] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b154 +0  1B040000
[3e4c22b4d81f253] jit-backend-dump}
[3e4c22b4d82243c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b15d +0  2E040000
[3e4c22b4d823158] jit-backend-dump}
[3e4c22b4d826401] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b173 +0  34040000
[3e4c22b4d82713b] jit-backend-dump}
[3e4c22b4d82a373] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b189 +0  3A040000
[3e4c22b4d82b0ba] jit-backend-dump}
[3e4c22b4d82e868] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ffe47 +0  25B10100
[3e4c22b4d82f61f] jit-backend-dump}
[3e4c22b4d833921] jit-backend}
[3e4c22b4d837790] {jit-log-opt-bridge
# bridge out of Guard 0x5216c80 with 117 ops
[p0, p1]
+310: guard_class(p1, 16500016, descr=<Guard0x2803940>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+326: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x28039a0>) [p0, p1]
+345: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+349: guard_nonnull_class(p5, 16616448, descr=<Guard0x2803a00>) [p0, p1]
+368: guard_class(p0, 16437896, descr=<Guard0x2960bf0>) [p0, p1]
+380: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+391: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x2960c38>) [p0, p1]
+400: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+400: guard_not_invalidated(descr=<Guard0x2960c80>) [p0, p1]
+400: p11 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+404: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+408: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+412: guard_nonnull_class(p11, 16478824, descr=<Guard0x2803a60>) [p0, p1]
+432: guard_nonnull_class(p12, 16470384, descr=<Guard0x2803ac0>) [p0, p1]
+452: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+464: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x2960cc8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+473: guard_class(p13, 16437896, descr=<Guard0x2960d10>) [p0, p1]
+486: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+490: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x2803b20>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+509: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+514: p22 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+519: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+524: p24 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+529: guard_class(p24, 16505296, descr=<Guard0x2960d58>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+541: p26 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+546: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x2803b80>) [p0, p1]
+564: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x2803be0>) [p0, p1]
+582: i29 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+586: i30 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+590: i31 = int_eq(i29, i30)
+593: guard_false(i31, descr=<Guard0x2960da0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+599: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x2803c40>) [p0, p1]
+618: i34 = int_ge(i30, 0)
+622: guard_true(i34, descr=<Guard0x2960de8>) [p0, p1]
+628: i35 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+632: i36 = int_lt(i30, i35)
+635: guard_true(i36, descr=<Guard0x2960e30>) [p0, p1]
+641: p37 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+645: guard_class(p37, 16622984, descr=<Guard0x2960e78>) [p0, p1]
+659: p39 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+663: p40 = getarrayitem_gc_r(p39, i30, descr=<ArrayP 8>)
+668: guard_class(p40, 16470384, descr=<Guard0x2960ec0>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+681: p42 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+685: guard_nonnull_class(p42, 16616448, descr=<Guard0x2803ca0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+712: i45 = instance_ptr_eq(p42, ConstPtr(ptr44))
+715: guard_true(i45, descr=<Guard0x2960f08>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+721: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x2803d00>) [p0, p1]
+739: i47 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+743: i48 = int_eq(i30, i47)
+746: guard_true(i48, descr=<Guard0x2960f50>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+752: p49 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+756: guard_nonnull_class(p49, 16616448, descr=<Guard0x2803d60>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+776: i52 = instance_ptr_eq(p49, ConstPtr(ptr51))
+779: guard_true(i52, descr=<Guard0x2960f98>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+785: p53 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+789: guard_nonnull_class(p53, ConstClass(W_Symbol), descr=<Guard0x2803dc0>) [p0, p1]
+807: p55 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+811: guard_nonnull_class(p55, ConstClass(W_Vector), descr=<Guard0x2803e20>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+829: p57 = new_with_vtable(descr=<SizeDescr 32>)
+876: p58 = new_with_vtable(descr=<SizeDescr 40>)
+887: setfield_gc(p58, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+898: setfield_gc(p58, ConstPtr(ptr59), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+902: setfield_gc(p58, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+906: setfield_gc(p58, p40, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+910: p60 = new_with_vtable(descr=<SizeDescr 24>)
+921: setfield_gc(p60, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+925: setfield_gc(p60, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+929: p61 = new_with_vtable(descr=<SizeDescr 48>)
+940: p62 = new_with_vtable(descr=<SizeDescr 32>)
+951: setfield_gc(p62, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+959: p65 = new_array_clear(4, descr=<ArrayP 8>)
+986: setarrayitem_gc(p65, 0, ConstPtr(ptr67), descr=<ArrayP 8>)
+990: setarrayitem_gc(p65, 1, p53, descr=<ArrayP 8>)
+994: setarrayitem_gc(p65, 2, p55, descr=<ArrayP 8>)
+998: setarrayitem_gc(p65, 3, p55, descr=<ArrayP 8>)
+1002: setfield_gc(p62, p65, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1013: setfield_gc(p62, ConstPtr(ptr71), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1017: setfield_gc(p57, p49, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1021: setfield_gc(p57, p60, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1032: setfield_gc(p61, ConstPtr(ptr72), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1036: setfield_gc(p61, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1040: setfield_gc(p61, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1044: setfield_gc(p61, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1048: setfield_gc(p57, p58, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1052: setfield_gc(p61, p62, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1056: jump(p57, p61, descr=TargetToken(59469520))
+1088: --end of the loop--
[3e4c22b4d8942dd] jit-log-opt-bridge}
[3e4c22b4de95d2f] {jit-backend
[3e4c22b4def4227] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b
[3e4c22b4defbd7c] jit-backend-dump}
[3e4c22b4df07f9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b7e4 +0  28000000
[3e4c22b4df09492] jit-backend-dump}
[3e4c22b4df0d72c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ba15 +0  28000000
[3e4c22b4df0e612] jit-backend-dump}
[3e4c22b4df11ce4] {jit-backend-addr
bridge out of Guard 0x40d9e80 has address 0x7f4a5c21b7e0 to 0x7f4a5c21ba10
       gc table: 0x7f4a5c21b730
    jump target: 0x7f4a5c21b7e0
         resops: 0x7f4a5c21b7ee
       failures: 0x7f4a5c21ba10
            end: 0x7f4a5c21bc2f
[3e4c22b4df1402d] jit-backend-addr}
[3e4c22b4df17824] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b7fe +0  51020000
[3e4c22b4df186a3] jit-backend-dump}
[3e4c22b4df1bc8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b80b +0  60020000
[3e4c22b4df1c989] jit-backend-dump}
[3e4c22b4df1fd0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b81b +0  6C020000
[3e4c22b4df209f3] jit-backend-dump}
[3e4c22b4df23c8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b833 +0  70020000
[3e4c22b4df2495f] jit-backend-dump}
[3e4c22b4df27b7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b840 +0  7F020000
[3e4c22b4df28851] jit-backend-dump}
[3e4c22b4df2bb16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b854 +0  87020000
[3e4c22b4df2c7fb] jit-backend-dump}
[3e4c22b4df2fdb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b874 +0  9F020000
[3e4c22b4df30abf] jit-backend-dump}
[3e4c22b4df33e98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b887 +0  A8020000
[3e4c22b4df34bbf] jit-backend-dump}
[3e4c22b4df37e75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b89c +0  AF020000
[3e4c22b4df38b38] jit-backend-dump}
[3e4c22b4df3bdb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b8a9 +0  BE020000
[3e4c22b4df3ca6a] jit-backend-dump}
[3e4c22b4df3fc8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b8c0 +0  C3020000
[3e4c22b4df4093a] jit-backend-dump}
[3e4c22b4df43b54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b8e5 +0  BA020000
[3e4c22b4df447fe] jit-backend-dump}
[3e4c22b4df47a58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b8fc +0  BF020000
[3e4c22b4df48736] jit-backend-dump}
[3e4c22b4df4ba5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b90e +0  C9020000
[3e4c22b4df4c717] jit-backend-dump}
[3e4c22b4df4f9a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b926 +0  CD020000
[3e4c22b4df50652] jit-backend-dump}
[3e4c22b4df5389a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21b93c +0  D3020000
[3e4c22b4df54550] jit-backend-dump}
[3e4c22b4df57a23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1edc45 +0  97DB0200
[3e4c22b4df58742] jit-backend-dump}
[3e4c22b4df5c986] jit-backend}
[3e4c22b4df607eb] {jit-log-opt-bridge
# bridge out of Guard 0x40d9e80 with 69 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x2803f40>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull(p3, descr=<Guard0x2960fe0>) [p0, p1]
+230: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+233: guard_true(i5, descr=<Guard0x2961028>) [p0, p1]
debug_merge_point(0, 0, 'lst5093')
+239: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+243: guard_nonnull_class(p6, 16470384, descr=<Guard0x2803fa0>) [p0, p1]
+263: guard_class(p0, 16437896, descr=<Guard0x2961070>) [p0, p1]
+276: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+287: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2961220>) [p0, p1]
+296: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+296: guard_not_invalidated(descr=<Guard0x2961268>) [p0, p1]
+296: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+300: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+304: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop35097 AppRand21 AppRand22) from (loop25089 (cdr rads15091) lst5093)')
+308: guard_nonnull_class(p12, 16479200, descr=<Guard0x2d3e020>) [p0, p1]
+328: guard_nonnull_class(p13, 16470384, descr=<Guard0x2d3e080>) [p0, p1]
+347: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+359: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x29612b0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 AppRand21 AppRand22)')
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+368: guard_class(p14, 16437896, descr=<Guard0x29612f8>) [p0, p1]
+381: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+385: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x2d3e0e0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+404: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+409: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+414: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+419: p25 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+424: p26 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+429: guard_class(p26, 16505296, descr=<Guard0x2961340>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+441: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+446: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x2d3e140>) [p0, p1]
+464: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x2d3e1a0>) [p0, p1]
+482: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+493: i32 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+497: i33 = int_eq(i31, i32)
+500: guard_true(i33, descr=<Guard0x2d17190>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+506: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+510: guard_nonnull_class(p34, 16616448, descr=<Guard0x2d3e200>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+528: p36 = new_with_vtable(descr=<SizeDescr 32>)
+575: p37 = new_with_vtable(descr=<SizeDescr 56>)
+586: p38 = new_with_vtable(descr=<SizeDescr 64>)
+598: setfield_gc(p38, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+617: setfield_gc(p38, ConstPtr(ptr39), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+622: setfield_gc(p38, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+627: setfield_gc(p38, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+632: setfield_gc(p38, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+637: setfield_gc(p38, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+642: setfield_gc(p38, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+647: setfield_gc(p36, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+658: setfield_gc(p36, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+669: setfield_gc(p37, ConstPtr(ptr40), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+673: setfield_gc(p37, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+677: setfield_gc(p37, p38, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+681: setfield_gc(p37, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+685: setfield_gc(p37, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+689: setfield_gc(p37, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+693: setfield_gc(p36, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+704: jump(p36, p37, descr=TargetToken(61027120))
+736: --end of the loop--
[3e4c22b4df9885f] jit-log-opt-bridge}
[3e4c22b4e97395f] {jit-backend
[3e4c22b4ea086e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21be
[3e4c22b4ea13a72] jit-backend-dump}
[3e4c22b4ea20bc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21bf84 +0  2A000000
[3e4c22b4ea22264] jit-backend-dump}
[3e4c22b4ea26b53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c2e5 +0  2A000000
[3e4c22b4ea27b62] jit-backend-dump}
[3e4c22b4ea2b445] {jit-backend-addr
bridge out of Guard 0x5217fa0 has address 0x7f4a5c21bf80 to 0x7f4a5c21c2e0
       gc table: 0x7f4a5c21be50
    jump target: 0x7f4a5c21bf80
         resops: 0x7f4a5c21bf8e
       failures: 0x7f4a5c21c2e0
            end: 0x7f4a5c21c687
[3e4c22b4ea2da56] jit-backend-addr}
[3e4c22b4ea312b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21bf9e +0  81030000
[3e4c22b4ea321fb] jit-backend-dump}
[3e4c22b4ea35742] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21bfab +0  90030000
[3e4c22b4ea364cf] jit-backend-dump}
[3e4c22b4ea3989b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21bfbb +0  9C030000
[3e4c22b4ea3a5aa] jit-backend-dump}
[3e4c22b4ea3d8bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21bfd2 +0  A1030000
[3e4c22b4ea3e63f] jit-backend-dump}
[3e4c22b4ea418fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21bfdf +0  B0030000
[3e4c22b4ea425ec] jit-backend-dump}
[3e4c22b4ea45852] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21bff3 +0  B8030000
[3e4c22b4ea46561] jit-backend-dump}
[3e4c22b4ea49ba9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c00b +0  D8030000
[3e4c22b4ea4a8da] jit-backend-dump}
[3e4c22b4ea4dc0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c01c +0  E3030000
[3e4c22b4ea4e932] jit-backend-dump}
[3e4c22b4ea51b4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c030 +0  EB030000
[3e4c22b4ea52876] jit-backend-dump}
[3e4c22b4ea55a90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c04e +0  E9030000
[3e4c22b4ea5679f] jit-backend-dump}
[3e4c22b4ea59945] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c061 +0  F2030000
[3e4c22b4ea5a654] jit-backend-dump}
[3e4c22b4ea5d812] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c075 +0  FA030000
[3e4c22b4ea5e515] jit-backend-dump}
[3e4c22b4ea61710] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c081 +0  0A040000
[3e4c22b4ea62416] jit-backend-dump}
[3e4c22b4ea65630] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c097 +0  10040000
[3e4c22b4ea66367] jit-backend-dump}
[3e4c22b4ea69568] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c0ba +0  09040000
[3e4c22b4ea6a250] jit-backend-dump}
[3e4c22b4ea6d48e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c0d7 +0  08040000
[3e4c22b4ea6e185] jit-backend-dump}
[3e4c22b4ea71380] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c0e9 +0  12040000
[3e4c22b4ea72077] jit-backend-dump}
[3e4c22b4ea752ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c0fa +0  1D040000
[3e4c22b4ea75fb8] jit-backend-dump}
[3e4c22b4ea79179] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c110 +0  23040000
[3e4c22b4ea79e6d] jit-backend-dump}
[3e4c22b4ea7d040] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c119 +0  36040000
[3e4c22b4ea7dd4c] jit-backend-dump}
[3e4c22b4ea80f75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c12b +0  40040000
[3e4c22b4ea81c91] jit-backend-dump}
[3e4c22b4ea84e80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c138 +0  4F040000
[3e4c22b4ea85b8c] jit-backend-dump}
[3e4c22b4ea88d37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c14b +0  58040000
[3e4c22b4ea89a5c] jit-backend-dump}
[3e4c22b4ea8cc76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c155 +0  6A040000
[3e4c22b4ea8d97f] jit-backend-dump}
[3e4c22b4ea90b21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c162 +0  79040000
[3e4c22b4ea9180c] jit-backend-dump}
[3e4c22b4ea94a41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c172 +0  85040000
[3e4c22b4ea95747] jit-backend-dump}
[3e4c22b4ea98970] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c188 +0  8B040000
[3e4c22b4ea99679] jit-backend-dump}
[3e4c22b4ea9c831] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c1a0 +0  8F040000
[3e4c22b4ea9d52b] jit-backend-dump}
[3e4c22b4eaa06fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c1b6 +0  95040000
[3e4c22b4eaa13f8] jit-backend-dump}
[3e4c22b4eaa45ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c1cc +0  9B040000
[3e4c22b4eaa52f0] jit-backend-dump}
[3e4c22b4eaa8800] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c202961 +0  1B960100
[3e4c22b4eaa9510] jit-backend-dump}
[3e4c22b4eaad8fa] jit-backend}
[3e4c22b4eab180a] {jit-log-opt-bridge
# bridge out of Guard 0x5217fa0 with 126 ops
[p0, p1]
+326: guard_class(p1, 16500016, descr=<Guard0x2d3e2c0>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+342: guard_nonnull(p3, descr=<Guard0x2d17220>) [p0, p1]
+358: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+361: guard_true(i5, descr=<Guard0x2d17268>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+367: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+371: guard_nonnull_class(p6, 16470384, descr=<Guard0x2d3e320>) [p0, p1]
+390: guard_class(p0, 16437352, descr=<Guard0x2d172b0>) [p0, p1]
+403: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+414: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2d172f8>) [p0, p1]
+423: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+423: guard_not_invalidated(descr=<Guard0x2d17340>) [p0, p1]
+423: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+427: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x2d3e380>) [p0, p1]
+447: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+451: guard_class(p14, 16437896, descr=<Guard0x2d17388>) [p0, p1]
+464: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+475: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x2d173d0>) [p0, p1]
+484: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+484: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+488: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+492: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+496: guard_nonnull_class(p19, 16478824, descr=<Guard0x2d3e3e0>) [p0, p1]
+514: guard_nonnull_class(p20, 16470384, descr=<Guard0x2d3e440>) [p0, p1]
+533: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+544: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x2d17418>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+553: guard_class(p21, 16435920, descr=<Guard0x2d17460>) [p0, p1]
+565: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+569: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x2d3e4a0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+587: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+591: p30 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+595: p31 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+599: p32 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+610: guard_class(p32, 16505296, descr=<Guard0x2d174a8>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+622: p34 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+633: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x2d3e500>) [p0, p1]
+651: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x2d3e560>) [p0, p1]
+669: i37 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+673: i38 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+677: i39 = int_eq(i37, i38)
+680: guard_true(i39, descr=<Guard0x2d174f0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+686: p40 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+690: guard_nonnull_class(p40, 16616448, descr=<Guard0x2d3e5c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+708: i43 = instance_ptr_eq(p40, ConstPtr(ptr42))
+711: guard_true(i43, descr=<Guard0x2d17538>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+717: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x2d3e620>) [p0, p1]
+735: i45 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+739: i46 = int_eq(i38, i45)
+742: guard_false(i46, descr=<Guard0x2d17580>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, '(vector-ref radicals nc3)')
+748: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x2d3e680>) [p0, p1]
+767: i49 = int_ge(i45, 0)
+771: guard_true(i49, descr=<Guard0x2d175c8>) [p0, p1]
+777: i50 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+781: i51 = int_lt(i45, i50)
+784: guard_true(i51, descr=<Guard0x2d17610>) [p0, p1]
+790: p52 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+794: guard_class(p52, 16622984, descr=<Guard0x2d17658>) [p0, p1]
+806: p54 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+810: p55 = getarrayitem_gc_r(p54, i45, descr=<ArrayP 8>)
+815: guard_class(p55, 16470384, descr=<Guard0x2d176a0>) [p0, p1]
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+828: p57 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+832: guard_nonnull_class(p57, ConstClass(W_Symbol), descr=<Guard0x2d3e6e0>) [p0, p1]
+852: p59 = getfield_gc_r(p55, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+856: guard_nonnull_class(p59, ConstClass(W_Vector), descr=<Guard0x2d3e740>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+874: p61 = getfield_gc_r(p55, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+878: guard_nonnull_class(p61, 16470384, descr=<Guard0x2d3e7a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+896: p63 = new_with_vtable(descr=<SizeDescr 32>)
+940: p64 = new_with_vtable(descr=<SizeDescr 40>)
+951: setfield_gc(p64, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+962: setfield_gc(p64, ConstPtr(ptr65), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+966: setfield_gc(p64, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+970: setfield_gc(p64, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+974: p66 = new_with_vtable(descr=<SizeDescr 24>)
+985: setfield_gc(p66, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+989: setfield_gc(p66, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+993: p67 = new_with_vtable(descr=<SizeDescr 48>)
+1004: p68 = new_with_vtable(descr=<SizeDescr 32>)
+1016: setfield_gc(p68, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1025: p71 = new_array_clear(4, descr=<ArrayP 8>)
+1052: setarrayitem_gc(p71, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+1056: setarrayitem_gc(p71, 1, p57, descr=<ArrayP 8>)
+1060: setarrayitem_gc(p71, 2, p57, descr=<ArrayP 8>)
+1064: setarrayitem_gc(p71, 3, p59, descr=<ArrayP 8>)
+1068: setfield_gc(p68, p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1080: setfield_gc(p68, ConstPtr(ptr77), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1085: setfield_gc(p63, p61, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1089: setfield_gc(p63, p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1093: setfield_gc(p67, ConstPtr(ptr78), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1097: setfield_gc(p67, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1101: setfield_gc(p67, p68, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1105: setfield_gc(p67, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1116: setfield_gc(p67, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1127: setfield_gc(p63, p64, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1131: jump(p63, p67, descr=TargetToken(59469520))
+1168: --end of the loop--
[3e4c22b4eb14bf7] jit-log-opt-bridge}
[3e4c22b4f3f2c57] {jit-backend
[3e4c22b4f482887] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c8b
[3e4c22b4f48d07a] jit-backend-dump}
[3e4c22b4f499015] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21c9f4 +0  2A000000
[3e4c22b4f49a6cf] jit-backend-dump}
[3e4c22b4f49ea14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cd55 +0  2A000000
[3e4c22b4f49f9a0] jit-backend-dump}
[3e4c22b4f4a30c7] {jit-backend-addr
bridge out of Guard 0x59ca9b0 has address 0x7f4a5c21c9f0 to 0x7f4a5c21cd50
       gc table: 0x7f4a5c21c8b0
    jump target: 0x7f4a5c21c9f0
         resops: 0x7f4a5c21c9fe
       failures: 0x7f4a5c21cd50
            end: 0x7f4a5c21d113
[3e4c22b4f4a5643] jit-backend-addr}
[3e4c22b4f4a8e1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ca0e +0  81030000
[3e4c22b4f4a9c8e] jit-backend-dump}
[3e4c22b4f4ad17f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ca1b +0  90030000
[3e4c22b4f4adee1] jit-backend-dump}
[3e4c22b4f4b120e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ca2b +0  9C030000
[3e4c22b4f4b1f79] jit-backend-dump}
[3e4c22b4f4b52bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ca42 +0  A1030000
[3e4c22b4f4b604e] jit-backend-dump}
[3e4c22b4f4b92ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ca50 +0  AF030000
[3e4c22b4f4ba029] jit-backend-dump}
[3e4c22b4f4bd300] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ca64 +0  B7030000
[3e4c22b4f4be06e] jit-backend-dump}
[3e4c22b4f4c14d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ca7c +0  D7030000
[3e4c22b4f4c2241] jit-backend-dump}
[3e4c22b4f4c55c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ca8d +0  E2030000
[3e4c22b4f4c6320] jit-backend-dump}
[3e4c22b4f4c95db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21caa1 +0  EA030000
[3e4c22b4f4ca334] jit-backend-dump}
[3e4c22b4f4cd53b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cabf +0  E8030000
[3e4c22b4f4ce26c] jit-backend-dump}
[3e4c22b4f4d1525] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cad2 +0  F1030000
[3e4c22b4f4d2253] jit-backend-dump}
[3e4c22b4f4d5488] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cae6 +0  F9030000
[3e4c22b4f4d61b3] jit-backend-dump}
[3e4c22b4f4d93c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21caf2 +0  09040000
[3e4c22b4f4da0f4] jit-backend-dump}
[3e4c22b4f4dd33c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cb08 +0  0F040000
[3e4c22b4f4de067] jit-backend-dump}
[3e4c22b4f4e129c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cb2b +0  08040000
[3e4c22b4f4e1fcd] jit-backend-dump}
[3e4c22b4f4e520e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cb48 +0  07040000
[3e4c22b4f4e5f5e] jit-backend-dump}
[3e4c22b4f4e9168] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cb5a +0  11040000
[3e4c22b4f4e9ea5] jit-backend-dump}
[3e4c22b4f4ed102] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cb6b +0  1C040000
[3e4c22b4f4ede5b] jit-backend-dump}
[3e4c22b4f4f1087] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cb7e +0  25040000
[3e4c22b4f4f1dbe] jit-backend-dump}
[3e4c22b4f4f4fdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cb88 +0  37040000
[3e4c22b4f4f5cde] jit-backend-dump}
[3e4c22b4f4f8fef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cb95 +0  46040000
[3e4c22b4f4f9d70] jit-backend-dump}
[3e4c22b4f4fd11d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cba5 +0  52040000
[3e4c22b4f4fde3c] jit-backend-dump}
[3e4c22b4f5010a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cbbb +0  58040000
[3e4c22b4f501d8c] jit-backend-dump}
[3e4c22b4f504f6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cbd1 +0  5E040000
[3e4c22b4f505c66] jit-backend-dump}
[3e4c22b4f508e67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cbda +0  71040000
[3e4c22b4f509b5b] jit-backend-dump}
[3e4c22b4f50cda8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cbec +0  7B040000
[3e4c22b4f50da93] jit-backend-dump}
[3e4c22b4f510c94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cbf9 +0  8A040000
[3e4c22b4f511988] jit-backend-dump}
[3e4c22b4f514bc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cc0f +0  90040000
[3e4c22b4f5158b7] jit-backend-dump}
[3e4c22b4f518ac1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cc18 +0  A3040000
[3e4c22b4f5197c4] jit-backend-dump}
[3e4c22b4f51ca06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cc2f +0  A8040000
[3e4c22b4f51d70c] jit-backend-dump}
[3e4c22b4f520922] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21cc45 +0  AE040000
[3e4c22b4f52161c] jit-backend-dump}
[3e4c22b4f524abe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c203f20 +0  CC8A0100
[3e4c22b4f5257c8] jit-backend-dump}
[3e4c22b4f529b1c] jit-backend}
[3e4c22b4f52db12] {jit-log-opt-bridge
# bridge out of Guard 0x59ca9b0 with 128 ops
[p0, p1]
+342: guard_class(p1, 16500016, descr=<Guard0x2d3e920>) [p0, p1]
+354: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+358: guard_nonnull(p3, descr=<Guard0x2d17c40>) [p0, p1]
+374: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+377: guard_true(i5, descr=<Guard0x2d17bf8>) [p0, p1]
debug_merge_point(0, 0, 'lst4996')
+383: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+387: guard_nonnull_class(p6, 16616448, descr=<Guard0x2d3ec20>) [p0, p1]
+406: guard_class(p0, 16437352, descr=<Guard0x2d17bb0>) [p0, p1]
+420: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+431: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2d17b68>) [p0, p1]
+440: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+440: guard_not_invalidated(descr=<Guard0x2d17b20>) [p0, p1]
+440: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+444: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x2d3ebc0>) [p0, p1]
+464: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand1 AppRand2) from (loop4 (cdr rads3) lst4996)')
+468: guard_class(p14, 16437896, descr=<Guard0x2d17ad8>) [p0, p1]
+481: p16 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+492: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x2d17a90>) [p0, p1]
+501: p18 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+501: p19 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+505: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+509: p21 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+513: guard_nonnull_class(p19, 16478824, descr=<Guard0x2d3eb60>) [p0, p1]
+531: guard_nonnull_class(p20, 16470384, descr=<Guard0x2d3eb00>) [p0, p1]
+550: p24 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+561: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x2d17a48>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+570: guard_class(p21, 16437896, descr=<Guard0x2d17a00>) [p0, p1]
+582: p27 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+586: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x2d3eaa0>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+604: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+608: p30 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+612: p31 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+616: p32 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+627: guard_class(p32, 16505296, descr=<Guard0x2d179b8>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+639: p34 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+650: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x2d3ea40>) [p0, p1]
+668: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x2d3e9e0>) [p0, p1]
+686: i37 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+690: i38 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+694: i39 = int_eq(i37, i38)
+697: guard_false(i39, descr=<Guard0x2d17970>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+703: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x2d3e980>) [p0, p1]
+722: i42 = int_ge(i38, 0)
+726: guard_true(i42, descr=<Guard0x2d17928>) [p0, p1]
+732: i43 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+736: i44 = int_lt(i38, i43)
+739: guard_true(i44, descr=<Guard0x2d178e0>) [p0, p1]
+745: p45 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+749: guard_class(p45, 16622984, descr=<Guard0x2d17898>) [p0, p1]
+761: p47 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+765: p48 = getarrayitem_gc_r(p47, i38, descr=<ArrayP 8>)
+770: guard_class(p48, 16470384, descr=<Guard0x2d17850>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+783: p50 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+787: guard_nonnull_class(p50, 16616448, descr=<Guard0x2d3e8c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+805: i53 = instance_ptr_eq(p50, ConstPtr(ptr52))
+808: guard_true(i53, descr=<Guard0x2d17d18>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+814: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x2d3ec80>) [p0, p1]
+832: i55 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+836: i56 = int_eq(i38, i55)
+839: guard_true(i56, descr=<Guard0x2d17d60>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+845: p57 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+849: guard_nonnull_class(p57, 16616448, descr=<Guard0x2d3ece0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+867: i60 = instance_ptr_eq(p57, ConstPtr(ptr59))
+870: guard_true(i60, descr=<Guard0x2d17da8>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+876: p61 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+880: guard_nonnull_class(p61, ConstClass(W_Symbol), descr=<Guard0x2d3ed40>) [p0, p1]
+899: p63 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+903: guard_nonnull_class(p63, ConstClass(W_Vector), descr=<Guard0x2d3eda0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+921: p65 = new_with_vtable(descr=<SizeDescr 32>)
+965: p66 = new_with_vtable(descr=<SizeDescr 40>)
+976: setfield_gc(p66, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+987: setfield_gc(p66, ConstPtr(ptr67), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+991: setfield_gc(p66, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+995: setfield_gc(p66, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+999: p68 = new_with_vtable(descr=<SizeDescr 24>)
+1010: setfield_gc(p68, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1014: setfield_gc(p68, p6, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1018: p69 = new_with_vtable(descr=<SizeDescr 48>)
+1029: p70 = new_with_vtable(descr=<SizeDescr 32>)
+1041: setfield_gc(p70, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1050: p73 = new_array_clear(4, descr=<ArrayP 8>)
+1077: setarrayitem_gc(p73, 0, ConstPtr(ptr75), descr=<ArrayP 8>)
+1081: setarrayitem_gc(p73, 1, p61, descr=<ArrayP 8>)
+1085: setarrayitem_gc(p73, 2, p63, descr=<ArrayP 8>)
+1089: setarrayitem_gc(p73, 3, p63, descr=<ArrayP 8>)
+1093: setfield_gc(p70, p73, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1105: setfield_gc(p70, ConstPtr(ptr79), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1110: setfield_gc(p65, p57, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1114: setfield_gc(p65, p68, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1118: setfield_gc(p69, ConstPtr(ptr80), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1122: setfield_gc(p69, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1126: setfield_gc(p69, p70, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1130: setfield_gc(p69, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1141: setfield_gc(p69, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1152: setfield_gc(p65, p66, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1156: jump(p65, p69, descr=TargetToken(59469520))
+1184: --end of the loop--
[3e4c22b4f586437] jit-log-opt-bridge}
[3e4c22b5014e266] {jit-backend
[3e4c22b501be57c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d2a0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C7202000048FF042500A514048139700B01000F85000000004C8B79104D85FF0F84000000004C8B35FAFEFFFF4D39F70F85000000004C8B79184983FF01720741813F40D202000F850000000041817D00C81800000F85000000004D8B65204C8B15E1FEFFFF4D39D40F85000000004D8B55284D8B65304D8B4D184983FA01720741813AA8B800000F85000000004983FC01720841813C24B09700000F85000000004D8B4210488B3DC2FEFFFF4939F80F8500000000418139101100000F8500000000498B79084883FF017206813F900F00000F85000000004D8B4220498B7230498B5A08813B102001000F8500000000498B52284883FA017206813A601400000F85000000004983F8017207418138601400000F85000000004C8B5208498B50084939D20F85000000004D8B5424104983FA01720741813A40D202000F85000000004D39F20F85000000004883FE017206813E601400000F85000000004C8B76084C39F20F85000000004D8B7424084983FE01720741813E382300000F8500000000488B0C25F091F900488D91C8000000483B14251092F9000F87FD00000048891425F091F90048C701700B0100488D512048C702B8B5000048895A084C8B2D12FEFFFF4C896A104C8962184C8962204C8D622849C70424A81600004D8D6C243049C74500F08C000049C7450804000000498D752048C706080E000048C74608040000004C8B05D3FDFFFF4C8946104C8976184C8976204C89762849897510488B35C0FDFFFF498975184C8951104C8979184C8B3DB5FDFFFF4D897C242049895C24104D894C241849897C2408488951084D896C242848898D300100004C89A53801000049BBC05A1C5C4A7F000041FFE30F1F44000048C7442408FFFFFF0049BB28D1215C4A7F00004C895D204D8D9BC871FAFF41FFD3E968FDFFFF49BB88D2215C4A7F00004C895D204D8D9B6878FAFF41FFD3E9EEFEFFFFFF3557FCFFFF49BB38D1215C4A7F000041534D8D9BC86EFAFF41FFE3FF3543FCFFFF49BB48D1215C4A7F000041534D8D9BB86EFAFF41FFE3FF3537FCFFFF49BB58D1215C4A7F000041534D8D9BA86EFAFF41FFE3FF3523FCFFFF49BB68D1215C4A7F000041534D8D9B986EFAFF41FFE3FF350FFCFFFF49BB78D1215C4A7F000041534D8D9B886EFAFF41FFE3FF3503FCFFFF49BB88D1215C4A7F000041534D8D9B786EFAFF41FFE3FF35EFFBFFFF49BB98D1215C4A7F000041534D8D9B686EFAFF41FFE3FF35DBFBFFFF49BBA8D1215C4A7F000041534D8D9B586EFAFF41FFE3FF35C7FBFFFF49BBB8D1215C4A7F000041534D8D9B486EFAFF41FFE3FF35BBFBFFFF49BBC8D1215C4A7F000041534D8D9B386EFAFF41FFE3FF35A7FBFFFF49BBD8D1215C4A7F000041534D8D9B286EFAFF41FFE3FF3593FBFFFF49BBE8D1215C4A7F000041534D8D9B186EFAFF41FFE3FF357FFBFFFF49BBF8D1215C4A7F000041534D8D9B086EFAFF41FFE3FF356BFBFFFF49BB08D2215C4A7F000041534D8D9BF86DFAFF41FFE3FF3557FBFFFF49BB18D2215C4A7F000041534D8D9BE86DFAFF41FFE3FF3543FBFFFF49BB28D2215C4A7F000041534D8D9BD86DFAFF41FFE3FF352FFBFFFF49BB38D2215C4A7F000041534D8D9BC86DFAFF41FFE3FF351BFBFFFF49BB48D2215C4A7F000041534D8D9BB86DFAFF41FFE3FF3507FBFFFF49BB58D2215C4A7F000041534D8D9BA86DFAFF41FFE3FF35F3FAFFFF49BB68D2215C4A7F000041534D8D9B986DFAFF41FFE3FF35DFFAFFFF49BB78D2215C4A7F000041534D8D9B886DFAFF41FFE3
[3e4c22b501c6ce3] jit-backend-dump}
[3e4c22b501d4142] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d384 +0  2A000000
[3e4c22b501d5802] jit-backend-dump}
[3e4c22b501d9a96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d605 +0  2A000000
[3e4c22b501da8ce] jit-backend-dump}
[3e4c22b501de0d8] {jit-backend-addr
bridge out of Guard 0x5f24b60 has address 0x7f4a5c21d380 to 0x7f4a5c21d600
       gc table: 0x7f4a5c21d2a0
    jump target: 0x7f4a5c21d380
         resops: 0x7f4a5c21d38e
       failures: 0x7f4a5c21d600
            end: 0x7f4a5c21d88f
[3e4c22b501e0616] jit-backend-addr}
[3e4c22b501e3e57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d39e +0  A1020000
[3e4c22b501e4cf4] jit-backend-dump}
[3e4c22b501e8251] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d3ab +0  B0020000
[3e4c22b501e8fb9] jit-backend-dump}
[3e4c22b501ec35d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d3bb +0  BC020000
[3e4c22b501ed09d] jit-backend-dump}
[3e4c22b501f03f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d3d2 +0  C1020000
[3e4c22b501f113b] jit-backend-dump}
[3e4c22b501f442b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d3e0 +0  CF020000
[3e4c22b501f5137] jit-backend-dump}
[3e4c22b501f8446] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d3f4 +0  D7020000
[3e4c22b501f9164] jit-backend-dump}
[3e4c22b501fc7f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d413 +0  F0020000
[3e4c22b501fd530] jit-backend-dump}
[3e4c22b5020098f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d427 +0  F8020000
[3e4c22b502016bd] jit-backend-dump}
[3e4c22b50204972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d43b +0  00030000
[3e4c22b5020569d] jit-backend-dump}
[3e4c22b50208944] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d448 +0  0F030000
[3e4c22b5020964d] jit-backend-dump}
[3e4c22b5020c8b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d45e +0  15030000
[3e4c22b5020d5bf] jit-backend-dump}
[3e4c22b502108d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d476 +0  19030000
[3e4c22b502115f8] jit-backend-dump}
[3e4c22b50214938] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d48c +0  1F030000
[3e4c22b50215662] jit-backend-dump}
[3e4c22b50218a25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d49f +0  28030000
[3e4c22b5021972b] jit-backend-dump}
[3e4c22b5021c9f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d4b0 +0  33030000
[3e4c22b5021d721] jit-backend-dump}
[3e4c22b50220a33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d4c8 +0  37030000
[3e4c22b50221730] jit-backend-dump}
[3e4c22b50224a07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d4d1 +0  4A030000
[3e4c22b5022570d] jit-backend-dump}
[3e4c22b502289b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d4e3 +0  54030000
[3e4c22b502296a7] jit-backend-dump}
[3e4c22b5022c997] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d4f0 +0  63030000
[3e4c22b5022d694] jit-backend-dump}
[3e4c22b5023096e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d508 +0  67030000
[3e4c22b50231668] jit-backend-dump}
[3e4c22b50234bc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2085c3 +0  B94D0100
[3e4c22b502358fc] jit-backend-dump}
[3e4c22b50239e15] jit-backend}
[3e4c22b5023dce2] {jit-log-opt-bridge
# bridge out of Guard 0x5f24b60 with 100 ops
[p0, p1]
+246: guard_class(p1, 16500016, descr=<Guard0x2d3eec0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+262: guard_nonnull(p3, descr=<Guard0x2d17ec8>) [p0, p1]
+278: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+281: guard_true(i5, descr=<Guard0x2d17f10>) [p0, p1]
debug_merge_point(0, 0, 'lst')
+287: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+291: guard_nonnull_class(p6, 16616448, descr=<Guard0x2d3ef20>) [p0, p1]
+310: guard_class(p0, 16437896, descr=<Guard0x2d17f58>) [p0, p1]
+324: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+335: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2d17fa0>) [p0, p1]
+344: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+344: guard_not_invalidated(descr=<Guard0x2db2020>) [p0, p1]
+344: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+348: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+352: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)')
+356: guard_nonnull_class(p12, 16478824, descr=<Guard0x2d3ef80>) [p0, p1]
+375: guard_nonnull_class(p13, 16470384, descr=<Guard0x2d3efe0>) [p0, p1]
+395: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+406: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x2db2068>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+415: guard_class(p14, 16435920, descr=<Guard0x2db20b0>) [p0, p1]
+428: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+432: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x2d3f040>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+450: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+450: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+454: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+458: p25 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+462: guard_class(p25, 16505296, descr=<Guard0x2db20f8>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+474: p27 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+478: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x2d3f0a0>) [p0, p1]
+496: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x2d3f100>) [p0, p1]
+515: i30 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+519: i31 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+523: i32 = int_eq(i30, i31)
+526: guard_true(i32, descr=<Guard0x2db2140>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, 'rads1')
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+532: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+537: guard_nonnull_class(p33, 16616448, descr=<Guard0x2d3f160>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+556: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+559: guard_true(i36, descr=<Guard0x2db2188>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+565: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x2d3f1c0>) [p0, p1]
+583: i38 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+587: i39 = int_eq(i31, i38)
+590: guard_true(i39, descr=<Guard0x2db21d0>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+596: p40 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+601: guard_nonnull_class(p40, ConstClass(W_Symbol), descr=<Guard0x2d3f220>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+620: p42 = new_with_vtable(descr=<SizeDescr 32>)
+664: p43 = new_with_vtable(descr=<SizeDescr 40>)
+675: setfield_gc(p43, p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+686: setfield_gc(p43, ConstPtr(ptr44), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+690: setfield_gc(p43, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+694: setfield_gc(p43, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+698: p45 = new_with_vtable(descr=<SizeDescr 48>)
+710: p46 = new_with_vtable(descr=<SizeDescr 32>)
+723: setfield_gc(p46, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+731: p49 = new_array_clear(4, descr=<ArrayP 8>)
+757: setarrayitem_gc(p49, 0, ConstPtr(ptr51), descr=<ArrayP 8>)
+761: setarrayitem_gc(p49, 1, p40, descr=<ArrayP 8>)
+765: setarrayitem_gc(p49, 2, p40, descr=<ArrayP 8>)
+769: setarrayitem_gc(p49, 3, p40, descr=<ArrayP 8>)
+773: setfield_gc(p46, p49, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+784: setfield_gc(p46, ConstPtr(ptr55), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+788: setfield_gc(p42, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+792: setfield_gc(p42, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+803: setfield_gc(p45, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+808: setfield_gc(p45, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+813: setfield_gc(p45, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+818: setfield_gc(p45, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+823: setfield_gc(p42, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+827: setfield_gc(p45, p46, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+832: jump(p42, p45, descr=TargetToken(59469520))
+864: --end of the loop--
[3e4c22b5028d833] jit-log-opt-bridge}
[3e4c22b50c952ca] {jit-backend
[3e4c22b50cede7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21d9a
[3e4c22b50cf56c7] jit-backend-dump}
[3e4c22b50d027f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21da34 +0  28000000
[3e4c22b50d03ef6] jit-backend-dump}
[3e4c22b50d08235] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21dc15 +0  28000000
[3e4c22b50d09174] jit-backend-dump}
[3e4c22b50d0ca1a] {jit-backend-addr
bridge out of Guard 0x3d7f760 has address 0x7f4a5c21da30 to 0x7f4a5c21dc10
       gc table: 0x7f4a5c21d9a0
    jump target: 0x7f4a5c21da30
         resops: 0x7f4a5c21da3e
       failures: 0x7f4a5c21dc10
            end: 0x7f4a5c21dddb
[3e4c22b50d0f32e] jit-backend-addr}
[3e4c22b50d12c05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21da4e +0  01020000
[3e4c22b50d13ac4] jit-backend-dump}
[3e4c22b50d170bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21da65 +0  06020000
[3e4c22b50d17e0f] jit-backend-dump}
[3e4c22b50d1b203] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21da75 +0  12020000
[3e4c22b50d1bf3a] jit-backend-dump}
[3e4c22b50d1f29e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21da81 +0  22020000
[3e4c22b50d1ff8e] jit-backend-dump}
[3e4c22b50d23376] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21da98 +0  27020000
[3e4c22b50d2406d] jit-backend-dump}
[3e4c22b50d27363] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21daaa +0  31020000
[3e4c22b50d28066] jit-backend-dump}
[3e4c22b50d2b337] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21dabe +0  39020000
[3e4c22b50d2c052] jit-backend-dump}
[3e4c22b50d2f36d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21dade +0  35020000
[3e4c22b50d3007c] jit-backend-dump}
[3e4c22b50d3368a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21daf4 +0  57020000
[3e4c22b50d343dd] jit-backend-dump}
[3e4c22b50d377da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21db07 +0  60020000
[3e4c22b50d384ce] jit-backend-dump}
[3e4c22b50d3b7cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21db18 +0  6B020000
[3e4c22b50d3c4b4] jit-backend-dump}
[3e4c22b50d3f7d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21db2e +0  71020000
[3e4c22b50d404fd] jit-backend-dump}
[3e4c22b50d437e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21db44 +0  77020000
[3e4c22b50d44536] jit-backend-dump}
[3e4c22b50d47aba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ddede +0  4EFB0300
[3e4c22b50d487b4] jit-backend-dump}
[3e4c22b50d4cb7d] jit-backend}
[3e4c22b50d50b42] {jit-log-opt-bridge
# bridge out of Guard 0x3d7f760 with 59 ops
[p0, p1]
+166: guard_class(p1, 16500016, descr=<Guard0x2d3f280>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+182: guard_nonnull_class(p3, 16470384, descr=<Guard0x2d3f2e0>) [p0, p1]
+208: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+211: guard_false(i6, descr=<Guard0x2db2218>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))')
+217: guard_class(p0, 16437896, descr=<Guard0x2db2260>) [p0, p1]
+229: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+233: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x2d3f340>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))')
+252: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+256: guard_class(p10, 16479200, descr=<Guard0x2db22a8>) [p0, p1]
+270: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+281: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x2db22f0>) [p0, p1]
+290: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+294: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+298: p16 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+302: p17 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+306: p18 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+310: guard_class(p18, 16505296, descr=<Guard0x2db2338>) [p0, p1]
debug_merge_point(0, 0, '(= nc25081 nc35084)')
+322: guard_not_invalidated(descr=<Guard0x2db2380>) [p0, p1]
+322: p20 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+326: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x2d3f3a0>) [p0, p1]
+344: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x2d3f400>) [p0, p1]
+363: i23 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+367: i24 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+371: i25 = int_eq(i23, i24)
+374: guard_true(i25, descr=<Guard0x2db23c8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20))')
debug_merge_point(0, 0, 'loop45105')
debug_merge_point(0, 0, '(if if3 rads25099 (vector-ref radicals nc35084))')
debug_merge_point(0, 0, 'rads25099')
debug_merge_point(0, 0, '(loop35097 (cdr rads25099) lst5101)')
+380: p26 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+384: guard_nonnull_class(p26, 16616448, descr=<Guard0x2d3f460>) [p0, p1]
+402: p28 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+406: guard_nonnull_class(p28, 16470384, descr=<Guard0x2d3f4c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads25099) lst5101 (let ([loop45105 (lambda (rads35107 lst5109) (if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))))][if3 (= nc25081 nc35084)]) (let ([loop45105 loop45105][AppRand19 (if if3 rads25099 (vector-ref radicals nc35084))][AppRand20 (loop35097 (cdr rads25099) lst5101)]) (loop45105 AppRand19 AppRand20)))) from (loop35097 (cdr rads25099) lst5101)')
+424: p30 = new_with_vtable(descr=<SizeDescr 32>)
+475: p31 = new_with_vtable(descr=<SizeDescr 56>)
+486: p32 = new_with_vtable(descr=<SizeDescr 64>)
+497: setfield_gc(p32, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+515: setfield_gc(p32, ConstPtr(ptr33), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+519: setfield_gc(p32, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+523: setfield_gc(p32, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+527: setfield_gc(p32, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+531: setfield_gc(p32, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+535: setfield_gc(p32, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+539: setfield_gc(p30, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+550: setfield_gc(p31, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+554: setfield_gc(p30, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+558: setfield_gc(p30, p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+562: setfield_gc(p31, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+566: setfield_gc(p31, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+584: setfield_gc(p31, ConstPtr(ptr34), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+588: setfield_gc(p31, p32, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+592: setfield_gc(p31, p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+596: jump(p30, p31, descr=TargetToken(61027120))
+624: --end of the loop--
[3e4c22b50d841aa] jit-log-opt-bridge}
[3e4c22b54627018] {jit-backend
[3e4c22b546c5b7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21df
[3e4c22b546cf817] jit-backend-dump}
[3e4c22b546ef177] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e024 +0  28000000
[3e4c22b546f0687] jit-backend-dump}
[3e4c22b546f4cc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e2b5 +0  28000000
[3e4c22b546f5cc3] jit-backend-dump}
[3e4c22b546f94fb] {jit-backend-addr
bridge out of Guard 0x3be1040 has address 0x7f4a5c21e020 to 0x7f4a5c21e2b0
       gc table: 0x7f4a5c21df50
    jump target: 0x7f4a5c21e020
         resops: 0x7f4a5c21e02e
       failures: 0x7f4a5c21e2b0
            end: 0x7f4a5c21e523
[3e4c22b546fbfe9] jit-backend-addr}
[3e4c22b546ffb11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e03e +0  B1020000
[3e4c22b547009ae] jit-backend-dump}
[3e4c22b54704071] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e04b +0  C0020000
[3e4c22b54704e07] jit-backend-dump}
[3e4c22b547083b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e05b +0  CC020000
[3e4c22b547090d8] jit-backend-dump}
[3e4c22b5470c769] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e073 +0  D0020000
[3e4c22b5470d45d] jit-backend-dump}
[3e4c22b547109ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e080 +0  DF020000
[3e4c22b547116c0] jit-backend-dump}
[3e4c22b54714adb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e094 +0  E7020000
[3e4c22b5471578c] jit-backend-dump}
[3e4c22b54718ef7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e0b4 +0  FF020000
[3e4c22b54719bc3] jit-backend-dump}
[3e4c22b5471d113] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e0c7 +0  08030000
[3e4c22b5471dddc] jit-backend-dump}
[3e4c22b54721174] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e0dc +0  0F030000
[3e4c22b54721df7] jit-backend-dump}
[3e4c22b5472518c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e0e9 +0  1E030000
[3e4c22b54725e0b] jit-backend-dump}
[3e4c22b547291fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e100 +0  23030000
[3e4c22b54729e8e] jit-backend-dump}
[3e4c22b5472d254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e118 +0  27030000
[3e4c22b5472ded0] jit-backend-dump}
[3e4c22b54731253] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e12e +0  2D030000
[3e4c22b54731ebd] jit-backend-dump}
[3e4c22b54735255] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e146 +0  31030000
[3e4c22b54735ee7] jit-backend-dump}
[3e4c22b5473925d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e15c +0  37030000
[3e4c22b54739ed6] jit-backend-dump}
[3e4c22b5473d287] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e174 +0  3B030000
[3e4c22b5473defd] jit-backend-dump}
[3e4c22b54741298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e18a +0  41030000
[3e4c22b54741f12] jit-backend-dump}
[3e4c22b547452b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e1a1 +0  46030000
[3e4c22b54745f23] jit-backend-dump}
[3e4c22b547492ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e1bc +0  47030000
[3e4c22b54749f47] jit-backend-dump}
[3e4c22b5474d797] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1d4e5c +0  C0910400
[3e4c22b5474e438] jit-backend-dump}
[3e4c22b547530ae] jit-backend}
[3e4c22b54757278] {jit-log-opt-bridge
# bridge out of Guard 0x3be1040 with 67 ops
[p0, p1]
+230: guard_class(p1, 16500016, descr=<Guard0x2d3f520>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+246: guard_nonnull(p3, descr=<Guard0x2db2458>) [p0, p1]
+262: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+265: guard_true(i5, descr=<Guard0x2db24a0>) [p0, p1]
debug_merge_point(0, 0, 'lst5109')
+271: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+275: guard_nonnull_class(p6, 16470384, descr=<Guard0x2d3f580>) [p0, p1]
+295: guard_class(p0, 16437896, descr=<Guard0x2db24e8>) [p0, p1]
+308: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+319: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2db2530>) [p0, p1]
+328: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+328: guard_not_invalidated(descr=<Guard0x2db2578>) [p0, p1]
+328: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+332: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+336: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop5 AppRand17 AppRand18) from (loop45105 (cdr rads35107) lst5109)')
+340: guard_nonnull_class(p12, 16478448, descr=<Guard0x2d3f5e0>) [p0, p1]
+360: guard_nonnull_class(p13, 16470384, descr=<Guard0x2d3f880>) [p0, p1]
+379: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+391: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x2db25c0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 AppRand17 AppRand18)')
debug_merge_point(0, 0, '(let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))')
+400: guard_class(p14, 16437896, descr=<Guard0x2e79580>) [p0, p1]
+413: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+417: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x2d3f8e0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))')
+436: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+441: guard_nonnull_class(p22, 16470384, descr=<Guard0x2d3f940>) [p0, p1]
+460: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+464: guard_nonnull_class(p24, ConstClass(W_Symbol), descr=<Guard0x2d3f9a0>) [p0, p1]
+482: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+487: guard_nonnull_class(p26, 16470384, descr=<Guard0x2d3fa00>) [p0, p1]
+506: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+510: guard_nonnull_class(p28, ConstClass(W_Symbol), descr=<Guard0x2d3fa60>) [p0, p1]
+528: p30 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+533: guard_nonnull_class(p30, 16470384, descr=<Guard0x2d3fac0>) [p0, p1]
+552: p32 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+556: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x2d3fb20>) [p0, p1]
+574: p34 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+578: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x2d3fb80>) [p0, p1]
+597: p36 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop5 (cdr rads4) lst5115)')
+602: p37 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+606: guard_nonnull_class(p37, 16616448, descr=<Guard0x2d3fbe0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))) from (loop5 (cdr rads4) lst5115)')
+624: p39 = new_with_vtable(descr=<SizeDescr 32>)
+671: p40 = new_with_vtable(descr=<SizeDescr 48>)
+682: p41 = new_with_vtable(descr=<SizeDescr 32>)
+693: setfield_gc(p41, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+701: p44 = new_array_clear(5, descr=<ArrayP 8>)
+741: setarrayitem_gc(p44, 0, ConstPtr(ptr46), descr=<ArrayP 8>)
+745: setarrayitem_gc(p44, 1, p24, descr=<ArrayP 8>)
+749: setarrayitem_gc(p44, 2, p28, descr=<ArrayP 8>)
+753: setarrayitem_gc(p44, 3, p32, descr=<ArrayP 8>)
+757: setarrayitem_gc(p44, 4, p34, descr=<ArrayP 8>)
+761: setfield_gc(p41, p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+772: setfield_gc(p41, ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+776: setfield_gc(p39, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+787: setfield_gc(p39, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+798: setfield_gc(p40, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+809: setfield_gc(p40, p36, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+813: setfield_gc(p40, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+817: setfield_gc(p40, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+821: setfield_gc(p39, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+825: setfield_gc(p40, p41, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+829: jump(p39, p40, descr=TargetToken(59469840))
+864: --end of the loop--
[3e4c22b54798186] jit-log-opt-bridge}
[3e4c22b5646a6f1] {jit-backend
[3e4c22b565214bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e
[3e4c22b5652bde3] jit-backend-dump}
[3e4c22b56540130] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e854 +0  2A000000
[3e4c22b5654189c] jit-backend-dump}
[3e4c22b56546068] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ebe5 +0  2A000000
[3e4c22b56547068] jit-backend-dump}
[3e4c22b5654ab1c] {jit-backend-addr
bridge out of Guard 0x3a74380 has address 0x7f4a5c21e850 to 0x7f4a5c21ebe0
       gc table: 0x7f4a5c21e720
    jump target: 0x7f4a5c21e850
         resops: 0x7f4a5c21e85e
       failures: 0x7f4a5c21ebe0
            end: 0x7f4a5c21ef4f
[3e4c22b5654d351] jit-backend-addr}
[3e4c22b5655105c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e86e +0  B1030000
[3e4c22b56551eff] jit-backend-dump}
[3e4c22b56555582] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e885 +0  B6030000
[3e4c22b565562ed] jit-backend-dump}
[3e4c22b565597a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e89c +0  BB030000
[3e4c22b5655a4c0] jit-backend-dump}
[3e4c22b5655d858] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e8a8 +0  CB030000
[3e4c22b5655e564] jit-backend-dump}
[3e4c22b565618ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e8bc +0  D3030000
[3e4c22b565625da] jit-backend-dump}
[3e4c22b56565b3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e8dc +0  EB030000
[3e4c22b56566834] jit-backend-dump}
[3e4c22b56569c3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e8f0 +0  F3030000
[3e4c22b5656a96b] jit-backend-dump}
[3e4c22b5656dcc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e905 +0  FA030000
[3e4c22b5656e9ba] jit-backend-dump}
[3e4c22b56574d9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e912 +0  09040000
[3e4c22b56575bc6] jit-backend-dump}
[3e4c22b5657971f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e929 +0  0E040000
[3e4c22b5657a422] jit-backend-dump}
[3e4c22b5657d908] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e949 +0  0A040000
[3e4c22b5657e626] jit-backend-dump}
[3e4c22b56581b03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e960 +0  0F040000
[3e4c22b565827de] jit-backend-dump}
[3e4c22b56585b0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e972 +0  19040000
[3e4c22b565867ef] jit-backend-dump}
[3e4c22b56589ad6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e983 +0  24040000
[3e4c22b5658a7d9] jit-backend-dump}
[3e4c22b5658db1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e996 +0  2D040000
[3e4c22b5658e837] jit-backend-dump}
[3e4c22b56591cab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e9a0 +0  3F040000
[3e4c22b5659299c] jit-backend-dump}
[3e4c22b56595c2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e9ad +0  4E040000
[3e4c22b56596905] jit-backend-dump}
[3e4c22b56599bbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e9bf +0  58040000
[3e4c22b5659a8d0] jit-backend-dump}
[3e4c22b5659de5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e9d5 +0  5E040000
[3e4c22b5659eb58] jit-backend-dump}
[3e4c22b565a1f76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e9ed +0  62040000
[3e4c22b565a2c7f] jit-backend-dump}
[3e4c22b565a5f57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21e9fd +0  6E040000
[3e4c22b565a6ca3] jit-backend-dump}
[3e4c22b565a9fc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ea0f +0  78040000
[3e4c22b565aacd0] jit-backend-dump}
[3e4c22b565ae059] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ea1c +0  87040000
[3e4c22b565aed87] jit-backend-dump}
[3e4c22b565b1f91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ea34 +0  8B040000
[3e4c22b565b2cc5] jit-backend-dump}
[3e4c22b565b5f10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ea4b +0  90040000
[3e4c22b565b6c34] jit-backend-dump}
[3e4c22b565b9ebc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ea54 +0  A3040000
[3e4c22b565babe4] jit-backend-dump}
[3e4c22b565bdddc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ea6a +0  A9040000
[3e4c22b565beb13] jit-backend-dump}
[3e4c22b565c1d05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21ea81 +0  AE040000
[3e4c22b565c2a30] jit-backend-dump}
[3e4c22b565c5fb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1cbda6 +0  A62A0500
[3e4c22b565c6ceb] jit-backend-dump}
[3e4c22b565cb664] jit-backend}
[3e4c22b565cf697] {jit-log-opt-bridge
# bridge out of Guard 0x3a74380 with 140 ops
[p0, p1]
+326: guard_class(p1, 16500016, descr=<Guard0x2d3fc40>) [p0, p1]
+338: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+342: guard_nonnull_class(p3, ConstClass(W_Vector), descr=<Guard0x2d3fdc0>) [p0, p1]
+361: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+365: guard_nonnull_class(p5, 16470384, descr=<Guard0x2d3fee0>) [p0, p1]
+384: guard_class(p0, 16437896, descr=<Guard0x2e79658>) [p0, p1]
+396: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+407: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x2e796a0>) [p0, p1]
+416: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+416: guard_not_invalidated(descr=<Guard0x2e796e8>) [p0, p1]
+416: p11 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+420: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+424: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (cons AppRand1 AppRand2)')
+428: guard_nonnull_class(p11, 16478824, descr=<Guard0x2d3ffa0>) [p0, p1]
+448: guard_nonnull_class(p12, 16470384, descr=<Guard0x34ba020>) [p0, p1]
+468: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+480: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x2e79730>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+489: guard_class(p13, 16437896, descr=<Guard0x2e79778>) [p0, p1]
+502: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+506: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x34ba080>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+525: p21 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+530: p22 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+535: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+540: p24 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+545: guard_class(p24, 16505296, descr=<Guard0x2e797c0>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+557: p26 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+562: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x34ba0e0>) [p0, p1]
+580: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x34ba140>) [p0, p1]
+598: i29 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+602: i30 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+606: i31 = int_eq(i29, i30)
+609: guard_false(i31, descr=<Guard0x2e79808>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+615: guard_nonnull_class(p21, ConstClass(W_Vector), descr=<Guard0x34ba1a0>) [p0, p1]
+634: i34 = int_ge(i30, 0)
+638: guard_true(i34, descr=<Guard0x2e79850>) [p0, p1]
+644: i35 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+648: i36 = int_lt(i30, i35)
+651: guard_true(i36, descr=<Guard0x2e79898>) [p0, p1]
+657: p37 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+661: guard_class(p37, 16622984, descr=<Guard0x2e798e0>) [p0, p1]
+675: p39 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+679: p40 = getarrayitem_gc_r(p39, i30, descr=<ArrayP 8>)
+684: guard_class(p40, 16470384, descr=<Guard0x2e79928>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+697: p42 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+701: guard_nonnull_class(p42, 16616448, descr=<Guard0x34ba200>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+728: i45 = instance_ptr_eq(p42, ConstPtr(ptr44))
+731: guard_true(i45, descr=<Guard0x2e79970>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+737: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x34ba260>) [p0, p1]
+755: i47 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+759: i48 = int_eq(i30, i47)
+762: guard_true(i48, descr=<Guard0x2e799b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+768: p49 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+772: guard_nonnull_class(p49, 16470384, descr=<Guard0x34ba380>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+792: p51 = getfield_gc_r(p49, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+797: guard_nonnull_class(p51, 16616448, descr=<Guard0x34ba4a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+815: i54 = instance_ptr_eq(p51, ConstPtr(ptr53))
+818: guard_true(i54, descr=<Guard0x2e79a00>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+824: p55 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+828: guard_nonnull_class(p55, ConstClass(W_Vector), descr=<Guard0x34ba500>) [p0, p1]
+846: p57 = getfield_gc_r(p49, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+851: guard_nonnull_class(p57, ConstClass(W_Vector), descr=<Guard0x34ba560>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+869: p59 = new_with_vtable(descr=<SizeDescr 32>)
+916: p60 = new_with_vtable(descr=<SizeDescr 40>)
+927: setfield_gc(p60, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+945: setfield_gc(p60, ConstPtr(ptr61), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+949: setfield_gc(p60, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+953: setfield_gc(p60, p49, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+957: p62 = new_with_vtable(descr=<SizeDescr 24>)
+969: setfield_gc(p62, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+974: setfield_gc(p62, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+979: p63 = new_with_vtable(descr=<SizeDescr 48>)
+991: p64 = new_with_vtable(descr=<SizeDescr 56>)
+1002: setfield_gc(p64, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1006: setfield_gc(p64, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1010: setfield_gc(p64, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1021: setfield_gc(p64, ConstPtr(ptr65), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1025: p66 = new_with_vtable(descr=<SizeDescr 40>)
+1036: setfield_gc(p66, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1040: setfield_gc(p66, ConstPtr(ptr67), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1044: setfield_gc(p66, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1048: setfield_gc(p66, p40, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1052: setfield_gc(p64, p66, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1056: setfield_gc(p64, p40, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1060: p68 = new_with_vtable(descr=<SizeDescr 32>)
+1071: setfield_gc(p68, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1079: p71 = new_array_clear(4, descr=<ArrayP 8>)
+1105: setarrayitem_gc(p71, 0, ConstPtr(ptr73), descr=<ArrayP 8>)
+1109: setarrayitem_gc(p71, 1, p55, descr=<ArrayP 8>)
+1113: setarrayitem_gc(p71, 2, p57, descr=<ArrayP 8>)
+1117: setarrayitem_gc(p71, 3, p57, descr=<ArrayP 8>)
+1121: setfield_gc(p68, p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1132: setfield_gc(p68, ConstPtr(ptr77), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1136: setfield_gc(p59, p51, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1147: setfield_gc(p59, p62, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1158: setfield_gc(p63, ConstPtr(ptr78), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1162: setfield_gc(p63, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1166: setfield_gc(p63, p64, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1170: setfield_gc(p63, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1174: setfield_gc(p59, p60, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1178: setfield_gc(p63, p68, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1182: jump(p59, p63, descr=TargetToken(59469520))
+1216: --end of the loop--
[3e4c22b5663625c] jit-log-opt-bridge}
[3e4c22b5948682e] {jit-backend
[3e4c22b595285de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f
[3e4c22b59533283] jit-backend-dump}
[3e4c22b59549f07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f274 +0  2A000000
[3e4c22b5954b590] jit-backend-dump}
[3e4c22b5954f814] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f585 +0  2A000000
[3e4c22b595506ae] jit-backend-dump}
[3e4c22b59554089] {jit-backend-addr
bridge out of Guard 0x40d9280 has address 0x7f4a5c21f270 to 0x7f4a5c21f580
       gc table: 0x7f4a5c21f150
    jump target: 0x7f4a5c21f270
         resops: 0x7f4a5c21f27e
       failures: 0x7f4a5c21f580
            end: 0x7f4a5c21f8ef
[3e4c22b59556afa] jit-backend-addr}
[3e4c22b5955a3b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f28e +0  31030000
[3e4c22b5955b2b7] jit-backend-dump}
[3e4c22b5955e930] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f29b +0  40030000
[3e4c22b5955f686] jit-backend-dump}
[3e4c22b59562a8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f2ab +0  4C030000
[3e4c22b595637cf] jit-backend-dump}
[3e4c22b59566b3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f2c2 +0  51030000
[3e4c22b5956784c] jit-backend-dump}
[3e4c22b5956abc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f2d0 +0  5F030000
[3e4c22b5956b8f0] jit-backend-dump}
[3e4c22b5956ec63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f2e4 +0  67030000
[3e4c22b5956f97c] jit-backend-dump}
[3e4c22b59573029] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f303 +0  80030000
[3e4c22b59573d3b] jit-backend-dump}
[3e4c22b595771af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f317 +0  88030000
[3e4c22b59577ebf] jit-backend-dump}
[3e4c22b5957b269] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f32b +0  90030000
[3e4c22b5957bfa9] jit-backend-dump}
[3e4c22b5957f2d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f338 +0  9F030000
[3e4c22b5958000a] jit-backend-dump}
[3e4c22b5958338a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f34e +0  A5030000
[3e4c22b59584090] jit-backend-dump}
[3e4c22b5958739b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f36a +0  A5030000
[3e4c22b5958809e] jit-backend-dump}
[3e4c22b5958b3d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f380 +0  AB030000
[3e4c22b5958c0f9] jit-backend-dump}
[3e4c22b5958f454] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f392 +0  B5030000
[3e4c22b59590185] jit-backend-dump}
[3e4c22b595934d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f3a3 +0  C0030000
[3e4c22b595941fb] jit-backend-dump}
[3e4c22b5959754d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f3b6 +0  C9030000
[3e4c22b5959825c] jit-backend-dump}
[3e4c22b5959b5ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f3c0 +0  DB030000
[3e4c22b5959c2df] jit-backend-dump}
[3e4c22b5959f621] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f3cd +0  EA030000
[3e4c22b595a0321] jit-backend-dump}
[3e4c22b595a365a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f3de +0  F5030000
[3e4c22b595a435d] jit-backend-dump}
[3e4c22b595a773c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f3f4 +0  FB030000
[3e4c22b595a8445] jit-backend-dump}
[3e4c22b595ab77b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f40c +0  FF030000
[3e4c22b595ac47e] jit-backend-dump}
[3e4c22b595af783] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f415 +0  12040000
[3e4c22b595b0480] jit-backend-dump}
[3e4c22b595b37b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f427 +0  1C040000
[3e4c22b595b44b9] jit-backend-dump}
[3e4c22b595b780e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f434 +0  2B040000
[3e4c22b595b8526] jit-backend-dump}
[3e4c22b595bb89d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f44b +0  30040000
[3e4c22b595bc5a3] jit-backend-dump}
[3e4c22b595bf8c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f454 +0  43040000
[3e4c22b595c05e2] jit-backend-dump}
[3e4c22b595c3918] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f46c +0  47040000
[3e4c22b595c462b] jit-backend-dump}
[3e4c22b595c7976] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21f482 +0  4D040000
[3e4c22b595c8695] jit-backend-dump}
[3e4c22b595cbe5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1ec0e3 +0  89310300
[3e4c22b595ccb77] jit-backend-dump}
[3e4c22b595d156d] jit-backend}
[3e4c22b595d55c8] {jit-log-opt-bridge
# bridge out of Guard 0x40d9280 with 117 ops
[p0, p1]
+310: guard_class(p1, 16500016, descr=<Guard0x34ba5c0>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+326: guard_nonnull(p3, descr=<Guard0x2e79f10>) [p0, p1]
+342: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+345: guard_true(i5, descr=<Guard0x2e79f58>) [p0, p1]
debug_merge_point(0, 0, 'lst')
+351: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+355: guard_nonnull_class(p6, 16616448, descr=<Guard0x34ba620>) [p0, p1]
+374: guard_class(p0, 16437896, descr=<Guard0x2e79fa0>) [p0, p1]
+388: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+399: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2ec0020>) [p0, p1]
+408: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+408: guard_not_invalidated(descr=<Guard0x2ec00b0>) [p0, p1]
+408: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+412: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+416: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop2 AppRand7 AppRand8) from (loop1 (cdr ps) lst)')
+420: guard_nonnull_class(p12, 16478824, descr=<Guard0x34ba680>) [p0, p1]
+439: guard_nonnull_class(p13, 16470384, descr=<Guard0x34ba6e0>) [p0, p1]
+459: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+470: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x2ec0140>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 AppRand7 AppRand8)')
debug_merge_point(0, 0, '(let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))')
+479: guard_class(p14, 16437896, descr=<Guard0x2ec01d0>) [p0, p1]
+492: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+496: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x34ba740>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))')
+514: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+518: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+522: p24 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+526: p25 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+530: guard_class(p25, 16505296, descr=<Guard0x2ec0260>) [p0, p1]
debug_merge_point(0, 0, '(= nc1 nc2)')
+542: p27 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+546: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x34ba860>) [p0, p1]
+564: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x34baa40>) [p0, p1]
+582: i30 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+586: i31 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+590: i32 = int_eq(i30, i31)
+593: guard_false(i32, descr=<Guard0x2ec02a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6))')
debug_merge_point(0, 0, 'loop3')
debug_merge_point(0, 0, '(if if1 rads1 (vector-ref radicals nc2))')
debug_merge_point(0, 0, '(vector-ref radicals nc2)')
+599: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x34baaa0>) [p0, p1]
+618: i35 = int_ge(i31, 0)
+622: guard_true(i35, descr=<Guard0x2ec02f0>) [p0, p1]
+628: i36 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+632: i37 = int_lt(i31, i36)
+635: guard_true(i37, descr=<Guard0x2ec0338>) [p0, p1]
+641: p38 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+645: guard_class(p38, 16622984, descr=<Guard0x2ec0380>) [p0, p1]
+658: p40 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+662: p41 = getarrayitem_gc_r(p40, i31, descr=<ArrayP 8>)
+667: guard_class(p41, 16470384, descr=<Guard0x2ec03c8>) [p0, p1]
debug_merge_point(0, 0, '(loop2 (cdr rads1) lst4984)')
+680: p43 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+685: guard_nonnull_class(p43, 16616448, descr=<Guard0x34bab00>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads1) lst4984 (let ([loop3 (lambda (rads2 lst4990) (if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))))][if1 (= nc1 nc2)]) (let ([loop3 loop3][AppRand5 (if if1 rads1 (vector-ref radicals nc2))][AppRand6 (loop2 (cdr rads1) lst4984)]) (loop3 AppRand5 AppRand6)))) from (loop2 (cdr rads1) lst4984)')
+704: i46 = instance_ptr_eq(p43, ConstPtr(ptr45))
+707: guard_true(i46, descr=<Guard0x2ec0410>) [p0, p1]
debug_merge_point(0, 0, 'lst4984')
debug_merge_point(0, 0, '(loop3 AppRand5 AppRand6) from (loop2 (cdr rads1) lst4984)')
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 AppRand5 AppRand6)')
debug_merge_point(0, 0, '(let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))')
debug_merge_point(0, 0, '(lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))')
debug_merge_point(0, 0, '(= nc2 nc3)')
+713: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x34bab60>) [p0, p1]
+731: i48 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+735: i49 = int_eq(i31, i48)
+738: guard_true(i49, descr=<Guard0x2ec0458>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4))')
debug_merge_point(0, 0, 'loop4')
debug_merge_point(0, 0, '(if if0 rads2 (vector-ref radicals nc3))')
debug_merge_point(0, 0, 'rads2')
debug_merge_point(0, 0, '(loop3 (cdr rads2) lst4990)')
+744: p50 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+748: guard_nonnull_class(p50, 16616448, descr=<Guard0x34babc0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads2) lst4990 (let ([loop4 (lambda (rads3 lst4996) (if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))))][if0 (= nc2 nc3)]) (let ([loop4 loop4][AppRand3 (if if0 rads2 (vector-ref radicals nc3))][AppRand4 (loop3 (cdr rads2) lst4990)]) (loop4 AppRand3 AppRand4)))) from (loop3 (cdr rads2) lst4990)')
+767: i53 = instance_ptr_eq(p50, ConstPtr(ptr52))
+770: guard_true(i53, descr=<Guard0x2ec04a0>) [p0, p1]
debug_merge_point(0, 0, 'lst4990')
debug_merge_point(0, 0, '(loop4 AppRand3 AppRand4) from (loop3 (cdr rads2) lst4990)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 AppRand3 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+776: p54 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+781: guard_nonnull_class(p54, ConstClass(W_Vector), descr=<Guard0x34bac80>) [p0, p1]
+800: p56 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+804: guard_nonnull_class(p56, ConstClass(W_Vector), descr=<Guard0x34bace0>) [p0, p1]
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+822: p58 = new_with_vtable(descr=<SizeDescr 32>)
+869: p59 = new_with_vtable(descr=<SizeDescr 40>)
+880: setfield_gc(p59, p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+891: setfield_gc(p59, ConstPtr(ptr60), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+895: setfield_gc(p59, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+899: setfield_gc(p59, p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+903: p61 = new_with_vtable(descr=<SizeDescr 48>)
+914: p62 = new_with_vtable(descr=<SizeDescr 32>)
+926: setfield_gc(p62, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+935: p65 = new_array_clear(4, descr=<ArrayP 8>)
+962: setarrayitem_gc(p65, 0, ConstPtr(ptr67), descr=<ArrayP 8>)
+966: setarrayitem_gc(p65, 1, p54, descr=<ArrayP 8>)
+970: setarrayitem_gc(p65, 2, p56, descr=<ArrayP 8>)
+974: setarrayitem_gc(p65, 3, p56, descr=<ArrayP 8>)
+978: setfield_gc(p62, p65, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+990: setfield_gc(p62, ConstPtr(ptr71), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+995: setfield_gc(p58, p50, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+999: setfield_gc(p58, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1010: setfield_gc(p61, ConstPtr(ptr72), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1014: setfield_gc(p61, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1018: setfield_gc(p61, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1022: setfield_gc(p61, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1026: setfield_gc(p58, p59, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1030: setfield_gc(p61, p62, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1034: jump(p58, p61, descr=TargetToken(59469520))
+1072: --end of the loop--
[3e4c22b596375d2] jit-log-opt-bridge}
[3e4c22b62afd578] {jit-backend
[3e4c22b62b9d347] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fa
[3e4c22b62ba8397] jit-backend-dump}
[3e4c22b62c76394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fab4 +0  2A000000
[3e4c22b62c77ce9] jit-backend-dump}
[3e4c22b62c7cde6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fcc5 +0  2A000000
[3e4c22b62c7ddbe] jit-backend-dump}
[3e4c22b62c81184] {jit-backend-addr
bridge out of Guard 0x382fb80 has address 0x7f4a5c21fab0 to 0x7f4a5c21fcc0
       gc table: 0x7f4a5c21fa10
    jump target: 0x7f4a5c21fab0
         resops: 0x7f4a5c21fabe
       failures: 0x7f4a5c21fcc0
            end: 0x7f4a5c21fea7
[3e4c22b62c83eeb] jit-backend-addr}
[3e4c22b62c87325] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21face +0  31020000
[3e4c22b62c88173] jit-backend-dump}
[3e4c22b62c8b18a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fae5 +0  36020000
[3e4c22b62c8be6c] jit-backend-dump}
[3e4c22b62c8ed3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21faf5 +0  42020000
[3e4c22b62c8fa2a] jit-backend-dump}
[3e4c22b62c9283d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fb01 +0  52020000
[3e4c22b62c9352a] jit-backend-dump}
[3e4c22b62c96337] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fb18 +0  57020000
[3e4c22b62c9701c] jit-backend-dump}
[3e4c22b62c9a1e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fb2a +0  7D020000
[3e4c22b62c9af3e] jit-backend-dump}
[3e4c22b62c9df5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fb3e +0  85020000
[3e4c22b62c9ec90] jit-backend-dump}
[3e4c22b62ca1ad4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fb55 +0  8A020000
[3e4c22b62ca27ce] jit-backend-dump}
[3e4c22b62ca55bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fb6d +0  8E020000
[3e4c22b62ca62bc] jit-backend-dump}
[3e4c22b62ca9095] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fb84 +0  93020000
[3e4c22b62ca9d79] jit-backend-dump}
[3e4c22b62cacb5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fb9b +0  98020000
[3e4c22b62cad836] jit-backend-dump}
[3e4c22b62cb06a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fbb2 +0  9D020000
[3e4c22b62cb1380] jit-backend-dump}
[3e4c22b62cb419c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fbcc +0  9F020000
[3e4c22b62cb4e99] jit-backend-dump}
[3e4c22b62cb7c6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fbe3 +0  A4020000
[3e4c22b62cb8956] jit-backend-dump}
[3e4c22b62cbbc3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1c5bd8 +0  D49E0500
[3e4c22b62cbc952] jit-backend-dump}
[3e4c22b62cc1305] jit-backend}
[3e4c22b62cc5070] {jit-log-opt-bridge
# bridge out of Guard 0x382fb80 with 52 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x77aa920>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16470384, descr=<Guard0x77aa980>) [p0, p1]
+224: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+227: guard_false(i6, descr=<Guard0x77a61d0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))')
+233: guard_class(p0, 16437352, descr=<Guard0x77a69f8>) [p0, p1]
+245: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+249: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x77aa9e0>) [p0, p1]
debug_merge_point(0, 0, '(vector 'C (car rads1) (car rads2) (car rads3))')
+268: guard_not_invalidated(descr=<Guard0x77a6a40>) [p0, p1]
+268: p10 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+272: guard_class(p10, 16478072, descr=<Guard0x77a6a88>) [p0, p1]
+286: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+297: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x77a6ad0>) [p0, p1]
+306: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+310: guard_nonnull_class(p14, 16470384, descr=<Guard0x77aaa40>) [p0, p1]
+329: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+333: guard_nonnull_class(p16, ConstClass(W_Symbol), descr=<Guard0x77aaaa0>) [p0, p1]
+353: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+357: guard_nonnull_class(p18, 16470384, descr=<Guard0x77aab00>) [p0, p1]
+376: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+380: guard_nonnull_class(p20, ConstClass(W_Symbol), descr=<Guard0x77aab60>) [p0, p1]
+399: p22 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+403: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x77aabc0>) [p0, p1]
+422: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(loop4 (cdr rads3) lst4996)')
+426: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+430: guard_nonnull_class(p25, 16616448, descr=<Guard0x77aac20>) [p0, p1]
+448: p27 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+452: guard_nonnull_class(p27, 16470384, descr=<Guard0x77aac80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads3) lst4996 (let ([AppRand1 (vector 'C (car rads1) (car rads2) (car rads3))][AppRand2 (loop4 (cdr rads3) lst4996)]) (cons AppRand1 AppRand2))) from (loop4 (cdr rads3) lst4996)')
+471: p29 = new_with_vtable(descr=<SizeDescr 32>)
+518: p30 = new_with_vtable(descr=<SizeDescr 48>)
+529: p31 = new_with_vtable(descr=<SizeDescr 32>)
+540: setfield_gc(p31, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+548: p34 = new_array_clear(4, descr=<ArrayP 8>)
+581: setarrayitem_gc(p34, 0, ConstPtr(ptr36), descr=<ArrayP 8>)
+585: setarrayitem_gc(p34, 1, p16, descr=<ArrayP 8>)
+589: setarrayitem_gc(p34, 2, p20, descr=<ArrayP 8>)
+593: setarrayitem_gc(p34, 3, p22, descr=<ArrayP 8>)
+597: setfield_gc(p31, p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: setfield_gc(p31, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+612: setfield_gc(p29, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+623: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+627: setfield_gc(p29, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+631: setfield_gc(p29, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+635: setfield_gc(p30, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+650: setfield_gc(p30, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+654: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+658: jump(p29, p30, descr=TargetToken(59469520))
+688: --end of the loop--
[3e4c22b62d0103d] jit-log-opt-bridge}
[3e4c22b6dd89c07] {jit-backend
[3e4c22b6de20031] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c21fff
[3e4c22b6de291f6] jit-backend-dump}
[3e4c22b6de4516c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2200a4 +0  28000000
[3e4c22b6de46704] jit-backend-dump}
[3e4c22b6de4a792] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2202a5 +0  28000000
[3e4c22b6de4b758] jit-backend-dump}
[3e4c22b6de4eade] {jit-backend-addr
bridge out of Guard 0x3dfe980 has address 0x7f4a5c2200a0 to 0x7f4a5c2202a0
       gc table: 0x7f4a5c21fff0
    jump target: 0x7f4a5c2200a0
         resops: 0x7f4a5c2200ae
       failures: 0x7f4a5c2202a0
            end: 0x7f4a5c2204bf
[3e4c22b6de51518] jit-backend-addr}
[3e4c22b6de54b0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2200be +0  21020000
[3e4c22b6de55a1e] jit-backend-dump}
[3e4c22b6de58b46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2200cb +0  30020000
[3e4c22b6de5989c] jit-backend-dump}
[3e4c22b6de5c9d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2200db +0  3C020000
[3e4c22b6de5d707] jit-backend-dump}
[3e4c22b6de606f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2200f2 +0  41020000
[3e4c22b6de61428] jit-backend-dump}
[3e4c22b6de64418] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c220106 +0  49020000
[3e4c22b6de6517d] jit-backend-dump}
[3e4c22b6de680e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c22011a +0  51020000
[3e4c22b6de68e2d] jit-backend-dump}
[3e4c22b6de6c0d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c22013a +0  69020000
[3e4c22b6de6ce14] jit-backend-dump}
[3e4c22b6de6fdc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c22014e +0  71020000
[3e4c22b6de70aeb] jit-backend-dump}
[3e4c22b6de73a42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c220163 +0  78020000
[3e4c22b6de7474e] jit-backend-dump}
[3e4c22b6de77616] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c220170 +0  87020000
[3e4c22b6de78310] jit-backend-dump}
[3e4c22b6de7b236] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c220187 +0  8C020000
[3e4c22b6de7bf45] jit-backend-dump}
[3e4c22b6de7edd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2201a2 +0  8D020000
[3e4c22b6de7fade] jit-backend-dump}
[3e4c22b6de829ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2201b9 +0  92020000
[3e4c22b6de836fb] jit-backend-dump}
[3e4c22b6de86637] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2201d0 +0  97020000
[3e4c22b6de8732e] jit-backend-dump}
[3e4c22b6de8a30e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2201e1 +0  A2020000
[3e4c22b6de8b01e] jit-backend-dump}
[3e4c22b6de8deab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c2201f7 +0  A8020000
[3e4c22b6de8eba5] jit-backend-dump}
[3e4c22b6de91f00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4a5c1e32b2 +0  EACD0300
[3e4c22b6de92c12] jit-backend-dump}
[3e4c22b6de9740c] jit-backend}
[3e4c22b6de9af16] {jit-log-opt-bridge
# bridge out of Guard 0x3dfe980 with 66 ops
[p0, p1]
+198: guard_class(p1, 16500016, descr=<Guard0x77aace0>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+214: guard_nonnull(p3, descr=<Guard0x77a6ba8>) [p0, p1]
+230: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+233: guard_true(i5, descr=<Guard0x77a6bf0>) [p0, p1]
debug_merge_point(0, 0, 'lst5101')
+239: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+243: guard_nonnull_class(p6, 16616448, descr=<Guard0x77aad40>) [p0, p1]
+262: guard_class(p0, 16437896, descr=<Guard0x77a6c38>) [p0, p1]
+282: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+293: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x77a6c80>) [p0, p1]
+302: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+302: guard_not_invalidated(descr=<Guard0x77a6cc8>) [p0, p1]
+302: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+306: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+310: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop45105 AppRand19 AppRand20) from (loop35097 (cdr rads25099) lst5101)')
+314: guard_nonnull_class(p12, 16479200, descr=<Guard0x77aada0>) [p0, p1]
+334: guard_nonnull_class(p13, 16470384, descr=<Guard0x77aae00>) [p0, p1]
+354: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+366: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x77a6d10>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 AppRand19 AppRand20)')
debug_merge_point(0, 0, '(let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))')
+375: guard_class(p14, 16437896, descr=<Guard0x77a6d58>) [p0, p1]
+388: p20 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+392: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x77aae60>) [p0, p1]
debug_merge_point(0, 0, '(lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))')
+411: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+416: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+421: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+426: guard_class(p24, 16505296, descr=<Guard0x77a6da0>) [p0, p1]
debug_merge_point(0, 0, '(= nc35084 nc4)')
+438: p26 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+443: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x77aaec0>) [p0, p1]
+461: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+466: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x77aaf20>) [p0, p1]
+484: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+488: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+492: i32 = int_eq(i30, i31)
+495: guard_true(i32, descr=<Guard0x77a6de8>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18))')
debug_merge_point(0, 0, 'loop5')
debug_merge_point(0, 0, '(if if2 rads35107 (vector-ref radicals nc4))')
debug_merge_point(0, 0, 'rads35107')
debug_merge_point(0, 0, '(loop45105 (cdr rads35107) lst5109)')
+501: p33 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+505: guard_nonnull_class(p33, 16616448, descr=<Guard0x77aaf80>) [p0, p1]
debug_merge_point(0, 0, '(if (null? rads35107) lst5109 (let ([loop5 (lambda (rads4 lst5115) (if (null? rads4) lst5115 (let ([AppRand15 (vector 'CCP (car rads15091) (car rads25099) (car rads35107) (car rads4))][AppRand16 (loop5 (cdr rads4) lst5115)]) (cons AppRand15 AppRand16))))][if2 (= nc35084 nc4)]) (let ([loop5 loop5][AppRand17 (if if2 rads35107 (vector-ref radicals nc4))][AppRand18 (loop45105 (cdr rads35107) lst5109)]) (loop5 AppRand17 AppRand18)))) from (loop45105 (cdr rads35107) lst5109)')
+523: p35 = new_with_vtable(descr=<SizeDescr 32>)
+567: p36 = new_with_vtable(descr=<SizeDescr 56>)
+578: p37 = new_with_vtable(descr=<SizeDescr 48>)
+589: setfield_gc(p37, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+600: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+604: setfield_gc(p37, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+608: setfield_gc(p37, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+612: setfield_gc(p37, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+616: setfield_gc(p35, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+620: setfield_gc(p35, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+631: setfield_gc(p36, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+635: setfield_gc(p36, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: setfield_gc(p36, p37, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+643: setfield_gc(p36, p13, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+647: setfield_gc(p36, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+651: setfield_gc(p36, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+655: setfield_gc(p35, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+659: jump(p35, p36, descr=TargetToken(59470000))
+688: --end of the loop--
[3e4c22b6dedba02] jit-log-opt-bridge}
[3e4c23dc7fcd9d7] {jit-summary
Tracing:      	195	0.171423
Backend:      	195	0.174660
TOTAL:      		31.145565
ops:             	279752
recorded ops:    	44664
  calls:         	42
guards:          	16285
opt ops:         	18786
opt guards:      	5942
opt guards shared:	3893
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	265
nvholes:         	1
nvreused:        	2
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	34
Total # of bridges:	161
Freed # of loops:	0
Freed # of bridges:	0
[3e4c23dc7fe2d2e] jit-summary}
[3e4c23dc7fed6a5] {jit-backend-counts
entry 1:864
TargetToken(59469520):2019833
TargetToken(59469600):1199966
entry 2:49
TargetToken(59469680):49
TargetToken(59469760):482379855
entry 3:646
TargetToken(59469840):332839879
TargetToken(59469920):165039831
bridge 59801632:15499910
bridge 58916576:14779924
entry 6:598
TargetToken(59470000):9220028
TargetToken(59470080):6279810
bridge 59802880:6839896
bridge 59707576:7259882
bridge 59805376:1079963
entry 10:258
bridge 59801920:310019955
bridge 59803840:6899986
bridge 59859072:5719940
bridge 59809504:78319993
bridge 59859936:1719991
bridge 59863008:76559911
entry 17:66
TargetToken(61023440):19993
TargetToken(61023520):2519786
bridge 58915040:679898
bridge 59804608:1959889
bridge 61318400:819933
entry 21:218
entry 22:191
bridge 59706856:1839838
bridge 59808160:62
entry 25:233
bridge 58915520:899891
bridge 61323776:75
bridge 59706640:679927
bridge 61295744:86
entry 30:146
bridge 62279072:10
bridge 61324256:29
bridge 58915328:339928
bridge 61320512:4
bridge 61300496:7
entry 38:14
bridge 61317824:559915
entry 40:812
TargetToken(61027120):1059994
TargetToken(61027200):899605
bridge 61294232:439898
bridge 62783808:139963
entry 43:324
entry 44:260
TargetToken(61027280):20469
TargetToken(61027360):639359
entry 45:291
TargetToken(61027440):739854
TargetToken(61027520):59972
bridge 61321184:7
bridge 62788704:80
bridge 61297112:759833
bridge 61299704:599860
bridge 63922976:659839
entry 51:184
TargetToken(61029280):160078
TargetToken(61029360):459752
bridge 59865888:419888
entry 53:248
TargetToken(61029440):279916
TargetToken(61029520):339906
entry 54:682
entry 55:561
bridge 62275808:699795
bridge 59802496:479868
bridge 62324064:260007
bridge 61297040:13
bridge 61297472:339906
bridge 64486080:0
entry 62:372
bridge 62790528:82
entry 64:275
bridge 64646080:188
bridge 59806912:599808
entry 67:319
bridge 62788032:99966
entry 69:105
bridge 64481376:253
bridge 62788224:799705
bridge 64628880:37
bridge 59866176:159921
bridge 64434936:389
bridge 64644064:189
bridge 62280128:47
bridge 64634352:519763
entry 78:119
bridge 64482240:41
entry 80:59
TargetToken(64566704):39981
TargetToken(64566784):619705
bridge 66479072:179912
bridge 62324424:479731
bridge 64482528:30
entry 84:526
bridge 64432056:219884
bridge 63883264:161
bridge 65006144:79955
entry 88:103
bridge 63929984:159905
bridge 64431480:179892
bridge 63925856:19988
bridge 63888016:159905
bridge 64430400:159903
bridge 64479264:19987
entry 95:254
bridge 62279648:5
bridge 63926624:119921
bridge 63927392:19985
bridge 62788992:259769
bridge 63884272:319639
bridge 67997088:36
bridge 63887656:119913
bridge 64431192:119906
bridge 66485312:174
bridge 73471840:10
bridge 63928736:99916
bridge 62791392:24
entry 108:141
entry 109:174
bridge 73468672:99916
bridge 65086696:119887
bridge 59803072:19981
bridge 65009216:38
bridge 63928064:219793
bridge 63883768:36
bridge 68000640:59942
bridge 63923648:19979
bridge 64480512:29
bridge 64435296:46
bridge 73466752:42
entry 121:259
bridge 67994688:19976
bridge 66551136:79899
bridge 66483584:219734
bridge 64436304:47
bridge 63882400:0
bridge 58916096:79895
bridge 64630608:43
bridge 65088568:178
bridge 63884416:79882
bridge 63923360:59917
bridge 74900280:79885
bridge 66546888:88
bridge 70000816:59911
bridge 65004032:43
bridge 64479552:99843
bridge 63883480:19974
bridge 64631832:54
bridge 61294304:39929
bridge 86041856:49
bridge 75137776:59892
bridge 64629888:3
bridge 66481664:19963
bridge 64633704:27
bridge 66546456:68
bridge 66547824:39926
entry 151:5
bridge 59866752:19960
bridge 74905392:10
bridge 66550992:39919
bridge 70008664:39918
bridge 86044928:9
bridge 63884704:79831
bridge 78114880:19955
bridge 67994784:19952
bridge 78104000:2
bridge 78106448:39898
bridge 63882760:1
bridge 94145472:19948
bridge 64436160:1
entry 165:17
bridge 75152640:10
bridge 59707072:19941
bridge 59705632:19941
bridge 66482336:19940
bridge 63887872:19939
bridge 64628664:4
bridge 78103640:31
entry 173:9
bridge 64431840:19936
bridge 63885568:19936
bridge 64430256:19936
bridge 86042048:47
bridge 64634496:19934
bridge 66546744:5
bridge 66548256:19933
bridge 65087128:19932
bridge 63881680:19931
bridge 62790336:19929
bridge 74903520:19929
bridge 74901144:19928
bridge 75137632:19927
bridge 75137416:19927
bridge 78103856:46
bridge 61317344:19921
bridge 86073376:19918
bridge 86076544:5
bridge 68001408:19914
bridge 86081440:19911
bridge 94153136:19910
bridge 99765088:19906
bridge 64485216:19904
bridge 62787648:19892
bridge 61293440:19887
bridge 67998336:19876
bridge 58915712:19850
bridge 65005952:19801
[3e4c23dc801a5e3] jit-backend-counts}
