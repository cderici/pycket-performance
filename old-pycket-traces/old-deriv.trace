[86a7cd516948d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e326000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[86a7cd516aa2f5] jit-backend-dump}
[86a7cd516ff0eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3260b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[86a7cd517025ec] jit-backend-dump}
[86a7cd5171980d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e326180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[86a7cd5171bbb2] jit-backend-dump}
[86a7cd51728556] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3261f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[86a7cd5172a5cd] jit-backend-dump}
[86a7cd51739568] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e326270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[86a7cd5173b527] jit-backend-dump}
[86a7cd5174b01f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3262f
[86a7cd5174f033] jit-backend-dump}
[86a7cd51754dbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e
[86a7cd51757194] jit-backend-dump}
[86a7cd5175be03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e326630 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B528010000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[86a7cd5175e1e2] jit-backend-dump}
[86a7cd517ecea8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e
[86a7cd517efe36] jit-backend-dump}
[86a7cd517f5e50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3268f
[86a7cd517f870f] jit-backend-dump}
[86a7cd517fd3ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e326a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[86a7cd517ff2b7] jit-backend-dump}
[86a7cd5182da2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e326af
[86a7cd51831ab3] jit-backend-dump}
[86a7cd5183edf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e326ce
[86a7cd5184277b] jit-backend-dump}
[86a7cd5184b293] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e326ee
[86a7cd5184e6b4] jit-backend-dump}
[86a7cd51854a52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3270d
[86a7cd51857af6] jit-backend-dump}
[86a7cd51874eb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3272c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB7062325E5E7F000041FFD3E99CFFFFFF
[86a7cd5187778d] jit-backend-dump}
[86a7cd5187e369] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB7062325E5E7F000041FFD3E9BCFFFFFF
[86a7cd5187fdda] jit-backend-dump}
[86a7cd51885358] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e
[86a7cd518883d8] jit-backend-dump}
[86a7cd5188d67b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3275c
[86a7cd5188feb3] jit-backend-dump}
[86a7cd53083d5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB706A325E5E7F000041FFE3
[86a7cd530865b7] jit-backend-dump}
[86a7cd61cf1c32] {jit-backend
[86a7cd61ef178e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3278f
[86a7cd61efa5ab] jit-backend-dump}
[86a7cd61f15635] {jit-backend-addr
Loop 3 ((cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)) has address 0x7f5e5e3279dd to 0x7f5e5e327b30 (bootstrap 0x7f5e5e327950)
       gc table: 0x7f5e5e3278f0
       function: 0x7f5e5e327950
         resops: 0x7f5e5e3279dd
       failures: 0x7f5e5e327b30
            end: 0x7f5e5e327c93
[86a7cd61f1e294] jit-backend-addr}
[86a7cd61f241aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327a07 +0  54010000
[86a7cd61f25628] jit-backend-dump}
[86a7cd61f28c4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327a1d +0  5A010000
[86a7cd61f29b66] jit-backend-dump}
[86a7cd61f2cbfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327a33 +0  60010000
[86a7cd61f2d95a] jit-backend-dump}
[86a7cd61f30812] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327a46 +0  69010000
[86a7cd61f315e8] jit-backend-dump}
[86a7cd61f34567] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327a5a +0  71010000
[86a7cd61f352bc] jit-backend-dump}
[86a7cd61f383aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327a74 +0  8F010000
[86a7cd61f39190] jit-backend-dump}
[86a7cd61f3c097] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327aa0 +0  7F010000
[86a7cd61f3cd63] jit-backend-dump}
[86a7cd61f3fae6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327ab4 +0  87010000
[86a7cd61f407b8] jit-backend-dump}
[86a7cd61f43683] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327ace +0  A5010000
[86a7cd61f44339] jit-backend-dump}
[86a7cd61f47e34] jit-backend}
[86a7cd61f4bb5e] {jit-log-opt-loop
# Loop 3 ((cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)) : loop with 29 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(65680096))
+264: guard_class(p0, 16500016, descr=<Guard0x3e05160>) [p1, p0]
+283: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+287: guard_nonnull_class(p3, 16470384, descr=<Guard0x3e051c0>) [p1, p0]
+305: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+309: guard_nonnull_class(p5, 16470384, descr=<Guard0x3e05220>) [p1, p0]
+327: guard_class(p1, 16437352, descr=<Guard0x3ed5f58>) [p1, p0]
+346: p8 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+357: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3ed5fa0>) [p1, p0]
+366: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+370: guard_not_invalidated(descr=<Guard0x3ee4020>) [p1, p0]
+370: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+374: guard_nonnull_class(p11, 16470384, descr=<Guard0x3e05280>) [p1, p0]
+392: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)')
+396: label(p10, p11, p3, p5, p13, descr=TargetToken(65680176))
+424: guard_class(p13, 16437352, descr=<Guard0x3e052e0>) [p13, p5, p3, p11, p10]
+436: p15 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+447: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x3ee4068>) [p13, p5, p3, p11, p10]
+456: p17 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+460: guard_not_invalidated(descr=<Guard0x3ee40b0>) [p13, p5, p3, p11, p10]
+460: p18 = getfield_gc_r(p13, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+464: guard_nonnull_class(p18, 16470384, descr=<Guard0x3e05340>) [p13, p5, p3, p11, p10]
+482: p20 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)')
+486: p21 = new_with_vtable(descr=<SizeDescr 24>)
+530: setfield_gc(p21, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+534: setfield_gc(p21, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+538: jump(p17, p18, p11, p21, p20, descr=TargetToken(65680176))
+576: --end of the loop--
[86a7cd61f7ce1e] jit-log-opt-loop}
[86a7cd62143b9c] {jit-backend
[86a7cd621ab590] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327da
[86a7cd621b47fb] jit-backend-dump}
[86a7cd621bdc61] {jit-backend-addr
Loop 4 ((loop r) from (list '/ AppRand2 a4828)) has address 0x7f5e5e327ead to 0x7f5e5e328010 (bootstrap 0x7f5e5e327e20)
       gc table: 0x7f5e5e327da0
       function: 0x7f5e5e327e20
         resops: 0x7f5e5e327ead
       failures: 0x7f5e5e328010
            end: 0x7f5e5e3281ab
[86a7cd621c079c] jit-backend-addr}
[86a7cd621c4635] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327ec4 +0  77010000
[86a7cd621c57ea] jit-backend-dump}
[86a7cd621c8b45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327ed4 +0  83010000
[86a7cd621c9931] jit-backend-dump}
[86a7cd621cc8cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327ee4 +0  8F010000
[86a7cd621cd5b3] jit-backend-dump}
[86a7cd621d0317] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327ef8 +0  97010000
[86a7cd621d0fdd] jit-backend-dump}
[86a7cd621d3d26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327f0e +0  9D010000
[86a7cd621d49f8] jit-backend-dump}
[86a7cd621d76e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327f1e +0  A9010000
[86a7cd621d83dc] jit-backend-dump}
[86a7cd621db2fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327f31 +0  CE010000
[86a7cd621dbff6] jit-backend-dump}
[86a7cd621ded98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327f45 +0  D6010000
[86a7cd621dfade] jit-backend-dump}
[86a7cd621e2791] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327f5b +0  DC010000
[86a7cd621e347f] jit-backend-dump}
[86a7cd621e6141] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327f6b +0  E8010000
[86a7cd621e6e1c] jit-backend-dump}
[86a7cd621e9a9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327f78 +0  F7010000
[86a7cd621ea780] jit-backend-dump}
[86a7cd621ed470] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327f93 +0  F8010000
[86a7cd621ee164] jit-backend-dump}
[86a7cd621f199c] jit-backend}
[86a7cd621f55dd] {jit-log-opt-loop
# Loop 4 ((loop r) from (list '/ AppRand2 a4828)) : entry bridge with 39 ops
[p0, p1]
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
+277: guard_class(p0, 16499664, descr=<Guard0x3e053a0>) [p1, p0]
+296: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+300: guard_class(p3, 16499664, descr=<Guard0x3ee40f8>) [p1, p0]
+312: p5 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+316: guard_class(p5, 16477696, descr=<Guard0x3ee4140>) [p1, p0]
+328: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+339: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3ee4188>) [p1, p0]
+348: p9 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+352: guard_nonnull_class(p9, 16616448, descr=<Guard0x3e05400>) [p1, p0]
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+377: i12 = instance_ptr_eq(p9, ConstPtr(ptr11))
+380: guard_true(i12, descr=<Guard0x3ee41d0>) [p1, p0]
debug_merge_point(0, 0, 'null')
+386: guard_not_invalidated(descr=<Guard0x3ee4218>) [p1, p0]
+386: guard_class(p1, 16437352, descr=<Guard0x3ee4260>) [p1, p0]
+405: p14 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+416: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3ee42a8>) [p1, p0]
+425: p16 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+425: p17 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+429: guard_nonnull_class(p17, 16470384, descr=<Guard0x3e05460>) [p1, p0]
+447: p19 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (loop r)')
+451: guard_class(p19, 16437352, descr=<Guard0x3ee42f0>) [p1, p0]
+463: p21 = getfield_gc_r(p19, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+467: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x3ee4338>) [p1, p0]
+476: p23 = getfield_gc_r(p19, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+480: p24 = getfield_gc_r(p19, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+484: guard_nonnull_class(p24, 16470384, descr=<Guard0x3e054c0>) [p1, p0]
+503: p26 = getfield_gc_r(p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)')
+507: p27 = new_with_vtable(descr=<SizeDescr 32>)
+551: p28 = new_with_vtable(descr=<SizeDescr 24>)
+562: setfield_gc(p28, p17, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+566: setfield_gc(p28, ConstPtr(ptr29), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+570: setfield_gc(p27, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+574: setfield_gc(p27, p24, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+578: setfield_gc(p27, p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+582: jump(p27, p26, descr=TargetToken(65680096))
+624: --end of the loop--
[86a7cd62228f11] jit-log-opt-loop}
[86a7cd628cf1c1] {jit-backend
[86a7cd62942fa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3282e
[86a7cd6294c98d] jit-backend-dump}
[86a7cd62956901] {jit-backend-addr
Loop 5 ((if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)) has address 0x7f5e5e32841d to 0x7f5e5e328620 (bootstrap 0x7f5e5e328390)
       gc table: 0x7f5e5e3282e0
       function: 0x7f5e5e328390
         resops: 0x7f5e5e32841d
       failures: 0x7f5e5e328620
            end: 0x7f5e5e32880f
[86a7cd62959971] jit-backend-addr}
[86a7cd6295db5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328447 +0  04020000
[86a7cd6295eeca] jit-backend-dump}
[86a7cd629622ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32845d +0  0A020000
[86a7cd62963195] jit-backend-dump}
[86a7cd629661aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32846d +0  16020000
[86a7cd62966f0c] jit-backend-dump}
[86a7cd62969d3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328480 +0  1F020000
[86a7cd6296aa77] jit-backend-dump}
[86a7cd6296d872] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328496 +0  25020000
[86a7cd6296e5ac] jit-backend-dump}
[86a7cd629714aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3284ac +0  2B020000
[86a7cd6297221e] jit-backend-dump}
[86a7cd62975337] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3284bc +0  53020000
[86a7cd62976099] jit-backend-dump}
[86a7cd62979055] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3284d0 +0  5B020000
[86a7cd62979d98] jit-backend-dump}
[86a7cd6297cbc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3284e4 +0  63020000
[86a7cd6297d904] jit-backend-dump}
[86a7cd62980681] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3284fb +0  68020000
[86a7cd629813bb] jit-backend-dump}
[86a7cd62984160] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32850f +0  70020000
[86a7cd62984e87] jit-backend-dump}
[86a7cd62987c91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32854a +0  51020000
[86a7cd629889cb] jit-backend-dump}
[86a7cd6298bc25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328560 +0  73020000
[86a7cd6298c99f] jit-backend-dump}
[86a7cd6298f8b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328570 +0  7F020000
[86a7cd62990640] jit-backend-dump}
[86a7cd6299404c] jit-backend}
[86a7cd62997b18] {jit-log-opt-loop
# Loop 5 ((if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)) : loop with 72 ops
[p0, p1]
+325: label(p0, p1, descr=TargetToken(66144320))
+344: guard_class(p0, 16499664, descr=<Guard0x3e05700>) [p1, p0]
+363: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+367: guard_nonnull_class(p3, 16470384, descr=<Guard0x3e05760>) [p1, p0]
+392: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+395: guard_false(i6, descr=<Guard0x3f2e410>) [p1, p0]
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
+401: guard_class(p1, 16437352, descr=<Guard0x3f2e458>) [p1, p0]
+420: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+424: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3e057c0>) [p1, p0]
debug_merge_point(0, 0, '(cdr l174)')
+442: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+446: guard_nonnull_class(p10, 16470384, descr=<Guard0x3e05820>) [p1, p0]
+464: guard_not_invalidated(descr=<Guard0x3f2e4a0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+464: p12 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+468: guard_class(p12, 16477696, descr=<Guard0x3f2e4e8>) [p1, p0]
+480: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+491: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f2e530>) [p1, p0]
+500: p16 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+511: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3e05880>) [p1, p0]
+520: p18 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+524: guard_nonnull_class(p18, ConstClass(W_Symbol), descr=<Guard0x3e058e0>) [p1, p0]
+543: p20 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))')
debug_merge_point(0, 0, '(deriv a4828)')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
+554: i22 = instance_ptr_eq(p18, ConstPtr(ptr21))
+557: guard_true(i22, descr=<Guard0x3f2e578>) [p1, p0]
debug_merge_point(0, 0, '1')
debug_merge_point(0, 0, '(list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+563: p23 = same_as_r(p20)
+566: label(p12, p10, p8, p20, p1, p18, p23, descr=TargetToken(66144400))
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
debug_merge_point(0, 0, '(cdr l174)')
+600: p24 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+604: guard_nonnull_class(p24, 16470384, descr=<Guard0x3e05940>) [p24, p18, p1, p20, p10, p12, p8]
+622: guard_not_invalidated(descr=<Guard0x3f2e5c0>) [p24, p18, p1, p20, p10, p12, p8]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+622: p26 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+626: guard_nonnull_class(p26, ConstClass(W_Symbol), descr=<Guard0x3e059a0>) [p24, p18, p1, p20, p10, p12, p8]
debug_merge_point(0, 0, '(let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))')
debug_merge_point(0, 0, '(deriv a4828)')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
+651: i29 = instance_ptr_eq(p26, ConstPtr(ptr28))
+654: guard_true(i29, descr=<Guard0x3f2e608>) [p24, p18, p1, p20, p10, p12, p8]
debug_merge_point(0, 0, '1')
debug_merge_point(0, 0, '(list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+660: p30 = new_with_vtable(descr=<SizeDescr 48>)
+707: p31 = new_with_vtable(descr=<SizeDescr 24>)
+725: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+729: p33 = new_with_vtable(descr=<SizeDescr 24>)
+740: setfield_gc(p33, 1, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+748: p35 = new_with_vtable(descr=<SizeDescr 24>)
+759: setfield_gc(p35, p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+770: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+774: setfield_gc(p33, p35, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+778: setfield_gc(p31, p33, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+782: setfield_gc(p30, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+786: setfield_gc(p30, p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+790: setfield_gc(p30, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+801: setfield_gc(p30, ConstPtr(ptr37), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+805: setfield_gc(p30, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+809: jump(p12, p24, p8, p23, p30, p26, p23, descr=TargetToken(66144400))
+832: --end of the loop--
[86a7cd629e46f9] jit-log-opt-loop}
[86a7cd62b331bb] {jit-backend
[86a7cd62b8e477] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3288b
[86a7cd62b945d0] jit-backend-dump}
[86a7cd62b9db90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3288f4 +0  1E000000
[86a7cd62b9f00e] jit-backend-dump}
[86a7cd62ba297a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3289f5 +0  1E000000
[86a7cd62ba37bf] jit-backend-dump}
[86a7cd62ba67e3] {jit-backend-addr
bridge out of Guard 0x3e05220 has address 0x7f5e5e3288f0 to 0x7f5e5e3289f0
       gc table: 0x7f5e5e3288b0
    jump target: 0x7f5e5e3288f0
         resops: 0x7f5e5e3288fe
       failures: 0x7f5e5e3289f0
            end: 0x7f5e5e328af7
[86a7cd62ba8d15] jit-backend-addr}
[86a7cd62babfec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32890e +0  21010000
[86a7cd62bace24] jit-backend-dump}
[86a7cd62bafd6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328925 +0  26010000
[86a7cd62bb0a75] jit-backend-dump}
[86a7cd62bb39cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32893c +0  2B010000
[86a7cd62bb471f] jit-backend-dump}
[86a7cd62bb74d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328951 +0  32010000
[86a7cd62bb81d0] jit-backend-dump}
[86a7cd62bbaeeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328965 +0  3A010000
[86a7cd62bbbc00] jit-backend-dump}
[86a7cd62bbea0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328981 +0  56010000
[86a7cd62bbf772] jit-backend-dump}
[86a7cd62bc8243] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327a33 +0  B90E0000
[86a7cd62bc92b1] jit-backend-dump}
[86a7cd62bdeaba] jit-backend}
[86a7cd62be4677] {jit-log-opt-bridge
# bridge out of Guard 0x3e05220 with 22 ops
[p0, p1]
+86: guard_class(p1, 16500016, descr=<Guard0x3e05a00>) [p0, p1]
+98: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+102: guard_nonnull_class(p3, 16470384, descr=<Guard0x3e05a60>) [p0, p1]
+121: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+125: guard_nonnull_class(p5, 16471056, descr=<Guard0x3e05ac0>) [p0, p1]
+144: guard_class(p0, 16437352, descr=<Guard0x3f2e650>) [p0, p1]
+165: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+176: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3f2e698>) [p0, p1]
+185: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+189: guard_not_invalidated(descr=<Guard0x3f2e6e0>) [p0, p1]
+189: p11 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+193: guard_nonnull_class(p11, 16470384, descr=<Guard0x3e05b20>) [p0, p1]
+213: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)')
+217: p14 = new_with_vtable(descr=<SizeDescr 32>)
+261: p15 = new_with_vtable(descr=<SizeDescr 24>)
+272: setfield_gc(p15, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+276: setfield_gc(p15, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+280: setfield_gc(p14, p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+284: setfield_gc(p14, p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+288: setfield_gc(p14, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+292: jump(p14, p13, descr=TargetToken(65680096))
+320: --end of the loop--
[86a7cd62c01e6f] jit-log-opt-bridge}
[86a7cd62f7bcda] {jit-backend
[86a7cd62ff3448] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328c
[86a7cd62fff322] jit-backend-dump}
[86a7cd630096ed] {jit-backend-addr
Loop 8 ((if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop l)) has address 0x7f5e5e328dad to 0x7f5e5e329030 (bootstrap 0x7f5e5e328d20)
       gc table: 0x7f5e5e328c30
       function: 0x7f5e5e328d20
         resops: 0x7f5e5e328dad
       failures: 0x7f5e5e329030
            end: 0x7f5e5e32923b
[86a7cd6300c442] jit-backend-addr}
[86a7cd6301059e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328dc4 +0  97020000
[86a7cd630118f9] jit-backend-dump}
[86a7cd63014d36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328dda +0  9D020000
[86a7cd63015b68] jit-backend-dump}
[86a7cd63018abf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328dea +0  A9020000
[86a7cd630197db] jit-backend-dump}
[86a7cd6301c606] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328dfd +0  B2020000
[86a7cd6301d2f7] jit-backend-dump}
[86a7cd63020187] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328e13 +0  B8020000
[86a7cd63020e78] jit-backend-dump}
[86a7cd63023bfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328e29 +0  BE020000
[86a7cd630248ee] jit-backend-dump}
[86a7cd630277e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328e3a +0  E5020000
[86a7cd6302852d] jit-backend-dump}
[86a7cd6302b2ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328e4e +0  ED020000
[86a7cd6302bfe4] jit-backend-dump}
[86a7cd6302ecf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328e62 +0  F5020000
[86a7cd6302f9da] jit-backend-dump}
[86a7cd630326fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328e79 +0  FA020000
[86a7cd630333e3] jit-backend-dump}
[86a7cd630360ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328e8f +0  00030000
[86a7cd63036df8] jit-backend-dump}
[86a7cd63039b13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328e9f +0  0C030000
[86a7cd6303a838] jit-backend-dump}
[86a7cd6303d537] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328eaf +0  18030000
[86a7cd6303e22b] jit-backend-dump}
[86a7cd63040eea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328ebf +0  24030000
[86a7cd63041bde] jit-backend-dump}
[86a7cd630448c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328ed6 +0  29030000
[86a7cd630455b6] jit-backend-dump}
[86a7cd6304828b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328eec +0  2F030000
[86a7cd63048f6f] jit-backend-dump}
[86a7cd6304c6e6] jit-backend}
[86a7cd63050129] {jit-log-opt-loop
# Loop 8 ((if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop l)) : entry bridge with 102 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop l)')
+389: guard_class(p0, 16499664, descr=<Guard0x3e05b80>) [p1, p0]
+408: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+412: guard_nonnull_class(p3, 16470384, descr=<Guard0x3e05be0>) [p1, p0]
+437: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+440: guard_false(i6, descr=<Guard0x3f2e728>) [p1, p0]
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
+446: guard_class(p1, 16435920, descr=<Guard0x3f2e770>) [p1, p0]
+465: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+469: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3e05c40>) [p1, p0]
debug_merge_point(0, 0, '(cdr l174)')
+487: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+491: guard_nonnull_class(p10, 16470384, descr=<Guard0x3e05ca0>) [p1, p0]
+509: guard_not_invalidated(descr=<Guard0x3f2e7b8>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+509: p12 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+513: guard_class(p12, 16477696, descr=<Guard0x3f2e800>) [p1, p0]
+526: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+537: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f2e848>) [p1, p0]
+546: p16 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+557: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3e05d00>) [p1, p0]
+566: p18 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+570: guard_nonnull_class(p18, 16470384, descr=<Guard0x3e05d60>) [p1, p0]
+589: p20 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available)))))')
+589: p21 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+593: guard_nonnull_class(p21, ConstClass(W_Symbol), descr=<Guard0x3e05dc0>) [p1, p0]
+618: i24 = instance_ptr_eq(p21, ConstPtr(ptr23))
+621: guard_false(i24, descr=<Guard0x3f2e890>) [p1, p0]
debug_merge_point(0, 0, '(if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))')
+634: i26 = instance_ptr_eq(p21, ConstPtr(ptr25))
+637: guard_false(i26, descr=<Guard0x3f2e8d8>) [p1, p0]
debug_merge_point(0, 0, '(if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available)))')
+650: i28 = instance_ptr_eq(p21, ConstPtr(ptr27))
+653: guard_true(i28, descr=<Guard0x3f2e920>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3)))')
debug_merge_point(0, 0, '(map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))')
+659: p29 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+663: guard_nonnull_class(p29, 16471056, descr=<Guard0x3e05e20>) [p1, p0]
debug_merge_point(0, 0, '(let ([if101 (if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)]) (if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l)))')
debug_merge_point(0, 0, '(if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)')
debug_merge_point(0, 0, '(let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f))')
debug_merge_point(0, 0, '(procedure-arity-includes? f 1)')
debug_merge_point(0, 0, '(if if100 (list? l) #f)')
debug_merge_point(0, 0, '(list? l)')
debug_merge_point(0, 0, '(if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l))')
debug_merge_point(0, 0, '(let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l))')
debug_merge_point(0, 0, '(lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))')
debug_merge_point(0, 0, '(loop l)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop l)')
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
debug_merge_point(0, 0, '(cdr l174)')
+682: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+686: guard_nonnull_class(p31, 16470384, descr=<Guard0x3e05e80>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+704: i33 = getfield_gc_i(p29, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))')
debug_merge_point(0, 0, '(deriv a4828)')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+708: p34 = new_with_vtable(descr=<SizeDescr 24>)
+758: p35 = new_with_vtable(descr=<SizeDescr 48>)
+769: p36 = new_with_vtable(descr=<SizeDescr 40>)
+780: setfield_gc(p36, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+784: p37 = new_with_vtable(descr=<SizeDescr 24>)
+802: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+806: setfield_gc(p37, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+810: setfield_gc(p36, p37, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+814: p39 = new_with_vtable(descr=<SizeDescr 40>)
+825: setfield_gc(p39, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+829: p40 = new_with_vtable(descr=<SizeDescr 24>)
+840: setfield_gc(p40, p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+844: setfield_gc(p40, p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+848: setfield_gc(p39, p40, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+852: setfield_gc(p39, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+863: setfield_gc(p39, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+867: setfield_gc(p36, p39, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+878: setfield_gc(p36, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+882: p43 = new_with_vtable(descr=<SizeDescr 24>)
+900: setfield_gc(p43, ConstPtr(ptr44), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+904: p45 = new_with_vtable(descr=<SizeDescr 24>)
+915: setfield_gc(p45, 0, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+923: p47 = new_with_vtable(descr=<SizeDescr 24>)
+934: setfield_gc(p47, i33, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+938: setfield_gc(p47, ConstPtr(ptr48), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+942: setfield_gc(p45, p47, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+946: setfield_gc(p43, p45, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+950: setfield_gc(p34, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+954: setfield_gc(p35, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+965: setfield_gc(p34, ConstPtr(ptr49), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+969: setfield_gc(p35, ConstPtr(ptr50), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+973: setfield_gc(p35, p36, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+984: setfield_gc(p35, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+988: setfield_gc(p35, p43, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+992: jump(p34, p35, descr=TargetToken(66144320))
+1024: --end of the loop--
[86a7cd630a832f] jit-log-opt-loop}
[86a7cd63531349] {jit-backend
[86a7cd635c2945] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329350 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5202000048FF042510BDF5028139101100000F85000000004C8B79204C8B350BFFFFFF4D39F70F85000000004C8B791841813F480E00000F85000000004D8B6F204C8B2506FFFFFF4D39E50F85000000004D8B6F104D8B571841817D00B01E01000F85000000004D8B7D0841813F100A01000F85000000004D8B4F104983F9017207418139503601000F85000000004D8B45104983C0010F80000000004D8B6908488B3DD6FEFFFF4939FD0F8500000000498B79104939FF0F850000000041813A307A01000F8500000000498B7A084883FF017206813F900F00000F85000000004981F8405DC6000F8F00000000488B0C25F091F900488D9130010000483B14251092F9000F877101000048891425F091F90048C701A8160000488D513048C7021011000048897A08488B057EFEFFFF48894210488D422848C70010110000488978084C8B0D6CFEFFFF4C8948104C8D482849C70110110000498979084C8B2D5AFEFFFF4D896910498D712848C706480E000048897E08488D5E2848C703B01E01004C897B084C89431048895E104C8956184C896620498971184D8971204C8948184C8B0D1DFEFFFF4C89482048894218488B0516FEFFFF48894220488D431848C700B0970000488B1D08FEFFFF48895808488D581848C703509A000048C74308000000004C8D4B1849C701509A000049C74108030000004C8B35DFFDFFFF4D8971104C894B1048895810488B1DD4FDFFFF488959204C896910488951184889790848894128488B05C1FDFFFF4889853001000048898D3801000049BB3084325E5E7F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BB5092325E5E7F00004C895D204D8D9BA0D0FFFF41FFD3E988FDFFFF49BB4093325E5E7F00004C895D204D8D9BB0D7FFFF41FFD3E97AFEFFFFFF3587FCFFFF49BB6092325E5E7F000041534D8D9BA0CDFFFF41FFE3FF357BFCFFFF49BB7092325E5E7F000041534D8D9B90CDFFFF41FFE3FF3567FCFFFF49BB8092325E5E7F000041534D8D9B80CDFFFF41FFE3FF3553FCFFFF49BB9092325E5E7F000041534D8D9B70CDFFFF41FFE3FF3547FCFFFF49BBA092325E5E7F000041534D8D9B60CDFFFF41FFE3FF3533FCFFFF49BBB092325E5E7F000041534D8D9B50CDFFFF41FFE3FF351FFCFFFF49BBC092325E5E7F000041534D8D9B40CDFFFF41FFE3FF350BFCFFFF49BBD092325E5E7F000041534D8D9B30CDFFFF41FFE3FF35F7FBFFFF49BBE092325E5E7F000041534D8D9B20CDFFFF41FFE3FF35EBFBFFFF49BBF092325E5E7F000041534D8D9B10CDFFFF41FFE3FF35D7FBFFFF49BB0093325E5E7F000041534D8D9B00CDFFFF41FFE3FF35C3FBFFFF49BB1093325E5E7F000041534D8D9BF0CCFFFF41FFE3FF35AFFBFFFF49BB2093325E5E7F000041534D8D9BE0CCFFFF41FFE3FF359BFBFFFF49BB3093325E5E7F000041534D8D9BD0CCFFFF41FFE3
[86a7cd635cb7dd] jit-backend-dump}
[86a7cd635d58df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329424 +0  1F000000
[86a7cd635d6db2] jit-backend-dump}
[86a7cd635daa9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329685 +0  1F000000
[86a7cd635db9b7] jit-backend-dump}
[86a7cd635debac] {jit-backend-addr
bridge out of Guard 0x3e052e0 has address 0x7f5e5e329420 to 0x7f5e5e329680
       gc table: 0x7f5e5e329350
    jump target: 0x7f5e5e329420
         resops: 0x7f5e5e32942e
       failures: 0x7f5e5e329680
            end: 0x7f5e5e32984b
[86a7cd635e102c] jit-backend-addr}
[86a7cd635e4577] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32943e +0  81020000
[86a7cd635e541a] jit-backend-dump}
[86a7cd635e8416] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329452 +0  89020000
[86a7cd635e9181] jit-backend-dump}
[86a7cd635ec0a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329463 +0  B0020000
[86a7cd635ece9f] jit-backend-dump}
[86a7cd635efd3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329477 +0  B8020000
[86a7cd635f0a35] jit-backend-dump}
[86a7cd635f37e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32948d +0  BE020000
[86a7cd635f44dd] jit-backend-dump}
[86a7cd635f7269] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32949e +0  C9020000
[86a7cd635f7f4b] jit-backend-dump}
[86a7cd635facdd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3294b5 +0  CE020000
[86a7cd635fb9b5] jit-backend-dump}
[86a7cd635fe7b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3294c3 +0  DC020000
[86a7cd635ff488] jit-backend-dump}
[86a7cd636021e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3294d7 +0  E4020000
[86a7cd63602edd] jit-backend-dump}
[86a7cd63605c9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3294e4 +0  F3020000
[86a7cd63606960] jit-backend-dump}
[86a7cd636096fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3294f1 +0  02030000
[86a7cd6360a3d4] jit-backend-dump}
[86a7cd6360d166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329507 +0  08030000
[86a7cd6360de35] jit-backend-dump}
[86a7cd63610baf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329514 +0  17030000
[86a7cd6361188a] jit-backend-dump}
[86a7cd636148dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327aa0 +0  7C190000
[86a7cd636155f8] jit-backend-dump}
[86a7cd63619303] jit-backend}
[86a7cd6361ce44] {jit-log-opt-bridge
# bridge out of Guard 0x3e052e0 with 124 ops
[p0, p1, p2, p3, p4]
+230: guard_class(p0, 16435920, descr=<Guard0x3e05ee0>) [p0, p1, p2, p3, p4]
+242: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+253: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3f2e968>) [p0, p1, p2, p3, p4]
+262: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+262: guard_not_invalidated(descr=<Guard0x3f2e9b0>) [p0, p1, p2, p3, p4]
+262: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons '+ AppRand0)')
+266: guard_class(p9, 16435208, descr=<Guard0x3f2e9f8>) [p0, p1, p2, p3, p4]
+279: p11 = getfield_gc_r(p9, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+290: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3f2ea40>) [p0, p1, p2, p3, p4]
+299: p13 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+303: p14 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4847 (add1 i4849)) from (cons '+ AppRand0)')
+307: guard_class(p13, 16504944, descr=<Guard0x3f2ea88>) [p0, p1, p2, p3, p4]
+321: p16 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+325: guard_class(p16, 16499664, descr=<Guard0x3f2ead0>) [p0, p1, p2, p3, p4]
+338: p18 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+342: guard_nonnull_class(p18, 16510992, descr=<Guard0x3e05f40>) [p0, p1, p2, p3, p4]
+361: i20 = getfield_gc_i(p13, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+365: i22 = int_add_ovf(i20, 1)
+369: guard_no_overflow(descr=<Guard0x3f2eb18>) [p0, p1, p2, p3, p4]
+375: p23 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+386: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x3f2eb60>) [p0, p1, p2, p3, p4]
+395: p25 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+399: i26 = instance_ptr_eq(p16, p25)
+402: guard_true(i26, descr=<Guard0x3f2eba8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if1 (> i4849 deriv-iters)]) (if if1 (begin (void) (void)) (begin (deriv '('+ ('* 3 'x 'x) ('* 'a 'x 'x) ('* 'b 'x) 5)) (doloop4847 (add1 i4849))))) from (doloop4847 (add1 i4849))')
+408: guard_class(p14, 16528368, descr=<Guard0x3f2ebf0>) [p0, p1, p2, p3, p4]
+421: p28 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+425: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x3e05fa0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(> i4849 deriv-iters)')
+443: i31 = int_gt(i22, 13000000)
+450: guard_false(i31, descr=<Guard0x3f2ec38>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if if1 (begin (void) (void)) (begin (deriv '('+ ('* 3 'x 'x) ('* 'a 'x 'x) ('* 'b 'x) 5)) (doloop4847 (add1 i4849))))')
debug_merge_point(0, 0, '(begin (deriv '('+ ('* 3 'x 'x) ('* 'a 'x 'x) ('* 'b 'x) 5)) (doloop4847 (add1 i4849)))')
debug_merge_point(0, 0, '(deriv '('+ ('* 3 'x 'x) ('* 'a 'x 'x) ('* 'b 'x) 5))')
+456: p32 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0))')
debug_merge_point(0, 0, '(map deriv (cdr a))')
debug_merge_point(0, 0, '(let ([if101 (if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)]) (if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l)))')
debug_merge_point(0, 0, '(if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)')
debug_merge_point(0, 0, '(let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f))')
debug_merge_point(0, 0, '(procedure-arity-includes? f 1)')
debug_merge_point(0, 0, '(if if100 (list? l) #f)')
debug_merge_point(0, 0, '(list? l)')
debug_merge_point(0, 0, '(if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l))')
debug_merge_point(0, 0, '(let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l))')
debug_merge_point(0, 0, '(lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))')
debug_merge_point(0, 0, '(loop l)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop l)')
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
debug_merge_point(0, 0, '(cdr l174)')
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available)))))')
debug_merge_point(0, 0, '(if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))')
debug_merge_point(0, 0, '(if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available)))')
debug_merge_point(0, 0, '(let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3)))')
debug_merge_point(0, 0, '(map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))')
debug_merge_point(0, 0, '(let ([if101 (if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)]) (if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l)))')
debug_merge_point(0, 0, '(if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)')
debug_merge_point(0, 0, '(let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f))')
debug_merge_point(0, 0, '(procedure-arity-includes? f 1)')
debug_merge_point(0, 0, '(if if100 (list? l) #f)')
debug_merge_point(0, 0, '(list? l)')
debug_merge_point(0, 0, '(if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l))')
debug_merge_point(0, 0, '(let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l))')
debug_merge_point(0, 0, '(lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))')
debug_merge_point(0, 0, '(loop l)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop l)')
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
debug_merge_point(0, 0, '(cdr l174)')
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
debug_merge_point(0, 0, '(let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))')
debug_merge_point(0, 0, '(deriv a4828)')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+456: p33 = new_with_vtable(descr=<SizeDescr 48>)
+500: p34 = new_with_vtable(descr=<SizeDescr 40>)
+511: setfield_gc(p34, p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+522: setfield_gc(p34, ConstPtr(ptr35), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+526: p36 = new_with_vtable(descr=<SizeDescr 40>)
+537: setfield_gc(p36, p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+548: setfield_gc(p36, ConstPtr(ptr37), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+552: p38 = new_with_vtable(descr=<SizeDescr 40>)
+563: setfield_gc(p38, p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+574: setfield_gc(p38, ConstPtr(ptr39), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+578: p40 = new_with_vtable(descr=<SizeDescr 40>)
+589: setfield_gc(p40, p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+593: p41 = new_with_vtable(descr=<SizeDescr 24>)
+604: setfield_gc(p41, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+608: setfield_gc(p41, i22, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+612: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+616: setfield_gc(p40, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+620: setfield_gc(p40, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+624: setfield_gc(p38, p40, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+628: setfield_gc(p38, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+632: setfield_gc(p36, p38, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+643: setfield_gc(p36, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+647: setfield_gc(p34, p36, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+658: setfield_gc(p34, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+662: p46 = new_with_vtable(descr=<SizeDescr 24>)
+680: setfield_gc(p46, ConstPtr(ptr47), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+684: p48 = new_with_vtable(descr=<SizeDescr 24>)
+695: setfield_gc(p48, 0, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+703: p50 = new_with_vtable(descr=<SizeDescr 24>)
+714: setfield_gc(p50, 3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+729: setfield_gc(p50, ConstPtr(ptr52), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+733: setfield_gc(p48, p50, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+737: setfield_gc(p46, p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+748: setfield_gc(p33, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+752: setfield_gc(p33, ConstPtr(ptr54), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+756: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+760: setfield_gc(p33, p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+764: setfield_gc(p33, p46, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+775: jump(ConstPtr(ptr55), p33, descr=TargetToken(66144320))
+816: --end of the loop--
[86a7cd6367ea1d] jit-log-opt-bridge}
[86a7cd63799a9b] {jit-backend
[86a7cd637d9828] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e
[86a7cd637e011a] jit-backend-dump}
[86a7cd637e9cfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329994 +0  1F000000
[86a7cd637eb035] jit-backend-dump}
[86a7cd637ee9d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329ad5 +0  1F000000
[86a7cd637ef7b2] jit-backend-dump}
[86a7cd637f28ec] {jit-backend-addr
bridge out of Guard 0x3e05760 has address 0x7f5e5e329990 to 0x7f5e5e329ad0
       gc table: 0x7f5e5e329920
    jump target: 0x7f5e5e329990
         resops: 0x7f5e5e32999e
       failures: 0x7f5e5e329ad0
            end: 0x7f5e5e329c2b
[86a7cd637f4c16] jit-backend-addr}
[86a7cd637f80a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3299ae +0  61010000
[86a7cd637f8eb3] jit-backend-dump}
[86a7cd637fc003] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3299c5 +0  66010000
[86a7cd637fccf1] jit-backend-dump}
[86a7cd637ffc2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3299d5 +0  72010000
[86a7cd6380092c] jit-backend-dump}
[86a7cd63803893] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3299e9 +0  7A010000
[86a7cd6380456b] jit-backend-dump}
[86a7cd6380737e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329a01 +0  7E010000
[86a7cd63808059] jit-backend-dump}
[86a7cd6380aee6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329a19 +0  82010000
[86a7cd6380bbf2] jit-backend-dump}
[86a7cd6380ebd9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329a2a +0  A9010000
[86a7cd6380f910] jit-backend-dump}
[86a7cd63812843] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329a3e +0  B1010000
[86a7cd6381352a] jit-backend-dump}
[86a7cd63816447] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329a52 +0  B9010000
[86a7cd63817132] jit-backend-dump}
[86a7cd6381a1c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32845d +0  2F150000
[86a7cd6381aed0] jit-backend-dump}
[86a7cd6381ec9c] jit-backend}
[86a7cd6382254e] {jit-log-opt-bridge
# bridge out of Guard 0x3e05760 with 38 ops
[p0, p1]
+134: guard_class(p1, 16499664, descr=<Guard0x3f62020>) [p0, p1]
+146: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+150: guard_nonnull_class(p3, 16471056, descr=<Guard0x3f62080>) [p0, p1]
+176: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+179: guard_false(i6, descr=<Guard0x3f2ec80>) [p0, p1]
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
+185: guard_class(p0, 16437352, descr=<Guard0x3f2ecc8>) [p0, p1]
+205: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+209: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3f620e0>) [p0, p1]
debug_merge_point(0, 0, '(cdr l174)')
+229: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+233: guard_nonnull_class(p10, 16616448, descr=<Guard0x3f62140>) [p0, p1]
+253: guard_not_invalidated(descr=<Guard0x3f2ed10>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+253: p12 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+257: guard_class(p12, 16477696, descr=<Guard0x3f2ed58>) [p0, p1]
+270: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+281: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f2eda0>) [p0, p1]
+290: p16 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+301: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3f621a0>) [p0, p1]
+310: i18 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+310: p19 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(loop r) from (f (car l174))')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+314: p20 = new_with_vtable(descr=<SizeDescr 24>)
+355: p21 = new_with_vtable(descr=<SizeDescr 48>)
+366: setfield_gc(p20, p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+370: setfield_gc(p21, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+374: setfield_gc(p20, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+378: setfield_gc(p21, p19, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+382: setfield_gc(p21, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+393: setfield_gc(p21, ConstPtr(ptr22), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+397: setfield_gc(p21, 0, descr=<FieldS pycket.small_list.LetContSize1Fixed.inst_vals_fixed_0 40 pure>)
+405: jump(p20, p21, descr=TargetToken(66144320))
+432: --end of the loop--
[86a7cd6384703b] jit-log-opt-bridge}
[86a7cd6397fe57] {jit-backend
[86a7cd639a71ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329cb
[86a7cd639ab8b2] jit-backend-dump}
[86a7cd639b48e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329ce4 +0  1F000000
[86a7cd639b5d87] jit-backend-dump}
[86a7cd639b9591] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329da5 +0  1F000000
[86a7cd639ba358] jit-backend-dump}
[86a7cd639bd42a] {jit-backend-addr
bridge out of Guard 0x3e05400 has address 0x7f5e5e329ce0 to 0x7f5e5e329da0
       gc table: 0x7f5e5e329cb0
    jump target: 0x7f5e5e329ce0
         resops: 0x7f5e5e329cee
       failures: 0x7f5e5e329da0
            end: 0x7f5e5e329e6f
[86a7cd639bf6a3] jit-backend-addr}
[86a7cd639c2903] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329cfe +0  E1000000
[86a7cd639c3680] jit-backend-dump}
[86a7cd639c66b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329d0f +0  EC000000
[86a7cd639c737c] jit-backend-dump}
[86a7cd639ca231] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329d20 +0  F7000000
[86a7cd639caf37] jit-backend-dump}
[86a7cd639cde3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329d34 +0  FF000000
[86a7cd639ceb17] jit-backend-dump}
[86a7cd639d1b07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329d4c +0  03010000
[86a7cd639d27fb] jit-backend-dump}
[86a7cd639d5a02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327f0e +0  CE1D0000
[86a7cd639d66bf] jit-backend-dump}
[86a7cd639da4de] jit-backend}
[86a7cd639ddeaf] {jit-log-opt-bridge
# bridge out of Guard 0x3e05400 with 14 ops
[p0, p1]
+70: guard_class(p1, 16499664, descr=<Guard0x3f62200>) [p0, p1]
+82: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+86: guard_class(p3, 16499664, descr=<Guard0x3f2ede8>) [p0, p1]
+99: p5 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+103: guard_class(p5, 16477696, descr=<Guard0x3f2ee30>) [p0, p1]
+116: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+127: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3f2ee78>) [p0, p1]
+136: p9 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+140: guard_nonnull_class(p9, 16470384, descr=<Guard0x3f62260>) [p0, p1]
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+160: p11 = new_with_vtable(descr=<SizeDescr 24>)
+201: setfield_gc(p11, p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+205: setfield_gc(p11, p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+209: jump(p11, p0, descr=TargetToken(66144320))
+240: --end of the loop--
[86a7cd639eeabd] jit-log-opt-bridge}
[86a7cd63ac76a8] {jit-backend
[86a7cd63b337b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329fb
[86a7cd63b3dd93] jit-backend-dump}
[86a7cd63b4751b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a074 +0  1F000000
[86a7cd63b48845] jit-backend-dump}
[86a7cd63b4c184] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a2c5 +0  1F000000
[86a7cd63b4d061] jit-backend-dump}
[86a7cd63b5012d] {jit-backend-addr
bridge out of Guard 0x3ed5f58 has address 0x7f5e5e32a070 to 0x7f5e5e32a2c0
       gc table: 0x7f5e5e329fb0
    jump target: 0x7f5e5e32a070
         resops: 0x7f5e5e32a07e
       failures: 0x7f5e5e32a2c0
            end: 0x7f5e5e32a4df
[86a7cd63b522b4] jit-backend-addr}
[86a7cd63b558a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a08e +0  71020000
[86a7cd63b56671] jit-backend-dump}
[86a7cd63b59872] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a0a5 +0  76020000
[86a7cd63b5a541] jit-backend-dump}
[86a7cd63b5d4a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a0bc +0  7B020000
[86a7cd63b5e15b] jit-backend-dump}
[86a7cd63b60ff4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a0c8 +0  8B020000
[86a7cd63b61c6b] jit-backend-dump}
[86a7cd63b64adf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a0dc +0  93020000
[86a7cd63b65768] jit-backend-dump}
[86a7cd63b68b0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a0f2 +0  B5020000
[86a7cd63b6980c] jit-backend-dump}
[86a7cd63b6c889] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a10a +0  B9020000
[86a7cd63b6d527] jit-backend-dump}
[86a7cd63b70453] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a118 +0  C7020000
[86a7cd63b7114d] jit-backend-dump}
[86a7cd63b740a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a12c +0  CF020000
[86a7cd63b74d58] jit-backend-dump}
[86a7cd63b77bb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a141 +0  D6020000
[86a7cd63b78852] jit-backend-dump}
[86a7cd63b7b6ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a153 +0  E0020000
[86a7cd63b7c371] jit-backend-dump}
[86a7cd63b7f1dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a164 +0  EB020000
[86a7cd63b7fe87] jit-backend-dump}
[86a7cd63b82cda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a176 +0  F5020000
[86a7cd63b83972] jit-backend-dump}
[86a7cd63b8684f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a18d +0  FA020000
[86a7cd63b8751b] jit-backend-dump}
[86a7cd63b8a4c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a1a1 +0  02030000
[86a7cd63b8b1a6] jit-backend-dump}
[86a7cd63b8e00e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a1b7 +0  08030000
[86a7cd63b8ec97] jit-backend-dump}
[86a7cd63b91dce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e327a46 +0  26260000
[86a7cd63b92ab9] jit-backend-dump}
[86a7cd63b967e0] jit-backend}
[86a7cd63b9a08c] {jit-log-opt-bridge
# bridge out of Guard 0x3ed5f58 with 60 ops
[p0, p1]
+214: guard_class(p1, 16500016, descr=<Guard0x3f622c0>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+230: guard_nonnull_class(p3, 16470384, descr=<Guard0x3f62320>) [p0, p1]
+249: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+253: guard_nonnull_class(p5, 16470384, descr=<Guard0x3f62380>) [p0, p1]
+272: guard_class(p0, 16435920, descr=<Guard0x3f2eec0>) [p0, p1]
+284: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+295: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3f2ef08>) [p0, p1]
+304: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+308: guard_not_invalidated(descr=<Guard0x3f2ef50>) [p0, p1]
+308: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(list '* a (cons '+ AppRand3))')
+312: guard_class(p10, 16499664, descr=<Guard0x3f2ef98>) [p0, p1]
+326: p13 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+331: guard_nonnull_class(p13, 16470384, descr=<Guard0x3f623e0>) [p0, p1]
+350: guard_class(p11, 16435920, descr=<Guard0x3f2efe0>) [p0, p1]
+364: p16 = getfield_gc_r(p11, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+375: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3f2f028>) [p0, p1]
+384: p18 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+388: p19 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+392: guard_class(p18, 16499664, descr=<Guard0x3f2f070>) [p0, p1]
+405: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+409: guard_class(p21, 16499664, descr=<Guard0x3f2f0b8>) [p0, p1]
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+427: guard_class(p23, 16477696, descr=<Guard0x3f2f100>) [p0, p1]
+440: p25 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+444: guard_class(p19, 16437352, descr=<Guard0x3f2f148>) [p0, p1]
+458: p27 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+463: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3f62440>) [p0, p1]
debug_merge_point(0, 0, '(loop r) from (list '* a (cons '+ AppRand3))')
+481: p29 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+492: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x3f2f190>) [p0, p1]
+501: p31 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+505: guard_nonnull_class(p31, 16471056, descr=<Guard0x3f624a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+523: p33 = new_with_vtable(descr=<SizeDescr 24>)
+570: p34 = new_with_vtable(descr=<SizeDescr 48>)
+581: p35 = new_with_vtable(descr=<SizeDescr 24>)
+599: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+603: p37 = new_with_vtable(descr=<SizeDescr 24>)
+614: setfield_gc(p37, p13, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+618: p38 = new_with_vtable(descr=<SizeDescr 24>)
+629: p39 = new_with_vtable(descr=<SizeDescr 24>)
+654: setfield_gc(p39, ConstPtr(ptr40), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+658: p41 = new_with_vtable(descr=<SizeDescr 24>)
+669: setfield_gc(p41, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+673: setfield_gc(p41, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+677: setfield_gc(p39, p41, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+681: setfield_gc(p38, p39, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+692: setfield_gc(p38, ConstPtr(ptr42), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+696: setfield_gc(p37, p38, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+700: setfield_gc(p35, p37, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+711: setfield_gc(p34, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+715: setfield_gc(p34, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+719: setfield_gc(p34, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+723: setfield_gc(p33, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+735: setfield_gc(p33, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+740: setfield_gc(p34, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+744: setfield_gc(p34, p35, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+748: jump(p33, p34, descr=TargetToken(66144320))
+784: --end of the loop--
[86a7cd63c03ebb] jit-log-opt-bridge}
[86a7cd63c7d779] {jit-backend
[86a7cd63ca4b05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a
[86a7cd63caa3f7] jit-backend-dump}
[86a7cd63cb3558] {jit-backend-addr
Loop 14 ((loop r) from (list '* a (cons '+ AppRand3))) has address 0x7f5e5e32a61d to 0x7f5e5e32a6d0 (bootstrap 0x7f5e5e32a590)
       gc table: 0x7f5e5e32a560
       function: 0x7f5e5e32a590
         resops: 0x7f5e5e32a61d
       failures: 0x7f5e5e32a6d0
            end: 0x7f5e5e32a78b
[86a7cd63cb610a] jit-backend-addr}
[86a7cd63cb9cb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a634 +0  C7000000
[86a7cd63cbadcc] jit-backend-dump}
[86a7cd63cbdf62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a644 +0  D3000000
[86a7cd63cbee64] jit-backend-dump}
[86a7cd63cc55a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a654 +0  DF000000
[86a7cd63cc6403] jit-backend-dump}
[86a7cd63cc95d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a668 +0  E7000000
[86a7cd63cca2ca] jit-backend-dump}
[86a7cd63ccd350] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a67e +0  ED000000
[86a7cd63cce037] jit-backend-dump}
[86a7cd63cd1b7b] jit-backend}
[86a7cd63cd558a] {jit-log-opt-loop
# Loop 14 ((loop r) from (list '* a (cons '+ AppRand3))) : entry bridge with 15 ops
[p0, p1]
debug_merge_point(0, 0, '(loop r) from (list '* a (cons '+ AppRand3))')
+197: guard_class(p0, 16499664, descr=<Guard0x3f62500>) [p1, p0]
+216: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+220: guard_class(p3, 16499664, descr=<Guard0x3f2f1d8>) [p1, p0]
+232: p5 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+236: guard_class(p5, 16477696, descr=<Guard0x3f2f220>) [p1, p0]
+248: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+259: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3f2f268>) [p1, p0]
+268: p9 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+272: guard_nonnull_class(p9, 16470384, descr=<Guard0x3f62560>) [p1, p0]
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+290: p11 = new_with_vtable(descr=<SizeDescr 24>)
+334: setfield_gc(p11, p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+338: setfield_gc(p11, p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+342: jump(p11, p1, descr=TargetToken(66144320))
+368: --end of the loop--
[86a7cd63ce6341] jit-log-opt-loop}
[86a7cd63f81615] {jit-backend
[86a7cd63ff8a83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a8f0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB202000048FF0425C0C0F5028139100A01000F85000000004C8B79104983FF01720741813FB09700000F85000000004C8B35D0FEFFFF4D39F70F8400000000813AA81600000F85000000004C8B6A084983FD01720841817D00900F00000F85000000004D8B67104983FC01720841813C24509A00000F85000000004C8B510841813A40B400000F85000000004D8B4A104C8B05A7FEFFFF4D39C10F85000000004D8B42184C8B15A3FEFFFF4D39D00F85000000004D8B57084983FA01720741813AB09700000F85000000004D8B7A084983FF01720741813F382300000F85000000004C8B0585FEFFFF4D39C70F84000000004C8B0585FEFFFF4D39C70F84000000004C8B0585FEFFFF4D39C70F85000000004D8B42104983F8017207418138B09700000F85000000004D8B78104983FF01720741813FB09700000F85000000004D8B48084983F9017207418139382300000F85000000004C8B0558FEFFFF4D39C10F84000000004889CB48899530010000488B0C25F091F900488D9110010000483B14251092F9000F874E01000048891425F091F90048C701100A0100488D511848C702A81600004C8D423049C700101100004D896808498D782848C707100A0100488B35FDFDFFFF488977084C895710498978104C8D571849C702101100004D896A08498D7A2848C707100A010048895F084C89671049897A104C8BA5300100004D8962184C8B25C1FDFFFF4D8962204D8950184C8B15BAFDFFFF4D8950204C8D571849C702B0970000488B3DACFDFFFF49897A08498D7A1848C707509A000048C74708000000004C8D671849C70424B09700004D894C24084D897424104C89671049897A104C8979104C896A084C8B2D70FDFFFF4C896908488972104C8942184C8B0565FDFFFF4C8942204C89522848898D300100004889953801000049BB3084325E5E7F000041FFE3662E0F1F84000000000048C7442408FFFFFF0049BBA0A7325E5E7F00004C895D204D8D9B50BBFFFF41FFD3E928FDFFFF49BBE0A8325E5E7F00004C895D204D8D9B10C2FFFF41FFD3E99DFEFFFFFF35F7FBFFFF49BBB0A7325E5E7F000041534D8D9B50B8FFFF41FFE3FF35E3FBFFFF49BBC0A7325E5E7F000041534D8D9B40B8FFFF41FFE3FF35D7FBFFFF49BBD0A7325E5E7F000041534D8D9B30B8FFFF41FFE3FF35C3FBFFFF49BBE0A7325E5E7F000041534D8D9B20B8FFFF41FFE3FF35AFFBFFFF49BBF0A7325E5E7F000041534D8D9B10B8FFFF41FFE3FF359BFBFFFF49BB00A8325E5E7F000041534D8D9B00B8FFFF41FFE3FF3587FBFFFF49BB10A8325E5E7F000041534D8D9BF0B7FFFF41FFE3FF3573FBFFFF49BB20A8325E5E7F000041534D8D9BE0B7FFFF41FFE3FF3567FBFFFF49BB30A8325E5E7F000041534D8D9BD0B7FFFF41FFE3FF355BFBFFFF49BB40A8325E5E7F000041534D8D9BC0B7FFFF41FFE3FF3547FBFFFF49BB50A8325E5E7F000041534D8D9BB0B7FFFF41FFE3FF3533FBFFFF49BB60A8325E5E7F000041534D8D9BA0B7FFFF41FFE3FF3527FBFFFF49BB70A8325E5E7F000041534D8D9B90B7FFFF41FFE3FF351BFBFFFF49BB80A8325E5E7F000041534D8D9B80B7FFFF41FFE3FF350FFBFFFF49BB90A8325E5E7F000041534D8D9B70B7FFFF41FFE3FF35FBFAFFFF49BBA0A8325E5E7F000041534D8D9B60B7FFFF41FFE3FF35E7FAFFFF49BBB0A8325E5E7F000041534D8D9B50B7FFFF41FFE3FF35D3FAFFFF49BBC0A8325E5E7F000041534D8D9B40B7FFFF41FFE3FF35C7FAFFFF49BBD0A8325E5E7F000041534D8D9B30B7FFFF41FFE3
[86a7cd640038c2] jit-backend-dump}
[86a7cd6400de79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32a9f4 +0  1F000000
[86a7cd6400f2d8] jit-backend-dump}
[86a7cd640131dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32acb5 +0  1F000000
[86a7cd64014095] jit-backend-dump}
[86a7cd64017167] {jit-backend-addr
bridge out of Guard 0x3e05820 has address 0x7f5e5e32a9f0 to 0x7f5e5e32acb0
       gc table: 0x7f5e5e32a8f0
    jump target: 0x7f5e5e32a9f0
         resops: 0x7f5e5e32a9fe
       failures: 0x7f5e5e32acb0
            end: 0x7f5e5e32af07
[86a7cd6401954f] jit-backend-addr}
[86a7cd6401c9a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aa0e +0  E1020000
[86a7cd6401d7f5] jit-backend-dump}
[86a7cd64020856] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aa25 +0  E6020000
[86a7cd64021538] jit-backend-dump}
[86a7cd640243f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aa35 +0  F2020000
[86a7cd640250b2] jit-backend-dump}
[86a7cd64027fc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aa41 +0  02030000
[86a7cd64028ca8] jit-backend-dump}
[86a7cd6402bb6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aa59 +0  06030000
[86a7cd6402c841] jit-backend-dump}
[86a7cd6402f702] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aa71 +0  0A030000
[86a7cd640303d1] jit-backend-dump}
[86a7cd64033359] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aa82 +0  31030000
[86a7cd64034062] jit-backend-dump}
[86a7cd64036fe4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aa96 +0  39030000
[86a7cd64037d00] jit-backend-dump}
[86a7cd6403aae2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aaaa +0  41030000
[86a7cd6403b7c6] jit-backend-dump}
[86a7cd6403e6a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aac1 +0  46030000
[86a7cd6403f3e0] jit-backend-dump}
[86a7cd640421e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aad8 +0  4B030000
[86a7cd64042ece] jit-backend-dump}
[86a7cd64046018] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aae8 +0  57030000
[86a7cd64046ce1] jit-backend-dump}
[86a7cd64049b6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aaf8 +0  63030000
[86a7cd6404a865] jit-backend-dump}
[86a7cd6404d684] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ab08 +0  6F030000
[86a7cd6404e390] jit-backend-dump}
[86a7cd64051163] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ab1f +0  74030000
[86a7cd64051e35] jit-backend-dump}
[86a7cd64054bd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ab36 +0  79030000
[86a7cd640558b5] jit-backend-dump}
[86a7cd640586ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ab4d +0  7E030000
[86a7cd640593da] jit-backend-dump}
[86a7cd6405c230] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ab5d +0  8A030000
[86a7cd6405cf21] jit-backend-dump}
[86a7cd6405ff82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3284ac +0  40250000
[86a7cd64060cc2] jit-backend-dump}
[86a7cd64064a54] jit-backend}
[86a7cd64068631] {jit-log-opt-bridge
# bridge out of Guard 0x3e05820 with 104 ops
[p0, p1]
+278: guard_class(p1, 16499664, descr=<Guard0x3f625c0>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+294: guard_nonnull_class(p3, 16470384, descr=<Guard0x3f62620>) [p0, p1]
+320: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+323: guard_false(i6, descr=<Guard0x3f2f2b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
+329: guard_class(p0, 16437352, descr=<Guard0x3f2f2f8>) [p0, p1]
+341: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+345: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3f62680>) [p0, p1]
debug_merge_point(0, 0, '(cdr l174)')
+365: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+369: guard_nonnull_class(p10, 16471056, descr=<Guard0x3f626e0>) [p0, p1]
+389: guard_not_invalidated(descr=<Guard0x3f2f340>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+389: p12 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+393: guard_class(p12, 16477696, descr=<Guard0x3f2f388>) [p0, p1]
+406: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+417: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f2f3d0>) [p0, p1]
+426: p16 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+437: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3f62740>) [p0, p1]
+446: p18 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+450: guard_nonnull_class(p18, 16470384, descr=<Guard0x3f627a0>) [p0, p1]
+469: p20 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available)))))')
+469: p21 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+473: guard_nonnull_class(p21, ConstClass(W_Symbol), descr=<Guard0x3f62800>) [p0, p1]
+499: i24 = instance_ptr_eq(p21, ConstPtr(ptr23))
+502: guard_false(i24, descr=<Guard0x3f2f418>) [p0, p1]
debug_merge_point(0, 0, '(if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))')
+515: i26 = instance_ptr_eq(p21, ConstPtr(ptr25))
+518: guard_false(i26, descr=<Guard0x3f2f460>) [p0, p1]
debug_merge_point(0, 0, '(if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available)))')
+531: i28 = instance_ptr_eq(p21, ConstPtr(ptr27))
+534: guard_true(i28, descr=<Guard0x3f2f4a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3)))')
debug_merge_point(0, 0, '(map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))')
+540: p29 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+544: guard_nonnull_class(p29, 16470384, descr=<Guard0x3f62860>) [p0, p1]
debug_merge_point(0, 0, '(let ([if101 (if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)]) (if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l)))')
debug_merge_point(0, 0, '(if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)')
debug_merge_point(0, 0, '(let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f))')
debug_merge_point(0, 0, '(procedure-arity-includes? f 1)')
debug_merge_point(0, 0, '(if if100 (list? l) #f)')
debug_merge_point(0, 0, '(list? l)')
debug_merge_point(0, 0, '(if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l))')
debug_merge_point(0, 0, '(let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l))')
debug_merge_point(0, 0, '(lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))')
debug_merge_point(0, 0, '(loop l)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop l)')
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
debug_merge_point(0, 0, '(cdr l174)')
+563: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+567: guard_nonnull_class(p31, 16470384, descr=<Guard0x3f628c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+586: p33 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+590: guard_nonnull_class(p33, ConstClass(W_Symbol), descr=<Guard0x3f62920>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))')
debug_merge_point(0, 0, '(deriv a4828)')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
+616: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+619: guard_false(i36, descr=<Guard0x3f2f4f0>) [p0, p1]
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+625: p37 = new_with_vtable(descr=<SizeDescr 24>)
+679: p38 = new_with_vtable(descr=<SizeDescr 48>)
+690: p39 = new_with_vtable(descr=<SizeDescr 40>)
+701: setfield_gc(p39, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+705: p40 = new_with_vtable(descr=<SizeDescr 24>)
+723: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+727: setfield_gc(p40, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+731: setfield_gc(p39, p40, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+735: p42 = new_with_vtable(descr=<SizeDescr 40>)
+746: setfield_gc(p42, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+750: p43 = new_with_vtable(descr=<SizeDescr 24>)
+761: setfield_gc(p43, p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+765: setfield_gc(p43, p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+769: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+773: setfield_gc(p42, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+791: setfield_gc(p42, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+795: setfield_gc(p39, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+806: setfield_gc(p39, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+810: p46 = new_with_vtable(descr=<SizeDescr 24>)
+828: setfield_gc(p46, ConstPtr(ptr47), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+832: p48 = new_with_vtable(descr=<SizeDescr 24>)
+843: setfield_gc(p48, 0, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+851: p50 = new_with_vtable(descr=<SizeDescr 24>)
+863: setfield_gc(p50, p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+868: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+873: setfield_gc(p48, p50, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+877: setfield_gc(p46, p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+881: setfield_gc(p37, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+885: setfield_gc(p38, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+896: setfield_gc(p37, ConstPtr(ptr52), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+900: setfield_gc(p38, ConstPtr(ptr53), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+904: setfield_gc(p38, p39, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+915: setfield_gc(p38, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+919: setfield_gc(p38, p46, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+923: jump(p37, p38, descr=TargetToken(66144320))
+960: --end of the loop--
[86a7cd640b9f4b] jit-log-opt-bridge}
[86a7cd641d5107] {jit-backend
[86a7cd6424327b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b
[86a7cd6424cd99] jit-backend-dump}
[86a7cd64257208] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b0d4 +0  1F000000
[86a7cd6425857c] jit-backend-dump}
[86a7cd6425c187] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b315 +0  1F000000
[86a7cd6425d04b] jit-backend-dump}
[86a7cd6426014c] {jit-backend-addr
bridge out of Guard 0x3f2e968 has address 0x7f5e5e32b0d0 to 0x7f5e5e32b310
       gc table: 0x7f5e5e32b020
    jump target: 0x7f5e5e32b0d0
         resops: 0x7f5e5e32b0de
       failures: 0x7f5e5e32b310
            end: 0x7f5e5e32b4db
[86a7cd6426254f] jit-backend-addr}
[86a7cd64265bb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b0ee +0  61020000
[86a7cd6426694f] jit-backend-dump}
[86a7cd64269adc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b102 +0  69020000
[86a7cd6426a783] jit-backend-dump}
[86a7cd6426d83d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b117 +0  8C020000
[86a7cd6426e50f] jit-backend-dump}
[86a7cd642714d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b12f +0  90020000
[86a7cd642721bf] jit-backend-dump}
[86a7cd64275193] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b13c +0  9F020000
[86a7cd64275e6e] jit-backend-dump}
[86a7cd64278d4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b150 +0  A7020000
[86a7cd642799f2] jit-backend-dump}
[86a7cd6427c8de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b166 +0  AD020000
[86a7cd6427d586] jit-backend-dump}
[86a7cd642804fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b178 +0  B7020000
[86a7cd642811a3] jit-backend-dump}
[86a7cd64284092] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b189 +0  C2020000
[86a7cd64284d4b] jit-backend-dump}
[86a7cd64287bae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b19a +0  CD020000
[86a7cd64288852] jit-backend-dump}
[86a7cd6428b753] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b1b1 +0  D2020000
[86a7cd6428c44d] jit-backend-dump}
[86a7cd6428f288] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b1c5 +0  DA020000
[86a7cd6428ff07] jit-backend-dump}
[86a7cd64292d0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b1dc +0  DF020000
[86a7cd642939b8] jit-backend-dump}
[86a7cd64296b02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e329452 +0  7A1C0000
[86a7cd64297817] jit-backend-dump}
[86a7cd6429b58e] jit-backend}
[86a7cd6429efff] {jit-log-opt-bridge
# bridge out of Guard 0x3f2e968 with 58 ops
[p0, p1, p2, p3, p4]
+198: guard_class(p0, 16435920, descr=<Guard0x3f62980>) [p0, p1, p2, p3, p4]
+210: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+221: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3f2f538>) [p0, p1, p2, p3, p4]
+230: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+234: guard_not_invalidated(descr=<Guard0x3f2f580>) [p0, p1, p2, p3, p4]
+234: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(list '* a (cons '+ AppRand3))')
+238: guard_class(p8, 16499664, descr=<Guard0x3f2f5c8>) [p0, p1, p2, p3, p4]
+251: p11 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+255: guard_nonnull_class(p11, 16470384, descr=<Guard0x3f629e0>) [p0, p1, p2, p3, p4]
+275: guard_class(p9, 16435920, descr=<Guard0x3f2f610>) [p0, p1, p2, p3, p4]
+288: p14 = getfield_gc_r(p9, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+299: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f2f658>) [p0, p1, p2, p3, p4]
+308: p16 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+312: p17 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+316: guard_class(p16, 16499664, descr=<Guard0x3f2f6a0>) [p0, p1, p2, p3, p4]
+330: p19 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+335: guard_class(p19, 16499664, descr=<Guard0x3f2f6e8>) [p0, p1, p2, p3, p4]
+348: p21 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+352: guard_class(p21, 16477696, descr=<Guard0x3f2f730>) [p0, p1, p2, p3, p4]
+365: p23 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p17, 16435920, descr=<Guard0x3f2f778>) [p0, p1, p2, p3, p4]
+382: p25 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+386: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x3f62a40>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop r) from (list '* a (cons '+ AppRand3))')
+405: p27 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+416: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x3f2f7c0>) [p0, p1, p2, p3, p4]
+425: p29 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+430: guard_nonnull_class(p29, 16470384, descr=<Guard0x3f62aa0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+448: p31 = new_with_vtable(descr=<SizeDescr 24>)
+495: p32 = new_with_vtable(descr=<SizeDescr 48>)
+506: p33 = new_with_vtable(descr=<SizeDescr 24>)
+524: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+528: p35 = new_with_vtable(descr=<SizeDescr 24>)
+539: setfield_gc(p35, p11, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+543: p36 = new_with_vtable(descr=<SizeDescr 24>)
+555: p37 = new_with_vtable(descr=<SizeDescr 24>)
+580: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+584: p39 = new_with_vtable(descr=<SizeDescr 24>)
+595: setfield_gc(p39, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+613: p40 = new_with_vtable(descr=<SizeDescr 24>)
+624: setfield_gc(p40, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+628: setfield_gc(p40, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+632: setfield_gc(p39, p40, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+636: setfield_gc(p37, p39, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+640: setfield_gc(p36, p37, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+651: setfield_gc(p36, ConstPtr(ptr41), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+655: setfield_gc(p35, p36, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+659: setfield_gc(p33, p35, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+670: setfield_gc(p32, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+681: setfield_gc(p32, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+685: setfield_gc(p32, p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+689: setfield_gc(p31, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+700: setfield_gc(p31, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+704: setfield_gc(p32, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+708: setfield_gc(p32, p33, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+712: jump(p31, p32, descr=TargetToken(66144320))
+752: --end of the loop--
[86a7cd642d07f8] jit-log-opt-bridge}
[86a7cd6440b017] {jit-backend
[86a7cd64458ab4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b5d
[86a7cd644606e2] jit-backend-dump}
[86a7cd6446a7e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b664 +0  1F000000
[86a7cd6446bca8] jit-backend-dump}
[86a7cd6446f847] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b815 +0  1F000000
[86a7cd6447068f] jit-backend-dump}
[86a7cd6447386b] {jit-backend-addr
bridge out of Guard 0x3e05d00 has address 0x7f5e5e32b660 to 0x7f5e5e32b810
       gc table: 0x7f5e5e32b5d0
    jump target: 0x7f5e5e32b660
         resops: 0x7f5e5e32b66e
       failures: 0x7f5e5e32b810
            end: 0x7f5e5e32b9a3
[86a7cd64475b18] jit-backend-addr}
[86a7cd64478edb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b67e +0  D1010000
[86a7cd64479c77] jit-backend-dump}
[86a7cd6447cc51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b695 +0  D6010000
[86a7cd6447d933] jit-backend-dump}
[86a7cd64480920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b6a5 +0  E2010000
[86a7cd644815d3] jit-backend-dump}
[86a7cd64484524] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b6b1 +0  F2010000
[86a7cd644851bf] jit-backend-dump}
[86a7cd644881bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b6c9 +0  F6010000
[86a7cd64488ea9] jit-backend-dump}
[86a7cd6448be40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b6e1 +0  FA010000
[86a7cd6448cade] jit-backend-dump}
[86a7cd6448fb43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b6f2 +0  21020000
[86a7cd64490812] jit-backend-dump}
[86a7cd644937d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b706 +0  29020000
[86a7cd64494441] jit-backend-dump}
[86a7cd644973c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b71a +0  31020000
[86a7cd64498021] jit-backend-dump}
[86a7cd6449af47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b731 +0  36020000
[86a7cd6449bbae] jit-backend-dump}
[86a7cd6449eb79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b745 +0  3E020000
[86a7cd6449f802] jit-backend-dump}
[86a7cd644a2992] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e328e62 +0  FA270000
[86a7cd644a3608] jit-backend-dump}
[86a7cd644a742d] jit-backend}
[86a7cd644aae67] {jit-log-opt-bridge
# bridge out of Guard 0x3e05d00 with 53 ops
[p0, p1]
+166: guard_class(p1, 16499664, descr=<Guard0x3f62b00>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+182: guard_nonnull_class(p3, 16470384, descr=<Guard0x3f62b60>) [p0, p1]
+208: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+211: guard_false(i6, descr=<Guard0x3f2f808>) [p0, p1]
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
+217: guard_class(p0, 16435920, descr=<Guard0x3f2f850>) [p0, p1]
+229: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+233: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3f62bc0>) [p0, p1]
debug_merge_point(0, 0, '(cdr l174)')
+253: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+257: guard_nonnull_class(p10, 16470384, descr=<Guard0x3f62c20>) [p0, p1]
+277: guard_not_invalidated(descr=<Guard0x3f2f898>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+277: p12 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+281: guard_class(p12, 16477696, descr=<Guard0x3f2f8e0>) [p0, p1]
+294: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+305: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f2f928>) [p0, p1]
+314: p16 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+325: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3f62c80>) [p0, p1]
+334: p18 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+338: guard_nonnull_class(p18, ConstClass(W_Symbol), descr=<Guard0x3f62ce0>) [p0, p1]
+357: p20 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))')
debug_merge_point(0, 0, '(deriv a4828)')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
+368: i22 = instance_ptr_eq(p18, ConstPtr(ptr21))
+371: guard_false(i22, descr=<Guard0x3f2f970>) [p0, p1]
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+377: p23 = new_with_vtable(descr=<SizeDescr 24>)
+421: p24 = new_with_vtable(descr=<SizeDescr 48>)
+432: p25 = new_with_vtable(descr=<SizeDescr 24>)
+450: setfield_gc(p25, ConstPtr(ptr26), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+454: p27 = new_with_vtable(descr=<SizeDescr 24>)
+465: setfield_gc(p27, 0, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+473: p29 = new_with_vtable(descr=<SizeDescr 24>)
+484: setfield_gc(p29, p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+488: setfield_gc(p29, ConstPtr(ptr30), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+492: setfield_gc(p27, p29, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+496: setfield_gc(p25, p27, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+500: setfield_gc(p23, p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+504: setfield_gc(p24, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+508: setfield_gc(p23, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+512: setfield_gc(p24, p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+516: setfield_gc(p24, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+527: setfield_gc(p24, ConstPtr(ptr31), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+531: setfield_gc(p24, p25, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+535: jump(p23, p24, descr=TargetToken(66144320))
+576: --end of the loop--
[86a7cd644d7698] jit-log-opt-bridge}
[86a7cd6461c66a] {jit-backend
[86a7cd64676750] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ba
[86a7cd6467d89c] jit-backend-dump}
[86a7cd6468722c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ba94 +0  1F000000
[86a7cd64688433] jit-backend-dump}
[86a7cd6468bf18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bc45 +0  1F000000
[86a7cd6468cd01] jit-backend-dump}
[86a7cd6468ff27] {jit-backend-addr
bridge out of Guard 0x3e05940 has address 0x7f5e5e32ba90 to 0x7f5e5e32bc40
       gc table: 0x7f5e5e32ba30
    jump target: 0x7f5e5e32ba90
         resops: 0x7f5e5e32ba9e
       failures: 0x7f5e5e32bc40
            end: 0x7f5e5e32bd2b
[86a7cd646921cd] jit-backend-addr}
[86a7cd646956ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bab4 +0  CB010000
[86a7cd64696442] jit-backend-dump}
[86a7cd64699987] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bacf +0  E8010000
[86a7cd6469a69c] jit-backend-dump}
[86a7cd6469d7d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bae3 +0  F0010000
[86a7cd6469e4e9] jit-backend-dump}
[86a7cd646a14ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bafa +0  F5010000
[86a7cd646a2210] jit-backend-dump}
[86a7cd646a848e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bb0e +0  FD010000
[86a7cd646a931b] jit-backend-dump}
[86a7cd646acb5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32854a +0  42350000
[86a7cd646ad8b5] jit-backend-dump}
[86a7cd646b1815] jit-backend}
[86a7cd646b5447] {jit-log-opt-bridge
# bridge out of Guard 0x3e05940 with 55 ops
[p0, p1, p2, p3, p4, p5, p6]
+118: guard_nonnull_class(p0, 16616448, descr=<Guard0x3f62d40>) [p0, p1, p2, p3, p4, p5, p6]
+136: guard_not_invalidated(descr=<Guard0x3f2f9b8>) [p0, p1, p2, p3, p4, p5, p6]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+136: p8 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+154: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3f2fa00>) [p0, p1, p2, p3, p4, p5, p6]
+163: p10 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+174: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3f62da0>) [p0, p1, p2, p3, p4, p5, p6]
+183: p12 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+187: guard_nonnull_class(p12, ConstClass(W_Symbol), descr=<Guard0x3f62e00>) [p0, p1, p2, p3, p4, p5, p6]
+206: p14 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))')
debug_merge_point(0, 0, '(deriv a4828)')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
+217: i16 = instance_ptr_eq(p12, ConstPtr(ptr15))
+220: guard_true(i16, descr=<Guard0x3f2fa48>) [p0, p1, p2, p3, p4, p5, p6]
debug_merge_point(0, 0, '1')
debug_merge_point(0, 0, '(list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+226: p17 = new_with_vtable(descr=<SizeDescr 24>)
+280: p18 = new_with_vtable(descr=<SizeDescr 48>)
+291: p19 = new_with_vtable(descr=<SizeDescr 48>)
+302: setfield_gc(p19, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+306: setfield_gc(p19, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+310: setfield_gc(p19, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+321: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+325: p21 = new_with_vtable(descr=<SizeDescr 24>)
+343: setfield_gc(p21, ConstPtr(ptr22), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+347: p23 = new_with_vtable(descr=<SizeDescr 24>)
+358: setfield_gc(p23, 1, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+366: p25 = new_with_vtable(descr=<SizeDescr 24>)
+377: setfield_gc(p25, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+388: setfield_gc(p25, ConstPtr(ptr26), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+392: setfield_gc(p23, p25, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+396: setfield_gc(p21, p23, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+400: setfield_gc(p19, p21, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+404: p27 = new_with_vtable(descr=<SizeDescr 24>)
+415: setfield_gc(p27, ConstPtr(ptr28), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+419: p29 = new_with_vtable(descr=<SizeDescr 24>)
+430: setfield_gc(p29, 1, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+438: p31 = new_with_vtable(descr=<SizeDescr 24>)
+449: setfield_gc(p31, p12, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+453: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+457: setfield_gc(p29, p31, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+461: setfield_gc(p27, p29, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+465: setfield_gc(p17, p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+469: setfield_gc(p17, p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+480: setfield_gc(p18, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+484: setfield_gc(p18, p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+488: setfield_gc(p18, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+492: setfield_gc(p18, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+496: setfield_gc(p18, p27, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+500: jump(p17, p18, descr=TargetToken(66144320))
+528: --end of the loop--
[86a7cd646e3c72] jit-log-opt-bridge}
[86a7cd6479f8ea] {jit-backend
[86a7cd647d04b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bdd
[86a7cd647d696a] jit-backend-dump}
[86a7cd647e00fb] {jit-backend-addr
Loop 19 ((cons AppRand183 AppRand184) from (loop r)) has address 0x7f5e5e32be9d to 0x7f5e5e32bfa0 (bootstrap 0x7f5e5e32be10)
       gc table: 0x7f5e5e32bdd0
       function: 0x7f5e5e32be10
         resops: 0x7f5e5e32be9d
       failures: 0x7f5e5e32bfa0
            end: 0x7f5e5e32c093
[86a7cd647e2a37] jit-backend-addr}
[86a7cd647e6813] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32beb4 +0  17010000
[86a7cd647e7a3f] jit-backend-dump}
[86a7cd647eabf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32beca +0  1D010000
[86a7cd647eb984] jit-backend-dump}
[86a7cd647eea03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bee0 +0  23010000
[86a7cd647ef706] jit-backend-dump}
[86a7cd647f272a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bef3 +0  2C010000
[86a7cd647f33d5] jit-backend-dump}
[86a7cd647f647c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bf07 +0  34010000
[86a7cd647f7136] jit-backend-dump}
[86a7cd647fa26a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32bf21 +0  52010000
[86a7cd647faf3c] jit-backend-dump}
[86a7cd647fe93f] jit-backend}
[86a7cd6480232c] {jit-log-opt-loop
# Loop 19 ((cons AppRand183 AppRand184) from (loop r)) : entry bridge with 23 ops
[p0, p1]
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (loop r)')
+213: guard_class(p0, 16500016, descr=<Guard0x3f62e60>) [p1, p0]
+232: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+236: guard_nonnull_class(p3, 16470384, descr=<Guard0x3f62ec0>) [p1, p0]
+254: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+258: guard_nonnull_class(p5, 16616448, descr=<Guard0x3f62f20>) [p1, p0]
+276: guard_class(p1, 16437352, descr=<Guard0x3f2fa90>) [p1, p0]
+295: p8 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+306: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3f2fad8>) [p1, p0]
+315: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+319: guard_not_invalidated(descr=<Guard0x3f2fb20>) [p1, p0]
+319: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+323: guard_nonnull_class(p11, 16470384, descr=<Guard0x3f62f80>) [p1, p0]
+341: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)')
+345: p14 = new_with_vtable(descr=<SizeDescr 32>)
+392: p15 = new_with_vtable(descr=<SizeDescr 24>)
+403: setfield_gc(p15, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+407: setfield_gc(p15, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+411: setfield_gc(p14, p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+415: setfield_gc(p14, p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+419: setfield_gc(p14, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+423: jump(p14, p13, descr=TargetToken(65680096))
+464: --end of the loop--
[86a7cd6481906a] jit-log-opt-loop}
[86a7cd64a29a6c] {jit-backend
[86a7cd64aa33f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c
[86a7cd64aaf18a] jit-backend-dump}
[86a7cd64ab95c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c304 +0  1F000000
[86a7cd64aba9a1] jit-backend-dump}
[86a7cd64abe87e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c5c5 +0  1F000000
[86a7cd64abf71b] jit-backend-dump}
[86a7cd64ac2922] {jit-backend-addr
bridge out of Guard 0x3e05880 has address 0x7f5e5e32c300 to 0x7f5e5e32c5c0
       gc table: 0x7f5e5e32c200
    jump target: 0x7f5e5e32c300
         resops: 0x7f5e5e32c30e
       failures: 0x7f5e5e32c5c0
            end: 0x7f5e5e32c817
[86a7cd64ac4c43] jit-backend-addr}
[86a7cd64ac7f73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c31e +0  E1020000
[86a7cd64ac8ce4] jit-backend-dump}
[86a7cd64acbcd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c335 +0  E6020000
[86a7cd64acc97e] jit-backend-dump}
[86a7cd64acf8df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c345 +0  F2020000
[86a7cd64ad05e2] jit-backend-dump}
[86a7cd64ad3511] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c351 +0  02030000
[86a7cd64ad41f2] jit-backend-dump}
[86a7cd64ad70fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c369 +0  06030000
[86a7cd64ad7dc9] jit-backend-dump}
[86a7cd64adad42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c381 +0  0A030000
[86a7cd64adba11] jit-backend-dump}
[86a7cd64adead7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c392 +0  31030000
[86a7cd64adf7b2] jit-backend-dump}
[86a7cd64ae27a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c3a6 +0  39030000
[86a7cd64ae3450] jit-backend-dump}
[86a7cd64ae637f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c3ba +0  41030000
[86a7cd64ae7051] jit-backend-dump}
[86a7cd64ae9ea7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c3d1 +0  46030000
[86a7cd64aeab79] jit-backend-dump}
[86a7cd64aed9ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c3e8 +0  4B030000
[86a7cd64aee6df] jit-backend-dump}
[86a7cd64af163c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c3f8 +0  57030000
[86a7cd64af22dd] jit-backend-dump}
[86a7cd64af51c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c408 +0  63030000
[86a7cd64af5e9e] jit-backend-dump}
[86a7cd64af8e7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c418 +0  6F030000
[86a7cd64af9b63] jit-backend-dump}
[86a7cd64afca3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c42f +0  74030000
[86a7cd64afd709] jit-backend-dump}
[86a7cd64b00691] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c446 +0  79030000
[86a7cd64b01332] jit-backend-dump}
[86a7cd64b041ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c45d +0  7E030000
[86a7cd64b04f06] jit-backend-dump}
[86a7cd64b07ea0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c46d +0  8A030000
[86a7cd64b08b8e] jit-backend-dump}
[86a7cd64b0bd4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3284e4 +0  183E0000
[86a7cd64b0ca86] jit-backend-dump}
[86a7cd64b108f4] jit-backend}
[86a7cd64b144dd] {jit-log-opt-bridge
# bridge out of Guard 0x3e05880 with 104 ops
[p0, p1]
+278: guard_class(p1, 16499664, descr=<Guard0x3f62fe0>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+294: guard_nonnull_class(p3, 16470384, descr=<Guard0x3f63040>) [p0, p1]
+320: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+323: guard_false(i6, descr=<Guard0x3f2fb68>) [p0, p1]
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
+329: guard_class(p0, 16437352, descr=<Guard0x3f2fbb0>) [p0, p1]
+341: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+345: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3f630a0>) [p0, p1]
debug_merge_point(0, 0, '(cdr l174)')
+365: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+369: guard_nonnull_class(p10, 16470384, descr=<Guard0x3f63100>) [p0, p1]
+389: guard_not_invalidated(descr=<Guard0x3f2fbf8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+389: p12 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+393: guard_class(p12, 16477696, descr=<Guard0x3f2fc40>) [p0, p1]
+406: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+417: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f2fc88>) [p0, p1]
+426: p16 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+437: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3f63160>) [p0, p1]
+446: p18 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+450: guard_nonnull_class(p18, 16470384, descr=<Guard0x3f631c0>) [p0, p1]
+469: p20 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available)))))')
+469: p21 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+473: guard_nonnull_class(p21, ConstClass(W_Symbol), descr=<Guard0x3f63220>) [p0, p1]
+499: i24 = instance_ptr_eq(p21, ConstPtr(ptr23))
+502: guard_false(i24, descr=<Guard0x3f2fcd0>) [p0, p1]
debug_merge_point(0, 0, '(if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))')
+515: i26 = instance_ptr_eq(p21, ConstPtr(ptr25))
+518: guard_false(i26, descr=<Guard0x3f2fd18>) [p0, p1]
debug_merge_point(0, 0, '(if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available)))')
+531: i28 = instance_ptr_eq(p21, ConstPtr(ptr27))
+534: guard_true(i28, descr=<Guard0x3f2fd60>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3)))')
debug_merge_point(0, 0, '(map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))')
+540: p29 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+544: guard_nonnull_class(p29, 16470384, descr=<Guard0x3f63280>) [p0, p1]
debug_merge_point(0, 0, '(let ([if101 (if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)]) (if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l)))')
debug_merge_point(0, 0, '(if (procedure? f) (let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f)) #f)')
debug_merge_point(0, 0, '(let ([if100 (procedure-arity-includes? f 1)]) (if if100 (list? l) #f))')
debug_merge_point(0, 0, '(procedure-arity-includes? f 1)')
debug_merge_point(0, 0, '(if if100 (list? l) #f)')
debug_merge_point(0, 0, '(list? l)')
debug_merge_point(0, 0, '(if if101 (let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l)) (map f l))')
debug_merge_point(0, 0, '(let ([loop (lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))]) (loop l))')
debug_merge_point(0, 0, '(lambda (l174) (if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))))')
debug_merge_point(0, 0, '(loop l)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop l)')
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
debug_merge_point(0, 0, '(cdr l174)')
+563: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+567: guard_nonnull_class(p31, 16470384, descr=<Guard0x3f632e0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+586: p33 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+590: guard_nonnull_class(p33, ConstClass(W_Symbol), descr=<Guard0x3f63340>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))')
debug_merge_point(0, 0, '(deriv a4828)')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
+616: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+619: guard_false(i36, descr=<Guard0x3f2fda8>) [p0, p1]
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+625: p37 = new_with_vtable(descr=<SizeDescr 24>)
+679: p38 = new_with_vtable(descr=<SizeDescr 48>)
+690: p39 = new_with_vtable(descr=<SizeDescr 40>)
+701: setfield_gc(p39, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+705: p40 = new_with_vtable(descr=<SizeDescr 24>)
+723: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+727: setfield_gc(p40, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+731: setfield_gc(p39, p40, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+735: p42 = new_with_vtable(descr=<SizeDescr 40>)
+746: setfield_gc(p42, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+750: p43 = new_with_vtable(descr=<SizeDescr 24>)
+761: setfield_gc(p43, p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+765: setfield_gc(p43, p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+769: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+773: setfield_gc(p42, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+791: setfield_gc(p42, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+795: setfield_gc(p39, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+806: setfield_gc(p39, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+810: p46 = new_with_vtable(descr=<SizeDescr 24>)
+828: setfield_gc(p46, ConstPtr(ptr47), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+832: p48 = new_with_vtable(descr=<SizeDescr 24>)
+843: setfield_gc(p48, 0, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+851: p50 = new_with_vtable(descr=<SizeDescr 24>)
+863: setfield_gc(p50, p33, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+868: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+873: setfield_gc(p48, p50, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+877: setfield_gc(p46, p48, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+881: setfield_gc(p37, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+885: setfield_gc(p38, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+896: setfield_gc(p37, ConstPtr(ptr52), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+900: setfield_gc(p38, ConstPtr(ptr53), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+904: setfield_gc(p38, p39, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+915: setfield_gc(p38, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+919: setfield_gc(p38, p46, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+923: jump(p37, p38, descr=TargetToken(66144320))
+960: --end of the loop--
[86a7cd64b66c01] jit-log-opt-bridge}
[86a7cd64c09a66] {jit-backend
[86a7cd64c3e0fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c8e
[86a7cd64c44954] jit-backend-dump}
[86a7cd64c4e3ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c944 +0  1F000000
[86a7cd64c4f6ad] jit-backend-dump}
[86a7cd64c52fe6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ca75 +0  1F000000
[86a7cd64c53dbc] jit-backend-dump}
[86a7cd64c5705f] {jit-backend-addr
bridge out of Guard 0x3f62080 has address 0x7f5e5e32c940 to 0x7f5e5e32ca70
       gc table: 0x7f5e5e32c8e0
    jump target: 0x7f5e5e32c940
         resops: 0x7f5e5e32c94e
       failures: 0x7f5e5e32ca70
            end: 0x7f5e5e32cbcb
[86a7cd64c5916f] jit-backend-addr}
[86a7cd64c5c425] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c95e +0  51010000
[86a7cd64c5d156] jit-backend-dump}
[86a7cd64c6028d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c96b +0  60010000
[86a7cd64c60f59] jit-backend-dump}
[86a7cd64c64056] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c97b +0  6C010000
[86a7cd64c64d3e] jit-backend-dump}
[86a7cd64c67ddc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c98f +0  90010000
[86a7cd64c68a83] jit-backend-dump}
[86a7cd64c6ba30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c9a3 +0  98010000
[86a7cd64c6c6a6] jit-backend-dump}
[86a7cd64c6f58f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c9bb +0  9C010000
[86a7cd64c70209] jit-backend-dump}
[86a7cd64c730d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c9cc +0  A7010000
[86a7cd64c73d59] jit-backend-dump}
[86a7cd64c76c48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c9d9 +0  B6010000
[86a7cd64c778e0] jit-backend-dump}
[86a7cd64c7a7a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c9f4 +0  B7010000
[86a7cd64c7b46a] jit-backend-dump}
[86a7cd64c7e622] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e3299c5 +0  772F0000
[86a7cd64c7f340] jit-backend-dump}
[86a7cd64c830fd] jit-backend}
[86a7cd64c86a98] {jit-log-opt-bridge
# bridge out of Guard 0x3f62080 with 31 ops
[p0, p1]
+118: guard_class(p1, 16499664, descr=<Guard0x3f633a0>) [p0, p1]
+130: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+134: guard_nonnull(p3, descr=<Guard0x3f2fdf0>) [p0, p1]
+150: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+153: guard_true(i5, descr=<Guard0x3f2fe38>) [p0, p1]
debug_merge_point(0, 0, 'null')
+159: guard_not_invalidated(descr=<Guard0x3f2fe80>) [p0, p1]
+159: guard_class(p0, 16437352, descr=<Guard0x3f2fec8>) [p0, p1]
+179: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+190: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3f2ff10>) [p0, p1]
+199: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+199: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+203: guard_nonnull_class(p10, 16470384, descr=<Guard0x3f63400>) [p0, p1]
+223: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (loop r)')
+227: guard_class(p12, 16437352, descr=<Guard0x3f2ff58>) [p0, p1]
+240: p14 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+244: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f2ffa0>) [p0, p1]
+253: p16 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+257: p17 = getfield_gc_r(p12, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+261: guard_nonnull_class(p17, 16470384, descr=<Guard0x3f63460>) [p0, p1]
+280: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)')
+284: p20 = new_with_vtable(descr=<SizeDescr 32>)
+328: p21 = new_with_vtable(descr=<SizeDescr 24>)
+339: setfield_gc(p21, p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+343: setfield_gc(p21, ConstPtr(ptr22), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+347: setfield_gc(p20, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+351: setfield_gc(p20, p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+355: setfield_gc(p20, p21, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+359: jump(p20, p19, descr=TargetToken(65680096))
+400: --end of the loop--
[86a7cd64ca32fb] jit-log-opt-bridge}
[86a7cd64e00678] {jit-backend
[86a7cd64e6a723] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32cce
[86a7cd64e72976] jit-backend-dump}
[86a7cd64e7c23c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32cd94 +0  1F000000
[86a7cd64e7d4d0] jit-backend-dump}
[86a7cd64e80e4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32cfd5 +0  1F000000
[86a7cd64e81c63] jit-backend-dump}
[86a7cd64e84dd1] {jit-backend-addr
bridge out of Guard 0x3f2f778 has address 0x7f5e5e32cd90 to 0x7f5e5e32cfd0
       gc table: 0x7f5e5e32cce0
    jump target: 0x7f5e5e32cd90
         resops: 0x7f5e5e32cd9e
       failures: 0x7f5e5e32cfd0
            end: 0x7f5e5e32d19b
[86a7cd64e8702b] jit-backend-addr}
[86a7cd64e8a3cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32cdae +0  61020000
[86a7cd64e8b193] jit-backend-dump}
[86a7cd64e8e2ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32cdc2 +0  69020000
[86a7cd64e8ef1f] jit-backend-dump}
[86a7cd64e92139] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32cdd7 +0  8C020000
[86a7cd64e92e23] jit-backend-dump}
[86a7cd64e95e8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32cdef +0  90020000
[86a7cd64e96b29] jit-backend-dump}
[86a7cd64e99aae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32cdfc +0  9F020000
[86a7cd64e9a6ea] jit-backend-dump}
[86a7cd64e9d672] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ce10 +0  A7020000
[86a7cd64e9e2ba] jit-backend-dump}
[86a7cd64ea1230] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ce26 +0  AD020000
[86a7cd64ea1e72] jit-backend-dump}
[86a7cd64ea4d8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ce38 +0  B7020000
[86a7cd64ea59d5] jit-backend-dump}
[86a7cd64ea88ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ce49 +0  C2020000
[86a7cd64ea9531] jit-backend-dump}
[86a7cd64eac4f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ce5a +0  CD020000
[86a7cd64ead157] jit-backend-dump}
[86a7cd64eb0096] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ce71 +0  D2020000
[86a7cd64eb0cde] jit-backend-dump}
[86a7cd64eb3c04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ce85 +0  DA020000
[86a7cd64eb484d] jit-backend-dump}
[86a7cd64eb779e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32ce9c +0  DF020000
[86a7cd64eb83e9] jit-backend-dump}
[86a7cd64ebb55e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32b19a +0  F21B0000
[86a7cd64ebc1f3] jit-backend-dump}
[86a7cd64ec0064] jit-backend}
[86a7cd64ec3ad5] {jit-log-opt-bridge
# bridge out of Guard 0x3f2f778 with 58 ops
[p0, p1, p2, p3, p4]
+198: guard_class(p0, 16435920, descr=<Guard0x3f634c0>) [p0, p1, p2, p3, p4]
+210: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+221: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3f72020>) [p0, p1, p2, p3, p4]
+230: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+234: guard_not_invalidated(descr=<Guard0x3f72068>) [p0, p1, p2, p3, p4]
+234: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(list '* a (cons '+ AppRand3))')
+238: guard_class(p8, 16499664, descr=<Guard0x3f720b0>) [p0, p1, p2, p3, p4]
+251: p11 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+255: guard_nonnull_class(p11, 16470384, descr=<Guard0x3f63520>) [p0, p1, p2, p3, p4]
+275: guard_class(p9, 16435920, descr=<Guard0x3f720f8>) [p0, p1, p2, p3, p4]
+288: p14 = getfield_gc_r(p9, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+299: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f72140>) [p0, p1, p2, p3, p4]
+308: p16 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+312: p17 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+316: guard_class(p16, 16499664, descr=<Guard0x3f72188>) [p0, p1, p2, p3, p4]
+330: p19 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+335: guard_class(p19, 16499664, descr=<Guard0x3f721d0>) [p0, p1, p2, p3, p4]
+348: p21 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+352: guard_class(p21, 16477696, descr=<Guard0x3f72218>) [p0, p1, p2, p3, p4]
+365: p23 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p17, 16437352, descr=<Guard0x3f72260>) [p0, p1, p2, p3, p4]
+382: p25 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+386: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x3f63580>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(loop r) from (list '* a (cons '+ AppRand3))')
+405: p27 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+416: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x3f722a8>) [p0, p1, p2, p3, p4]
+425: p29 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+430: guard_nonnull_class(p29, 16470384, descr=<Guard0x3f635e0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+448: p31 = new_with_vtable(descr=<SizeDescr 24>)
+495: p32 = new_with_vtable(descr=<SizeDescr 48>)
+506: p33 = new_with_vtable(descr=<SizeDescr 24>)
+524: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+528: p35 = new_with_vtable(descr=<SizeDescr 24>)
+539: setfield_gc(p35, p11, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+543: p36 = new_with_vtable(descr=<SizeDescr 24>)
+555: p37 = new_with_vtable(descr=<SizeDescr 24>)
+580: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+584: p39 = new_with_vtable(descr=<SizeDescr 24>)
+595: setfield_gc(p39, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+613: p40 = new_with_vtable(descr=<SizeDescr 24>)
+624: setfield_gc(p40, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+628: setfield_gc(p40, p1, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+632: setfield_gc(p39, p40, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+636: setfield_gc(p37, p39, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+640: setfield_gc(p36, p37, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+651: setfield_gc(p36, ConstPtr(ptr41), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+655: setfield_gc(p35, p36, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+659: setfield_gc(p33, p35, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+670: setfield_gc(p32, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+681: setfield_gc(p32, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+685: setfield_gc(p32, p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+689: setfield_gc(p31, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+700: setfield_gc(p31, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+704: setfield_gc(p32, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+708: setfield_gc(p32, p33, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+712: jump(p31, p32, descr=TargetToken(66144320))
+752: --end of the loop--
[86a7cd64ef893e] jit-log-opt-bridge}
[86a7cd64fa79c3] {jit-backend
[86a7cd64fd4329] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d
[86a7cd64fd94d7] jit-backend-dump}
[86a7cd64fe2800] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d274 +0  1F000000
[86a7cd64fe39fb] jit-backend-dump}
[86a7cd64fe70f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d365 +0  1F000000
[86a7cd64fe7e7b] jit-backend-dump}
[86a7cd64feb20a] {jit-backend-addr
bridge out of Guard 0x3f62e60 has address 0x7f5e5e32d270 to 0x7f5e5e32d360
       gc table: 0x7f5e5e32d230
    jump target: 0x7f5e5e32d270
         resops: 0x7f5e5e32d27e
       failures: 0x7f5e5e32d360
            end: 0x7f5e5e32d44b
[86a7cd64fed443] jit-backend-addr}
[86a7cd64ff09b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d28e +0  11010000
[86a7cd64ff175a] jit-backend-dump}
[86a7cd64ff481d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d2a9 +0  12010000
[86a7cd64ff54ef] jit-backend-dump}
[86a7cd64ff8620] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d2be +0  19010000
[86a7cd64ff933f] jit-backend-dump}
[86a7cd64ffc369] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d2d2 +0  21010000
[86a7cd64ffd044] jit-backend-dump}
[86a7cd650000c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d2ee +0  3D010000
[86a7cd65000d84] jit-backend-dump}
[86a7cd65003fa7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32beb4 +0  B8130000
[86a7cd65004c79] jit-backend-dump}
[86a7cd65008ad5] jit-backend}
[86a7cd6500c552] {jit-log-opt-bridge
# bridge out of Guard 0x3f62e60 with 21 ops
[p0, p1]
+86: guard_class(p1, 16504240, descr=<Guard0x3f63640>) [p0, p1]
+98: i3 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+102: p4 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+106: guard_nonnull_class(p4, 16616448, descr=<Guard0x3f636a0>) [p0, p1]
+125: guard_class(p0, 16437352, descr=<Guard0x3f722f0>) [p0, p1]
+146: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+157: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3f72338>) [p0, p1]
+166: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+170: guard_not_invalidated(descr=<Guard0x3f72380>) [p0, p1]
+170: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+174: guard_nonnull_class(p10, 16470384, descr=<Guard0x3f63700>) [p0, p1]
+194: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)')
+198: p13 = new_with_vtable(descr=<SizeDescr 32>)
+242: p14 = new_with_vtable(descr=<SizeDescr 24>)
+253: setfield_gc(p14, i3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+257: setfield_gc(p14, p4, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+261: setfield_gc(p13, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+265: setfield_gc(p13, p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+269: setfield_gc(p13, p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+273: jump(p13, p12, descr=TargetToken(65680096))
+304: --end of the loop--
[86a7cd65021ed0] jit-log-opt-bridge}
[86a7cd65136460] {jit-backend
[86a7cd652008e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d
[86a7cd6520748e] jit-backend-dump}
[86a7cd6521143c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d5d4 +0  1F000000
[86a7cd65212874] jit-backend-dump}
[86a7cd6521634c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d785 +0  1F000000
[86a7cd652171b5] jit-backend-dump}
[86a7cd6521a327] {jit-backend-addr
bridge out of Guard 0x3f626e0 has address 0x7f5e5e32d5d0 to 0x7f5e5e32d780
       gc table: 0x7f5e5e32d540
    jump target: 0x7f5e5e32d5d0
         resops: 0x7f5e5e32d5de
       failures: 0x7f5e5e32d780
            end: 0x7f5e5e32d913
[86a7cd6521c62c] jit-backend-addr}
[86a7cd6521f937] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d5ee +0  D1010000
[86a7cd65220738] jit-backend-dump}
[86a7cd652236ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d605 +0  D6010000
[86a7cd652243d9] jit-backend-dump}
[86a7cd652273de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d615 +0  E2010000
[86a7cd652280de] jit-backend-dump}
[86a7cd6522b007] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d621 +0  F2010000
[86a7cd6522bd26] jit-backend-dump}
[86a7cd6522ed07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d639 +0  F6010000
[86a7cd6522f9ba] jit-backend-dump}
[86a7cd65232860] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d651 +0  FA010000
[86a7cd65233513] jit-backend-dump}
[86a7cd6523649e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d662 +0  21020000
[86a7cd6523715b] jit-backend-dump}
[86a7cd65239fee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d676 +0  29020000
[86a7cd6523ac99] jit-backend-dump}
[86a7cd6523daf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d68a +0  31020000
[86a7cd6523e79f] jit-backend-dump}
[86a7cd652415d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d6a1 +0  36020000
[86a7cd6524226f] jit-backend-dump}
[86a7cd65245072] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d6b5 +0  3E020000
[86a7cd65245d17] jit-backend-dump}
[86a7cd65248db2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32aa71 +0  5B2B0000
[86a7cd65249ab2] jit-backend-dump}
[86a7cd6524d81c] jit-backend}
[86a7cd652510fc] {jit-log-opt-bridge
# bridge out of Guard 0x3f626e0 with 53 ops
[p0, p1]
+166: guard_class(p1, 16499664, descr=<Guard0x3f63820>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+182: guard_nonnull_class(p3, 16470384, descr=<Guard0x3f63a00>) [p0, p1]
+208: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+211: guard_false(i6, descr=<Guard0x3f72578>) [p0, p1]
debug_merge_point(0, 0, '(let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))')
+217: guard_class(p0, 16437352, descr=<Guard0x3f72530>) [p0, p1]
+229: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+233: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3f639a0>) [p0, p1]
debug_merge_point(0, 0, '(cdr l174)')
+253: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+257: guard_nonnull_class(p10, 16616448, descr=<Guard0x3f63940>) [p0, p1]
+277: guard_not_invalidated(descr=<Guard0x3f724e8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184))')
debug_merge_point(0, 0, '(f (car l174))')
+277: p12 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+281: guard_class(p12, 16477696, descr=<Guard0x3f724a0>) [p0, p1]
+294: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+305: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3f72458>) [p0, p1]
+314: p16 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+325: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3f638e0>) [p0, p1]
+334: p18 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+338: guard_nonnull_class(p18, ConstClass(W_Symbol), descr=<Guard0x3f63880>) [p0, p1]
+357: p20 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))')
debug_merge_point(0, 0, '(deriv a4828)')
debug_merge_point(0, 0, '(if (not (pair? a)) (if (eq? a 'x) 1 0) (if (eq? (car a) '+) (let ([AppRand0 (map deriv (cdr a))]) (cons '+ AppRand0)) (if (eq? (car a) '-) (let ([AppRand1 (map deriv (cdr a))]) (cons '- AppRand1)) (if (eq? (car a) '*) (let ([AppRand3 (map (lambda (a4828) (let ([AppRand2 (deriv a4828)]) (list '/ AppRand2 a4828))) (cdr a))]) (list '* a (cons '+ AppRand3))) (if (eq? (car a) '/) (let ([AppRand4 (deriv (cadr a))]) (let ([AppRand5 (list '/ AppRand4 (caddr a))][AppRand6 (deriv (caddr a))]) (let ([AppRand7 (list '* (caddr a) (caddr a) AppRand6)]) (let ([AppRand5 AppRand5][AppRand8 (list '/ (cadr a) AppRand7)]) (list '- AppRand5 AppRand8))))) (fatal-error No derivation method available))))))')
debug_merge_point(0, 0, '(if (eq? a 'x) 1 0)')
+368: i22 = instance_ptr_eq(p18, ConstPtr(ptr21))
+371: guard_true(i22, descr=<Guard0x3f72410>) [p0, p1]
debug_merge_point(0, 0, '1')
debug_merge_point(0, 0, '(list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(loop r) from (list '/ AppRand2 a4828)')
debug_merge_point(0, 0, '(if (null? l174) null (let ([r (cdr l174)]) (let ([AppRand183 (f (car l174))][AppRand184 (loop r)]) (cons AppRand183 AppRand184)))) from (loop r)')
+377: p23 = new_with_vtable(descr=<SizeDescr 24>)
+424: p24 = new_with_vtable(descr=<SizeDescr 48>)
+435: p25 = new_with_vtable(descr=<SizeDescr 24>)
+453: setfield_gc(p25, ConstPtr(ptr26), descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+457: p27 = new_with_vtable(descr=<SizeDescr 24>)
+468: setfield_gc(p27, 1, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+476: p29 = new_with_vtable(descr=<SizeDescr 24>)
+487: setfield_gc(p29, p18, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+491: setfield_gc(p29, ConstPtr(ptr30), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+495: setfield_gc(p27, p29, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+499: setfield_gc(p25, p27, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+503: setfield_gc(p23, p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+507: setfield_gc(p24, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+511: setfield_gc(p23, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+515: setfield_gc(p24, p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+519: setfield_gc(p24, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+530: setfield_gc(p24, ConstPtr(ptr31), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+534: setfield_gc(p24, p25, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+538: jump(p23, p24, descr=TargetToken(66144320))
+576: --end of the loop--
[86a7cd6527bdef] jit-log-opt-bridge}
[86a7cd652f3606] {jit-backend
[86a7cd6532edb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32d9e
[86a7cd653342b0] jit-backend-dump}
[86a7cd6533d965] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32da44 +0  1F000000
[86a7cd6533ecc4] jit-backend-dump}
[86a7cd65342508] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32db55 +0  1F000000
[86a7cd6534322c] jit-backend-dump}
[86a7cd65346418] {jit-backend-addr
bridge out of Guard 0x3f2fec8 has address 0x7f5e5e32da40 to 0x7f5e5e32db50
       gc table: 0x7f5e5e32d9e0
    jump target: 0x7f5e5e32da40
         resops: 0x7f5e5e32da4e
       failures: 0x7f5e5e32db50
            end: 0x7f5e5e32dc8f
[86a7cd65348632] jit-backend-addr}
[86a7cd6534bac5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32da5e +0  31010000
[86a7cd6534c845] jit-backend-dump}
[86a7cd6534f894] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32da6b +0  40010000
[86a7cd6535052c] jit-backend-dump}
[86a7cd653534f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32da7b +0  4C010000
[86a7cd65354183] jit-backend-dump}
[86a7cd65357592] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32da88 +0  77010000
[86a7cd653582ba] jit-backend-dump}
[86a7cd6535b312] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32da9c +0  7F010000
[86a7cd6535bfa1] jit-backend-dump}
[86a7cd6535ef35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32dab1 +0  86010000
[86a7cd6535fbb2] jit-backend-dump}
[86a7cd65362adb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32dabe +0  95010000
[86a7cd65363757] jit-backend-dump}
[86a7cd653666e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32dad9 +0  96010000
[86a7cd65367359] jit-backend-dump}
[86a7cd6536a520] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f5e5e32c98f +0  AD100000
[86a7cd6536b1be] jit-backend-dump}
[86a7cd6536ef13] jit-backend}
[86a7cd653728d5] {jit-log-opt-bridge
# bridge out of Guard 0x3f2fec8 with 30 ops
[p0, p1]
+118: guard_class(p1, 16499664, descr=<Guard0x3f63b80>) [p0, p1]
+130: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+134: guard_nonnull(p3, descr=<Guard0x3f72650>) [p0, p1]
+150: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+153: guard_true(i5, descr=<Guard0x3f72698>) [p0, p1]
debug_merge_point(0, 0, 'null')
+159: guard_not_invalidated(descr=<Guard0x3f726e0>) [p0, p1]
+159: guard_class(p0, 16437216, descr=<Guard0x3f72728>) [p0, p1]
+172: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+183: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3f72770>) [p0, p1]
+192: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+192: i10 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.LetContSize1Fixed.inst_vals_fixed_0 40 pure>)
+196: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (loop r)')
+200: guard_class(p11, 16437352, descr=<Guard0x3f727b8>) [p0, p1]
+213: p13 = getfield_gc_r(p11, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+217: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x3f72800>) [p0, p1]
+226: p15 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+230: p16 = getfield_gc_r(p11, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+234: guard_nonnull_class(p16, 16470384, descr=<Guard0x3f63be0>) [p0, p1]
+253: p18 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand183 AppRand184) from (cons AppRand183 AppRand184)')
+257: p19 = new_with_vtable(descr=<SizeDescr 32>)
+301: p20 = new_with_vtable(descr=<SizeDescr 24>)
+312: setfield_gc(p20, i10, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+316: setfield_gc(p20, ConstPtr(ptr21), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+320: setfield_gc(p19, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+324: setfield_gc(p19, p16, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+328: setfield_gc(p19, p20, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+332: jump(p19, p18, descr=TargetToken(65680096))
+368: --end of the loop--
[86a7cd6538e396] jit-log-opt-bridge}
[86a7e4f53b0590] {jit-summary
Tracing:      	21	0.106329
Backend:      	21	0.006387
TOTAL:      		39.134872
ops:             	12796
recorded ops:    	2194
  calls:         	5
guards:          	740
opt ops:         	1370
opt guards:      	408
opt guards shared:	265
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	24
nvholes:         	0
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	6
Total # of bridges:	15
Freed # of loops:	0
Freed # of bridges:	0
[86a7e4f53d49a4] jit-summary}
[86a7e4f53df358] {jit-backend-counts
entry 3:170
TargetToken(65680096):649999893
TargetToken(65680176):389999946
entry 4:366
entry 5:78
TargetToken(66144320):1299999502
TargetToken(66144400):259999916
bridge 65032736:129999919
entry 8:76
bridge 65032928:389999893
bridge 65034080:649999656
bridge 65033216:30
bridge 65888088:129999956
entry 14:78
bridge 65034272:259999889
bridge 66251112:259999877
bridge 65035520:16
bridge 65034560:259999862
entry 19:63
bridge 65034368:129999920
bridge 66461824:519999625
bridge 66254712:129999889
bridge 66465376:4
bridge 66463456:129999869
bridge 66256584:129999869
[86a7e4f53e6332] jit-backend-counts}
