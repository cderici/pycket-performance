[2a709dd8389a695] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[2a709dd838afae3] jit-backend-dump}
[2a709dd839024c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb0b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[2a709dd83905721] jit-backend-dump}
[2a709dd8391c686] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[2a709dd8391e63c] jit-backend-dump}
[2a709dd8392aa6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb1f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[2a709dd8392c792] jit-backend-dump}
[2a709dd8393b3ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[2a709dd8393d476] jit-backend-dump}
[2a709dd8394d4f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb2f
[2a709dd8395159a] jit-backend-dump}
[2a709dd839575a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb
[2a709dd83959e7f] jit-backend-dump}
[2a709dd8395ed64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb
[2a709dd8396116e] jit-backend-dump}
[2a709dd839f55f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb
[2a709dd839f8282] jit-backend-dump}
[2a709dd839fe314] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cb8f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B528010000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B528010000C20800
[2a709dd83a00cdc] jit-backend-dump}
[2a709dd83a0590e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cba70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[2a709dd83a07398] jit-backend-dump}
[2a709dd83a3187a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cbaf
[2a709dd83a3526b] jit-backend-dump}
[2a709dd83a55979] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cbce
[2a709dd83a5931d] jit-backend-dump}
[2a709dd83a62860] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cbee0 +0  4889455848895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC084889D741BB80D2720041FFD3488B0C258893F900488B69F8F64504010F85EA0000004883C4084885C00F84CC0000004889C1488B4558488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B52801000048C7452000000000C34883C40849BB70BA1C94717F000041FFE349BB70B21C94717F000041FFD3E904FFFFFF
[2a709dd83a65ac3] jit-backend-dump}
[2a709dd83a6bc27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cc0d
[2a709dd83a6ef5d] jit-backend-dump}
[2a709dd83a81cd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cc2c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70B21C94717F000041FFD3E99CFFFFFF
[2a709dd83a8400a] jit-backend-dump}
[2a709dd83a8a1cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cc380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70B21C94717F000041FFD3E9BCFFFFFF
[2a709dd83a8baaa] jit-backend-dump}
[2a709dd83a91423] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cc
[2a709dd83a93fa4] jit-backend-dump}
[2a709dd83a999d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cc5c
[2a709dd83a9c41a] jit-backend-dump}
[2a709dd87666554] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cc750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB70BA1C94717F000041FFE3
[2a709dd876688d4] jit-backend-dump}
[2a709dd99848a76] {jit-backend
[2a709dd99e1fb3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cc
[2a709dd99e29263] jit-backend-dump}
[2a709dd99e41d52] {jit-backend-addr
Loop 1 ((let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)) has address 0x7f71941ccabd to 0x7f71941ccd10 (bootstrap 0x7f71941cca30)
       gc table: 0x7f71941cc980
       function: 0x7f71941cca30
         resops: 0x7f71941ccabd
       failures: 0x7f71941ccd10
            end: 0x7f71941ccf4c
[2a709dd99e4a438] jit-backend-addr}
[2a709dd99e4f9aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccae7 +0  37020000
[2a709dd99e50ddb] jit-backend-dump}
[2a709dd99e543b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccafd +0  3D020000
[2a709dd99e55277] jit-backend-dump}
[2a709dd99e585d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccb10 +0  62020000
[2a709dd99e592db] jit-backend-dump}
[2a709dd99e5c282] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccb26 +0  68020000
[2a709dd99e5cf9a] jit-backend-dump}
[2a709dd99e5ff0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccb36 +0  74020000
[2a709dd99e60c0d] jit-backend-dump}
[2a709dd99e63b9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccb4a +0  7C020000
[2a709dd99e6490c] jit-backend-dump}
[2a709dd99e678ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccb61 +0  81020000
[2a709dd99e68594] jit-backend-dump}
[2a709dd99e6b39e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccb72 +0  8C020000
[2a709dd99e6c017] jit-backend-dump}
[2a709dd99e6eec6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccb89 +0  91020000
[2a709dd99e6fb36] jit-backend-dump}
[2a709dd99e72958] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccbae +0  88020000
[2a709dd99e735db] jit-backend-dump}
[2a709dd99e763e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccbdb +0  77020000
[2a709dd99e77067] jit-backend-dump}
[2a709dd99e79e71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccbeb +0  83020000
[2a709dd99e7aaed] jit-backend-dump}
[2a709dd99e7d912] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccc06 +0  84020000
[2a709dd99e7e58c] jit-backend-dump}
[2a709dd99e814a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccc3f +0  67020000
[2a709dd99e8218d] jit-backend-dump}
[2a709dd99e8503c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccc54 +0  6E020000
[2a709dd99e85cdd] jit-backend-dump}
[2a709dd99e88be5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccc9d +0  5D020000
[2a709dd99e89858] jit-backend-dump}
[2a709dd99e8c69c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cccbf +0  57020000
[2a709dd99e8d328] jit-backend-dump}
[2a709dd99e9016b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cccf3 +0  3F020000
[2a709dd99e90de5] jit-backend-dump}
[2a709dd99e94b92] jit-backend}
[2a709dd99e98900] {jit-log-opt-loop
# Loop 1 ((let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)) : loop with 108 ops
[p0, p1]
+325: label(p0, p1, descr=TargetToken(71669008))
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+344: guard_class(p1, 16437352, descr=<Guard0x4416bc0>) [p0, p1]
+363: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+367: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x4416ec0>) [p0, p1]
debug_merge_point(0, 0, '(= c max-count)')
+385: guard_not_invalidated(descr=<Guard0x4497928>) [p0, p1]
+385: guard_class(p0, 16500368, descr=<Guard0x44978e0>) [p0, p1]
+404: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+408: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x4416e60>) [p0, p1]
+426: p8 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+430: guard_class(p8, 16478824, descr=<Guard0x4497898>) [p0, p1]
+442: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+453: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x4497850>) [p0, p1]
+462: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+466: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x4416e00>) [p0, p1]
+485: i14 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+489: i15 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+493: i16 = int_eq(i14, i15)
+496: guard_false(i16, descr=<Guard0x4497808>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+502: p17 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+506: guard_nonnull_class(p17, ConstClass(W_Flonum), descr=<Guard0x4416da0>) [p0, p1]
+525: f19 = getfield_gc_f(p17, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+531: f20 = float_mul(f19, f19)
debug_merge_point(0, 0, '(* zi zi)')
+539: p21 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+543: guard_nonnull_class(p21, ConstClass(W_Flonum), descr=<Guard0x4416d40>) [p0, p1]
+562: f23 = getfield_gc_f(p21, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+568: f24 = float_mul(f23, f23)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+576: f25 = float_add(f20, f24)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+584: p26 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+588: guard_nonnull_class(p26, ConstClass(W_Flonum), descr=<Guard0x4416ce0>) [p0, p1]
+607: f28 = getfield_gc_f(p26, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+613: i29 = float_gt(f25, f28)
+617: guard_false(i29, descr=<Guard0x44977c0>) [p0, p1]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+623: f30 = float_sub(f20, f24)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+627: p31 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+631: guard_nonnull_class(p31, ConstClass(W_Flonum), descr=<Guard0x4416c80>) [p0, p1]
+650: f33 = getfield_gc_f(p31, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+656: f34 = float_add(f30, f33)
debug_merge_point(0, 0, '(* zr zi)')
+660: f35 = float_mul(f19, f23)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+664: f37 = float_mul(2.000000, f35)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+683: p38 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+687: guard_nonnull_class(p38, ConstClass(W_Flonum), descr=<Guard0x4416c20>) [p0, p1]
+707: f40 = getfield_gc_f(p38, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+714: f41 = float_add(f37, f40)
debug_merge_point(0, 0, '(+ c 1)')
+718: i43 = int_add_ovf(i14, 1)
+722: guard_no_overflow(descr=<Guard0x4497778>) [p0, p1]
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+728: label(p8, f34, f41, i43, p1, p3, p12, i15, p26, f28, p31, f33, p38, f40, descr=TargetToken(71669088))
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(= c max-count)')
+792: guard_not_invalidated(descr=<Guard0x4416b60>) [i43, f41, f34, p8, p1, p3]
+792: i44 = int_eq(i43, i15)
+795: guard_false(i44, descr=<Guard0x4497730>) [i43, f41, f34, p8, p1, p3]
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+801: f45 = float_mul(f34, f34)
debug_merge_point(0, 0, '(* zi zi)')
+809: f46 = float_mul(f41, f41)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+817: f47 = float_add(f45, f46)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+825: i48 = float_gt(f47, f28)
+829: guard_false(i48, descr=<Guard0x44976e8>) [i43, f41, f34, p8, p1, p3]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+835: f49 = float_sub(f45, f46)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+839: f50 = float_add(f49, f33)
debug_merge_point(0, 0, '(* zr zi)')
+843: f51 = float_mul(f34, f41)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+851: f53 = float_mul(2.000000, f51)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+870: f54 = float_add(f53, f40)
debug_merge_point(0, 0, '(+ c 1)')
+874: i56 = int_add_ovf(i43, 1)
+881: guard_no_overflow(descr=<Guard0x44976a0>) [i43, f41, f34, p8, p1, p3]
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+887: jump(p8, f50, f54, i56, p1, p3, p12, i15, p26, f28, p31, f33, p38, f40, descr=TargetToken(71669088))
+912: --end of the loop--
[2a709dd99f3a15c] jit-log-opt-loop}
[2a709dd9a830c9f] {jit-backend
[2a709dd9a9d583e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd
[2a709dd9a9e6b3d] jit-backend-dump}
[2a709dd9a9f0fda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd294 +0  23000000
[2a709dd9a9f24c3] jit-backend-dump}
[2a709dd9a9f6423] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd765 +0  23000000
[2a709dd9a9f72a8] jit-backend-dump}
[2a709dd9a9fa456] {jit-backend-addr
bridge out of Guard 0x4497730 has address 0x7f71941cd290 to 0x7f71941cd760
       gc table: 0x7f71941cd170
    jump target: 0x7f71941cd290
         resops: 0x7f71941cd29e
       failures: 0x7f71941cd760
            end: 0x7f71941cdaf3
[2a709dd9a9fca62] jit-backend-addr}
[2a709dd9a9ffe74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd2bd +0  44050000
[2a709dd9aa00c7b] jit-backend-dump}
[2a709dd9aa03c34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd2d4 +0  49050000
[2a709dd9aa048fd] jit-backend-dump}
[2a709dd9aa077e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd2e1 +0  58050000
[2a709dd9aa084b2] jit-backend-dump}
[2a709dd9aa0b465] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd2fd +0  58050000
[2a709dd9aa0c1d3] jit-backend-dump}
[2a709dd9aa0f13f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd31a +0  57050000
[2a709dd9aa0fe1e] jit-backend-dump}
[2a709dd9aa12c24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd32c +0  61050000
[2a709dd9aa13924] jit-backend-dump}
[2a709dd9aa16841] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd342 +0  67050000
[2a709dd9aa17563] jit-backend-dump}
[2a709dd9aa1a397] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd34f +0  76050000
[2a709dd9aa1b05d] jit-backend-dump}
[2a709dd9aa1ddf9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd35f +0  82050000
[2a709dd9aa1eaa9] jit-backend-dump}
[2a709dd9aa2198f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd373 +0  8A050000
[2a709dd9aa22667] jit-backend-dump}
[2a709dd9aa25446] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd389 +0  90050000
[2a709dd9aa26106] jit-backend-dump}
[2a709dd9aa28f10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd399 +0  9C050000
[2a709dd9aa29bc6] jit-backend-dump}
[2a709dd9aa2c9ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd3a7 +0  AA050000
[2a709dd9aa2d6c4] jit-backend-dump}
[2a709dd9aa304af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd3b4 +0  B9050000
[2a709dd9aa3115f] jit-backend-dump}
[2a709dd9aa33f1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd3d5 +0  B4050000
[2a709dd9aa34bdc] jit-backend-dump}
[2a709dd9aa3799f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd3e2 +0  C3050000
[2a709dd9aa386ca] jit-backend-dump}
[2a709dd9aa3b484] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd3eb +0  D6050000
[2a709dd9aa3c135] jit-backend-dump}
[2a709dd9aa3ef04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd4ad +0  30050000
[2a709dd9aa3fbca] jit-backend-dump}
[2a709dd9aa42953] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd4b7 +0  42050000
[2a709dd9aa4361c] jit-backend-dump}
[2a709dd9aa463a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd4ce +0  47050000
[2a709dd9aa47084] jit-backend-dump}
[2a709dd9aa49e87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd4db +0  56050000
[2a709dd9aa4ab60] jit-backend-dump}
[2a709dd9aa4d935] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd4eb +0  62050000
[2a709dd9aa4e663] jit-backend-dump}
[2a709dd9aa5151e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd501 +0  68050000
[2a709dd9aa521f3] jit-backend-dump}
[2a709dd9aa54fa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd517 +0  6E050000
[2a709dd9aa55c73] jit-backend-dump}
[2a709dd9aa58a12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd52d +0  74050000
[2a709dd9aa596e7] jit-backend-dump}
[2a709dd9aa5c467] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd544 +0  79050000
[2a709dd9aa5d14f] jit-backend-dump}
[2a709dd9aa5fea4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd5a2 +0  37050000
[2a709dd9aa60b73] jit-backend-dump}
[2a709dd9aa696e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ccc9d +0  EF050000
[2a709dd9aa6a6be] jit-backend-dump}
[2a709dd9aa787b0] jit-backend}
[2a709dd9aa7d36e] {jit-log-opt-bridge
# bridge out of Guard 0x4497730 with 155 ops
[i0, f1, f2, p3, p4, p5]
+310: guard_not_invalidated(descr=<Guard0x4417100>) [i0, f1, f2, p3, p4, p5]
+310: p6 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+328: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x44f5a90>) [i0, f1, f2, p3, p4, p5]
+337: p8 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+341: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x4417160>) [i0, f1, f2, p3, p4, p5]
+360: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+364: i11 = int_eq(i0, i10)
+367: guard_true(i11, descr=<Guard0x44f5ad8>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, 'c')
+373: p12 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+392: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x44f5b20>) [i0, f1, f2, p3, p4, p5]
+401: p14 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+406: p15 = getfield_gc_r(p4, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+411: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x44171c0>) [i0, f1, f2, p3, p4, p5]
+430: p17 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+435: guard_class(p17, 16435208, descr=<Guard0x44f5b68>) [i0, f1, f2, p3, p4, p5]
+448: p19 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+452: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x4417220>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-set! AppRand7 y4931 AppRand8) from (= c max-count)')
+470: guard_class(p14, 16504944, descr=<Guard0x44f5bb0>) [i0, f1, f2, p3, p4, p5]
+483: p22 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+487: guard_class(p22, 16479576, descr=<Guard0x44f5bf8>) [i0, f1, f2, p3, p4, p5]
+499: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+510: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x44f5c40>) [i0, f1, f2, p3, p4, p5]
+519: p26 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+523: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x4417280>) [i0, f1, f2, p3, p4, p5]
+541: p28 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+545: guard_class(p28, 16693360, descr=<Guard0x44f5c88>) [i0, f1, f2, p3, p4, p5]
+557: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i32 = int_ge(i30, 0)
+565: guard_true(i32, descr=<Guard0x44f5cd0>) [i0, f1, f2, p3, p4, p5]
+571: i33 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+575: i34 = int_lt(i30, i33)
+578: guard_true(i34, descr=<Guard0x44f5d18>) [i0, f1, f2, p3, p4, p5]
+584: p35 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+588: p37 = getarrayitem_gc_pure_r(p35, 0, descr=<ArrayP 8>)
+599: guard_nonnull_class(p37, ConstClass(W_Fixnum), descr=<Guard0x44172e0>) [i0, f1, f2, p3, p4, p5]
+617: i39 = getfield_gc_i(p37, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+621: i40 = int_eq(i39, i0)
+624: guard_false(i40, descr=<Guard0x44f5d60>) [i0, f1, f2, p3, p4, p5]
+630: i41 = int_is_true(i39)
+633: guard_false(i41, descr=<Guard0x44f5da8>) [i0, f1, f2, p3, p4, p5]
+639: p42 = new_array_clear(i33, descr=<ArrayS 8>)
+764: setarrayitem_gc(p42, i30, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))')
debug_merge_point(0, 0, '(- x4935 1)')
+783: i43 = getfield_gc_i(p14, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+812: setfield_gc(p15, ConstPtr(ptr44), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+816: setfield_gc(p15, p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+820: i46 = int_sub_ovf(i43, 1)
+827: guard_no_overflow(descr=<Guard0x4417340>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop2 AppRand9)')
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)')
debug_merge_point(0, 0, '(>= x4935 0)')
+833: i49 = int_ge(i46, 0)
+837: guard_true(i49, descr=<Guard0x44f5df0>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+843: p50 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+847: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x44173a0>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
+866: i52 = getfield_gc_i(p50, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+870: i53 = int_lt(i46, i52)
+873: guard_true(i53, descr=<Guard0x44f5e38>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
+879: p54 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+883: guard_class(p54, 16622984, descr=<Guard0x44f5e80>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
+895: p56 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+899: p57 = getarrayitem_gc_r(p56, i46, descr=<ArrayP 8>)
+904: guard_class(p57, ConstClass(W_Vector), descr=<Guard0x44f5ec8>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
+917: p59 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+921: guard_nonnull_class(p59, ConstClass(W_Flonum), descr=<Guard0x4417400>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
+939: p61 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+943: guard_nonnull_class(p61, ConstClass(W_Flonum), descr=<Guard0x4417460>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
+961: p63 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+965: guard_nonnull_class(p63, ConstClass(W_Flonum), descr=<Guard0x44174c0>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
+984: p65 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+984: f66 = cast_int_to_float(i46)
+989: f67 = getfield_gc_f(p63, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+995: f68 = float_mul(f66, f67)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+999: f69 = getfield_gc_f(p59, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1005: f70 = float_add(f69, f68)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
+1010: f71 = cast_int_to_float(i30)
+1015: f72 = float_mul(f71, f67)
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+1019: f73 = getfield_gc_f(p61, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1024: f74 = float_add(f73, f72)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+1028: f75 = float_mul(f70, f70)
debug_merge_point(0, 0, '(* zi zi)')
+1038: f76 = float_mul(f74, f74)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+1047: f77 = float_add(f75, f76)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+1057: i79 = float_gt(f77, 16.000000)
+1072: guard_false(i79, descr=<Guard0x44f5f10>) [p14, i43, p17, p22, p19, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+1078: f80 = float_sub(f75, f76)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+1083: f81 = float_add(f80, f70)
debug_merge_point(0, 0, '(* zr zi)')
+1088: f82 = float_mul(f70, f74)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+1097: f84 = float_mul(2.000000, f82)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+1108: f85 = float_add(f84, f74)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+1113: p86 = new_with_vtable(descr=<SizeDescr 56>)
+1160: p87 = new_with_vtable(descr=<SizeDescr 16>)
+1171: setfield_gc(p87, f74, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1177: p88 = new_with_vtable(descr=<SizeDescr 16>)
+1188: setfield_gc(p88, f70, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1193: p89 = new_with_vtable(descr=<SizeDescr 48>)
+1204: p90 = new_with_vtable(descr=<SizeDescr 24>)
+1216: setfield_gc(p90, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1221: setfield_gc(p90, i46, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1314: f91 = getfield_gc_f(p88, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1319: f92 = getfield_gc_f(p87, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1325: setfield_gc(p86, ConstPtr(ptr93), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1336: setfield_gc(p86, ConstPtr(ptr94), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1340: setfield_gc(p89, ConstPtr(ptr95), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1351: setfield_gc(p89, p90, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1355: setfield_gc(p89, p57, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1359: setfield_gc(p89, p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1370: setfield_gc(p89, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1388: setfield_gc(p86, ConstPtr(ptr96), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1392: setfield_gc(p86, p87, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1403: setfield_gc(p86, ConstPtr(ptr97), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1407: setfield_gc(p86, p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1411: jump(p86, f81, f85, 1, p89, p19, ConstPtr(ptr94), 64, ConstPtr(ptr97), 16.000000, p88, f91, p87, f92, descr=TargetToken(71669088))
+1520: --end of the loop--
[2a709dd9ab0d1d7] jit-log-opt-bridge}
[2a709dd9b0e11b3] {jit-backend
[2a709dd9b199239] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdcd
[2a709dd9b1a6658] jit-backend-dump}
[2a709dd9b1b119a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cddd4 +0  23000000
[2a709dd9b1b263a] jit-backend-dump}
[2a709dd9b1b64a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce195 +0  23000000
[2a709dd9b1b736a] jit-backend-dump}
[2a709dd9b1ba46d] {jit-backend-addr
bridge out of Guard 0x44f5c88 has address 0x7f71941cddd0 to 0x7f71941ce190
       gc table: 0x7f71941cdcd0
    jump target: 0x7f71941cddd0
         resops: 0x7f71941cddde
       failures: 0x7f71941ce190
            end: 0x7f71941ce48d
[2a709dd9b1bc895] jit-backend-addr}
[2a709dd9b1bfdd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cddf6 +0  F9030000
[2a709dd9b1c0bf3] jit-backend-dump}
[2a709dd9b1c3c51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cde0d +0  FE030000
[2a709dd9b1c491d] jit-backend-dump}
[2a709dd9b1c79b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cde1a +0  0D040000
[2a709dd9b1c86a0] jit-backend-dump}
[2a709dd9b1cb5c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cde2f +0  14040000
[2a709dd9b1cc270] jit-backend-dump}
[2a709dd9b1cf2f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cde4c +0  13040000
[2a709dd9b1cffbf] jit-backend-dump}
[2a709dd9b1d2eeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cde5e +0  1D040000
[2a709dd9b1d3b80] jit-backend-dump}
[2a709dd9b1d6b08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cde74 +0  23040000
[2a709dd9b1d776c] jit-backend-dump}
[2a709dd9b1da646] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cde81 +0  32040000
[2a709dd9b1db312] jit-backend-dump}
[2a709dd9b1de19c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cde91 +0  3E040000
[2a709dd9b1dee2e] jit-backend-dump}
[2a709dd9b1e1cf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdea5 +0  46040000
[2a709dd9b1e295c] jit-backend-dump}
[2a709dd9b1e57d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdebb +0  4C040000
[2a709dd9b1e6422] jit-backend-dump}
[2a709dd9b1e926f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdecb +0  58040000
[2a709dd9b1e9ee0] jit-backend-dump}
[2a709dd9b1ecce0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cded9 +0  66040000
[2a709dd9b1ed935] jit-backend-dump}
[2a709dd9b1f07da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdee6 +0  75040000
[2a709dd9b1f1432] jit-backend-dump}
[2a709dd9b1f42cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf00 +0  77040000
[2a709dd9b1f4f3f] jit-backend-dump}
[2a709dd9b1f7d80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf0a +0  89040000
[2a709dd9b1f89d7] jit-backend-dump}
[2a709dd9b1fbaf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf21 +0  8E040000
[2a709dd9b1fc760] jit-backend-dump}
[2a709dd9b1ff696] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf2e +0  9D040000
[2a709dd9b2002e4] jit-backend-dump}
[2a709dd9b203201] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf3f +0  A8040000
[2a709dd9b203e53] jit-backend-dump}
[2a709dd9b206cb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf55 +0  AE040000
[2a709dd9b2078fe] jit-backend-dump}
[2a709dd9b20a751] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf6c +0  B3040000
[2a709dd9b20b3d3] jit-backend-dump}
[2a709dd9b20e279] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf82 +0  B9040000
[2a709dd9b20eed7] jit-backend-dump}
[2a709dd9b211d83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf98 +0  BF040000
[2a709dd9b2129cb] jit-backend-dump}
[2a709dd9b215852] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdff5 +0  7E040000
[2a709dd9b2164a4] jit-backend-dump}
[2a709dd9b2195e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd399 +0  330A0000
[2a709dd9b21a24b] jit-backend-dump}
[2a709dd9b21e0d5] jit-backend}
[2a709dd9b221af0] {jit-log-opt-bridge
# bridge out of Guard 0x44f5c88 with 145 ops
[i0, f1, f2, p3, p4, p5]
+278: guard_not_invalidated(descr=<Guard0x4417520>) [i0, f1, f2, p3, p4, p5]
+278: p6 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+289: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x44f5f58>) [i0, f1, f2, p3, p4, p5]
+298: p8 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+302: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x4417580>) [i0, f1, f2, p3, p4, p5]
+321: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+325: i11 = int_eq(i0, i10)
+328: guard_true(i11, descr=<Guard0x44f5fa0>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, 'c')
+334: p12 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+346: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x4540020>) [i0, f1, f2, p3, p4, p5]
+355: p14 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+360: p15 = getfield_gc_r(p4, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+365: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x44175e0>) [i0, f1, f2, p3, p4, p5]
+384: p17 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+389: guard_class(p17, 16435208, descr=<Guard0x4540068>) [i0, f1, f2, p3, p4, p5]
+402: p19 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+406: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x4417640>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-set! AppRand7 y4931 AppRand8) from (= c max-count)')
+424: guard_class(p14, 16504944, descr=<Guard0x45400b0>) [i0, f1, f2, p3, p4, p5]
+437: p22 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+441: guard_class(p22, 16479576, descr=<Guard0x45400f8>) [i0, f1, f2, p3, p4, p5]
+453: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+464: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x4540140>) [i0, f1, f2, p3, p4, p5]
+473: p26 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+477: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x44176a0>) [i0, f1, f2, p3, p4, p5]
+495: p28 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+499: guard_class(p28, 16623792, descr=<Guard0x4540188>) [i0, f1, f2, p3, p4, p5]
+511: i30 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+515: i32 = int_ge(i30, 0)
+519: guard_true(i32, descr=<Guard0x45401d0>) [i0, f1, f2, p3, p4, p5]
+525: i33 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+529: i34 = int_lt(i30, i33)
+532: guard_true(i34, descr=<Guard0x4540218>) [i0, f1, f2, p3, p4, p5]
+538: p35 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+542: setarrayitem_gc(p35, i30, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))')
debug_merge_point(0, 0, '(- x4935 1)')
+547: i36 = getfield_gc_i(p14, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+551: i38 = int_sub_ovf(i36, 1)
+558: guard_no_overflow(descr=<Guard0x4417700>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop2 AppRand9)')
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)')
debug_merge_point(0, 0, '(>= x4935 0)')
+564: i41 = int_ge(i38, 0)
+568: guard_true(i41, descr=<Guard0x4540260>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+574: p42 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+578: guard_nonnull_class(p42, ConstClass(W_Vector), descr=<Guard0x4417760>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
+597: i44 = getfield_gc_i(p42, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+601: i45 = int_lt(i38, i44)
+604: guard_true(i45, descr=<Guard0x45402a8>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
+610: p46 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+614: guard_class(p46, 16622984, descr=<Guard0x45402f0>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
+627: p48 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+631: p49 = getarrayitem_gc_r(p48, i38, descr=<ArrayP 8>)
+636: guard_class(p49, ConstClass(W_Vector), descr=<Guard0x4540338>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
+649: p51 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+653: guard_nonnull_class(p51, ConstClass(W_Flonum), descr=<Guard0x44177c0>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
+672: p53 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+676: guard_nonnull_class(p53, ConstClass(W_Flonum), descr=<Guard0x4417820>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
+694: p55 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+698: guard_nonnull_class(p55, ConstClass(W_Flonum), descr=<Guard0x4417880>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
+716: p57 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+716: f58 = cast_int_to_float(i38)
+721: f59 = getfield_gc_f(p55, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+726: f60 = float_mul(f58, f59)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+730: f61 = getfield_gc_f(p51, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+736: f62 = float_add(f61, f60)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
+741: f63 = cast_int_to_float(i30)
+746: f64 = float_mul(f63, f59)
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+750: f65 = getfield_gc_f(p53, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+755: f66 = float_add(f65, f64)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+759: f67 = float_mul(f62, f62)
debug_merge_point(0, 0, '(* zi zi)')
+769: f68 = float_mul(f66, f66)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+778: f69 = float_add(f67, f68)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+788: i71 = float_gt(f69, 16.000000)
+803: guard_false(i71, descr=<Guard0x4540380>) [p14, i36, p17, p22, p19, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+809: f72 = float_sub(f67, f68)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+814: f73 = float_add(f72, f62)
debug_merge_point(0, 0, '(* zr zi)')
+819: f74 = float_mul(f62, f66)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+828: f76 = float_mul(2.000000, f74)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+839: f77 = float_add(f76, f66)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+844: p78 = new_with_vtable(descr=<SizeDescr 56>)
+888: p79 = new_with_vtable(descr=<SizeDescr 16>)
+899: setfield_gc(p79, f66, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+905: p80 = new_with_vtable(descr=<SizeDescr 16>)
+917: setfield_gc(p80, f62, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+924: p81 = new_with_vtable(descr=<SizeDescr 48>)
+936: p82 = new_with_vtable(descr=<SizeDescr 24>)
+947: setfield_gc(p82, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+951: setfield_gc(p82, i38, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1043: f83 = getfield_gc_f(p80, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1050: f84 = getfield_gc_f(p79, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1056: setfield_gc(p78, ConstPtr(ptr85), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1067: setfield_gc(p78, ConstPtr(ptr86), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1071: setfield_gc(p81, ConstPtr(ptr87), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1075: setfield_gc(p81, p82, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1079: setfield_gc(p81, p49, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1083: setfield_gc(p81, p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1087: setfield_gc(p81, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1098: setfield_gc(p78, ConstPtr(ptr88), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1102: setfield_gc(p78, p79, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1113: setfield_gc(p78, ConstPtr(ptr89), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1117: setfield_gc(p78, p80, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1121: jump(p78, f73, f77, 1, p81, p19, ConstPtr(ptr86), 64, ConstPtr(ptr89), 16.000000, p80, f83, p79, f84, descr=TargetToken(71669088))
+1216: --end of the loop--
[2a709dd9b29a0c1] jit-log-opt-bridge}
[2a709dd9b6ab937] {jit-backend
[2a709dd9b754f92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce5d
[2a709dd9b760b39] jit-backend-dump}
[2a709dd9b76a84f] {jit-backend-addr
Loop 4 ((let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)) has address 0x7f71941ce70d to 0x7f71941cea20 (bootstrap 0x7f71941ce680)
       gc table: 0x7f71941ce5d0
       function: 0x7f71941ce680
         resops: 0x7f71941ce70d
       failures: 0x7f71941cea20
            end: 0x7f71941cec0d
[2a709dd9b76d895] jit-backend-addr}
[2a709dd9b771a7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce724 +0  2B030000
[2a709dd9b772d86] jit-backend-dump}
[2a709dd9b776360] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce73a +0  31030000
[2a709dd9b777250] jit-backend-dump}
[2a709dd9b77a4e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce74d +0  56030000
[2a709dd9b77b22d] jit-backend-dump}
[2a709dd9b77e343] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce75b +0  64030000
[2a709dd9b77f0c0] jit-backend-dump}
[2a709dd9b7821bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce76b +0  70030000
[2a709dd9b782edc] jit-backend-dump}
[2a709dd9b785f0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce77f +0  78030000
[2a709dd9b786c86] jit-backend-dump}
[2a709dd9b789dfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce796 +0  7D030000
[2a709dd9b78ab10] jit-backend-dump}
[2a709dd9b78daae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce7a3 +0  8C030000
[2a709dd9b78e78f] jit-backend-dump}
[2a709dd9b791785] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce7b3 +0  98030000
[2a709dd9b792498] jit-backend-dump}
[2a709dd9b79535c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce7c9 +0  9E030000
[2a709dd9b796093] jit-backend-dump}
[2a709dd9b798f8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce7df +0  A4030000
[2a709dd9b799cad] jit-backend-dump}
[2a709dd9b79cb77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce7f6 +0  A9030000
[2a709dd9b79d86b] jit-backend-dump}
[2a709dd9b7a089e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce80d +0  AE030000
[2a709dd9b7a159b] jit-backend-dump}
[2a709dd9b7a44f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce825 +0  B2030000
[2a709dd9b7a5214] jit-backend-dump}
[2a709dd9b7a822c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce882 +0  71030000
[2a709dd9b7a8f44] jit-backend-dump}
[2a709dd9b7ac8df] jit-backend}
[2a709dd9b7b0407] {jit-log-opt-loop
# Loop 4 ((let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)) : entry bridge with 112 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)')
+325: guard_class(p1, 16435208, descr=<Guard0x44178e0>) [p0, p1]
+344: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+348: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x4417940>) [p0, p1]
debug_merge_point(0, 0, '(>= x4935 0)')
+366: guard_not_invalidated(descr=<Guard0x45403c8>) [p0, p1]
+366: guard_class(p0, 16504944, descr=<Guard0x4540410>) [p0, p1]
+385: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+389: i8 = int_ge(i6, 0)
+393: guard_true(i8, descr=<Guard0x4540458>) [p0, p1]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+399: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+403: guard_class(p9, 16479576, descr=<Guard0x45404a0>) [p0, p1]
+415: p11 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+426: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x45404e8>) [p0, p1]
+435: p13 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+439: guard_nonnull_class(p13, ConstClass(W_Vector), descr=<Guard0x44179a0>) [p0, p1]
+458: i15 = getfield_gc_i(p13, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+462: i16 = int_lt(i6, i15)
+465: guard_true(i16, descr=<Guard0x4540530>) [p0, p1]
+471: p17 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+475: guard_class(p17, 16622984, descr=<Guard0x4540578>) [p0, p1]
+487: p19 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+491: p20 = getarrayitem_gc_r(p19, i6, descr=<ArrayP 8>)
+496: guard_class(p20, ConstClass(W_Vector), descr=<Guard0x45405c0>) [p0, p1]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
+509: p22 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+513: guard_nonnull_class(p22, ConstClass(W_Flonum), descr=<Guard0x4417a00>) [p0, p1]
+531: p24 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+535: guard_nonnull_class(p24, ConstClass(W_Flonum), descr=<Guard0x4417a60>) [p0, p1]
+554: p26 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+558: guard_nonnull_class(p26, ConstClass(W_Flonum), descr=<Guard0x4417ac0>) [p0, p1]
+577: p28 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+581: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x4417b20>) [p0, p1]
+601: p30 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+601: f31 = cast_int_to_float(i6)
+606: f32 = getfield_gc_f(p26, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+612: f33 = float_mul(f31, f32)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+616: f34 = getfield_gc_f(p22, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+621: f35 = float_add(f34, f33)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
+625: i36 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+630: f37 = cast_int_to_float(i36)
+635: f38 = float_mul(f37, f32)
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+639: f39 = getfield_gc_f(p24, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+645: f40 = float_add(f39, f38)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+649: f41 = float_mul(f35, f35)
debug_merge_point(0, 0, '(* zi zi)')
+657: f42 = float_mul(f40, f40)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+665: f43 = float_add(f41, f42)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+673: i45 = float_gt(f43, 16.000000)
+688: guard_false(i45, descr=<Guard0x4540608>) [p0, p1]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+694: f46 = float_sub(f41, f42)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+698: f47 = float_add(f46, f35)
debug_merge_point(0, 0, '(* zr zi)')
+702: f48 = float_mul(f35, f40)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+710: f50 = float_mul(2.000000, f48)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+720: f51 = float_add(f50, f40)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+724: p52 = new_with_vtable(descr=<SizeDescr 56>)
+774: p53 = new_with_vtable(descr=<SizeDescr 16>)
+785: setfield_gc(p53, f40, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+790: p54 = new_with_vtable(descr=<SizeDescr 16>)
+801: setfield_gc(p54, f35, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+807: p55 = new_with_vtable(descr=<SizeDescr 48>)
+906: f56 = getfield_gc_f(p54, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+912: f57 = getfield_gc_f(p53, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+917: setfield_gc(p55, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+928: setfield_gc(p52, ConstPtr(ptr58), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+939: setfield_gc(p52, ConstPtr(ptr59), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+943: setfield_gc(p52, p53, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+954: setfield_gc(p52, ConstPtr(ptr60), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+965: setfield_gc(p52, ConstPtr(ptr61), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+969: setfield_gc(p52, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+973: setfield_gc(p55, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+977: setfield_gc(p55, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+988: setfield_gc(p55, ConstPtr(ptr62), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+992: setfield_gc(p55, p20, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+996: jump(p52, f47, f51, 1, p55, p3, ConstPtr(ptr60), 64, ConstPtr(ptr61), 16.000000, p54, f56, p53, f57, descr=TargetToken(71669088))
+1104: --end of the loop--
[2a709dd9b802664] jit-log-opt-loop}
[2a709dd9bd3c5ff] {jit-backend
[2a709dd9bdf3d3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cee
[2a709dd9be03b6b] jit-backend-dump}
[2a709dd9be0ea61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cef34 +0  23000000
[2a709dd9be0ff25] jit-backend-dump}
[2a709dd9be13cb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf365 +0  23000000
[2a709dd9be14ba4] jit-backend-dump}
[2a709dd9be17e97] {jit-backend-addr
bridge out of Guard 0x44976e8 has address 0x7f71941cef30 to 0x7f71941cf360
       gc table: 0x7f71941cee20
    jump target: 0x7f71941cef30
         resops: 0x7f71941cef3e
       failures: 0x7f71941cf360
            end: 0x7f71941cf6b1
[2a709dd9be1a26f] jit-backend-addr}
[2a709dd9be1dbeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cef5d +0  62040000
[2a709dd9be1ea63] jit-backend-dump}
[2a709dd9be21dc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cef74 +0  67040000
[2a709dd9be22b8e] jit-backend-dump}
[2a709dd9be25ca7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cef81 +0  76040000
[2a709dd9be26a00] jit-backend-dump}
[2a709dd9be29a58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cefa0 +0  73040000
[2a709dd9be2a767] jit-backend-dump}
[2a709dd9be2d699] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cefcd +0  62040000
[2a709dd9be2e3ac] jit-backend-dump}
[2a709dd9be31343] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cefdd +0  6E040000
[2a709dd9be320d3] jit-backend-dump}
[2a709dd9be34fc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ceff2 +0  75040000
[2a709dd9be35c8b] jit-backend-dump}
[2a709dd9be38b5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf00f +0  74040000
[2a709dd9be39827] jit-backend-dump}
[2a709dd9be3c704] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf021 +0  7E040000
[2a709dd9be3d3c7] jit-backend-dump}
[2a709dd9be402a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf037 +0  84040000
[2a709dd9be40f66] jit-backend-dump}
[2a709dd9be43e4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf044 +0  93040000
[2a709dd9be44b15] jit-backend-dump}
[2a709dd9be47a10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf054 +0  9F040000
[2a709dd9be4873e] jit-backend-dump}
[2a709dd9be4b67d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf068 +0  A7040000
[2a709dd9be4c330] jit-backend-dump}
[2a709dd9be4f247] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf07e +0  AD040000
[2a709dd9be4ff04] jit-backend-dump}
[2a709dd9be52e4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf08e +0  B9040000
[2a709dd9be53afc] jit-backend-dump}
[2a709dd9be569d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf09c +0  C7040000
[2a709dd9be576a2] jit-backend-dump}
[2a709dd9be5a5bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf0a9 +0  D6040000
[2a709dd9be5b27e] jit-backend-dump}
[2a709dd9be5e167] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf0c3 +0  D8040000
[2a709dd9be5ee18] jit-backend-dump}
[2a709dd9be61def] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf0cd +0  EA040000
[2a709dd9be62aa9] jit-backend-dump}
[2a709dd9be659b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf0e4 +0  EF040000
[2a709dd9be66698] jit-backend-dump}
[2a709dd9be69593] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf0f1 +0  FE040000
[2a709dd9be6a275] jit-backend-dump}
[2a709dd9be6d148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf102 +0  09050000
[2a709dd9be6ddf9] jit-backend-dump}
[2a709dd9be70c9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf118 +0  0F050000
[2a709dd9be7195e] jit-backend-dump}
[2a709dd9be7482f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf12f +0  14050000
[2a709dd9be754e2] jit-backend-dump}
[2a709dd9be7842a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf145 +0  1A050000
[2a709dd9be79118] jit-backend-dump}
[2a709dd9be7c050] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf15b +0  20050000
[2a709dd9be7cd1f] jit-backend-dump}
[2a709dd9be7fbf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf1bd +0  DA040000
[2a709dd9be808a9] jit-backend-dump}
[2a709dd9be83a24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cccbf +0  6D220000
[2a709dd9be84733] jit-backend-dump}
[2a709dd9be884e7] jit-backend}
[2a709dd9be8c02b] {jit-log-opt-bridge
# bridge out of Guard 0x44976e8 with 163 ops
[i0, f1, f2, p3, p4, p5]
+294: guard_not_invalidated(descr=<Guard0x4417b80>) [i0, f1, f2, p3, p4, p5]
+294: p6 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+312: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x4540650>) [i0, f1, f2, p3, p4, p5]
+321: p8 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+325: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x4417be0>) [i0, f1, f2, p3, p4, p5]
+344: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+348: i11 = int_eq(i0, i10)
+351: guard_false(i11, descr=<Guard0x4540698>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
+357: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+369: guard_nonnull_class(p12, ConstClass(ForwardLink), descr=<Guard0x4417c40>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(* zr zr)')
+388: f14 = float_mul(f2, f2)
debug_merge_point(0, 0, '(* zi zi)')
+397: f15 = float_mul(f1, f1)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+406: f16 = float_add(f14, f15)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+410: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+414: guard_nonnull_class(p17, ConstClass(W_Flonum), descr=<Guard0x4417ca0>) [i0, f1, f2, p3, p4, p5]
+433: f19 = getfield_gc_f(p17, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+439: i20 = float_gt(f16, f19)
+443: guard_true(i20, descr=<Guard0x45406e0>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, 'c')
+449: p21 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+461: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x4540728>) [i0, f1, f2, p3, p4, p5]
+470: p23 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+475: p24 = getfield_gc_r(p4, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+480: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x4417d00>) [i0, f1, f2, p3, p4, p5]
+499: p26 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+504: guard_class(p26, 16435208, descr=<Guard0x4540770>) [i0, f1, f2, p3, p4, p5]
+517: p28 = getfield_gc_r(p26, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+521: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x4417d60>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-set! AppRand7 y4931 AppRand8) from (> AppRand2 radius^2)')
+539: guard_class(p23, 16504944, descr=<Guard0x45407b8>) [i0, f1, f2, p3, p4, p5]
+552: p31 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+556: guard_class(p31, 16479576, descr=<Guard0x4540800>) [i0, f1, f2, p3, p4, p5]
+568: p33 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+579: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x4540848>) [i0, f1, f2, p3, p4, p5]
+588: p35 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+592: guard_nonnull_class(p35, ConstClass(W_Fixnum), descr=<Guard0x4417dc0>) [i0, f1, f2, p3, p4, p5]
+610: p37 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+614: guard_class(p37, 16623792, descr=<Guard0x4540890>) [i0, f1, f2, p3, p4, p5]
+626: i39 = getfield_gc_i(p35, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+630: i41 = int_ge(i39, 0)
+634: guard_true(i41, descr=<Guard0x45408d8>) [i0, f1, f2, p3, p4, p5]
+640: i42 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+644: i43 = int_lt(i39, i42)
+647: guard_true(i43, descr=<Guard0x4540920>) [i0, f1, f2, p3, p4, p5]
+653: p44 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+657: setarrayitem_gc(p44, i39, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))')
debug_merge_point(0, 0, '(- x4935 1)')
+662: i45 = getfield_gc_i(p23, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+666: i47 = int_sub_ovf(i45, 1)
+673: guard_no_overflow(descr=<Guard0x4417e20>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop2 AppRand9)')
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)')
debug_merge_point(0, 0, '(>= x4935 0)')
+679: i50 = int_ge(i47, 0)
+683: guard_true(i50, descr=<Guard0x4540968>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+689: p51 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+693: guard_nonnull_class(p51, ConstClass(W_Vector), descr=<Guard0x4417e80>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
+712: i53 = getfield_gc_i(p51, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+716: i54 = int_lt(i47, i53)
+719: guard_true(i54, descr=<Guard0x45409b0>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
+725: p55 = getfield_gc_r(p51, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+729: guard_class(p55, 16622984, descr=<Guard0x45409f8>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
+742: p57 = getfield_gc_r(p51, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+746: p58 = getarrayitem_gc_r(p57, i47, descr=<ArrayP 8>)
+751: guard_class(p58, ConstClass(W_Vector), descr=<Guard0x4540a40>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
+764: p60 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+768: guard_nonnull_class(p60, ConstClass(W_Flonum), descr=<Guard0x4417ee0>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
+787: p62 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+791: guard_nonnull_class(p62, ConstClass(W_Flonum), descr=<Guard0x4417f40>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
+809: p64 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+813: guard_nonnull_class(p64, ConstClass(W_Flonum), descr=<Guard0x4417fa0>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
+831: p66 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+831: f67 = cast_int_to_float(i47)
+836: f68 = getfield_gc_f(p64, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+842: f69 = float_mul(f67, f68)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+847: f70 = getfield_gc_f(p60, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+853: f71 = float_add(f70, f69)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
+858: f72 = cast_int_to_float(i39)
+863: f73 = float_mul(f72, f68)
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+868: f74 = getfield_gc_f(p62, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+874: f75 = float_add(f74, f73)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+879: f76 = float_mul(f71, f71)
debug_merge_point(0, 0, '(* zi zi)')
+888: f77 = float_mul(f75, f75)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+898: f78 = float_add(f76, f77)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+908: i80 = float_gt(f78, 16.000000)
+923: guard_false(i80, descr=<Guard0x4540a88>) [p23, i45, p26, p31, p28, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+929: f81 = float_sub(f76, f77)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+934: f82 = float_add(f81, f71)
debug_merge_point(0, 0, '(* zr zi)')
+939: f83 = float_mul(f71, f75)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+949: f85 = float_mul(2.000000, f83)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+960: f86 = float_add(f85, f75)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+964: p87 = new_with_vtable(descr=<SizeDescr 56>)
+1008: p88 = new_with_vtable(descr=<SizeDescr 16>)
+1019: setfield_gc(p88, f75, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1024: p89 = new_with_vtable(descr=<SizeDescr 16>)
+1036: setfield_gc(p89, f71, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1043: p90 = new_with_vtable(descr=<SizeDescr 48>)
+1055: p91 = new_with_vtable(descr=<SizeDescr 24>)
+1066: setfield_gc(p91, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1070: setfield_gc(p91, i47, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1162: f92 = getfield_gc_f(p89, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1169: f93 = getfield_gc_f(p88, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1174: setfield_gc(p87, ConstPtr(ptr94), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1185: setfield_gc(p87, ConstPtr(ptr95), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1189: setfield_gc(p90, p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1200: setfield_gc(p87, ConstPtr(ptr96), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1204: setfield_gc(p90, ConstPtr(ptr97), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1208: setfield_gc(p90, p91, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1212: setfield_gc(p90, p58, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1216: setfield_gc(p90, p26, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1227: setfield_gc(p87, ConstPtr(ptr98), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1231: setfield_gc(p87, p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1235: setfield_gc(p87, p89, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1239: jump(p87, f82, f86, 1, p90, p28, ConstPtr(ptr95), 64, ConstPtr(ptr96), 16.000000, p89, f92, p88, f93, descr=TargetToken(71669088))
+1344: --end of the loop--
[2a709dd9bf0ddfb] jit-log-opt-bridge}
[2a709dd9c18cd5b] {jit-backend
[2a709dd9c1e2157] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf7d
[2a709dd9c1ebf6c] jit-backend-dump}
[2a709dd9c1f6945] {jit-backend-addr
Loop 6 ((let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)) has address 0x7f71941cf8ed to 0x7f71941cfac0 (bootstrap 0x7f71941cf860)
       gc table: 0x7f71941cf7d0
       function: 0x7f71941cf860
         resops: 0x7f71941cf8ed
       failures: 0x7f71941cfac0
            end: 0x7f71941cfc92
[2a709dd9c1f98e5] jit-backend-addr}
[2a709dd9c1fdaff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf904 +0  CA010000
[2a709dd9c1fee0a] jit-backend-dump}
[2a709dd9c2021ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf91a +0  D0010000
[2a709dd9c20309b] jit-backend-dump}
[2a709dd9c206635] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf92d +0  F5010000
[2a709dd9c20738e] jit-backend-dump}
[2a709dd9c20a576] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf943 +0  FB010000
[2a709dd9c20b2f7] jit-backend-dump}
[2a709dd9c20e315] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf953 +0  07020000
[2a709dd9c20f05b] jit-backend-dump}
[2a709dd9c212106] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf967 +0  0F020000
[2a709dd9c212e27] jit-backend-dump}
[2a709dd9c21903d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf97e +0  14020000
[2a709dd9c219fcf] jit-backend-dump}
[2a709dd9c21d7a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf98f +0  1F020000
[2a709dd9c21e544] jit-backend-dump}
[2a709dd9c22164d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf9a6 +0  24020000
[2a709dd9c22236f] jit-backend-dump}
[2a709dd9c2255d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf9cb +0  1B020000
[2a709dd9c22634c] jit-backend-dump}
[2a709dd9c229409] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf9f8 +0  0A020000
[2a709dd9c22a0d2] jit-backend-dump}
[2a709dd9c22d05a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cfa08 +0  16020000
[2a709dd9c22dd14] jit-backend-dump}
[2a709dd9c230d66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cfa23 +0  17020000
[2a709dd9c231a1f] jit-backend-dump}
[2a709dd9c2349fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cfa5c +0  FA010000
[2a709dd9c2356b4] jit-backend-dump}
[2a709dd9c23868e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cfa71 +0  01020000
[2a709dd9c23933c] jit-backend-dump}
[2a709dd9c23cf40] jit-backend}
[2a709dd9c240c6d] {jit-log-opt-loop
# Loop 6 ((let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)) : entry bridge with 68 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
+293: guard_class(p1, 16437352, descr=<Guard0x454a020>) [p0, p1]
+312: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+316: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x454a080>) [p0, p1]
debug_merge_point(0, 0, '(= c max-count)')
+334: guard_not_invalidated(descr=<Guard0x4540ad0>) [p0, p1]
+334: guard_class(p0, 16500368, descr=<Guard0x4540b18>) [p0, p1]
+353: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+357: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x454a0e0>) [p0, p1]
+375: p8 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+379: guard_class(p8, 16478824, descr=<Guard0x4540b60>) [p0, p1]
+391: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+402: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x4540ba8>) [p0, p1]
+411: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+415: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x454a140>) [p0, p1]
+434: i14 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+438: i15 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+442: i16 = int_eq(i14, i15)
+445: guard_false(i16, descr=<Guard0x4540bf0>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+451: p17 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+455: guard_nonnull_class(p17, ConstClass(W_Flonum), descr=<Guard0x454a1a0>) [p0, p1]
+474: f19 = getfield_gc_f(p17, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+480: f20 = float_mul(f19, f19)
debug_merge_point(0, 0, '(* zi zi)')
+488: p21 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+492: guard_nonnull_class(p21, ConstClass(W_Flonum), descr=<Guard0x454a200>) [p0, p1]
+511: f23 = getfield_gc_f(p21, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+517: f24 = float_mul(f23, f23)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+525: f25 = float_add(f20, f24)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+533: p26 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+537: guard_nonnull_class(p26, ConstClass(W_Flonum), descr=<Guard0x454a260>) [p0, p1]
+556: f28 = getfield_gc_f(p26, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+562: i29 = float_gt(f25, f28)
+566: guard_false(i29, descr=<Guard0x4540c38>) [p0, p1]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+572: f30 = float_sub(f20, f24)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+576: p31 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+580: guard_nonnull_class(p31, ConstClass(W_Flonum), descr=<Guard0x454a2c0>) [p0, p1]
+599: f33 = getfield_gc_f(p31, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+605: f34 = float_add(f30, f33)
debug_merge_point(0, 0, '(* zr zi)')
+609: f35 = float_mul(f19, f23)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+613: f37 = float_mul(2.000000, f35)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+632: p38 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: guard_nonnull_class(p38, ConstClass(W_Flonum), descr=<Guard0x454a320>) [p0, p1]
+656: f40 = getfield_gc_f(p38, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+663: f41 = float_add(f37, f40)
debug_merge_point(0, 0, '(+ c 1)')
+667: i43 = int_add_ovf(i14, 1)
+671: guard_no_overflow(descr=<Guard0x4540c80>) [p0, p1]
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+677: jump(p8, f34, f41, i43, p1, p3, p12, i15, p26, f28, p31, f33, p38, f40, descr=TargetToken(71669088))
+752: --end of the loop--
[2a709dd9c27a54a] jit-log-opt-loop}
[2a709dd9c9acaca] {jit-backend
[2a709dd9ca655d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cfe
[2a709dd9ca73896] jit-backend-dump}
[2a709dd9ca7e0c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cff64 +0  23000000
[2a709dd9ca7f547] jit-backend-dump}
[2a709dd9ca83228] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0395 +0  23000000
[2a709dd9ca840f2] jit-backend-dump}
[2a709dd9ca8728c] {jit-backend-addr
bridge out of Guard 0x4540458 has address 0x7f71941cff60 to 0x7f71941d0390
       gc table: 0x7f71941cfe60
    jump target: 0x7f71941cff60
         resops: 0x7f71941cff6e
       failures: 0x7f71941d0390
            end: 0x7f71941d0671
[2a709dd9ca896aa] jit-backend-addr}
[2a709dd9ca8ca30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cff7e +0  55040000
[2a709dd9ca8d899] jit-backend-dump}
[2a709dd9ca909af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cff95 +0  5A040000
[2a709dd9ca9172f] jit-backend-dump}
[2a709dd9ca9478a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cffa1 +0  86040000
[2a709dd9ca9550e] jit-backend-dump}
[2a709dd9ca985dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cffaf +0  94040000
[2a709dd9ca9936a] jit-backend-dump}
[2a709dd9ca9c3bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cffc0 +0  9F040000
[2a709dd9ca9d145] jit-backend-dump}
[2a709dd9caa0123] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cffd4 +0  A7040000
[2a709dd9caa0e3b] jit-backend-dump}
[2a709dd9caa3d71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cffec +0  AB040000
[2a709dd9caa4a92] jit-backend-dump}
[2a709dd9caa7926] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cfffa +0  B9040000
[2a709dd9caa8629] jit-backend-dump}
[2a709dd9caab552] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0012 +0  BD040000
[2a709dd9caac292] jit-backend-dump}
[2a709dd9caaf138] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0026 +0  C5040000
[2a709dd9caafe3b] jit-backend-dump}
[2a709dd9cab2d0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0030 +0  D7040000
[2a709dd9cab3a27] jit-backend-dump}
[2a709dd9cab6950] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0050 +0  D3040000
[2a709dd9cab7659] jit-backend-dump}
[2a709dd9caba505] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0066 +0  D9040000
[2a709dd9cabb20e] jit-backend-dump}
[2a709dd9cabe0e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0074 +0  E7040000
[2a709dd9cabedcf] jit-backend-dump}
[2a709dd9cac1c78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d007e +0  F9040000
[2a709dd9cac297e] jit-backend-dump}
[2a709dd9cac5818] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0090 +0  03050000
[2a709dd9cac650b] jit-backend-dump}
[2a709dd9cac9389] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d009d +0  12050000
[2a709dd9caca09c] jit-backend-dump}
[2a709dd9caccf8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d00ad +0  1E050000
[2a709dd9cacdca9] jit-backend-dump}
[2a709dd9cad0bc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d00ca +0  1D050000
[2a709dd9cad18cf] jit-backend-dump}
[2a709dd9cad4778] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d00dd +0  26050000
[2a709dd9cad549d] jit-backend-dump}
[2a709dd9cad835e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d00f0 +0  2F050000
[2a709dd9cad9095] jit-backend-dump}
[2a709dd9cadbf5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0103 +0  38050000
[2a709dd9cadcc84] jit-backend-dump}
[2a709dd9cadfb6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0166 +0  F1040000
[2a709dd9cae0895] jit-backend-dump}
[2a709dd9cae3aae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941ce75b +0  01180000
[2a709dd9cae47ef] jit-backend-dump}
[2a709dd9cae8669] jit-backend}
[2a709dd9caec04d] {jit-log-opt-bridge
# bridge out of Guard 0x4540458 with 155 ops
[p0, p1]
+278: guard_class(p1, 16435208, descr=<Guard0x454a380>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+294: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x454a3e0>) [p0, p1]
debug_merge_point(0, 0, '(>= x4935 0)')
+313: guard_not_invalidated(descr=<Guard0x4540cc8>) [p0, p1]
+313: guard_class(p0, 16504944, descr=<Guard0x4540d10>) [p0, p1]
+325: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+329: i8 = int_ge(i6, 0)
+333: guard_false(i8, descr=<Guard0x4540d58>) [p0, p1]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand10 (- y4931 1)]) (loop1 AppRand10))')
+339: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(- y4931 1)')
+343: guard_class(p9, 16479576, descr=<Guard0x4540da0>) [p0, p1]
+356: p11 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+367: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x4540de8>) [p0, p1]
+376: p13 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+380: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x454a440>) [p0, p1]
+400: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+404: i17 = int_sub_ovf(i15, 1)
+408: guard_no_overflow(descr=<Guard0x4540e30>) [p0, p1]
debug_merge_point(0, 0, '(loop1 AppRand10)')
+414: p18 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+418: guard_nonnull_class(p18, 16479200, descr=<Guard0x454a4a0>) [p0, p1]
+438: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+449: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x4540e78>) [p0, p1]
+458: p22 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if2 (>= y4931 0)]) (if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void)))')
debug_merge_point(0, 0, '(>= y4931 0)')
+458: i24 = int_ge(i17, 0)
+462: guard_true(i24, descr=<Guard0x4540ec0>) [p0, p1]
debug_merge_point(0, 0, '(if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void))')
debug_merge_point(0, 0, '(let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11))')
debug_merge_point(0, 0, '(lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))')
+468: p25 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+472: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+476: p27 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+480: p28 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+484: p29 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+488: guard_class(p29, 16505296, descr=<Guard0x4540f08>) [p0, p1]
debug_merge_point(0, 0, '(- n 1)')
+500: p31 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+504: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x454a500>) [p0, p1]
+522: i33 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+526: i35 = int_sub_ovf(i33, 1)
+530: guard_no_overflow(descr=<Guard0x4540f50>) [p0, p1]
debug_merge_point(0, 0, '(loop2 AppRand11)')
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand11)')
debug_merge_point(0, 0, '(>= x4935 0)')
+536: i37 = int_ge(i35, 0)
+540: guard_true(i37, descr=<Guard0x4540f98>) [p0, p1]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+546: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x454a560>) [p0, p1]
+564: i39 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+568: i40 = int_lt(i35, i39)
+571: guard_true(i40, descr=<Guard0x4540fe0>) [p0, p1]
+577: p41 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+581: guard_class(p41, 16622984, descr=<Guard0x4541028>) [p0, p1]
+593: p43 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+597: p44 = getarrayitem_gc_r(p43, i35, descr=<ArrayP 8>)
+609: guard_class(p44, ConstClass(W_Vector), descr=<Guard0x4541070>) [p0, p1]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
+622: guard_nonnull_class(p26, ConstClass(W_Flonum), descr=<Guard0x454a5c0>) [p0, p1]
+641: guard_nonnull_class(p27, ConstClass(W_Flonum), descr=<Guard0x454a620>) [p0, p1]
+660: guard_nonnull_class(p25, ConstClass(W_Flonum), descr=<Guard0x454a680>) [p0, p1]
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+679: f49 = cast_int_to_float(i35)
+684: f50 = getfield_gc_f(p25, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+690: f51 = float_mul(f49, f50)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+695: f52 = getfield_gc_f(p26, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+701: f53 = float_add(f52, f51)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
+706: f54 = cast_int_to_float(i17)
+711: f55 = float_mul(f54, f50)
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+716: f56 = getfield_gc_f(p27, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+722: f57 = float_add(f56, f55)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+727: f58 = float_mul(f53, f53)
debug_merge_point(0, 0, '(* zi zi)')
+737: f59 = float_mul(f57, f57)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+747: f60 = float_add(f58, f59)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+757: i62 = float_gt(f60, 16.000000)
+772: guard_false(i62, descr=<Guard0x45410b8>) [p0, p1]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+778: f63 = float_sub(f58, f59)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+783: f64 = float_add(f63, f53)
debug_merge_point(0, 0, '(* zr zi)')
+788: f65 = float_mul(f53, f57)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+798: f67 = float_mul(2.000000, f65)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+809: f68 = float_add(f67, f57)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+814: p69 = new_with_vtable(descr=<SizeDescr 56>)
+861: p70 = new_with_vtable(descr=<SizeDescr 16>)
+872: setfield_gc(p70, f57, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+878: p71 = new_with_vtable(descr=<SizeDescr 16>)
+896: setfield_gc(p71, f53, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+902: p72 = new_with_vtable(descr=<SizeDescr 48>)
+920: p73 = new_with_vtable(descr=<SizeDescr 24>)
+938: p74 = new_with_vtable(descr=<SizeDescr 72>)
+956: setfield_gc(p74, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+960: setfield_gc(p74, ConstPtr(ptr75), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+964: p76 = new_with_vtable(descr=<SizeDescr 16>)
+976: setfield_gc(p76, i17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+981: setfield_gc(p74, p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+985: setfield_gc(p74, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+989: setfield_gc(p74, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+993: setfield_gc(p74, p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+997: setfield_gc(p74, p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+1001: setfield_gc(p74, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+1005: setfield_gc(p73, p74, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1009: setfield_gc(p73, i35, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1115: f77 = getfield_gc_f(p71, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1128: f78 = getfield_gc_f(p70, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1141: setfield_gc(p72, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1159: setfield_gc(p69, ConstPtr(ptr79), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1170: setfield_gc(p69, ConstPtr(ptr80), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1174: setfield_gc(p69, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1185: setfield_gc(p69, ConstPtr(ptr81), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1196: setfield_gc(p69, ConstPtr(ptr82), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1200: setfield_gc(p69, p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1204: setfield_gc(p72, p73, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1208: setfield_gc(p72, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1219: setfield_gc(p72, ConstPtr(ptr83), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1223: setfield_gc(p72, p44, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1227: jump(p69, f64, f68, 1, p72, p3, ConstPtr(ptr81), 64, ConstPtr(ptr82), 16.000000, p71, f77, p70, f78, descr=TargetToken(71669088))
+1328: --end of the loop--
[2a709dd9cb60bd5] jit-log-opt-bridge}
[2a709dd9cddded8] {jit-backend
[2a709dd9ce7ccb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d07a
[2a709dd9ce861f7] jit-backend-dump}
[2a709dd9ce8f9b0] {jit-backend-addr
Loop 8 ((let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))) from (loop4959 AppRand14)) has address 0x7f71941d08bd to 0x7f71941d0ac0 (bootstrap 0x7f71941d0830)
       gc table: 0x7f71941d07a0
       function: 0x7f71941d0830
         resops: 0x7f71941d08bd
       failures: 0x7f71941d0ac0
            end: 0x7f71941d0d00
[2a709dd9ce925d6] jit-backend-addr}
[2a709dd9ce9653c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d08e7 +0  71020000
[2a709dd9ce97722] jit-backend-dump}
[2a709dd9ce9aa68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d08fd +0  77020000
[2a709dd9ce9b86f] jit-backend-dump}
[2a709dd9cf63426] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0910 +0  9C020000
[2a709dd9cf64b4e] jit-backend-dump}
[2a709dd9cf6aef2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d091e +0  AA020000
[2a709dd9cf6bea8] jit-backend-dump}
[2a709dd9cf6f08e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d092e +0  B6020000
[2a709dd9cf6fdf3] jit-backend-dump}
[2a709dd9cf72dc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0942 +0  BE020000
[2a709dd9cf73a84] jit-backend-dump}
[2a709dd9cf76970] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0950 +0  CC020000
[2a709dd9cf7761a] jit-backend-dump}
[2a709dd9cf7a5e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0959 +0  DF020000
[2a709dd9cf7b29c] jit-backend-dump}
[2a709dd9cf7e19b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d096f +0  E5020000
[2a709dd9cf7ee36] jit-backend-dump}
[2a709dd9cf81d12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0980 +0  F0020000
[2a709dd9cf829cf] jit-backend-dump}
[2a709dd9cf85a74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d098d +0  FF020000
[2a709dd9cf86786] jit-backend-dump}
[2a709dd9cf89a32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0a2e +0  96020000
[2a709dd9cf8a6f5] jit-backend-dump}
[2a709dd9cf8d6a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0a37 +0  A9020000
[2a709dd9cf8e315] jit-backend-dump}
[2a709dd9cf91eaf] jit-backend}
[2a709dd9cf95af3] {jit-log-opt-loop
# Loop 8 ((let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))) from (loop4959 AppRand14)) : loop with 69 ops
[p0, p1]
+293: label(p0, p1, descr=TargetToken(72094032))
debug_merge_point(0, 0, '(let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))) from (loop4959 AppRand14)')
+312: guard_class(p1, 16435208, descr=<Guard0x454a740>) [p0, p1]
+331: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+335: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x454a800>) [p0, p1]
debug_merge_point(0, 0, '(>= i4961 0)')
+353: guard_not_invalidated(descr=<Guard0x4541418>) [p0, p1]
+353: guard_class(p0, 16504944, descr=<Guard0x45413d0>) [p0, p1]
+372: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+376: i8 = int_ge(i6, 0)
+380: guard_true(i8, descr=<Guard0x4541388>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))')
debug_merge_point(0, 0, '(let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14)))')
debug_merge_point(0, 0, '(make-vector n4954)')
+386: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+390: guard_class(p9, 16482208, descr=<Guard0x4541340>) [p0, p1]
+402: p11 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+413: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x45412f8>) [p0, p1]
+422: i13 = getfield_gc_i(p9, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+426: i15 = int_lt(i13, 0)
+430: guard_false(i15, descr=<Guard0x45412b0>) [p0, p1]
+436: i16 = int_is_zero(i13)
+439: guard_false(i16, descr=<Guard0x4541268>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! matrix4956 i4961 AppRand13)')
+445: p17 = getfield_gc_r(p9, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+449: guard_nonnull_class(p17, ConstClass(W_Vector), descr=<Guard0x454a7a0>) [p0, p1]
+467: p19 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+471: guard_class(p19, 16622984, descr=<Guard0x4541220>) [p0, p1]
+484: i21 = getfield_gc_i(p17, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+488: i22 = int_lt(i6, i21)
+491: guard_true(i22, descr=<Guard0x45411d8>) [p0, p1]
+497: p23 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+501: p24 = new_with_vtable(descr=<SizeDescr 32>)
+548: setfield_gc(p24, i13, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+552: p26 = new_array_clear(1, descr=<ArrayP 8>)
+578: setarrayitem_gc(p26, 0, ConstPtr(ptr28), descr=<ArrayP 8>)
+582: setfield_gc(p24, p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+593: setfield_gc(p24, ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+608: setarrayitem_gc(p23, i6, p24, descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))')
debug_merge_point(0, 0, '(- i4961 1)')
+613: i31 = int_sub(i6, 1)
debug_merge_point(0, 0, '(loop4959 AppRand14)')
debug_merge_point(0, 0, '(let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))) from (loop4959 AppRand14)')
+617: label(p9, i31, p1, p3, p17, i21, p23, i13, descr=TargetToken(72094112))
debug_merge_point(0, 0, '(let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))) from (loop4959 AppRand14)')
debug_merge_point(0, 0, '(>= i4961 0)')
+648: guard_not_invalidated(descr=<Guard0x454a6e0>) [i31, p9, p1, p3]
+648: i33 = int_ge(i31, 0)
+652: guard_true(i33, descr=<Guard0x4541190>) [i31, p9, p1, p3]
debug_merge_point(0, 0, '(if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))')
debug_merge_point(0, 0, '(let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14)))')
debug_merge_point(0, 0, '(make-vector n4954)')
debug_merge_point(0, 0, '(vector-set! matrix4956 i4961 AppRand13)')
+658: i34 = int_lt(i31, i21)
+661: guard_true(i34, descr=<Guard0x4541148>) [i31, p9, p1, p3]
+667: p35 = new_with_vtable(descr=<SizeDescr 32>)
+711: setfield_gc(p35, i13, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+715: p37 = new_array_clear(1, descr=<ArrayP 8>)
+741: setarrayitem_gc(p37, 0, ConstPtr(ptr39), descr=<ArrayP 8>)
+745: setfield_gc(p35, p37, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+756: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+771: setarrayitem_gc(p23, i31, p35, descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))')
debug_merge_point(0, 0, '(- i4961 1)')
+776: i42 = int_sub(i31, 1)
debug_merge_point(0, 0, '(loop4959 AppRand14)')
debug_merge_point(0, 0, '(let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))) from (loop4959 AppRand14)')
+781: jump(p9, i42, p1, p3, p17, i21, p23, i13, descr=TargetToken(72094112))
+800: --end of the loop--
[2a709dd9cfcec92] jit-log-opt-loop}
[2a709dd9d58d3e8] {jit-backend
[2a709dd9d63a844] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0eb
[2a709dd9d6453ee] jit-backend-dump}
[2a709dd9d6505e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0fa4 +0  23000000
[2a709dd9d651b2f] jit-backend-dump}
[2a709dd9d655d70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d13e5 +0  23000000
[2a709dd9d656cbe] jit-backend-dump}
[2a709dd9d659e8e] {jit-backend-addr
bridge out of Guard 0x4540260 has address 0x7f71941d0fa0 to 0x7f71941d13e0
       gc table: 0x7f71941d0eb0
    jump target: 0x7f71941d0fa0
         resops: 0x7f71941d0fae
       failures: 0x7f71941d13e0
            end: 0x7f71941d1689
[2a709dd9d65c2e1] jit-backend-addr}
[2a709dd9d65f670] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0fbf +0  64040000
[2a709dd9d66049f] jit-backend-dump}
[2a709dd9d663727] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0fd3 +0  88040000
[2a709dd9d6643f0] jit-backend-dump}
[2a709dd9d6674a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0fea +0  8D040000
[2a709dd9d668154] jit-backend-dump}
[2a709dd9d66b125] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0ff4 +0  9F040000
[2a709dd9d66bdc6] jit-backend-dump}
[2a709dd9d66ed9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d100c +0  A3040000
[2a709dd9d66fa3c] jit-backend-dump}
[2a709dd9d6729fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d101b +0  B0040000
[2a709dd9d67368d] jit-backend-dump}
[2a709dd9d676655] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1033 +0  B4040000
[2a709dd9d6772d8] jit-backend-dump}
[2a709dd9d67a28b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1048 +0  BB040000
[2a709dd9d67af2f] jit-backend-dump}
[2a709dd9d67def4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1052 +0  CD040000
[2a709dd9d67eb92] jit-backend-dump}
[2a709dd9d681bcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d107f +0  BC040000
[2a709dd9d68287f] jit-backend-dump}
[2a709dd9d685823] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d109e +0  B9040000
[2a709dd9d6864a2] jit-backend-dump}
[2a709dd9d68947d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d10b3 +0  C0040000
[2a709dd9d68a0f6] jit-backend-dump}
[2a709dd9d68d056] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d10bd +0  D2040000
[2a709dd9d68dcd9] jit-backend-dump}
[2a709dd9d690c6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d10d7 +0  D4040000
[2a709dd9d69190b] jit-backend-dump}
[2a709dd9d694887] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d10ef +0  D8040000
[2a709dd9d6954fa] jit-backend-dump}
[2a709dd9d69845e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d10ff +0  E4040000
[2a709dd9d6990fc] jit-backend-dump}
[2a709dd9d69c06b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d111c +0  E3040000
[2a709dd9d69ccf7] jit-backend-dump}
[2a709dd9d69fc82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d112e +0  ED040000
[2a709dd9d6a0905] jit-backend-dump}
[2a709dd9d6a3890] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1140 +0  F7040000
[2a709dd9d6a453d] jit-backend-dump}
[2a709dd9d6a74cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1152 +0  01050000
[2a709dd9d6a815a] jit-backend-dump}
[2a709dd9d6ab0ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d11bc +0  B3040000
[2a709dd9d6abd3d] jit-backend-dump}
[2a709dd9d6aefa0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cdf0a +0  92300000
[2a709dd9d6afc54] jit-backend-dump}
[2a709dd9d6b3ab6] jit-backend}
[2a709dd9d6b755a] {jit-log-opt-bridge
# bridge out of Guard 0x4540260 with 154 ops
[p0, i1, p2, p3, p4]
+262: i6 = int_sub_ovf(i1, 1)
+269: guard_no_overflow(descr=<Guard0x454a860>) [p0, i1, p2, p3, p4]
+275: guard_not_invalidated(descr=<Guard0x4541610>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 AppRand9)')
+275: p7 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+286: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x4541658>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)')
+295: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+299: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x454a8c0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(>= x4935 0)')
+318: i12 = int_ge(i6, 0)
+322: guard_false(i12, descr=<Guard0x45416a0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand10 (- y4931 1)]) (loop1 AppRand10))')
debug_merge_point(0, 0, '(- y4931 1)')
+328: p13 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+332: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x454a920>) [p0, i1, p2, p3, p4]
+352: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+357: i17 = int_sub_ovf(i15, 1)
+361: guard_no_overflow(descr=<Guard0x45416e8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop1 AppRand10)')
+367: p18 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+371: guard_nonnull_class(p18, 16479200, descr=<Guard0x454a980>) [p0, i1, p2, p3, p4]
+391: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+403: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x4541730>) [p0, i1, p2, p3, p4]
+412: p22 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if2 (>= y4931 0)]) (if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void)))')
debug_merge_point(0, 0, '(>= y4931 0)')
+412: i24 = int_ge(i17, 0)
+416: guard_true(i24, descr=<Guard0x4541778>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void))')
debug_merge_point(0, 0, '(let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11))')
debug_merge_point(0, 0, '(lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))')
+422: p25 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+427: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+432: p27 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+437: p28 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+442: p29 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+454: guard_class(p29, 16505296, descr=<Guard0x45417c0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(- n 1)')
+467: p31 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+479: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x454a9e0>) [p0, i1, p2, p3, p4]
+498: i33 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+509: i35 = int_sub_ovf(i33, 1)
+513: guard_no_overflow(descr=<Guard0x4541808>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 AppRand11)')
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand11)')
debug_merge_point(0, 0, '(>= x4935 0)')
+519: i37 = int_ge(i35, 0)
+523: guard_true(i37, descr=<Guard0x4541850>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+529: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x454aa40>) [p0, i1, p2, p3, p4]
+555: i39 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+566: i40 = int_lt(i35, i39)
+573: guard_true(i40, descr=<Guard0x4541898>) [p0, i1, p2, p3, p4]
+579: p41 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+583: guard_class(p41, 16622984, descr=<Guard0x45418e0>) [p0, i1, p2, p3, p4]
+595: p43 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+599: p44 = getarrayitem_gc_r(p43, i35, descr=<ArrayP 8>)
+611: guard_class(p44, ConstClass(W_Vector), descr=<Guard0x4541928>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
+624: guard_nonnull_class(p26, ConstClass(W_Flonum), descr=<Guard0x454aaa0>) [p0, i1, p2, p3, p4]
+642: guard_nonnull_class(p27, ConstClass(W_Flonum), descr=<Guard0x454ab00>) [p0, i1, p2, p3, p4]
+660: guard_nonnull_class(p25, ConstClass(W_Flonum), descr=<Guard0x454ab60>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+678: f49 = cast_int_to_float(i35)
+690: f50 = getfield_gc_f(p25, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+696: f51 = float_mul(f49, f50)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+701: f52 = getfield_gc_f(p26, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+707: f53 = float_add(f52, f51)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
+712: f54 = cast_int_to_float(i17)
+717: f55 = float_mul(f54, f50)
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+722: f56 = getfield_gc_f(p27, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+728: f57 = float_add(f56, f55)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+733: f58 = float_mul(f53, f53)
debug_merge_point(0, 0, '(* zi zi)')
+743: f59 = float_mul(f57, f57)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+753: f60 = float_add(f58, f59)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+763: i62 = float_gt(f60, 16.000000)
+778: guard_false(i62, descr=<Guard0x4541970>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+784: f63 = float_sub(f58, f59)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+789: f64 = float_add(f63, f53)
debug_merge_point(0, 0, '(* zr zi)')
+794: f65 = float_mul(f53, f57)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+804: f67 = float_mul(2.000000, f65)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+815: f68 = float_add(f67, f57)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+820: p69 = new_with_vtable(descr=<SizeDescr 56>)
+870: p70 = new_with_vtable(descr=<SizeDescr 16>)
+881: setfield_gc(p70, f57, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+887: p71 = new_with_vtable(descr=<SizeDescr 16>)
+898: setfield_gc(p71, f53, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+904: p72 = new_with_vtable(descr=<SizeDescr 48>)
+915: p73 = new_with_vtable(descr=<SizeDescr 24>)
+933: p74 = new_with_vtable(descr=<SizeDescr 72>)
+951: setfield_gc(p74, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+955: setfield_gc(p74, ConstPtr(ptr75), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+959: p76 = new_with_vtable(descr=<SizeDescr 16>)
+971: setfield_gc(p76, i17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+975: setfield_gc(p74, p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+979: setfield_gc(p74, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+983: setfield_gc(p74, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+987: setfield_gc(p74, p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+991: setfield_gc(p74, p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+995: setfield_gc(p74, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+1006: setfield_gc(p73, p74, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1010: setfield_gc(p73, i35, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1109: f77 = getfield_gc_f(p71, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1115: f78 = getfield_gc_f(p70, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1135: setfield_gc(p69, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1139: setfield_gc(p72, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1157: setfield_gc(p69, ConstPtr(ptr80), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1161: setfield_gc(p69, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1172: setfield_gc(p69, ConstPtr(ptr81), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1183: setfield_gc(p69, ConstPtr(ptr82), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1187: setfield_gc(p69, p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1191: setfield_gc(p72, p73, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1195: setfield_gc(p72, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1213: setfield_gc(p72, ConstPtr(ptr83), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1217: setfield_gc(p72, p44, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1221: jump(p69, f64, f68, 1, p72, p9, ConstPtr(ptr81), 64, ConstPtr(ptr82), 16.000000, p71, f77, p70, f78, descr=TargetToken(71669088))
+1328: --end of the loop--
[2a709dd9d721bd4] jit-log-opt-bridge}
[2a709dd9dc0b5aa] {jit-backend
[2a709dd9dcbdb98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d
[2a709dd9dcc8fe0] jit-backend-dump}
[2a709dd9dcd3f63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1924 +0  23000000
[2a709dd9dcd54b1] jit-backend-dump}
[2a709dd9dcd93f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1d65 +0  23000000
[2a709dd9dcda252] jit-backend-dump}
[2a709dd9dcdd793] {jit-backend-addr
bridge out of Guard 0x4540968 has address 0x7f71941d1920 to 0x7f71941d1d60
       gc table: 0x7f71941d1830
    jump target: 0x7f71941d1920
         resops: 0x7f71941d192e
       failures: 0x7f71941d1d60
            end: 0x7f71941d2009
[2a709dd9dcdfa68] jit-backend-addr}
[2a709dd9dce311b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d193f +0  64040000
[2a709dd9dce3f56] jit-backend-dump}
[2a709dd9dce72c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1953 +0  88040000
[2a709dd9dce7f8c] jit-backend-dump}
[2a709dd9dceb1e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d196b +0  8C040000
[2a709dd9dcebedd] jit-backend-dump}
[2a709dd9dcef186] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1975 +0  9E040000
[2a709dd9dcefe43] jit-backend-dump}
[2a709dd9dcf2ee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d198d +0  A2040000
[2a709dd9dcf3bc0] jit-backend-dump}
[2a709dd9dcf6d43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d199c +0  AF040000
[2a709dd9dcf7a62] jit-backend-dump}
[2a709dd9dcfad76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d19b4 +0  B3040000
[2a709dd9dcfba36] jit-backend-dump}
[2a709dd9dcfeb74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d19c9 +0  BA040000
[2a709dd9dcff81e] jit-backend-dump}
[2a709dd9dd02968] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d19d3 +0  CC040000
[2a709dd9dd03621] jit-backend-dump}
[2a709dd9dd06703] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1a01 +0  BA040000
[2a709dd9dd073de] jit-backend-dump}
[2a709dd9dd0a506] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1a20 +0  B7040000
[2a709dd9dd0b1db] jit-backend-dump}
[2a709dd9dd0e2e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1a35 +0  BE040000
[2a709dd9dd0ef89] jit-backend-dump}
[2a709dd9dd120a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1a3f +0  D0040000
[2a709dd9dd12d49] jit-backend-dump}
[2a709dd9dd15de1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1a59 +0  D2040000
[2a709dd9dd16a9e] jit-backend-dump}
[2a709dd9dd19bc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1a71 +0  D6040000
[2a709dd9dd1a88c] jit-backend-dump}
[2a709dd9dd1d9f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1a81 +0  E2040000
[2a709dd9dd1e6eb] jit-backend-dump}
[2a709dd9dd217fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1a9e +0  E1040000
[2a709dd9dd224b4] jit-backend-dump}
[2a709dd9dd25596] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1ab0 +0  EB040000
[2a709dd9dd26265] jit-backend-dump}
[2a709dd9dd293a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1ac2 +0  F5040000
[2a709dd9dd2a087] jit-backend-dump}
[2a709dd9dd2d147] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1ad4 +0  FF040000
[2a709dd9dd2de2e] jit-backend-dump}
[2a709dd9dd30ef1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d1b3e +0  B1040000
[2a709dd9dd31bd9] jit-backend-dump}
[2a709dd9dd34fc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf0cd +0  4F280000
[2a709dd9dd35cd9] jit-backend-dump}
[2a709dd9dd39d18] jit-backend}
[2a709dd9dd3d8c4] {jit-log-opt-bridge
# bridge out of Guard 0x4540968 with 154 ops
[p0, i1, p2, p3, p4]
+262: i6 = int_sub_ovf(i1, 1)
+269: guard_no_overflow(descr=<Guard0x454abc0>) [p0, i1, p2, p3, p4]
+275: guard_not_invalidated(descr=<Guard0x45419b8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 AppRand9)')
+275: p7 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+286: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x4541a00>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)')
+295: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+299: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x454ac20>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(>= x4935 0)')
+319: i12 = int_ge(i6, 0)
+323: guard_false(i12, descr=<Guard0x4541a48>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand10 (- y4931 1)]) (loop1 AppRand10))')
debug_merge_point(0, 0, '(- y4931 1)')
+329: p13 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+333: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x454ac80>) [p0, i1, p2, p3, p4]
+353: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+358: i17 = int_sub_ovf(i15, 1)
+362: guard_no_overflow(descr=<Guard0x4541a90>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop1 AppRand10)')
+368: p18 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+372: guard_nonnull_class(p18, 16479200, descr=<Guard0x454ace0>) [p0, i1, p2, p3, p4]
+392: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+404: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x4541ad8>) [p0, i1, p2, p3, p4]
+413: p22 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if2 (>= y4931 0)]) (if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void)))')
debug_merge_point(0, 0, '(>= y4931 0)')
+413: i24 = int_ge(i17, 0)
+417: guard_true(i24, descr=<Guard0x4541b20>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void))')
debug_merge_point(0, 0, '(let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11))')
debug_merge_point(0, 0, '(lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))')
+423: p25 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+428: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+433: p27 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+438: p28 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+443: p29 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+455: guard_class(p29, 16505296, descr=<Guard0x4541b68>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(- n 1)')
+469: p31 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+481: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x454ad40>) [p0, i1, p2, p3, p4]
+500: i33 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+511: i35 = int_sub_ovf(i33, 1)
+515: guard_no_overflow(descr=<Guard0x4541bb0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 AppRand11)')
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand11)')
debug_merge_point(0, 0, '(>= x4935 0)')
+521: i37 = int_ge(i35, 0)
+525: guard_true(i37, descr=<Guard0x4541bf8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+531: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x454ada0>) [p0, i1, p2, p3, p4]
+557: i39 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+568: i40 = int_lt(i35, i39)
+575: guard_true(i40, descr=<Guard0x4541c40>) [p0, i1, p2, p3, p4]
+581: p41 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+585: guard_class(p41, 16622984, descr=<Guard0x4541c88>) [p0, i1, p2, p3, p4]
+597: p43 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+601: p44 = getarrayitem_gc_r(p43, i35, descr=<ArrayP 8>)
+613: guard_class(p44, ConstClass(W_Vector), descr=<Guard0x4541cd0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
+626: guard_nonnull_class(p26, ConstClass(W_Flonum), descr=<Guard0x454ae00>) [p0, i1, p2, p3, p4]
+644: guard_nonnull_class(p27, ConstClass(W_Flonum), descr=<Guard0x454ae60>) [p0, i1, p2, p3, p4]
+662: guard_nonnull_class(p25, ConstClass(W_Flonum), descr=<Guard0x454aec0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+680: f49 = cast_int_to_float(i35)
+692: f50 = getfield_gc_f(p25, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+698: f51 = float_mul(f49, f50)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+703: f52 = getfield_gc_f(p26, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+709: f53 = float_add(f52, f51)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
+714: f54 = cast_int_to_float(i17)
+719: f55 = float_mul(f54, f50)
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+724: f56 = getfield_gc_f(p27, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+730: f57 = float_add(f56, f55)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+735: f58 = float_mul(f53, f53)
debug_merge_point(0, 0, '(* zi zi)')
+745: f59 = float_mul(f57, f57)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+755: f60 = float_add(f58, f59)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+765: i62 = float_gt(f60, 16.000000)
+780: guard_false(i62, descr=<Guard0x4541d18>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+786: f63 = float_sub(f58, f59)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+791: f64 = float_add(f63, f53)
debug_merge_point(0, 0, '(* zr zi)')
+796: f65 = float_mul(f53, f57)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+806: f67 = float_mul(2.000000, f65)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+817: f68 = float_add(f67, f57)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+822: p69 = new_with_vtable(descr=<SizeDescr 56>)
+872: p70 = new_with_vtable(descr=<SizeDescr 16>)
+883: setfield_gc(p70, f57, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+889: p71 = new_with_vtable(descr=<SizeDescr 16>)
+900: setfield_gc(p71, f53, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+906: p72 = new_with_vtable(descr=<SizeDescr 48>)
+917: p73 = new_with_vtable(descr=<SizeDescr 24>)
+935: p74 = new_with_vtable(descr=<SizeDescr 72>)
+953: setfield_gc(p74, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+957: setfield_gc(p74, ConstPtr(ptr75), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+961: p76 = new_with_vtable(descr=<SizeDescr 16>)
+972: setfield_gc(p76, i17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+976: setfield_gc(p74, p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+980: setfield_gc(p74, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+984: setfield_gc(p74, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+988: setfield_gc(p74, p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+992: setfield_gc(p74, p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+996: setfield_gc(p74, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+1007: setfield_gc(p73, p74, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1011: setfield_gc(p73, i35, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1110: f77 = getfield_gc_f(p71, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1116: f78 = getfield_gc_f(p70, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1136: setfield_gc(p69, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1140: setfield_gc(p72, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1158: setfield_gc(p69, ConstPtr(ptr80), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1162: setfield_gc(p69, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1173: setfield_gc(p69, ConstPtr(ptr81), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1184: setfield_gc(p69, ConstPtr(ptr82), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1188: setfield_gc(p69, p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1192: setfield_gc(p72, p73, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1196: setfield_gc(p72, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1214: setfield_gc(p72, ConstPtr(ptr83), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1218: setfield_gc(p72, p44, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1222: jump(p69, f64, f68, 1, p72, p9, ConstPtr(ptr81), 64, ConstPtr(ptr82), 16.000000, p71, f77, p70, f78, descr=TargetToken(71669088))
+1328: --end of the loop--
[2a709dd9ddadadf] jit-log-opt-bridge}
[2a709dd9f4e0120] {jit-backend
[2a709dd9f5b68c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d
[2a709dd9f5c34f4] jit-backend-dump}
[2a709dd9f5cf11c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2384 +0  23000000
[2a709dd9f5d068e] jit-backend-dump}
[2a709dd9f5d46a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2895 +0  23000000
[2a709dd9f5d5518] jit-backend-dump}
[2a709dd9f5d8857] {jit-backend-addr
bridge out of Guard 0x4540890 has address 0x7f71941d2380 to 0x7f71941d2890
       gc table: 0x7f71941d2250
    jump target: 0x7f71941d2380
         resops: 0x7f71941d238e
       failures: 0x7f71941d2890
            end: 0x7f71941d2c76
[2a709dd9f5dac76] jit-backend-addr}
[2a709dd9f5de31d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d23a6 +0  8A050000
[2a709dd9f5df18f] jit-backend-dump}
[2a709dd9f5e232b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d23bd +0  8F050000
[2a709dd9f5e3010] jit-backend-dump}
[2a709dd9f5e6034] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d23ca +0  9E050000
[2a709dd9f5e6ce7] jit-backend-dump}
[2a709dd9f5e9c6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d23e2 +0  A2050000
[2a709dd9f5ea904] jit-backend-dump}
[2a709dd9f5ed8e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2412 +0  8E050000
[2a709dd9f5ee5ba] jit-backend-dump}
[2a709dd9f5f152a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2423 +0  99050000
[2a709dd9f5f21f3] jit-backend-dump}
[2a709dd9f5f50df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2438 +0  A0050000
[2a709dd9f5f5d67] jit-backend-dump}
[2a709dd9f5f8c53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2455 +0  9F050000
[2a709dd9f5f98ee] jit-backend-dump}
[2a709dd9f5fc7e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2467 +0  A9050000
[2a709dd9f5fd451] jit-backend-dump}
[2a709dd9f6003c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d247d +0  AF050000
[2a709dd9f601092] jit-backend-dump}
[2a709dd9f604045] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d248a +0  BE050000
[2a709dd9f604d14] jit-backend-dump}
[2a709dd9f607caf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d249a +0  CA050000
[2a709dd9f60c053] jit-backend-dump}
[2a709dd9f60f8cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d24ae +0  D2050000
[2a709dd9f6105bb] jit-backend-dump}
[2a709dd9f613666] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d24c4 +0  D8050000
[2a709dd9f614332] jit-backend-dump}
[2a709dd9f61737e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d24d4 +0  E4050000
[2a709dd9f618047] jit-backend-dump}
[2a709dd9f61b01b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d24e2 +0  F2050000
[2a709dd9f61bcad] jit-backend-dump}
[2a709dd9f61ec5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d24ef +0  01060000
[2a709dd9f61f901] jit-backend-dump}
[2a709dd9f6228eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2510 +0  FC050000
[2a709dd9f6235b4] jit-backend-dump}
[2a709dd9f62653f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d251d +0  0B060000
[2a709dd9f6271b8] jit-backend-dump}
[2a709dd9f62a247] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2526 +0  1E060000
[2a709dd9f62af01] jit-backend-dump}
[2a709dd9f62de83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d25ee +0  72050000
[2a709dd9f62eb02] jit-backend-dump}
[2a709dd9f631a44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d25f8 +0  84050000
[2a709dd9f6326ba] jit-backend-dump}
[2a709dd9f63561e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d260e +0  8A050000
[2a709dd9f6362cb] jit-backend-dump}
[2a709dd9f63922e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d261b +0  99050000
[2a709dd9f639ec3] jit-backend-dump}
[2a709dd9f63cee1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d262b +0  A5050000
[2a709dd9f63dba1] jit-backend-dump}
[2a709dd9f640b7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2640 +0  AC050000
[2a709dd9f64180a] jit-backend-dump}
[2a709dd9f644932] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2656 +0  B2050000
[2a709dd9f6455bb] jit-backend-dump}
[2a709dd9f6485d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d266d +0  B7050000
[2a709dd9f649271] jit-backend-dump}
[2a709dd9f64c1e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2684 +0  BC050000
[2a709dd9f64ce7c] jit-backend-dump}
[2a709dd9f64fe1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d26e7 +0  75050000
[2a709dd9f650ab7] jit-backend-dump}
[2a709dd9f653d05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cf08e +0  EE320000
[2a709dd9f6549d1] jit-backend-dump}
[2a709dd9f65893d] jit-backend}
[2a709dd9f65c557] {jit-log-opt-bridge
# bridge out of Guard 0x4540890 with 173 ops
[i0, f1, f2, p3, p4, p5]
+326: guard_not_invalidated(descr=<Guard0x454af20>) [i0, f1, f2, p3, p4, p5]
+326: p6 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+337: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x4541e80>) [i0, f1, f2, p3, p4, p5]
+346: p8 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+350: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x454af80>) [i0, f1, f2, p3, p4, p5]
+369: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+373: i11 = int_eq(i0, i10)
+376: guard_false(i11, descr=<Guard0x4541ec8>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
+382: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+387: guard_nonnull_class(p12, ConstClass(ForwardLink), descr=<Guard0x454afe0>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(* zr zr)')
+406: f14 = float_mul(f2, f2)
debug_merge_point(0, 0, '(* zi zi)')
+416: f15 = float_mul(f1, f1)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+426: f16 = float_add(f14, f15)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+431: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+435: guard_nonnull_class(p17, ConstClass(W_Flonum), descr=<Guard0x454b040>) [i0, f1, f2, p3, p4, p5]
+454: f19 = getfield_gc_f(p17, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+460: i20 = float_gt(f16, f19)
+465: guard_true(i20, descr=<Guard0x4541f10>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, 'c')
+471: p21 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+483: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x4541f58>) [i0, f1, f2, p3, p4, p5]
+492: p23 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+497: p24 = getfield_gc_r(p4, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+502: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x454b0a0>) [i0, f1, f2, p3, p4, p5]
+521: p26 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+526: guard_class(p26, 16435208, descr=<Guard0x4541fa0>) [i0, f1, f2, p3, p4, p5]
+539: p28 = getfield_gc_r(p26, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+543: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x454b100>) [i0, f1, f2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-set! AppRand7 y4931 AppRand8) from (> AppRand2 radius^2)')
+561: guard_class(p23, 16504944, descr=<Guard0x4570020>) [i0, f1, f2, p3, p4, p5]
+574: p31 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+578: guard_class(p31, 16479576, descr=<Guard0x4570068>) [i0, f1, f2, p3, p4, p5]
+590: p33 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+601: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x45700b0>) [i0, f1, f2, p3, p4, p5]
+610: p35 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+614: guard_nonnull_class(p35, ConstClass(W_Fixnum), descr=<Guard0x454b160>) [i0, f1, f2, p3, p4, p5]
+632: p37 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+636: guard_class(p37, 16693360, descr=<Guard0x45700f8>) [i0, f1, f2, p3, p4, p5]
+648: i39 = getfield_gc_i(p35, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+652: i41 = int_ge(i39, 0)
+656: guard_true(i41, descr=<Guard0x4570140>) [i0, f1, f2, p3, p4, p5]
+662: i42 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+666: i43 = int_lt(i39, i42)
+669: guard_true(i43, descr=<Guard0x4570188>) [i0, f1, f2, p3, p4, p5]
+675: p44 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+679: p46 = getarrayitem_gc_pure_r(p44, 0, descr=<ArrayP 8>)
+690: guard_nonnull_class(p46, ConstClass(W_Fixnum), descr=<Guard0x454b1c0>) [i0, f1, f2, p3, p4, p5]
+708: i48 = getfield_gc_i(p46, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+712: i49 = int_eq(i48, i0)
+715: guard_false(i49, descr=<Guard0x45701d0>) [i0, f1, f2, p3, p4, p5]
+721: i50 = int_is_true(i48)
+724: guard_false(i50, descr=<Guard0x4570218>) [i0, f1, f2, p3, p4, p5]
+730: p51 = new_array_clear(i42, descr=<ArrayS 8>)
+855: setarrayitem_gc(p51, i39, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))')
debug_merge_point(0, 0, '(- x4935 1)')
+874: i52 = getfield_gc_i(p23, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+909: setfield_gc(p24, ConstPtr(ptr53), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+913: setfield_gc(p24, p51, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+917: i55 = int_sub_ovf(i52, 1)
+924: guard_no_overflow(descr=<Guard0x454b220>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop2 AppRand9)')
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)')
debug_merge_point(0, 0, '(>= x4935 0)')
+930: i58 = int_ge(i55, 0)
+934: guard_true(i58, descr=<Guard0x4570260>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+940: p59 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+944: guard_nonnull_class(p59, ConstClass(W_Vector), descr=<Guard0x454b280>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
+962: i61 = getfield_gc_i(p59, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+966: i62 = int_lt(i55, i61)
+969: guard_true(i62, descr=<Guard0x45702a8>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
+975: p63 = getfield_gc_r(p59, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+979: guard_class(p63, 16622984, descr=<Guard0x45702f0>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
+991: p65 = getfield_gc_r(p59, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+995: p66 = getarrayitem_gc_r(p65, i55, descr=<ArrayP 8>)
+1000: guard_class(p66, ConstClass(W_Vector), descr=<Guard0x4570338>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
+1012: p68 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+1016: guard_nonnull_class(p68, ConstClass(W_Flonum), descr=<Guard0x454b2e0>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
+1034: p70 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+1038: guard_nonnull_class(p70, ConstClass(W_Flonum), descr=<Guard0x454b340>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
+1057: p72 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+1061: guard_nonnull_class(p72, ConstClass(W_Flonum), descr=<Guard0x454b3a0>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
+1080: p74 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+1080: f75 = cast_int_to_float(i55)
+1085: f76 = getfield_gc_f(p72, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1091: f77 = float_mul(f75, f76)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+1096: f78 = getfield_gc_f(p68, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1102: f79 = float_add(f78, f77)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
+1107: f80 = cast_int_to_float(i39)
+1112: f81 = float_mul(f80, f76)
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+1117: f82 = getfield_gc_f(p70, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1123: f83 = float_add(f82, f81)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+1128: f84 = float_mul(f79, f79)
debug_merge_point(0, 0, '(* zi zi)')
+1138: f85 = float_mul(f83, f83)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+1148: f86 = float_add(f84, f85)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+1158: i88 = float_gt(f86, 16.000000)
+1173: guard_false(i88, descr=<Guard0x4570380>) [p23, i52, p26, p31, p28, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+1179: f89 = float_sub(f84, f85)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+1184: f90 = float_add(f89, f79)
debug_merge_point(0, 0, '(* zr zi)')
+1189: f91 = float_mul(f79, f83)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+1199: f93 = float_mul(2.000000, f91)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+1210: f94 = float_add(f93, f83)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+1215: p95 = new_with_vtable(descr=<SizeDescr 56>)
+1259: p96 = new_with_vtable(descr=<SizeDescr 16>)
+1270: setfield_gc(p96, f83, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1276: p97 = new_with_vtable(descr=<SizeDescr 16>)
+1287: setfield_gc(p97, f79, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1293: p98 = new_with_vtable(descr=<SizeDescr 48>)
+1304: p99 = new_with_vtable(descr=<SizeDescr 24>)
+1316: setfield_gc(p99, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1321: setfield_gc(p99, i55, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1414: f100 = getfield_gc_f(p97, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1420: f101 = getfield_gc_f(p96, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1426: setfield_gc(p95, ConstPtr(ptr102), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1437: setfield_gc(p95, ConstPtr(ptr103), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1441: setfield_gc(p98, p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1459: setfield_gc(p95, ConstPtr(ptr104), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1463: setfield_gc(p98, ConstPtr(ptr105), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1467: setfield_gc(p98, p99, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1471: setfield_gc(p98, p66, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1475: setfield_gc(p98, p26, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1493: setfield_gc(p95, ConstPtr(ptr106), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1497: setfield_gc(p95, p96, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1501: setfield_gc(p95, p97, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1505: jump(p95, f90, f94, 1, p98, p28, ConstPtr(ptr103), 64, ConstPtr(ptr104), 16.000000, p97, f100, p96, f101, descr=TargetToken(71669088))
+1600: --end of the loop--
[2a709dd9f6e2222] jit-log-opt-bridge}
[2a709dda6160439] {jit-backend
[2a709dda6232ace] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2dc
[2a709dda623c638] jit-backend-dump}
[2a709dda62488c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2ea4 +0  23000000
[2a709dda6249e49] jit-backend-dump}
[2a709dda624db9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3295 +0  23000000
[2a709dda624eabb] jit-backend-dump}
[2a709dda6251d09] {jit-backend-addr
bridge out of Guard 0x4541190 has address 0x7f71941d2ea0 to 0x7f71941d3290
       gc table: 0x7f71941d2dc0
    jump target: 0x7f71941d2ea0
         resops: 0x7f71941d2eae
       failures: 0x7f71941d3290
            end: 0x7f71941d3475
[2a709dda625420a] jit-backend-addr}
[2a709dda6257d17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2ebc +0  33040000
[2a709dda6258aed] jit-backend-dump}
[2a709dda625bcf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2ed7 +0  34040000
[2a709dda625c9dc] jit-backend-dump}
[2a709dda625fa5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2eec +0  3B040000
[2a709dda626074f] jit-backend-dump}
[2a709dda6263837] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f04 +0  3F040000
[2a709dda6264562] jit-backend-dump}
[2a709dda6267546] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f12 +0  4D040000
[2a709dda6268233] jit-backend-dump}
[2a709dda626b1af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f29 +0  52040000
[2a709dda626beb2] jit-backend-dump}
[2a709dda626edc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f3a +0  5D040000
[2a709dda626facf] jit-backend-dump}
[2a709dda62729e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f4e +0  65040000
[2a709dda62736e6] jit-backend-dump}
[2a709dda62765d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f5b +0  74040000
[2a709dda62772c9] jit-backend-dump}
[2a709dda627a1e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f65 +0  86040000
[2a709dda627aef2] jit-backend-dump}
[2a709dda627de68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f72 +0  95040000
[2a709dda627eb83] jit-backend-dump}
[2a709dda6281b08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f83 +0  A0040000
[2a709dda628286d] jit-backend-dump}
[2a709dda62857c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2f98 +0  A7040000
[2a709dda62864d0] jit-backend-dump}
[2a709dda62893f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d2fec +0  6F040000
[2a709dda628a121] jit-backend-dump}
[2a709dda628d515] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d0a2e +0  6E240000
[2a709dda628e252] jit-backend-dump}
[2a709dda62921fc] jit-backend}
[2a709dda6295d08] {jit-log-opt-bridge
# bridge out of Guard 0x4541190 with 148 ops
[i0, p1, p2, p3]
+246: guard_not_invalidated(descr=<Guard0x454b400>) [i0, p1, p2, p3]
+246: i5 = int_ge(i0, 0)
+250: guard_false(i5, descr=<Guard0x4570728>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))')
debug_merge_point(0, 0, '(void)')
+256: p6 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+274: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x4570770>) [i0, p1, p2, p3]
+283: p8 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+287: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+291: guard_class(p9, 16435208, descr=<Guard0x45707b8>) [i0, p1, p2, p3]
+304: p11 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+308: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x454b460>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(mbrot matrix4956 -1.0 -0.5 0.005 n4954)')
+328: guard_class(p8, 16499664, descr=<Guard0x4570800>) [i0, p1, p2, p3]
+342: p14 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+346: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x454b4c0>) [i0, p1, p2, p3]
+365: p16 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p16, 16504944, descr=<Guard0x4570848>) [i0, p1, p2, p3]
+382: i18 = getfield_gc_i(p16, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+386: p19 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+390: guard_class(p19, 16505296, descr=<Guard0x4570890>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([loop1 (lambda (y4931) (let ([if2 (>= y4931 0)]) (if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void))))][AppRand12 (- n 1)]) (loop1 AppRand12))')
debug_merge_point(0, 0, '(lambda (y4931) (let ([if2 (>= y4931 0)]) (if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void))))')
debug_merge_point(0, 0, '(- n 1)')
+402: i22 = int_sub_ovf(i18, 1)
+409: guard_no_overflow(descr=<Guard0x45708d8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(loop1 AppRand12)')
debug_merge_point(0, 0, '(let ([if2 (>= y4931 0)]) (if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void)))')
debug_merge_point(0, 0, '(>= y4931 0)')
+415: i24 = int_ge(i22, 0)
+419: guard_true(i24, descr=<Guard0x4570920>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void))')
debug_merge_point(0, 0, '(let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11))')
debug_merge_point(0, 0, '(lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))')
debug_merge_point(0, 0, '(- n 1)')
debug_merge_point(0, 0, '(loop2 AppRand11)')
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand11)')
debug_merge_point(0, 0, '(>= x4935 0)')
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+425: i25 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+429: i26 = int_lt(i22, i25)
+432: guard_true(i26, descr=<Guard0x4570968>) [i0, p1, p2, p3]
+438: p27 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+442: guard_class(p27, 16622984, descr=<Guard0x45709b0>) [i0, p1, p2, p3]
+455: p29 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+459: p30 = getarrayitem_gc_r(p29, i22, descr=<ArrayP 8>)
+464: guard_class(p30, ConstClass(W_Vector), descr=<Guard0x45709f8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+476: f32 = cast_int_to_float(i22)
+481: f34 = float_mul(f32, 0.005000)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+496: f36 = float_add(-1.000000, f34)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+507: f38 = float_add(-0.500000, f34)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+518: f39 = float_mul(f36, f36)
debug_merge_point(0, 0, '(* zi zi)')
+528: f40 = float_mul(f38, f38)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+538: f41 = float_add(f39, f40)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+548: i43 = float_gt(f41, 16.000000)
+554: guard_false(i43, descr=<Guard0x4570a40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+560: f44 = float_sub(f39, f40)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+565: f45 = float_add(f44, f36)
debug_merge_point(0, 0, '(* zr zi)')
+570: f46 = float_mul(f36, f38)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+580: f48 = float_mul(2.000000, f46)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+591: f49 = float_add(f48, f38)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+596: p50 = new_with_vtable(descr=<SizeDescr 56>)
+640: p51 = new_with_vtable(descr=<SizeDescr 16>)
+651: setfield_gc(p51, f38, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+657: p52 = new_with_vtable(descr=<SizeDescr 16>)
+668: setfield_gc(p52, f36, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+674: p53 = new_with_vtable(descr=<SizeDescr 48>)
+685: p54 = new_with_vtable(descr=<SizeDescr 24>)
+696: p55 = new_with_vtable(descr=<SizeDescr 72>)
+721: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+739: setfield_gc(p55, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+743: p58 = new_with_vtable(descr=<SizeDescr 16>)
+754: setfield_gc(p58, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+758: setfield_gc(p55, p58, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+776: setfield_gc(p55, ConstPtr(ptr59), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+794: setfield_gc(p55, ConstPtr(ptr60), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+798: p61 = new_with_vtable(descr=<SizeDescr 64>)
+816: setfield_gc(p61, ConstPtr(ptr62), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+827: setfield_gc(p61, ConstPtr(ptr63), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+831: p64 = new_with_vtable(descr=<SizeDescr 16>)
+842: setfield_gc(p64, i18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+846: setfield_gc(p61, p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+850: setfield_gc(p61, ConstPtr(ptr65), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+854: setfield_gc(p61, ConstPtr(ptr66), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+865: setfield_gc(p61, ConstPtr(ptr67), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+869: setfield_gc(p61, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+873: setfield_gc(p55, p61, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+877: setfield_gc(p55, ConstPtr(ptr68), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+881: setfield_gc(p55, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+885: setfield_gc(p54, p55, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+889: setfield_gc(p54, i22, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+893: p69 = new_with_vtable(descr=<SizeDescr 40>)
+904: setfield_gc(p69, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+915: setfield_gc(p69, p8, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+919: setfield_gc(p69, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+930: setfield_gc(p69, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1036: f71 = getfield_gc_f(p52, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1049: f72 = getfield_gc_f(p51, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1062: setfield_gc(p53, p54, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1066: setfield_gc(p53, p69, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1070: setfield_gc(p53, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1074: setfield_gc(p50, ConstPtr(ptr73), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1085: setfield_gc(p50, ConstPtr(ptr74), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1089: setfield_gc(p50, p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1100: setfield_gc(p50, ConstPtr(ptr75), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1111: setfield_gc(p50, ConstPtr(ptr76), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1115: setfield_gc(p50, p52, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1126: setfield_gc(p53, ConstPtr(ptr77), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1130: setfield_gc(p53, p30, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1134: jump(p50, f45, f49, 1, p53, p11, ConstPtr(ptr75), 64, ConstPtr(ptr76), 16.000000, p52, f71, p51, f72, descr=TargetToken(71669088))
+1232: --end of the loop--
[2a709dda6305781] jit-log-opt-bridge}
[2a709dda674a78d] {jit-backend
[2a709dda6801750] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d
[2a709dda680bc92] jit-backend-dump}
[2a709dda6816aea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3714 +0  23000000
[2a709dda68182bd] jit-backend-dump}
[2a709dda681c45c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3b35 +0  23000000
[2a709dda681d3c3] jit-backend-dump}
[2a709dda68209dd] {jit-backend-addr
bridge out of Guard 0x44f5df0 has address 0x7f71941d3710 to 0x7f71941d3b30
       gc table: 0x7f71941d3620
    jump target: 0x7f71941d3710
         resops: 0x7f71941d371e
       failures: 0x7f71941d3b30
            end: 0x7f71941d3dd9
[2a709dda6822f09] jit-backend-addr}
[2a709dda68266a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d372f +0  44040000
[2a709dda682748a] jit-backend-dump}
[2a709dda682acbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3743 +0  68040000
[2a709dda682b9d8] jit-backend-dump}
[2a709dda682ed63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3761 +0  66040000
[2a709dda682fa51] jit-backend-dump}
[2a709dda6832c0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d376b +0  78040000
[2a709dda68338e7] jit-backend-dump}
[2a709dda6836aab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3781 +0  7E040000
[2a709dda683779c] jit-backend-dump}
[2a709dda683a7d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d378f +0  8C040000
[2a709dda683b48c] jit-backend-dump}
[2a709dda683e50c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d37a5 +0  92040000
[2a709dda683f1aa] jit-backend-dump}
[2a709dda6842230] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d37b9 +0  9A040000
[2a709dda6842ee0] jit-backend-dump}
[2a709dda6845ef8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d37c3 +0  AC040000
[2a709dda6846bca] jit-backend-dump}
[2a709dda6849c06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d37e3 +0  A8040000
[2a709dda684a8ee] jit-backend-dump}
[2a709dda684d8f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3801 +0  A6040000
[2a709dda684e5f0] jit-backend-dump}
[2a709dda685163f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d380f +0  B4040000
[2a709dda68522f0] jit-backend-dump}
[2a709dda685536f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3819 +0  C6040000
[2a709dda6856026] jit-backend-dump}
[2a709dda68590a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d382b +0  D0040000
[2a709dda6859d7e] jit-backend-dump}
[2a709dda685ce13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3838 +0  DF040000
[2a709dda685dae5] jit-backend-dump}
[2a709dda6860b77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3849 +0  EA040000
[2a709dda6861853] jit-backend-dump}
[2a709dda6864889] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3867 +0  E8040000
[2a709dda6865552] jit-backend-dump}
[2a709dda6868621] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d387a +0  F1040000
[2a709dda68692ed] jit-backend-dump}
[2a709dda686c3ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d388c +0  FB040000
[2a709dda686d0a7] jit-backend-dump}
[2a709dda687010b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d389e +0  05050000
[2a709dda6870dc2] jit-backend-dump}
[2a709dda6873de3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d3908 +0  B7040000
[2a709dda6874a87] jit-backend-dump}
[2a709dda6877dab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941cd4b7 +0  55620000
[2a709dda6878a9c] jit-backend-dump}
[2a709dda687caad] jit-backend}
[2a709dda68806ef] {jit-log-opt-bridge
# bridge out of Guard 0x44f5df0 with 154 ops
[p0, i1, p2, p3, p4]
+262: i6 = int_sub_ovf(i1, 1)
+269: guard_no_overflow(descr=<Guard0x454b520>) [p0, i1, p2, p3, p4]
+275: guard_not_invalidated(descr=<Guard0x4570a88>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 AppRand9)')
+275: p7 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+286: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x4570ad0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)')
+295: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+306: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x454b580>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(>= x4935 0)')
+325: i12 = int_ge(i6, 0)
+329: guard_false(i12, descr=<Guard0x4570b18>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand10 (- y4931 1)]) (loop1 AppRand10))')
debug_merge_point(0, 0, '(- y4931 1)')
+335: p13 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+339: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x454b5e0>) [p0, i1, p2, p3, p4]
+357: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+361: i17 = int_sub_ovf(i15, 1)
+365: guard_no_overflow(descr=<Guard0x4570b60>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop1 AppRand10)')
+371: p18 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+375: guard_nonnull_class(p18, 16479200, descr=<Guard0x454b640>) [p0, i1, p2, p3, p4]
+393: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+404: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x4570ba8>) [p0, i1, p2, p3, p4]
+413: p22 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if2 (>= y4931 0)]) (if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void)))')
debug_merge_point(0, 0, '(>= y4931 0)')
+413: i24 = int_ge(i17, 0)
+417: guard_true(i24, descr=<Guard0x4570bf0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void))')
debug_merge_point(0, 0, '(let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11))')
debug_merge_point(0, 0, '(lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))')
+423: p25 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+427: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+431: p27 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+435: p28 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+439: p29 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+443: guard_class(p29, 16505296, descr=<Guard0x4570c38>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(- n 1)')
+455: p31 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+466: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x454b6a0>) [p0, i1, p2, p3, p4]
+485: i33 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+489: i35 = int_sub_ovf(i33, 1)
+493: guard_no_overflow(descr=<Guard0x4570c80>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 AppRand11)')
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand11)')
debug_merge_point(0, 0, '(>= x4935 0)')
+499: i37 = int_ge(i35, 0)
+503: guard_true(i37, descr=<Guard0x4570cc8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9)))')
debug_merge_point(0, 0, '(vector-ref matrix x4935)')
+509: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x454b700>) [p0, i1, p2, p3, p4]
+527: i39 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+531: i40 = int_lt(i35, i39)
+534: guard_true(i40, descr=<Guard0x4570d10>) [p0, i1, p2, p3, p4]
+540: p41 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+544: guard_class(p41, 16622984, descr=<Guard0x4570d58>) [p0, i1, p2, p3, p4]
+557: p43 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+561: p44 = getarrayitem_gc_r(p43, i35, descr=<ArrayP 8>)
+573: guard_class(p44, ConstClass(W_Vector), descr=<Guard0x4570da0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(count r4923 i4925 step4927 x4935 y4931)')
+587: guard_nonnull_class(p26, ConstClass(W_Flonum), descr=<Guard0x454b760>) [p0, i1, p2, p3, p4]
+606: guard_nonnull_class(p27, ConstClass(W_Flonum), descr=<Guard0x454b7c0>) [p0, i1, p2, p3, p4]
+624: guard_nonnull_class(p25, ConstClass(W_Flonum), descr=<Guard0x454b820>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([max-count 64][radius^2 16.0][AppRand0 (* (exact->inexact x) step)]) (let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))))')
debug_merge_point(0, 0, '64')
debug_merge_point(0, 0, '16.0')
debug_merge_point(0, 0, '(* (exact->inexact x) step)')
+642: f49 = cast_int_to_float(i35)
+654: f50 = getfield_gc_f(p25, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+660: f51 = float_mul(f49, f50)
debug_merge_point(0, 0, '(let ([cr (+ r AppRand0)][AppRand1 (* (exact->inexact y) step)]) (let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))))')
debug_merge_point(0, 0, '(+ r AppRand0)')
+665: f52 = getfield_gc_f(p26, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+671: f53 = float_add(f52, f51)
debug_merge_point(0, 0, '(* (exact->inexact y) step)')
+676: f54 = cast_int_to_float(i17)
+681: f55 = float_mul(f54, f50)
debug_merge_point(0, 0, '(let ([ci (+ i AppRand1)]) (let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0)))')
debug_merge_point(0, 0, '(+ i AppRand1)')
+686: f56 = getfield_gc_f(p27, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+692: f57 = float_add(f56, f55)
debug_merge_point(0, 0, '(let ([loop (lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))]) (loop cr ci 0))')
debug_merge_point(0, 0, '(lambda (zr zi c) (let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))))')
debug_merge_point(0, 0, '(loop cr ci 0)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop cr ci 0)')
debug_merge_point(0, 0, '(= c max-count)')
debug_merge_point(0, 0, '(if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))')
debug_merge_point(0, 0, '(let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))))')
debug_merge_point(0, 0, '(* zr zr)')
+697: f58 = float_mul(f53, f53)
debug_merge_point(0, 0, '(* zi zi)')
+707: f59 = float_mul(f57, f57)
debug_merge_point(0, 0, '(let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))')
debug_merge_point(0, 0, '(+ zr^2 zi^2)')
+717: f60 = float_add(f58, f59)
debug_merge_point(0, 0, '(let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))))')
debug_merge_point(0, 0, '(> AppRand2 radius^2)')
+727: i62 = float_gt(f60, 16.000000)
+742: guard_false(i62, descr=<Guard0x4570de8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))')
debug_merge_point(0, 0, '(let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))))')
debug_merge_point(0, 0, '(- zr^2 zi^2)')
+748: f63 = float_sub(f58, f59)
debug_merge_point(0, 0, '(let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))')
debug_merge_point(0, 0, '(+ AppRand3 cr)')
+753: f64 = float_add(f63, f53)
debug_merge_point(0, 0, '(* zr zi)')
+758: f65 = float_mul(f53, f57)
debug_merge_point(0, 0, '(let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6)))')
debug_merge_point(0, 0, '(* 2.0 AppRand4)')
+768: f67 = float_mul(2.000000, f65)
debug_merge_point(0, 0, '(let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))')
debug_merge_point(0, 0, '(+ AppRand5 ci)')
+779: f68 = float_add(f67, f57)
debug_merge_point(0, 0, '(+ c 1)')
debug_merge_point(0, 0, '(loop new-zr new-zi AppRand6)')
debug_merge_point(0, 0, '(let ([if0 (= c max-count)]) (if if0 c (let ([zr^2 (* zr zr)][zi^2 (* zi zi)]) (let ([AppRand2 (+ zr^2 zi^2)]) (let ([if1 (> AppRand2 radius^2)]) (if if1 c (let ([AppRand3 (- zr^2 zi^2)]) (let ([new-zr (+ AppRand3 cr)][AppRand4 (* zr zi)]) (let ([AppRand5 (* 2.0 AppRand4)]) (let ([new-zi (+ AppRand5 ci)][AppRand6 (+ c 1)]) (loop new-zr new-zi AppRand6))))))))))) from (loop new-zr new-zi AppRand6)')
+784: p69 = new_with_vtable(descr=<SizeDescr 56>)
+834: p70 = new_with_vtable(descr=<SizeDescr 16>)
+845: setfield_gc(p70, f57, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+851: p71 = new_with_vtable(descr=<SizeDescr 16>)
+862: setfield_gc(p71, f53, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+868: p72 = new_with_vtable(descr=<SizeDescr 48>)
+886: p73 = new_with_vtable(descr=<SizeDescr 24>)
+904: p74 = new_with_vtable(descr=<SizeDescr 72>)
+922: setfield_gc(p74, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+926: setfield_gc(p74, ConstPtr(ptr75), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+930: p76 = new_with_vtable(descr=<SizeDescr 16>)
+942: setfield_gc(p76, i17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+947: setfield_gc(p74, p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+951: setfield_gc(p74, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+955: setfield_gc(p74, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+959: setfield_gc(p74, p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+963: setfield_gc(p74, p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+967: setfield_gc(p74, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+971: setfield_gc(p73, p74, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+975: setfield_gc(p73, i35, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1074: f77 = getfield_gc_f(p71, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1087: f78 = getfield_gc_f(p70, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1107: setfield_gc(p69, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1111: setfield_gc(p72, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1129: setfield_gc(p69, ConstPtr(ptr80), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1133: setfield_gc(p69, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1144: setfield_gc(p69, ConstPtr(ptr81), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1155: setfield_gc(p69, ConstPtr(ptr82), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1159: setfield_gc(p69, p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1163: setfield_gc(p72, p73, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1167: setfield_gc(p72, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1185: setfield_gc(p72, ConstPtr(ptr83), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1189: setfield_gc(p72, p44, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1193: jump(p69, f64, f68, 1, p72, p9, ConstPtr(ptr81), 64, ConstPtr(ptr82), 16.000000, p71, f77, p70, f78, descr=TargetToken(71669088))
+1296: --end of the loop--
[2a709dda68ee6b6] jit-log-opt-bridge}
[2a709dda6ec8daa] {jit-backend
[2a709dda6fa9603] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d
[2a709dda6fb63e6] jit-backend-dump}
[2a709dda6fc09d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d41e4 +0  23000000
[2a709dda6fc1ffb] jit-backend-dump}
[2a709dda6fc5fe4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4695 +0  23000000
[2a709dda6fc6ee0] jit-backend-dump}
[2a709dda6fca27b] {jit-backend-addr
bridge out of Guard 0x4541b20 has address 0x7f71941d41e0 to 0x7f71941d4690
       gc table: 0x7f71941d4060
    jump target: 0x7f71941d41e0
         resops: 0x7f71941d41ee
       failures: 0x7f71941d4690
            end: 0x7f71941d4af0
[2a709dda6fcc86e] jit-backend-addr}
[2a709dda6fcfdfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d41ff +0  FD040000
[2a709dda6fd0c21] jit-backend-dump}
[2a709dda6fd4150] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4213 +0  21050000
[2a709dda6fd4ee0] jit-backend-dump}
[2a709dda6fd81df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d422a +0  26050000
[2a709dda6fd8f16] jit-backend-dump}
[2a709dda6fdc148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4234 +0  38050000
[2a709dda6fdceb9] jit-backend-dump}
[2a709dda6fe00d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d424b +0  3D050000
[2a709dda6fe0deb] jit-backend-dump}
[2a709dda6fe3f32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4259 +0  4B050000
[2a709dda6fe4c32] jit-backend-dump}
[2a709dda6fe7dfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4270 +0  50050000
[2a709dda6fe8af3] jit-backend-dump}
[2a709dda6febc55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4284 +0  58050000
[2a709dda6fec940] jit-backend-dump}
[2a709dda6fefa8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d428e +0  6A050000
[2a709dda6ff07b7] jit-backend-dump}
[2a709dda6ff38fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d42a2 +0  72050000
[2a709dda6ff45df] jit-backend-dump}
[2a709dda6ff76cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d42b7 +0  79050000
[2a709dda6ff83f5] jit-backend-dump}
[2a709dda6ffb42b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d42c9 +0  83050000
[2a709dda6ffc0f4] jit-backend-dump}
[2a709dda6fff155] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d42db +0  8D050000
[2a709dda6fffe5e] jit-backend-dump}
[2a709dda7002f43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d42e8 +0  9C050000
[2a709dda7003c28] jit-backend-dump}
[2a709dda7006ecb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d42ff +0  A1050000
[2a709dda7007b72] jit-backend-dump}
[2a709dda700acbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4316 +0  A6050000
[2a709dda700b9f9] jit-backend-dump}
[2a709dda700eafc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4324 +0  B4050000
[2a709dda700f7f9] jit-backend-dump}
[2a709dda70129a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4335 +0  BF050000
[2a709dda70136df] jit-backend-dump}
[2a709dda70167cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d434a +0  C6050000
[2a709dda70174ee] jit-backend-dump}
[2a709dda701a5be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4358 +0  D4050000
[2a709dda701b2a5] jit-backend-dump}
[2a709dda701e3af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4369 +0  DF050000
[2a709dda701f0d6] jit-backend-dump}
[2a709dda702228e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d437d +0  E7050000
[2a709dda7022f88] jit-backend-dump}
[2a709dda7025ff2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4392 +0  EE050000
[2a709dda7026d39] jit-backend-dump}
[2a709dda7029f4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d43a3 +0  F9050000
[2a709dda702acc4] jit-backend-dump}
[2a709dda702df11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d43b9 +0  FF050000
[2a709dda702ebc2] jit-backend-dump}
[2a709dda7031d6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d43c7 +0  0D060000
[2a709dda7032aaa] jit-backend-dump}
[2a709dda7035c2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d43db +0  15060000
[2a709dda703692e] jit-backend-dump}
[2a709dda7039a4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d43e8 +0  24060000
[2a709dda703a70a] jit-backend-dump}
[2a709dda703d838] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d43f6 +0  32060000
[2a709dda703e5a3] jit-backend-dump}
[2a709dda7041641] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d440d +0  37060000
[2a709dda704234a] jit-backend-dump}
[2a709dda7045485] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d441a +0  46060000
[2a709dda7046166] jit-backend-dump}
[2a709dda70491fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4490 +0  EC050000
[2a709dda7049f5d] jit-backend-dump}
[2a709dda704d057] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d462b +0  6D040000
[2a709dda704dd45] jit-backend-dump}
[2a709dda7050d47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4639 +0  7B040000
[2a709dda7051a26] jit-backend-dump}
[2a709dda7054a84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d4646 +0  8A040000
[2a709dda705575c] jit-backend-dump}
[2a709dda7058a80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f71941d19d3 +0  09280000
[2a709dda70597b1] jit-backend-dump}
[2a709dda705d7f9] jit-backend}
[2a709dda70613d9] {jit-log-opt-bridge
# bridge out of Guard 0x4541b20 with 151 ops
[p0, i1, p2, p3, p4]
+406: i6 = int_sub_ovf(i1, 1)
+413: guard_no_overflow(descr=<Guard0x454b880>) [p0, i1, p2, p3, p4]
+419: guard_not_invalidated(descr=<Guard0x4570e30>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop2 AppRand9)')
+419: p7 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+430: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x4570e78>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))) from (loop2 AppRand9)')
+439: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+443: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x454b8e0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(>= x4935 0)')
+462: i12 = int_ge(i6, 0)
+466: guard_false(i12, descr=<Guard0x4570ec0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))')
debug_merge_point(0, 0, '(let ([AppRand10 (- y4931 1)]) (loop1 AppRand10))')
debug_merge_point(0, 0, '(- y4931 1)')
+472: p13 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+476: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x454b940>) [p0, i1, p2, p3, p4]
+495: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+499: i17 = int_sub_ovf(i15, 1)
+503: guard_no_overflow(descr=<Guard0x4570f08>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(loop1 AppRand10)')
+509: p18 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+513: guard_nonnull_class(p18, 16479200, descr=<Guard0x454b9a0>) [p0, i1, p2, p3, p4]
+532: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+543: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x4570f50>) [p0, i1, p2, p3, p4]
+552: p22 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if2 (>= y4931 0)]) (if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void)))')
debug_merge_point(0, 0, '(>= y4931 0)')
+552: i24 = int_ge(i17, 0)
+556: guard_false(i24, descr=<Guard0x4570f98>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if2 (let ([loop2 (lambda (x4935) (let ([if3 (>= x4935 0)]) (if if3 (let ([AppRand7 (vector-ref matrix x4935)][AppRand8 (count r4923 i4925 step4927 x4935 y4931)]) (vector-set! AppRand7 y4931 AppRand8) (let ([AppRand9 (- x4935 1)]) (loop2 AppRand9))) (let ([AppRand10 (- y4931 1)]) (loop1 AppRand10)))))][AppRand11 (- n 1)]) (loop2 AppRand11)) (void))')
debug_merge_point(0, 0, '(void)')
+562: p25 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+573: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x4570fe0>) [p0, i1, p2, p3, p4]
+582: p27 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+586: p28 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand16 (vector-ref matrix4956 0)]) (vector-ref AppRand16 0))')
+590: guard_class(p27, 16499664, descr=<Guard0x4571028>) [p0, i1, p2, p3, p4]
+603: p30 = getfield_gc_r(p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+607: guard_class(p30, 16504944, descr=<Guard0x4571070>) [p0, i1, p2, p3, p4]
+621: p32 = getfield_gc_r(p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+626: guard_class(p32, 16505296, descr=<Guard0x45710b8>) [p0, i1, p2, p3, p4]
+639: guard_class(p28, 16435208, descr=<Guard0x4571100>) [p0, i1, p2, p3, p4]
+652: p35 = getfield_gc_r(p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+656: guard_nonnull_class(p35, ConstClass(ForwardLink), descr=<Guard0x454ba00>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(vector-ref matrix4956 0)')
+675: p37 = getfield_gc_r(p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+679: guard_nonnull_class(p37, ConstClass(W_Vector), descr=<Guard0x454ba60>) [p0, i1, p2, p3, p4]
+698: i39 = getfield_gc_i(p37, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+702: i41 = int_lt(0, i39)
+706: guard_true(i41, descr=<Guard0x4571148>) [p0, i1, p2, p3, p4]
+712: p42 = getfield_gc_r(p37, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+716: guard_class(p42, 16622984, descr=<Guard0x4571190>) [p0, i1, p2, p3, p4]
+729: p44 = getfield_gc_r(p37, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+733: p46 = getarrayitem_gc_r(p44, 0, descr=<ArrayP 8>)
+737: guard_class(p46, ConstClass(W_Vector), descr=<Guard0x45711d8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand16 0)')
+750: i48 = getfield_gc_i(p46, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+754: i50 = int_lt(0, i48)
+758: guard_true(i50, descr=<Guard0x4571220>) [p0, i1, p2, p3, p4]
+764: p51 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+768: guard_class(p51, 16623792, descr=<Guard0x4571268>) [p0, i1, p2, p3, p4]
+781: p53 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+781: i55 = getarrayitem_gc_i(p53, 0, descr=<ArrayS 8>)
+781: p56 = getfield_gc_r(p28, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+792: guard_value(p56, ConstPtr(ptr57), descr=<Guard0x45712b0>) [p0, i1, p2, p3, p4]
+801: p58 = getfield_gc_r(p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+805: p59 = getfield_gc_r(p28, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4982 (add1 i4984)) from (vector-ref AppRand16 0)')
+809: guard_class(p58, 16504944, descr=<Guard0x45712f8>) [p0, i1, p2, p3, p4]
+822: p61 = getfield_gc_r(p58, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+826: guard_class(p61, 16499664, descr=<Guard0x4571340>) [p0, i1, p2, p3, p4]
+839: p63 = getfield_gc_r(p61, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+843: guard_nonnull_class(p63, 16510992, descr=<Guard0x454bac0>) [p0, i1, p2, p3, p4]
+861: i65 = getfield_gc_i(p58, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+865: i67 = int_add_ovf(i65, 1)
+869: guard_no_overflow(descr=<Guard0x4571388>) [p0, i1, p2, p3, p4]
+875: p68 = getfield_gc_r(p63, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+886: guard_value(p68, ConstPtr(ptr69), descr=<Guard0x45713d0>) [p0, i1, p2, p3, p4]
+895: p70 = getfield_gc_r(p63, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+899: i71 = instance_ptr_eq(p61, p70)
+902: guard_true(i71, descr=<Guard0x4571418>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if6 (> i4984 mbrot-iters)]) (if if6 (begin (void) (void)) (begin (test 75) (doloop4982 (add1 i4984))))) from (doloop4982 (add1 i4984))')
+908: guard_class(p59, 16528368, descr=<Guard0x4571460>) [p0, i1, p2, p3, p4]
+922: p73 = getfield_gc_r(p59, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+927: guard_nonnull_class(p73, ConstClass(ForwardLink), descr=<Guard0x454bb20>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(> i4984 mbrot-iters)')
+945: i76 = int_gt(i67, 3500)
+952: guard_false(i76, descr=<Guard0x45714a8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if6 (begin (void) (void)) (begin (test 75) (doloop4982 (add1 i4984))))')
debug_merge_point(0, 0, '(begin (test 75) (doloop4982 (add1 i4984)))')
debug_merge_point(0, 0, '(test 75)')
+958: p77 = getfield_gc_r(p61, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([matrix4956 (make-vector n4954)]) (let ([loop4959 (lambda (i4961) (let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))))][AppRand15 (- n4954 1)]) (loop4959 AppRand15) (mbrot matrix4956 -1.0 -0.5 0.005 n4954) (let ([AppRand16 (vector-ref matrix4956 0)]) (vector-ref AppRand16 0))))')
debug_merge_point(0, 0, '(make-vector n4954)')
debug_merge_point(0, 0, '(let ([loop4959 (lambda (i4961) (let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))))][AppRand15 (- n4954 1)]) (loop4959 AppRand15) (mbrot matrix4956 -1.0 -0.5 0.005 n4954) (let ([AppRand16 (vector-ref matrix4956 0)]) (vector-ref AppRand16 0)))')
debug_merge_point(0, 0, '(lambda (i4961) (let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))))')
debug_merge_point(0, 0, '(- n4954 1)')
debug_merge_point(0, 0, '(loop4959 AppRand15)')
debug_merge_point(0, 0, '(let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))) from (loop4959 AppRand15)')
debug_merge_point(0, 0, '(>= i4961 0)')
debug_merge_point(0, 0, '(if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))')
debug_merge_point(0, 0, '(let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14)))')
debug_merge_point(0, 0, '(make-vector n4954)')
debug_merge_point(0, 0, '(vector-set! matrix4956 i4961 AppRand13)')
+965: p81 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), 75, ConstPtr(ptr80), descr=<Callr 8 ir EF=5>)
+1061: guard_no_exception(descr=<Guard0x454bb80>) [p81, i67, p61, p59, p73, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))')
debug_merge_point(0, 0, '(- i4961 1)')
debug_merge_point(0, 0, '(loop4959 AppRand14)')
debug_merge_point(0, 0, '(let ([if4 (>= i4961 0)]) (if if4 (let ([AppRand13 (make-vector n4954)]) (vector-set! matrix4956 i4961 AppRand13) (let ([AppRand14 (- i4961 1)]) (loop4959 AppRand14))) (void))) from (loop4959 AppRand14)')
+1076: p83 = new_with_vtable(descr=<SizeDescr 32>)
+1120: setfield_gc(p83, 75, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1128: p86 = new_array_clear(1, descr=<ArrayP 8>)
+1147: setarrayitem_gc(p86, 0, ConstPtr(ptr88), descr=<ArrayP 8>)
+1158: setfield_gc(p83, p86, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1169: setfield_gc(p83, ConstPtr(ptr89), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1183: setarrayitem_gc(p81, 74, p83, descr=<ArrayP 8>)
+1190: p91 = new_with_vtable(descr=<SizeDescr 40>)
+1201: p92 = new_with_vtable(descr=<SizeDescr 32>)
+1212: setfield_gc(p92, 75, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1220: setfield_gc(p92, p81, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1231: setfield_gc(p92, ConstPtr(ptr93), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1235: p94 = new_with_vtable(descr=<SizeDescr 40>)
+1246: p95 = new_with_vtable(descr=<SizeDescr 24>)
+1264: setfield_gc(p95, ConstPtr(ptr96), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1268: setfield_gc(p95, p92, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1272: p97 = new_with_vtable(descr=<SizeDescr 40>)
+1284: setfield_gc(p97, p73, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1296: p98 = new_with_vtable(descr=<SizeDescr 24>)
+1308: setfield_gc(p98, p61, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1319: setfield_gc(p98, i67, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1323: setfield_gc(p97, p98, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1328: setfield_gc(p97, p59, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1340: setfield_gc(p97, ConstPtr(ptr99), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1408: p100 = getfield_gc_r(p92, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1419: setfield_gc(p91, ConstPtr(ptr101), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1423: setfield_gc(p94, p73, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1434: setfield_gc(p91, ConstPtr(ptr102), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1445: setfield_gc(p94, ConstPtr(ptr103), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1449: setfield_gc(p94, p95, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1453: setfield_gc(p94, p97, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1457: setfield_gc(p91, 75, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1465: setfield_gc(p91, p92, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1469: guard_nonnull_class(p100, 16622984, descr=<Guard0x454bbe0>) [p94, p91, None, None, None, None, None, None, None]
+1487: i105 = getfield_gc_i(p92, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1491: i107 = int_ge(i105, 1)
+1495: guard_true(i107, descr=<Guard0x454bc40>) [p94, p91, None, None, None, None, None, None, None]
+1501: p108 = getfield_gc_r(p92, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1505: guard_nonnull(p108, descr=<Guard0x454bca0>) [p94, p91, None, None, None, None, None, None, None]
+1514: jump(p91, 73, p94, p73, p92, i105, p108, 75, descr=TargetToken(72094112))
+1584: --end of the loop--
[2a709dda7120770] jit-log-opt-bridge}
[2a709f1f7ae8145] {jit-summary
Tracing:      	14	0.141182
Backend:      	14	0.009593
TOTAL:      		33.844050
ops:             	48204
recorded ops:    	8236
  calls:         	1
guards:          	1766
opt ops:         	2008
opt guards:      	423
opt guards shared:	296
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	83
nvholes:         	12
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	4
Total # of bridges:	10
Freed # of loops:	0
Freed # of bridges:	0
[2a709f1f7b02a60] jit-summary}
[2a709f1f7d3e2e5] {jit-backend-counts
entry 1:146
TargetToken(71669008):146
TargetToken(71669088):5829739711
bridge 71923504:64259948
bridge 72309896:61844950
entry 4:279
bridge 71923432:132614948
entry 6:93
bridge 72615000:157
entry 8:60
TargetToken(72094032):60
TargetToken(72094112):2624798
bridge 72614496:1084948
bridge 72616296:1504948
bridge 72616080:209944
bridge 72618384:34949
bridge 72310256:34949
bridge 72620832:34949
[2a709f1f7d44914] jit-backend-counts}
