[3e4c086b03db5d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c086b03ef4f5] jit-backend-dump}
[3e4c086b0425e3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a0b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c086b0429008] jit-backend-dump}
[3e4c086b04358d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c086b04376fc] jit-backend-dump}
[3e4c086b043dec8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a1f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c086b043f920] jit-backend-dump}
[3e4c086b044836e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c086b0449d74] jit-backend-dump}
[3e4c086b0453016] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a2f
[3e4c086b0456cdb] jit-backend-dump}
[3e4c086b045cbc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a
[3e4c086b045efd6] jit-backend-dump}
[3e4c086b0463f45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a
[3e4c086b04666fd] jit-backend-dump}
[3e4c086b04c777f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a
[3e4c086b04ca5c9] jit-backend-dump}
[3e4c086b04d0957] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565a8f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B528010000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B528010000C20800
[3e4c086b04d32a5] jit-backend-dump}
[3e4c086b04d8606] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565aa70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c086b04da1ec] jit-backend-dump}
[3e4c086b04eb806] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565aaf
[3e4c086b04ee934] jit-backend-dump}
[3e4c086b04f67f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ace
[3e4c086b04f9a5a] jit-backend-dump}
[3e4c086b0502116] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565aee
[3e4c086b05051d6] jit-backend-dump}
[3e4c086b050bbf9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565b0d0 +0  4889455848895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC084889D741BB50D2720041FFD3488B0C258893F900488B69F8F64504010F85EA0000004883C4084885C00F84CC0000004889C1488B4558488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B52801000048C7452000000000C34883C40849BB70AA6535D87F000041FFE349BB70A26535D87F000041FFD3E904FFFFFF
[3e4c086b050ea52] jit-backend-dump}
[3e4c086b051854e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565b2c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70A26535D87F000041FFD3E99CFFFFFF
[3e4c086b051a4e3] jit-backend-dump}
[3e4c086b051fa8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565b380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70A26535D87F000041FFD3E9BCFFFFFF
[3e4c086b05213c8] jit-backend-dump}
[3e4c086b0526930] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565b
[3e4c086b0529383] jit-backend-dump}
[3e4c086b052ec34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565b5c
[3e4c086b0531505] jit-backend-dump}
[3e4c086b054162a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565b750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB70AA6535D87F000041FFE3
[3e4c086b0546d3c] jit-backend-dump}
[3e4c086b09dfa8d] {jit-backend
[3e4c086b0a9bfa9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565b
[3e4c086b0aa31a6] jit-backend-dump}
[3e4c086b0ab2d12] {jit-backend-addr
Loop 1 ((let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))) from (doloop5086 AppRand37)) has address 0x7fd83565ba0d to 0x7fd83565bb50 (bootstrap 0x7fd83565b980)
       gc table: 0x7fd83565b900
       function: 0x7fd83565b980
         resops: 0x7fd83565ba0d
       failures: 0x7fd83565bb50
            end: 0x7fd83565bd1a
[3e4c086b0ab7246] jit-backend-addr}
[3e4c086b0abc60f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ba37 +0  73010000
[3e4c086b0abd8bf] jit-backend-dump}
[3e4c086b0ac0e77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ba4d +0  79010000
[3e4c086b0ac1db0] jit-backend-dump}
[3e4c086b0ac51d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ba60 +0  9E010000
[3e4c086b0ac5fa8] jit-backend-dump}
[3e4c086b0ac926d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ba71 +0  A9010000
[3e4c086b0ac9ffa] jit-backend-dump}
[3e4c086b0acd0eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ba88 +0  AE010000
[3e4c086b0acde59] jit-backend-dump}
[3e4c086b0ad0efa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ba92 +0  C0010000
[3e4c086b0ad1c47] jit-backend-dump}
[3e4c086b0ad4d41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565bac0 +0  AE010000
[3e4c086b0ad5abb] jit-backend-dump}
[3e4c086b0ad8b13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565bad6 +0  B4010000
[3e4c086b0ad9863] jit-backend-dump}
[3e4c086b0adc88d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565baea +0  BC010000
[3e4c086b0add5ca] jit-backend-dump}
[3e4c086b0ae05cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565baf7 +0  CB010000
[3e4c086b0ae1313] jit-backend-dump}
[3e4c086b0ae4478] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565bb21 +0  D9010000
[3e4c086b0ae51b8] jit-backend-dump}
[3e4c086b0ae8dc3] jit-backend}
[3e4c086b0aeca1d] {jit-log-opt-loop
# Loop 1 ((let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))) from (doloop5086 AppRand37)) : loop with 50 ops
[p0, p1]
+277: label(p0, p1, descr=TargetToken(61623936))
debug_merge_point(0, 0, '(let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))) from (doloop5086 AppRand37)')
+296: guard_class(p1, 16435208, descr=<Guard0x39fdca0>) [p0, p1]
+315: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+319: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x39fdd00>) [p0, p1]
debug_merge_point(0, 0, '(> m size)')
+337: guard_not_invalidated(descr=<Guard0x3b0c608>) [p0, p1]
+337: guard_class(p0, 16504944, descr=<Guard0x3b0c650>) [p0, p1]
+356: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+360: i8 = int_gt(i6, 511)
+367: guard_false(i8, descr=<Guard0x3b0c698>) [p0, p1]
debug_merge_point(0, 0, '(if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))')
debug_merge_point(0, 0, '(begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37)))')
debug_merge_point(0, 0, '(vector-set! *puzzle* m #t)')
+380: p10 = getfield_gc_r(ConstPtr(ptr9), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+384: guard_class(p10, 16622984, descr=<Guard0x3b0c6e0>) [p0, p1]
+396: i13 = int_ge(i6, 0)
+400: guard_true(i13, descr=<Guard0x3b0c728>) [p0, p1]
+406: p15 = getfield_gc_r(ConstPtr(ptr14), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+427: setarrayitem_gc(p15, i6, ConstPtr(ptr16), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))')
+432: p17 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ m 1)')
+436: i19 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop5086 AppRand37)')
+440: guard_class(p17, 16499664, descr=<Guard0x39fdd60>) [p1, p17, i19]
+452: p21 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+456: guard_nonnull_class(p21, 16510992, descr=<Guard0x39fddc0>) [p1, p17, i19]
+474: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+485: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x3b0c770>) [p1, p17, i19]
+494: p25 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+498: i26 = instance_ptr_eq(p17, p25)
+501: guard_true(i26, descr=<Guard0x3b0c7b8>) [p1, p17, i19]
debug_merge_point(0, 0, '(let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))) from (doloop5086 AppRand37)')
+507: label(p17, i19, p1, p3, p15, p21, descr=TargetToken(61624016))
debug_merge_point(0, 0, '(let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))) from (doloop5086 AppRand37)')
debug_merge_point(0, 0, '(> m size)')
+536: guard_not_invalidated(descr=<Guard0x39fde20>) [i19, p17, p1, p3]
+536: i28 = int_gt(i19, 511)
+543: guard_false(i28, descr=<Guard0x3b0c800>) [i19, p17, p1, p3]
debug_merge_point(0, 0, '(if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))')
debug_merge_point(0, 0, '(begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37)))')
debug_merge_point(0, 0, '(vector-set! *puzzle* m #t)')
+566: setarrayitem_gc(p15, i19, ConstPtr(ptr29), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))')
debug_merge_point(0, 0, '(+ m 1)')
+571: i31 = int_add(i19, 1)
debug_merge_point(0, 0, '(doloop5086 AppRand37)')
debug_merge_point(0, 0, '(let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))) from (doloop5086 AppRand37)')
+575: jump(p17, i31, p1, p3, p15, p21, descr=TargetToken(61624016))
+592: --end of the loop--
[3e4c086b0b4b612] jit-log-opt-loop}
[3e4c086b0dbcf1a] {jit-backend
[3e4c086b0e28673] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565be
[3e4c086b0e313ee] jit-backend-dump}
[3e4c086b0e3bdf2] {jit-backend-addr
Loop 2 ((let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)) has address 0x7fd83565bfad to 0x7fd83565c150 (bootstrap 0x7fd83565bf20)
       gc table: 0x7fd83565be70
       function: 0x7fd83565bf20
         resops: 0x7fd83565bfad
       failures: 0x7fd83565c150
            end: 0x7fd83565c3c2
[3e4c086b0e3ede5] jit-backend-addr}
[3e4c086b0e434c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565bfd7 +0  D3010000
[3e4c086b0e4479e] jit-backend-dump}
[3e4c086b0e47f40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565bfed +0  D9010000
[3e4c086b0e48dfe] jit-backend-dump}
[3e4c086b0e4c263] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c000 +0  FE010000
[3e4c086b0e4cfde] jit-backend-dump}
[3e4c086b0e5018c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c011 +0  09020000
[3e4c086b0e50ea8] jit-backend-dump}
[3e4c086b0e53fa8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c021 +0  15020000
[3e4c086b0e54ccd] jit-backend-dump}
[3e4c086b0e57d6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c035 +0  1D020000
[3e4c086b0e58a71] jit-backend-dump}
[3e4c086b0e5bb28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c043 +0  2B020000
[3e4c086b0e5c834] jit-backend-dump}
[3e4c086b0e5f959] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c04d +0  3D020000
[3e4c086b0e6065f] jit-backend-dump}
[3e4c086b0e63781] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c065 +0  41020000
[3e4c086b0e64472] jit-backend-dump}
[3e4c086b0e6752f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c07a +0  48020000
[3e4c086b0e6823b] jit-backend-dump}
[3e4c086b0e6b2ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c08b +0  53020000
[3e4c086b0e6bfef] jit-backend-dump}
[3e4c086b0e6f072] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c095 +0  65020000
[3e4c086b0e6fd6c] jit-backend-dump}
[3e4c086b0e72e3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c0a2 +0  74020000
[3e4c086b0e73b32] jit-backend-dump}
[3e4c086b0e76cce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c0f1 +0  5D020000
[3e4c086b0e779cb] jit-backend-dump}
[3e4c086b0e7aa54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c102 +0  68020000
[3e4c086b0e7b74e] jit-backend-dump}
[3e4c086b0e7e7f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c112 +0  74020000
[3e4c086b0e7f4fb] jit-backend-dump}
[3e4c086b0e825ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c11f +0  83020000
[3e4c086b0e832a9] jit-backend-dump}
[3e4c086b0e86e67] jit-backend}
[3e4c086b0e8a980] {jit-log-opt-loop
# Loop 2 ((let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)) : loop with 69 ops
[p0, p1]
+325: label(p0, p1, descr=TargetToken(61624096))
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)')
+344: guard_class(p1, 16435208, descr=<Guard0x39fde80>) [p0, p1]
+363: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+367: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x39fdee0>) [p0, p1]
debug_merge_point(0, 0, '(> m5128 size)')
+385: guard_not_invalidated(descr=<Guard0x3b0c848>) [p0, p1]
+385: guard_class(p0, 16504944, descr=<Guard0x3b0c890>) [p0, p1]
+404: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+408: i8 = int_gt(i6, 511)
+415: guard_false(i8, descr=<Guard0x3b0c8d8>) [p0, p1]
debug_merge_point(0, 0, '(if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))')
debug_merge_point(0, 0, '(let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46)))')
debug_merge_point(0, 0, '(vector-ref *p* i5123)')
+421: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+425: guard_class(p9, 16482960, descr=<Guard0x3b0c920>) [p0, p1]
+437: p11 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+448: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3b0c968>) [p0, p1]
+457: i13 = getfield_gc_i(p9, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+461: i15 = int_ge(i13, 0)
+465: guard_true(i15, descr=<Guard0x3b0c9b0>) [p0, p1]
+471: i17 = int_lt(i13, 13)
+475: guard_true(i17, descr=<Guard0x3b0c9f8>) [p0, p1]
+488: p19 = getfield_gc_r(ConstPtr(ptr18), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+492: guard_class(p19, 16622984, descr=<Guard0x3b0ca40>) [p0, p1]
+505: p22 = getfield_gc_r(ConstPtr(ptr21), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+509: p23 = getarrayitem_gc_r(p22, i13, descr=<ArrayP 8>)
+514: guard_class(p23, ConstClass(W_Vector), descr=<Guard0x3b0ca88>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand45 m5128 #f)')
+526: p25 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+530: guard_class(p25, 16622984, descr=<Guard0x3b0cad0>) [p0, p1]
+543: i28 = int_ge(i6, 0)
+547: guard_true(i28, descr=<Guard0x3b0cb18>) [p0, p1]
+553: i29 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+557: i30 = int_lt(i6, i29)
+560: guard_true(i30, descr=<Guard0x3b0cb60>) [p0, p1]
+566: p31 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+587: setarrayitem_gc(p31, i6, ConstPtr(ptr32), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))')
debug_merge_point(0, 0, '(+ m5128 1)')
+592: i34 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop5126 AppRand46)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)')
+596: label(p9, i34, p1, p3, p22, i13, descr=TargetToken(61624176))
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)')
debug_merge_point(0, 0, '(> m5128 size)')
+632: guard_not_invalidated(descr=<Guard0x39fdf40>) [i34, p9, p1, p3]
+632: i36 = int_gt(i34, 511)
+639: guard_false(i36, descr=<Guard0x3b0cba8>) [i34, p9, p1, p3]
debug_merge_point(0, 0, '(if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))')
debug_merge_point(0, 0, '(let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46)))')
debug_merge_point(0, 0, '(vector-ref *p* i5123)')
+645: p37 = getarrayitem_gc_r(p22, i13, descr=<ArrayP 8>)
+650: guard_class(p37, ConstClass(W_Vector), descr=<Guard0x3b0cbf0>) [i34, p9, p1, p3]
debug_merge_point(0, 0, '(vector-set! AppRand45 m5128 #f)')
+662: p39 = getfield_gc_r(p37, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+666: guard_class(p39, 16622984, descr=<Guard0x3b0cc38>) [i34, p9, p1, p3]
+678: i41 = getfield_gc_i(p37, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+682: i42 = int_lt(i34, i41)
+685: guard_true(i42, descr=<Guard0x3b0cc80>) [i34, p9, p1, p3]
+691: p43 = getfield_gc_r(p37, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+712: setarrayitem_gc(p43, i34, ConstPtr(ptr44), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))')
debug_merge_point(0, 0, '(+ m5128 1)')
+717: i46 = int_add(i34, 1)
debug_merge_point(0, 0, '(doloop5126 AppRand46)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)')
+721: i47 = arraylen_gc(p22, descr=<ArrayP 8>)
+721: jump(p9, i46, p1, p3, p22, i13, descr=TargetToken(61624176))
+736: --end of the loop--
[3e4c086b0ec69dd] jit-log-opt-loop}
[3e4c086b123013f] {jit-backend
[3e4c086b12ab645] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c
[3e4c086b12b57be] jit-backend-dump}
[3e4c086b12c0650] {jit-backend-addr
Loop 3 ((let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)) has address 0x7fd83565c6ed to 0x7fd83565c8f0 (bootstrap 0x7fd83565c660)
       gc table: 0x7fd83565c580
       function: 0x7fd83565c660
         resops: 0x7fd83565c6ed
       failures: 0x7fd83565c8f0
            end: 0x7fd83565cbbe
[3e4c086b12c3652] jit-backend-addr}
[3e4c086b12c7d79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c717 +0  E7010000
[3e4c086b12c91c0] jit-backend-dump}
[3e4c086b12cc77c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c72d +0  ED010000
[3e4c086b12cd628] jit-backend-dump}
[3e4c086b12d0a43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c740 +0  12020000
[3e4c086b12d1860] jit-backend-dump}
[3e4c086b12d49e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c754 +0  1A020000
[3e4c086b12d579e] jit-backend-dump}
[3e4c086b12d88ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c768 +0  22020000
[3e4c086b12d961f] jit-backend-dump}
[3e4c086b12dc9c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c77f +0  27020000
[3e4c086b12dd753] jit-backend-dump}
[3e4c086b12e0a7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c78c +0  36020000
[3e4c086b12e17b7] jit-backend-dump}
[3e4c086b12e4913] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c7a3 +0  3B020000
[3e4c086b12e5638] jit-backend-dump}
[3e4c086b12e86e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c7b1 +0  49020000
[3e4c086b12e93e8] jit-backend-dump}
[3e4c086b12ec474] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c7bb +0  5B020000
[3e4c086b12ed187] jit-backend-dump}
[3e4c086b12f0262] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c7d5 +0  5D020000
[3e4c086b12f0f8d] jit-backend-dump}
[3e4c086b12f4047] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c7ed +0  61020000
[3e4c086b12f4d44] jit-backend-dump}
[3e4c086b12f7de5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c7f7 +0  73020000
[3e4c086b12f8b1f] jit-backend-dump}
[3e4c086b12fbc32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c805 +0  81020000
[3e4c086b12fc95d] jit-backend-dump}
[3e4c086b12ffa1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c817 +0  8B020000
[3e4c086b130071d] jit-backend-dump}
[3e4c086b13037e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c82f +0  8F020000
[3e4c086b13044e9] jit-backend-dump}
[3e4c086b1307575] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c83f +0  9B020000
[3e4c086b130829a] jit-backend-dump}
[3e4c086b130b3bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c87d +0  95020000
[3e4c086b130c105] jit-backend-dump}
[3e4c086b130f261] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c88f +0  9F020000
[3e4c086b130ff67] jit-backend-dump}
[3e4c086b1313098] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c89c +0  AE020000
[3e4c086b1313d95] jit-backend-dump}
[3e4c086b1316eae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c8ad +0  B9020000
[3e4c086b1317bb4] jit-backend-dump}
[3e4c086b131ac1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c8c3 +0  BF020000
[3e4c086b131b903] jit-backend-dump}
[3e4c086b131e955] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c8d3 +0  CB020000
[3e4c086b131f639] jit-backend-dump}
[3e4c086b1323106] jit-backend}
[3e4c086b1326cfb] {jit-log-opt-loop
# Loop 3 ((let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)) : loop with 90 ops
[p0, p1]
+373: label(p0, p1, descr=TargetToken(61624256))
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+392: guard_class(p1, 16435920, descr=<Guard0x39fdfa0>) [p0, p1]
+411: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+415: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b12020>) [p0, p1]
debug_merge_point(0, 0, '(> k end)')
+433: guard_not_invalidated(descr=<Guard0x3b0ccc8>) [p0, p1]
+433: guard_class(p0, 16504944, descr=<Guard0x3b0cd10>) [p0, p1]
+452: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+456: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+460: guard_class(p7, 16478448, descr=<Guard0x3b0cd58>) [p0, p1]
+472: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+483: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b0cda0>) [p0, p1]
+492: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+496: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3b12080>) [p0, p1]
+515: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+519: i14 = int_gt(i6, i13)
+522: guard_false(i14, descr=<Guard0x3b0cde8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+528: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+532: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3b120e0>) [p0, p1]
+551: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+555: i19 = int_ge(i17, 0)
+559: guard_true(i19, descr=<Guard0x3b0ce30>) [p0, p1]
+565: i21 = int_lt(i17, 13)
+569: guard_true(i21, descr=<Guard0x3b0ce78>) [p0, p1]
+582: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+587: guard_class(p23, 16622984, descr=<Guard0x3b0cec0>) [p0, p1]
+601: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+606: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+611: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3b0cf08>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+625: i30 = int_ge(i6, 0)
+629: guard_true(i30, descr=<Guard0x3b0cf50>) [p0, p1]
+635: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+640: i32 = int_lt(i6, i31)
+643: guard_true(i32, descr=<Guard0x3b0cf98>) [p0, p1]
+649: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+654: guard_class(p33, 16622984, descr=<Guard0x3b0cfe0>) [p0, p1]
+667: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+672: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+677: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3b0d028>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+698: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+701: guard_true(i39, descr=<Guard0x3b0d070>) [p0, p1]
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
+707: i41 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+711: label(p7, i41, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624336))
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
debug_merge_point(0, 0, '(> k end)')
+760: guard_not_invalidated(descr=<Guard0x3b12140>) [i41, p7, p1, p3]
+760: i42 = int_gt(i41, i13)
+763: guard_false(i42, descr=<Guard0x3b0d0b8>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+769: p43 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+774: guard_class(p43, ConstClass(W_Vector), descr=<Guard0x3b0d100>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+787: i45 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+791: i46 = int_lt(i41, i45)
+794: guard_true(i46, descr=<Guard0x3b0d148>) [i41, p7, p1, p3]
+800: p47 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+804: guard_class(p47, 16622984, descr=<Guard0x3b0d190>) [i41, p7, p1, p3]
+817: p49 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+821: p50 = getarrayitem_gc_r(p49, i41, descr=<ArrayP 8>)
+826: guard_class(p50, ConstClass(W_Bool), descr=<Guard0x3b0d1d8>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+846: i53 = instance_ptr_eq(p50, ConstPtr(ptr52))
+849: guard_true(i53, descr=<Guard0x3b0d220>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
+855: i55 = int_add(i41, 1)
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+859: i56 = arraylen_gc(p26, descr=<ArrayP 8>)
+859: jump(p7, i55, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624336))
+880: --end of the loop--
[3e4c086b1378267] jit-log-opt-loop}
[3e4c086b154d23c] {jit-backend
[3e4c086b15b4f48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cd
[3e4c086b15be292] jit-backend-dump}
[3e4c086b15c8aa7] {jit-backend-addr
Loop 4 ((let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)) has address 0x7fd83565cedd to 0x7fd83565d0e0 (bootstrap 0x7fd83565ce50)
       gc table: 0x7fd83565cd70
       function: 0x7fd83565ce50
         resops: 0x7fd83565cedd
       failures: 0x7fd83565d0e0
            end: 0x7fd83565d3ae
[3e4c086b15cba66] jit-backend-addr}
[3e4c086b15cfed7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cf07 +0  E7010000
[3e4c086b15d10e5] jit-backend-dump}
[3e4c086b15d43f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cf1d +0  ED010000
[3e4c086b15d525c] jit-backend-dump}
[3e4c086b15d84b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cf30 +0  12020000
[3e4c086b15d9298] jit-backend-dump}
[3e4c086b15dc475] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cf44 +0  1A020000
[3e4c086b15dd1f5] jit-backend-dump}
[3e4c086b15e04c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cf58 +0  22020000
[3e4c086b15e1284] jit-backend-dump}
[3e4c086b15e4479] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cf6f +0  27020000
[3e4c086b15e5221] jit-backend-dump}
[3e4c086b15e83d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cf7c +0  36020000
[3e4c086b15e913e] jit-backend-dump}
[3e4c086b15ec220] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cf93 +0  3B020000
[3e4c086b15ecfa0] jit-backend-dump}
[3e4c086b15f0118] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cfa1 +0  49020000
[3e4c086b15f0e55] jit-backend-dump}
[3e4c086b15f3eb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cfab +0  5B020000
[3e4c086b15f4c0f] jit-backend-dump}
[3e4c086b15f7d80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cfc5 +0  5D020000
[3e4c086b15f8adf] jit-backend-dump}
[3e4c086b15fbb2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cfdd +0  61020000
[3e4c086b15fc896] jit-backend-dump}
[3e4c086b15ffa26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cfe7 +0  73020000
[3e4c086b1600778] jit-backend-dump}
[3e4c086b16037e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565cff5 +0  81020000
[3e4c086b160452f] jit-backend-dump}
[3e4c086b1607617] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d007 +0  8B020000
[3e4c086b160839a] jit-backend-dump}
[3e4c086b160b411] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d01f +0  8F020000
[3e4c086b160c182] jit-backend-dump}
[3e4c086b160f273] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d02f +0  9B020000
[3e4c086b160ffe4] jit-backend-dump}
[3e4c086b16131ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d06d +0  95020000
[3e4c086b1613f26] jit-backend-dump}
[3e4c086b1617097] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d07f +0  9F020000
[3e4c086b1617e05] jit-backend-dump}
[3e4c086b161ae91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d08c +0  AE020000
[3e4c086b161bbff] jit-backend-dump}
[3e4c086b161ed34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d09d +0  B9020000
[3e4c086b161fa8f] jit-backend-dump}
[3e4c086b1622ad2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d0b3 +0  BF020000
[3e4c086b1623843] jit-backend-dump}
[3e4c086b1626a63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d0c3 +0  CB020000
[3e4c086b16277e0] jit-backend-dump}
[3e4c086b162b55a] jit-backend}
[3e4c086b162f0e4] {jit-log-opt-loop
# Loop 4 ((let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)) : loop with 86 ops
[p0, p1]
+373: label(p0, p1, descr=TargetToken(61624416))
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)')
+392: guard_class(p1, 16435208, descr=<Guard0x3b121a0>) [p0, p1]
+411: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+415: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b12200>) [p0, p1]
debug_merge_point(0, 0, '(> k4968 end4963)')
+433: guard_not_invalidated(descr=<Guard0x3b0d268>) [p0, p1]
+433: guard_class(p0, 16504944, descr=<Guard0x3b0d2b0>) [p0, p1]
+452: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+456: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+460: guard_class(p7, 16478448, descr=<Guard0x3b0d2f8>) [p0, p1]
+472: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+483: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b0d340>) [p0, p1]
+492: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+496: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3b12260>) [p0, p1]
+515: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+519: i14 = int_gt(i6, i13)
+522: guard_false(i14, descr=<Guard0x3b0d388>) [p0, p1]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12)))')
debug_merge_point(0, 0, '(vector-ref *p* i4959)')
+528: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+532: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3b122c0>) [p0, p1]
+551: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+555: i19 = int_ge(i17, 0)
+559: guard_true(i19, descr=<Guard0x3b0d3d0>) [p0, p1]
+565: i21 = int_lt(i17, 13)
+569: guard_true(i21, descr=<Guard0x3b0d418>) [p0, p1]
+582: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+587: guard_class(p23, 16622984, descr=<Guard0x3b0d460>) [p0, p1]
+601: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+606: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+611: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3b0d4a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand10 k4968)')
+625: i30 = int_ge(i6, 0)
+629: guard_true(i30, descr=<Guard0x3b0d4f0>) [p0, p1]
+635: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+640: i32 = int_lt(i6, i31)
+643: guard_true(i32, descr=<Guard0x3b0d538>) [p0, p1]
+649: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+654: guard_class(p33, 16622984, descr=<Guard0x3b0d580>) [p0, p1]
+667: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+672: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+677: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3b0d5c8>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))')
+698: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+701: guard_true(i39, descr=<Guard0x3b0d610>) [p0, p1]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))')
debug_merge_point(0, 0, '(+ k4968 1)')
+707: i41 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop4966 AppRand12)')
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)')
+711: label(p7, i41, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624496))
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)')
debug_merge_point(0, 0, '(> k4968 end4963)')
+760: guard_not_invalidated(descr=<Guard0x3b12320>) [i41, p7, p1, p3]
+760: i42 = int_gt(i41, i13)
+763: guard_false(i42, descr=<Guard0x3b0d658>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12)))')
debug_merge_point(0, 0, '(vector-ref *p* i4959)')
+769: p43 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+774: guard_class(p43, ConstClass(W_Vector), descr=<Guard0x3b0d6a0>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand10 k4968)')
+787: i45 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+791: i46 = int_lt(i41, i45)
+794: guard_true(i46, descr=<Guard0x3b0d6e8>) [i41, p7, p1, p3]
+800: p47 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+804: guard_class(p47, 16622984, descr=<Guard0x3b0d730>) [i41, p7, p1, p3]
+817: p49 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+821: p50 = getarrayitem_gc_r(p49, i41, descr=<ArrayP 8>)
+826: guard_class(p50, ConstClass(W_Bool), descr=<Guard0x3b0d778>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))')
+846: i53 = instance_ptr_eq(p50, ConstPtr(ptr52))
+849: guard_true(i53, descr=<Guard0x3b0d7c0>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))')
debug_merge_point(0, 0, '(+ k4968 1)')
+855: i55 = int_add(i41, 1)
debug_merge_point(0, 0, '(doloop4966 AppRand12)')
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)')
+859: i56 = arraylen_gc(p26, descr=<ArrayP 8>)
+859: jump(p7, i55, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624496))
+880: --end of the loop--
[3e4c086b16732fb] jit-log-opt-loop}
[3e4c086b191a4e6] {jit-backend
[3e4c086b1968494] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d4e
[3e4c086b196f97e] jit-backend-dump}
[3e4c086b197a4c7] {jit-backend-addr
Loop 5 ((let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))) from (doloop4981 AppRand18)) has address 0x7fd83565d60d to 0x7fd83565d770 (bootstrap 0x7fd83565d580)
       gc table: 0x7fd83565d4e0
       function: 0x7fd83565d580
         resops: 0x7fd83565d60d
       failures: 0x7fd83565d770
            end: 0x7fd83565d95e
[3e4c086b197d33b] jit-backend-addr}
[3e4c086b19817fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d637 +0  47010000
[3e4c086b1982ba7] jit-backend-dump}
[3e4c086b1986137] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d64d +0  4D010000
[3e4c086b19870ee] jit-backend-dump}
[3e4c086b198a5d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d660 +0  72010000
[3e4c086b198b3f3] jit-backend-dump}
[3e4c086b198e674] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d671 +0  7D010000
[3e4c086b198f3ef] jit-backend-dump}
[3e4c086b1992673] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d681 +0  89010000
[3e4c086b19933f4] jit-backend-dump}
[3e4c086b1996666] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d68b +0  9B010000
[3e4c086b19973b6] jit-backend-dump}
[3e4c086b199a763] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d6a3 +0  9F010000
[3e4c086b199b4a0] jit-backend-dump}
[3e4c086b199e728] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d6b8 +0  A6010000
[3e4c086b199f49f] jit-backend-dump}
[3e4c086b19a253b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d6c8 +0  B2010000
[3e4c086b19a3290] jit-backend-dump}
[3e4c086b19a63d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d6e2 +0  B4010000
[3e4c086b19a7139] jit-backend-dump}
[3e4c086b19aa1e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d6f6 +0  BC010000
[3e4c086b19aaf36] jit-backend-dump}
[3e4c086b19ae01b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d703 +0  CB010000
[3e4c086b19aed67] jit-backend-dump}
[3e4c086b19b1e6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d731 +0  D5010000
[3e4c086b19b2bbd] jit-backend-dump}
[3e4c086b19b5cfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d742 +0  E0010000
[3e4c086b19b6a4a] jit-backend-dump}
[3e4c086b19b9adc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d752 +0  EC010000
[3e4c086b19ba81c] jit-backend-dump}
[3e4c086b19be3ff] jit-backend}
[3e4c086b19c1fe2] {jit-log-opt-loop
# Loop 5 ((let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))) from (doloop4981 AppRand18)) : loop with 64 ops
[p0, p1]
+309: label(p0, p1, descr=TargetToken(61624576))
debug_merge_point(0, 0, '(let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))) from (doloop4981 AppRand18)')
+328: guard_class(p1, 16435920, descr=<Guard0x3b12380>) [p0, p1]
+347: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+351: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b123e0>) [p0, p1]
debug_merge_point(0, 0, '(> k4983 size)')
+369: guard_not_invalidated(descr=<Guard0x3b0d808>) [p0, p1]
+369: guard_class(p0, 16504944, descr=<Guard0x3b0d850>) [p0, p1]
+388: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+392: i8 = int_gt(i6, 511)
+399: guard_false(i8, descr=<Guard0x3b0d898>) [p0, p1]
debug_merge_point(0, 0, '(let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))')
debug_merge_point(0, 0, '(if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))')
debug_merge_point(0, 0, '(let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17))')
+405: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+409: guard_class(p9, 16499664, descr=<Guard0x3b0d8e0>) [p0, p1]
+421: p11 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(vector-ref *puzzle* k4983)')
+421: i13 = int_ge(i6, 0)
+425: guard_true(i13, descr=<Guard0x3b0d928>) [p0, p1]
+438: p15 = getfield_gc_r(ConstPtr(ptr14), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+442: guard_class(p15, 16622984, descr=<Guard0x3b0d970>) [p0, p1]
+455: p18 = getfield_gc_r(ConstPtr(ptr17), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+459: p19 = getarrayitem_gc_r(p18, i6, descr=<ArrayP 8>)
+464: guard_class(p19, ConstClass(W_Bool), descr=<Guard0x3b0d9b8>) [p0, p1]
debug_merge_point(0, 0, '(not AppRand17)')
+483: i22 = instance_ptr_eq(p19, ConstPtr(ptr21))
+486: guard_false(i22, descr=<Guard0x3b0da00>) [p0, p1]
debug_merge_point(0, 0, '(if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18)))')
debug_merge_point(0, 0, '(let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))')
debug_merge_point(0, 0, '(+ k4983 1)')
+492: i24 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop4981 AppRand18)')
+496: p25 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+500: guard_nonnull_class(p25, 16510992, descr=<Guard0x3b12440>) [p0, p1]
+518: p27 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+529: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x3b0da48>) [p0, p1]
+538: p29 = getfield_gc_r(p25, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+542: i30 = instance_ptr_eq(p9, p29)
+545: guard_true(i30, descr=<Guard0x3b0da90>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))) from (doloop4981 AppRand18)')
+551: label(p9, i24, p1, p3, p18, p25, descr=TargetToken(61624656))
debug_merge_point(0, 0, '(let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))) from (doloop4981 AppRand18)')
debug_merge_point(0, 0, '(> k4983 size)')
+584: guard_not_invalidated(descr=<Guard0x3b124a0>) [i24, p9, p1, p3]
+584: i32 = int_gt(i24, 511)
+591: guard_false(i32, descr=<Guard0x3b0dad8>) [i24, p9, p1, p3]
debug_merge_point(0, 0, '(let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))')
debug_merge_point(0, 0, '(if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))')
debug_merge_point(0, 0, '(let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17))')
debug_merge_point(0, 0, '(vector-ref *puzzle* k4983)')
+597: p33 = getarrayitem_gc_r(p18, i24, descr=<ArrayP 8>)
+602: guard_class(p33, ConstClass(W_Bool), descr=<Guard0x3b0db20>) [i24, p9, p1, p3]
debug_merge_point(0, 0, '(not AppRand17)')
+621: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+624: guard_false(i36, descr=<Guard0x3b0db68>) [i24, p9, p1, p3]
debug_merge_point(0, 0, '(if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18)))')
debug_merge_point(0, 0, '(let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))')
debug_merge_point(0, 0, '(+ k4983 1)')
+630: i38 = int_add(i24, 1)
debug_merge_point(0, 0, '(doloop4981 AppRand18)')
debug_merge_point(0, 0, '(let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))) from (doloop4981 AppRand18)')
+634: i39 = arraylen_gc(p18, descr=<ArrayP 8>)
+634: jump(p9, i38, p1, p3, p18, p25, descr=TargetToken(61624656))
+656: --end of the loop--
[3e4c086b19f737a] jit-log-opt-loop}
[3e4c086b1bcead0] {jit-backend
[3e4c086b1c41d40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565db
[3e4c086b1c4b408] jit-backend-dump}
[3e4c086b1c55b58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dc04 +0  21000000
[3e4c086b1c56f77] jit-backend-dump}
[3e4c086b1c5ac61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565de05 +0  21000000
[3e4c086b1c5bc4c] jit-backend-dump}
[3e4c086b1c5efa6] {jit-backend-addr
bridge out of Guard 0x3b0d070 has address 0x7fd83565dc00 to 0x7fd83565de00
       gc table: 0x7fd83565db10
    jump target: 0x7fd83565dc00
         resops: 0x7fd83565dc0e
       failures: 0x7fd83565de00
            end: 0x7fd83565e0e2
[3e4c086b1c61492] jit-backend-addr}
[3e4c086b1c64770] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dc1e +0  04020000
[3e4c086b1c655fa] jit-backend-dump}
[3e4c086b1c68949] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dc35 +0  09020000
[3e4c086b1c69698] jit-backend-dump}
[3e4c086b1c6c994] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dc41 +0  35020000
[3e4c086b1c6d6e1] jit-backend-dump}
[3e4c086b1c7086e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dc57 +0  3B020000
[3e4c086b1c715e8] jit-backend-dump}
[3e4c086b1c7472c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dc6b +0  43020000
[3e4c086b1c75497] jit-backend-dump}
[3e4c086b1c7872b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dc82 +0  48020000
[3e4c086b1c7947a] jit-backend-dump}
[3e4c086b1c7c6bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dc8f +0  57020000
[3e4c086b1c7d3e6] jit-backend-dump}
[3e4c086b1c80625] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dca6 +0  5C020000
[3e4c086b1c8137a] jit-backend-dump}
[3e4c086b1c844e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dcb4 +0  6A020000
[3e4c086b1c8524b] jit-backend-dump}
[3e4c086b1c88458] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dcbe +0  7C020000
[3e4c086b1c89195] jit-backend-dump}
[3e4c086b1c8c2c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dcd5 +0  81020000
[3e4c086b1c8d028] jit-backend-dump}
[3e4c086b1c90273] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dcea +0  88020000
[3e4c086b1c90fcc] jit-backend-dump}
[3e4c086b1c94103] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dcf4 +0  9A020000
[3e4c086b1c94e62] jit-backend-dump}
[3e4c086b1c98038] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dd01 +0  A9020000
[3e4c086b1c98d6f] jit-backend-dump}
[3e4c086b1c9be26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dd11 +0  B5020000
[3e4c086b1c9cb69] jit-backend-dump}
[3e4c086b1c9fd0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dd26 +0  BC020000
[3e4c086b1ca0a58] jit-backend-dump}
[3e4c086b1ca3b37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dd36 +0  C8020000
[3e4c086b1ca488f] jit-backend-dump}
[3e4c086b1ca7b57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dd4c +0  CE020000
[3e4c086b1ca888b] jit-backend-dump}
[3e4c086b1cab979] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dd59 +0  DD020000
[3e4c086b1cac6c6] jit-backend-dump}
[3e4c086b1caf871] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dd63 +0  EF020000
[3e4c086b1cb05ab] jit-backend-dump}
[3e4c086b1cb37c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dd70 +0  FE020000
[3e4c086b1cb44f6] jit-backend-dump}
[3e4c086b1cb7532] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dd8e +0  FC020000
[3e4c086b1cb82b0] jit-backend-dump}
[3e4c086b1cbb4c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565dda3 +0  03030000
[3e4c086b1cbc23b] jit-backend-dump}
[3e4c086b1cbf32c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ddac +0  16030000
[3e4c086b1cc008a] jit-backend-dump}
[3e4c086b1cc4e47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c83f +0  BD130000
[3e4c086b1cc5c7c] jit-backend-dump}
[3e4c086b1ccc717] jit-backend}
[3e4c086b1cd05b6] {jit-log-opt-bridge
# bridge out of Guard 0x3b0d070 with 75 ops
[p0, p1]
+262: guard_class(p1, 16435920, descr=<Guard0x3b12500>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+278: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b12560>) [p0, p1]
debug_merge_point(0, 0, '(> k end)')
+297: guard_not_invalidated(descr=<Guard0x3b0dbb0>) [p0, p1]
+297: guard_class(p0, 16504944, descr=<Guard0x3b0dbf8>) [p0, p1]
+309: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+313: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+317: guard_class(p7, 16478448, descr=<Guard0x3b0dc40>) [p0, p1]
+331: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+342: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b0dc88>) [p0, p1]
+351: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+355: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3b125c0>) [p0, p1]
+374: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+378: i14 = int_gt(i6, i13)
+381: guard_false(i14, descr=<Guard0x3b0dcd0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+387: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+391: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3b12620>) [p0, p1]
+410: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+414: i19 = int_ge(i17, 0)
+418: guard_true(i19, descr=<Guard0x3b0dd18>) [p0, p1]
+424: i21 = int_lt(i17, 13)
+428: guard_true(i21, descr=<Guard0x3b0dd60>) [p0, p1]
+441: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+445: guard_class(p23, 16622984, descr=<Guard0x3b0dda8>) [p0, p1]
+457: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+461: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+466: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3b0ddf0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+478: i30 = int_ge(i6, 0)
+482: guard_true(i30, descr=<Guard0x3b0de38>) [p0, p1]
+488: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+492: i32 = int_lt(i6, i31)
+495: guard_true(i32, descr=<Guard0x3b0de80>) [p0, p1]
+501: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+505: guard_class(p33, 16622984, descr=<Guard0x3b0dec8>) [p0, p1]
+517: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+521: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+526: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3b0df10>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+545: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+548: guard_false(i39, descr=<Guard0x3b0df58>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
+554: p40 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j k)')
+554: p41 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+558: guard_nonnull_class(p41, ConstClass(W_Fixnum), descr=<Guard0x3b12680>) [p0, p1]
+576: i43 = getfield_gc_i(p41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+580: i44 = int_add_ovf(i43, i6)
+583: guard_no_overflow(descr=<Guard0x3b0dfa0>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+589: i46 = int_ge(i44, 0)
+593: guard_true(i46, descr=<Guard0x3b1c020>) [p0, p1]
+599: i48 = int_lt(i44, 512)
+606: guard_true(i48, descr=<Guard0x3b1c068>) [p0, p1]
+619: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+630: guard_class(p50, 16622984, descr=<Guard0x3b1c0b0>) [p0, p1]
+642: p53 = getfield_gc_r(ConstPtr(ptr52), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+646: p54 = getarrayitem_gc_r(p53, i44, descr=<ArrayP 8>)
+651: guard_class(p54, ConstClass(W_Bool), descr=<Guard0x3b1c0f8>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+663: i57 = instance_ptr_eq(p54, ConstPtr(ptr56))
+666: guard_true(i57, descr=<Guard0x3b1c140>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
+672: i59 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+676: i60 = arraylen_gc(p26, descr=<ArrayP 8>)
+676: jump(p7, i59, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624336))
+752: --end of the loop--
[3e4c086b1d14e00] jit-log-opt-bridge}
[3e4c086b1f45bef] {jit-backend
[3e4c086b1fa5738] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e
[3e4c086b1fae293] jit-backend-dump}
[3e4c086b1fb8e7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e354 +0  21000000
[3e4c086b1fba421] jit-backend-dump}
[3e4c086b1fbe2d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e545 +0  21000000
[3e4c086b1fbf1db] jit-backend-dump}
[3e4c086b1fc251d] {jit-backend-addr
bridge out of Guard 0x3b0d610 has address 0x7fd83565e350 to 0x7fd83565e540
       gc table: 0x7fd83565e270
    jump target: 0x7fd83565e350
         resops: 0x7fd83565e35e
       failures: 0x7fd83565e540
            end: 0x7fd83565e810
[3e4c086b1fc48e3] jit-backend-addr}
[3e4c086b1fc809e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e36e +0  1A020000
[3e4c086b1fc8f41] jit-backend-dump}
[3e4c086b1fcc2d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e385 +0  1F020000
[3e4c086b1fcd05c] jit-backend-dump}
[3e4c086b1fd02b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e391 +0  4B020000
[3e4c086b1fd1009] jit-backend-dump}
[3e4c086b1fd4103] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e3a7 +0  51020000
[3e4c086b1fd4e62] jit-backend-dump}
[3e4c086b1fd8133] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e3bb +0  59020000
[3e4c086b1fd8e7f] jit-backend-dump}
[3e4c086b1fdbee4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e3d2 +0  5E020000
[3e4c086b1fdcc4c] jit-backend-dump}
[3e4c086b1fdfde2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e3df +0  6D020000
[3e4c086b1fe0b00] jit-backend-dump}
[3e4c086b1fe3daa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e3f6 +0  72020000
[3e4c086b1fe4acb] jit-backend-dump}
[3e4c086b1fe7b3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e404 +0  80020000
[3e4c086b1fe88ad] jit-backend-dump}
[3e4c086b1feb976] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e40e +0  92020000
[3e4c086b1fec6c3] jit-backend-dump}
[3e4c086b1fef76d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e425 +0  97020000
[3e4c086b1ff04c9] jit-backend-dump}
[3e4c086b1ff35b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e43a +0  9E020000
[3e4c086b1ff42eb] jit-backend-dump}
[3e4c086b1ff732a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e444 +0  B0020000
[3e4c086b1ff8074] jit-backend-dump}
[3e4c086b1ffb168] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e451 +0  BF020000
[3e4c086b1ffbea5] jit-backend-dump}
[3e4c086b1ffef1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e461 +0  CB020000
[3e4c086b1fffc65] jit-backend-dump}
[3e4c086b2002daf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e476 +0  D2020000
[3e4c086b2003ad0] jit-backend-dump}
[3e4c086b2006b3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e486 +0  DE020000
[3e4c086b200787b] jit-backend-dump}
[3e4c086b200a96f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e49c +0  E4020000
[3e4c086b200b69d] jit-backend-dump}
[3e4c086b200e6fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e4a9 +0  F3020000
[3e4c086b200f441] jit-backend-dump}
[3e4c086b201259a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e4c0 +0  F8020000
[3e4c086b20132cb] jit-backend-dump}
[3e4c086b2016287] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e4ca +0  0A030000
[3e4c086b2016fc7] jit-backend-dump}
[3e4c086b201a0a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565e4d7 +0  19030000
[3e4c086b201add1] jit-backend-dump}
[3e4c086b201e1fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d02f +0  1D130000
[3e4c086b201ef11] jit-backend-dump}
[3e4c086b2022ed6] jit-backend}
[3e4c086b2026a2c] {jit-log-opt-bridge
# bridge out of Guard 0x3b0d610 with 71 ops
[p0, p1]
+246: guard_class(p1, 16435208, descr=<Guard0x3b126e0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+262: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b12740>) [p0, p1]
debug_merge_point(0, 0, '(> k4968 end4963)')
+281: guard_not_invalidated(descr=<Guard0x3b1c188>) [p0, p1]
+281: guard_class(p0, 16504944, descr=<Guard0x3b1c1d0>) [p0, p1]
+293: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+297: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+301: guard_class(p7, 16478448, descr=<Guard0x3b1c218>) [p0, p1]
+315: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+326: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b1c260>) [p0, p1]
+335: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+339: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3b127a0>) [p0, p1]
+358: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+362: i14 = int_gt(i6, i13)
+365: guard_false(i14, descr=<Guard0x3b1c2a8>) [p0, p1]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12)))')
debug_merge_point(0, 0, '(vector-ref *p* i4959)')
+371: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+375: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3b12800>) [p0, p1]
+394: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+398: i19 = int_ge(i17, 0)
+402: guard_true(i19, descr=<Guard0x3b1c2f0>) [p0, p1]
+408: i21 = int_lt(i17, 13)
+412: guard_true(i21, descr=<Guard0x3b1c338>) [p0, p1]
+425: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+429: guard_class(p23, 16622984, descr=<Guard0x3b1c380>) [p0, p1]
+441: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+445: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+450: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3b1c3c8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand10 k4968)')
+462: i30 = int_ge(i6, 0)
+466: guard_true(i30, descr=<Guard0x3b1c410>) [p0, p1]
+472: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+476: i32 = int_lt(i6, i31)
+479: guard_true(i32, descr=<Guard0x3b1c458>) [p0, p1]
+485: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+489: guard_class(p33, 16622984, descr=<Guard0x3b1c4a0>) [p0, p1]
+501: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+505: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+510: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3b1c4e8>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))')
+529: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+532: guard_false(i39, descr=<Guard0x3b1c530>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t)')
+538: p40 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j4961 k4968)')
+538: p41 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+542: guard_nonnull_class(p41, ConstClass(W_Fixnum), descr=<Guard0x3b12860>) [p0, p1]
+560: i43 = getfield_gc_i(p41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+564: i44 = int_add_ovf(i43, i6)
+567: guard_no_overflow(descr=<Guard0x3b1c578>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand11 #t)')
+580: p46 = getfield_gc_r(ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+584: guard_class(p46, 16622984, descr=<Guard0x3b1c5c0>) [p0, p1]
+596: i49 = int_ge(i44, 0)
+600: guard_true(i49, descr=<Guard0x3b1c608>) [p0, p1]
+606: i51 = int_lt(i44, 512)
+613: guard_true(i51, descr=<Guard0x3b1c650>) [p0, p1]
+619: p53 = getfield_gc_r(ConstPtr(ptr52), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+640: setarrayitem_gc(p53, i44, ConstPtr(ptr54), descr=<ArrayP 8>)
debug_merge_point(0, 0, '#t')
debug_merge_point(0, 0, '(let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))')
debug_merge_point(0, 0, '(+ k4968 1)')
+645: i56 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop4966 AppRand12)')
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)')
+649: i57 = arraylen_gc(p26, descr=<ArrayP 8>)
+649: jump(p7, i56, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624496))
+720: --end of the loop--
[3e4c086b2065bd9] jit-log-opt-bridge}
[3e4c086b2478cc7] {jit-backend
[3e4c086b25928df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565eb
[3e4c086b25a2c3a] jit-backend-dump}
[3e4c086b25ae2f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ed84 +0  23000000
[3e4c086b25af84c] jit-backend-dump}
[3e4c086b25b3891] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f295 +0  23000000
[3e4c086b25b47d0] jit-backend-dump}
[3e4c086b25b7b9c] {jit-backend-addr
bridge out of Guard 0x3b0d220 has address 0x7fd83565ed80 to 0x7fd83565f290
       gc table: 0x7fd83565eb80
    jump target: 0x7fd83565ed80
         resops: 0x7fd83565ed8e
       failures: 0x7fd83565f290
            end: 0x7fd83565f883
[3e4c086b25ba23a] jit-backend-addr}
[3e4c086b25bd950] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565edad +0  3E050000
[3e4c086b25be817] jit-backend-dump}
[3e4c086b25c1aab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565edc4 +0  43050000
[3e4c086b25c2854] jit-backend-dump}
[3e4c086b25c595d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565edd1 +0  52050000
[3e4c086b25c676a] jit-backend-dump}
[3e4c086b25c9830] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565edf0 +0  4F050000
[3e4c086b25ca543] jit-backend-dump}
[3e4c086b25cd53f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee07 +0  54050000
[3e4c086b25ce248] jit-backend-dump}
[3e4c086b25d135b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee15 +0  62050000
[3e4c086b25d208f] jit-backend-dump}
[3e4c086b25d50ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee1f +0  74050000
[3e4c086b25d5e33] jit-backend-dump}
[3e4c086b25d8e29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee37 +0  78050000
[3e4c086b25d9b48] jit-backend-dump}
[3e4c086b25dcb3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee4d +0  7E050000
[3e4c086b25dd856] jit-backend-dump}
[3e4c086b25e0901] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee57 +0  90050000
[3e4c086b25e162f] jit-backend-dump}
[3e4c086b25e468a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee64 +0  9F050000
[3e4c086b25e539f] jit-backend-dump}
[3e4c086b25e83b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee75 +0  AA050000
[3e4c086b25e90c0] jit-backend-dump}
[3e4c086b25ec0c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee8b +0  B0050000
[3e4c086b25ecdde] jit-backend-dump}
[3e4c086b25efd9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ee9b +0  BC050000
[3e4c086b25f0ab6] jit-backend-dump}
[3e4c086b25f3aaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565eeb2 +0  C1050000
[3e4c086b25f47c1] jit-backend-dump}
[3e4c086b25f77e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565eebf +0  D0050000
[3e4c086b25f8501] jit-backend-dump}
[3e4c086b25fb4f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565eec9 +0  E2050000
[3e4c086b25fc209] jit-backend-dump}
[3e4c086b25ff1c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565eed6 +0  F1050000
[3e4c086b25ffecb] jit-backend-dump}
[3e4c086b2602eb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565eeed +0  F6050000
[3e4c086b2603bcb] jit-backend-dump}
[3e4c086b2606bc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef03 +0  FC050000
[3e4c086b26078e2] jit-backend-dump}
[3e4c086b260a8e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef0c +0  0F060000
[3e4c086b260b5f1] jit-backend-dump}
[3e4c086b260e63a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef21 +0  16060000
[3e4c086b260f34c] jit-backend-dump}
[3e4c086b2612364] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef33 +0  20060000
[3e4c086b261306d] jit-backend-dump}
[3e4c086b261603b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef47 +0  28060000
[3e4c086b2616d5a] jit-backend-dump}
[3e4c086b2619d0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef5b +0  30060000
[3e4c086b261aa19] jit-backend-dump}
[3e4c086b261d9db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef6b +0  3C060000
[3e4c086b261e6e1] jit-backend-dump}
[3e4c086b26216c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef81 +0  42060000
[3e4c086b26223d1] jit-backend-dump}
[3e4c086b2625372] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef96 +0  49060000
[3e4c086b26260bb] jit-backend-dump}
[3e4c086b26290dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565efa3 +0  58060000
[3e4c086b2629de2] jit-backend-dump}
[3e4c086b262ce00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565efbe +0  59060000
[3e4c086b262db0c] jit-backend-dump}
[3e4c086b2630b2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565efc8 +0  6B060000
[3e4c086b2631852] jit-backend-dump}
[3e4c086b263487c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565efd2 +0  7D060000
[3e4c086b2635588] jit-backend-dump}
[3e4c086b26385a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565efe9 +0  82060000
[3e4c086b26392a9] jit-backend-dump}
[3e4c086b263c29f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565effc +0  8B060000
[3e4c086b263d03b] jit-backend-dump}
[3e4c086b2640016] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f006 +0  9D060000
[3e4c086b2640d2b] jit-backend-dump}
[3e4c086b2643dcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f025 +0  9A060000
[3e4c086b2644aeb] jit-backend-dump}
[3e4c086b2647b34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f037 +0  A4060000
[3e4c086b264883d] jit-backend-dump}
[3e4c086b264b8ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f04d +0  AA060000
[3e4c086b264c5bd] jit-backend-dump}
[3e4c086b264f61e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f069 +0  AA060000
[3e4c086b265035e] jit-backend-dump}
[3e4c086b26533f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f07c +0  B3060000
[3e4c086b2654106] jit-backend-dump}
[3e4c086b2657158] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f095 +0  B6060000
[3e4c086b2657e80] jit-backend-dump}
[3e4c086b265aee1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f0aa +0  BD060000
[3e4c086b265bc0c] jit-backend-dump}
[3e4c086b265ec0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f0bc +0  C7060000
[3e4c086b265f917] jit-backend-dump}
[3e4c086b26629c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f0d1 +0  CE060000
[3e4c086b26636dd] jit-backend-dump}
[3e4c086b2666751] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f0da +0  E1060000
[3e4c086b2667469] jit-backend-dump}
[3e4c086b266a450] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f0e4 +0  F3060000
[3e4c086b266b16c] jit-backend-dump}
[3e4c086b266e165] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f0f1 +0  02070000
[3e4c086b266ee7a] jit-backend-dump}
[3e4c086b2671e6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f103 +0  0C070000
[3e4c086b2672b95] jit-backend-dump}
[3e4c086b2675bbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f10c +0  1F070000
[3e4c086b26768d8] jit-backend-dump}
[3e4c086b267991a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f23f +0  08060000
[3e4c086b267a654] jit-backend-dump}
[3e4c086b267d641] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f249 +0  1A060000
[3e4c086b267e34a] jit-backend-dump}
[3e4c086b2681665] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c8d3 +0  A9240000
[3e4c086b268236e] jit-backend-dump}
[3e4c086b26863db] jit-backend}
[3e4c086b268a186] {jit-log-opt-bridge
# bridge out of Guard 0x3b0d220 with 206 ops
[i0, p1, p2, p3]
+534: guard_not_invalidated(descr=<Guard0x3b128c0>) [i0, p1, p2, p3]
+534: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+552: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3b1c698>) [i0, p1, p2, p3]
+561: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+565: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3b12920>) [i0, p1, p2, p3]
+584: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+588: i9 = int_gt(i0, i8)
+591: guard_false(i9, descr=<Guard0x3b1c6e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
+597: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+609: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3b12980>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+628: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+632: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x3b129e0>) [i0, p1, p2, p3]
+651: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+655: i16 = int_ge(i14, 0)
+659: guard_true(i16, descr=<Guard0x3b1c728>) [i0, p1, p2, p3]
+665: i18 = int_lt(i14, 13)
+669: guard_true(i18, descr=<Guard0x3b1c770>) [i0, p1, p2, p3]
+682: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+686: guard_class(p20, 16622984, descr=<Guard0x3b1c7b8>) [i0, p1, p2, p3]
+699: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+703: p24 = getarrayitem_gc_r(p23, i14, descr=<ArrayP 8>)
+708: guard_class(p24, ConstClass(W_Vector), descr=<Guard0x3b1c800>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+721: i27 = int_ge(i0, 0)
+725: guard_true(i27, descr=<Guard0x3b1c848>) [i0, p1, p2, p3]
+731: i28 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+735: i29 = int_lt(i0, i28)
+738: guard_true(i29, descr=<Guard0x3b1c890>) [i0, p1, p2, p3]
+744: p30 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+748: guard_class(p30, 16622984, descr=<Guard0x3b1c8d8>) [i0, p1, p2, p3]
+761: p32 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+765: p33 = getarrayitem_gc_r(p32, i0, descr=<ArrayP 8>)
+770: guard_class(p33, ConstClass(W_Bool), descr=<Guard0x3b1c920>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+790: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+793: guard_false(i36, descr=<Guard0x3b1c968>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
+799: p37 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j k)')
+799: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+803: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3b12a40>) [i0, p1, p2, p3]
+822: i40 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+826: i41 = int_add_ovf(i40, i0)
+829: guard_no_overflow(descr=<Guard0x3b1c9b0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+835: i43 = int_ge(i41, 0)
+839: guard_true(i43, descr=<Guard0x3b1c9f8>) [i0, p1, p2, p3]
+845: i45 = int_lt(i41, 512)
+852: guard_true(i45, descr=<Guard0x3b1ca40>) [i0, p1, p2, p3]
+865: p47 = getfield_gc_r(ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+869: guard_class(p47, 16622984, descr=<Guard0x3b1ca88>) [i0, p1, p2, p3]
+881: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+885: p51 = getarrayitem_gc_r(p50, i41, descr=<ArrayP 8>)
+890: guard_class(p51, ConstClass(W_Bool), descr=<Guard0x3b1cad0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+903: i54 = instance_ptr_eq(p51, ConstPtr(ptr53))
+906: guard_false(i54, descr=<Guard0x3b1cb18>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(begin (void) (let ([if2 (> k end)]) (if if2 #t #f)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([if2 (> k end)]) (if if2 #t #f))')
debug_merge_point(0, 0, '(> k end)')
debug_merge_point(0, 0, '(if if2 #t #f)')
debug_merge_point(0, 0, '#f')
+912: p55 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+924: guard_value(p55, ConstPtr(ptr56), descr=<Guard0x3b1cb60>) [i0, p1, p2, p3]
+933: p57 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+933: p58 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)) from (> k end)')
debug_merge_point(0, 0, '(void)')
+938: guard_class(p58, 16435208, descr=<Guard0x3b1cba8>) [i0, p1, p2, p3]
+951: p60 = getfield_gc_r(p58, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+962: guard_value(p60, ConstPtr(ptr61), descr=<Guard0x3b1cbf0>) [i0, p1, p2, p3]
+971: p62 = getfield_gc_r(p58, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+975: p63 = getfield_gc_r(p58, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))')
+979: guard_class(p62, 16504944, descr=<Guard0x3b1cc38>) [i0, p1, p2, p3]
+991: p65 = getfield_gc_r(p62, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+995: guard_class(p63, 16435920, descr=<Guard0x3b1cc80>) [i0, p1, p2, p3]
+1007: p67 = getfield_gc_r(p63, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1011: guard_nonnull_class(p67, ConstClass(ForwardLink), descr=<Guard0x3b12aa0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5026 1)')
+1029: i69 = getfield_gc_i(p62, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1040: i71 = int_add_ovf(i69, 1)
+1044: guard_no_overflow(descr=<Guard0x3b1ccc8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
+1050: guard_class(p65, 16478448, descr=<Guard0x3b1cd10>) [i0, p1, p2, p3]
+1063: p73 = getfield_gc_r(p65, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1081: guard_value(p73, ConstPtr(ptr74), descr=<Guard0x3b1cd58>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
debug_merge_point(0, 0, '(> i5026 typemax)')
+1090: i76 = int_gt(i71, 12)
+1094: guard_false(i76, descr=<Guard0x3b1cda0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)))')
debug_merge_point(0, 0, '(vector-ref *class* i5026)')
+1100: i78 = int_ge(i71, 0)
+1104: guard_true(i78, descr=<Guard0x3b1cde8>) [i0, p1, p2, p3]
+1117: p80 = getfield_gc_r(ConstPtr(ptr79), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1121: guard_class(p80, 16623792, descr=<Guard0x3b1ce30>) [i0, p1, p2, p3]
+1133: p83 = getfield_gc_r(ConstPtr(ptr82), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1137: i84 = getarrayitem_gc_i(p83, i71, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+1142: i86 = int_ge(i84, 0)
+1146: guard_true(i86, descr=<Guard0x3b1ce78>) [i0, p1, p2, p3]
+1152: i88 = int_lt(i84, 4)
+1156: guard_true(i88, descr=<Guard0x3b1cec0>) [i0, p1, p2, p3]
+1169: p90 = getfield_gc_r(ConstPtr(ptr89), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1180: guard_class(p90, 16623792, descr=<Guard0x3b1cf08>) [i0, p1, p2, p3]
+1193: p93 = getfield_gc_r(ConstPtr(ptr92), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1197: i94 = getarrayitem_gc_i(p93, i84, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+1202: i95 = int_is_zero(i94)
+1205: guard_false(i95, descr=<Guard0x3b1cf50>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)))')
debug_merge_point(0, 0, '(fit i5026 j5019)')
+1211: p96 = getfield_gc_r(p65, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1215: guard_nonnull_class(p96, ConstClass(W_Fixnum), descr=<Guard0x3b12b00>) [i0, p1, p2, p3]
+1233: p98 = getfield_gc_r(p65, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1233: i99 = getfield_gc_i(p96, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([end (vector-ref *piecemax* i)]) (let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0)))')
debug_merge_point(0, 0, '(vector-ref *piecemax* i)')
+1244: p101 = getfield_gc_r(ConstPtr(ptr100), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1248: guard_class(p101, 16623792, descr=<Guard0x3b1cf98>) [i0, p1, p2, p3]
+1261: p104 = getfield_gc_r(ConstPtr(ptr103), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1265: i105 = getarrayitem_gc_i(p104, i71, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0))')
debug_merge_point(0, 0, '(lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))')
debug_merge_point(0, 0, '(doloop4942 0)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 0)')
debug_merge_point(0, 0, '(> k end)')
+1270: i107 = int_gt(0, i105)
+1274: guard_false(i107, descr=<Guard0x3b1cfe0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+1280: p108 = getarrayitem_gc_r(p23, i71, descr=<ArrayP 8>)
+1292: guard_class(p108, ConstClass(W_Vector), descr=<Guard0x3b1d028>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+1305: i110 = getfield_gc_i(p108, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1316: i111 = int_lt(0, i110)
+1320: guard_true(i111, descr=<Guard0x3b1d070>) [i0, p1, p2, p3]
+1326: p112 = getfield_gc_r(p108, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1330: guard_class(p112, 16622984, descr=<Guard0x3b1d0b8>) [i0, p1, p2, p3]
+1344: p114 = getfield_gc_r(p108, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1348: p115 = getarrayitem_gc_r(p114, 0, descr=<ArrayP 8>)
+1352: guard_class(p115, ConstClass(W_Bool), descr=<Guard0x3b1d100>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+1365: i118 = instance_ptr_eq(p115, ConstPtr(ptr117))
+1368: guard_false(i118, descr=<Guard0x3b1d148>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
debug_merge_point(0, 0, '(+ j k)')
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+1374: i120 = int_ge(i99, 0)
+1378: guard_true(i120, descr=<Guard0x3b1d190>) [i0, p1, p2, p3]
+1384: i122 = int_lt(i99, 512)
+1391: guard_true(i122, descr=<Guard0x3b1d1d8>) [i0, p1, p2, p3]
+1397: p123 = getarrayitem_gc_r(p50, i99, descr=<ArrayP 8>)
+1402: guard_class(p123, ConstClass(W_Bool), descr=<Guard0x3b1d220>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+1415: i126 = instance_ptr_eq(p123, ConstPtr(ptr125))
+1418: guard_true(i126, descr=<Guard0x3b1d268>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+1424: p127 = new_with_vtable(descr=<SizeDescr 48>)
+1471: p128 = new_with_vtable(descr=<SizeDescr 16>)
+1482: setfield_gc(p128, i105, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1486: p129 = new_with_vtable(descr=<SizeDescr 16>)
+1497: setfield_gc(p129, i99, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1501: p130 = new_with_vtable(descr=<SizeDescr 16>)
+1513: setfield_gc(p130, i71, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1518: p131 = new_with_vtable(descr=<SizeDescr 40>)
+1530: p132 = new_with_vtable(descr=<SizeDescr 24>)
+1541: setfield_gc(p132, p65, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1545: setfield_gc(p132, i71, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1549: p133 = new_with_vtable(descr=<SizeDescr 40>)
+1560: setfield_gc(p133, p67, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1571: setfield_gc(p133, p132, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1575: setfield_gc(p133, p63, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1579: setfield_gc(p133, ConstPtr(ptr134), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1655: i135 = getfield_gc_i(p128, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1659: i136 = getfield_gc_i(p130, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1664: setfield_gc(p127, ConstPtr(ptr137), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1675: setfield_gc(p127, p128, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1679: setfield_gc(p131, p67, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1683: setfield_gc(p127, p130, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1694: setfield_gc(p127, ConstPtr(ptr138), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1698: setfield_gc(p127, p129, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1702: setfield_gc(p131, ConstPtr(ptr139), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1713: setfield_gc(p131, p132, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1717: setfield_gc(p131, p133, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1721: i141 = int_ge(i136, 0)
+1725: guard_true(i141, descr=<Guard0x3b12b60>) [p131, p127, None, None, None, None]
+1731: i144 = int_le(i136, 12)
+1735: guard_true(i144, descr=<Guard0x3b12bc0>) [p131, p127, None, None, None, None]
+1741: i145 = arraylen_gc(p23, descr=<ArrayP 8>)
+1741: jump(p127, 1, p131, p67, p128, i135, p130, p23, i136, descr=TargetToken(61624336))
+1808: --end of the loop--
[3e4c086b27379d6] jit-log-opt-bridge}
[3e4c086b299bf70] {jit-backend
[3e4c086b2a0776e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fa40 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F870302000048FF04257050C40266662E0F1F84000000000048FF0425C050C402488B8D380100008139480E00000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813AB01E01000F8500000000488B5A10488B7208813E30B700000F8500000000488B7E104C8B0545FEFFFF4C39C70F85000000004C8B46204983F8017207418138601400000F8500000000498B78084839FB0F8F000000004C8B4E184983F9017207418139601400000F85000000004D8B51084983FA000F8C000000004983FA0D0F8D000000004C8B251AFEFFFF4D8B6C241841817D00C8EB02000F85000000004D8B6C24104F8B64D51041813C24F08C00000F85000000004883FB000F8C000000004D8B7424084C39F30F8D000000004D8B74241841813EC8EB02000F85000000004D8B7424104D8B64DE1041813C2488AD02000F85000000004C8B35DEFDFFFF4D39F40F8500000000488D53014889B530010000488985400100004C8985480100004C898D50010000666666662E0F1F84000000000048FF0425C055C4024839FA0F8F000000004F8B4CD510418139F08C00000F85000000004D8B41084C39C20F8D000000004D8B4118418138C8EB02000F85000000004D8B41104D8B4CD01041813988AD02000F85000000004C8B054AFDFFFF4D39C10F85000000004C8D42014C89C2E98DFFFFFF666666662E0F1F84000000000049BB50B76535D87F000041FFD3E9EBFDFFFFFF3578FCFFFF49BBA8F86535D87F000041534D8D9B58A7FFFF41FFE3FF3564FCFFFF49BBB8F86535D87F000041534D8D9B48A7FFFF41FFE3FF3550FCFFFF49BBC8F86535D87F000041534D8D9B38A7FFFF41FFE3FF353CFCFFFF49BBD8F86535D87F000041534D8D9B28A7FFFF41FFE3FF3528FCFFFF49BBE8F86535D87F000041534D8D9B18A7FFFF41FFE3FF351CFCFFFF49BBF8F86535D87F000041534D8D9B08A7FFFF41FFE3FF3508FCFFFF49BB08F96535D87F000041534D8D9BF8A6FFFF41FFE3FF35F4FBFFFF49BB18F96535D87F000041534D8D9BE8A6FFFF41FFE3FF35E0FBFFFF49BB28F96535D87F000041534D8D9BD8A6FFFF41FFE3FF35CCFBFFFF49BB38F96535D87F000041534D8D9BC8A6FFFF41FFE3FF35B8FBFFFF49BB48F96535D87F000041534D8D9BB8A6FFFF41FFE3FF35ACFBFFFF49BB58F96535D87F000041534D8D9BA8A6FFFF41FFE3FF3598FBFFFF49BB68F96535D87F000041534D8D9B98A6FFFF41FFE3FF3584FBFFFF49BB78F96535D87F000041534D8D9B88A6FFFF41FFE3FF3570FBFFFF49BB88F96535D87F000041534D8D9B78A6FFFF41FFE3FF355CFBFFFF49BB98F96535D87F000041534D8D9B68A6FFFF41FFE3FF3548FBFFFF49BBA8F96535D87F000041534D8D9B58A6FFFF41FFE3FF353CFBFFFF49BBB8F96535D87F000041534D8D9B48A6FFFF41FFE3FF3528FBFFFF49BBC8F96535D87F000041534D8D9B38A6FFFF41FFE3FF3514FBFFFF49BBD8F96535D87F000041534D8D9B28A6FFFF41FFE3FF3500FBFFFF49BBE8F96535D87F000041534D8D9B18A6FFFF41FFE3FF35ECFAFFFF49BBF8F96535D87F000041534D8D9B08A6FFFF41FFE3FF35D8FAFFFF49BB08FA6535D87F000041534D8D9BF8A5FFFF41FFE3FF35C4FAFFFF49BB18FA6535D87F000041534D8D9BE8A5FFFF41FFE3FF35B0FAFFFF49BB28FA6535D87F000041534D8D9BD8A5FFFF41FFE3
[3e4c086b2a113b1] jit-backend-dump}
[3e4c086b2a1bfd6] {jit-backend-addr
Loop 9 ((let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 AppRand21)) has address 0x7fd83565fbad to 0x7fd83565fdb0 (bootstrap 0x7fd83565fb20)
       gc table: 0x7fd83565fa40
       function: 0x7fd83565fb20
         resops: 0x7fd83565fbad
       failures: 0x7fd83565fdb0
            end: 0x7fd83566007e
[3e4c086b2a1f00f] jit-backend-addr}
[3e4c086b2a2357b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fbd7 +0  E7010000
[3e4c086b2a24890] jit-backend-dump}
[3e4c086b2a27ecc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fbed +0  ED010000
[3e4c086b2a28d94] jit-backend-dump}
[3e4c086b2a2c2aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fc00 +0  12020000
[3e4c086b2a2d0a2] jit-backend-dump}
[3e4c086b2a30388] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fc14 +0  1A020000
[3e4c086b2a31076] jit-backend-dump}
[3e4c086b2a3415b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fc28 +0  22020000
[3e4c086b2a34e45] jit-backend-dump}
[3e4c086b2a37ec5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fc3f +0  27020000
[3e4c086b2a38bd1] jit-backend-dump}
[3e4c086b2a3be37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fc4c +0  36020000
[3e4c086b2a3cb47] jit-backend-dump}
[3e4c086b2a3fcfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fc63 +0  3B020000
[3e4c086b2a40a32] jit-backend-dump}
[3e4c086b2a43c6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fc71 +0  49020000
[3e4c086b2a449f4] jit-backend-dump}
[3e4c086b2a47a37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fc7b +0  5B020000
[3e4c086b2a48790] jit-backend-dump}
[3e4c086b2a4b7f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fc95 +0  5D020000
[3e4c086b2a4c53d] jit-backend-dump}
[3e4c086b2a4f567] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fcad +0  61020000
[3e4c086b2a50280] jit-backend-dump}
[3e4c086b2a532a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fcb7 +0  73020000
[3e4c086b2a53fb3] jit-backend-dump}
[3e4c086b2a5700e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fcc5 +0  81020000
[3e4c086b2a57d27] jit-backend-dump}
[3e4c086b2a5ad48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fcd7 +0  8B020000
[3e4c086b2a5ba57] jit-backend-dump}
[3e4c086b2a62cde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fcef +0  8F020000
[3e4c086b2a63baf] jit-backend-dump}
[3e4c086b2a670f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fcff +0  9B020000
[3e4c086b2a67e67] jit-backend-dump}
[3e4c086b2a6b17c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fd3d +0  95020000
[3e4c086b2a6bf05] jit-backend-dump}
[3e4c086b2a6eff6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fd4f +0  9F020000
[3e4c086b2a6fd15] jit-backend-dump}
[3e4c086b2a72de7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fd5c +0  AE020000
[3e4c086b2a73b49] jit-backend-dump}
[3e4c086b2a76bfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fd6d +0  B9020000
[3e4c086b2a77912] jit-backend-dump}
[3e4c086b2a7a986] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fd83 +0  BF020000
[3e4c086b2a7b692] jit-backend-dump}
[3e4c086b2a7e8b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fd93 +0  CB020000
[3e4c086b2a7f5d6] jit-backend-dump}
[3e4c086b2a8325b] jit-backend}
[3e4c086b2a86df8] {jit-log-opt-loop
# Loop 9 ((let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 AppRand21)) : loop with 86 ops
[p0, p1]
+373: label(p0, p1, descr=TargetToken(61624736))
debug_merge_point(0, 0, '(let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 AppRand21)')
+392: guard_class(p1, 16435208, descr=<Guard0x3b12c20>) [p0, p1]
+411: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+415: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b12c80>) [p0, p1]
debug_merge_point(0, 0, '(> k5006 end5001)')
+433: guard_not_invalidated(descr=<Guard0x3b1d2b0>) [p0, p1]
+433: guard_class(p0, 16504944, descr=<Guard0x3b1d2f8>) [p0, p1]
+452: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+456: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+460: guard_class(p7, 16478448, descr=<Guard0x3b1d340>) [p0, p1]
+472: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+483: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b1d388>) [p0, p1]
+492: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+496: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3b12ce0>) [p0, p1]
+515: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+519: i14 = int_gt(i6, i13)
+522: guard_false(i14, descr=<Guard0x3b1d3d0>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))')
debug_merge_point(0, 0, '(let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21)))')
debug_merge_point(0, 0, '(vector-ref *p* i4997)')
+528: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+532: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3b12d40>) [p0, p1]
+551: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+555: i19 = int_ge(i17, 0)
+559: guard_true(i19, descr=<Guard0x3b1d418>) [p0, p1]
+565: i21 = int_lt(i17, 13)
+569: guard_true(i21, descr=<Guard0x3b1d460>) [p0, p1]
+582: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+587: guard_class(p23, 16622984, descr=<Guard0x3b1d4a8>) [p0, p1]
+601: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+606: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+611: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3b1d4f0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand19 k5006)')
+625: i30 = int_ge(i6, 0)
+629: guard_true(i30, descr=<Guard0x3b1d538>) [p0, p1]
+635: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+640: i32 = int_lt(i6, i31)
+643: guard_true(i32, descr=<Guard0x3b1d580>) [p0, p1]
+649: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+654: guard_class(p33, 16622984, descr=<Guard0x3b1d5c8>) [p0, p1]
+667: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+672: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+677: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3b1d610>) [p0, p1]
debug_merge_point(0, 0, '(if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))')
+698: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+701: guard_true(i39, descr=<Guard0x3b1d658>) [p0, p1]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))')
debug_merge_point(0, 0, '(+ k5006 1)')
+707: i41 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop5004 AppRand21)')
debug_merge_point(0, 0, '(let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 AppRand21)')
+711: label(p7, i41, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624816))
debug_merge_point(0, 0, '(let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 AppRand21)')
debug_merge_point(0, 0, '(> k5006 end5001)')
+760: guard_not_invalidated(descr=<Guard0x3b12da0>) [i41, p7, p1, p3]
+760: i42 = int_gt(i41, i13)
+763: guard_false(i42, descr=<Guard0x3b1d6a0>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))')
debug_merge_point(0, 0, '(let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21)))')
debug_merge_point(0, 0, '(vector-ref *p* i4997)')
+769: p43 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+774: guard_class(p43, ConstClass(W_Vector), descr=<Guard0x3b1d6e8>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand19 k5006)')
+787: i45 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+791: i46 = int_lt(i41, i45)
+794: guard_true(i46, descr=<Guard0x3b1d730>) [i41, p7, p1, p3]
+800: p47 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+804: guard_class(p47, 16622984, descr=<Guard0x3b1d778>) [i41, p7, p1, p3]
+817: p49 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+821: p50 = getarrayitem_gc_r(p49, i41, descr=<ArrayP 8>)
+826: guard_class(p50, ConstClass(W_Bool), descr=<Guard0x3b1d7c0>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))')
+846: i53 = instance_ptr_eq(p50, ConstPtr(ptr52))
+849: guard_true(i53, descr=<Guard0x3b1d808>) [i41, p7, p1, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))')
debug_merge_point(0, 0, '(+ k5006 1)')
+855: i55 = int_add(i41, 1)
debug_merge_point(0, 0, '(doloop5004 AppRand21)')
debug_merge_point(0, 0, '(let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 AppRand21)')
+859: i56 = arraylen_gc(p26, descr=<ArrayP 8>)
+859: jump(p7, i55, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624816))
+880: --end of the loop--
[3e4c086b2aced57] jit-log-opt-loop}
[3e4c086b2e763f9] {jit-backend
[3e4c086b2ed53cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660200 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB201000048FF04251054C4024D8B77104C8B2D17FFFFFF4D39EE0F85000000004D8B6F184983FD01720841817D00601400000F85000000004D8B75084C39F20F8F000000004D8B5424084983FA01720741813A900F00000F85000000004D8B4F284983F9017207418139601400000F85000000004D8B41084983F8000F8C000000004983F80D0F8D00000000488B3DDBFEFFFF488B7718813EC8EB02000F8500000000488B77104A8B7CC610813FF08C00000F85000000004883FA000F8C00000000488B5F084839DA0F8D00000000488B5F18813BC8EB02000F8500000000488B5F10488B7CD310813F88AD02000F8500000000488B1DABFEFFFF4839DF0F8400000000498B7F204883FF017206813F601400000F8500000000488B47084801D00F80000000004883F8000F8C000000004881F8000200000F8D00000000488B3D91FEFFFF488B4F188139C8EB02000F8500000000488B4F10488B7CC110813F88AD02000F85000000004839DF0F8500000000488D5A014C89BD300100004889DA4C89A5380100004C8995400100004C89AD480100004C89F74C898D500100004989F54D89C249BB70C86535D87F000041FFE30F1F0048C7442408FFFFFF0049BB88006635D87F00004C895D204D8D9B68A2FFFF41FFD3E928FEFFFFFF3544FDFFFF49BB98006635D87F000041534D8D9B689FFFFF41FFE3FF3538FDFFFF49BBA8006635D87F000041534D8D9B589FFFFF41FFE3FF3524FDFFFF49BBB8006635D87F000041534D8D9B489FFFFF41FFE3FF3510FDFFFF49BBC8006635D87F000041534D8D9B389FFFFF41FFE3FF35FCFCFFFF49BBD8006635D87F000041534D8D9B289FFFFF41FFE3FF35E8FCFFFF49BBE8006635D87F000041534D8D9B189FFFFF41FFE3FF35D4FCFFFF49BBF8006635D87F000041534D8D9B089FFFFF41FFE3FF35C0FCFFFF49BB08016635D87F000041534D8D9BF89EFFFF41FFE3FF35B4FCFFFF49BB18016635D87F000041534D8D9BE89EFFFF41FFE3FF35A0FCFFFF49BB28016635D87F000041534D8D9BD89EFFFF41FFE3FF358CFCFFFF49BB38016635D87F000041534D8D9BC89EFFFF41FFE3FF3578FCFFFF49BB48016635D87F000041534D8D9BB89EFFFF41FFE3FF3564FCFFFF49BB58016635D87F000041534D8D9BA89EFFFF41FFE3FF3550FCFFFF49BB68016635D87F000041534D8D9B989EFFFF41FFE3FF3544FCFFFF49BB78016635D87F000041534D8D9B889EFFFF41FFE3FF3530FCFFFF49BB88016635D87F000041534D8D9B789EFFFF41FFE3FF351CFCFFFF49BB98016635D87F000041534D8D9B689EFFFF41FFE3FF3508FCFFFF49BBA8016635D87F000041534D8D9B589EFFFF41FFE3FF35F4FBFFFF49BBB8016635D87F000041534D8D9B489EFFFF41FFE3FF35E8FBFFFF49BBC8016635D87F000041534D8D9B389EFFFF41FFE3FF35D4FBFFFF49BBD8016635D87F000041534D8D9B289EFFFF41FFE3FF35C0FBFFFF49BBE8016635D87F000041534D8D9B189EFFFF41FFE3
[3e4c086b2edd58d] jit-backend-dump}
[3e4c086b2ee85a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356602d4 +0  23000000
[3e4c086b2ee9b59] jit-backend-dump}
[3e4c086b2eede79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660495 +0  23000000
[3e4c086b2eeeede] jit-backend-dump}
[3e4c086b2ef247b] {jit-backend-addr
bridge out of Guard 0x3b1cb18 has address 0x7fd8356602d0 to 0x7fd835660490
       gc table: 0x7fd835660200
    jump target: 0x7fd8356602d0
         resops: 0x7fd8356602de
       failures: 0x7fd835660490
            end: 0x7fd83566071e
[3e4c086b2ef498e] jit-backend-addr}
[3e4c086b2ef8360] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356602f6 +0  D8010000
[3e4c086b2ef932c] jit-backend-dump}
[3e4c086b2efc7c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566030e +0  DC010000
[3e4c086b2efd5fa] jit-backend-dump}
[3e4c086b2f0077a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566031b +0  EB010000
[3e4c086b2f014ae] jit-backend-dump}
[3e4c086b2f0458d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660333 +0  EF010000
[3e4c086b2f05296] jit-backend-dump}
[3e4c086b2f0840e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566034a +0  F4010000
[3e4c086b2f09145] jit-backend-dump}
[3e4c086b2f0c1da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660358 +0  02020000
[3e4c086b2f0ceff] jit-backend-dump}
[3e4c086b2f0ff9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660362 +0  14020000
[3e4c086b2f10ccb] jit-backend-dump}
[3e4c086b2f13d20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660379 +0  19020000
[3e4c086b2f14a60] jit-backend-dump}
[3e4c086b2f17aa3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566038e +0  20020000
[3e4c086b2f187ca] jit-backend-dump}
[3e4c086b2f1b7ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660398 +0  32020000
[3e4c086b2f1c4e2] jit-backend-dump}
[3e4c086b2f1f4c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356603a5 +0  41020000
[3e4c086b2f201eb] jit-backend-dump}
[3e4c086b2f23221] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356603b5 +0  4D020000
[3e4c086b2f23f49] jit-backend-dump}
[3e4c086b2f26f70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356603ca +0  54020000
[3e4c086b2f27c98] jit-backend-dump}
[3e4c086b2f2acc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356603da +0  60020000
[3e4c086b2f2b9e6] jit-backend-dump}
[3e4c086b2f2e9d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356603f0 +0  66020000
[3e4c086b2f2f6fe] jit-backend-dump}
[3e4c086b2f326f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356603fd +0  75020000
[3e4c086b2f3342e] jit-backend-dump}
[3e4c086b2f363e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660407 +0  87020000
[3e4c086b2f37128] jit-backend-dump}
[3e4c086b2f3a1de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660414 +0  96020000
[3e4c086b2f3af0c] jit-backend-dump}
[3e4c086b2f3df12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566042b +0  9B020000
[3e4c086b2f3ec43] jit-backend-dump}
[3e4c086b2f41c67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660440 +0  A2020000
[3e4c086b2f42988] jit-backend-dump}
[3e4c086b2f459ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660449 +0  B5020000
[3e4c086b2f466da] jit-backend-dump}
[3e4c086b2f49a16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565ef0c +0  C0130000
[3e4c086b2f4a769] jit-backend-dump}
[3e4c086b2f4e538] jit-backend}
[3e4c086b2f5623d] {jit-log-opt-bridge
# bridge out of Guard 0x3b1cb18 with 69 ops
[i0, p1, p2, p3]
+230: guard_not_invalidated(descr=<Guard0x3b130a0>) [i0, p1, p2, p3]
+230: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+241: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3b400f8>) [i0, p1, p2, p3]
+250: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+254: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3b13100>) [i0, p1, p2, p3]
+274: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+278: i9 = int_gt(i0, i8)
+281: guard_false(i9, descr=<Guard0x3b40140>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
+287: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+292: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3b13160>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+311: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+315: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x3b131c0>) [i0, p1, p2, p3]
+334: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+338: i16 = int_ge(i14, 0)
+342: guard_true(i16, descr=<Guard0x3b40188>) [i0, p1, p2, p3]
+348: i18 = int_lt(i14, 13)
+352: guard_true(i18, descr=<Guard0x3b401d0>) [i0, p1, p2, p3]
+365: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+369: guard_class(p20, 16622984, descr=<Guard0x3b40218>) [i0, p1, p2, p3]
+381: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+385: p24 = getarrayitem_gc_r(p23, i14, descr=<ArrayP 8>)
+390: guard_class(p24, ConstClass(W_Vector), descr=<Guard0x3b40260>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+402: i27 = int_ge(i0, 0)
+406: guard_true(i27, descr=<Guard0x3b402a8>) [i0, p1, p2, p3]
+412: i28 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+416: i29 = int_lt(i0, i28)
+419: guard_true(i29, descr=<Guard0x3b402f0>) [i0, p1, p2, p3]
+425: p30 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+429: guard_class(p30, 16622984, descr=<Guard0x3b40338>) [i0, p1, p2, p3]
+441: p32 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+445: p33 = getarrayitem_gc_r(p32, i0, descr=<ArrayP 8>)
+450: guard_class(p33, ConstClass(W_Bool), descr=<Guard0x3b40380>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+469: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+472: guard_false(i36, descr=<Guard0x3b403c8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
+478: p37 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j k)')
+478: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+482: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3b13220>) [i0, p1, p2, p3]
+500: i40 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+504: i41 = int_add_ovf(i40, i0)
+507: guard_no_overflow(descr=<Guard0x3b40410>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+513: i43 = int_ge(i41, 0)
+517: guard_true(i43, descr=<Guard0x3b40458>) [i0, p1, p2, p3]
+523: i45 = int_lt(i41, 512)
+530: guard_true(i45, descr=<Guard0x3b404a0>) [i0, p1, p2, p3]
+543: p47 = getfield_gc_r(ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+547: guard_class(p47, 16622984, descr=<Guard0x3b404e8>) [i0, p1, p2, p3]
+559: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+563: p51 = getarrayitem_gc_r(p50, i41, descr=<ArrayP 8>)
+568: guard_class(p51, ConstClass(W_Bool), descr=<Guard0x3b40530>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+580: i54 = instance_ptr_eq(p51, ConstPtr(ptr53))
+583: guard_true(i54, descr=<Guard0x3b40578>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
+589: i56 = int_add(i0, 1)
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+593: i57 = arraylen_gc(p23, descr=<ArrayP 8>)
+593: jump(p1, i56, p2, p10, p6, i8, p12, p23, i14, descr=TargetToken(61624336))
+656: --end of the loop--
[3e4c086b2f90fa0] jit-log-opt-bridge}
[3e4c086b32406cc] {jit-backend
[3e4c086b328f96d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086b3297662] jit-backend-dump}
[3e4c086b32a2436] {jit-backend-addr
Loop 11 ((let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)) has address 0x7fd83566099d to 0x7fd835660b00 (bootstrap 0x7fd835660910)
       gc table: 0x7fd835660860
       function: 0x7fd835660910
         resops: 0x7fd83566099d
       failures: 0x7fd835660b00
            end: 0x7fd835660d0a
[3e4c086b32a574a] jit-backend-addr}
[3e4c086b32a9d02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356609c7 +0  47010000
[3e4c086b32ab0d5] jit-backend-dump}
[3e4c086b32ae788] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356609dd +0  4D010000
[3e4c086b32af6ca] jit-backend-dump}
[3e4c086b32b2dc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356609f0 +0  72010000
[3e4c086b32b3bf0] jit-backend-dump}
[3e4c086b32b6e28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356609fe +0  80010000
[3e4c086b32b7b99] jit-backend-dump}
[3e4c086b32badf9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660a08 +0  92010000
[3e4c086b32bbb33] jit-backend-dump}
[3e4c086b32bec21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660a1f +0  97010000
[3e4c086b32bf95e] jit-backend-dump}
[3e4c086b32c296a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660a32 +0  A0010000
[3e4c086b32c366a] jit-backend-dump}
[3e4c086b32c6702] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660a3c +0  B2010000
[3e4c086b32c73f6] jit-backend-dump}
[3e4c086b32ca429] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660a54 +0  B6010000
[3e4c086b32cb123] jit-backend-dump}
[3e4c086b32ce19a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660a66 +0  C0010000
[3e4c086b32cee97] jit-backend-dump}
[3e4c086b32d1e9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660a7b +0  C7010000
[3e4c086b32d2b96] jit-backend-dump}
[3e4c086b32d5c00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660a8f +0  CF010000
[3e4c086b32d6900] jit-backend-dump}
[3e4c086b32d9a6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660abe +0  D8010000
[3e4c086b32da778] jit-backend-dump}
[3e4c086b32dd86f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660acd +0  E5010000
[3e4c086b32de587] jit-backend-dump}
[3e4c086b32e15df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660ad7 +0  F7010000
[3e4c086b32e22dc] jit-backend-dump}
[3e4c086b32e5319] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660ae5 +0  05020000
[3e4c086b32e6022] jit-backend-dump}
[3e4c086b32e9ca4] jit-backend}
[3e4c086b32ed828] {jit-log-opt-loop
# Loop 11 ((let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)) : loop with 72 ops
[p0, p1]
+325: label(p0, p1, descr=TargetToken(62079968))
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+344: guard_class(p1, 16435920, descr=<Guard0x3b13280>) [p0, p1]
+363: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+367: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b132e0>) [p0, p1]
debug_merge_point(0, 0, '(> i5026 typemax)')
+385: guard_not_invalidated(descr=<Guard0x3b405c0>) [p0, p1]
+385: guard_class(p0, 16504944, descr=<Guard0x3b40608>) [p0, p1]
+404: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+408: i8 = int_gt(i6, 12)
+412: guard_false(i8, descr=<Guard0x3b40650>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)))')
debug_merge_point(0, 0, '(vector-ref *class* i5026)')
+418: i10 = int_ge(i6, 0)
+422: guard_true(i10, descr=<Guard0x3b40698>) [p0, p1]
+435: p12 = getfield_gc_r(ConstPtr(ptr11), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+439: guard_class(p12, 16623792, descr=<Guard0x3b406e0>) [p0, p1]
+451: p15 = getfield_gc_r(ConstPtr(ptr14), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+455: i16 = getarrayitem_gc_i(p15, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+460: i18 = int_ge(i16, 0)
+464: guard_true(i18, descr=<Guard0x3b40728>) [p0, p1]
+470: i20 = int_lt(i16, 4)
+474: guard_true(i20, descr=<Guard0x3b40770>) [p0, p1]
+487: p22 = getfield_gc_r(ConstPtr(ptr21), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+491: guard_class(p22, 16623792, descr=<Guard0x3b407b8>) [p0, p1]
+504: p25 = getfield_gc_r(ConstPtr(ptr24), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+508: i26 = getarrayitem_gc_i(p25, i16, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+513: i27 = int_is_zero(i26)
+516: guard_true(i27, descr=<Guard0x3b40800>) [p0, p1]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)) from (void)')
+522: p28 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ i5026 1)')
+526: i30 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
+530: guard_class(p28, 16478448, descr=<Guard0x3b40848>) [p0, p1]
+543: p32 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+554: guard_value(p32, ConstPtr(ptr33), descr=<Guard0x3b40890>) [p0, p1]
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+563: label(p28, i30, p1, p3, p15, p25, descr=TargetToken(62080048))
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
debug_merge_point(0, 0, '(> i5026 typemax)')
+600: guard_not_invalidated(descr=<Guard0x3b13340>) [i30, p28, p1, p3]
+600: i35 = int_gt(i30, 12)
+604: guard_false(i35, descr=<Guard0x3b408d8>) [i30, p28, p1, p3]
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)))')
debug_merge_point(0, 0, '(vector-ref *class* i5026)')
+610: i36 = getarrayitem_gc_i(p15, i30, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+615: i38 = int_ge(i36, 0)
+619: guard_true(i38, descr=<Guard0x3b40920>) [i30, p28, p1, p3]
+625: i40 = int_lt(i36, 4)
+629: guard_true(i40, descr=<Guard0x3b40968>) [i30, p28, p1, p3]
+635: i41 = getarrayitem_gc_i(p25, i36, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+640: i42 = int_is_zero(i41)
+643: guard_true(i42, descr=<Guard0x3b409b0>) [i30, p28, p1, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)) from (void)')
debug_merge_point(0, 0, '(+ i5026 1)')
+649: i44 = int_add(i30, 1)
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+653: i45 = arraylen_gc(p15, descr=<ArrayS 8>)
+653: i46 = arraylen_gc(p25, descr=<ArrayS 8>)
+653: jump(p28, i44, p1, p3, p15, p25, descr=TargetToken(62080048))
+672: --end of the loop--
[3e4c086b3329e63] jit-log-opt-loop}
[3e4c086b3520feb] {jit-backend
[3e4c086b357fcad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660e
[3e4c086b3587bc3] jit-backend-dump}
[3e4c086b35925cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660f44 +0  21000000
[3e4c086b3593bfa] jit-backend-dump}
[3e4c086b3597784] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661115 +0  21000000
[3e4c086b35986b7] jit-backend-dump}
[3e4c086b359b810] {jit-backend-addr
bridge out of Guard 0x3b0d7c0 has address 0x7fd835660f40 to 0x7fd835661110
       gc table: 0x7fd835660e70
    jump target: 0x7fd835660f40
         resops: 0x7fd835660f4e
       failures: 0x7fd835661110
            end: 0x7fd83566138c
[3e4c086b359da9b] jit-backend-addr}
[3e4c086b35a0e18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660f6d +0  07020000
[3e4c086b35a1c34] jit-backend-dump}
[3e4c086b35a4ebf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660f85 +0  0B020000
[3e4c086b35a5bb9] jit-backend-dump}
[3e4c086b35a8c57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660f92 +0  1A020000
[3e4c086b35a9994] jit-backend-dump}
[3e4c086b35aca7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660fb1 +0  17020000
[3e4c086b35ad79e] jit-backend-dump}
[3e4c086b35b0817] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660fc8 +0  1C020000
[3e4c086b35b1530] jit-backend-dump}
[3e4c086b35b45d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660fd6 +0  2A020000
[3e4c086b35b531e] jit-backend-dump}
[3e4c086b35b8376] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660fe0 +0  3C020000
[3e4c086b35b908e] jit-backend-dump}
[3e4c086b35bc111] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660ff7 +0  41020000
[3e4c086b35bce30] jit-backend-dump}
[3e4c086b35bfe66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566100c +0  48020000
[3e4c086b35c0b7e] jit-backend-dump}
[3e4c086b35c3c26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661016 +0  5A020000
[3e4c086b35c4932] jit-backend-dump}
[3e4c086b35c79a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661023 +0  69020000
[3e4c086b35c86b5] jit-backend-dump}
[3e4c086b35cb763] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661033 +0  75020000
[3e4c086b35cc472] jit-backend-dump}
[3e4c086b35cf487] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661048 +0  7C020000
[3e4c086b35d0190] jit-backend-dump}
[3e4c086b35d3323] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661058 +0  88020000
[3e4c086b35d4051] jit-backend-dump}
[3e4c086b35d7072] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566106e +0  8E020000
[3e4c086b35d7d8a] jit-backend-dump}
[3e4c086b35dae07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566107b +0  9D020000
[3e4c086b35dbb6f] jit-backend-dump}
[3e4c086b35debfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661092 +0  A2020000
[3e4c086b35df92c] jit-backend-dump}
[3e4c086b35e29d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566109c +0  B4020000
[3e4c086b35e370a] jit-backend-dump}
[3e4c086b35e6719] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356610a9 +0  C3020000
[3e4c086b35e7425] jit-backend-dump}
[3e4c086b35ea6d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d0c3 +0  793E0000
[3e4c086b35eb3db] jit-backend-dump}
[3e4c086b35ef21e] jit-backend}
[3e4c086b35f2de0] {jit-log-opt-bridge
# bridge out of Guard 0x3b0d7c0 with 65 ops
[i0, p1, p2, p3]
+230: guard_not_invalidated(descr=<Guard0x3b133a0>) [i0, p1, p2, p3]
+230: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+248: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3b409f8>) [i0, p1, p2, p3]
+257: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+261: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3b13400>) [i0, p1, p2, p3]
+281: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+285: i9 = int_gt(i0, i8)
+288: guard_false(i9, descr=<Guard0x3b40a40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12)))')
+294: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+306: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3b13460>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *p* i4959)')
+325: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+329: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x3b134c0>) [i0, p1, p2, p3]
+348: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+352: i16 = int_ge(i14, 0)
+356: guard_true(i16, descr=<Guard0x3b40a88>) [i0, p1, p2, p3]
+362: i18 = int_lt(i14, 13)
+366: guard_true(i18, descr=<Guard0x3b40ad0>) [i0, p1, p2, p3]
+379: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+383: guard_class(p20, 16622984, descr=<Guard0x3b40b18>) [i0, p1, p2, p3]
+395: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+399: p24 = getarrayitem_gc_r(p23, i14, descr=<ArrayP 8>)
+404: guard_class(p24, ConstClass(W_Vector), descr=<Guard0x3b40b60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand10 k4968)')
+416: i27 = int_ge(i0, 0)
+420: guard_true(i27, descr=<Guard0x3b40ba8>) [i0, p1, p2, p3]
+426: i28 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+430: i29 = int_lt(i0, i28)
+433: guard_true(i29, descr=<Guard0x3b40bf0>) [i0, p1, p2, p3]
+439: p30 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+443: guard_class(p30, 16622984, descr=<Guard0x3b40c38>) [i0, p1, p2, p3]
+455: p32 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+459: p33 = getarrayitem_gc_r(p32, i0, descr=<ArrayP 8>)
+464: guard_class(p33, ConstClass(W_Bool), descr=<Guard0x3b40c80>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))')
+483: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+486: guard_false(i36, descr=<Guard0x3b40cc8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t)')
+492: p37 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j4961 k4968)')
+492: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+496: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3b13520>) [i0, p1, p2, p3]
+514: i40 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+518: i41 = int_add_ovf(i40, i0)
+521: guard_no_overflow(descr=<Guard0x3b40d10>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand11 #t)')
+534: p43 = getfield_gc_r(ConstPtr(ptr42), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+538: guard_class(p43, 16622984, descr=<Guard0x3b40d58>) [i0, p1, p2, p3]
+550: i46 = int_ge(i41, 0)
+554: guard_true(i46, descr=<Guard0x3b40da0>) [i0, p1, p2, p3]
+560: i48 = int_lt(i41, 512)
+567: guard_true(i48, descr=<Guard0x3b40de8>) [i0, p1, p2, p3]
+573: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+594: setarrayitem_gc(p50, i41, ConstPtr(ptr51), descr=<ArrayP 8>)
debug_merge_point(0, 0, '#t')
debug_merge_point(0, 0, '(let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))')
debug_merge_point(0, 0, '(+ k4968 1)')
+599: i53 = int_add(i0, 1)
debug_merge_point(0, 0, '(doloop4966 AppRand12)')
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)')
+603: i54 = arraylen_gc(p23, descr=<ArrayP 8>)
+603: jump(p1, i53, p2, p10, p6, i8, p12, p23, i14, descr=TargetToken(61624496))
+672: --end of the loop--
[3e4c086b36319bb] jit-log-opt-bridge}
[3e4c086b3923898] {jit-backend
[3e4c086b3986f16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086b398fcfa] jit-backend-dump}
[3e4c086b399ad37] {jit-backend-addr
Loop 13 ((let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 0)) has address 0x7fd8356616bd to 0x7fd8356618b0 (bootstrap 0x7fd835661630)
       gc table: 0x7fd835661540
       function: 0x7fd835661630
         resops: 0x7fd8356616bd
       failures: 0x7fd8356618b0
            end: 0x7fd835661b7e
[3e4c086b399dcb6] jit-backend-addr}
[3e4c086b39a1f2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356616d4 +0  EA010000
[3e4c086b39a32a5] jit-backend-dump}
[3e4c086b39a6836] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356616ea +0  F0010000
[3e4c086b39a7674] jit-backend-dump}
[3e4c086b39aa9e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356616fd +0  15020000
[3e4c086b39ab712] jit-backend-dump}
[3e4c086b39ae7fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661711 +0  1D020000
[3e4c086b39af540] jit-backend-dump}
[3e4c086b39b2634] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661725 +0  25020000
[3e4c086b39b334a] jit-backend-dump}
[3e4c086b39b6582] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566173c +0  2A020000
[3e4c086b39b72b3] jit-backend-dump}
[3e4c086b39ba3b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661749 +0  39020000
[3e4c086b39bb121] jit-backend-dump}
[3e4c086b39be243] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661760 +0  3E020000
[3e4c086b39bef3d] jit-backend-dump}
[3e4c086b39c202e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566176e +0  4C020000
[3e4c086b39c2d53] jit-backend-dump}
[3e4c086b39c5ef2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661778 +0  5E020000
[3e4c086b39c6c04] jit-backend-dump}
[3e4c086b39c9d48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661792 +0  60020000
[3e4c086b39caa8e] jit-backend-dump}
[3e4c086b39cdc15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356617aa +0  64020000
[3e4c086b39ce91b] jit-backend-dump}
[3e4c086b39d1a2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356617b4 +0  76020000
[3e4c086b39d276b] jit-backend-dump}
[3e4c086b39d5960] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356617c2 +0  84020000
[3e4c086b39d66ac] jit-backend-dump}
[3e4c086b39d98ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356617d4 +0  8E020000
[3e4c086b39da63a] jit-backend-dump}
[3e4c086b39dd719] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356617ec +0  92020000
[3e4c086b39de46e] jit-backend-dump}
[3e4c086b39e1510] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356617fc +0  9E020000
[3e4c086b39e227e] jit-backend-dump}
[3e4c086b39e5347] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661814 +0  A2020000
[3e4c086b39e6094] jit-backend-dump}
[3e4c086b39e90f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661822 +0  B0020000
[3e4c086b39e9e2f] jit-backend-dump}
[3e4c086b39ecf1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566182c +0  C2020000
[3e4c086b39edc38] jit-backend-dump}
[3e4c086b39f0cc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661839 +0  D1020000
[3e4c086b39f19da] jit-backend-dump}
[3e4c086b39f4a4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661851 +0  D5020000
[3e4c086b39f577e] jit-backend-dump}
[3e4c086b39f87a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661869 +0  D9020000
[3e4c086b39f94cd] jit-backend-dump}
[3e4c086b39fc58d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661872 +0  EC020000
[3e4c086b39fd296] jit-backend-dump}
[3e4c086b3a00d9a] jit-backend}
[3e4c086b3a0492d] {jit-log-opt-loop
# Loop 13 ((let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 0)) : entry bridge with 76 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 0)')
+389: guard_class(p1, 16435920, descr=<Guard0x3b13580>) [p0, p1]
+408: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+412: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b135e0>) [p0, p1]
debug_merge_point(0, 0, '(> k end)')
+430: guard_not_invalidated(descr=<Guard0x3b40e30>) [p0, p1]
+430: guard_class(p0, 16504944, descr=<Guard0x3b40e78>) [p0, p1]
+449: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+453: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+457: guard_class(p7, 16478448, descr=<Guard0x3b40ec0>) [p0, p1]
+469: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+480: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b40f08>) [p0, p1]
+489: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+493: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3b13640>) [p0, p1]
+512: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+516: i14 = int_gt(i6, i13)
+519: guard_false(i14, descr=<Guard0x3b40f50>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+525: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+529: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3b136a0>) [p0, p1]
+548: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+552: i19 = int_ge(i17, 0)
+556: guard_true(i19, descr=<Guard0x3b40f98>) [p0, p1]
+562: i21 = int_lt(i17, 13)
+566: guard_true(i21, descr=<Guard0x3b40fe0>) [p0, p1]
+579: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+584: guard_class(p23, 16622984, descr=<Guard0x3b41028>) [p0, p1]
+598: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+603: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+608: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3b41070>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+622: i30 = int_ge(i6, 0)
+626: guard_true(i30, descr=<Guard0x3b410b8>) [p0, p1]
+632: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+637: i32 = int_lt(i6, i31)
+640: guard_true(i32, descr=<Guard0x3b41100>) [p0, p1]
+646: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+651: guard_class(p33, 16622984, descr=<Guard0x3b41148>) [p0, p1]
+664: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+669: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+674: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3b41190>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+695: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+698: guard_false(i39, descr=<Guard0x3b411d8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
+704: p40 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j k)')
+704: p41 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+708: guard_nonnull_class(p41, ConstClass(W_Fixnum), descr=<Guard0x3b13700>) [p0, p1]
+728: i43 = getfield_gc_i(p41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+733: i44 = int_add_ovf(i43, i6)
+736: guard_no_overflow(descr=<Guard0x3b41220>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+742: i46 = int_ge(i44, 0)
+746: guard_true(i46, descr=<Guard0x3b41268>) [p0, p1]
+752: i48 = int_lt(i44, 512)
+759: guard_true(i48, descr=<Guard0x3b412b0>) [p0, p1]
+772: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+777: guard_class(p50, 16622984, descr=<Guard0x3b412f8>) [p0, p1]
+789: p53 = getfield_gc_r(ConstPtr(ptr52), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+794: p54 = getarrayitem_gc_r(p53, i44, descr=<ArrayP 8>)
+799: guard_class(p54, ConstClass(W_Bool), descr=<Guard0x3b41340>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+813: i57 = instance_ptr_eq(p54, ConstPtr(ptr56))
+816: guard_true(i57, descr=<Guard0x3b41388>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
+822: i59 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+826: i60 = arraylen_gc(p26, descr=<ArrayP 8>)
+826: jump(p7, i59, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624336))
+880: --end of the loop--
[3e4c086b3a470df] jit-log-opt-loop}
[3e4c086b3be05d3] {jit-backend
[3e4c086b3c46f5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661ce
[3e4c086b3c4ec3c] jit-backend-dump}
[3e4c086b3c5922a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661da4 +0  21000000
[3e4c086b3c5a756] jit-backend-dump}
[3e4c086b3c5e345] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661f65 +0  21000000
[3e4c086b3c5f171] jit-backend-dump}
[3e4c086b3c62503] {jit-backend-addr
bridge out of Guard 0x3b1d808 has address 0x7fd835661da0 to 0x7fd835661f60
       gc table: 0x7fd835661ce0
    jump target: 0x7fd835661da0
         resops: 0x7fd835661dae
       failures: 0x7fd835661f60
            end: 0x7fd8356621dc
[3e4c086b3c64898] jit-backend-addr}
[3e4c086b3c67ddf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661dcd +0  F7010000
[3e4c086b3c68c0e] jit-backend-dump}
[3e4c086b3c6be83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661de5 +0  FB010000
[3e4c086b3c6cba5] jit-backend-dump}
[3e4c086b3c6fd20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661df2 +0  0A020000
[3e4c086b3c709ef] jit-backend-dump}
[3e4c086b3c73bb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661e11 +0  07020000
[3e4c086b3c7488e] jit-backend-dump}
[3e4c086b3c77c63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661e28 +0  0C020000
[3e4c086b3c78960] jit-backend-dump}
[3e4c086b3c7bb9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661e36 +0  1A020000
[3e4c086b3c7c8e5] jit-backend-dump}
[3e4c086b3c7fafb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661e40 +0  2C020000
[3e4c086b3c807fe] jit-backend-dump}
[3e4c086b3c83954] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661e57 +0  31020000
[3e4c086b3c84657] jit-backend-dump}
[3e4c086b3c87761] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661e6c +0  38020000
[3e4c086b3c8846d] jit-backend-dump}
[3e4c086b3c8b600] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661e76 +0  4A020000
[3e4c086b3c8c36b] jit-backend-dump}
[3e4c086b3c8f4d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661e83 +0  59020000
[3e4c086b3c901d0] jit-backend-dump}
[3e4c086b3c9334b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661e93 +0  65020000
[3e4c086b3c9404b] jit-backend-dump}
[3e4c086b3c97182] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661ea8 +0  6C020000
[3e4c086b3c97e85] jit-backend-dump}
[3e4c086b3c9afd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661eb8 +0  78020000
[3e4c086b3c9bccc] jit-backend-dump}
[3e4c086b3c9ed9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661ece +0  7E020000
[3e4c086b3c9fac0] jit-backend-dump}
[3e4c086b3ca2be5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661edb +0  8D020000
[3e4c086b3ca38ee] jit-backend-dump}
[3e4c086b3ca6a16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661ef2 +0  92020000
[3e4c086b3ca7710] jit-backend-dump}
[3e4c086b3caa84d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661efc +0  A4020000
[3e4c086b3cab566] jit-backend-dump}
[3e4c086b3cae688] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835661f09 +0  B3020000
[3e4c086b3caf391] jit-backend-dump}
[3e4c086b3cb273b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fd93 +0  09200000
[3e4c086b3cb3432] jit-backend-dump}
[3e4c086b3cb7400] jit-backend}
[3e4c086b3cbae9f] {jit-log-opt-bridge
# bridge out of Guard 0x3b1d808 with 65 ops
[i0, p1, p2, p3]
+214: guard_not_invalidated(descr=<Guard0x3b13760>) [i0, p1, p2, p3]
+214: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+232: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3b413d0>) [i0, p1, p2, p3]
+241: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+245: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3b137c0>) [i0, p1, p2, p3]
+265: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+269: i9 = int_gt(i0, i8)
+272: guard_false(i9, descr=<Guard0x3b41418>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))')
debug_merge_point(0, 0, '(let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21)))')
+278: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+290: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3b13820>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *p* i4997)')
+309: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+313: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x3b13880>) [i0, p1, p2, p3]
+332: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+336: i16 = int_ge(i14, 0)
+340: guard_true(i16, descr=<Guard0x3b41460>) [i0, p1, p2, p3]
+346: i18 = int_lt(i14, 13)
+350: guard_true(i18, descr=<Guard0x3b414a8>) [i0, p1, p2, p3]
+363: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+367: guard_class(p20, 16622984, descr=<Guard0x3b414f0>) [i0, p1, p2, p3]
+379: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+383: p24 = getarrayitem_gc_r(p23, i14, descr=<ArrayP 8>)
+388: guard_class(p24, ConstClass(W_Vector), descr=<Guard0x3b41538>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand19 k5006)')
+400: i27 = int_ge(i0, 0)
+404: guard_true(i27, descr=<Guard0x3b41580>) [i0, p1, p2, p3]
+410: i28 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+414: i29 = int_lt(i0, i28)
+417: guard_true(i29, descr=<Guard0x3b415c8>) [i0, p1, p2, p3]
+423: p30 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p30, 16622984, descr=<Guard0x3b41610>) [i0, p1, p2, p3]
+439: p32 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+443: p33 = getarrayitem_gc_r(p32, i0, descr=<ArrayP 8>)
+448: guard_class(p33, ConstClass(W_Bool), descr=<Guard0x3b41658>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))')
+467: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+470: guard_false(i36, descr=<Guard0x3b416a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f)')
+476: p37 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j4999 k5006)')
+476: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+480: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3b138e0>) [i0, p1, p2, p3]
+498: i40 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+502: i41 = int_add_ovf(i40, i0)
+505: guard_no_overflow(descr=<Guard0x3b416e8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand20 #f)')
+518: p43 = getfield_gc_r(ConstPtr(ptr42), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+522: guard_class(p43, 16622984, descr=<Guard0x3b41730>) [i0, p1, p2, p3]
+534: i46 = int_ge(i41, 0)
+538: guard_true(i46, descr=<Guard0x3b41778>) [i0, p1, p2, p3]
+544: i48 = int_lt(i41, 512)
+551: guard_true(i48, descr=<Guard0x3b417c0>) [i0, p1, p2, p3]
+557: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+571: setarrayitem_gc(p50, i41, ConstPtr(ptr51), descr=<ArrayP 8>)
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))')
debug_merge_point(0, 0, '(+ k5006 1)')
+576: i53 = int_add(i0, 1)
debug_merge_point(0, 0, '(doloop5004 AppRand21)')
debug_merge_point(0, 0, '(let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 AppRand21)')
+580: i54 = arraylen_gc(p23, descr=<ArrayP 8>)
+580: jump(p1, i53, p2, p10, p6, i8, p12, p23, i14, descr=TargetToken(61624816))
+640: --end of the loop--
[3e4c086b3cf4078] jit-log-opt-bridge}
[3e4c086b3ddff0b] {jit-backend
[3e4c086b3e2b087] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086b3e33666] jit-backend-dump}
[3e4c086b3e3d853] {jit-backend-addr
Loop 15 ((if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)) from (> k end)) has address 0x7fd83566249d to 0x7fd835662610 (bootstrap 0x7fd835662410)
       gc table: 0x7fd835662340
       function: 0x7fd835662410
         resops: 0x7fd83566249d
       failures: 0x7fd835662610
            end: 0x7fd835662852
[3e4c086b3e405ec] jit-backend-addr}
[3e4c086b3e447c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356624b4 +0  6A010000
[3e4c086b3e45b33] jit-backend-dump}
[3e4c086b3e48f6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356624c1 +0  79010000
[3e4c086b3e49e44] jit-backend-dump}
[3e4c086b3e4d19c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356624d1 +0  85010000
[3e4c086b3e4df3e] jit-backend-dump}
[3e4c086b3e51249] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356624e4 +0  AA010000
[3e4c086b3e51fc3] jit-backend-dump}
[3e4c086b3e5529b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356624f8 +0  B2010000
[3e4c086b3e55fb9] jit-backend-dump}
[3e4c086b3e592da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566250c +0  BA010000
[3e4c086b3e5a01d] jit-backend-dump}
[3e4c086b3e5d22b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566251c +0  C6010000
[3e4c086b3e5df6b] jit-backend-dump}
[3e4c086b3e61295] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662532 +0  CC010000
[3e4c086b3e61fcf] jit-backend-dump}
[3e4c086b3e6512e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662540 +0  DA010000
[3e4c086b3e65e5c] jit-backend-dump}
[3e4c086b3e68f47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566254c +0  EA010000
[3e4c086b3e69c5c] jit-backend-dump}
[3e4c086b3e6ccfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662560 +0  F2010000
[3e4c086b3e6da22] jit-backend-dump}
[3e4c086b3e70b60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566256a +0  04020000
[3e4c086b3e71872] jit-backend-dump}
[3e4c086b3e748e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662574 +0  16020000
[3e4c086b3e7563e] jit-backend-dump}
[3e4c086b3e786fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662591 +0  15020000
[3e4c086b3e7940a] jit-backend-dump}
[3e4c086b3e7c51a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566259e +0  24020000
[3e4c086b3e7d22c] jit-backend-dump}
[3e4c086b3e80333] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356625aa +0  34020000
[3e4c086b3e81048] jit-backend-dump}
[3e4c086b3e840fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356625c7 +0  33020000
[3e4c086b3e84e0b] jit-backend-dump}
[3e4c086b3e87ef3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356625d4 +0  42020000
[3e4c086b3e88c05] jit-backend-dump}
[3e4c086b3e8bcb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356625e0 +0  52020000
[3e4c086b3e8c9ce] jit-backend-dump}
[3e4c086b3e905d0] jit-backend}
[3e4c086b3e94135] {jit-log-opt-loop
# Loop 15 ((if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)) from (> k end)) : entry bridge with 45 ops
[p0, p1]
debug_merge_point(0, 0, '(if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)) from (> k end)')
+357: guard_class(p0, 16499664, descr=<Guard0x3b13940>) [p1, p0]
+376: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+380: guard_nonnull(p3, descr=<Guard0x3b41808>) [p1, p0]
+396: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+399: guard_true(i5, descr=<Guard0x3b41850>) [p1, p0]
debug_merge_point(0, 0, '(void)')
+405: guard_not_invalidated(descr=<Guard0x3b41898>) [p1, p0]
+405: guard_class(p1, 16435208, descr=<Guard0x3b418e0>) [p1, p0]
+424: p7 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+435: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3b41928>) [p1, p0]
+444: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+448: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)) from (void)')
+452: guard_class(p9, 16504944, descr=<Guard0x3b41970>) [p1, p0]
+464: p12 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+468: guard_class(p10, 16435920, descr=<Guard0x3b419b8>) [p1, p0]
+480: p14 = getfield_gc_r(p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+484: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x3b139a0>) [p1, p0]
debug_merge_point(0, 0, '(+ i5026 1)')
+502: i16 = getfield_gc_i(p9, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+506: i18 = int_add_ovf(i16, 1)
+510: guard_no_overflow(descr=<Guard0x3b41a00>) [p1, p0]
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
+516: guard_class(p12, 16478448, descr=<Guard0x3b41a48>) [p1, p0]
+528: p20 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+539: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x3b41a90>) [p1, p0]
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+548: i23 = int_ge(i18, 1)
+552: guard_true(i23, descr=<Guard0x3b13a00>) [p10, i18, p12]
+558: i25 = int_le(i18, 13)
+562: guard_true(i25, descr=<Guard0x3b13a60>) [p10, i18, p12]
+575: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+579: guard_nonnull_class(p27, 16623792, descr=<Guard0x3b13ac0>) [p10, i18, p12]
+597: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+601: guard_nonnull(p30, descr=<Guard0x3b13b20>) [p10, i18, p12]
+610: guard_gc_type(p30, 520, descr=<Guard0x3b13b80>) [p10, i18, p12]
+622: i32 = arraylen_gc(p30, descr=<ArrayS 8>)
+629: p34 = getfield_gc_r(ConstPtr(ptr33), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+633: guard_nonnull_class(p34, 16623792, descr=<Guard0x3b13be0>) [p10, i18, p12]
+651: p37 = getfield_gc_r(ConstPtr(ptr36), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+655: guard_nonnull(p37, descr=<Guard0x3b13c40>) [p10, i18, p12]
+664: guard_gc_type(p37, 520, descr=<Guard0x3b13ca0>) [p10, i18, p12]
+676: i39 = arraylen_gc(p37, descr=<ArrayS 8>)
+676: jump(p12, i18, p10, p14, p30, p37, descr=TargetToken(62080048))
+720: --end of the loop--
[3e4c086b3ebcfc0] jit-log-opt-loop}
[3e4c086b40f596b] {jit-backend
[3e4c086b4159522] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356629e0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CE201000048FF042540741C038139480E00000F85000000004C8B79084983FF01720741813F900F00000F8500000000813AB01E01000F85000000004C8B72104C8B6A0841817D0030B700000F85000000004D8B65104C8B15E2FEFFFF4D39D40F85000000004D8B55204983FA01720741813A601400000F85000000004D8B62084D39E60F8F000000004D8B4D184983F9017207418139601400000F85000000004D8B41084983F8000F8C000000004983F80D0F8D00000000488B3DB7FEFFFF488B7718813EC8EB02000F8500000000488B77104A8B7CC610813FF08C00000F85000000004983FE000F8C00000000488B5F084939DE0F8D00000000488B5F18813BC8EB02000F8500000000488B5F104A8B7CF310813F88AD02000F8500000000488B1D87FEFFFF4839DF0F8400000000498B7D284883FF017206813F601400000F8500000000488B47084C01F00F8000000000488B3D74FEFFFF48898D30010000488B4F188139C8EB02000F85000000004883F8000F8C000000004881F8000200000F8D00000000488B5710F64204810F857600000048895CC210498D5E014889DA4C8B9D300100004C899D380100004C89BD400100004C8995480100004C89E74C898D500100004D89C24C89AD300100004989F549BB30FD6535D87F000041FFE30F1F400048C7442408FFFFFF0049BB60286635D87F00004C895D204D8D9B907AFFFF41FFD3E9F8FDFFFF78105249BBF0A16535D87F000041FFD3790F4989C349C1EB074983F3F84C0FAB1AE964FFFFFFFF35DEFCFFFF49BB70286635D87F000041534D8D9B9077FFFF41FFE3FF35CAFCFFFF49BB80286635D87F000041534D8D9B8077FFFF41FFE3FF35B6FCFFFF49BB90286635D87F000041534D8D9B7077FFFF41FFE3FF35A2FCFFFF49BBA0286635D87F000041534D8D9B6077FFFF41FFE3FF358EFCFFFF49BBB0286635D87F000041534D8D9B5077FFFF41FFE3FF3582FCFFFF49BBC0286635D87F000041534D8D9B4077FFFF41FFE3FF356EFCFFFF49BBD0286635D87F000041534D8D9B3077FFFF41FFE3FF355AFCFFFF49BBE0286635D87F000041534D8D9B2077FFFF41FFE3FF3546FCFFFF49BBF0286635D87F000041534D8D9B1077FFFF41FFE3FF3532FCFFFF49BB00296635D87F000041534D8D9B0077FFFF41FFE3FF351EFCFFFF49BB10296635D87F000041534D8D9BF076FFFF41FFE3FF3512FCFFFF49BB20296635D87F000041534D8D9BE076FFFF41FFE3FF35FEFBFFFF49BB30296635D87F000041534D8D9BD076FFFF41FFE3FF35EAFBFFFF49BB40296635D87F000041534D8D9BC076FFFF41FFE3FF35D6FBFFFF49BB50296635D87F000041534D8D9BB076FFFF41FFE3FF35C2FBFFFF49BB60296635D87F000041534D8D9BA076FFFF41FFE3FF35AEFBFFFF49BB70296635D87F000041534D8D9B9076FFFF41FFE3FF35A2FBFFFF49BB80296635D87F000041534D8D9B8076FFFF41FFE3FF358EFBFFFF49BB90296635D87F000041534D8D9B7076FFFF41FFE3FF357AFBFFFF49BBA0296635D87F000041534D8D9B6076FFFF41FFE3FF356EFBFFFF49BBB0296635D87F000041534D8D9B5076FFFF41FFE3FF355AFBFFFF49BBC0296635D87F000041534D8D9B4076FFFF41FFE3FF3546FBFFFF49BBD0296635D87F000041534D8D9B3076FFFF41FFE3
[3e4c086b416190e] jit-backend-dump}
[3e4c086b416c444] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662ac4 +0  21000000
[3e4c086b416d961] jit-backend-dump}
[3e4c086b4171688] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662cb5 +0  21000000
[3e4c086b4172670] jit-backend-dump}
[3e4c086b41759b2] {jit-backend-addr
bridge out of Guard 0x3b1d658 has address 0x7fd835662ac0 to 0x7fd835662cb0
       gc table: 0x7fd8356629e0
    jump target: 0x7fd835662ac0
         resops: 0x7fd835662ace
       failures: 0x7fd835662cb0
            end: 0x7fd835662f80
[3e4c086b4177d94] jit-backend-addr}
[3e4c086b417b1b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662ade +0  1A020000
[3e4c086b417c0e2] jit-backend-dump}
[3e4c086b417f418] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662af5 +0  1F020000
[3e4c086b4180204] jit-backend-dump}
[3e4c086b418350c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662b01 +0  4B020000
[3e4c086b4184221] jit-backend-dump}
[3e4c086b4187481] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662b17 +0  51020000
[3e4c086b4188184] jit-backend-dump}
[3e4c086b418b327] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662b2b +0  59020000
[3e4c086b418c02d] jit-backend-dump}
[3e4c086b418f274] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662b42 +0  5E020000
[3e4c086b418ff8a] jit-backend-dump}
[3e4c086b4193138] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662b4f +0  6D020000
[3e4c086b4193e32] jit-backend-dump}
[3e4c086b4196f8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662b66 +0  72020000
[3e4c086b4197c8e] jit-backend-dump}
[3e4c086b419ae27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662b74 +0  80020000
[3e4c086b419bb27] jit-backend-dump}
[3e4c086b419ec34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662b7e +0  92020000
[3e4c086b419f977] jit-backend-dump}
[3e4c086b41a2abe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662b95 +0  97020000
[3e4c086b41a37d0] jit-backend-dump}
[3e4c086b41a697f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662baa +0  9E020000
[3e4c086b41a7682] jit-backend-dump}
[3e4c086b41aa81b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662bb4 +0  B0020000
[3e4c086b41ab50f] jit-backend-dump}
[3e4c086b41ae674] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662bc1 +0  BF020000
[3e4c086b41af392] jit-backend-dump}
[3e4c086b41b260b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662bd1 +0  CB020000
[3e4c086b41b3305] jit-backend-dump}
[3e4c086b41b6473] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662be6 +0  D2020000
[3e4c086b41b7176] jit-backend-dump}
[3e4c086b41ba2ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662bf6 +0  DE020000
[3e4c086b41bafee] jit-backend-dump}
[3e4c086b41be147] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662c0c +0  E4020000
[3e4c086b41bee4d] jit-backend-dump}
[3e4c086b41c20cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662c19 +0  F3020000
[3e4c086b41c2dce] jit-backend-dump}
[3e4c086b41c6173] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662c37 +0  F1020000
[3e4c086b41c6e91] jit-backend-dump}
[3e4c086b41ca150] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662c41 +0  03030000
[3e4c086b41cae81] jit-backend-dump}
[3e4c086b41ce082] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835662c4e +0  12030000
[3e4c086b41cedaa] jit-backend-dump}
[3e4c086b41d2258] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fcff +0  BD2D0000
[3e4c086b41d2f71] jit-backend-dump}
[3e4c086b41d6fb6] jit-backend}
[3e4c086b41dab3a] {jit-log-opt-bridge
# bridge out of Guard 0x3b1d658 with 71 ops
[p0, p1]
+246: guard_class(p1, 16435208, descr=<Guard0x3b13d00>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+262: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b13d60>) [p0, p1]
debug_merge_point(0, 0, '(> k5006 end5001)')
+281: guard_not_invalidated(descr=<Guard0x3b41ad8>) [p0, p1]
+281: guard_class(p0, 16504944, descr=<Guard0x3b41b20>) [p0, p1]
+293: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+297: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+301: guard_class(p7, 16478448, descr=<Guard0x3b41b68>) [p0, p1]
+315: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+326: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3b41bb0>) [p0, p1]
+335: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+339: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3b13dc0>) [p0, p1]
+358: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+362: i14 = int_gt(i6, i13)
+365: guard_false(i14, descr=<Guard0x3b41bf8>) [p0, p1]
debug_merge_point(0, 0, '(if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))')
debug_merge_point(0, 0, '(let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21)))')
debug_merge_point(0, 0, '(vector-ref *p* i4997)')
+371: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+375: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3b13e20>) [p0, p1]
+394: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+398: i19 = int_ge(i17, 0)
+402: guard_true(i19, descr=<Guard0x3b41c40>) [p0, p1]
+408: i21 = int_lt(i17, 13)
+412: guard_true(i21, descr=<Guard0x3b41c88>) [p0, p1]
+425: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+429: guard_class(p23, 16622984, descr=<Guard0x3b41cd0>) [p0, p1]
+441: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+445: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+450: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3b41d18>) [p0, p1]
debug_merge_point(0, 0, '(let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand19 k5006)')
+462: i30 = int_ge(i6, 0)
+466: guard_true(i30, descr=<Guard0x3b41d60>) [p0, p1]
+472: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+476: i32 = int_lt(i6, i31)
+479: guard_true(i32, descr=<Guard0x3b41da8>) [p0, p1]
+485: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+489: guard_class(p33, 16622984, descr=<Guard0x3b41df0>) [p0, p1]
+501: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+505: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+510: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3b41e38>) [p0, p1]
debug_merge_point(0, 0, '(if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))')
+529: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+532: guard_false(i39, descr=<Guard0x3b41e80>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f)')
+538: p40 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j4999 k5006)')
+538: p41 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+542: guard_nonnull_class(p41, ConstClass(W_Fixnum), descr=<Guard0x3b13e80>) [p0, p1]
+560: i43 = getfield_gc_i(p41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+564: i44 = int_add_ovf(i43, i6)
+567: guard_no_overflow(descr=<Guard0x3b41ec8>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand20 #f)')
+580: p46 = getfield_gc_r(ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+591: guard_class(p46, 16622984, descr=<Guard0x3b41f10>) [p0, p1]
+603: i49 = int_ge(i44, 0)
+607: guard_true(i49, descr=<Guard0x3b41f58>) [p0, p1]
+613: i51 = int_lt(i44, 512)
+620: guard_true(i51, descr=<Guard0x3b41fa0>) [p0, p1]
+626: p53 = getfield_gc_r(ConstPtr(ptr52), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+640: setarrayitem_gc(p53, i44, ConstPtr(ptr54), descr=<ArrayP 8>)
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))')
debug_merge_point(0, 0, '(+ k5006 1)')
+645: i56 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop5004 AppRand21)')
debug_merge_point(0, 0, '(let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 AppRand21)')
+649: i57 = arraylen_gc(p26, descr=<ArrayP 8>)
+649: jump(p7, i56, p1, p3, p11, i13, p15, p26, i17, descr=TargetToken(61624816))
+720: --end of the loop--
[3e4c086b424e207] jit-log-opt-bridge}
[3e4c086b46c3762] {jit-backend
[3e4c086b4763df7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086b476e887] jit-backend-dump}
[3e4c086b477a42b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356632a4 +0  21000000
[3e4c086b477b90b] jit-backend-dump}
[3e4c086b477f717] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663625 +0  21000000
[3e4c086b4780672] jit-backend-dump}
[3e4c086b4783912] {jit-backend-addr
bridge out of Guard 0x3b0d0b8 has address 0x7fd8356632a0 to 0x7fd835663620
       gc table: 0x7fd835663160
    jump target: 0x7fd8356632a0
         resops: 0x7fd8356632ae
       failures: 0x7fd835663620
            end: 0x7fd83566397e
[3e4c086b4785e01] jit-backend-addr}
[3e4c086b478929d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356632cd +0  D5030000
[3e4c086b478a112] jit-backend-dump}
[3e4c086b478d461] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356632e5 +0  D9030000
[3e4c086b478e192] jit-backend-dump}
[3e4c086b47912d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356632f2 +0  E8030000
[3e4c086b4791ff1] jit-backend-dump}
[3e4c086b4795229] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663311 +0  E5030000
[3e4c086b4795f82] jit-backend-dump}
[3e4c086b4799225] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663325 +0  ED030000
[3e4c086b4799f1c] jit-backend-dump}
[3e4c086b479d0dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566333b +0  F3030000
[3e4c086b479de29] jit-backend-dump}
[3e4c086b47a0ff6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663352 +0  F8030000
[3e4c086b47a1d4c] jit-backend-dump}
[3e4c086b47a5030] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663360 +0  06040000
[3e4c086b47a5d3c] jit-backend-dump}
[3e4c086b47a8ee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663377 +0  0B040000
[3e4c086b47a9c71] jit-backend-dump}
[3e4c086b47acfc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566338b +0  13040000
[3e4c086b47add03] jit-backend-dump}
[3e4c086b47b0ef5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356633a1 +0  19040000
[3e4c086b47b1c91] jit-backend-dump}
[3e4c086b47b4f09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356633af +0  27040000
[3e4c086b47b5c31] jit-backend-dump}
[3e4c086b47b8dca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356633b9 +0  39040000
[3e4c086b47b9b29] jit-backend-dump}
[3e4c086b47bcd98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356633d0 +0  3E040000
[3e4c086b47bdac0] jit-backend-dump}
[3e4c086b47c0d1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356633e3 +0  47040000
[3e4c086b47c1a63] jit-backend-dump}
[3e4c086b47c4c5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356633fa +0  4C040000
[3e4c086b47c596e] jit-backend-dump}
[3e4c086b47c8ad9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566340f +0  53040000
[3e4c086b47c9847] jit-backend-dump}
[3e4c086b47ccb65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566341d +0  61040000
[3e4c086b47cd886] jit-backend-dump}
[3e4c086b47d0b30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566342d +0  6D040000
[3e4c086b47d18aa] jit-backend-dump}
[3e4c086b47d4b20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663441 +0  75040000
[3e4c086b47d5854] jit-backend-dump}
[3e4c086b47d8a18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663451 +0  81040000
[3e4c086b47d9786] jit-backend-dump}
[3e4c086b47dc99f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663468 +0  86040000
[3e4c086b47dd6b5] jit-backend-dump}
[3e4c086b47e0885] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663472 +0  98040000
[3e4c086b47e15b3] jit-backend-dump}
[3e4c086b47e47dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566347f +0  A7040000
[3e4c086b47e54fa] jit-backend-dump}
[3e4c086b47e8647] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356635ca +0  78030000
[3e4c086b47e93a0] jit-backend-dump}
[3e4c086b47ec52d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356635d4 +0  8A030000
[3e4c086b47ed236] jit-backend-dump}
[3e4c086b47f06aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c87d +0  1F6A0000
[3e4c086b47f13d5] jit-backend-dump}
[3e4c086b47f5375] jit-backend}
[3e4c086b47f8fab] {jit-log-opt-bridge
# bridge out of Guard 0x3b0d0b8 with 129 ops
[i0, p1, p2, p3]
+342: guard_not_invalidated(descr=<Guard0x3b13ee0>) [i0, p1, p2, p3]
+342: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+360: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3b52020>) [i0, p1, p2, p3]
+369: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+373: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3b13f40>) [i0, p1, p2, p3]
+393: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+397: i9 = int_gt(i0, i8)
+400: guard_true(i9, descr=<Guard0x3b52068>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
+406: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+417: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3b13fa0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
debug_merge_point(0, 0, '(begin (void) (let ([if2 (> k end)]) (if if2 #t #f)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([if2 (> k end)]) (if if2 #t #f))')
+437: p12 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(> k end)')
debug_merge_point(0, 0, '(if if2 #t #f)')
debug_merge_point(0, 0, '#t')
+437: p13 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+448: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x3b520b0>) [i0, p1, p2, p3]
+457: p15 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+461: p16 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)) from (> k end)')
debug_merge_point(0, 0, '(let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019)))))')
+465: guard_class(p16, 16435208, descr=<Guard0x3b520f8>) [i0, p1, p2, p3]
+479: p18 = getfield_gc_r(p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+483: guard_nonnull_class(p18, ConstClass(ForwardLink), descr=<Guard0x3b54020>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(place i5026 j5019)')
+502: guard_class(p15, 16504944, descr=<Guard0x3b52140>) [i0, p1, p2, p3]
+516: i21 = getfield_gc_i(p15, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+521: p22 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+526: guard_class(p22, 16478448, descr=<Guard0x3b52188>) [i0, p1, p2, p3]
+539: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+550: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3b521d0>) [i0, p1, p2, p3]
+559: p26 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+563: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3b54080>) [i0, p1, p2, p3]
+581: p28 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+581: i29 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([end4963 (vector-ref *piecemax* i4959)]) (let ([doloop4966 (lambda (k4968) (let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))))]) (doloop4966 0) (let ([AppRand13 (vector-ref *class* i4959)][AppRand14 (vector-ref *class* i4959)]) (let ([AppRand15 (vector-ref *piececount* AppRand14)]) (let ([AppRand16 (- AppRand15 1)]) (vector-set! *piececount* AppRand13 AppRand16)))) (let ([doloop4981 (lambda (k4983) (let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))))]) (doloop4981 j4961))))')
debug_merge_point(0, 0, '(vector-ref *piecemax* i4959)')
+585: i31 = int_ge(i21, 0)
+589: guard_true(i31, descr=<Guard0x3b52218>) [i0, p1, p2, p3]
+595: i33 = int_lt(i21, 13)
+599: guard_true(i33, descr=<Guard0x3b52260>) [i0, p1, p2, p3]
+612: p35 = getfield_gc_r(ConstPtr(ptr34), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+616: guard_class(p35, 16623792, descr=<Guard0x3b522a8>) [i0, p1, p2, p3]
+628: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+632: i39 = getarrayitem_gc_i(p38, i21, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop4966 (lambda (k4968) (let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))))]) (doloop4966 0) (let ([AppRand13 (vector-ref *class* i4959)][AppRand14 (vector-ref *class* i4959)]) (let ([AppRand15 (vector-ref *piececount* AppRand14)]) (let ([AppRand16 (- AppRand15 1)]) (vector-set! *piececount* AppRand13 AppRand16)))) (let ([doloop4981 (lambda (k4983) (let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))))]) (doloop4981 j4961)))')
debug_merge_point(0, 0, '(lambda (k4968) (let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))))')
debug_merge_point(0, 0, '(doloop4966 0)')
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 0)')
debug_merge_point(0, 0, '(> k4968 end4963)')
+637: i41 = int_gt(0, i39)
+641: guard_false(i41, descr=<Guard0x3b522f0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12)))')
debug_merge_point(0, 0, '(vector-ref *p* i4959)')
+654: p43 = getfield_gc_r(ConstPtr(ptr42), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+658: guard_class(p43, 16622984, descr=<Guard0x3b52338>) [i0, p1, p2, p3]
+670: p46 = getfield_gc_r(ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+674: p47 = getarrayitem_gc_r(p46, i21, descr=<ArrayP 8>)
+679: guard_class(p47, ConstClass(W_Vector), descr=<Guard0x3b52380>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand10 k4968)')
+691: i49 = getfield_gc_i(p47, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+695: i50 = int_lt(0, i49)
+699: guard_true(i50, descr=<Guard0x3b523c8>) [i0, p1, p2, p3]
+705: p51 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+709: guard_class(p51, 16622984, descr=<Guard0x3b52410>) [i0, p1, p2, p3]
+721: p53 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+725: p54 = getarrayitem_gc_r(p53, 0, descr=<ArrayP 8>)
+729: guard_class(p54, ConstClass(W_Bool), descr=<Guard0x3b52458>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))')
+748: i57 = instance_ptr_eq(p54, ConstPtr(ptr56))
+751: guard_false(i57, descr=<Guard0x3b524a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t)')
debug_merge_point(0, 0, '(+ j4961 k4968)')
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand11 #t)')
+764: p59 = getfield_gc_r(ConstPtr(ptr58), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+768: guard_class(p59, 16622984, descr=<Guard0x3b524e8>) [i0, p1, p2, p3]
+780: i62 = int_ge(i29, 0)
+784: guard_true(i62, descr=<Guard0x3b52530>) [i0, p1, p2, p3]
+790: i64 = int_lt(i29, 512)
+797: guard_true(i64, descr=<Guard0x3b52578>) [i0, p1, p2, p3]
+803: p66 = getfield_gc_r(ConstPtr(ptr65), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+825: setarrayitem_gc(p66, i29, ConstPtr(ptr67), descr=<ArrayP 8>)
debug_merge_point(0, 0, '#t')
debug_merge_point(0, 0, '(let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))')
debug_merge_point(0, 0, '(+ k4968 1)')
debug_merge_point(0, 0, '(doloop4966 AppRand12)')
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)')
+830: p68 = new_with_vtable(descr=<SizeDescr 48>)
+874: p69 = new_with_vtable(descr=<SizeDescr 16>)
+885: setfield_gc(p69, i39, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+889: p70 = new_with_vtable(descr=<SizeDescr 16>)
+900: setfield_gc(p70, i21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+904: p71 = new_with_vtable(descr=<SizeDescr 16>)
+915: setfield_gc(p71, i29, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+919: p72 = new_with_vtable(descr=<SizeDescr 40>)
+930: p73 = new_with_vtable(descr=<SizeDescr 32>)
+948: setfield_gc(p73, ConstPtr(ptr74), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+952: setfield_gc(p73, i21, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+956: setfield_gc(p73, i29, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+960: p75 = new_with_vtable(descr=<SizeDescr 40>)
+971: setfield_gc(p75, p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+975: setfield_gc(p75, p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+979: setfield_gc(p75, p16, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+990: setfield_gc(p75, ConstPtr(ptr76), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1066: i77 = getfield_gc_i(p69, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1070: i78 = getfield_gc_i(p70, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1081: setfield_gc(p68, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1085: setfield_gc(p68, p69, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1089: setfield_gc(p72, p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1093: setfield_gc(p68, ConstPtr(ptr80), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1097: setfield_gc(p72, p73, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1101: setfield_gc(p72, p75, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1105: setfield_gc(p68, p70, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1109: setfield_gc(p68, p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1120: setfield_gc(p72, ConstPtr(ptr81), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1124: i83 = int_ge(i78, 0)
+1128: guard_true(i83, descr=<Guard0x3b540e0>) [p72, p68, None, None, None, None]
+1134: i86 = int_le(i78, 12)
+1138: guard_true(i86, descr=<Guard0x3b54140>) [p72, p68, None, None, None, None]
+1144: i87 = arraylen_gc(p46, descr=<ArrayP 8>)
+1144: jump(p68, 1, p72, p18, p69, i77, p70, p46, i78, descr=TargetToken(61624496))
+1216: --end of the loop--
[3e4c086b486db20] jit-log-opt-bridge}
[3e4c086b4b1c500] {jit-backend
[3e4c086b4b8d5f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663b
[3e4c086b4b95e54] jit-backend-dump}
[3e4c086b4ba0b39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663c14 +0  20000000
[3e4c086b4ba20cd] jit-backend-dump}
[3e4c086b4ba615f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663e25 +0  20000000
[3e4c086b4ba713a] jit-backend-dump}
[3e4c086b4baa596] {jit-backend-addr
bridge out of Guard 0x3b0d658 has address 0x7fd835663c10 to 0x7fd835663e20
       gc table: 0x7fd835663b10
    jump target: 0x7fd835663c10
         resops: 0x7fd835663c1e
       failures: 0x7fd835663e20
            end: 0x7fd8356640ca
[3e4c086b4bacb95] jit-backend-addr}
[3e4c086b4bb0532] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663c3d +0  21020000
[3e4c086b4bb14b5] jit-backend-dump}
[3e4c086b4bb47a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663c55 +0  25020000
[3e4c086b4bb5503] jit-backend-dump}
[3e4c086b4bb86fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663c62 +0  34020000
[3e4c086b4bb945a] jit-backend-dump}
[3e4c086b4bbc539] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663c7d +0  35020000
[3e4c086b4bbd2a4] jit-backend-dump}
[3e4c086b4bc05be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663c93 +0  3B020000
[3e4c086b4bc1326] jit-backend-dump}
[3e4c086b4bc4543] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663caa +0  40020000
[3e4c086b4bc5286] jit-backend-dump}
[3e4c086b4bc84f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663cb8 +0  4E020000
[3e4c086b4bc926a] jit-backend-dump}
[3e4c086b4bcc474] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663cc7 +0  5B020000
[3e4c086b4bcd1c7] jit-backend-dump}
[3e4c086b4bd0424] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663cd1 +0  6D020000
[3e4c086b4bd11a7] jit-backend-dump}
[3e4c086b4bd42e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663ce8 +0  72020000
[3e4c086b4bd5013] jit-backend-dump}
[3e4c086b4bd8113] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663d02 +0  74020000
[3e4c086b4bd8eaf] jit-backend-dump}
[3e4c086b4bdbfef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663d11 +0  81020000
[3e4c086b4bdcd4e] jit-backend-dump}
[3e4c086b4bdfec3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663d1b +0  93020000
[3e4c086b4be0c3d] jit-backend-dump}
[3e4c086b4be3d65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663d32 +0  98020000
[3e4c086b4be4aa2] jit-backend-dump}
[3e4c086b4be7c23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663d45 +0  A1020000
[3e4c086b4be898b] jit-backend-dump}
[3e4c086b4bebb55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663d4f +0  B3020000
[3e4c086b4bec88f] jit-backend-dump}
[3e4c086b4bef968] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663d59 +0  C5020000
[3e4c086b4bf069f] jit-backend-dump}
[3e4c086b4bf380d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663d83 +0  B7020000
[3e4c086b4bf454a] jit-backend-dump}
[3e4c086b4bf7635] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663d8d +0  C9020000
[3e4c086b4bf8391] jit-backend-dump}
[3e4c086b4bfb55b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663da5 +0  CD020000
[3e4c086b4bfc286] jit-backend-dump}
[3e4c086b4bff3b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663dbd +0  D1020000
[3e4c086b4c00156] jit-backend-dump}
[3e4c086b4c032f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835663dcd +0  DD020000
[3e4c086b4c04029] jit-backend-dump}
[3e4c086b4c0738a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d06d +0  9F6B0000
[3e4c086b4c080c4] jit-backend-dump}
[3e4c086b4c0c089] jit-backend}
[3e4c086b4c0fbbe] {jit-log-opt-bridge
# bridge out of Guard 0x3b0d658 with 83 ops
[i0, p1, p2, p3]
+278: guard_not_invalidated(descr=<Guard0x3b541a0>) [i0, p1, p2, p3]
+278: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+296: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3b525c0>) [i0, p1, p2, p3]
+305: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+309: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3b54200>) [i0, p1, p2, p3]
+329: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+333: i9 = int_gt(i0, i8)
+336: guard_true(i9, descr=<Guard0x3b52608>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))')
debug_merge_point(0, 0, '(void)')
+342: p10 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+360: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3b52650>) [i0, p1, p2, p3]
+369: p12 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+373: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+377: guard_class(p13, 16435920, descr=<Guard0x3b52698>) [i0, p1, p2, p3]
+391: p15 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+395: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x3b54260>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref *class* i4959)][AppRand14 (vector-ref *class* i4959)]) (let ([AppRand15 (vector-ref *piececount* AppRand14)]) (let ([AppRand16 (- AppRand15 1)]) (vector-set! *piececount* AppRand13 AppRand16))))')
debug_merge_point(0, 0, '(vector-ref *class* i4959)')
+414: guard_class(p12, 16503888, descr=<Guard0x3b526e0>) [i0, p1, p2, p3]
+428: i18 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+433: i20 = int_ge(i18, 0)
+437: guard_true(i20, descr=<Guard0x3b52728>) [i0, p1, p2, p3]
+443: i22 = int_lt(i18, 13)
+447: guard_true(i22, descr=<Guard0x3b52770>) [i0, p1, p2, p3]
+460: p24 = getfield_gc_r(ConstPtr(ptr23), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+464: guard_class(p24, 16623792, descr=<Guard0x3b527b8>) [i0, p1, p2, p3]
+476: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+480: i28 = getarrayitem_gc_i(p27, i18, descr=<ArrayS 8>)
+485: p29 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+490: guard_class(p29, 16505296, descr=<Guard0x3b52800>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *class* i4959)')
+502: i31 = getarrayitem_gc_i(p27, i18, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand15 (vector-ref *piececount* AppRand14)]) (let ([AppRand16 (- AppRand15 1)]) (vector-set! *piececount* AppRand13 AppRand16)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand14)')
+507: i33 = int_ge(i31, 0)
+511: guard_true(i33, descr=<Guard0x3b52848>) [i0, p1, p2, p3]
+517: i35 = int_lt(i31, 4)
+521: guard_true(i35, descr=<Guard0x3b52890>) [i0, p1, p2, p3]
+534: p37 = getfield_gc_r(ConstPtr(ptr36), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+538: guard_class(p37, 16623792, descr=<Guard0x3b528d8>) [i0, p1, p2, p3]
+550: p40 = getfield_gc_r(ConstPtr(ptr39), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+554: i41 = getarrayitem_gc_i(p40, i31, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand16 (- AppRand15 1)]) (vector-set! *piececount* AppRand13 AppRand16))')
debug_merge_point(0, 0, '(- AppRand15 1)')
+559: i43 = int_sub_ovf(i41, 1)
+563: guard_no_overflow(descr=<Guard0x3b52920>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! *piececount* AppRand13 AppRand16)')
+569: i45 = int_ge(i28, 0)
+573: guard_true(i45, descr=<Guard0x3b52968>) [i0, p1, p2, p3]
+579: i47 = int_lt(i28, 4)
+583: guard_true(i47, descr=<Guard0x3b529b0>) [i0, p1, p2, p3]
+589: setarrayitem_gc(p40, i28, i43, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop4981 (lambda (k4983) (let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))))]) (doloop4981 j4961))')
debug_merge_point(0, 0, '(lambda (k4983) (let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))))')
debug_merge_point(0, 0, '(doloop4981 j4961)')
+594: i48 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
debug_merge_point(0, 0, '(let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))) from (doloop4981 j4961)')
debug_merge_point(0, 0, '(> k4983 size)')
+605: i50 = int_gt(i48, 511)
guard_false(i50, descr=<Guard0x3b542c0>) [i50, i48, p13, p15, None, None, None, None]
debug_merge_point(0, 0, '(let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))')
debug_merge_point(0, 0, '(if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))')
debug_merge_point(0, 0, '(let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17))')
debug_merge_point(0, 0, '(vector-ref *puzzle* k4983)')
+631: i53 = int_ge(i48, 0)
+635: guard_true(i53, descr=<Guard0x3b529f8>) [i50, i48, p13, p15, None, None, None, None]
+648: p55 = getfield_gc_r(ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+653: guard_class(p55, 16622984, descr=<Guard0x3b52a40>) [i50, i48, p13, p15, None, None, None, None]
+665: p58 = getfield_gc_r(ConstPtr(ptr57), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+670: p59 = getarrayitem_gc_r(p58, i48, descr=<ArrayP 8>)
+675: guard_class(p59, ConstClass(W_Bool), descr=<Guard0x3b52a88>) [i50, i48, p13, p15, None, None, None, None]
debug_merge_point(0, 0, '(not AppRand17)')
+696: i62 = instance_ptr_eq(p59, ConstPtr(ptr61))
+699: guard_false(i62, descr=<Guard0x3b52ad0>) [i50, i48, p13, p15, None, None, None, None]
debug_merge_point(0, 0, '(if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18)))')
debug_merge_point(0, 0, '(let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))')
debug_merge_point(0, 0, '(+ k4983 1)')
+705: i64 = int_add(i48, 1)
debug_merge_point(0, 0, '(doloop4981 AppRand18)')
debug_merge_point(0, 0, '(let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))) from (doloop4981 AppRand18)')
+709: i65 = arraylen_gc(p58, descr=<ArrayP 8>)
+723: jump(ConstPtr(ptr66), i64, p13, p15, p58, ConstPtr(ptr67), descr=TargetToken(61624656))
+784: --end of the loop--
[3e4c086b4c59e2f] jit-log-opt-bridge}
[3e4c086b5059e3c] {jit-backend
[3e4c086b511651c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356642d
[3e4c086b5121db7] jit-backend-dump}
[3e4c086b512d302] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664434 +0  23000000
[3e4c086b512e930] jit-backend-dump}
[3e4c086b5132960] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664845 +0  23000000
[3e4c086b513387d] jit-backend-dump}
[3e4c086b5136bed] {jit-backend-addr
bridge out of Guard 0x3b0db68 has address 0x7fd835664430 to 0x7fd835664840
       gc table: 0x7fd8356642d0
    jump target: 0x7fd835664430
         resops: 0x7fd83566443e
       failures: 0x7fd835664840
            end: 0x7fd835664baf
[3e4c086b5139150] jit-backend-addr}
[3e4c086b513c8a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566444f +0  4C040000
[3e4c086b513d752] jit-backend-dump}
[3e4c086b5140a51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566446d +0  4A040000
[3e4c086b5141748] jit-backend-dump}
[3e4c086b51451d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664477 +0  5C040000
[3e4c086b5145f27] jit-backend-dump}
[3e4c086b5149168] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664490 +0  5F040000
[3e4c086b5149efb] jit-backend-dump}
[3e4c086b514d105] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356644a6 +0  65040000
[3e4c086b514de58] jit-backend-dump}
[3e4c086b5150f2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356644b6 +0  71040000
[3e4c086b5151c4c] jit-backend-dump}
[3e4c086b5154ca7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356644ca +0  79040000
[3e4c086b51559d2] jit-backend-dump}
[3e4c086b5158a8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356644df +0  80040000
[3e4c086b5159798] jit-backend-dump}
[3e4c086b515c836] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356644f6 +0  85040000
[3e4c086b515d55e] jit-backend-dump}
[3e4c086b516058b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664503 +0  94040000
[3e4c086b51612ad] jit-backend-dump}
[3e4c086b51642a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664513 +0  A0040000
[3e4c086b5164fb8] jit-backend-dump}
[3e4c086b5167f7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664527 +0  A8040000
[3e4c086b5168c90] jit-backend-dump}
[3e4c086b516bc4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664541 +0  AA040000
[3e4c086b516c955] jit-backend-dump}
[3e4c086b516f967] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566455c +0  AB040000
[3e4c086b517067c] jit-backend-dump}
[3e4c086b517367e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566456e +0  B5040000
[3e4c086b5174388] jit-backend-dump}
[3e4c086b5177378] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664578 +0  C7040000
[3e4c086b5178090] jit-backend-dump}
[3e4c086b517b0c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566458f +0  CC040000
[3e4c086b517bdd0] jit-backend-dump}
[3e4c086b517ee43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356645a1 +0  D6040000
[3e4c086b517fb4c] jit-backend-dump}
[3e4c086b5182b80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356645b9 +0  DA040000
[3e4c086b5183889] jit-backend-dump}
[3e4c086b518690c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356645cb +0  E4040000
[3e4c086b5187627] jit-backend-dump}
[3e4c086b518a654] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356645e2 +0  E9040000
[3e4c086b518b354] jit-backend-dump}
[3e4c086b518e369] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356645f7 +0  F0040000
[3e4c086b518f06f] jit-backend-dump}
[3e4c086b51920d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664605 +0  FE040000
[3e4c086b5192de6] jit-backend-dump}
[3e4c086b5195e13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664615 +0  0A050000
[3e4c086b5196b44] jit-backend-dump}
[3e4c086b5199ba8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566462a +0  11050000
[3e4c086b519a8ab] jit-backend-dump}
[3e4c086b519d900] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664633 +0  24050000
[3e4c086b519e643] jit-backend-dump}
[3e4c086b51a1677] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664645 +0  2E050000
[3e4c086b51a2380] jit-backend-dump}
[3e4c086b51a537f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566464e +0  41050000
[3e4c086b51a608e] jit-backend-dump}
[3e4c086b51a937e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d752 +0  DA6C0000
[3e4c086b51aa087] jit-backend-dump}
[3e4c086b51adf67] jit-backend}
[3e4c086b51b1aeb] {jit-log-opt-bridge
# bridge out of Guard 0x3b0db68 with 171 ops
[i0, p1, p2, p3]
+374: guard_not_invalidated(descr=<Guard0x3b54320>) [i0, p1, p2, p3]
+374: i5 = int_gt(i0, 511)
+381: guard_false(i5, descr=<Guard0x3b52b18>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))')
+387: p6 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+398: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3b54380>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))')
debug_merge_point(0, 0, '(let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17))')
+417: p8 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(vector-ref *puzzle* k4983)')
+417: i10 = int_ge(i0, 0)
+421: guard_true(i10, descr=<Guard0x3b52b60>) [i0, p1, p2, p3]
+434: p12 = getfield_gc_r(ConstPtr(ptr11), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+438: guard_class(p12, 16622984, descr=<Guard0x3b52ba8>) [i0, p1, p2, p3]
+452: p15 = getfield_gc_r(ConstPtr(ptr14), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+456: p16 = getarrayitem_gc_r(p15, i0, descr=<ArrayP 8>)
+461: guard_class(p16, ConstClass(W_Bool), descr=<Guard0x3b52bf0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(not AppRand17)')
+481: i19 = instance_ptr_eq(p16, ConstPtr(ptr18))
+484: guard_true(i19, descr=<Guard0x3b52c38>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18)))')
debug_merge_point(0, 0, '(begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))')
debug_merge_point(0, 0, 'k4983')
debug_merge_point(0, 0, '(> k4983 size)')
debug_merge_point(0, 0, '(if if6 0 k4983)')
debug_merge_point(0, 0, 'k4983')
+490: p20 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+501: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x3b52c80>) [i0, p1, p2, p3]
+510: p22 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+514: p23 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+518: guard_class(p23, 16435208, descr=<Guard0x3b52cc8>) [i0, p1, p2, p3]
+531: p25 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+535: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x3b543e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(set! k5021 SetBang1) from (> k4983 size)')
+554: guard_class(p22, 16504944, descr=<Guard0x3b52d10>) [i0, p1, p2, p3]
+567: p28 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+571: guard_class(p28, 16478448, descr=<Guard0x3b52d58>) [i0, p1, p2, p3]
+583: p30 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+594: guard_value(p30, ConstPtr(ptr31), descr=<Guard0x3b52da0>) [i0, p1, p2, p3]
+603: p32 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+607: p33 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+611: guard_nonnull_class(p33, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3b54440>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))')
debug_merge_point(0, 0, '(trial CellRef(k5021))')
+629: p35 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([k5021 0]) (call-with-current-continuation (lambda (return) (let ([doloop5024 (lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))]) (doloop5024 0)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (return) (let ([doloop5024 (lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))]) (doloop5024 0))))')
debug_merge_point(0, 0, '(let ([doloop5024 (lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))]) (doloop5024 0))')
debug_merge_point(0, 0, '(lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))')
debug_merge_point(0, 0, '(doloop5024 0)')
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 0)')
debug_merge_point(0, 0, '(> i5026 typemax)')
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)))')
debug_merge_point(0, 0, '(vector-ref *class* i5026)')
+636: p37 = getfield_gc_r(ConstPtr(ptr36), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+640: setfield_gc(p33, i0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+644: guard_class(p37, 16623792, descr=<Guard0x3b544a0>) [p37, p23, p22, p25, i0, None, None, None]
+656: p41 = getfield_gc_r(ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+660: i43 = getarrayitem_gc_i(p41, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+664: i45 = int_ge(i43, 0)
+668: guard_true(i45, descr=<Guard0x3b52de8>) [p37, p23, p22, p25, i0, None, None, None]
+674: i47 = int_lt(i43, 4)
+678: guard_true(i47, descr=<Guard0x3b52e30>) [p37, p23, p22, p25, i0, None, None, None]
+691: p49 = getfield_gc_r(ConstPtr(ptr48), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+695: guard_class(p49, 16623792, descr=<Guard0x3b52e78>) [p37, p23, p22, p25, i0, None, None, None]
+707: p52 = getfield_gc_r(ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+711: i53 = getarrayitem_gc_i(p52, i43, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+716: i54 = int_is_zero(i53)
+719: guard_false(i54, descr=<Guard0x3b52ec0>) [p37, p23, p22, p25, i0, None, None, None]
debug_merge_point(0, 0, '(let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)))')
debug_merge_point(0, 0, '(fit i5026 j5019)')
debug_merge_point(0, 0, '(let ([end (vector-ref *piecemax* i)]) (let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0)))')
debug_merge_point(0, 0, '(vector-ref *piecemax* i)')
+732: p56 = getfield_gc_r(ConstPtr(ptr55), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+736: guard_class(p56, 16623792, descr=<Guard0x3b52f08>) [p37, p23, p22, p25, i0, None, None, None]
+749: p59 = getfield_gc_r(ConstPtr(ptr58), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+753: i60 = getarrayitem_gc_i(p59, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0))')
debug_merge_point(0, 0, '(lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))')
debug_merge_point(0, 0, '(doloop4942 0)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 0)')
debug_merge_point(0, 0, '(> k end)')
+757: i62 = int_gt(0, i60)
+761: guard_false(i62, descr=<Guard0x3b52f50>) [p37, p23, p22, p25, i0, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+774: p64 = getfield_gc_r(ConstPtr(ptr63), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+778: guard_class(p64, 16622984, descr=<Guard0x3b52f98>) [p37, p23, p22, p25, i0, None, None, None]
+790: p67 = getfield_gc_r(ConstPtr(ptr66), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+794: p68 = getarrayitem_gc_r(p67, 0, descr=<ArrayP 8>)
+798: guard_class(p68, ConstClass(W_Vector), descr=<Guard0x3b52fe0>) [p37, p23, p22, p25, i0, None, None, None]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+811: i70 = getfield_gc_i(p68, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+815: i71 = int_lt(0, i70)
+819: guard_true(i71, descr=<Guard0x3b53028>) [p37, p23, p22, p25, i0, None, None, None]
+825: p72 = getfield_gc_r(p68, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+829: guard_class(p72, 16622984, descr=<Guard0x3b53070>) [p37, p23, p22, p25, i0, None, None, None]
+841: p74 = getfield_gc_r(p68, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+845: p75 = getarrayitem_gc_r(p74, 0, descr=<ArrayP 8>)
+849: guard_class(p75, ConstClass(W_Bool), descr=<Guard0x3b530b8>) [p37, p23, p22, p25, i0, None, None, None]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+862: i78 = instance_ptr_eq(p75, ConstPtr(ptr77))
+865: guard_false(i78, descr=<Guard0x3b53100>) [p37, p23, p22, p25, i0, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
debug_merge_point(0, 0, '(+ j k)')
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+871: p79 = getarrayitem_gc_r(p15, i0, descr=<ArrayP 8>)
+876: guard_class(p79, ConstClass(W_Bool), descr=<Guard0x3b53148>) [p37, p23, p22, p25, i0, None, None, None]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+889: i82 = instance_ptr_eq(p79, ConstPtr(ptr81))
+892: guard_true(i82, descr=<Guard0x3b53190>) [p37, p23, p22, p25, i0, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+898: p83 = new_with_vtable(descr=<SizeDescr 48>)
+945: p84 = new_with_vtable(descr=<SizeDescr 16>)
+956: setfield_gc(p84, i60, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+960: p85 = new_with_vtable(descr=<SizeDescr 16>)
+971: setfield_gc(p85, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+975: p86 = new_with_vtable(descr=<SizeDescr 40>)
+986: p87 = new_with_vtable(descr=<SizeDescr 24>)
+997: p88 = new_with_vtable(descr=<SizeDescr 48>)
+1016: setfield_gc(p88, ConstPtr(ptr89), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1020: setfield_gc(p88, ConstPtr(ptr90), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1024: p91 = new_with_vtable(descr=<SizeDescr 16>)
+1035: setfield_gc(p91, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1039: setfield_gc(p88, p91, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1043: p92 = new_with_vtable(descr=<SizeDescr 16>)
+1054: p93 = new_with_vtable(descr=<SizeDescr 16>)
+1065: setfield_gc(p93, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1073: setfield_gc(p92, p93, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1077: setfield_gc(p88, p92, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1081: p95 = new_with_vtable(descr=<SizeDescr 24>)
+1092: p96 = new_with_vtable(descr=<SizeDescr 40>)
+1103: setfield_gc(p96, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1107: setfield_gc(p96, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1111: setfield_gc(p96, p23, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1122: setfield_gc(p96, ConstPtr(ptr97), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1126: setfield_gc(p95, p96, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+1130: setfield_gc(p95, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+1138: setfield_gc(p88, p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1142: setfield_gc(p87, p88, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1146: setfield_gc(p87, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1154: p99 = new_with_vtable(descr=<SizeDescr 40>)
+1166: setfield_gc(p99, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1170: setfield_gc(p99, p87, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1174: setfield_gc(p99, p96, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1185: setfield_gc(p99, ConstPtr(ptr100), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1261: i101 = getfield_gc_i(p84, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1265: i102 = arraylen_gc(p67, descr=<ArrayP 8>)
+1265: setfield_gc(p86, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1269: setfield_gc(p83, ConstPtr(ptr103), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1280: setfield_gc(p86, ConstPtr(ptr104), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1284: setfield_gc(p86, p87, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1288: setfield_gc(p86, p99, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1299: setfield_gc(p83, ConstPtr(ptr105), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1303: setfield_gc(p83, p85, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1307: setfield_gc(p83, p84, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1318: setfield_gc(p83, ConstPtr(ptr106), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1322: jump(p83, 1, p86, p25, p84, i101, ConstPtr(ptr106), p67, 0, descr=TargetToken(61624336))
+1392: --end of the loop--
[3e4c086b5240777] jit-log-opt-bridge}
[3e4c086b5514396] {jit-backend
[3e4c086b55a91d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664db
[3e4c086b55b4594] jit-backend-dump}
[3e4c086b55bf6ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664ef4 +0  23000000
[3e4c086b55c0e00] jit-backend-dump}
[3e4c086b55c4fc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665255 +0  23000000
[3e4c086b55c5fd3] jit-backend-dump}
[3e4c086b55c93df] {jit-backend-addr
bridge out of Guard 0x3b40800 has address 0x7fd835664ef0 to 0x7fd835665250
       gc table: 0x7fd835664db0
    jump target: 0x7fd835664ef0
         resops: 0x7fd835664efe
       failures: 0x7fd835665250
            end: 0x7fd8356655bf
[3e4c086b55cb927] jit-backend-addr}
[3e4c086b55cef04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664f0e +0  81030000
[3e4c086b55cfe7d] jit-backend-dump}
[3e4c086b55d31d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664f25 +0  86030000
[3e4c086b55d3f40] jit-backend-dump}
[3e4c086b55d7343] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664f31 +0  B2030000
[3e4c086b55d80b7] jit-backend-dump}
[3e4c086b55db3c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664f3f +0  C0030000
[3e4c086b55dc109] jit-backend-dump}
[3e4c086b55df40e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664f49 +0  D2030000
[3e4c086b55e0124] jit-backend-dump}
[3e4c086b55e333a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664f62 +0  D5030000
[3e4c086b55e4056] jit-backend-dump}
[3e4c086b55e72e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664f75 +0  DE030000
[3e4c086b55e8005] jit-backend-dump}
[3e4c086b55eb1f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664f7f +0  F0030000
[3e4c086b55ebf13] jit-backend-dump}
[3e4c086b55ef0f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664f98 +0  F3030000
[3e4c086b55efe17] jit-backend-dump}
[3e4c086b55f2fb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664fab +0  FC030000
[3e4c086b55f3ccf] jit-backend-dump}
[3e4c086b55f6f81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664fbd +0  06040000
[3e4c086b55f7cd1] jit-backend-dump}
[3e4c086b55fae82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664fd2 +0  0D040000
[3e4c086b55fbba4] jit-backend-dump}
[3e4c086b55fed9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835664fea +0  11040000
[3e4c086b55ffac4] jit-backend-dump}
[3e4c086b5602cb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665007 +0  10040000
[3e4c086b56039f0] jit-backend-dump}
[3e4c086b5606bb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566501a +0  19040000
[3e4c086b56078df] jit-backend-dump}
[3e4c086b560aabe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665032 +0  1D040000
[3e4c086b560b7dd] jit-backend-dump}
[3e4c086b560e988] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665049 +0  22040000
[3e4c086b560f6aa] jit-backend-dump}
[3e4c086b5612886] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665057 +0  30040000
[3e4c086b56135a5] jit-backend-dump}
[3e4c086b56167bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665068 +0  3B040000
[3e4c086b56174da] jit-backend-dump}
[3e4c086b561a61e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566507e +0  41040000
[3e4c086b561b342] jit-backend-dump}
[3e4c086b561e54d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566508e +0  4D040000
[3e4c086b561f29c] jit-backend-dump}
[3e4c086b562258c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665098 +0  5F040000
[3e4c086b562331c] jit-backend-dump}
[3e4c086b56265aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356650a5 +0  6E040000
[3e4c086b56272f3] jit-backend-dump}
[3e4c086b562a53b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356650bc +0  73040000
[3e4c086b562b28d] jit-backend-dump}
[3e4c086b562e577] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356650d3 +0  78040000
[3e4c086b562f2c3] jit-backend-dump}
[3e4c086b56324ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356650dc +0  8B040000
[3e4c086b5633248] jit-backend-dump}
[3e4c086b563647a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356651ff +0  84030000
[3e4c086b56371fe] jit-backend-dump}
[3e4c086b563a49b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665209 +0  96030000
[3e4c086b563b1f4] jit-backend-dump}
[3e4c086b563e71f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660a66 +0  86440000
[3e4c086b563f460] jit-backend-dump}
[3e4c086b56434cd] jit-backend}
[3e4c086b56471c0] {jit-log-opt-bridge
# bridge out of Guard 0x3b40800 with 125 ops
[p0, p1]
+342: guard_class(p1, 16435920, descr=<Guard0x3b54500>) [p0, p1]
+354: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+358: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b54560>) [p0, p1]
debug_merge_point(0, 0, '(> i5026 typemax)')
+377: guard_not_invalidated(descr=<Guard0x3b531d8>) [p0, p1]
+377: guard_class(p0, 16504944, descr=<Guard0x3b53220>) [p0, p1]
+389: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+393: i8 = int_gt(i6, 12)
+397: guard_false(i8, descr=<Guard0x3b53268>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)))')
debug_merge_point(0, 0, '(vector-ref *class* i5026)')
+403: i10 = int_ge(i6, 0)
+407: guard_true(i10, descr=<Guard0x3b532b0>) [p0, p1]
+420: p12 = getfield_gc_r(ConstPtr(ptr11), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+424: guard_class(p12, 16623792, descr=<Guard0x3b532f8>) [p0, p1]
+438: p15 = getfield_gc_r(ConstPtr(ptr14), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+442: i16 = getarrayitem_gc_i(p15, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+447: i18 = int_ge(i16, 0)
+451: guard_true(i18, descr=<Guard0x3b53340>) [p0, p1]
+457: i20 = int_lt(i16, 4)
+461: guard_true(i20, descr=<Guard0x3b53388>) [p0, p1]
+474: p22 = getfield_gc_r(ConstPtr(ptr21), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+479: guard_class(p22, 16623792, descr=<Guard0x3b533d0>) [p0, p1]
+492: p25 = getfield_gc_r(ConstPtr(ptr24), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+497: i26 = getarrayitem_gc_i(p25, i16, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+502: i27 = int_is_zero(i26)
+505: guard_false(i27, descr=<Guard0x3b53418>) [p0, p1]
debug_merge_point(0, 0, '(let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)))')
debug_merge_point(0, 0, '(fit i5026 j5019)')
+511: p28 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+515: guard_class(p28, 16478448, descr=<Guard0x3b53460>) [p0, p1]
+529: p30 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+541: guard_value(p30, ConstPtr(ptr31), descr=<Guard0x3b534a8>) [p0, p1]
+550: p32 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+555: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3b545c0>) [p0, p1]
+574: p34 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+574: i35 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([end (vector-ref *piecemax* i)]) (let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0)))')
debug_merge_point(0, 0, '(vector-ref *piecemax* i)')
+585: p37 = getfield_gc_r(ConstPtr(ptr36), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+589: guard_class(p37, 16623792, descr=<Guard0x3b534f0>) [p0, p1]
+603: p40 = getfield_gc_r(ConstPtr(ptr39), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+607: i41 = getarrayitem_gc_i(p40, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0))')
debug_merge_point(0, 0, '(lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))')
debug_merge_point(0, 0, '(doloop4942 0)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 0)')
debug_merge_point(0, 0, '(> k end)')
+612: i43 = int_gt(0, i41)
+616: guard_false(i43, descr=<Guard0x3b53538>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+629: p45 = getfield_gc_r(ConstPtr(ptr44), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+633: guard_class(p45, 16622984, descr=<Guard0x3b53580>) [p0, p1]
+646: p48 = getfield_gc_r(ConstPtr(ptr47), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+650: p49 = getarrayitem_gc_r(p48, i6, descr=<ArrayP 8>)
+655: guard_class(p49, ConstClass(W_Vector), descr=<Guard0x3b535c8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+669: i51 = getfield_gc_i(p49, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+673: i52 = int_lt(0, i51)
+677: guard_true(i52, descr=<Guard0x3b53610>) [p0, p1]
+683: p53 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+687: guard_class(p53, 16622984, descr=<Guard0x3b53658>) [p0, p1]
+700: p55 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+704: p56 = getarrayitem_gc_r(p55, 0, descr=<ArrayP 8>)
+708: guard_class(p56, ConstClass(W_Bool), descr=<Guard0x3b536a0>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+729: i59 = instance_ptr_eq(p56, ConstPtr(ptr58))
+732: guard_false(i59, descr=<Guard0x3b536e8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
debug_merge_point(0, 0, '(+ j k)')
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+738: i61 = int_ge(i35, 0)
+742: guard_true(i61, descr=<Guard0x3b53730>) [p0, p1]
+748: i63 = int_lt(i35, 512)
+755: guard_true(i63, descr=<Guard0x3b53778>) [p0, p1]
+768: p65 = getfield_gc_r(ConstPtr(ptr64), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+772: guard_class(p65, 16622984, descr=<Guard0x3b537c0>) [p0, p1]
+784: p68 = getfield_gc_r(ConstPtr(ptr67), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+788: p69 = getarrayitem_gc_r(p68, i35, descr=<ArrayP 8>)
+793: guard_class(p69, ConstClass(W_Bool), descr=<Guard0x3b53808>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+807: i72 = instance_ptr_eq(p69, ConstPtr(ptr71))
+810: guard_true(i72, descr=<Guard0x3b53850>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+816: p73 = new_with_vtable(descr=<SizeDescr 48>)
+866: p74 = new_with_vtable(descr=<SizeDescr 16>)
+877: setfield_gc(p74, i41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+881: p75 = new_with_vtable(descr=<SizeDescr 16>)
+892: setfield_gc(p75, i35, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+896: p76 = new_with_vtable(descr=<SizeDescr 16>)
+908: setfield_gc(p76, i6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+913: p77 = new_with_vtable(descr=<SizeDescr 40>)
+925: p78 = new_with_vtable(descr=<SizeDescr 40>)
+936: setfield_gc(p78, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+940: setfield_gc(p78, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+944: setfield_gc(p78, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+955: setfield_gc(p78, ConstPtr(ptr79), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1031: i80 = getfield_gc_i(p74, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1035: i81 = getfield_gc_i(p76, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1040: setfield_gc(p77, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1051: setfield_gc(p73, ConstPtr(ptr82), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1062: setfield_gc(p73, ConstPtr(ptr83), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1066: setfield_gc(p73, p74, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1070: setfield_gc(p73, p75, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1074: setfield_gc(p73, p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1078: setfield_gc(p77, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1082: setfield_gc(p77, p78, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1093: setfield_gc(p77, ConstPtr(ptr84), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1097: i86 = int_ge(i81, 0)
+1101: guard_true(i86, descr=<Guard0x3b54620>) [p77, p73]
+1107: i88 = int_le(i81, 12)
+1111: guard_true(i88, descr=<Guard0x3b54680>) [p77, p73]
+1117: i89 = arraylen_gc(p48, descr=<ArrayP 8>)
+1117: jump(p73, 1, p77, p3, p74, i80, p76, p48, i81, descr=TargetToken(61624336))
+1184: --end of the loop--
[3e4c086b56a6148] jit-log-opt-bridge}
[3e4c086b5936048] {jit-backend
[3e4c086b59b5f29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086b59c209c] jit-backend-dump}
[3e4c086b59cd554] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356659d4 +0  23000000
[3e4c086b59cead3] jit-backend-dump}
[3e4c086b59d2d3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665cb5 +0  23000000
[3e4c086b59d3d6d] jit-backend-dump}
[3e4c086b59d743c] {jit-backend-addr
bridge out of Guard 0x3b1cf50 has address 0x7fd8356659d0 to 0x7fd835665cb0
       gc table: 0x7fd835665850
    jump target: 0x7fd8356659d0
         resops: 0x7fd8356659de
       failures: 0x7fd835665cb0
            end: 0x7fd83566611a
[3e4c086b59d97bb] jit-backend-addr}
[3e4c086b59dd0c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356659f6 +0  F8020000
[3e4c086b59ddfb6] jit-backend-dump}
[3e4c086b59e13d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665a0e +0  FC020000
[3e4c086b59e2180] jit-backend-dump}
[3e4c086b59e54fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665a1b +0  0B030000
[3e4c086b59e624c] jit-backend-dump}
[3e4c086b59e9501] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665a33 +0  0F030000
[3e4c086b59ea223] jit-backend-dump}
[3e4c086b59ed402] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665a4a +0  14030000
[3e4c086b59ee12d] jit-backend-dump}
[3e4c086b59f1307] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665a58 +0  22030000
[3e4c086b59f2022] jit-backend-dump}
[3e4c086b59f51da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665a62 +0  34030000
[3e4c086b59f5efc] jit-backend-dump}
[3e4c086b59f90a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665a7a +0  38030000
[3e4c086b59f9de4] jit-backend-dump}
[3e4c086b59fcf9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665a90 +0  3E030000
[3e4c086b59fdcc1] jit-backend-dump}
[3e4c086b5a00e7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665a9a +0  50030000
[3e4c086b5a01bc5] jit-backend-dump}
[3e4c086b5a04d74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665aa7 +0  5F030000
[3e4c086b5a05ab7] jit-backend-dump}
[3e4c086b5a08d79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665ab9 +0  69030000
[3e4c086b5a09a94] jit-backend-dump}
[3e4c086b5a0cd19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665acf +0  6F030000
[3e4c086b5a0da41] jit-backend-dump}
[3e4c086b5a10c6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665adf +0  7B030000
[3e4c086b5a1198b] jit-backend-dump}
[3e4c086b5a14b99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665af6 +0  80030000
[3e4c086b5a158b7] jit-backend-dump}
[3e4c086b5a18af9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665b03 +0  8F030000
[3e4c086b5a19845] jit-backend-dump}
[3e4c086b5a1ca65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665b0d +0  A1030000
[3e4c086b5a1d7ab] jit-backend-dump}
[3e4c086b5a2098b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665b1a +0  B0030000
[3e4c086b5a216a6] jit-backend-dump}
[3e4c086b5a2486a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665b32 +0  B4030000
[3e4c086b5a25598] jit-backend-dump}
[3e4c086b5a287a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665b48 +0  BA030000
[3e4c086b5a294c7] jit-backend-dump}
[3e4c086b5a2c6bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665b51 +0  CD030000
[3e4c086b5a2d3e4] jit-backend-dump}
[3e4c086b5a30601] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665b66 +0  D4030000
[3e4c086b5a3131c] jit-backend-dump}
[3e4c086b5a3458c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665b78 +0  DE030000
[3e4c086b5a352aa] jit-backend-dump}
[3e4c086b5a384f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665b8c +0  E6030000
[3e4c086b5a3920d] jit-backend-dump}
[3e4c086b5a3c44f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665ba1 +0  ED030000
[3e4c086b5a3d18f] jit-backend-dump}
[3e4c086b5a4035c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665bb3 +0  F7030000
[3e4c086b5a41087] jit-backend-dump}
[3e4c086b5a4425a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665bca +0  FC030000
[3e4c086b5a44f82] jit-backend-dump}
[3e4c086b5a48152] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665bd8 +0  0A040000
[3e4c086b5a48e74] jit-backend-dump}
[3e4c086b5a4c097] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665be5 +0  19040000
[3e4c086b5a4cdb5] jit-backend-dump}
[3e4c086b5a4ffcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665bf9 +0  21040000
[3e4c086b5a50cf4] jit-backend-dump}
[3e4c086b5a53e96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665c03 +0  33040000
[3e4c086b5a54bd6] jit-backend-dump}
[3e4c086b5a57dd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665c0d +0  45040000
[3e4c086b5a58af3] jit-backend-dump}
[3e4c086b5a5bd10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665c2b +0  43040000
[3e4c086b5a5ca31] jit-backend-dump}
[3e4c086b5a5fbf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665c38 +0  52040000
[3e4c086b5a6091a] jit-backend-dump}
[3e4c086b5a63b00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665c45 +0  61040000
[3e4c086b5a6482a] jit-backend-dump}
[3e4c086b5a679e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665c64 +0  5E040000
[3e4c086b5a6870a] jit-backend-dump}
[3e4c086b5a6b97c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665c71 +0  6D040000
[3e4c086b5a6c69b] jit-backend-dump}
[3e4c086b5a6f8e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835665c7f +0  7B040000
[3e4c086b5a70613] jit-backend-dump}
[3e4c086b5a73ac8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565f037 +0  95690000
[3e4c086b5a74805] jit-backend-dump}
[3e4c086b5a78967] jit-backend}
[3e4c086b5a7c5e9] {jit-log-opt-bridge
# bridge out of Guard 0x3b1cf50 with 111 ops
[i0, p1, p2, p3]
+406: guard_not_invalidated(descr=<Guard0x3b54740>) [i0, p1, p2, p3]
+406: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+417: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3b53ec8>) [i0, p1, p2, p3]
+426: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+430: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3b548c0>) [i0, p1, p2, p3]
+450: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+454: i9 = int_gt(i0, i8)
+457: guard_false(i9, descr=<Guard0x3b53e80>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
+463: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+468: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3b54860>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+487: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+491: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x3b54800>) [i0, p1, p2, p3]
+510: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+514: i16 = int_ge(i14, 0)
+518: guard_true(i16, descr=<Guard0x3b53e38>) [i0, p1, p2, p3]
+524: i18 = int_lt(i14, 13)
+528: guard_true(i18, descr=<Guard0x3b53df0>) [i0, p1, p2, p3]
+541: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+545: guard_class(p20, 16622984, descr=<Guard0x3b53da8>) [i0, p1, p2, p3]
+558: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+562: p24 = getarrayitem_gc_r(p23, i14, descr=<ArrayP 8>)
+567: guard_class(p24, ConstClass(W_Vector), descr=<Guard0x3b53d60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+580: i27 = int_ge(i0, 0)
+584: guard_true(i27, descr=<Guard0x3b53d18>) [i0, p1, p2, p3]
+590: i28 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+594: i29 = int_lt(i0, i28)
+597: guard_true(i29, descr=<Guard0x3b53cd0>) [i0, p1, p2, p3]
+603: p30 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+607: guard_class(p30, 16622984, descr=<Guard0x3b53c88>) [i0, p1, p2, p3]
+621: p32 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+625: p33 = getarrayitem_gc_r(p32, i0, descr=<ArrayP 8>)
+630: guard_class(p33, ConstClass(W_Bool), descr=<Guard0x3b53c40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+650: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+653: guard_false(i36, descr=<Guard0x3b53bf8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
+659: p37 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j k)')
+659: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+663: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3b547a0>) [i0, p1, p2, p3]
+682: i40 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+686: i41 = int_add_ovf(i40, i0)
+689: guard_no_overflow(descr=<Guard0x3b53bb0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+695: i43 = int_ge(i41, 0)
+699: guard_true(i43, descr=<Guard0x3b53b68>) [i0, p1, p2, p3]
+705: i45 = int_lt(i41, 512)
+712: guard_true(i45, descr=<Guard0x3b53b20>) [i0, p1, p2, p3]
+725: p47 = getfield_gc_r(ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+729: guard_class(p47, 16622984, descr=<Guard0x3b53ad8>) [i0, p1, p2, p3]
+742: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+746: p51 = getarrayitem_gc_r(p50, i41, descr=<ArrayP 8>)
+751: guard_class(p51, ConstClass(W_Bool), descr=<Guard0x3b53a90>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+764: i54 = instance_ptr_eq(p51, ConstPtr(ptr53))
+767: guard_false(i54, descr=<Guard0x3b53a48>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(begin (void) (let ([if2 (> k end)]) (if if2 #t #f)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([if2 (> k end)]) (if if2 #t #f))')
debug_merge_point(0, 0, '(> k end)')
debug_merge_point(0, 0, '(if if2 #t #f)')
debug_merge_point(0, 0, '#f')
+773: p55 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+785: guard_value(p55, ConstPtr(ptr56), descr=<Guard0x3b53fa0>) [i0, p1, p2, p3]
+794: p57 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+794: p58 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)) from (> k end)')
debug_merge_point(0, 0, '(void)')
+799: guard_class(p58, 16435208, descr=<Guard0x3b74020>) [i0, p1, p2, p3]
+812: p60 = getfield_gc_r(p58, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+823: guard_value(p60, ConstPtr(ptr61), descr=<Guard0x3b74068>) [i0, p1, p2, p3]
+832: p62 = getfield_gc_r(p58, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+836: p63 = getfield_gc_r(p58, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)) from (void)')
+840: guard_class(p62, 16504944, descr=<Guard0x3b740b0>) [i0, p1, p2, p3]
+853: p65 = getfield_gc_r(p62, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+857: guard_class(p63, 16435920, descr=<Guard0x3b740f8>) [i0, p1, p2, p3]
+871: p67 = getfield_gc_r(p63, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+875: guard_nonnull_class(p67, ConstClass(ForwardLink), descr=<Guard0x3b54920>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5026 1)')
+894: i69 = getfield_gc_i(p62, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+898: i71 = int_add_ovf(i69, 1)
+902: guard_no_overflow(descr=<Guard0x3b74140>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
+908: guard_class(p65, 16478448, descr=<Guard0x3b74188>) [i0, p1, p2, p3]
+921: p73 = getfield_gc_r(p65, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+932: guard_value(p73, ConstPtr(ptr74), descr=<Guard0x3b741d0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+941: i76 = int_ge(i71, 1)
+945: guard_true(i76, descr=<Guard0x3b54980>) [p63, i71, p65, None, None, None, None]
+951: i79 = int_le(i71, 13)
+955: guard_true(i79, descr=<Guard0x3b549e0>) [p63, i71, p65, None, None, None, None]
+968: p81 = getfield_gc_r(ConstPtr(ptr80), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+972: guard_nonnull_class(p81, 16623792, descr=<Guard0x3b54a40>) [p63, i71, p65, None, None, None, None]
+991: p84 = getfield_gc_r(ConstPtr(ptr83), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+995: guard_nonnull(p84, descr=<Guard0x3b54aa0>) [p63, i71, p65, None, None, None, None]
+1004: guard_gc_type(p84, 520, descr=<Guard0x3b54b00>) [p63, i71, p65, None, None, None, None]
+1017: i86 = arraylen_gc(p84, descr=<ArrayS 8>)
+1024: p88 = getfield_gc_r(ConstPtr(ptr87), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1028: guard_nonnull_class(p88, 16623792, descr=<Guard0x3b54b60>) [p63, i71, p65, None, None, None, None]
+1048: p91 = getfield_gc_r(ConstPtr(ptr90), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1052: guard_nonnull(p91, descr=<Guard0x3b54bc0>) [p63, i71, p65, None, None, None, None]
+1061: guard_gc_type(p91, 520, descr=<Guard0x3b54c20>) [p63, i71, p65, None, None, None, None]
+1075: i93 = arraylen_gc(p91, descr=<ArrayS 8>)
+1075: jump(p65, i71, p63, p67, p84, p91, descr=TargetToken(62080048))
+1120: --end of the loop--
[3e4c086b5ad86bc] jit-log-opt-bridge}
[3e4c086b5d0b8b3] {jit-backend
[3e4c086b5d7c30a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356662f
[3e4c086b5d85bec] jit-backend-dump}
[3e4c086b5d90eb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666404 +0  23000000
[3e4c086b5d9248a] jit-backend-dump}
[3e4c086b5d9638b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666625 +0  23000000
[3e4c086b5d97366] jit-backend-dump}
[3e4c086b5d9a848] {jit-backend-addr
bridge out of Guard 0x3b1d6a0 has address 0x7fd835666400 to 0x7fd835666620
       gc table: 0x7fd8356662f0
    jump target: 0x7fd835666400
         resops: 0x7fd83566640e
       failures: 0x7fd835666620
            end: 0x7fd83566693a
[3e4c086b5d9cca4] jit-backend-addr}
[3e4c086b5da08da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566642d +0  31020000
[3e4c086b5da17f4] jit-backend-dump}
[3e4c086b5da4d60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666445 +0  35020000
[3e4c086b5da5ab9] jit-backend-dump}
[3e4c086b5da8d9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666452 +0  44020000
[3e4c086b5da9abb] jit-backend-dump}
[3e4c086b5daccb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566646d +0  45020000
[3e4c086b5dad9d8] jit-backend-dump}
[3e4c086b5db0be2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666483 +0  4B020000
[3e4c086b5db1916] jit-backend-dump}
[3e4c086b5db4b45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566649a +0  50020000
[3e4c086b5db584b] jit-backend-dump}
[3e4c086b5db8a4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356664a8 +0  5E020000
[3e4c086b5db9746] jit-backend-dump}
[3e4c086b5dbc9a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356664b7 +0  6B020000
[3e4c086b5dbd6d1] jit-backend-dump}
[3e4c086b5dc0909] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356664c1 +0  7D020000
[3e4c086b5dc160c] jit-backend-dump}
[3e4c086b5dc47e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356664d9 +0  81020000
[3e4c086b5dc54d6] jit-backend-dump}
[3e4c086b5dc86cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356664f3 +0  83020000
[3e4c086b5dc93ce] jit-backend-dump}
[3e4c086b5dcc62e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666502 +0  90020000
[3e4c086b5dcd341] jit-backend-dump}
[3e4c086b5dd0567] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566650c +0  A2020000
[3e4c086b5dd126a] jit-backend-dump}
[3e4c086b5dd4477] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666525 +0  A5020000
[3e4c086b5dd5177] jit-backend-dump}
[3e4c086b5dd838b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666538 +0  AE020000
[3e4c086b5dd9091] jit-backend-dump}
[3e4c086b5ddc298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666542 +0  C0020000
[3e4c086b5ddcfb4] jit-backend-dump}
[3e4c086b5de013a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566654c +0  D2020000
[3e4c086b5de0e44] jit-backend-dump}
[3e4c086b5de407c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666565 +0  D5020000
[3e4c086b5de4d60] jit-backend-dump}
[3e4c086b5de7f2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566657a +0  DC020000
[3e4c086b5de8c18] jit-backend-dump}
[3e4c086b5debdc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566658b +0  E7020000
[3e4c086b5decab1] jit-backend-dump}
[3e4c086b5df003c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356665a1 +0  ED020000
[3e4c086b5df0d42] jit-backend-dump}
[3e4c086b5df3fd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356665af +0  FB020000
[3e4c086b5df4d01] jit-backend-dump}
[3e4c086b5df7f0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356665bc +0  0A030000
[3e4c086b5df8c0e] jit-backend-dump}
[3e4c086b5dfbdc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356665d0 +0  12030000
[3e4c086b5dfcac0] jit-backend-dump}
[3e4c086b5dffc84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356665da +0  24030000
[3e4c086b5e0096e] jit-backend-dump}
[3e4c086b5e03b2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356665e4 +0  36030000
[3e4c086b5e04866] jit-backend-dump}
[3e4c086b5e07c8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565fd3d +0  BF660000
[3e4c086b5e08960] jit-backend-dump}
[3e4c086b5e0c9d7] jit-backend}
[3e4c086b5e1062b] {jit-log-opt-bridge
# bridge out of Guard 0x3b1d6a0 with 79 ops
[i0, p1, p2, p3]
+294: guard_not_invalidated(descr=<Guard0x3b54c80>) [i0, p1, p2, p3]
+294: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+312: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3b74218>) [i0, p1, p2, p3]
+321: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+325: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3b54ce0>) [i0, p1, p2, p3]
+345: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+349: i9 = int_gt(i0, i8)
+352: guard_true(i9, descr=<Guard0x3b74260>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))')
debug_merge_point(0, 0, '(void)')
+358: p10 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+376: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3b742a8>) [i0, p1, p2, p3]
+385: p12 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+389: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand22 (vector-ref *class* i4997)][AppRand23 (vector-ref *class* i4997)]) (let ([AppRand24 (vector-ref *piececount* AppRand23)]) (let ([AppRand25 (+ AppRand24 1)]) (vector-set! *piececount* AppRand22 AppRand25))))')
+393: guard_class(p13, 16435208, descr=<Guard0x3b742f0>) [i0, p1, p2, p3]
+407: p15 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+411: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x3b54d40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *class* i4997)')
+430: guard_class(p12, 16503888, descr=<Guard0x3b74338>) [i0, p1, p2, p3]
+444: i18 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+449: i20 = int_ge(i18, 0)
+453: guard_true(i20, descr=<Guard0x3b74380>) [i0, p1, p2, p3]
+459: i22 = int_lt(i18, 13)
+463: guard_true(i22, descr=<Guard0x3b743c8>) [i0, p1, p2, p3]
+476: p24 = getfield_gc_r(ConstPtr(ptr23), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+480: guard_class(p24, 16623792, descr=<Guard0x3b74410>) [i0, p1, p2, p3]
+493: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+497: i28 = getarrayitem_gc_i(p27, i18, descr=<ArrayS 8>)
+502: p29 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+507: guard_class(p29, 16505296, descr=<Guard0x3b74458>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *class* i4997)')
+519: i31 = getarrayitem_gc_i(p27, i18, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand24 (vector-ref *piececount* AppRand23)]) (let ([AppRand25 (+ AppRand24 1)]) (vector-set! *piececount* AppRand22 AppRand25)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand23)')
+524: i33 = int_ge(i31, 0)
+528: guard_true(i33, descr=<Guard0x3b744a0>) [i0, p1, p2, p3]
+534: i35 = int_lt(i31, 4)
+538: guard_true(i35, descr=<Guard0x3b744e8>) [i0, p1, p2, p3]
+551: p37 = getfield_gc_r(ConstPtr(ptr36), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+555: guard_class(p37, 16623792, descr=<Guard0x3b74530>) [i0, p1, p2, p3]
+569: p40 = getfield_gc_r(ConstPtr(ptr39), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+573: i41 = getarrayitem_gc_i(p40, i31, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand25 (+ AppRand24 1)]) (vector-set! *piececount* AppRand22 AppRand25))')
debug_merge_point(0, 0, '(+ AppRand24 1)')
+578: i43 = int_add_ovf(i41, 1)
+582: guard_no_overflow(descr=<Guard0x3b74578>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! *piececount* AppRand22 AppRand25)')
+588: i45 = int_ge(i28, 0)
+592: guard_true(i45, descr=<Guard0x3b745c0>) [i0, p1, p2, p3]
+598: i47 = int_lt(i28, 4)
+602: guard_true(i47, descr=<Guard0x3b74608>) [i0, p1, p2, p3]
+608: setarrayitem_gc(p40, i28, i43, descr=<ArrayS 8>)
+613: p48 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+624: guard_value(p48, ConstPtr(ptr49), descr=<Guard0x3b54da0>) [p48, p13, None, None, None, None]
+633: p51 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+637: p52 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)) from (vector-set! *piececount* AppRand22 AppRand25)')
+641: guard_class(p51, 16504944, descr=<Guard0x3b74650>) [p48, p13, None, None, None, None]
+654: p54 = getfield_gc_r(p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+658: guard_class(p52, 16435920, descr=<Guard0x3b74698>) [p48, p13, None, None, None, None]
+671: p56 = getfield_gc_r(p52, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+675: guard_nonnull_class(p56, ConstClass(ForwardLink), descr=<Guard0x3b54e00>) [p48, p13, None, None, None, None]
debug_merge_point(0, 0, '(+ i5026 1)')
+693: i58 = getfield_gc_i(p51, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+697: i60 = int_add_ovf(i58, 1)
+701: guard_no_overflow(descr=<Guard0x3b746e0>) [p48, p13, None, None, None, None]
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
+707: guard_class(p54, 16478448, descr=<Guard0x3b74728>) [p48, p13, None, None, None, None]
+720: p62 = getfield_gc_r(p54, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+731: guard_value(p62, ConstPtr(ptr63), descr=<Guard0x3b74770>) [p48, p13, None, None, None, None]
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+740: i65 = int_ge(i60, 1)
+744: guard_true(i65, descr=<Guard0x3b54e60>) [p52, i60, p54, None, None, None, None]
+750: i67 = int_le(i60, 13)
+754: guard_true(i67, descr=<Guard0x3b54ec0>) [p52, i60, p54, None, None, None, None]
+760: i68 = arraylen_gc(p27, descr=<ArrayS 8>)
+760: i69 = arraylen_gc(p40, descr=<ArrayS 8>)
+760: jump(p54, i60, p52, p56, p27, p40, descr=TargetToken(62080048))
+816: --end of the loop--
[3e4c086b5e5d277] jit-log-opt-bridge}
[3e4c086b611d3df] {jit-backend
[3e4c086b61b8154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666b
[3e4c086b61c26fb] jit-backend-dump}
[3e4c086b61cd773] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666c44 +0  23000000
[3e4c086b61cecbe] jit-backend-dump}
[3e4c086b61d2d7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666f85 +0  23000000
[3e4c086b61d3d31] jit-backend-dump}
[3e4c086b61d736d] {jit-backend-addr
bridge out of Guard 0x3b409b0 has address 0x7fd835666c40 to 0x7fd835666f80
       gc table: 0x7fd835666b10
    jump target: 0x7fd835666c40
         resops: 0x7fd835666c4e
       failures: 0x7fd835666f80
            end: 0x7fd83566729b
[3e4c086b61d981c] jit-backend-addr}
[3e4c086b61dd097] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666c5c +0  7F030000
[3e4c086b61ddfa8] jit-backend-dump}
[3e4c086b61e145f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666c7a +0  7D030000
[3e4c086b61e2208] jit-backend-dump}
[3e4c086b61e5578] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666c84 +0  8F030000
[3e4c086b61e62b2] jit-backend-dump}
[3e4c086b61e9583] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666c9d +0  92030000
[3e4c086b61ea31f] jit-backend-dump}
[3e4c086b61ed686] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666cb0 +0  9B030000
[3e4c086b61ee38f] jit-backend-dump}
[3e4c086b61f15e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666cba +0  AD030000
[3e4c086b61f2330] jit-backend-dump}
[3e4c086b61f555c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666cd3 +0  B0030000
[3e4c086b61f6293] jit-backend-dump}
[3e4c086b61f94a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666ce6 +0  B9030000
[3e4c086b61fa1a9] jit-backend-dump}
[3e4c086b61fd406] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666d02 +0  B9030000
[3e4c086b61fe137] jit-backend-dump}
[3e4c086b62013ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666d1a +0  BD030000
[3e4c086b62020d7] jit-backend-dump}
[3e4c086b6205387] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666d36 +0  BD030000
[3e4c086b6206099] jit-backend-dump}
[3e4c086b6209386] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666d49 +0  C6030000
[3e4c086b620a098] jit-backend-dump}
[3e4c086b620d31d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666d61 +0  CA030000
[3e4c086b620e02f] jit-backend-dump}
[3e4c086b621127a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666d77 +0  D0030000
[3e4c086b6211f86] jit-backend-dump}
[3e4c086b6215254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666d85 +0  DE030000
[3e4c086b6215f76] jit-backend-dump}
[3e4c086b6219210] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666d95 +0  EA030000
[3e4c086b6219f2f] jit-backend-dump}
[3e4c086b621d1ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666daa +0  F1030000
[3e4c086b621defd] jit-backend-dump}
[3e4c086b6221141] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666dba +0  FD030000
[3e4c086b6221e5d] jit-backend-dump}
[3e4c086b62250d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666dc4 +0  0F040000
[3e4c086b6225dfa] jit-backend-dump}
[3e4c086b6228fc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666dd1 +0  1E040000
[3e4c086b6229cd0] jit-backend-dump}
[3e4c086b622cf49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666de8 +0  23040000
[3e4c086b622dc5b] jit-backend-dump}
[3e4c086b6230e84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666dfe +0  29040000
[3e4c086b6231bc7] jit-backend-dump}
[3e4c086b6234e06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666e07 +0  3C040000
[3e4c086b6235b18] jit-backend-dump}
[3e4c086b6238cf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666f34 +0  2B030000
[3e4c086b6239a0d] jit-backend-dump}
[3e4c086b623cc58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835666f3e +0  3D030000
[3e4c086b623d96d] jit-backend-dump}
[3e4c086b6240daa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660ae5 +0  57610000
[3e4c086b6241ac6] jit-backend-dump}
[3e4c086b6245a9a] jit-backend}
[3e4c086b6249636] {jit-log-opt-bridge
# bridge out of Guard 0x3b409b0 with 122 ops
[i0, p1, p2, p3]
+326: guard_not_invalidated(descr=<Guard0x3b54f20>) [i0, p1, p2, p3]
+326: i5 = int_gt(i0, 12)
+330: guard_false(i5, descr=<Guard0x3b747b8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)))')
+336: p6 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+347: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3b54f80>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *class* i5026)')
+366: i9 = int_ge(i0, 0)
+370: guard_true(i9, descr=<Guard0x3b74800>) [i0, p1, p2, p3]
+383: p11 = getfield_gc_r(ConstPtr(ptr10), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+387: guard_class(p11, 16623792, descr=<Guard0x3b74848>) [i0, p1, p2, p3]
+401: p14 = getfield_gc_r(ConstPtr(ptr13), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: i15 = getarrayitem_gc_i(p14, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+410: i17 = int_ge(i15, 0)
+414: guard_true(i17, descr=<Guard0x3b74890>) [i0, p1, p2, p3]
+420: i19 = int_lt(i15, 4)
+424: guard_true(i19, descr=<Guard0x3b748d8>) [i0, p1, p2, p3]
+437: p21 = getfield_gc_r(ConstPtr(ptr20), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+442: guard_class(p21, 16623792, descr=<Guard0x3b74920>) [i0, p1, p2, p3]
+455: p24 = getfield_gc_r(ConstPtr(ptr23), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+460: i25 = getarrayitem_gc_i(p24, i15, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+465: i26 = int_is_zero(i25)
+468: guard_false(i26, descr=<Guard0x3b74968>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)))')
debug_merge_point(0, 0, '(fit i5026 j5019)')
+474: p27 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+493: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x3b749b0>) [i0, p1, p2, p3]
+502: p29 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+507: guard_nonnull_class(p29, ConstClass(W_Fixnum), descr=<Guard0x3b54fe0>) [i0, p1, p2, p3]
+526: p31 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+526: i32 = getfield_gc_i(p29, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([end (vector-ref *piecemax* i)]) (let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0)))')
debug_merge_point(0, 0, '(vector-ref *piecemax* i)')
+537: p34 = getfield_gc_r(ConstPtr(ptr33), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+541: guard_class(p34, 16623792, descr=<Guard0x3b749f8>) [i0, p1, p2, p3]
+554: p37 = getfield_gc_r(ConstPtr(ptr36), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+558: i38 = getarrayitem_gc_i(p37, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0))')
debug_merge_point(0, 0, '(lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))')
debug_merge_point(0, 0, '(doloop4942 0)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 0)')
debug_merge_point(0, 0, '(> k end)')
+563: i40 = int_gt(0, i38)
+567: guard_false(i40, descr=<Guard0x3b74a40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+580: p42 = getfield_gc_r(ConstPtr(ptr41), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+584: guard_class(p42, 16622984, descr=<Guard0x3b74a88>) [i0, p1, p2, p3]
+597: p45 = getfield_gc_r(ConstPtr(ptr44), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+601: p46 = getarrayitem_gc_r(p45, i0, descr=<ArrayP 8>)
+606: guard_class(p46, ConstClass(W_Vector), descr=<Guard0x3b74ad0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+619: i48 = getfield_gc_i(p46, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+623: i49 = int_lt(0, i48)
+627: guard_true(i49, descr=<Guard0x3b74b18>) [i0, p1, p2, p3]
+633: p50 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+637: guard_class(p50, 16622984, descr=<Guard0x3b74b60>) [i0, p1, p2, p3]
+649: p52 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+653: p53 = getarrayitem_gc_r(p52, 0, descr=<ArrayP 8>)
+657: guard_class(p53, ConstClass(W_Bool), descr=<Guard0x3b74ba8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+677: i56 = instance_ptr_eq(p53, ConstPtr(ptr55))
+680: guard_false(i56, descr=<Guard0x3b74bf0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
debug_merge_point(0, 0, '(+ j k)')
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+686: i58 = int_ge(i32, 0)
+690: guard_true(i58, descr=<Guard0x3b74c38>) [i0, p1, p2, p3]
+696: i60 = int_lt(i32, 512)
+703: guard_true(i60, descr=<Guard0x3b74c80>) [i0, p1, p2, p3]
+716: p62 = getfield_gc_r(ConstPtr(ptr61), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+720: guard_class(p62, 16622984, descr=<Guard0x3b74cc8>) [i0, p1, p2, p3]
+732: p65 = getfield_gc_r(ConstPtr(ptr64), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+736: p66 = getarrayitem_gc_r(p65, i32, descr=<ArrayP 8>)
+741: guard_class(p66, ConstClass(W_Bool), descr=<Guard0x3b74d10>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+754: i69 = instance_ptr_eq(p66, ConstPtr(ptr68))
+757: guard_true(i69, descr=<Guard0x3b74d58>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+763: p70 = new_with_vtable(descr=<SizeDescr 48>)
+807: p71 = new_with_vtable(descr=<SizeDescr 16>)
+818: setfield_gc(p71, i38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+822: p72 = new_with_vtable(descr=<SizeDescr 16>)
+833: setfield_gc(p72, i32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+837: p73 = new_with_vtable(descr=<SizeDescr 16>)
+849: setfield_gc(p73, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+853: p74 = new_with_vtable(descr=<SizeDescr 40>)
+864: p75 = new_with_vtable(descr=<SizeDescr 24>)
+875: setfield_gc(p75, p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+879: setfield_gc(p75, i0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+883: p76 = new_with_vtable(descr=<SizeDescr 40>)
+894: setfield_gc(p76, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+898: setfield_gc(p76, p75, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+902: setfield_gc(p76, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+913: setfield_gc(p76, ConstPtr(ptr77), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+989: i78 = getfield_gc_i(p71, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+993: i79 = getfield_gc_i(p73, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+997: setfield_gc(p74, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1008: setfield_gc(p70, ConstPtr(ptr80), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1012: setfield_gc(p70, p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1023: setfield_gc(p70, ConstPtr(ptr81), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1027: setfield_gc(p70, p72, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1031: setfield_gc(p70, p73, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1035: setfield_gc(p74, p75, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1039: setfield_gc(p74, p76, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1050: setfield_gc(p74, ConstPtr(ptr82), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1054: i84 = int_ge(i79, 0)
+1058: guard_true(i84, descr=<Guard0x3b55040>) [p74, p70, None, None, None, None]
+1064: i87 = int_le(i79, 12)
+1068: guard_true(i87, descr=<Guard0x3b550a0>) [p74, p70, None, None, None, None]
+1074: i88 = arraylen_gc(p45, descr=<ArrayP 8>)
+1074: jump(p70, 1, p74, p6, p71, i78, p73, p45, i79, descr=TargetToken(61624336))
+1136: --end of the loop--
[3e4c086b62aa186] jit-log-opt-bridge}
[3e4c086b656b221] {jit-backend
[3e4c086b6611981] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356674a
[3e4c086b661cf97] jit-backend-dump}
[3e4c086b662892f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356675e4 +0  23000000
[3e4c086b6629f0d] jit-backend-dump}
[3e4c086b662de9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667975 +0  23000000
[3e4c086b662ee0e] jit-backend-dump}
[3e4c086b663213b] {jit-backend-addr
bridge out of Guard 0x3b408d8 has address 0x7fd8356675e0 to 0x7fd835667970
       gc table: 0x7fd8356674a0
    jump target: 0x7fd8356675e0
         resops: 0x7fd8356675ee
       failures: 0x7fd835667970
            end: 0x7fd835667d06
[3e4c086b66345ac] jit-backend-addr}
[3e4c086b6637f6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356675fc +0  F6030000
[3e4c086b6638e52] jit-backend-dump}
[3e4c086b663c2eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667626 +0  E8030000
[3e4c086b663d06e] jit-backend-dump}
[3e4c086b664028b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667645 +0  E5030000
[3e4c086b6640fb3] jit-backend-dump}
[3e4c086b6644256] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667653 +0  F3030000
[3e4c086b6644f78] jit-backend-dump}
[3e4c086b6648126] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566766b +0  F7030000
[3e4c086b6648e4e] jit-backend-dump}
[3e4c086b664c012] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667680 +0  FE030000
[3e4c086b664cd2b] jit-backend-dump}
[3e4c086b664fed9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667696 +0  04040000
[3e4c086b6650c13] jit-backend-dump}
[3e4c086b6653d9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356676a4 +0  12040000
[3e4c086b6654ab9] jit-backend-dump}
[3e4c086b6657c77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356676b6 +0  1C040000
[3e4c086b665897d] jit-backend-dump}
[3e4c086b665bb19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356676ca +0  24040000
[3e4c086b665c81c] jit-backend-dump}
[3e4c086b665f9a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356676e5 +0  25040000
[3e4c086b66606be] jit-backend-dump}
[3e4c086b6663848] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356676f2 +0  34040000
[3e4c086b6664570] jit-backend-dump}
[3e4c086b666771f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566770f +0  33040000
[3e4c086b6668434] jit-backend-dump}
[3e4c086b666b60a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566771e +0  40040000
[3e4c086b666c31d] jit-backend-dump}
[3e4c086b666f4c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667728 +0  52040000
[3e4c086b66701de] jit-backend-dump}
[3e4c086b6673392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667741 +0  55040000
[3e4c086b66740b4] jit-backend-dump}
[3e4c086b66772a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667755 +0  5D040000
[3e4c086b6677fb2] jit-backend-dump}
[3e4c086b667b179] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566776c +0  62040000
[3e4c086b667bea4] jit-backend-dump}
[3e4c086b667f135] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667782 +0  68040000
[3e4c086b667fe6c] jit-backend-dump}
[3e4c086b668308c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667790 +0  76040000
[3e4c086b6683dc9] jit-backend-dump}
[3e4c086b6686fbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356677a0 +0  82040000
[3e4c086b6687d07] jit-backend-dump}
[3e4c086b668af36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356677b5 +0  89040000
[3e4c086b668bc67] jit-backend-dump}
[3e4c086b668eed4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356677c5 +0  95040000
[3e4c086b668fbfb] jit-backend-dump}
[3e4c086b6692dea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356677dc +0  9A040000
[3e4c086b6693b09] jit-backend-dump}
[3e4c086b6696c7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356677e6 +0  AC040000
[3e4c086b669799f] jit-backend-dump}
[3e4c086b669aba3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356677f3 +0  BB040000
[3e4c086b669b8bc] jit-backend-dump}
[3e4c086b669eacc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667918 +0  B2030000
[3e4c086b669f800] jit-backend-dump}
[3e4c086b66a2978] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667922 +0  C4030000
[3e4c086b66a368d] jit-backend-dump}
[3e4c086b66a6a9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835660abe +0  1E6B0000
[3e4c086b66a77d0] jit-backend-dump}
[3e4c086b66ab907] jit-backend}
[3e4c086b66af63e] {jit-log-opt-bridge
# bridge out of Guard 0x3b408d8 with 130 ops
[i0, p1, p2, p3]
+342: guard_not_invalidated(descr=<Guard0x3b55100>) [i0, p1, p2, p3]
+342: i5 = int_gt(i0, 12)
+346: guard_true(i5, descr=<Guard0x3b74da0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f)')
+352: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+363: p7 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+374: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x3b55160>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0))')
debug_merge_point(0, 0, '(+ *kount* 1)')
+401: p10 = getfield_gc_r(ConstPtr(ptr9), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+406: guard_nonnull_class(p10, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3b551c0>) [i0, p1, p2, p3]
+425: i12 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+429: i14 = int_add_ovf(i12, 1)
+433: guard_no_overflow(descr=<Guard0x3b74de8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(set! *kount* SetBang0)')
debug_merge_point(0, 0, '#f')
+439: p15 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+443: setfield_gc(p10, i14, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+454: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x3b55220>) [p2, p6, p15, None, None, None, None]
+463: p18 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+467: p19 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))) from (+ *kount* 1)')
+471: guard_class(p19, 16435208, descr=<Guard0x3b74e30>) [p2, p6, p15, None, None, None, None]
+484: p21 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+488: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x3b55280>) [p2, p6, p15, None, None, None, None]
debug_merge_point(0, 0, '(if or-part5035 or-part5035 (zero? CellRef(k5021)))')
debug_merge_point(0, 0, '(zero? CellRef(k5021))')
+506: guard_class(p18, 16504944, descr=<Guard0x3b74e78>) [p2, p6, p15, None, None, None, None]
+520: p24 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+525: guard_class(p24, 16478448, descr=<Guard0x3b74ec0>) [p2, p6, p15, None, None, None, None]
+538: p26 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+549: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x3b74f08>) [p2, p6, p15, None, None, None, None]
+558: p28 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+562: p29 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+566: guard_nonnull_class(p29, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3b552e0>) [p2, p6, p15, None, None, None, None]
+585: i31 = getfield_gc_i(p29, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+589: i32 = int_is_zero(i31)
+592: guard_false(i32, descr=<Guard0x3b74f50>) [p2, p6, p15, None, None, None, None]
debug_merge_point(0, 0, '(if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))')
debug_merge_point(0, 0, '(puzzle-remove i5026 j5019)')
+598: i33 = getfield_gc_i(p18, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+603: p34 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+607: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x3b55340>) [p2, p6, p15, None, None, None, None]
+627: p36 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+627: i37 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([end5001 (vector-ref *piecemax* i4997)]) (let ([doloop5004 (lambda (k5006) (let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))))]) (doloop5004 0) (let ([AppRand22 (vector-ref *class* i4997)][AppRand23 (vector-ref *class* i4997)]) (let ([AppRand24 (vector-ref *piececount* AppRand23)]) (let ([AppRand25 (+ AppRand24 1)]) (vector-set! *piececount* AppRand22 AppRand25))))))')
debug_merge_point(0, 0, '(vector-ref *piecemax* i4997)')
+632: i39 = int_ge(i33, 0)
+636: guard_true(i39, descr=<Guard0x3b74f98>) [p2, p6, p15, None, None, None, None]
+642: i41 = int_lt(i33, 13)
+646: guard_true(i41, descr=<Guard0x3b74fe0>) [p2, p6, p15, None, None, None, None]
+659: p43 = getfield_gc_r(ConstPtr(ptr42), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+664: guard_class(p43, 16623792, descr=<Guard0x3b75028>) [p2, p6, p15, None, None, None, None]
+677: p46 = getfield_gc_r(ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+682: i47 = getarrayitem_gc_i(p46, i33, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop5004 (lambda (k5006) (let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))))]) (doloop5004 0) (let ([AppRand22 (vector-ref *class* i4997)][AppRand23 (vector-ref *class* i4997)]) (let ([AppRand24 (vector-ref *piececount* AppRand23)]) (let ([AppRand25 (+ AppRand24 1)]) (vector-set! *piececount* AppRand22 AppRand25)))))')
debug_merge_point(0, 0, '(lambda (k5006) (let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))))')
debug_merge_point(0, 0, '(doloop5004 0)')
debug_merge_point(0, 0, '(let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 0)')
debug_merge_point(0, 0, '(> k5006 end5001)')
+687: i49 = int_gt(0, i47)
+691: guard_false(i49, descr=<Guard0x3b75070>) [p2, p6, p15, None, None, None, None]
debug_merge_point(0, 0, '(if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))')
debug_merge_point(0, 0, '(let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21)))')
debug_merge_point(0, 0, '(vector-ref *p* i4997)')
+704: p51 = getfield_gc_r(ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+708: guard_class(p51, 16622984, descr=<Guard0x3b750b8>) [p2, p6, p15, None, None, None, None]
+720: p54 = getfield_gc_r(ConstPtr(ptr53), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+724: p55 = getarrayitem_gc_r(p54, i33, descr=<ArrayP 8>)
+729: guard_class(p55, ConstClass(W_Vector), descr=<Guard0x3b75100>) [p2, p6, p15, None, None, None, None]
debug_merge_point(0, 0, '(let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand19 k5006)')
+742: i57 = getfield_gc_i(p55, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+746: i58 = int_lt(0, i57)
+750: guard_true(i58, descr=<Guard0x3b75148>) [p2, p6, p15, None, None, None, None]
+756: p59 = getfield_gc_r(p55, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+760: guard_class(p59, 16622984, descr=<Guard0x3b75190>) [p2, p6, p15, None, None, None, None]
+772: p61 = getfield_gc_r(p55, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+776: p62 = getarrayitem_gc_r(p61, 0, descr=<ArrayP 8>)
+780: guard_class(p62, ConstClass(W_Bool), descr=<Guard0x3b751d8>) [p2, p6, p15, None, None, None, None]
debug_merge_point(0, 0, '(if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))')
+800: i65 = instance_ptr_eq(p62, ConstPtr(ptr64))
+803: guard_false(i65, descr=<Guard0x3b75220>) [p2, p6, p15, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f)')
debug_merge_point(0, 0, '(+ j4999 k5006)')
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand20 #f)')
+816: p67 = getfield_gc_r(ConstPtr(ptr66), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+820: guard_class(p67, 16622984, descr=<Guard0x3b75268>) [p2, p6, p15, None, None, None, None]
+832: i70 = int_ge(i37, 0)
+836: guard_true(i70, descr=<Guard0x3b752b0>) [p2, p6, p15, None, None, None, None]
+842: i72 = int_lt(i37, 512)
+849: guard_true(i72, descr=<Guard0x3b752f8>) [p2, p6, p15, None, None, None, None]
+855: p74 = getfield_gc_r(ConstPtr(ptr73), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+870: setarrayitem_gc(p74, i37, ConstPtr(ptr75), descr=<ArrayP 8>)
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))')
debug_merge_point(0, 0, '(+ k5006 1)')
debug_merge_point(0, 0, '(doloop5004 AppRand21)')
debug_merge_point(0, 0, '(let ([if7 (> k5006 end5001)]) (if if7 (void) (let ([AppRand19 (vector-ref *p* i4997)]) (let ([if8 (vector-ref AppRand19 k5006)]) (if if8 (let ([AppRand20 (+ j4999 k5006)]) (vector-set! *puzzle* AppRand20 #f) #f) (void))) (let ([AppRand21 (+ k5006 1)]) (doloop5004 AppRand21))))) from (doloop5004 AppRand21)')
+875: p76 = new_with_vtable(descr=<SizeDescr 48>)
+919: p77 = new_with_vtable(descr=<SizeDescr 16>)
+930: setfield_gc(p77, i33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+934: p78 = new_with_vtable(descr=<SizeDescr 16>)
+945: setfield_gc(p78, i47, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+949: p79 = new_with_vtable(descr=<SizeDescr 16>)
+961: setfield_gc(p79, i37, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+966: p80 = new_with_vtable(descr=<SizeDescr 40>)
+978: p81 = new_with_vtable(descr=<SizeDescr 32>)
+996: setfield_gc(p81, ConstPtr(ptr82), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1000: setfield_gc(p81, i33, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1004: setfield_gc(p81, i37, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1080: i83 = getfield_gc_i(p78, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1084: i84 = getfield_gc_i(p77, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1088: setfield_gc(p76, ConstPtr(ptr85), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1092: setfield_gc(p80, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1096: setfield_gc(p80, p81, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1100: setfield_gc(p80, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1111: setfield_gc(p76, ConstPtr(ptr86), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1115: setfield_gc(p76, p78, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1119: setfield_gc(p76, p77, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1123: setfield_gc(p76, p79, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1134: setfield_gc(p80, ConstPtr(ptr87), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1138: i89 = int_ge(i84, 0)
+1142: guard_true(i89, descr=<Guard0x3b553a0>) [p80, p76, None, None, None, None]
+1148: i91 = int_le(i84, 12)
+1152: guard_true(i91, descr=<Guard0x3b55400>) [p80, p76, None, None, None, None]
+1158: i92 = arraylen_gc(p54, descr=<ArrayP 8>)
+1158: jump(p76, 1, p80, p21, p78, i83, p77, p54, i84, descr=TargetToken(61624816))
+1232: --end of the loop--
[3e4c086b671bc0b] jit-log-opt-bridge}
[3e4c086b696113c] {jit-backend
[3e4c086b6a273d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835667fa
[3e4c086b6a327bf] jit-backend-dump}
[3e4c086b6a3daff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668124 +0  23000000
[3e4c086b6a3f0b5] jit-backend-dump}
[3e4c086b6a43052] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668405 +0  23000000
[3e4c086b6a43f5a] jit-backend-dump}
[3e4c086b6a47424] {jit-backend-addr
bridge out of Guard 0x3b1cda0 has address 0x7fd835668120 to 0x7fd835668400
       gc table: 0x7fd835667fa0
    jump target: 0x7fd835668120
         resops: 0x7fd83566812e
       failures: 0x7fd835668400
            end: 0x7fd83566886a
[3e4c086b6a49984] jit-backend-addr}
[3e4c086b6a4d28c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668146 +0  F8020000
[3e4c086b6a4e1a9] jit-backend-dump}
[3e4c086b6a515e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566815e +0  FC020000
[3e4c086b6a523ea] jit-backend-dump}
[3e4c086b6a55745] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566816b +0  0B030000
[3e4c086b6a56473] jit-backend-dump}
[3e4c086b6a5994c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668183 +0  0F030000
[3e4c086b6a5a686] jit-backend-dump}
[3e4c086b6a5d979] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566819a +0  14030000
[3e4c086b6a5e6c9] jit-backend-dump}
[3e4c086b6a618cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356681a8 +0  22030000
[3e4c086b6a625f8] jit-backend-dump}
[3e4c086b6a6583f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356681b2 +0  34030000
[3e4c086b6a66564] jit-backend-dump}
[3e4c086b6a697cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356681ca +0  38030000
[3e4c086b6a6a4fe] jit-backend-dump}
[3e4c086b6a6d6ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356681e0 +0  3E030000
[3e4c086b6a6e480] jit-backend-dump}
[3e4c086b6a71678] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356681ea +0  50030000
[3e4c086b6a72393] jit-backend-dump}
[3e4c086b6a755bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356681f7 +0  5F030000
[3e4c086b6a762ea] jit-backend-dump}
[3e4c086b6a794ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668209 +0  69030000
[3e4c086b6a7a219] jit-backend-dump}
[3e4c086b6a7d473] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566821f +0  6F030000
[3e4c086b6a7e18c] jit-backend-dump}
[3e4c086b6a8138d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566822f +0  7B030000
[3e4c086b6a8209f] jit-backend-dump}
[3e4c086b6a85376] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668246 +0  80030000
[3e4c086b6a86086] jit-backend-dump}
[3e4c086b6a89284] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668253 +0  8F030000
[3e4c086b6a89f96] jit-backend-dump}
[3e4c086b6a8d15a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566825d +0  A1030000
[3e4c086b6a8de70] jit-backend-dump}
[3e4c086b6a91049] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566826a +0  B0030000
[3e4c086b6a91d6b] jit-backend-dump}
[3e4c086b6a94f87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668282 +0  B4030000
[3e4c086b6a95c9a] jit-backend-dump}
[3e4c086b6a98e76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668298 +0  BA030000
[3e4c086b6a99b8f] jit-backend-dump}
[3e4c086b6a9cdd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356682a1 +0  CD030000
[3e4c086b6a9dafb] jit-backend-dump}
[3e4c086b6aa0cf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356682b6 +0  D4030000
[3e4c086b6aa19fc] jit-backend-dump}
[3e4c086b6aa4bfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356682c8 +0  DE030000
[3e4c086b6aa5906] jit-backend-dump}
[3e4c086b6aa8ae6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356682dc +0  E6030000
[3e4c086b6aa97f5] jit-backend-dump}
[3e4c086b6aaca6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356682f1 +0  ED030000
[3e4c086b6ab0cca] jit-backend-dump}
[3e4c086b6ab49eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668303 +0  F7030000
[3e4c086b6ab57a9] jit-backend-dump}
[3e4c086b6ab89fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566831a +0  FC030000
[3e4c086b6ab975f] jit-backend-dump}
[3e4c086b6abc910] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668328 +0  0A040000
[3e4c086b6abd63e] jit-backend-dump}
[3e4c086b6ac07c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668335 +0  19040000
[3e4c086b6ac14f0] jit-backend-dump}
[3e4c086b6ac46b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668349 +0  21040000
[3e4c086b6ac53e5] jit-backend-dump}
[3e4c086b6ac85af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668353 +0  33040000
[3e4c086b6ac92e6] jit-backend-dump}
[3e4c086b6acc4cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566835d +0  45040000
[3e4c086b6acd200] jit-backend-dump}
[3e4c086b6ad04ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566837b +0  43040000
[3e4c086b6ad123f] jit-backend-dump}
[3e4c086b6ad446e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668388 +0  52040000
[3e4c086b6ad51b7] jit-backend-dump}
[3e4c086b6ad8363] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668395 +0  61040000
[3e4c086b6ad909d] jit-backend-dump}
[3e4c086b6adc29b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356683b4 +0  5E040000
[3e4c086b6adcfc6] jit-backend-dump}
[3e4c086b6ae01d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356683c1 +0  6D040000
[3e4c086b6ae0efe] jit-backend-dump}
[3e4c086b6ae4060] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356683cf +0  7B040000
[3e4c086b6ae4d7c] jit-backend-dump}
[3e4c086b6ae8185] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565efc8 +0  54910000
[3e4c086b6ae8ece] jit-backend-dump}
[3e4c086b6aecea9] jit-backend}
[3e4c086b6af0d98] {jit-log-opt-bridge
# bridge out of Guard 0x3b1cda0 with 111 ops
[i0, p1, p2, p3]
+406: guard_not_invalidated(descr=<Guard0x3b55460>) [i0, p1, p2, p3]
+406: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+417: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3b75340>) [i0, p1, p2, p3]
+426: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+430: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3b554c0>) [i0, p1, p2, p3]
+450: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+454: i9 = int_gt(i0, i8)
+457: guard_false(i9, descr=<Guard0x3b75388>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
+463: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+468: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3b55520>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+487: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+491: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x3b55580>) [i0, p1, p2, p3]
+510: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+514: i16 = int_ge(i14, 0)
+518: guard_true(i16, descr=<Guard0x3b753d0>) [i0, p1, p2, p3]
+524: i18 = int_lt(i14, 13)
+528: guard_true(i18, descr=<Guard0x3b75418>) [i0, p1, p2, p3]
+541: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+545: guard_class(p20, 16622984, descr=<Guard0x3b75460>) [i0, p1, p2, p3]
+558: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+562: p24 = getarrayitem_gc_r(p23, i14, descr=<ArrayP 8>)
+567: guard_class(p24, ConstClass(W_Vector), descr=<Guard0x3b754a8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+580: i27 = int_ge(i0, 0)
+584: guard_true(i27, descr=<Guard0x3b754f0>) [i0, p1, p2, p3]
+590: i28 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+594: i29 = int_lt(i0, i28)
+597: guard_true(i29, descr=<Guard0x3b75538>) [i0, p1, p2, p3]
+603: p30 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+607: guard_class(p30, 16622984, descr=<Guard0x3b75580>) [i0, p1, p2, p3]
+621: p32 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+625: p33 = getarrayitem_gc_r(p32, i0, descr=<ArrayP 8>)
+630: guard_class(p33, ConstClass(W_Bool), descr=<Guard0x3b755c8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+650: i36 = instance_ptr_eq(p33, ConstPtr(ptr35))
+653: guard_false(i36, descr=<Guard0x3b75610>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
+659: p37 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j k)')
+659: p38 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+663: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3b555e0>) [i0, p1, p2, p3]
+682: i40 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+686: i41 = int_add_ovf(i40, i0)
+689: guard_no_overflow(descr=<Guard0x3b75658>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+695: i43 = int_ge(i41, 0)
+699: guard_true(i43, descr=<Guard0x3b756a0>) [i0, p1, p2, p3]
+705: i45 = int_lt(i41, 512)
+712: guard_true(i45, descr=<Guard0x3b756e8>) [i0, p1, p2, p3]
+725: p47 = getfield_gc_r(ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+729: guard_class(p47, 16622984, descr=<Guard0x3b75730>) [i0, p1, p2, p3]
+742: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+746: p51 = getarrayitem_gc_r(p50, i41, descr=<ArrayP 8>)
+751: guard_class(p51, ConstClass(W_Bool), descr=<Guard0x3b75778>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+764: i54 = instance_ptr_eq(p51, ConstPtr(ptr53))
+767: guard_false(i54, descr=<Guard0x3b757c0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(begin (void) (let ([if2 (> k end)]) (if if2 #t #f)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([if2 (> k end)]) (if if2 #t #f))')
debug_merge_point(0, 0, '(> k end)')
debug_merge_point(0, 0, '(if if2 #t #f)')
debug_merge_point(0, 0, '#f')
+773: p55 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+785: guard_value(p55, ConstPtr(ptr56), descr=<Guard0x3b75808>) [i0, p1, p2, p3]
+794: p57 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+794: p58 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)) from (> k end)')
debug_merge_point(0, 0, '(void)')
+799: guard_class(p58, 16435208, descr=<Guard0x3b75850>) [i0, p1, p2, p3]
+812: p60 = getfield_gc_r(p58, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+823: guard_value(p60, ConstPtr(ptr61), descr=<Guard0x3b75898>) [i0, p1, p2, p3]
+832: p62 = getfield_gc_r(p58, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+836: p63 = getfield_gc_r(p58, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)) from (void)')
+840: guard_class(p62, 16504944, descr=<Guard0x3b758e0>) [i0, p1, p2, p3]
+853: p65 = getfield_gc_r(p62, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+857: guard_class(p63, 16435920, descr=<Guard0x3b75928>) [i0, p1, p2, p3]
+871: p67 = getfield_gc_r(p63, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+875: guard_nonnull_class(p67, ConstClass(ForwardLink), descr=<Guard0x3b55640>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5026 1)')
+894: i69 = getfield_gc_i(p62, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+898: i71 = int_add_ovf(i69, 1)
+902: guard_no_overflow(descr=<Guard0x3b75970>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
+908: guard_class(p65, 16478448, descr=<Guard0x3b759b8>) [i0, p1, p2, p3]
+921: p73 = getfield_gc_r(p65, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+932: guard_value(p73, ConstPtr(ptr74), descr=<Guard0x3b75a00>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+941: i76 = int_ge(i71, 1)
+945: guard_true(i76, descr=<Guard0x3b556a0>) [p63, i71, p65, None, None, None, None]
+951: i79 = int_le(i71, 13)
+955: guard_true(i79, descr=<Guard0x3b55700>) [p63, i71, p65, None, None, None, None]
+968: p81 = getfield_gc_r(ConstPtr(ptr80), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+972: guard_nonnull_class(p81, 16623792, descr=<Guard0x3b55760>) [p63, i71, p65, None, None, None, None]
+991: p84 = getfield_gc_r(ConstPtr(ptr83), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+995: guard_nonnull(p84, descr=<Guard0x3b557c0>) [p63, i71, p65, None, None, None, None]
+1004: guard_gc_type(p84, 520, descr=<Guard0x3b55820>) [p63, i71, p65, None, None, None, None]
+1017: i86 = arraylen_gc(p84, descr=<ArrayS 8>)
+1024: p88 = getfield_gc_r(ConstPtr(ptr87), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1028: guard_nonnull_class(p88, 16623792, descr=<Guard0x3b55880>) [p63, i71, p65, None, None, None, None]
+1048: p91 = getfield_gc_r(ConstPtr(ptr90), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1052: guard_nonnull(p91, descr=<Guard0x3b558e0>) [p63, i71, p65, None, None, None, None]
+1061: guard_gc_type(p91, 520, descr=<Guard0x3b55940>) [p63, i71, p65, None, None, None, None]
+1075: i93 = arraylen_gc(p91, descr=<ArrayS 8>)
+1075: jump(p65, i71, p63, p67, p84, p91, descr=TargetToken(62080048))
+1120: --end of the loop--
[3e4c086b6b487fb] jit-log-opt-bridge}
[3e4c086b729c483] {jit-backend
[3e4c086b72e81d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086b72ee52a] jit-backend-dump}
[3e4c086b72f9b8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668974 +0  23000000
[3e4c086b72fb0bb] jit-backend-dump}
[3e4c086b72ff1b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668b15 +0  23000000
[3e4c086b73000d2] jit-backend-dump}
[3e4c086b73035cd] {jit-backend-addr
bridge out of Guard 0x3b52ec0 has address 0x7fd835668970 to 0x7fd835668b10
       gc table: 0x7fd835668910
    jump target: 0x7fd835668970
         resops: 0x7fd83566897e
       failures: 0x7fd835668b10
            end: 0x7fd835668c17
[3e4c086b7305a08] jit-backend-addr}
[3e4c086b7308ff7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566898e +0  C1010000
[3e4c086b7309f05] jit-backend-dump}
[3e4c086b730d4ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356689a7 +0  E0010000
[3e4c086b730e22c] jit-backend-dump}
[3e4c086b73114ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356689b1 +0  F2010000
[3e4c086b7312234] jit-backend-dump}
[3e4c086b73153e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356689c9 +0  F6010000
[3e4c086b7316132] jit-backend-dump}
[3e4c086b7319355] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356689dc +0  FF010000
[3e4c086b731a0dc] jit-backend-dump}
[3e4c086b731d2ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668ad7 +0  20010000
[3e4c086b731e066] jit-backend-dump}
[3e4c086b7321497] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356645a1 +0  CB430000
[3e4c086b732221e] jit-backend-dump}
[3e4c086b73262db] jit-backend}
[3e4c086b7329ec4] {jit-log-opt-bridge
# bridge out of Guard 0x3b52ec0 with 47 ops
[p0, p1, p2, p3, i4]
+118: guard_class(p0, 16623792, descr=<Guard0x3b559a0>) [p0, p1, p2, i4, p3]
+137: p7 = getfield_gc_r(ConstPtr(ptr6), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+141: i9 = getarrayitem_gc_i(p7, 0, descr=<ArrayS 8>)
+145: guard_not_invalidated(descr=<Guard0x3b75a48>) [p0, p1, p2, i4, p3]
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+145: i11 = int_ge(i9, 0)
+149: guard_true(i11, descr=<Guard0x3b75a90>) [p0, p1, p2, i4, p3]
+155: i13 = int_lt(i9, 4)
+159: guard_true(i13, descr=<Guard0x3b75ad8>) [p0, p1, p2, i4, p3]
+172: p15 = getfield_gc_r(ConstPtr(ptr14), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+177: guard_class(p15, 16623792, descr=<Guard0x3b75b20>) [p0, p1, p2, i4, p3]
+189: p18 = getfield_gc_r(ConstPtr(ptr17), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+194: i19 = getarrayitem_gc_i(p18, i9, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+199: i20 = int_is_zero(i19)
+202: guard_true(i20, descr=<Guard0x3b75b68>) [p0, p1, p2, i4, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)) from (void)')
debug_merge_point(0, 0, '(+ i5026 1)')
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+208: p21 = new_with_vtable(descr=<SizeDescr 48>)
+252: p22 = new_with_vtable(descr=<SizeDescr 16>)
+263: setfield_gc(p22, i4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+267: p23 = new_with_vtable(descr=<SizeDescr 16>)
+278: p24 = new_with_vtable(descr=<SizeDescr 16>)
+289: setfield_gc(p24, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+297: setfield_gc(p23, p24, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+301: p26 = new_with_vtable(descr=<SizeDescr 24>)
+313: p27 = new_with_vtable(descr=<SizeDescr 40>)
+325: setfield_gc(p27, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+329: setfield_gc(p27, p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+333: setfield_gc(p27, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+344: setfield_gc(p27, ConstPtr(ptr28), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+348: setfield_gc(p26, p27, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+353: setfield_gc(p26, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+402: p30 = getfield_gc_r(p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+413: setfield_gc(p21, ConstPtr(ptr31), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+424: setfield_gc(p21, ConstPtr(ptr32), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+428: setfield_gc(p21, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+432: setfield_gc(p21, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+436: setfield_gc(p21, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+440: guard_nonnull_class(p30, ConstClass(ForwardLink), descr=<Guard0x3b55a00>) [p27, p21, None, None, None, None]
+459: i35 = arraylen_gc(p7, descr=<ArrayS 8>)
+459: i36 = arraylen_gc(p18, descr=<ArrayS 8>)
+459: jump(p21, 1, p27, p30, p7, p18, descr=TargetToken(62080048))
+512: --end of the loop--
[3e4c086b73546f8] jit-log-opt-bridge}
[3e4c086b78ad3fb] {jit-backend
[3e4c086b791b86b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668dd
[3e4c086b7924c4e] jit-backend-dump}
[3e4c086b792fd59] {jit-backend-addr
Loop 27 ((let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)) has address 0x7fd835668f4d to 0x7fd835669110 (bootstrap 0x7fd835668ec0)
       gc table: 0x7fd835668dd0
       function: 0x7fd835668ec0
         resops: 0x7fd835668f4d
       failures: 0x7fd835669110
            end: 0x7fd835669446
[3e4c086b7932eef] jit-backend-addr}
[3e4c086b7937650] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668f77 +0  F3010000
[3e4c086b7938987] jit-backend-dump}
[3e4c086b793bfee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668f8d +0  F9010000
[3e4c086b793cf05] jit-backend-dump}
[3e4c086b794043a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668fa0 +0  1E020000
[3e4c086b7941260] jit-backend-dump}
[3e4c086b79444e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668fae +0  2C020000
[3e4c086b7945231] jit-backend-dump}
[3e4c086b794847e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668fb7 +0  3F020000
[3e4c086b79491d4] jit-backend-dump}
[3e4c086b794c3f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668fc6 +0  4C020000
[3e4c086b794d146] jit-backend-dump}
[3e4c086b7950357] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668fd6 +0  58020000
[3e4c086b7951060] jit-backend-dump}
[3e4c086b7954497] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668fea +0  60020000
[3e4c086b79551b9] jit-backend-dump}
[3e4c086b7958548] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835668ff7 +0  6F020000
[3e4c086b7959297] jit-backend-dump}
[3e4c086b795c568] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669000 +0  82020000
[3e4c086b795d2af] jit-backend-dump}
[3e4c086b796050f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566900a +0  94020000
[3e4c086b7961252] jit-backend-dump}
[3e4c086b7964579] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669017 +0  A3020000
[3e4c086b7965294] jit-backend-dump}
[3e4c086b79684c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669030 +0  A6020000
[3e4c086b79691df] jit-backend-dump}
[3e4c086b796c433] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566903a +0  B8020000
[3e4c086b796d14b] jit-backend-dump}
[3e4c086b7970334] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669047 +0  C7020000
[3e4c086b797105f] jit-backend-dump}
[3e4c086b7974392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566908e +0  B8020000
[3e4c086b7975106] jit-backend-dump}
[3e4c086b79782cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669097 +0  CB020000
[3e4c086b7978ffe] jit-backend-dump}
[3e4c086b797c1f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356690a6 +0  D8020000
[3e4c086b797cf0e] jit-backend-dump}
[3e4c086b7980131] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356690af +0  EB020000
[3e4c086b7980e59] jit-backend-dump}
[3e4c086b79840ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356690b8 +0  FE020000
[3e4c086b798837e] jit-backend-dump}
[3e4c086b798c1f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356690c2 +0  10030000
[3e4c086b798cfea] jit-backend-dump}
[3e4c086b7990366] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356690cb +0  23030000
[3e4c086b79910de] jit-backend-dump}
[3e4c086b79943b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356690d5 +0  35030000
[3e4c086b79950f5] jit-backend-dump}
[3e4c086b799839c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356690e2 +0  44030000
[3e4c086b79990d6] jit-backend-dump}
[3e4c086b799ceeb] jit-backend}
[3e4c086b79a0e4e] {jit-log-opt-loop
# Loop 27 ((let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)) : loop with 92 ops
[p0, p1]
+389: label(p0, p1, descr=TargetToken(62083008))
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)')
+408: guard_class(p1, 16435208, descr=<Guard0x3b55a60>) [p0, p1]
+427: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+431: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3b55ac0>) [p0, p1]
debug_merge_point(0, 0, '(> k5106 5)')
+449: guard_not_invalidated(descr=<Guard0x3b75bb0>) [p0, p1]
+449: guard_class(p0, 16504944, descr=<Guard0x3b75bf8>) [p0, p1]
+468: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+472: i8 = int_gt(i6, 5)
+476: guard_false(i8, descr=<Guard0x3b75c40>) [p0, p1]
debug_merge_point(0, 0, '(if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))')
debug_merge_point(0, 0, '(let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42)))')
debug_merge_point(0, 0, '(* *d* k5106)')
+482: i9 = int_is_true(i6)
+485: guard_true(i9, descr=<Guard0x3b75c88>) [p0, p1]
+491: i11 = int_mul_ovf(8, i6)
+500: guard_no_overflow(descr=<Guard0x3b75cd0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))))')
+506: p12 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j5101 AppRand38)')
+510: guard_class(p12, 16481832, descr=<Guard0x3b75d18>) [p0, p1]
+522: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+533: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3b75d60>) [p0, p1]
+542: i16 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed11.inst_vals_fixed_1 32 pure>)
+546: i17 = int_add_ovf(i16, i11)
+549: guard_no_overflow(descr=<Guard0x3b75da8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))')
debug_merge_point(0, 0, '(* *d* AppRand39)')
+555: i18 = int_is_true(i17)
+558: guard_true(i18, descr=<Guard0x3b75df0>) [p0, p1]
+564: i20 = int_mul_ovf(8, i17)
+568: guard_no_overflow(descr=<Guard0x3b75e38>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))')
+574: p21 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ i5096 AppRand40)')
+574: i22 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed11.inst_vals_fixed_0 24 pure>)
+578: i23 = int_add_ovf(i22, i20)
+581: guard_no_overflow(descr=<Guard0x3b75e80>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand41 #f)')
+594: p25 = getfield_gc_r(ConstPtr(ptr24), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+598: guard_class(p25, 16622984, descr=<Guard0x3b75ec8>) [p0, p1]
+612: i28 = int_ge(i23, 0)
+616: guard_true(i28, descr=<Guard0x3b75f10>) [p0, p1]
+622: i30 = int_lt(i23, 512)
+629: guard_true(i30, descr=<Guard0x3b75f58>) [p0, p1]
+635: p32 = getfield_gc_r(ConstPtr(ptr31), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+656: setarrayitem_gc(p32, i23, ConstPtr(ptr33), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))')
debug_merge_point(0, 0, '(+ k5106 1)')
+661: i35 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop5104 AppRand42)')
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)')
+665: label(p12, i35, p1, p3, i16, i22, p32, descr=TargetToken(62083088))
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)')
debug_merge_point(0, 0, '(> k5106 5)')
+696: guard_not_invalidated(descr=<Guard0x3b55b20>) [i35, p12, p1, p3]
+696: i37 = int_gt(i35, 5)
+700: guard_false(i37, descr=<Guard0x3b75fa0>) [i35, p12, p1, p3]
debug_merge_point(0, 0, '(if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))')
debug_merge_point(0, 0, '(let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42)))')
debug_merge_point(0, 0, '(* *d* k5106)')
+706: i38 = int_is_true(i35)
+709: guard_true(i38, descr=<Guard0x3bc6020>) [i35, p12, p1, p3]
+715: i40 = int_mul_ovf(8, i35)
+724: guard_no_overflow(descr=<Guard0x3bc6068>) [i35, p12, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))))')
debug_merge_point(0, 0, '(+ j5101 AppRand38)')
+730: i41 = int_add_ovf(i16, i40)
+733: guard_no_overflow(descr=<Guard0x3bc60b0>) [i35, p12, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))')
debug_merge_point(0, 0, '(* *d* AppRand39)')
+739: i42 = int_is_true(i41)
+742: guard_true(i42, descr=<Guard0x3bc60f8>) [i35, p12, p1, p3]
+748: i44 = int_mul_ovf(8, i41)
+752: guard_no_overflow(descr=<Guard0x3bc6140>) [i35, p12, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))')
debug_merge_point(0, 0, '(+ i5096 AppRand40)')
+758: i45 = int_add_ovf(i22, i44)
+761: guard_no_overflow(descr=<Guard0x3bc6188>) [i35, p12, p1, p3]
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand41 #f)')
+767: i47 = int_ge(i45, 0)
+771: guard_true(i47, descr=<Guard0x3bc61d0>) [i35, p12, p1, p3]
+777: i49 = int_lt(i45, 512)
+784: guard_true(i49, descr=<Guard0x3bc6218>) [i35, p12, p1, p3]
+807: setarrayitem_gc(p32, i45, ConstPtr(ptr50), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))')
debug_merge_point(0, 0, '(+ k5106 1)')
+812: i52 = int_add(i35, 1)
debug_merge_point(0, 0, '(doloop5104 AppRand42)')
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)')
+816: jump(p12, i52, p1, p3, i16, i22, p32, descr=TargetToken(62083088))
+832: --end of the loop--
[3e4c086b79ea005] jit-log-opt-loop}
[3e4c086b7d726a2] {jit-backend
[3e4c086b7ec86db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086b7ed4444] jit-backend-dump}
[3e4c086b7edfa65] {jit-backend-addr
Loop 28 ((let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)) has address 0x7fd8356698fd to 0x7fd835669c00 (bootstrap 0x7fd835669870)
       gc table: 0x7fd835669700
       function: 0x7fd835669870
         resops: 0x7fd8356698fd
       failures: 0x7fd835669c00
            end: 0x7fd83566a0dc
[3e4c086b7ee2b25] jit-backend-addr}
[3e4c086b7ee74de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669927 +0  35030000
[3e4c086b7ee89ec] jit-backend-dump}
[3e4c086b7eec270] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566993d +0  3B030000
[3e4c086b7eed2d5] jit-backend-dump}
[3e4c086b7ef0a55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669950 +0  60030000
[3e4c086b7ef18ef] jit-backend-dump}
[3e4c086b7ef5057] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669964 +0  68030000
[3e4c086b7ef5e3c] jit-backend-dump}
[3e4c086b7ef910a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669978 +0  70030000
[3e4c086b7ef9f14] jit-backend-dump}
[3e4c086b7efd257] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566998f +0  75030000
[3e4c086b7efdfe3] jit-backend-dump}
[3e4c086b7f0130d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566999c +0  84030000
[3e4c086b7f02088] jit-backend-dump}
[3e4c086b7f052f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356699a5 +0  97030000
[3e4c086b7f0603d] jit-backend-dump}
[3e4c086b7f09291] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356699b5 +0  A3030000
[3e4c086b7f09fda] jit-backend-dump}
[3e4c086b7f0d213] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356699cc +0  A8030000
[3e4c086b7f0df5c] jit-backend-dump}
[3e4c086b7f1115d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356699d9 +0  B7030000
[3e4c086b7f11e9a] jit-backend-dump}
[3e4c086b7f15125] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356699e2 +0  CA030000
[3e4c086b7f15e90] jit-backend-dump}
[3e4c086b7f1915e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356699ec +0  DC030000
[3e4c086b7f19ef7] jit-backend-dump}
[3e4c086b7f1d148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669a04 +0  E0030000
[3e4c086b7f1de8e] jit-backend-dump}
[3e4c086b7f210ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669a11 +0  EF030000
[3e4c086b7f21e04] jit-backend-dump}
[3e4c086b7f25095] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669a2b +0  F1030000
[3e4c086b7f25e12] jit-backend-dump}
[3e4c086b7f29176] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669a5a +0  DE030000
[3e4c086b7f29ed5] jit-backend-dump}
[3e4c086b7f2d191] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669a68 +0  EC030000
[3e4c086b7f2ded4] jit-backend-dump}
[3e4c086b7f31112] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669a72 +0  FE030000
[3e4c086b7f31e59] jit-backend-dump}
[3e4c086b7f35124] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669a97 +0  F5030000
[3e4c086b7f35e64] jit-backend-dump}
[3e4c086b7f390d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669aad +0  FB030000
[3e4c086b7f39e17] jit-backend-dump}
[3e4c086b7f3d040] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669abd +0  07040000
[3e4c086b7f3dd80] jit-backend-dump}
[3e4c086b7f40f8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669ac7 +0  19040000
[3e4c086b7f41cca] jit-backend-dump}
[3e4c086b7f44f3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669ad4 +0  28040000
[3e4c086b7f45c9f] jit-backend-dump}
[3e4c086b7f48eec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669afb +0  1D040000
[3e4c086b7f49c39] jit-backend-dump}
[3e4c086b7f4cfd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b31 +0  1F040000
[3e4c086b7f4dd36] jit-backend-dump}
[3e4c086b7f5106f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b3a +0  32040000
[3e4c086b7f51ddd] jit-backend-dump}
[3e4c086b7f550b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b4a +0  3E040000
[3e4c086b7f55dfe] jit-backend-dump}
[3e4c086b7f59064] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b53 +0  51040000
[3e4c086b7f59da4] jit-backend-dump}
[3e4c086b7f5d05d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b5c +0  64040000
[3e4c086b7f5ddd1] jit-backend-dump}
[3e4c086b7f61050] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b66 +0  76040000
[3e4c086b7f61d96] jit-backend-dump}
[3e4c086b7f65036] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b6f +0  89040000
[3e4c086b7f65d95] jit-backend-dump}
[3e4c086b7f690f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b81 +0  93040000
[3e4c086b7f69e39] jit-backend-dump}
[3e4c086b7f6d0fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b8b +0  A5040000
[3e4c086b7f6de4e] jit-backend-dump}
[3e4c086b7f710c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b9d +0  AF040000
[3e4c086b7f71e13] jit-backend-dump}
[3e4c086b7f7505a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669bae +0  BA040000
[3e4c086b7f75da4] jit-backend-dump}
[3e4c086b7f78feb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669bb8 +0  CC040000
[3e4c086b7f79d3e] jit-backend-dump}
[3e4c086b7f7cf8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669bc5 +0  DB040000
[3e4c086b7f7dcdb] jit-backend-dump}
[3e4c086b7f80f1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669bed +0  CF040000
[3e4c086b7f81c6f] jit-backend-dump}
[3e4c086b7f85a60] jit-backend}
[3e4c086b7f89b01] {jit-log-opt-loop
# Loop 28 ((let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)) : loop with 136 ops
[p0, p1]
+517: label(p0, p1, descr=TargetToken(62083168))
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+536: guard_class(p1, 16435208, descr=<Guard0x3b55ee0>) [p0, p1]
+555: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+559: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3bd4080>) [p0, p1]
debug_merge_point(0, 0, '(> k5066 kk)')
+577: guard_not_invalidated(descr=<Guard0x3bc6b18>) [p0, p1]
+577: guard_class(p0, 16504944, descr=<Guard0x3bc6ad0>) [p0, p1]
+596: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+600: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+604: guard_class(p7, 16478824, descr=<Guard0x3bc6a88>) [p0, p1]
+616: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+627: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3bc6a40>) [p0, p1]
+636: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+640: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3bd4020>) [p0, p1]
+659: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+663: i14 = int_gt(i6, i13)
+666: guard_false(i14, descr=<Guard0x3bc69f8>) [p0, p1]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
+672: i15 = int_is_true(i6)
+675: guard_true(i15, descr=<Guard0x3bc69b0>) [p0, p1]
+681: i17 = int_mul_ovf(8, i6)
+691: guard_no_overflow(descr=<Guard0x3bc6968>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
+697: p18 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+701: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x3b55fa0>) [p0, p1]
+720: i20 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+724: i21 = int_add_ovf(i20, i17)
+727: guard_no_overflow(descr=<Guard0x3bc6920>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
+733: i22 = int_is_true(i21)
+736: guard_true(i22, descr=<Guard0x3bc68d8>) [p0, p1]
+742: i24 = int_mul_ovf(8, i21)
+746: guard_no_overflow(descr=<Guard0x3bc6890>) [p0, p1]
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
+752: p25 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+756: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x3b55f40>) [p0, p1]
+776: i27 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+780: i28 = int_add_ovf(i27, i24)
+783: guard_no_overflow(descr=<Guard0x3bc6848>) [p0, p1]
debug_merge_point(0, 0, '(set! index SetBang3)')
+789: p29 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+793: p30 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+797: guard_nonnull_class(p30, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3b55e80>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+829: p33 = getfield_gc_r(ConstPtr(ptr32), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+840: setfield_gc(p30, i28, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+844: guard_nonnull_class(p33, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3b55e20>) [p7, p33, p1, p0, p3]
+862: i35 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+866: i37 = int_ge(i35, 0)
+870: guard_true(i37, descr=<Guard0x3bc6800>) [p7, p33, p1, p0, p3]
+876: i39 = int_lt(i35, 13)
+880: guard_true(i39, descr=<Guard0x3bc67b8>) [p7, p33, p1, p0, p3]
+900: p41 = getfield_gc_r(ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+911: guard_class(p41, 16622984, descr=<Guard0x3bc6770>) [p7, p33, p1, p0, p3]
+923: p44 = getfield_gc_r(ConstPtr(ptr43), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+927: p45 = getarrayitem_gc_r(p44, i35, descr=<ArrayP 8>)
+932: guard_class(p45, ConstClass(W_Vector), descr=<Guard0x3bc6728>) [p7, p33, p1, p0, p3]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+945: p47 = getfield_gc_r(p45, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+949: guard_class(p47, 16622984, descr=<Guard0x3bc66e0>) [p7, p33, p1, p0, p3]
+961: i50 = int_ge(i28, 0)
+965: guard_true(i50, descr=<Guard0x3bc6698>) [p7, p33, p1, p0, p3]
+971: i51 = getfield_gc_i(p45, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+975: i52 = int_lt(i28, i51)
+978: guard_true(i52, descr=<Guard0x3bc6608>) [p7, p33, p1, p0, p3]
+984: p53 = getfield_gc_r(p45, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1005: setarrayitem_gc(p53, i28, ConstPtr(ptr54), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
+1010: i56 = int_add_ovf(i6, 1)
+1017: guard_no_overflow(descr=<Guard0x3b55d60>) [p0, i6, p7, p1, None, p3]
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+1023: label(p7, i56, p1, p3, p11, i13, p18, i20, p25, i27, p29, p33, p30, p44, descr=TargetToken(62083248))
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
debug_merge_point(0, 0, '(> k5066 kk)')
+1064: guard_not_invalidated(descr=<Guard0x3b55d00>) [i56, p7, p1, p3]
+1064: i58 = int_gt(i56, i13)
+1071: guard_false(i58, descr=<Guard0x3bc6578>) [i56, p7, p1, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
+1077: i59 = int_is_true(i56)
+1080: guard_true(i59, descr=<Guard0x3bc6530>) [i56, p7, p1, p3]
+1086: i61 = int_mul_ovf(8, i56)
+1096: guard_no_overflow(descr=<Guard0x3bc64e8>) [i56, p7, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
+1102: i62 = int_add_ovf(i20, i61)
+1105: guard_no_overflow(descr=<Guard0x3bc64a0>) [i56, p7, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
+1111: i63 = int_is_true(i62)
+1114: guard_true(i63, descr=<Guard0x3bc6458>) [i56, p7, p1, p3]
+1120: i65 = int_mul_ovf(8, i62)
+1124: guard_no_overflow(descr=<Guard0x3bc6410>) [i56, p7, p1, p3]
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
+1130: i66 = int_add_ovf(i27, i65)
+1133: guard_no_overflow(descr=<Guard0x3bc63c8>) [i56, p7, p1, p3]
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+1139: setfield_gc(p30, i66, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1143: i67 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1147: i69 = int_ge(i67, 0)
+1151: guard_true(i69, descr=<Guard0x3b55ca0>) [i67, p7, i56, None, p1, p3]
+1157: i71 = int_lt(i67, 13)
+1161: guard_true(i71, descr=<Guard0x3bc6380>) [i67, p7, i56, None, p1, p3]
+1167: p72 = getarrayitem_gc_r(p44, i67, descr=<ArrayP 8>)
+1172: guard_class(p72, ConstClass(W_Vector), descr=<Guard0x3bc6338>) [i67, p7, i56, None, p1, p3]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+1185: p74 = getfield_gc_r(p72, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1189: guard_class(p74, 16622984, descr=<Guard0x3bc62f0>) [i67, p7, i56, None, p1, p3]
+1202: i77 = int_ge(i66, 0)
+1206: guard_true(i77, descr=<Guard0x3bc62a8>) [i67, p7, i56, None, p1, p3]
+1212: i78 = getfield_gc_i(p72, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1216: i79 = int_lt(i66, i78)
+1219: guard_true(i79, descr=<Guard0x3bc6260>) [i67, p7, i56, None, p1, p3]
+1225: p80 = getfield_gc_r(p72, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1247: setarrayitem_gc(p80, i66, ConstPtr(ptr81), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
+1252: i83 = int_add_ovf(i56, 1)
+1259: guard_no_overflow(descr=<Guard0x3b55c40>) [i56, None, p7, p1, p3]
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+1265: i84 = arraylen_gc(p44, descr=<ArrayP 8>)
+1265: jump(p7, i83, p1, p3, p11, i13, p18, i20, p25, i27, p29, p33, p30, p44, descr=TargetToken(62083248))
+1280: --end of the loop--
[3e4c086b7fec09a] jit-log-opt-loop}
[3e4c086b96d1c90] {jit-backend
[3e4c086b97441d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a230 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CE201000048FF0425F040B9034983FA050F8E000000004C8BBD380100004D8B77204C8B2D1EFFFFFF4D39EE0F85000000004D8B77104D8B671841813EB01E01000F85000000004D8B4E0841813C24480E00000F85000000004D8B4424084983F8017207418138900F00000F8500000000498B7E104883C7010F8000000000418139D0C800000F85000000004D8B7110488B35E8FEFFFF4939F60F85000000004883FF050F8F00000000498B71184D8B710841813E102001000F8500000000488D5F084885DB0F8400000000486BDB080F80000000004801F30F8000000000488B15D1FEFFFF488B42188138C8EB02000F85000000004883FB000F8C000000004881FB000200000F8D000000004C8B7A1041F64704810F85F1000000488B15B4FEFFFF498954DF10488B0C25F091F900488D5168483B14251092F9000F87F200000048891425F091F90048C70168C40000488D512848C702480E0000488D5A2848C703B01E01004C894B0848897B104C896A2048895A104C8962184C8971084C8942084C8B3555FEFFFF4C897110488971184889792049BB01000000000000804C39DE0F8C0000000048898D3001000041BA02000000488995380100004C8985400100004989F94989F04C89FA49BB80906635D87F000041FFE3666666662E0F1F84000000000048C7442408FFFFFF0049BBE8A06635D87F00004C895D204D8D9B0802FFFF41FFD3E9F8FDFFFF7811415749BBF0A16535D87F000041FFD3790F4989DB49C1EB074983F3F84D0FAB1FE9E8FEFFFF49BB08A26635D87F00004C895D204D8D9BE808FFFF41FFD3E9F9FEFFFFFF35E0FCFFFF49BBF8A06635D87F000041534D8D9B08FFFEFF41FFE3FF35CCFCFFFF49BB08A16635D87F000041534D8D9BF8FEFEFF41FFE3FF35C0FCFFFF49BB18A16635D87F000041534D8D9BE8FEFEFF41FFE3FF35ACFCFFFF49BB28A16635D87F000041534D8D9BD8FEFEFF41FFE3FF3598FCFFFF49BB38A16635D87F000041534D8D9BC8FEFEFF41FFE3FF3584FCFFFF49BB48A16635D87F000041534D8D9BB8FEFEFF41FFE3FF3570FCFFFF49BB58A16635D87F000041534D8D9BA8FEFEFF41FFE3FF355CFCFFFF49BB68A16635D87F000041534D8D9B98FEFEFF41FFE3FF3550FCFFFF49BB78A16635D87F000041534D8D9B88FEFEFF41FFE3FF353CFCFFFF49BB88A16635D87F000041534D8D9B78FEFEFF41FFE3FF3528FCFFFF49BB98A16635D87F000041534D8D9B68FEFEFF41FFE3FF3514FCFFFF49BBA8A16635D87F000041534D8D9B58FEFEFF41FFE3FF3500FCFFFF49BBB8A16635D87F000041534D8D9B48FEFEFF41FFE3FF35ECFBFFFF49BBC8A16635D87F000041534D8D9B38FEFEFF41FFE3FF35E0FBFFFF49BBD8A16635D87F000041534D8D9B28FEFEFF41FFE3FF35CCFBFFFF49BBE8A16635D87F000041534D8D9B18FEFEFF41FFE3FF35B8FBFFFF49BBF8A16635D87F000041534D8D9B08FEFEFF41FFE3FF35B4FBFFFF49BB18A26635D87F000041534D8D9BE8FDFEFF41FFE3
[3e4c086b974c279] jit-backend-dump}
[3e4c086b97577f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a2f4 +0  1F000000
[3e4c086b9758d3a] jit-backend-dump}
[3e4c086b975ce1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a4e5 +0  1F000000
[3e4c086b975dd98] jit-backend-dump}
[3e4c086b97615d3] {jit-backend-addr
bridge out of Guard 0x3b75fa0 has address 0x7fd83566a2f0 to 0x7fd83566a4e0
       gc table: 0x7fd83566a230
    jump target: 0x7fd83566a2f0
         resops: 0x7fd83566a2fe
       failures: 0x7fd83566a4e0
            end: 0x7fd83566a742
[3e4c086b9763b3c] jit-backend-addr}
[3e4c086b9767273] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a30c +0  56020000
[3e4c086b976814a] jit-backend-dump}
[3e4c086b976b52e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a327 +0  57020000
[3e4c086b976c27e] jit-backend-dump}
[3e4c086b976f68a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a33c +0  5E020000
[3e4c086b97703f8] jit-backend-dump}
[3e4c086b9773683] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a34e +0  68020000
[3e4c086b9774407] jit-backend-dump}
[3e4c086b9777727] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a366 +0  6C020000
[3e4c086b977849f] jit-backend-dump}
[3e4c086b977b754] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a374 +0  7A020000
[3e4c086b977c4cf] jit-backend-dump}
[3e4c086b977f909] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a381 +0  89020000
[3e4c086b9780637] jit-backend-dump}
[3e4c086b97838ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a395 +0  91020000
[3e4c086b97845da] jit-backend-dump}
[3e4c086b9787904] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a39f +0  A3020000
[3e4c086b9788638] jit-backend-dump}
[3e4c086b978b833] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a3b4 +0  AA020000
[3e4c086b978c558] jit-backend-dump}
[3e4c086b978f816] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a3c1 +0  B9020000
[3e4c086b979056c] jit-backend-dump}
[3e4c086b979379e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a3cb +0  CB020000
[3e4c086b9794509] jit-backend-dump}
[3e4c086b97978aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a3d4 +0  DE020000
[3e4c086b97985e8] jit-backend-dump}
[3e4c086b979b7e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a3eb +0  E3020000
[3e4c086b979c50a] jit-backend-dump}
[3e4c086b979f7c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a3f5 +0  F5020000
[3e4c086b97a0522] jit-backend-dump}
[3e4c086b97a3745] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a402 +0  04030000
[3e4c086b97a4494] jit-backend-dump}
[3e4c086b97a77c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a49e +0  84020000
[3e4c086b97a8582] jit-backend-dump}
[3e4c086b97ab985] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566908e +0  5E120000
[3e4c086b97ac6b6] jit-backend-dump}
[3e4c086b97b07f0] jit-backend}
[3e4c086b97b446c] {jit-log-opt-bridge
# bridge out of Guard 0x3b75fa0 with 81 ops
[i0, p1, p2, p3]
+214: guard_not_invalidated(descr=<Guard0x3bd40e0>) [i0, p1, p2, p3]
+214: i5 = int_gt(i0, 5)
+218: guard_true(i5, descr=<Guard0x3bc7148>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))')
debug_merge_point(0, 0, '(void)')
+224: p6 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+242: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3bc7190>) [i0, p1, p2, p3]
+251: p8 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+255: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43)) from (void)')
+259: guard_class(p8, 16504944, descr=<Guard0x3bc71d8>) [i0, p1, p2, p3]
+272: p11 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+276: guard_class(p9, 16435208, descr=<Guard0x3bc7220>) [i0, p1, p2, p3]
+290: p13 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+295: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3bd4140>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ j5101 1)')
+314: i15 = getfield_gc_i(p8, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+318: i17 = int_add_ovf(i15, 1)
+322: guard_no_overflow(descr=<Guard0x3bc7268>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5099 AppRand43)')
+328: guard_class(p11, 16482960, descr=<Guard0x3bc72b0>) [i0, p1, p2, p3]
+341: p19 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+352: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3bc72f8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))) from (doloop5099 AppRand43)')
debug_merge_point(0, 0, '(> j5101 5)')
+361: i22 = int_gt(i17, 5)
+365: guard_false(i22, descr=<Guard0x3bc7340>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))')
debug_merge_point(0, 0, '(let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43)))')
debug_merge_point(0, 0, '(lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))')
+371: i23 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+375: p24 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+379: guard_class(p24, 16505296, descr=<Guard0x3bc7388>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5104 1)')
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 1)')
debug_merge_point(0, 0, '(> k5106 5)')
debug_merge_point(0, 0, '(if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))')
debug_merge_point(0, 0, '(let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42)))')
debug_merge_point(0, 0, '(* *d* k5106)')
debug_merge_point(0, 0, '(let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))))')
debug_merge_point(0, 0, '(+ j5101 AppRand38)')
+392: i27 = int_add(i17, 8)
debug_merge_point(0, 0, '(let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))')
debug_merge_point(0, 0, '(* *d* AppRand39)')
+396: i28 = int_is_true(i27)
+399: guard_true(i28, descr=<Guard0x3bc73d0>) [i0, p1, p2, p3]
+405: i30 = int_mul_ovf(8, i27)
+409: guard_no_overflow(descr=<Guard0x3bc7418>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))')
debug_merge_point(0, 0, '(+ i5096 AppRand40)')
+415: i31 = int_add_ovf(i23, i30)
+418: guard_no_overflow(descr=<Guard0x3bc7460>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand41 #f)')
+431: p33 = getfield_gc_r(ConstPtr(ptr32), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+435: guard_class(p33, 16622984, descr=<Guard0x3bc74a8>) [i0, p1, p2, p3]
+447: i36 = int_ge(i31, 0)
+451: guard_true(i36, descr=<Guard0x3bc74f0>) [i0, p1, p2, p3]
+457: i38 = int_lt(i31, 512)
+464: guard_true(i38, descr=<Guard0x3bc7538>) [i0, p1, p2, p3]
+470: p40 = getfield_gc_r(ConstPtr(ptr39), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+492: setarrayitem_gc(p40, i31, ConstPtr(ptr41), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))')
debug_merge_point(0, 0, '(+ k5106 1)')
debug_merge_point(0, 0, '(doloop5104 AppRand42)')
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)')
+497: p42 = new_with_vtable(descr=<SizeDescr 40>)
+538: p43 = new_with_vtable(descr=<SizeDescr 40>)
+549: p44 = new_with_vtable(descr=<SizeDescr 24>)
+560: setfield_gc(p44, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+564: setfield_gc(p44, i17, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+568: setfield_gc(p43, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+572: setfield_gc(p43, p44, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+576: setfield_gc(p43, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+580: setfield_gc(p42, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+584: setfield_gc(p43, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+595: setfield_gc(p42, ConstPtr(ptr46), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+599: setfield_gc(p42, i23, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed11.inst_vals_fixed_0 24 pure>)
+603: setfield_gc(p42, i17, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed11.inst_vals_fixed_1 32 pure>)
+607: i48 = int_ge(i23, -9223372036854775807)
+620: guard_true(i48, descr=<Guard0x3bd41a0>) [p43, p42, None, None, None, None]
+626: jump(p42, 2, p43, p13, i17, i23, p40, descr=TargetToken(62083088))
+688: --end of the loop--
[3e4c086b97ffd35] jit-log-opt-bridge}
[3e4c086b9b6e443] {jit-backend
[3e4c086b9c07a28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a900 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F875303000048FF04259040B903488B8D300100008139B01E01000F8500000000488B4108488B9538010000813A480E00000F8500000000488B5A084883FB017206813B900F00000F8500000000488B71104883C6010F80000000008138A8B800000F8500000000488B78104C8B0536FEFFFF4C39C70F85000000004C8B40204983F8017207418138601400000F8500000000498B78084839FE0F8F00000000488B78184C8B40284C8B48304C8B500841813A102001000F85000000004883FF017206813F601400000F85000000004C8B67084983FC000F8C000000004885F60F840000000041BD080000004C0FAFEE0F80000000004983F9017207418139601400000F85000000004D8B71084D01F50F80000000004D8B78084983FF01720741813FF08900000F8500000000488B0DD5FDFFFF48899D30010000488B59084D896F084883FB017206813BF08900000F8500000000488B4B084883F9000F8C000000004883F90D0F8D000000004889BD40010000488B3DAEFDFFFF4C8985480100004C8B4718418138C8EB02000F85000000004C8B4710498B7CC810813FF08C00000F8500000000488B4F188139C8EB02000F85000000004983FD000F8C00000000488B4F084939CD0F8D00000000488B4F10F64104810F858E010000488B3D75FDFFFF4A897CE9104989D5488B0C25F091F900488D9188000000483B14251092F9000F878801000048891425F091F90048C701A8B80000488D513848C7026014000048897208488D7A1048C707480E00004C898D500100004C8D4F2849C701B01E0100498941084989711048C741080000000048C741100000000048C741180000000048C741200000000048C741280000000048C741300000000048C747080000000048C747100000000048C747180000000048C7472000000000488B72084C8951084C8B95300100004C895708488B05ABFCFFFF48894110488B8548010000488941204C89A5580100004C8BA5400100004C896118488951284C89B5600100004C8BB5500100004C8971304C894F104C896F184C8B2D6DFCFFFF4C896F2048898D480100004889BD380100004C8995400100004C89A550010000488995300100004989F4488985680100004889DE4C89F94C89C7BB01000000FFB5600100004C89B560010000415E49BB209B6635D87F000041FFE3669049BB50B76535D87F000041FFD3E99BFCFFFF78105149BBF0A16535D87F000041FFD3790F4D89EB49C1EB074983F3F84C0FAB19E94CFEFFFF49BBF0A86635D87F00004C895D204D8D9B0002FFFF41FFD3E963FEFFFFFF35C5FAFFFF49BB60A76635D87F000041534D8D9BA0F8FEFF41FFE3FF35B1FAFFFF49BB70A76635D87F000041534D8D9B90F8FEFF41FFE3FF359DFAFFFF49BB80A76635D87F000041534D8D9B80F8FEFF41FFE3FF3589FAFFFF49BB90A76635D87F000041534D8D9B70F8FEFF41FFE3FF3575FAFFFF49BBA0A76635D87F000041534D8D9B60F8FEFF41FFE3FF3561FAFFFF49BBB0A76635D87F000041534D8D9B50F8FEFF41FFE3FF3555FAFFFF49BBC0A76635D87F000041534D8D9B40F8FEFF41FFE3FF3541FAFFFF49BBD0A76635D87F000041534D8D9B30F8FEFF41FFE3FF352DFAFFFF49BBE0A76635D87F000041534D8D9B20F8FEFF41FFE3FF3519FAFFFF49BBF0A76635D87F000041534D8D9B10F8FEFF41FFE3FF3505FAFFFF49BB00A86635D87F000041534D8D9B00F8FEFF41FFE3FF35F1F9FFFF49BB10A86635D87F000041534D8D9BF0F7FEFF41FFE3FF35DDF9FFFF49BB20A86635D87F000041534D8D9BE0F7FEFF41FFE3FF35C9F9FFFF49BB30A86635D87F000041534D8D9BD0F7FEFF41FFE3FF35B5F9FFFF49BB40A86635D87F000041534D8D9BC0F7FEFF41FFE3FF35A1F9FFFF49BB50A86635D87F000041534D8D9BB0F7FEFF41FFE3FF358DF9FFFF49BB60A86635D87F000041534D8D9BA0F7FEFF41FFE3FF3581F9FFFF49BB70A86635D87F000041534D8D9B90F7FEFF41FFE3FF356DF9FFFF49BB80A86635D87F000041534D8D9B80F7FEFF41FFE3FF3559F9FFFF49BB90A86635D87F000041534D8D9B70F7FEFF41FFE3FF354DF9FFFF49BBA0A86635D87F000041534D8D9B60F7FEFF41FFE3FF3539F9FFFF49BBB0A86635D87F000041534D8D9B50F7FEFF41FFE3FF3525F9FFFF49BBC0A86635D87F000041534D8D9B40F7FEFF41FFE3FF3511F9FFFF49BBD0A86635D87F000041534D8D9B30F7FEFF41FFE3FF35FDF8FFFF49BBE0A86635D87F000041534D8D9B20F7FEFF41FFE3
[3e4c086b9c11968] jit-backend-dump}
[3e4c086b9c1ccd3] {jit-backend-addr
Loop 30 ((let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)) from (void)) has address 0x7fd83566aa8d to 0x7fd83566ade0 (bootstrap 0x7fd83566aa00)
       gc table: 0x7fd83566a900
       function: 0x7fd83566aa00
         resops: 0x7fd83566aa8d
       failures: 0x7fd83566ade0
            end: 0x7fd83566b0f1
[3e4c086b9c1fbcb] jit-backend-addr}
[3e4c086b9c2415c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566aaa4 +0  8D030000
[3e4c086b9c25430] jit-backend-dump}
[3e4c086b9c2c83c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566aabb +0  92030000
[3e4c086b9c2d820] jit-backend-dump}
[3e4c086b9c30e8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566aad1 +0  98030000
[3e4c086b9c31c69] jit-backend-dump}
[3e4c086b9c352c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566aadf +0  C2030000
[3e4c086b9c36087] jit-backend-dump}
[3e4c086b9c39606] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566aaeb +0  D2030000
[3e4c086b9c3a3a8] jit-backend-dump}
[3e4c086b9c3d6b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566aaff +0  DA030000
[3e4c086b9c3e434] jit-backend-dump}
[3e4c086b9c4177c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab16 +0  DF030000
[3e4c086b9c42518] jit-backend-dump}
[3e4c086b9c45772] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab23 +0  EE030000
[3e4c086b9c464d7] jit-backend-dump}
[3e4c086b9c4981c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab40 +0  ED030000
[3e4c086b9c4a594] jit-backend-dump}
[3e4c086b9c4d7fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab52 +0  F7030000
[3e4c086b9c4e562] jit-backend-dump}
[3e4c086b9c5189e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab60 +0  05040000
[3e4c086b9c52606] jit-backend-dump}
[3e4c086b9c558a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab69 +0  18040000
[3e4c086b9c56611] jit-backend-dump}
[3e4c086b9c59935] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab79 +0  24040000
[3e4c086b9c5a6a3] jit-backend-dump}
[3e4c086b9c5d8cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab8c +0  2D040000
[3e4c086b9c5e628] jit-backend-dump}
[3e4c086b9c6195b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab99 +0  3C040000
[3e4c086b9c626ba] jit-backend-dump}
[3e4c086b9c6593e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566abb0 +0  41040000
[3e4c086b9c6669d] jit-backend-dump}
[3e4c086b9c6999c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566abd8 +0  35040000
[3e4c086b9c6a70a] jit-backend-dump}
[3e4c086b9c6d980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566abe6 +0  43040000
[3e4c086b9c6e6c9] jit-backend-dump}
[3e4c086b9c719f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566abf0 +0  55040000
[3e4c086b9c72761] jit-backend-dump}
[3e4c086b9c75a1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ac16 +0  4B040000
[3e4c086b9c7677f] jit-backend-dump}
[3e4c086b9c79ab5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ac2b +0  52040000
[3e4c086b9c7a829] jit-backend-dump}
[3e4c086b9c7da5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ac3b +0  5E040000
[3e4c086b9c7e7bd] jit-backend-dump}
[3e4c086b9c81ad2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ac45 +0  70040000
[3e4c086b9c82858] jit-backend-dump}
[3e4c086b9c85a84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ac52 +0  7F040000
[3e4c086b9c867ec] jit-backend-dump}
[3e4c086b9c8a5fc] jit-backend}
[3e4c086b9c8e4bd] {jit-log-opt-loop
# Loop 30 ((let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)) from (void)) : entry bridge with 106 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)) from (void)')
+405: guard_class(p0, 16504944, descr=<Guard0x3bd4380>) [p1, p0]
+424: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+428: guard_class(p1, 16435208, descr=<Guard0x3bc7b68>) [p1, p0]
+447: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+451: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x3bd4500>) [p1, p0]
debug_merge_point(0, 0, '(+ j5060 1)')
+469: guard_not_invalidated(descr=<Guard0x3bc7b20>) [p1, p0]
+469: i7 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+473: i9 = int_add_ovf(i7, 1)
+477: guard_no_overflow(descr=<Guard0x3bc7ad8>) [p1, p0]
debug_merge_point(0, 0, '(doloop5058 AppRand34)')
+483: guard_class(p3, 16478824, descr=<Guard0x3bc7a90>) [p1, p0]
+495: p11 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+506: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3bc7a48>) [p1, p0]
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 AppRand34)')
debug_merge_point(0, 0, '(> j5060 jj)')
+515: p13 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+519: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x3bd44a0>) [p1, p0]
+538: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+542: i16 = int_gt(i9, i15)
+545: guard_false(i16, descr=<Guard0x3bc7a00>) [p1, p0]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
+551: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+555: p18 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+559: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+563: p20 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+567: guard_class(p20, 16505296, descr=<Guard0x3bc79b8>) [p1, p0]
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
+580: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3bd4440>) [p1, p0]
+598: i23 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+602: i25 = int_gt(0, i23)
+606: guard_false(i25, descr=<Guard0x3bc7970>) [p1, p0]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
+612: i26 = int_is_true(i9)
+615: guard_true(i26, descr=<Guard0x3bc7928>) [p1, p0]
+621: i28 = int_mul_ovf(8, i9)
+631: guard_no_overflow(descr=<Guard0x3bc78e0>) [p1, p0]
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
+637: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x3bd43e0>) [p1, p0]
+656: i30 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+660: i31 = int_add_ovf(i30, i28)
+663: guard_no_overflow(descr=<Guard0x3bc7898>) [p1, p0]
debug_merge_point(0, 0, '(set! index SetBang3)')
+669: p32 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+673: guard_nonnull_class(p32, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd4320>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+699: p35 = getfield_gc_r(ConstPtr(ptr34), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+710: setfield_gc(p32, i31, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+714: guard_nonnull_class(p35, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd42c0>) [p35, p3, p1, i9, p19, p18, p17, p20, p5]
+732: i37 = getfield_gc_i(p35, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+736: i39 = int_ge(i37, 0)
+740: guard_true(i39, descr=<Guard0x3bc7850>) [p35, p3, p1, i9, p19, p18, p17, p20, p5]
+746: i41 = int_lt(i37, 13)
+750: guard_true(i41, descr=<Guard0x3bc7808>) [p35, p3, p1, i9, p19, p18, p17, p20, p5]
+770: p43 = getfield_gc_r(ConstPtr(ptr42), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+781: guard_class(p43, 16622984, descr=<Guard0x3bc77c0>) [p35, p3, p1, i9, p19, p18, p17, p20, p5]
+794: p46 = getfield_gc_r(ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+798: p47 = getarrayitem_gc_r(p46, i37, descr=<ArrayP 8>)
+803: guard_class(p47, ConstClass(W_Vector), descr=<Guard0x3bc7778>) [p35, p3, p1, i9, p19, p18, p17, p20, p5]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+815: p49 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+819: guard_class(p49, 16622984, descr=<Guard0x3bc7730>) [p35, p3, p1, i9, p19, p18, p17, p20, p5]
+831: i52 = int_ge(i31, 0)
+835: guard_true(i52, descr=<Guard0x3bc76e8>) [p35, p3, p1, i9, p19, p18, p17, p20, p5]
+841: i53 = getfield_gc_i(p47, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+845: i54 = int_lt(i31, i53)
+848: guard_true(i54, descr=<Guard0x3bc76a0>) [p35, p3, p1, i9, p19, p18, p17, p20, p5]
+854: p55 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+875: setarrayitem_gc(p55, i31, ConstPtr(ptr56), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+880: p57 = new_with_vtable(descr=<SizeDescr 56>)
+927: p58 = new_with_vtable(descr=<SizeDescr 16>)
+938: setfield_gc(p58, i9, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+942: p59 = new_with_vtable(descr=<SizeDescr 40>)
+953: p60 = new_with_vtable(descr=<SizeDescr 24>)
+971: setfield_gc(p60, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+975: setfield_gc(p60, i9, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1059: i61 = getfield_gc_i(p58, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1063: i62 = arraylen_gc(p46, descr=<ArrayP 8>)
+1063: setfield_gc(p57, p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1067: setfield_gc(p59, p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1085: setfield_gc(p57, ConstPtr(ptr63), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1089: setfield_gc(p57, p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1100: setfield_gc(p57, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1118: setfield_gc(p57, p58, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1122: setfield_gc(p57, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1140: setfield_gc(p59, p60, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1144: setfield_gc(p59, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1155: setfield_gc(p59, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1159: jump(p57, 1, p59, p5, p17, i23, p58, i61, p19, i30, p18, p35, p32, p46, descr=TargetToken(62083248))
+1248: --end of the loop--
[3e4c086b9ce2b91] jit-log-opt-loop}
[3e4c086ba18f4af] {jit-backend
[3e4c086ba286194] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b3a
[3e4c086ba2953eb] jit-backend-dump}
[3e4c086ba2a10e2] {jit-backend-addr
Loop 31 ((let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 AppRand34)) has address 0x7fd83566b60d to 0x7fd83566bc10 (bootstrap 0x7fd83566b580)
       gc table: 0x7fd83566b3a0
       function: 0x7fd83566b580
         resops: 0x7fd83566b60d
       failures: 0x7fd83566bc10
            end: 0x7fd83566c0ba
[3e4c086ba2a45da] jit-backend-addr}
[3e4c086ba2a8fd9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b624 +0  32060000
[3e4c086ba2aa38d] jit-backend-dump}
[3e4c086ba2ada77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b63a +0  38060000
[3e4c086ba2aea5f] jit-backend-dump}
[3e4c086ba2b20db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b64d +0  5D060000
[3e4c086ba2b2e6b] jit-backend-dump}
[3e4c086ba2b633e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b661 +0  65060000
[3e4c086ba2b707e] jit-backend-dump}
[3e4c086ba2ba496] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b675 +0  6D060000
[3e4c086ba2bb1f2] jit-backend-dump}
[3e4c086ba2be5f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b68b +0  73060000
[3e4c086ba2bf326] jit-backend-dump}
[3e4c086ba2c268a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b698 +0  82060000
[3e4c086ba2c33f8] jit-backend-dump}
[3e4c086ba2c67d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b6ac +0  8A060000
[3e4c086ba2c74e9] jit-backend-dump}
[3e4c086ba2ca838] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b6c0 +0  92060000
[3e4c086ba2cb562] jit-backend-dump}
[3e4c086ba2cea3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b6d0 +0  9E060000
[3e4c086ba2cf7b9] jit-backend-dump}
[3e4c086ba2d2abb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b6e7 +0  A3060000
[3e4c086ba2d37d4] jit-backend-dump}
[3e4c086ba2d6ab1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b6f5 +0  B1060000
[3e4c086ba2d77d0] jit-backend-dump}
[3e4c086ba2daaea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b702 +0  C0060000
[3e4c086ba2db809] jit-backend-dump}
[3e4c086ba2deaec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b716 +0  C8060000
[3e4c086ba2df802] jit-backend-dump}
[3e4c086ba2e2b56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b72c +0  CE060000
[3e4c086ba2e3869] jit-backend-dump}
[3e4c086ba2e6b90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b739 +0  DD060000
[3e4c086ba2e78ab] jit-backend-dump}
[3e4c086ba2eabd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b74d +0  E5060000
[3e4c086ba2eb8f7] jit-backend-dump}
[3e4c086ba2eebaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b761 +0  ED060000
[3e4c086ba2ef8cb] jit-backend-dump}
[3e4c086ba2f2bf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b777 +0  F3060000
[3e4c086ba2f390d] jit-backend-dump}
[3e4c086ba2f6bd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b797 +0  EF060000
[3e4c086ba2f78f1] jit-backend-dump}
[3e4c086ba2fb0eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b7a8 +0  FA060000
[3e4c086ba2fbe0a] jit-backend-dump}
[3e4c086ba2ff260] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b7b9 +0  05070000
[3e4c086ba2fff87] jit-backend-dump}
[3e4c086ba30333e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b7d0 +0  0A070000
[3e4c086ba304056] jit-backend-dump}
[3e4c086ba3073ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b7f5 +0  01070000
[3e4c086ba3080d3] jit-backend-dump}
[3e4c086ba30b46b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b7ff +0  13070000
[3e4c086ba30c190] jit-backend-dump}
[3e4c086ba30f4fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b809 +0  25070000
[3e4c086ba310206] jit-backend-dump}
[3e4c086ba3135d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b826 +0  24070000
[3e4c086ba3142f4] jit-backend-dump}
[3e4c086ba317698] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b841 +0  25070000
[3e4c086ba3183ea] jit-backend-dump}
[3e4c086ba31b7d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b85e +0  24070000
[3e4c086ba31c50c] jit-backend-dump}
[3e4c086ba31f836] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b877 +0  27070000
[3e4c086ba32056d] jit-backend-dump}
[3e4c086ba3238af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b89b +0  1F070000
[3e4c086ba3245d4] jit-backend-dump}
[3e4c086ba327920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b8b1 +0  25070000
[3e4c086ba328632] jit-backend-dump}
[3e4c086ba32b984] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b8c8 +0  2A070000
[3e4c086ba32c693] jit-backend-dump}
[3e4c086ba32fa31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b8d2 +0  3C070000
[3e4c086ba330765] jit-backend-dump}
[3e4c086ba333a76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b8e9 +0  41070000
[3e4c086ba334792] jit-backend-dump}
[3e4c086ba337aea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b8ff +0  47070000
[3e4c086ba338805] jit-backend-dump}
[3e4c086ba33bb2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b90f +0  53070000
[3e4c086ba33c835] jit-backend-dump}
[3e4c086ba33fb3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566b91d +0  61070000
[3e4c086ba340847] jit-backend-dump}
[3e4c086ba343b7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566bb93 +0  07050000
[3e4c086ba3448c0] jit-backend-dump}
[3e4c086ba348744] jit-backend}
[3e4c086ba34c477] {jit-log-opt-loop
# Loop 31 ((let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 AppRand34)) : entry bridge with 208 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 AppRand34)')
+629: guard_class(p1, 16435208, descr=<Guard0x3bd4560>) [p0, p1]
+648: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+652: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3bd45c0>) [p0, p1]
debug_merge_point(0, 0, '(> j5060 jj)')
+670: guard_not_invalidated(descr=<Guard0x3bc7c88>) [p0, p1]
+670: guard_class(p0, 16504944, descr=<Guard0x3bc7cd0>) [p0, p1]
+689: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+693: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+697: guard_class(p7, 16478824, descr=<Guard0x3bc7d18>) [p0, p1]
+709: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+720: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3bc7d60>) [p0, p1]
+729: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+733: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3bd4620>) [p0, p1]
+751: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+755: i14 = int_gt(i6, i13)
+758: guard_true(i14, descr=<Guard0x3bc7da8>) [p0, p1]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(void)')
+764: p15 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+775: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x3bc7df0>) [p0, p1]
+784: p17 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+788: p18 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)) from (void)')
+792: guard_class(p17, 16504944, descr=<Guard0x3bc7e38>) [p0, p1]
+804: p20 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+808: guard_class(p18, 16435208, descr=<Guard0x3bc7e80>) [p0, p1]
+820: p22 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+824: guard_nonnull_class(p22, ConstClass(ForwardLink), descr=<Guard0x3bd4680>) [p0, p1]
debug_merge_point(0, 0, '(+ i5054 1)')
+843: i24 = getfield_gc_i(p17, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+847: i26 = int_add_ovf(i24, 1)
+851: guard_no_overflow(descr=<Guard0x3bc7ec8>) [p0, p1]
debug_merge_point(0, 0, '(doloop5052 AppRand35)')
+857: guard_class(p20, 16478824, descr=<Guard0x3bc7f10>) [p0, p1]
+870: p28 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+881: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x3bc7f58>) [p0, p1]
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 AppRand35)')
debug_merge_point(0, 0, '(> i5054 ii)')
+890: p30 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+894: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3bd46e0>) [p0, p1]
+912: i32 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+916: i33 = int_gt(i26, i32)
+919: guard_true(i33, descr=<Guard0x3bc7fa0>) [p0, p1]
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(void)')
+925: p34 = getfield_gc_r(p18, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+936: guard_value(p34, ConstPtr(ptr35), descr=<Guard0x3bfc020>) [p0, p1]
+945: p36 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+949: p37 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+953: guard_class(p37, 16435208, descr=<Guard0x3bfc068>) [p0, p1]
+965: p39 = getfield_gc_r(p37, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+969: guard_nonnull_class(p39, ConstClass(ForwardLink), descr=<Guard0x3bd4740>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! *class* *iii* iclass)')
+994: p42 = getfield_gc_r(ConstPtr(ptr41), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+999: guard_nonnull_class(p42, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd47a0>) [p0, p1]
+1019: i44 = getfield_gc_i(p42, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1023: guard_class(p36, 16499664, descr=<Guard0x3bfc0b0>) [p0, p1]
+1036: p46 = getfield_gc_r(p36, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1040: guard_class(p46, 16500720, descr=<Guard0x3bfc0f8>) [p0, p1]
+1053: p48 = getfield_gc_r(p46, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1057: guard_nonnull_class(p48, ConstClass(W_Fixnum), descr=<Guard0x3bd4800>) [p0, p1]
+1090: p51 = getfield_gc_r(ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1101: guard_class(p51, 16623792, descr=<Guard0x3bfc140>) [p0, p1]
+1113: i54 = int_ge(i44, 0)
+1117: guard_true(i54, descr=<Guard0x3bfc188>) [p0, p1]
+1123: i56 = int_lt(i44, 13)
+1127: guard_true(i56, descr=<Guard0x3bfc1d0>) [p0, p1]
+1133: i57 = getfield_gc_i(p48, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1137: p59 = getfield_gc_r(ConstPtr(ptr58), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1141: setarrayitem_gc(p59, i44, i57, descr=<ArrayS 8>)
+1146: p60 = getfield_gc_r(p46, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1150: guard_class(p60, 16505296, descr=<Guard0x3bd4860>) [p37, p36, p60]
debug_merge_point(0, 0, '(vector-set! *piecemax* *iii* CellRef(index))')
+1162: p62 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1166: p63 = getfield_gc_r(p62, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1170: guard_nonnull_class(p63, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd48c0>) [p37, p36, p60]
+1189: i65 = getfield_gc_i(p63, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1200: p67 = getfield_gc_r(ConstPtr(ptr66), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1204: guard_class(p67, 16623792, descr=<Guard0x3bfc218>) [p37, p36, p60]
+1218: p70 = getfield_gc_r(ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1222: setarrayitem_gc(p70, i44, i65, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))')
debug_merge_point(0, 0, '(= *iii* typemax)')
+1233: i72 = int_eq(i44, 12)
guard_false(i72, descr=<Guard0x3bd4920>) [p60, i72, p37, p39]
debug_merge_point(0, 0, '(if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))')
debug_merge_point(0, 0, '(let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4))')
debug_merge_point(0, 0, '(+ *iii* 1)')
+1243: i74 = int_add(i44, 1)
debug_merge_point(0, 0, '(set! *iii* SetBang4)')
+1248: p75 = getfield_gc_r(p37, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1252: setfield_gc(p42, i74, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1270: guard_value(p75, ConstPtr(ptr76), descr=<Guard0x3bd4980>) [p75, p37, None, None]
+1279: p78 = getfield_gc_r(p37, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1283: p79 = getfield_gc_r(p37, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1287: guard_class(p79, 16435208, descr=<Guard0x3bfc260>) [p75, p37, None, None]
+1301: p81 = getfield_gc_r(p79, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1305: guard_nonnull_class(p81, ConstClass(ForwardLink), descr=<Guard0x3bd49e0>) [p75, p37, None, None]
debug_merge_point(0, 0, '(definePiece 0 3 0 1)')
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+1324: i84 = int_lt(i74, 13)
+1328: guard_true(i84, descr=<Guard0x3bfc2a8>) [p75, p37, None, None]
+1341: p86 = getfield_gc_r(ConstPtr(ptr85), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1345: guard_class(p86, 16622984, descr=<Guard0x3bfc2f0>) [p75, p37, None, None]
+1357: p89 = getfield_gc_r(ConstPtr(ptr88), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1361: p90 = getarrayitem_gc_r(p89, i74, descr=<ArrayP 8>)
+1366: guard_class(p90, ConstClass(W_Vector), descr=<Guard0x3bfc338>) [p75, p37, None, None]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+1379: p92 = getfield_gc_r(p90, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1383: guard_class(p92, 16622984, descr=<Guard0x3bfc380>) [p75, p37, None, None]
+1395: i94 = getfield_gc_i(p90, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1399: i96 = int_lt(0, i94)
+1403: guard_true(i96, descr=<Guard0x3bfc3c8>) [p75, p37, None, None]
+1409: p97 = getfield_gc_r(p90, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+1430: setarrayitem_gc(p97, 0, ConstPtr(ptr98), descr=<ArrayP 8>)
+1434: p99 = new_with_vtable(descr=<SizeDescr 56>)
+1481: p100 = new_with_vtable(descr=<SizeDescr 16>)
+1492: p101 = new_with_vtable(descr=<SizeDescr 16>)
+1503: setfield_gc(p101, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1511: setfield_gc(p100, p101, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1515: p102 = new_with_vtable(descr=<SizeDescr 40>)
+1527: p103 = new_with_vtable(descr=<SizeDescr 24>)
+1539: p104 = new_with_vtable(descr=<SizeDescr 56>)
+1557: setfield_gc(p104, ConstPtr(ptr105), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1561: setfield_gc(p104, ConstPtr(ptr106), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1572: setfield_gc(p104, ConstPtr(ptr107), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1590: setfield_gc(p104, ConstPtr(ptr108), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1594: setfield_gc(p104, p100, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1612: setfield_gc(p104, ConstPtr(ptr109), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1616: setfield_gc(p103, p104, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1620: setfield_gc(p103, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1628: p111 = new_with_vtable(descr=<SizeDescr 40>)
+1646: setfield_gc(p111, p81, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1657: p112 = new_with_vtable(descr=<SizeDescr 24>)
+1675: p113 = new_with_vtable(descr=<SizeDescr 56>)
+1694: setfield_gc(p113, ConstPtr(ptr105), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1699: setfield_gc(p113, ConstPtr(ptr114), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1704: setfield_gc(p113, ConstPtr(ptr107), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1716: setfield_gc(p113, ConstPtr(ptr115), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1721: setfield_gc(p113, ConstPtr(ptr108), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1726: setfield_gc(p113, p100, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1738: setfield_gc(p112, p113, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1742: setfield_gc(p112, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1750: setfield_gc(p111, p112, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1754: p117 = new_with_vtable(descr=<SizeDescr 40>)
+1766: setfield_gc(p117, p81, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1770: p118 = new_with_vtable(descr=<SizeDescr 24>)
+1789: setfield_gc(p118, ConstPtr(ptr119), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1794: setfield_gc(p118, p100, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1799: setfield_gc(p117, p118, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1803: p120 = new_with_vtable(descr=<SizeDescr 40>)
+1815: setfield_gc(p120, p81, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1819: setfield_gc(p120, p78, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1823: setfield_gc(p120, p79, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1834: setfield_gc(p120, ConstPtr(ptr121), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1838: setfield_gc(p117, p120, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1842: setfield_gc(p117, ConstPtr(ptr122), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1846: setfield_gc(p111, p117, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1850: setfield_gc(p111, ConstPtr(ptr123), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1955: p124 = getfield_gc_r(p100, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1959: setfield_gc(p102, p81, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1963: setfield_gc(p99, ConstPtr(ptr105), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1974: setfield_gc(p99, ConstPtr(ptr125), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1978: setfield_gc(p99, p100, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1989: setfield_gc(p102, ConstPtr(ptr126), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1993: setfield_gc(p102, p103, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1997: setfield_gc(p102, p111, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2001: setfield_gc(p99, ConstPtr(ptr107), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+2012: setfield_gc(p99, ConstPtr(ptr127), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+2016: setfield_gc(p99, ConstPtr(ptr109), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+2020: guard_nonnull_class(p124, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd4a40>) [p102, p99, None, None]
+2039: i129 = arraylen_gc(p89, descr=<ArrayP 8>)
+2039: jump(p99, 1, p102, p81, ConstPtr(ptr107), 1, ConstPtr(ptr127), 0, ConstPtr(ptr109), 0, p100, p42, p124, p89, descr=TargetToken(62083248))
+2160: --end of the loop--
[3e4c086ba3f64f7] jit-log-opt-loop}
[3e4c086ba5eee22] {jit-backend
[3e4c086ba65bc38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c230 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87F301000048FF042550C9C403488B8D380100008139480E00000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813AB01E01000F8500000000488B5A10488B7208813EA8B800000F8500000000488B7E104C8B0568FEFFFF4C39C70F85000000004C8B46184983F8017207418138601400000F8500000000498B78084839FB0F8F000000004885DB0F8500000000488B5E284883FB017206813B601400000F85000000004C8B4B084D85C90F85000000004C8B4E304983F9017207418139601400000F85000000004D8B51084C8B66204D8B6C24084983FD01720841817D00F08900000F85000000004C8B3518FEFFFF4D8B7E084D8955084983FF01720741813FF08900000F85000000004D8B77084983FE000F8C000000004983FE0D0F8D00000000488B0DFEFDFFFF48898540010000488B41188138C8EB02000F8500000000488B41104A8B4CF0108139F08C00000F85000000004C8B711841813EC8EB02000F85000000004983FA000F8C000000004C8B71084D39F20F8D00000000488B5110F64204810F856E000000488B0DC5FDFFFF4A894CD2104889B5480100004C8985500100004889BD5801000048899D300100004C898D600100004D89D64C89A5680100004C89FE4C89E94889C7BB0100000041BC0000000049BB209B6635D87F000041FFE3669049BB50B76535D87F000041FFD3E9FBFDFFFF78105249BBF0A16535D87F000041FFD3790F4D89D349C1EB074983F3F84C0FAB1AE96CFFFFFFFF3572FCFFFF49BBE0C06635D87F000041534D8D9B20DFFEFF41FFE3FF355EFCFFFF49BBF0C06635D87F000041534D8D9B10DFFEFF41FFE3FF354AFCFFFF49BB00C16635D87F000041534D8D9B00DFFEFF41FFE3FF3536FCFFFF49BB10C16635D87F000041534D8D9BF0DEFEFF41FFE3FF3522FCFFFF49BB20C16635D87F000041534D8D9BE0DEFEFF41FFE3FF3516FCFFFF49BB30C16635D87F000041534D8D9BD0DEFEFF41FFE3FF3502FCFFFF49BB40C16635D87F000041534D8D9BC0DEFEFF41FFE3FF35EEFBFFFF49BB50C16635D87F000041534D8D9BB0DEFEFF41FFE3FF35DAFBFFFF49BB60C16635D87F000041534D8D9BA0DEFEFF41FFE3FF35C6FBFFFF49BB70C16635D87F000041534D8D9B90DEFEFF41FFE3FF35B2FBFFFF49BB80C16635D87F000041534D8D9B80DEFEFF41FFE3FF359EFBFFFF49BB90C16635D87F000041534D8D9B70DEFEFF41FFE3FF358AFBFFFF49BBA0C16635D87F000041534D8D9B60DEFEFF41FFE3FF357EFBFFFF49BBB0C16635D87F000041534D8D9B50DEFEFF41FFE3FF356AFBFFFF49BBC0C16635D87F000041534D8D9B40DEFEFF41FFE3FF3556FBFFFF49BBD0C16635D87F000041534D8D9B30DEFEFF41FFE3FF354AFBFFFF49BBE0C16635D87F000041534D8D9B20DEFEFF41FFE3FF3536FBFFFF49BBF0C16635D87F000041534D8D9B10DEFEFF41FFE3FF3522FBFFFF49BB00C26635D87F000041534D8D9B00DEFEFF41FFE3FF350EFBFFFF49BB10C26635D87F000041534D8D9BF0DDFEFF41FFE3FF35FAFAFFFF49BB20C26635D87F000041534D8D9BE0DDFEFF41FFE3
[3e4c086ba6642f6] jit-backend-dump}
[3e4c086ba66f14a] {jit-backend-addr
Loop 32 ((let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)) has address 0x7fd83566c38d to 0x7fd83566c580 (bootstrap 0x7fd83566c300)
       gc table: 0x7fd83566c230
       function: 0x7fd83566c300
         resops: 0x7fd83566c38d
       failures: 0x7fd83566c580
            end: 0x7fd83566c804
[3e4c086ba672288] jit-backend-addr}
[3e4c086ba676c5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c3a4 +0  10020000
[3e4c086ba67806c] jit-backend-dump}
[3e4c086ba67b842] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c3ba +0  16020000
[3e4c086ba67c897] jit-backend-dump}
[3e4c086ba68005e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c3cd +0  3B020000
[3e4c086ba680e6b] jit-backend-dump}
[3e4c086ba68432c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c3e1 +0  43020000
[3e4c086ba6851a4] jit-backend-dump}
[3e4c086ba68851d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c3f5 +0  4B020000
[3e4c086ba6892d5] jit-backend-dump}
[3e4c086ba68c620] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c40c +0  50020000
[3e4c086ba68d36a] jit-backend-dump}
[3e4c086ba690616] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c419 +0  5F020000
[3e4c086ba691353] jit-backend-dump}
[3e4c086ba6945fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c422 +0  72020000
[3e4c086ba695334] jit-backend-dump}
[3e4c086ba69867c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c438 +0  78020000
[3e4c086ba6993b3] jit-backend-dump}
[3e4c086ba69c68b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c445 +0  87020000
[3e4c086ba69d3fc] jit-backend-dump}
[3e4c086ba6a06cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c45c +0  8C020000
[3e4c086ba6a140a] jit-backend-dump}
[3e4c086ba6a46a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c47d +0  87020000
[3e4c086ba6a53ee] jit-backend-dump}
[3e4c086ba6a86ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c49f +0  81020000
[3e4c086ba6a943c] jit-backend-dump}
[3e4c086ba6ac6ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c4ad +0  8F020000
[3e4c086ba6ad3e0] jit-backend-dump}
[3e4c086ba6b0655] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c4b7 +0  A1020000
[3e4c086ba6b1389] jit-backend-dump}
[3e4c086ba6b4642] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c4d5 +0  9F020000
[3e4c086ba6b5363] jit-backend-dump}
[3e4c086ba6b85ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c4ea +0  A6020000
[3e4c086ba6b92f4] jit-backend-dump}
[3e4c086ba6bc579] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c4fb +0  B1020000
[3e4c086ba6bd2b3] jit-backend-dump}
[3e4c086ba6c054a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c505 +0  C3020000
[3e4c086ba6c12ac] jit-backend-dump}
[3e4c086ba6c453a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566c512 +0  D2020000
[3e4c086ba6c5271] jit-backend-dump}
[3e4c086ba6c8faa] jit-backend}
[3e4c086ba6cce59] {jit-log-opt-loop
# Loop 32 ((let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)) : entry bridge with 71 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
+357: guard_class(p1, 16435208, descr=<Guard0x3bd4aa0>) [p0, p1]
+376: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+380: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3bd4b00>) [p0, p1]
debug_merge_point(0, 0, '(> k5066 kk)')
+398: guard_not_invalidated(descr=<Guard0x3bfc410>) [p0, p1]
+398: guard_class(p0, 16504944, descr=<Guard0x3bfc458>) [p0, p1]
+417: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+421: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+425: guard_class(p7, 16478824, descr=<Guard0x3bfc4a0>) [p0, p1]
+437: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+448: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3bfc4e8>) [p0, p1]
+457: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+461: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3bd4b60>) [p0, p1]
+480: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+484: i14 = int_gt(i6, i13)
+487: guard_false(i14, descr=<Guard0x3bfc530>) [p0, p1]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
+493: i15 = int_is_true(i6)
+496: guard_false(i15, descr=<Guard0x3bfc578>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
+502: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+506: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x3bd4bc0>) [p0, p1]
+524: i18 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
+528: i19 = int_is_true(i18)
+531: guard_false(i19, descr=<Guard0x3bfc5c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
+537: p20 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+541: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x3bd4c20>) [p0, p1]
+560: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(set! index SetBang3)')
+564: p23 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+568: p24 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+573: guard_nonnull_class(p24, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd4c80>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+600: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+604: setfield_gc(p24, i22, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+608: guard_nonnull_class(p27, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd4ce0>) [p7, p27, p1, p0, p3]
+627: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+631: i31 = int_ge(i29, 0)
+635: guard_true(i31, descr=<Guard0x3bfc608>) [p7, p27, p1, p0, p3]
+641: i33 = int_lt(i29, 13)
+645: guard_true(i33, descr=<Guard0x3bfc650>) [p7, p27, p1, p0, p3]
+658: p35 = getfield_gc_r(ConstPtr(ptr34), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+669: guard_class(p35, 16622984, descr=<Guard0x3bfc698>) [p7, p27, p1, p0, p3]
+681: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+685: p39 = getarrayitem_gc_r(p38, i29, descr=<ArrayP 8>)
+690: guard_class(p39, ConstClass(W_Vector), descr=<Guard0x3bfc6e0>) [p7, p27, p1, p0, p3]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+702: p41 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+706: guard_class(p41, 16622984, descr=<Guard0x3bfc728>) [p7, p27, p1, p0, p3]
+719: i44 = int_ge(i22, 0)
+723: guard_true(i44, descr=<Guard0x3bfc770>) [p7, p27, p1, p0, p3]
+729: i45 = getfield_gc_i(p39, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+733: i46 = int_lt(i22, i45)
+736: guard_true(i46, descr=<Guard0x3bfc7b8>) [p7, p27, p1, p0, p3]
+742: p47 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+763: setarrayitem_gc(p47, i22, ConstPtr(ptr48), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+768: i49 = arraylen_gc(p38, descr=<ArrayP 8>)
+768: jump(p7, 1, p1, p3, p11, i13, p16, 0, p20, i22, p23, p27, p24, p38, descr=TargetToken(62083248))
+848: --end of the loop--
[3e4c086ba70d0ab] jit-log-opt-loop}
[3e4c086ba9f3adf] {jit-backend
[3e4c086baaae40e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ca
[3e4c086baab978c] jit-backend-dump}
[3e4c086baac4fb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cb34 +0  24000000
[3e4c086baac66f3] jit-backend-dump}
[3e4c086baaca67a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cf05 +0  24000000
[3e4c086baacb60f] jit-backend-dump}
[3e4c086baacea96] {jit-backend-addr
bridge out of Guard 0x3bc6578 has address 0x7fd83566cb30 to 0x7fd83566cf00
       gc table: 0x7fd83566ca10
    jump target: 0x7fd83566cb30
         resops: 0x7fd83566cb3e
       failures: 0x7fd83566cf00
            end: 0x7fd83566d297
[3e4c086baad0efb] jit-backend-addr}
[3e4c086baad4632] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cb5d +0  26040000
[3e4c086baad550f] jit-backend-dump}
[3e4c086baad8934] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cb74 +0  2B040000
[3e4c086baad9671] jit-backend-dump}
[3e4c086baadc94b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cb81 +0  3A040000
[3e4c086baadd66a] jit-backend-dump}
[3e4c086baae091c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cb9d +0  3A040000
[3e4c086baae1619] jit-backend-dump}
[3e4c086baae4a69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cbb4 +0  3F040000
[3e4c086baae5775] jit-backend-dump}
[3e4c086baae89f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cbc5 +0  4A040000
[3e4c086baae9703] jit-backend-dump}
[3e4c086baaec95a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cbdb +0  50040000
[3e4c086baaed660] jit-backend-dump}
[3e4c086baaf0965] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cbe9 +0  5E040000
[3e4c086baaf166e] jit-backend-dump}
[3e4c086baaf48c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cbf6 +0  6D040000
[3e4c086baaf55d4] jit-backend-dump}
[3e4c086baaf88ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cc0a +0  75040000
[3e4c086baaf95ec] jit-backend-dump}
[3e4c086baafc8a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cc20 +0  7B040000
[3e4c086baafd5ae] jit-backend-dump}
[3e4c086bab047bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cc2d +0  8A040000
[3e4c086bab055ef] jit-backend-dump}
[3e4c086bab08950] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cc49 +0  8A040000
[3e4c086bab0964d] jit-backend-dump}
[3e4c086bab0c8cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cc5c +0  93040000
[3e4c086bab0d5d2] jit-backend-dump}
[3e4c086bab1086c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cc71 +0  9A040000
[3e4c086bab11560] jit-backend-dump}
[3e4c086bab147a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cc7a +0  AD040000
[3e4c086bab154a1] jit-backend-dump}
[3e4c086bab18744] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cc91 +0  B2040000
[3e4c086bab19444] jit-backend-dump}
[3e4c086bab1c6cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cca3 +0  BC040000
[3e4c086bab1d3c0] jit-backend-dump}
[3e4c086bab205e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ccb7 +0  C4040000
[3e4c086bab212e3] jit-backend-dump}
[3e4c086bab24518] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cce2 +0  B5040000
[3e4c086bab25212] jit-backend-dump}
[3e4c086bab284a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cd05 +0  AE040000
[3e4c086bab29190] jit-backend-dump}
[3e4c086bab2c3b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cd13 +0  BC040000
[3e4c086bab2d0ad] jit-backend-dump}
[3e4c086bab302a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cd1d +0  CE040000
[3e4c086bab30f9c] jit-backend-dump}
[3e4c086bab34175] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cd3b +0  CC040000
[3e4c086bab34e69] jit-backend-dump}
[3e4c086bab38027] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cd50 +0  D3040000
[3e4c086bab38d1e] jit-backend-dump}
[3e4c086bab3bf90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cd62 +0  DD040000
[3e4c086bab3cc87] jit-backend-dump}
[3e4c086bab3fedb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cd6c +0  EF040000
[3e4c086bab40bff] jit-backend-dump}
[3e4c086bab43e4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cd79 +0  FE040000
[3e4c086bab44b2e] jit-backend-dump}
[3e4c086bab47fa6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835669b31 +0  FB2F0000
[3e4c086bab48c8a] jit-backend-dump}
[3e4c086bab4cd41] jit-backend}
[3e4c086bab50bda] {jit-log-opt-bridge
# bridge out of Guard 0x3bc6578 with 119 ops
[i0, p1, p2, p3]
+310: guard_not_invalidated(descr=<Guard0x3bd4d40>) [i0, p1, p2, p3]
+310: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+328: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3bfc800>) [i0, p1, p2, p3]
+337: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+341: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3bd4da0>) [i0, p1, p2, p3]
+360: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+364: i9 = int_gt(i0, i8)
+367: guard_true(i9, descr=<Guard0x3bfc848>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(void)')
+373: p10 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+392: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3bfc890>) [i0, p1, p2, p3]
+401: p12 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+406: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)) from (void)')
+411: guard_class(p12, 16504944, descr=<Guard0x3bfc8d8>) [i0, p1, p2, p3]
+424: p15 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+428: guard_class(p13, 16435208, descr=<Guard0x3bfc920>) [i0, p1, p2, p3]
+441: p17 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+445: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x3bd4e00>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ j5060 1)')
+463: i19 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+467: i21 = int_add_ovf(i19, 1)
+471: guard_no_overflow(descr=<Guard0x3bfc968>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5058 AppRand34)')
+477: guard_class(p15, 16478824, descr=<Guard0x3bfc9b0>) [i0, p1, p2, p3]
+490: p23 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+501: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x3bfc9f8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 AppRand34)')
debug_merge_point(0, 0, '(> j5060 jj)')
+510: p25 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+514: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x3bd4e60>) [i0, p1, p2, p3]
+532: i27 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+536: i28 = int_gt(i21, i27)
+539: guard_false(i28, descr=<Guard0x3bfca40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
+545: p29 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+549: p30 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+553: p31 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+557: p32 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+561: guard_class(p32, 16505296, descr=<Guard0x3bfca88>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
+573: guard_nonnull_class(p29, ConstClass(W_Fixnum), descr=<Guard0x3bd4ec0>) [i0, p1, p2, p3]
+592: i35 = getfield_gc_i(p29, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+603: i37 = int_gt(0, i35)
+607: guard_false(i37, descr=<Guard0x3bfcad0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
+613: i38 = int_is_true(i21)
+616: guard_true(i38, descr=<Guard0x3bfcb18>) [i0, p1, p2, p3]
+622: i40 = int_mul_ovf(8, i21)
+639: guard_no_overflow(descr=<Guard0x3bfcb60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
+645: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3bd4f20>) [i0, p1, p2, p3]
+663: i42 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+674: i43 = int_add_ovf(i42, i40)
+677: guard_no_overflow(descr=<Guard0x3bfcba8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(set! index SetBang3)')
+683: p44 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+708: guard_nonnull_class(p44, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd4f80>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+733: p47 = getfield_gc_r(ConstPtr(ptr46), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+738: setfield_gc(p44, i43, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+742: guard_nonnull_class(p47, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd4fe0>) [p47, p15, p13, i21, p31, p30, p29, p32, p17, None, None, None, None]
+761: i50 = getfield_gc_i(p47, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+765: i52 = int_ge(i50, 0)
+769: guard_true(i52, descr=<Guard0x3bfcbf0>) [p47, p15, p13, i21, p31, p30, p29, p32, p17, None, None, None, None]
+775: i54 = int_lt(i50, 13)
+779: guard_true(i54, descr=<Guard0x3bfcc38>) [p47, p15, p13, i21, p31, p30, p29, p32, p17, None, None, None, None]
+792: p56 = getfield_gc_r(ConstPtr(ptr55), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+803: guard_class(p56, 16622984, descr=<Guard0x3bfcc80>) [p47, p15, p13, i21, p31, p30, p29, p32, p17, None, None, None, None]
+815: p59 = getfield_gc_r(ConstPtr(ptr58), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+819: p60 = getarrayitem_gc_r(p59, i50, descr=<ArrayP 8>)
+824: guard_class(p60, ConstClass(W_Vector), descr=<Guard0x3bfccc8>) [p47, p15, p13, i21, p31, p30, p29, p32, p17, None, None, None, None]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+836: p62 = getfield_gc_r(p60, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+840: guard_class(p62, 16622984, descr=<Guard0x3bfcd10>) [p47, p15, p13, i21, p31, p30, p29, p32, p17, None, None, None, None]
+854: i65 = int_ge(i43, 0)
+858: guard_true(i65, descr=<Guard0x3bfcd58>) [p47, p15, p13, i21, p31, p30, p29, p32, p17, None, None, None, None]
+864: i66 = getfield_gc_i(p60, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+868: i67 = int_lt(i43, i66)
+871: guard_true(i67, descr=<Guard0x3bfcda0>) [p47, p15, p13, i21, p31, p30, p29, p32, p17, None, None, None, None]
+877: p68 = getfield_gc_r(p60, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+900: setarrayitem_gc(p68, i43, ConstPtr(ptr69), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+905: p70 = new_with_vtable(descr=<SizeDescr 56>)
+955: p71 = new_with_vtable(descr=<SizeDescr 16>)
+966: setfield_gc(p71, i21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+970: p72 = new_with_vtable(descr=<SizeDescr 40>)
+982: p73 = new_with_vtable(descr=<SizeDescr 24>)
+994: setfield_gc(p73, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+998: setfield_gc(p73, i21, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1086: i74 = getfield_gc_i(p71, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1090: i75 = arraylen_gc(p59, descr=<ArrayP 8>)
+1090: setfield_gc(p70, ConstPtr(ptr76), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1094: setfield_gc(p70, p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1105: setfield_gc(p72, ConstPtr(ptr77), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1110: setfield_gc(p72, p73, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1115: setfield_gc(p72, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1120: setfield_gc(p70, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1124: setfield_gc(p72, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1136: setfield_gc(p70, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1147: setfield_gc(p70, p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1151: setfield_gc(p70, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1162: jump(p70, 1, p72, p17, p29, i35, p71, i74, p31, i42, p30, p47, p44, p59, descr=TargetToken(62083248))
+1264: --end of the loop--
[3e4c086babe5a76] jit-log-opt-bridge}
[3e4c086bb79d336] {jit-backend
[3e4c086bb806850] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d3e
[3e4c086bb80e8e7] jit-backend-dump}
[3e4c086bb81a0a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d4a4 +0  1F000000
[3e4c086bb81b649] jit-backend-dump}
[3e4c086bb81f96f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d695 +0  1F000000
[3e4c086bb820907] jit-backend-dump}
[3e4c086bb823f3d] {jit-backend-addr
bridge out of Guard 0x3b0cba8 has address 0x7fd83566d4a0 to 0x7fd83566d690
       gc table: 0x7fd83566d3e0
    jump target: 0x7fd83566d4a0
         resops: 0x7fd83566d4ae
       failures: 0x7fd83566d690
            end: 0x7fd83566d8e8
[3e4c086bb826463] jit-backend-addr}
[3e4c086bb829da8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d4bf +0  49020000
[3e4c086bb82ace7] jit-backend-dump}
[3e4c086bb82e1e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d4da +0  4A020000
[3e4c086bb82ef7e] jit-backend-dump}
[3e4c086bb832460] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d4ef +0  51020000
[3e4c086bb8331ed] jit-backend-dump}
[3e4c086bb836548] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d501 +0  5B020000
[3e4c086bb83727f] jit-backend-dump}
[3e4c086bb83a51c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d519 +0  5F020000
[3e4c086bb83b225] jit-backend-dump}
[3e4c086bb83e4f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d527 +0  6D020000
[3e4c086bb83f22a] jit-backend-dump}
[3e4c086bb842529] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d534 +0  7C020000
[3e4c086bb84323f] jit-backend-dump}
[3e4c086bb846480] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d54b +0  81020000
[3e4c086bb8471ae] jit-backend-dump}
[3e4c086bb84a3da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d55f +0  89020000
[3e4c086bb84b0e0] jit-backend-dump}
[3e4c086bb84e41c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d56c +0  98020000
[3e4c086bb84f122] jit-backend-dump}
[3e4c086bb852364] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d576 +0  AA020000
[3e4c086bb85306a] jit-backend-dump}
[3e4c086bb8562fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d586 +0  B6020000
[3e4c086bb857004] jit-backend-dump}
[3e4c086bb85a24c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d590 +0  C8020000
[3e4c086bb85af61] jit-backend-dump}
[3e4c086bb85e1cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d5a7 +0  CD020000
[3e4c086bb85eefe] jit-backend-dump}
[3e4c086bb8620e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d5bd +0  D3020000
[3e4c086bb862df3] jit-backend-dump}
[3e4c086bb865fe2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d5cd +0  DF020000
[3e4c086bb866ceb] jit-backend-dump}
[3e4c086bb869f08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d5db +0  ED020000
[3e4c086bb86ac0e] jit-backend-dump}
[3e4c086bb86e048] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c0f1 +0  AB130100
[3e4c086bb86ed79] jit-backend-dump}
[3e4c086bb872f21] jit-backend}
[3e4c086bb876c39] {jit-log-opt-bridge
# bridge out of Guard 0x3b0cba8 with 76 ops
[i0, p1, p2, p3]
+214: guard_not_invalidated(descr=<Guard0x3bd5040>) [i0, p1, p2, p3]
+214: i5 = int_gt(i0, 511)
+221: guard_true(i5, descr=<Guard0x3bfcde8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))')
debug_merge_point(0, 0, '(void)')
+227: p6 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+245: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3bfce30>) [i0, p1, p2, p3]
+254: p8 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+258: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47)) from (void)')
+262: guard_class(p8, 16504944, descr=<Guard0x3bfce78>) [i0, p1, p2, p3]
+275: p11 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+279: guard_class(p9, 16435208, descr=<Guard0x3bfcec0>) [i0, p1, p2, p3]
+293: p13 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+298: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3bd50a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5123 1)')
+317: i15 = getfield_gc_i(p8, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+321: i17 = int_add_ovf(i15, 1)
+325: guard_no_overflow(descr=<Guard0x3bfcf08>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5121 AppRand47)')
+331: guard_class(p11, 16499664, descr=<Guard0x3bfcf50>) [i0, p1, p2, p3]
+344: p19 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+348: guard_nonnull_class(p19, 16510992, descr=<Guard0x3bd5100>) [i0, p1, p2, p3]
+367: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+378: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x3bfcf98>) [i0, p1, p2, p3]
+387: p23 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+391: i24 = instance_ptr_eq(p11, p23)
+394: guard_true(i24, descr=<Guard0x3bfcfe0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))) from (doloop5121 AppRand47)')
debug_merge_point(0, 0, '(> i5123 typemax)')
+400: i26 = int_gt(i17, 12)
+404: guard_false(i26, descr=<Guard0x3bfd028>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))')
debug_merge_point(0, 0, '(let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47)))')
debug_merge_point(0, 0, '(lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))')
+410: p27 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+414: guard_class(p27, 16505296, descr=<Guard0x3bfd070>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5126 0)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 0)')
debug_merge_point(0, 0, '(> m5128 size)')
debug_merge_point(0, 0, '(if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))')
debug_merge_point(0, 0, '(let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46)))')
debug_merge_point(0, 0, '(vector-ref *p* i5123)')
+426: i30 = int_ge(i17, 0)
+430: guard_true(i30, descr=<Guard0x3bfd0b8>) [i0, p1, p2, p3]
+443: p32 = getfield_gc_r(ConstPtr(ptr31), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+447: guard_class(p32, 16622984, descr=<Guard0x3bfd100>) [i0, p1, p2, p3]
+459: p35 = getfield_gc_r(ConstPtr(ptr34), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+463: p36 = getarrayitem_gc_r(p35, i17, descr=<ArrayP 8>)
+468: guard_class(p36, ConstClass(W_Vector), descr=<Guard0x3bfd148>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! AppRand45 m5128 #f)')
+481: p38 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+485: guard_class(p38, 16622984, descr=<Guard0x3bfd190>) [i0, p1, p2, p3]
+497: i40 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+501: i42 = int_lt(0, i40)
+505: guard_true(i42, descr=<Guard0x3bfd1d8>) [i0, p1, p2, p3]
+511: p43 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))')
debug_merge_point(0, 0, '(+ m5128 1)')
debug_merge_point(0, 0, '(doloop5126 AppRand46)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)')
+533: setarrayitem_gc(p43, 0, ConstPtr(ptr44), descr=<ArrayP 8>)
+537: p45 = new_with_vtable(descr=<SizeDescr 32>)
+578: p46 = new_with_vtable(descr=<SizeDescr 40>)
+589: p47 = new_with_vtable(descr=<SizeDescr 24>)
+600: setfield_gc(p47, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+604: setfield_gc(p47, i17, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+608: i48 = arraylen_gc(p35, descr=<ArrayP 8>)
+608: setfield_gc(p46, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+612: setfield_gc(p46, p47, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+616: setfield_gc(p46, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+620: setfield_gc(p45, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+624: setfield_gc(p46, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+635: setfield_gc(p45, ConstPtr(ptr50), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+639: setfield_gc(p45, i17, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+643: jump(p45, 1, p46, p13, p35, i17, descr=TargetToken(61624176))
+688: --end of the loop--
[3e4c086bb8bedf0] jit-log-opt-bridge}
[3e4c086bc6af28b] {jit-backend
[3e4c086bc77e16c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566db
[3e4c086bc78a0d3] jit-backend-dump}
[3e4c086bc7956ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dc84 +0  24000000
[3e4c086bc796d96] jit-backend-dump}
[3e4c086bc79adc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566e105 +0  24000000
[3e4c086bc79bd24] jit-backend-dump}
[3e4c086bc79f344] {jit-backend-addr
bridge out of Guard 0x3bc7a00 has address 0x7fd83566dc80 to 0x7fd83566e100
       gc table: 0x7fd83566db30
    jump target: 0x7fd83566dc80
         resops: 0x7fd83566dc8e
       failures: 0x7fd83566e100
            end: 0x7fd83566e505
[3e4c086bc7a1934] jit-backend-addr}
[3e4c086bc7a5107] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dc9e +0  C7040000
[3e4c086bc7a5fde] jit-backend-dump}
[3e4c086bc7a9504] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dcae +0  D3040000
[3e4c086bc7aa2a0] jit-backend-dump}
[3e4c086bc7ad6d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dcc5 +0  D8040000
[3e4c086bc7ae414] jit-backend-dump}
[3e4c086bc7b18f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dcd3 +0  02050000
[3e4c086bc7b2640] jit-backend-dump}
[3e4c086bc7b5994] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dce0 +0  11050000
[3e4c086bc7b66ea] jit-backend-dump}
[3e4c086bc7b99fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dcf4 +0  19050000
[3e4c086bc7ba751] jit-backend-dump}
[3e4c086bc7bda07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dd0c +0  1D050000
[3e4c086bc7be728] jit-backend-dump}
[3e4c086bc7c19f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dd19 +0  2C050000
[3e4c086bc7c2749] jit-backend-dump}
[3e4c086bc7c5a6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dd2d +0  34050000
[3e4c086bc7c67b0] jit-backend-dump}
[3e4c086bc7c9ae9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dd42 +0  3B050000
[3e4c086bc7ca81d] jit-backend-dump}
[3e4c086bc7cdb6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dd54 +0  45050000
[3e4c086bc7ce8b5] jit-backend-dump}
[3e4c086bc7d1c04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dd6b +0  4A050000
[3e4c086bc7d2932] jit-backend-dump}
[3e4c086bc7d5c12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dd79 +0  58050000
[3e4c086bc7d694c] jit-backend-dump}
[3e4c086bc7d9c0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dd86 +0  67050000
[3e4c086bc7da93f] jit-backend-dump}
[3e4c086bc7ddca9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dd9a +0  6F050000
[3e4c086bc7de9e0] jit-backend-dump}
[3e4c086bc7e1ccd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ddb0 +0  75050000
[3e4c086bc7e29f8] jit-backend-dump}
[3e4c086bc7e5df5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ddbd +0  84050000
[3e4c086bc7e6b13] jit-backend-dump}
[3e4c086bc7e9e6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ddd9 +0  84050000
[3e4c086bc7eabae] jit-backend-dump}
[3e4c086bc7ede5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ddeb +0  8E050000
[3e4c086bc7eeb86] jit-backend-dump}
[3e4c086bc7f1ee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ddf9 +0  9C050000
[3e4c086bc7f2c08] jit-backend-dump}
[3e4c086bc7f5f20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566de0c +0  A5050000
[3e4c086bc7f6c5d] jit-backend-dump}
[3e4c086bc7f9f68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566de1a +0  B3050000
[3e4c086bc7facac] jit-backend-dump}
[3e4c086bc7fdf9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566de38 +0  B1050000
[3e4c086bc7fecbd] jit-backend-dump}
[3e4c086bc801fff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566de59 +0  AC050000
[3e4c086bc802d43] jit-backend-dump}
[3e4c086bc806088] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566de67 +0  BA050000
[3e4c086bc806dad] jit-backend-dump}
[3e4c086bc80a0ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566de71 +0  CC050000
[3e4c086bc80ae23] jit-backend-dump}
[3e4c086bc80e162] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566de96 +0  C3050000
[3e4c086bc80ee96] jit-backend-dump}
[3e4c086bc812219] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566deac +0  C9050000
[3e4c086bc812f44] jit-backend-dump}
[3e4c086bc816307] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566debc +0  D5050000
[3e4c086bc81702b] jit-backend-dump}
[3e4c086bc81a389] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566dec6 +0  E7050000
[3e4c086bc81b0d9] jit-backend-dump}
[3e4c086bc81e471] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ded3 +0  F6050000
[3e4c086bc81f19f] jit-backend-dump}
[3e4c086bc8224bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566e081 +0  64040000
[3e4c086bc8231e4] jit-backend-dump}
[3e4c086bc8267b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ab23 +0  59310000
[3e4c086bc827523] jit-backend-dump}
[3e4c086bc82b761] jit-backend}
[3e4c086bc82f4ea] {jit-log-opt-bridge
# bridge out of Guard 0x3bc7a00 with 151 ops
[p0, p1]
+358: guard_class(p1, 16504944, descr=<Guard0x3bd5220>) [p0, p1]
+370: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+374: guard_class(p0, 16435208, descr=<Guard0x3bfd340>) [p0, p1]
+386: p5 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+390: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x3bd5280>) [p0, p1]
debug_merge_point(0, 0, '(+ j5060 1)')
+409: guard_not_invalidated(descr=<Guard0x3bfd388>) [p0, p1]
+409: i7 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+413: i9 = int_add_ovf(i7, 1)
+417: guard_no_overflow(descr=<Guard0x3bfd3d0>) [p0, p1]
debug_merge_point(0, 0, '(doloop5058 AppRand34)')
+423: guard_class(p3, 16478824, descr=<Guard0x3bfd418>) [p0, p1]
+436: p11 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+447: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3bfd460>) [p0, p1]
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 AppRand34)')
debug_merge_point(0, 0, '(> j5060 jj)')
+456: p13 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+460: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x3bd52e0>) [p0, p1]
+480: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+484: i16 = int_gt(i9, i15)
+487: guard_true(i16, descr=<Guard0x3bfd4a8>) [p0, p1]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(void)')
+493: p17 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+504: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3bfd4f0>) [p0, p1]
+513: p19 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+517: p20 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)) from (void)')
+521: guard_class(p19, 16504944, descr=<Guard0x3bfd538>) [p0, p1]
+534: p22 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+538: guard_class(p20, 16435208, descr=<Guard0x3bfd580>) [p0, p1]
+552: p24 = getfield_gc_r(p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+556: guard_nonnull_class(p24, ConstClass(ForwardLink), descr=<Guard0x3bd5340>) [p0, p1]
debug_merge_point(0, 0, '(+ i5054 1)')
+575: i26 = getfield_gc_i(p19, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+579: i28 = int_add_ovf(i26, 1)
+583: guard_no_overflow(descr=<Guard0x3bfd5c8>) [p0, p1]
debug_merge_point(0, 0, '(doloop5052 AppRand35)')
+589: guard_class(p22, 16478824, descr=<Guard0x3bfd610>) [p0, p1]
+602: p30 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+613: guard_value(p30, ConstPtr(ptr31), descr=<Guard0x3bfd658>) [p0, p1]
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 AppRand35)')
debug_merge_point(0, 0, '(> i5054 ii)')
+622: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+626: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3bd53a0>) [p0, p1]
+644: i34 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+648: i35 = int_gt(i28, i34)
+651: guard_false(i35, descr=<Guard0x3bfd6a0>) [p0, p1]
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
+657: p36 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+661: p37 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+665: p38 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+669: p39 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+673: guard_class(p39, 16505296, descr=<Guard0x3bfd6e8>) [p0, p1]
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
+685: guard_nonnull_class(p37, ConstClass(W_Fixnum), descr=<Guard0x3bd5400>) [p0, p1]
+703: i42 = getfield_gc_i(p37, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+707: i44 = int_gt(0, i42)
+711: guard_false(i44, descr=<Guard0x3bfd730>) [p0, p1]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
+717: guard_nonnull_class(p36, ConstClass(W_Fixnum), descr=<Guard0x3bd5460>) [p0, p1]
+736: i46 = getfield_gc_i(p36, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+740: i48 = int_gt(0, i46)
+744: guard_false(i48, descr=<Guard0x3bfd778>) [p0, p1]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
+750: p49 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+761: guard_nonnull_class(p49, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd54c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+787: p52 = getfield_gc_r(ConstPtr(ptr51), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+791: setfield_gc(p49, i28, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+795: guard_nonnull_class(p52, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd5520>) [p52, p22, p20, p37, i28, p38, p36, p39, p24]
+813: i54 = getfield_gc_i(p52, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+817: i56 = int_ge(i54, 0)
+821: guard_true(i56, descr=<Guard0x3bfd7c0>) [p52, p22, p20, p37, i28, p38, p36, p39, p24]
+827: i58 = int_lt(i54, 13)
+831: guard_true(i58, descr=<Guard0x3bfd808>) [p52, p22, p20, p37, i28, p38, p36, p39, p24]
+851: p60 = getfield_gc_r(ConstPtr(ptr59), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+862: guard_class(p60, 16622984, descr=<Guard0x3bfd850>) [p52, p22, p20, p37, i28, p38, p36, p39, p24]
+874: p63 = getfield_gc_r(ConstPtr(ptr62), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+878: p64 = getarrayitem_gc_r(p63, i54, descr=<ArrayP 8>)
+883: guard_class(p64, ConstClass(W_Vector), descr=<Guard0x3bfd898>) [p52, p22, p20, p37, i28, p38, p36, p39, p24]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+896: p66 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+900: guard_class(p66, 16622984, descr=<Guard0x3bfd8e0>) [p52, p22, p20, p37, i28, p38, p36, p39, p24]
+912: i69 = int_ge(i28, 0)
+916: guard_true(i69, descr=<Guard0x3bfd928>) [p52, p22, p20, p37, i28, p38, p36, p39, p24]
+922: i70 = getfield_gc_i(p64, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+926: i71 = int_lt(i28, i70)
+929: guard_true(i71, descr=<Guard0x3bfd970>) [p52, p22, p20, p37, i28, p38, p36, p39, p24]
+935: p72 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+956: setarrayitem_gc(p72, i28, ConstPtr(ptr73), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+961: p74 = new_with_vtable(descr=<SizeDescr 56>)
+1008: p75 = new_with_vtable(descr=<SizeDescr 16>)
+1019: setfield_gc(p75, i28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1023: p76 = new_with_vtable(descr=<SizeDescr 40>)
+1041: p77 = new_with_vtable(descr=<SizeDescr 24>)
+1059: p78 = new_with_vtable(descr=<SizeDescr 56>)
+1077: setfield_gc(p78, p39, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1081: setfield_gc(p78, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1085: setfield_gc(p78, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1096: setfield_gc(p78, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1100: setfield_gc(p78, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1111: setfield_gc(p78, p75, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1115: setfield_gc(p77, p78, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1119: setfield_gc(p77, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1127: p80 = new_with_vtable(descr=<SizeDescr 40>)
+1145: setfield_gc(p80, p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1156: p81 = new_with_vtable(descr=<SizeDescr 24>)
+1174: setfield_gc(p81, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1178: setfield_gc(p81, i28, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1182: setfield_gc(p80, p81, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1186: setfield_gc(p80, p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1190: setfield_gc(p80, ConstPtr(ptr82), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1281: i83 = getfield_gc_i(p75, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1285: setfield_gc(p74, p39, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1289: setfield_gc(p76, p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1300: setfield_gc(p74, ConstPtr(ptr84), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1304: setfield_gc(p74, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1315: setfield_gc(p76, ConstPtr(ptr85), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1319: setfield_gc(p76, p77, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1323: setfield_gc(p76, p80, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1327: setfield_gc(p74, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1338: setfield_gc(p74, ConstPtr(ptr86), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1342: setfield_gc(p74, p75, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1346: i88 = int_ge(i83, -9223372036854775807)
+1359: guard_true(i88, descr=<Guard0x3bd5580>) [p76, p74, None, None, None, None, None, None, None, None]
+1365: i90 = arraylen_gc(p63, descr=<ArrayP 8>)
+1365: jump(p74, 1, p76, p24, p36, i46, ConstPtr(ptr86), 0, p75, i83, p38, p52, p49, p63, descr=TargetToken(62083248))
+1488: --end of the loop--
[3e4c086bc89e642] jit-log-opt-bridge}
[3e4c086bcda313e] {jit-backend
[3e4c086bceaed17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566e
[3e4c086bcebe280] jit-backend-dump}
[3e4c086bceca203] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ea14 +0  25000000
[3e4c086bcecb802] jit-backend-dump}
[3e4c086bcecfa0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f075 +0  25000000
[3e4c086bced0914] jit-backend-dump}
[3e4c086bced4057] {jit-backend-addr
bridge out of Guard 0x3bfca40 has address 0x7fd83566ea10 to 0x7fd83566f070
       gc table: 0x7fd83566e800
    jump target: 0x7fd83566ea10
         resops: 0x7fd83566ea1e
       failures: 0x7fd83566f070
            end: 0x7fd83566f5bc
[3e4c086bced63af] jit-backend-addr}
[3e4c086bced9e9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ea36 +0  B2060000
[3e4c086bcedad71] jit-backend-dump}
[3e4c086bcede3a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ea4d +0  B7060000
[3e4c086bcedf100] jit-backend-dump}
[3e4c086bcee2672] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ea5a +0  C6060000
[3e4c086bcee339a] jit-backend-dump}
[3e4c086bcee6744] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ea6f +0  CD060000
[3e4c086bcee74b5] jit-backend-dump}
[3e4c086bceea982] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ea86 +0  D2060000
[3e4c086bceeb6bc] jit-backend-dump}
[3e4c086bceeeacc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ea97 +0  DD060000
[3e4c086bceef803] jit-backend-dump}
[3e4c086bcef2bf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eaad +0  E3060000
[3e4c086bcef391e] jit-backend-dump}
[3e4c086bcef6c6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eabb +0  F1060000
[3e4c086bcef79c2] jit-backend-dump}
[3e4c086bcefad33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eac8 +0  00070000
[3e4c086bcefba70] jit-backend-dump}
[3e4c086bcefedbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eadc +0  08070000
[3e4c086bceffafc] jit-backend-dump}
[3e4c086bcf02e01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eaf3 +0  0D070000
[3e4c086bcf03b47] jit-backend-dump}
[3e4c086bcf06e7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eb00 +0  1C070000
[3e4c086bcf07bab] jit-backend-dump}
[3e4c086bcf0af0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eb14 +0  24070000
[3e4c086bcf0bc3d] jit-backend-dump}
[3e4c086bcf0ef4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eb29 +0  2B070000
[3e4c086bcf0fc7f] jit-backend-dump}
[3e4c086bcf13005] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eb3a +0  36070000
[3e4c086bcf13d3c] jit-backend-dump}
[3e4c086bcf170bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eb50 +0  3C070000
[3e4c086bcf17e05] jit-backend-dump}
[3e4c086bcf1b188] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eb5e +0  4A070000
[3e4c086bcf1bec8] jit-backend-dump}
[3e4c086bcf1f238] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eb6b +0  59070000
[3e4c086bcf1ff7b] jit-backend-dump}
[3e4c086bcf232d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eb7f +0  61070000
[3e4c086bcf23ffe] jit-backend-dump}
[3e4c086bcf272f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eb96 +0  66070000
[3e4c086bcf28022] jit-backend-dump}
[3e4c086bcf2b380] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eba3 +0  75070000
[3e4c086bcf2c0aa] jit-backend-dump}
[3e4c086bcf2f405] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ebb7 +0  7D070000
[3e4c086bcf30152] jit-backend-dump}
[3e4c086bcf3345a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ebcc +0  84070000
[3e4c086bcf341b9] jit-backend-dump}
[3e4c086bcf374d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ebe3 +0  89070000
[3e4c086bcf38207] jit-backend-dump}
[3e4c086bcf3b544] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ec08 +0  80070000
[3e4c086bcf3c287] jit-backend-dump}
[3e4c086bcf3f598] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ec19 +0  8B070000
[3e4c086bcf40300] jit-backend-dump}
[3e4c086bcf436a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ec31 +0  8F070000
[3e4c086bcf44419] jit-backend-dump}
[3e4c086bcf4781c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ec50 +0  8C070000
[3e4c086bcf4855c] jit-backend-dump}
[3e4c086bcf4b883] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ec75 +0  83070000
[3e4c086bcf4c58f] jit-backend-dump}
[3e4c086bcf4fa44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ec7f +0  95070000
[3e4c086bcf5078a] jit-backend-dump}
[3e4c086bcf53b34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ec89 +0  A7070000
[3e4c086bcf5487e] jit-backend-dump}
[3e4c086bcf57cd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eca8 +0  A4070000
[3e4c086bcf58a20] jit-backend-dump}
[3e4c086bcf5bde0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ecc4 +0  A4070000
[3e4c086bcf5cb1a] jit-backend-dump}
[3e4c086bcf5ff82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ecdf +0  A5070000
[3e4c086bcf60cfc] jit-backend-dump}
[3e4c086bcf64057] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ecf8 +0  A8070000
[3e4c086bcf64db3] jit-backend-dump}
[3e4c086bcf68191] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ed1b +0  A1070000
[3e4c086bcf68f21] jit-backend-dump}
[3e4c086bcf6c2f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ed2f +0  A9070000
[3e4c086bcf6d06d] jit-backend-dump}
[3e4c086bcf7040e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ed47 +0  AD070000
[3e4c086bcf71183] jit-backend-dump}
[3e4c086bcf7456a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ed51 +0  BF070000
[3e4c086bcf752d5] jit-backend-dump}
[3e4c086bcf78652] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ed69 +0  C3070000
[3e4c086bcf7939e] jit-backend-dump}
[3e4c086bcf7c6f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ed7f +0  C9070000
[3e4c086bcf7d43c] jit-backend-dump}
[3e4c086bcf80805] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ed90 +0  D4070000
[3e4c086bcf81586] jit-backend-dump}
[3e4c086bcf848ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ed9e +0  E2070000
[3e4c086bcf85627] jit-backend-dump}
[3e4c086bcf88985] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566effc +0  A0050000
[3e4c086bcf896d1] jit-backend-dump}
[3e4c086bcf8ccf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566cc2d +0  DF1D0000
[3e4c086bcf8daa9] jit-backend-dump}
[3e4c086bcf91d1e] jit-backend}
[3e4c086bcf95bf5] {jit-log-opt-bridge
# bridge out of Guard 0x3bfca40 with 226 ops
[i0, p1, p2, p3]
+550: guard_not_invalidated(descr=<Guard0x3bd55e0>) [i0, p1, p2, p3]
+550: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+561: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3bfd9b8>) [i0, p1, p2, p3]
+570: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+574: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3bd5640>) [i0, p1, p2, p3]
+593: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+597: i9 = int_gt(i0, i8)
+600: guard_true(i9, descr=<Guard0x3bfda00>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(void)')
+606: p10 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+618: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3bfda48>) [i0, p1, p2, p3]
+627: p12 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+632: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)) from (void)')
+637: guard_class(p12, 16504944, descr=<Guard0x3bfda90>) [i0, p1, p2, p3]
+650: p15 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+654: guard_class(p13, 16435208, descr=<Guard0x3bfdad8>) [i0, p1, p2, p3]
+667: p17 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+671: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x3bd56a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ j5060 1)')
+689: i19 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+693: i21 = int_add_ovf(i19, 1)
+697: guard_no_overflow(descr=<Guard0x3bfdb20>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5058 AppRand34)')
+703: guard_class(p15, 16478824, descr=<Guard0x3bfdb68>) [i0, p1, p2, p3]
+716: p23 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+727: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x3bfdbb0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 AppRand34)')
debug_merge_point(0, 0, '(> j5060 jj)')
+736: p25 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+740: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x3bd5700>) [i0, p1, p2, p3]
+759: i27 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+763: i28 = int_gt(i21, i27)
+766: guard_true(i28, descr=<Guard0x3bfdbf8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(void)')
+772: p29 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+783: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x3bfdc40>) [i0, p1, p2, p3]
+792: p31 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+796: p32 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)) from (void)')
+800: guard_class(p31, 16504944, descr=<Guard0x3bfdc88>) [i0, p1, p2, p3]
+813: p34 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+817: guard_class(p32, 16435208, descr=<Guard0x3bfdcd0>) [i0, p1, p2, p3]
+830: p36 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+834: guard_nonnull_class(p36, ConstClass(ForwardLink), descr=<Guard0x3bd5760>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5054 1)')
+852: i38 = getfield_gc_i(p31, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+856: i40 = int_add_ovf(i38, 1)
+860: guard_no_overflow(descr=<Guard0x3bfdd18>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5052 AppRand35)')
+866: guard_class(p34, 16478824, descr=<Guard0x3bfdd60>) [i0, p1, p2, p3]
+879: p42 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+890: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x3bfdda8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 AppRand35)')
debug_merge_point(0, 0, '(> i5054 ii)')
+899: p44 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+903: guard_nonnull_class(p44, ConstClass(W_Fixnum), descr=<Guard0x3bd57c0>) [i0, p1, p2, p3]
+922: i46 = getfield_gc_i(p44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+926: i47 = int_gt(i40, i46)
+929: guard_true(i47, descr=<Guard0x3bfddf0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(void)')
+935: p48 = getfield_gc_r(p32, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+946: guard_value(p48, ConstPtr(ptr49), descr=<Guard0x3bfde38>) [i0, p1, p2, p3]
+955: p50 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+959: p51 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+963: guard_class(p51, 16435208, descr=<Guard0x3bfde80>) [i0, p1, p2, p3]
+976: p53 = getfield_gc_r(p51, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+980: guard_nonnull_class(p53, ConstClass(ForwardLink), descr=<Guard0x3bd5820>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! *class* *iii* iclass)')
+1006: p56 = getfield_gc_r(ConstPtr(ptr55), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1017: guard_nonnull_class(p56, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd5880>) [i0, p1, p2, p3]
+1036: i58 = getfield_gc_i(p56, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1040: guard_class(p50, 16499664, descr=<Guard0x3bfdec8>) [i0, p1, p2, p3]
+1053: p60 = getfield_gc_r(p50, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1064: guard_class(p60, 16500720, descr=<Guard0x3bfdf10>) [i0, p1, p2, p3]
+1077: p62 = getfield_gc_r(p60, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1088: guard_nonnull_class(p62, ConstClass(W_Fixnum), descr=<Guard0x3bd58e0>) [i0, p1, p2, p3]
+1122: p65 = getfield_gc_r(ConstPtr(ptr64), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1133: guard_class(p65, 16623792, descr=<Guard0x3bfdf58>) [i0, p1, p2, p3]
+1145: i68 = int_ge(i58, 0)
+1149: guard_true(i68, descr=<Guard0x3bfdfa0>) [i0, p1, p2, p3]
+1155: i70 = int_lt(i58, 13)
+1159: guard_true(i70, descr=<Guard0x3c14020>) [i0, p1, p2, p3]
+1165: i71 = getfield_gc_i(p62, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1169: p73 = getfield_gc_r(ConstPtr(ptr72), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1173: setarrayitem_gc(p73, i58, i71, descr=<ArrayS 8>)
+1178: p74 = getfield_gc_r(p60, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1182: guard_class(p74, 16505296, descr=<Guard0x3bd5940>) [p51, p50, p74, None, None, None, None]
debug_merge_point(0, 0, '(vector-set! *piecemax* *iii* CellRef(index))')
+1196: p77 = getfield_gc_r(p50, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1200: p78 = getfield_gc_r(p77, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1204: guard_nonnull_class(p78, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd59a0>) [p51, p50, p74, None, None, None, None]
+1224: i80 = getfield_gc_i(p78, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1235: p82 = getfield_gc_r(ConstPtr(ptr81), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1239: guard_class(p82, 16623792, descr=<Guard0x3c14068>) [p51, p50, p74, None, None, None, None]
+1251: p85 = getfield_gc_r(ConstPtr(ptr84), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1255: setarrayitem_gc(p85, i58, i80, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))')
debug_merge_point(0, 0, '(= *iii* typemax)')
+1266: i87 = int_eq(i58, 12)
guard_false(i87, descr=<Guard0x3bd5a00>) [p74, i87, p51, p53, None, None, None, None]
debug_merge_point(0, 0, '(if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))')
debug_merge_point(0, 0, '(let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4))')
debug_merge_point(0, 0, '(+ *iii* 1)')
+1276: i89 = int_add(i58, 1)
debug_merge_point(0, 0, '(set! *iii* SetBang4)')
+1280: p90 = getfield_gc_r(p51, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1284: setfield_gc(p56, i89, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1302: guard_value(p90, ConstPtr(ptr91), descr=<Guard0x3bd5a60>) [p90, p51, None, None, None, None, None, None]
+1311: p92 = getfield_gc_r(p51, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1315: p93 = getfield_gc_r(p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1319: guard_class(p93, 16435208, descr=<Guard0x3c140b0>) [p90, p51, None, None, None, None, None, None]
+1331: p95 = getfield_gc_r(p93, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1335: guard_nonnull_class(p95, ConstClass(ForwardLink), descr=<Guard0x3bd5ac0>) [p90, p51, None, None, None, None, None, None]
debug_merge_point(0, 0, '(definePiece 3 1 1 1)')
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+1355: i98 = int_lt(i89, 13)
+1359: guard_true(i98, descr=<Guard0x3c140f8>) [p90, p51, None, None, None, None, None, None]
+1372: p100 = getfield_gc_r(ConstPtr(ptr99), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1376: guard_class(p100, 16622984, descr=<Guard0x3c14140>) [p90, p51, None, None, None, None, None, None]
+1389: p103 = getfield_gc_r(ConstPtr(ptr102), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1393: p104 = getarrayitem_gc_r(p103, i89, descr=<ArrayP 8>)
+1398: guard_class(p104, ConstClass(W_Vector), descr=<Guard0x3c14188>) [p90, p51, None, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+1411: p106 = getfield_gc_r(p104, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1415: guard_class(p106, 16622984, descr=<Guard0x3c141d0>) [p90, p51, None, None, None, None, None, None]
+1428: i108 = getfield_gc_i(p104, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1432: i110 = int_lt(0, i108)
+1436: guard_true(i110, descr=<Guard0x3c14218>) [p90, p51, None, None, None, None, None, None]
+1442: p111 = getfield_gc_r(p104, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+1464: setarrayitem_gc(p111, 0, ConstPtr(ptr112), descr=<ArrayP 8>)
+1468: p113 = new_with_vtable(descr=<SizeDescr 56>)
+1512: p114 = new_with_vtable(descr=<SizeDescr 16>)
+1523: p115 = new_with_vtable(descr=<SizeDescr 16>)
+1534: setfield_gc(p115, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1542: setfield_gc(p114, p115, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1546: p116 = new_with_vtable(descr=<SizeDescr 40>)
+1557: p117 = new_with_vtable(descr=<SizeDescr 24>)
+1568: p118 = new_with_vtable(descr=<SizeDescr 56>)
+1586: setfield_gc(p118, ConstPtr(ptr119), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1590: setfield_gc(p118, ConstPtr(ptr120), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1601: setfield_gc(p118, ConstPtr(ptr121), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1612: setfield_gc(p118, ConstPtr(ptr122), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1616: setfield_gc(p118, p114, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1634: setfield_gc(p118, ConstPtr(ptr123), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1638: setfield_gc(p117, p118, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1642: setfield_gc(p117, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1650: p125 = new_with_vtable(descr=<SizeDescr 40>)
+1668: setfield_gc(p125, p95, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1679: p126 = new_with_vtable(descr=<SizeDescr 24>)
+1697: p127 = new_with_vtable(descr=<SizeDescr 56>)
+1715: setfield_gc(p127, ConstPtr(ptr119), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1719: setfield_gc(p127, ConstPtr(ptr128), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1723: setfield_gc(p127, ConstPtr(ptr121), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1734: setfield_gc(p127, ConstPtr(ptr129), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1738: setfield_gc(p127, ConstPtr(ptr122), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1742: setfield_gc(p127, p114, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1753: setfield_gc(p126, p127, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1757: setfield_gc(p126, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1765: setfield_gc(p125, p126, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1769: p131 = new_with_vtable(descr=<SizeDescr 40>)
+1780: setfield_gc(p131, p95, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1784: p132 = new_with_vtable(descr=<SizeDescr 24>)
+1802: setfield_gc(p132, ConstPtr(ptr133), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1806: setfield_gc(p132, p114, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1810: setfield_gc(p131, p132, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1814: p134 = new_with_vtable(descr=<SizeDescr 40>)
+1825: setfield_gc(p134, p95, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1829: setfield_gc(p134, p92, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1833: setfield_gc(p134, p93, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1844: setfield_gc(p134, ConstPtr(ptr135), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1848: setfield_gc(p131, p134, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1852: setfield_gc(p131, ConstPtr(ptr136), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1863: setfield_gc(p125, p131, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1867: setfield_gc(p125, ConstPtr(ptr137), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1965: p138 = getfield_gc_r(p114, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1969: setfield_gc(p113, ConstPtr(ptr139), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1980: setfield_gc(p113, ConstPtr(ptr121), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1984: setfield_gc(p116, ConstPtr(ptr140), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1995: setfield_gc(p116, p117, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1999: setfield_gc(p116, p125, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2003: setfield_gc(p113, ConstPtr(ptr119), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2007: setfield_gc(p116, p95, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2011: setfield_gc(p113, p114, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+2022: setfield_gc(p113, ConstPtr(ptr141), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+2026: setfield_gc(p113, ConstPtr(ptr123), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+2030: guard_nonnull_class(p138, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd5b20>) [p116, p113, None, None, None, None, None, None]
+2048: i143 = arraylen_gc(p103, descr=<ArrayP 8>)
+2048: jump(p113, 1, p116, p95, ConstPtr(ptr121), 1, ConstPtr(ptr141), 0, ConstPtr(ptr123), 0, p114, p56, p138, p103, descr=TargetToken(62083248))
+2160: --end of the loop--
[3e4c086bd042ee1] jit-log-opt-bridge}
[3e4c086bd17ee57] {jit-backend
[3e4c086bd1cdc48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f
[3e4c086bd1d54b0] jit-backend-dump}
[3e4c086bd1e0550] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f7c4 +0  23000000
[3e4c086bd1e1a4b] jit-backend-dump}
[3e4c086bd1e5cdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f975 +0  23000000
[3e4c086bd1e6c21] jit-backend-dump}
[3e4c086bd1ea3f4] {jit-backend-addr
bridge out of Guard 0x39fdfa0 has address 0x7fd83566f7c0 to 0x7fd83566f970
       gc table: 0x7fd83566f710
    jump target: 0x7fd83566f7c0
         resops: 0x7fd83566f7ce
       failures: 0x7fd83566f970
            end: 0x7fd83566fbab
[3e4c086bd1ecab6] jit-backend-addr}
[3e4c086bd1f033e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f7de +0  D1010000
[3e4c086bd1f11b9] jit-backend-dump}
[3e4c086bd1f46c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f7f5 +0  D6010000
[3e4c086bd1f5413] jit-backend-dump}
[3e4c086bd1f8daa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f809 +0  FA010000
[3e4c086bd1f9b74] jit-backend-dump}
[3e4c086bd1fd111] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f81f +0  00020000
[3e4c086bd1fde70] jit-backend-dump}
[3e4c086bd201153] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f833 +0  08020000
[3e4c086bd201e4a] jit-backend-dump}
[3e4c086bd20515c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f84a +0  0D020000
[3e4c086bd205e4f] jit-backend-dump}
[3e4c086bd209173] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f857 +0  1C020000
[3e4c086bd209e6d] jit-backend-dump}
[3e4c086bd20d1bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f86f +0  20020000
[3e4c086bd20deac] jit-backend-dump}
[3e4c086bd2111bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f87e +0  2D020000
[3e4c086bd211eab] jit-backend-dump}
[3e4c086bd215246] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f888 +0  3F020000
[3e4c086bd215f53] jit-backend-dump}
[3e4c086bd2192c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f8a1 +0  42020000
[3e4c086bd219fc3] jit-backend-dump}
[3e4c086bd21d31b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f8b9 +0  46020000
[3e4c086bd21e00b] jit-backend-dump}
[3e4c086bd221430] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f8c3 +0  58020000
[3e4c086bd222121] jit-backend-dump}
[3e4c086bd22549d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f8d1 +0  66020000
[3e4c086bd226191] jit-backend-dump}
[3e4c086bd2294bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f8e3 +0  70020000
[3e4c086bd22a1e9] jit-backend-dump}
[3e4c086bd22d4c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f8fb +0  74020000
[3e4c086bd22e1bd] jit-backend-dump}
[3e4c086bd231494] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f90b +0  80020000
[3e4c086bd2321aa] jit-backend-dump}
[3e4c086bd235781] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565c717 +0  A5300100
[3e4c086bd23647b] jit-backend-dump}
[3e4c086bd23a5b2] jit-backend}
[3e4c086bd23e488] {jit-log-opt-bridge
# bridge out of Guard 0x39fdfa0 with 58 ops
[p0, p1]
+198: guard_class(p1, 16437216, descr=<Guard0x3bd5b80>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+214: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3bd5be0>) [p0, p1]
debug_merge_point(0, 0, '(> k end)')
+233: guard_not_invalidated(descr=<Guard0x3c14260>) [p0, p1]
+233: guard_class(p0, 16504944, descr=<Guard0x3c142a8>) [p0, p1]
+253: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+257: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+261: guard_class(p7, 16478448, descr=<Guard0x3c142f0>) [p0, p1]
+275: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+286: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3c14338>) [p0, p1]
+295: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+299: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3bd5c40>) [p0, p1]
+318: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+322: i14 = int_gt(i6, i13)
+325: guard_false(i14, descr=<Guard0x3c14380>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+331: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+335: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3bd5ca0>) [p0, p1]
+355: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+360: i19 = int_ge(i17, 0)
+364: guard_true(i19, descr=<Guard0x3c143c8>) [p0, p1]
+370: i21 = int_lt(i17, 13)
+374: guard_true(i21, descr=<Guard0x3c14410>) [p0, p1]
+387: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+392: guard_class(p23, 16622984, descr=<Guard0x3c14458>) [p0, p1]
+405: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+410: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+415: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3c144a0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+429: i30 = int_ge(i6, 0)
+433: guard_true(i30, descr=<Guard0x3c144e8>) [p0, p1]
+439: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+444: i32 = int_lt(i6, i31)
+447: guard_true(i32, descr=<Guard0x3c14530>) [p0, p1]
+453: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+458: guard_class(p33, 16622984, descr=<Guard0x3c14578>) [p0, p1]
+471: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+476: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+481: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3c145c0>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+502: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+505: guard_true(i39, descr=<Guard0x3c14608>) [p0, p1]
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
+511: i41 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+515: p42 = new_with_vtable(descr=<SizeDescr 24>)
+559: setfield_gc(p42, i41, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+563: setfield_gc(p42, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+567: jump(p42, p1, descr=TargetToken(61624256))
+608: --end of the loop--
[3e4c086bd2756ee] jit-log-opt-bridge}
[3e4c086bdebb97b] {jit-backend
[3e4c086bdf3f325] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566fd40 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87B302000048FF0425C0B7C503488B8D380100008139480E00000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813AB01E01000F8500000000488B5A10488B7208813EA8B800000F8500000000488B7E104C8B0548FEFFFF4C39C70F85000000004C8B46204983F8017207418138601400000F8500000000498B78084839FB0F8F00000000488B7E184C8B46284C8B4E304C8B560841813A102001000F85000000004883FF017206813F601400000F8500000000488B77084883FE000F8C000000004885DB0F85000000004983F9017207418139601400000F8500000000498B59084D8B60084983FC01720841813C24F08900000F85000000004C8B2DEFFDFFFF4D8B750849895C24084983FE01720741813EF08900000F85000000004D8B6E084983FD000F8C000000004983FD0D0F8D000000004C8B3DD4FDFFFF48898540010000498B47188138C8EB02000F8500000000498B47104E8B7CE81041813FF08C00000F85000000004D8B6F1841817D00C8EB02000F85000000004883FB000F8C000000004D8B6F084C39EB0F8D000000004D8B6F1041F64504810F85190100004C8B3D98FDFFFF4D897CDD104989D74989CD488B0C25F091F900488D5160483B14251092F9000F871501000048891425F091F90048C701A8B80000488D513848C702480E00004889BD48010000488BBD4001000048897A084C8951084C8B1544FDFFFF4C8951104C8941204C8B95480100004C8951184C8985500100004C8B052BFDFFFF4C8941284C8949304C897A104C896A184C8B2D1CFDFFFF4C896A2048898D48010000488995380100004889BD400100004889B5580100004C8985300100004C898D600100004C8B9D500100004C899D680100004C89F64C89E14889C74C89955001000041BC000000004989DEBB0100000049BB209B6635D87F000041FFE30F1F44000049BB50B76535D87F000041FFD3E93BFDFFFF7811415549BBF0A16535D87F000041FFD379104989DB49C1EB074983F3F84D0FAB5D00E9BFFEFFFF49BB30FD6635D87F00004C895D204D8D9BC0ADFEFF41FFD3E9D6FEFFFFFF3573FBFFFF49BBD0FB6635D87F000041534D8D9B30A4FEFF41FFE3FF355FFBFFFF49BBE0FB6635D87F000041534D8D9B20A4FEFF41FFE3FF354BFBFFFF49BBF0FB6635D87F000041534D8D9B10A4FEFF41FFE3FF3537FBFFFF49BB00FC6635D87F000041534D8D9B00A4FEFF41FFE3FF3523FBFFFF49BB10FC6635D87F000041534D8D9BF0A3FEFF41FFE3FF3517FBFFFF49BB20FC6635D87F000041534D8D9BE0A3FEFF41FFE3FF3503FBFFFF49BB30FC6635D87F000041534D8D9BD0A3FEFF41FFE3FF35EFFAFFFF49BB40FC6635D87F000041534D8D9BC0A3FEFF41FFE3FF35DBFAFFFF49BB50FC6635D87F000041534D8D9BB0A3FEFF41FFE3FF35C7FAFFFF49BB60FC6635D87F000041534D8D9BA0A3FEFF41FFE3FF35B3FAFFFF49BB70FC6635D87F000041534D8D9B90A3FEFF41FFE3FF359FFAFFFF49BB80FC6635D87F000041534D8D9B80A3FEFF41FFE3FF358BFAFFFF49BB90FC6635D87F000041534D8D9B70A3FEFF41FFE3FF3577FAFFFF49BBA0FC6635D87F000041534D8D9B60A3FEFF41FFE3FF356BFAFFFF49BBB0FC6635D87F000041534D8D9B50A3FEFF41FFE3FF3557FAFFFF49BBC0FC6635D87F000041534D8D9B40A3FEFF41FFE3FF3543FAFFFF49BBD0FC6635D87F000041534D8D9B30A3FEFF41FFE3FF3537FAFFFF49BBE0FC6635D87F000041534D8D9B20A3FEFF41FFE3FF3523FAFFFF49BBF0FC6635D87F000041534D8D9B10A3FEFF41FFE3FF350FFAFFFF49BB00FD6635D87F000041534D8D9B00A3FEFF41FFE3FF35FBF9FFFF49BB10FD6635D87F000041534D8D9BF0A2FEFF41FFE3FF35E7F9FFFF49BB20FD6635D87F000041534D8D9BE0A2FEFF41FFE3
[3e4c086bdf4902f] jit-backend-dump}
[3e4c086bdf54430] {jit-backend-addr
Loop 38 ((let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)) has address 0x7fd83566febd to 0x7fd835670170 (bootstrap 0x7fd83566fe30)
       gc table: 0x7fd83566fd40
       function: 0x7fd83566fe30
         resops: 0x7fd83566febd
       failures: 0x7fd835670170
            end: 0x7fd83567042f
[3e4c086bdf577f0] jit-backend-addr}
[3e4c086bdf5c1e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566fed4 +0  EF020000
[3e4c086bdf5d618] jit-backend-dump}
[3e4c086bdf60d11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566feea +0  F5020000
[3e4c086bdf61c35] jit-backend-dump}
[3e4c086bdf6535f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566fefd +0  1A030000
[3e4c086bdf6614b] jit-backend-dump}
[3e4c086bdf695b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ff11 +0  22030000
[3e4c086bdf6a386] jit-backend-dump}
[3e4c086bdf6d6ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ff25 +0  2A030000
[3e4c086bdf6e440] jit-backend-dump}
[3e4c086bdf71849] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ff3c +0  2F030000
[3e4c086bdf7258f] jit-backend-dump}
[3e4c086bdf758ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ff49 +0  3E030000
[3e4c086bdf7661e] jit-backend-dump}
[3e4c086bdf7994e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ff66 +0  3D030000
[3e4c086bdf7a679] jit-backend-dump}
[3e4c086bdf7d956] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ff78 +0  47030000
[3e4c086bdf7e696] jit-backend-dump}
[3e4c086bdf819e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ff86 +0  55030000
[3e4c086bdf82716] jit-backend-dump}
[3e4c086bdf85a5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ff8f +0  68030000
[3e4c086bdf86789] jit-backend-dump}
[3e4c086bdf89ae1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ffa2 +0  71030000
[3e4c086bdf8a806] jit-backend-dump}
[3e4c086bdf8db39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ffbe +0  71030000
[3e4c086bdf8e86a] jit-backend-dump}
[3e4c086bdf91d9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ffe1 +0  6A030000
[3e4c086bdf92ac6] jit-backend-dump}
[3e4c086bdf95e6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ffef +0  78030000
[3e4c086bdf96b9f] jit-backend-dump}
[3e4c086bdf99e82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566fff9 +0  8A030000
[3e4c086bdf9abcf] jit-backend-dump}
[3e4c086bdf9df70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670017 +0  88030000
[3e4c086bdf9ecde] jit-backend-dump}
[3e4c086bdfa1f56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567002d +0  8E030000
[3e4c086bdfa2ca6] jit-backend-dump}
[3e4c086bdfa5f34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567003f +0  98030000
[3e4c086bdfa6c65] jit-backend-dump}
[3e4c086bdfa9ed1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670049 +0  AA030000
[3e4c086bdfaabf9] jit-backend-dump}
[3e4c086bdfade56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670056 +0  B9030000
[3e4c086bdfaeb74] jit-backend-dump}
[3e4c086bdfb28ee] jit-backend}
[3e4c086bdfb65de] {jit-log-opt-loop
# Loop 38 ((let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)) : entry bridge with 91 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
+389: guard_class(p1, 16435208, descr=<Guard0x3bd5dc0>) [p0, p1]
+408: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+412: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3bd5e20>) [p0, p1]
debug_merge_point(0, 0, '(> j5060 jj)')
+430: guard_not_invalidated(descr=<Guard0x3c14698>) [p0, p1]
+430: guard_class(p0, 16504944, descr=<Guard0x3c146e0>) [p0, p1]
+449: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+453: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+457: guard_class(p7, 16478824, descr=<Guard0x3c14728>) [p0, p1]
+469: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+480: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3c14770>) [p0, p1]
+489: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+493: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3bd5e80>) [p0, p1]
+512: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+516: i14 = int_gt(i6, i13)
+519: guard_false(i14, descr=<Guard0x3c147b8>) [p0, p1]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
+525: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+529: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+533: p17 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+537: p18 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+541: guard_class(p18, 16505296, descr=<Guard0x3c14800>) [p0, p1]
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
+554: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3bd5ee0>) [p0, p1]
+572: i21 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+576: i23 = int_gt(0, i21)
+580: guard_false(i23, descr=<Guard0x3c14848>) [p0, p1]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
+586: i24 = int_is_true(i6)
+589: guard_false(i24, descr=<Guard0x3c14890>) [p0, p1]
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
+595: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3bd5f40>) [p0, p1]
+614: i26 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(set! index SetBang3)')
+618: p27 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+622: guard_nonnull_class(p27, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3bd5fa0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+649: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+653: setfield_gc(p27, i26, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+658: guard_nonnull_class(p30, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1e020>) [p30, p1, p0, p17, p16, p15, p18, p3]
+677: i32 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+681: i34 = int_ge(i32, 0)
+685: guard_true(i34, descr=<Guard0x3c148d8>) [p30, p1, p0, p17, p16, p15, p18, p3]
+691: i36 = int_lt(i32, 13)
+695: guard_true(i36, descr=<Guard0x3c14920>) [p30, p1, p0, p17, p16, p15, p18, p3]
+708: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+719: guard_class(p38, 16622984, descr=<Guard0x3c14968>) [p30, p1, p0, p17, p16, p15, p18, p3]
+731: p41 = getfield_gc_r(ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+735: p42 = getarrayitem_gc_r(p41, i32, descr=<ArrayP 8>)
+740: guard_class(p42, ConstClass(W_Vector), descr=<Guard0x3c149b0>) [p30, p1, p0, p17, p16, p15, p18, p3]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+753: p44 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+757: guard_class(p44, 16622984, descr=<Guard0x3c149f8>) [p30, p1, p0, p17, p16, p15, p18, p3]
+771: i47 = int_ge(i26, 0)
+775: guard_true(i47, descr=<Guard0x3c14a40>) [p30, p1, p0, p17, p16, p15, p18, p3]
+781: i48 = getfield_gc_i(p42, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+785: i49 = int_lt(i26, i48)
+788: guard_true(i49, descr=<Guard0x3c14a88>) [p30, p1, p0, p17, p16, p15, p18, p3]
+794: p50 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+816: setarrayitem_gc(p50, i26, ConstPtr(ptr51), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+821: p52 = new_with_vtable(descr=<SizeDescr 56>)
+868: p53 = new_with_vtable(descr=<SizeDescr 40>)
+879: i54 = arraylen_gc(p41, descr=<ArrayP 8>)
+879: setfield_gc(p53, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+897: setfield_gc(p52, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+908: setfield_gc(p52, ConstPtr(ptr55), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+912: setfield_gc(p52, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+916: setfield_gc(p52, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+941: setfield_gc(p52, ConstPtr(ptr56), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+945: setfield_gc(p52, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+949: setfield_gc(p53, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+953: setfield_gc(p53, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+964: setfield_gc(p53, ConstPtr(ptr57), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+968: jump(p52, 1, p53, p3, p15, i21, ConstPtr(ptr56), 0, p17, i26, p16, p30, p27, p41, descr=TargetToken(62083248))
+1072: --end of the loop--
[3e4c086be004a6b] jit-log-opt-loop}
[3e4c086bff538ee] {jit-backend
[3e4c086c0002fc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086c000ebb9] jit-backend-dump}
[3e4c086c001a258] {jit-backend-addr
Loop 39 ((let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))) from (return #t)) has address 0x7fd83567083d to 0x7fd835670c30 (bootstrap 0x7fd8356707b0)
       gc table: 0x7fd835670690
       function: 0x7fd8356707b0
         resops: 0x7fd83567083d
       failures: 0x7fd835670c30
            end: 0x7fd835671020
[3e4c086c001d257] jit-backend-addr}
[3e4c086c0021a98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670867 +0  35040000
[3e4c086c0022f0a] jit-backend-dump}
[3e4c086c0026735] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567087e +0  3A040000
[3e4c086c0027625] jit-backend-dump}
[3e4c086c002abc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670894 +0  40040000
[3e4c086c002b9ad] jit-backend-dump}
[3e4c086c002ed6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356708aa +0  46040000
[3e4c086c002fac0] jit-backend-dump}
[3e4c086c0032e17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356708ba +0  52040000
[3e4c086c0033b61] jit-backend-dump}
[3e4c086c00370e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356708c6 +0  7E040000
[3e4c086c0037e38] jit-backend-dump}
[3e4c086c003b244] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356708e7 +0  79040000
[3e4c086c003bf66] jit-backend-dump}
[3e4c086c003f27a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356708f5 +0  87040000
[3e4c086c003ff96] jit-backend-dump}
[3e4c086c0043352] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670905 +0  93040000
[3e4c086c004406e] jit-backend-dump}
[3e4c086c00473c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670919 +0  9B040000
[3e4c086c00480e4] jit-backend-dump}
[3e4c086c004b3d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567092f +0  A1040000
[3e4c086c004c0f6] jit-backend-dump}
[3e4c086c004f3c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670940 +0  AC040000
[3e4c086c00500d3] jit-backend-dump}
[3e4c086c0053380] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670a16 +0  F2030000
[3e4c086c005409e] jit-backend-dump}
[3e4c086c005736f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670a28 +0  FC030000
[3e4c086c0058088] jit-backend-dump}
[3e4c086c005b353] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670a31 +0  0F040000
[3e4c086c005c05f] jit-backend-dump}
[3e4c086c005f2c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670a44 +0  18040000
[3e4c086c005ffe4] jit-backend-dump}
[3e4c086c00632bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670a58 +0  20040000
[3e4c086c0063fdd] jit-backend-dump}
[3e4c086c0067460] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670a82 +0  12040000
[3e4c086c00681bc] jit-backend-dump}
[3e4c086c006b5fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670a99 +0  17040000
[3e4c086c006c367] jit-backend-dump}
[3e4c086c006f8c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670aa5 +0  43040000
[3e4c086c0070604] jit-backend-dump}
[3e4c086c0073a7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670ab3 +0  51040000
[3e4c086c007477c] jit-backend-dump}
[3e4c086c0077a65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670aca +0  56040000
[3e4c086c007875c] jit-backend-dump}
[3e4c086c007ba67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670ade +0  5E040000
[3e4c086c007c75b] jit-backend-dump}
[3e4c086c007fa85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670af6 +0  62040000
[3e4c086c0080794] jit-backend-dump}
[3e4c086c0083a96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670b07 +0  6D040000
[3e4c086c0084784] jit-backend-dump}
[3e4c086c0087a9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670bd8 +0  B8030000
[3e4c086c008878f] jit-backend-dump}
[3e4c086c008ba9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670bea +0  C2030000
[3e4c086c008c7a4] jit-backend-dump}
[3e4c086c008fa41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670bf3 +0  D5030000
[3e4c086c0090738] jit-backend-dump}
[3e4c086c0093a43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670c06 +0  DE030000
[3e4c086c0094752] jit-backend-dump}
[3e4c086c0097a3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670c1a +0  E6030000
[3e4c086c009873c] jit-backend-dump}
[3e4c086c009c622] jit-backend}
[3e4c086c00a0410] {jit-log-opt-loop
# Loop 39 ((let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))) from (return #t)) : loop with 100 ops
[p0, p1]
+437: label(p0, p1, descr=TargetToken(62847024))
debug_merge_point(0, 0, '(let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))) from (return #t)')
+456: guard_class(p0, 16499664, descr=<Guard0x3c1e0e0>) [p1, p0]
+475: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+479: guard_class(p1, 16435208, descr=<Guard0x3c14b18>) [p1, p0]
+498: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+502: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x3c1e140>) [p1, p0]
debug_merge_point(0, 0, '(if or-part5035 or-part5035 (zero? CellRef(k5021)))')
+520: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+524: guard_nonnull_class(p7, ConstClass(W_Bool), descr=<Guard0x3c1e1a0>) [p1, p0]
+549: i10 = instance_ptr_eq(p7, ConstPtr(ptr9))
+552: guard_false(i10, descr=<Guard0x3c14b60>) [p1, p0]
debug_merge_point(0, 0, 'or-part5035')
+558: guard_not_invalidated(descr=<Guard0x3c14ba8>) [p1, p0]
debug_merge_point(0, 0, '(if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))')
debug_merge_point(0, 0, '(let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t))')
+558: guard_class(p3, 16504944, descr=<Guard0x3c14bf0>) [p1, p0]
+570: p12 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ *kount* 1)')
+581: p14 = getfield_gc_r(ConstPtr(ptr13), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+585: guard_nonnull_class(p14, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1e200>) [p1, p0]
+603: i16 = getfield_gc_i(p14, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+607: i18 = int_add_ovf(i16, 1)
+611: guard_no_overflow(descr=<Guard0x3c14c38>) [p1, p0]
debug_merge_point(0, 0, '(set! *kount* SetBang2)')
debug_merge_point(0, 0, '(return #t)')
+617: setfield_gc(p14, i18, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+621: guard_class(p12, 16478448, descr=<Guard0x3c1e260>) [p1, p12]
+633: p20 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+644: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x3c14c80>) [p1, p12]
+653: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+657: guard_nonnull_class(p22, 16584240, descr=<Guard0x3c1e2c0>) [p1, p12]
+675: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+679: p25 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+683: i26 = instance_ptr_eq(p1, p24)
+686: guard_false(i26, descr=<Guard0x3c14cc8>) [p1, p12]
+692: p27 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+696: p28 = new(descr=<SizeDescr 24>)
+743: setfield_gc(p28, 1, descr=<FieldS list.length 8>)
+751: p31 = new_array_clear(4, descr=<ArrayP 8>)
+787: setarrayitem_gc(p31, 0, p1, descr=<ArrayP 8>)
+791: setfield_gc(p28, p31, descr=<FieldP list.items 16>)
+795: p35 = call_r(ConstClass(_scan_continuation), p27, p25, p24, p28, 0, descr=<Callr 8 rrrri EF=3>)
+891: guard_no_exception(descr=<Guard0x3c1e320>) [p1, p12, p25, p24, p35]
+906: p36 = getfield_gc_r(p35, descr=<FieldP tuple2.item0 8 pure>)
+910: i37 = getfield_gc_i(p35, descr=<FieldU tuple2.item1 16 pure>)
+915: guard_isnull(p36, descr=<Guard0x3c14d10>) [p1, p12, p25, p24, p35]
+924: guard_false(i37, descr=<Guard0x3c14d58>) [p1, p12, p25, p24, p35]
+933: guard_class(p24, 16435920, descr=<Guard0x3c14da0>) [p1, p12, p25, p24, p35]
+952: p39 = getfield_gc_r(p24, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+963: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x3c14de8>) [p1, p12, p25, p24, p35]
+972: p41 = getfield_gc_r(p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+976: p42 = getfield_gc_r(p24, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))) from (return #t)')
+980: label(p41, p42, p14, i18, descr=TargetToken(62847104))
debug_merge_point(0, 0, '(let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))) from (return #t)')
+1000: guard_class(p42, 16435208, descr=<Guard0x3c1e380>) [p42, p41]
+1014: p44 = getfield_gc_r(p42, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1019: guard_nonnull_class(p44, ConstClass(ForwardLink), descr=<Guard0x3c1e3e0>) [p42, p41]
debug_merge_point(0, 0, '(if or-part5035 or-part5035 (zero? CellRef(k5021)))')
debug_merge_point(0, 0, 'or-part5035')
+1037: guard_not_invalidated(descr=<Guard0x3c14e30>) [p42, p41]
debug_merge_point(0, 0, '(if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))')
debug_merge_point(0, 0, '(let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t))')
+1037: guard_class(p41, 16504944, descr=<Guard0x3c14e78>) [p42, p41]
+1049: p47 = getfield_gc_r(p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ *kount* 1)')
+1053: i49 = int_add_ovf(i18, 1)
+1057: guard_no_overflow(descr=<Guard0x3c14ec0>) [p42, p41]
debug_merge_point(0, 0, '(set! *kount* SetBang2)')
debug_merge_point(0, 0, '(return #t)')
+1063: setfield_gc(p14, i49, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1074: guard_class(p47, 16478448, descr=<Guard0x3c1e440>) [p42, p47]
+1086: p51 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1097: guard_value(p51, ConstPtr(ptr52), descr=<Guard0x3c14f08>) [p42, p47]
+1106: p53 = getfield_gc_r(p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1110: guard_nonnull_class(p53, 16584240, descr=<Guard0x3c1e4a0>) [p42, p47]
+1130: p55 = getfield_gc_r(p53, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+1134: p56 = getfield_gc_r(p53, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+1138: i57 = instance_ptr_eq(p42, p55)
+1141: guard_false(i57, descr=<Guard0x3c14f50>) [p42, p47]
+1147: p58 = getfield_gc_r(p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1152: p59 = new(descr=<SizeDescr 24>)
+1193: setfield_gc(p59, 1, descr=<FieldS list.length 8>)
+1201: p62 = new_array_clear(4, descr=<ArrayP 8>)
+1237: setarrayitem_gc(p62, 0, p42, descr=<ArrayP 8>)
+1241: setfield_gc(p59, p62, descr=<FieldP list.items 16>)
+1245: p66 = call_r(ConstClass(_scan_continuation), p58, p56, p55, p59, 0, descr=<Callr 8 rrrri EF=3>)
+1341: guard_no_exception(descr=<Guard0x3c1e500>) [p42, p47, p56, p55, p66]
+1356: p67 = getfield_gc_r(p66, descr=<FieldP tuple2.item0 8 pure>)
+1360: i68 = getfield_gc_i(p66, descr=<FieldU tuple2.item1 16 pure>)
+1365: guard_isnull(p67, descr=<Guard0x3c14f98>) [p42, p47, p56, p55, p66]
+1374: guard_false(i68, descr=<Guard0x3c14fe0>) [p42, p47, p56, p55, p66]
+1383: guard_class(p55, 16435920, descr=<Guard0x3c15028>) [p42, p47, p56, p55, p66]
+1402: p70 = getfield_gc_r(p55, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1413: guard_value(p70, ConstPtr(ptr71), descr=<Guard0x3c15070>) [p42, p47, p56, p55, p66]
+1422: p72 = getfield_gc_r(p55, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1426: p73 = getfield_gc_r(p55, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))) from (return #t)')
+1430: jump(p72, p73, p14, i49, descr=TargetToken(62847104))
+1440: --end of the loop--
[3e4c086c00fefb2] jit-log-opt-loop}
[3e4c086c04e9f8a] {jit-backend
[3e4c086c05bb240] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356712a
[3e4c086c05c7f0f] jit-backend-dump}
[3e4c086c05d3d82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671414 +0  26000000
[3e4c086c05d5304] jit-backend-dump}
[3e4c086c05d94b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671905 +0  26000000
[3e4c086c05da3c6] jit-backend-dump}
[3e4c086c05dd988] {jit-backend-addr
bridge out of Guard 0x3bfddf0 has address 0x7fd835671410 to 0x7fd835671900
       gc table: 0x7fd8356712a0
    jump target: 0x7fd835671410
         resops: 0x7fd83567141e
       failures: 0x7fd835671900
            end: 0x7fd835671d77
[3e4c086c05dffda] jit-backend-addr}
[3e4c086c05e3c0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671436 +0  4D050000
[3e4c086c05e4b26] jit-backend-dump}
[3e4c086c05e81be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567144d +0  52050000
[3e4c086c05e8f91] jit-backend-dump}
[3e4c086c05ec480] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567145a +0  61050000
[3e4c086c05ed1c3] jit-backend-dump}
[3e4c086c05f0561] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567146f +0  68050000
[3e4c086c05f128c] jit-backend-dump}
[3e4c086c05f45f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671486 +0  6D050000
[3e4c086c05f5327] jit-backend-dump}
[3e4c086c05f8749] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671497 +0  78050000
[3e4c086c05f949e] jit-backend-dump}
[3e4c086c05fc84f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356714ad +0  7E050000
[3e4c086c05fd577] jit-backend-dump}
[3e4c086c06008b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356714bb +0  8C050000
[3e4c086c06015fc] jit-backend-dump}
[3e4c086c0604948] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356714c8 +0  9B050000
[3e4c086c060567f] jit-backend-dump}
[3e4c086c06089c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356714dc +0  A3050000
[3e4c086c06096f2] jit-backend-dump}
[3e4c086c060ca4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356714f3 +0  A8050000
[3e4c086c060d775] jit-backend-dump}
[3e4c086c0610a80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671500 +0  B7050000
[3e4c086c061178c] jit-backend-dump}
[3e4c086c0614a70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671514 +0  BF050000
[3e4c086c061578b] jit-backend-dump}
[3e4c086c0618afc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671529 +0  C6050000
[3e4c086c061987f] jit-backend-dump}
[3e4c086c061cbd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567153a +0  D1050000
[3e4c086c061d8ef] jit-backend-dump}
[3e4c086c0620c10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671550 +0  D7050000
[3e4c086c0621938] jit-backend-dump}
[3e4c086c0624bdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567155e +0  E5050000
[3e4c086c0625900] jit-backend-dump}
[3e4c086c0628c02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567156b +0  F4050000
[3e4c086c062991a] jit-backend-dump}
[3e4c086c062cc0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567157f +0  FC050000
[3e4c086c062d929] jit-backend-dump}
[3e4c086c0630c1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671595 +0  02060000
[3e4c086c063193d] jit-backend-dump}
[3e4c086c0634d59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356715a2 +0  11060000
[3e4c086c0635a74] jit-backend-dump}
[3e4c086c0638d83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356715cd +0  02060000
[3e4c086c0639aba] jit-backend-dump}
[3e4c086c063ce73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356715df +0  0C060000
[3e4c086c063db98] jit-backend-dump}
[3e4c086c0640ed4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356715f4 +0  13060000
[3e4c086c0641bf3] jit-backend-dump}
[3e4c086c0644f6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567160d +0  16060000
[3e4c086c0645c91] jit-backend-dump}
[3e4c086c0648fe0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567161b +0  24060000
[3e4c086c0649d1a] jit-backend-dump}
[3e4c086c064d0f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567163f +0  1C060000
[3e4c086c064de07] jit-backend-dump}
[3e4c086c0651106] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671662 +0  15060000
[3e4c086c0651e4d] jit-backend-dump}
[3e4c086c0655195] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671670 +0  23060000
[3e4c086c0655eb4] jit-backend-dump}
[3e4c086c06591bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567167a +0  35060000
[3e4c086c0659ede] jit-backend-dump}
[3e4c086c065d1da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671698 +0  33060000
[3e4c086c065def2] jit-backend-dump}
[3e4c086c06611bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356716ad +0  3A060000
[3e4c086c0661ed6] jit-backend-dump}
[3e4c086c06651e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356716bf +0  44060000
[3e4c086c0665f0f] jit-backend-dump}
[3e4c086c0669298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356716c9 +0  56060000
[3e4c086c0669fd2] jit-backend-dump}
[3e4c086c066d31d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356716d6 +0  65060000
[3e4c086c066e054] jit-backend-dump}
[3e4c086c0671384] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567188d +0  CA040000
[3e4c086c06720be] jit-backend-dump}
[3e4c086c0675652] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566eba3 +0  69280000
[3e4c086c067637d] jit-backend-dump}
[3e4c086c067a581] jit-backend}
[3e4c086c067e3b5] {jit-log-opt-bridge
# bridge out of Guard 0x3bfddf0 with 165 ops
[i0, p1, p2, p3]
+390: guard_not_invalidated(descr=<Guard0x3c1e560>) [i0, p1, p2, p3]
+390: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+401: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3c150b8>) [i0, p1, p2, p3]
+410: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+414: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3c1e5c0>) [i0, p1, p2, p3]
+433: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+437: i9 = int_gt(i0, i8)
+440: guard_true(i9, descr=<Guard0x3c15100>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(void)')
+446: p10 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+458: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3c15148>) [i0, p1, p2, p3]
+467: p12 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+472: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)) from (void)')
+477: guard_class(p12, 16504944, descr=<Guard0x3c15190>) [i0, p1, p2, p3]
+490: p15 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+494: guard_class(p13, 16435208, descr=<Guard0x3c151d8>) [i0, p1, p2, p3]
+507: p17 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+511: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x3c1e620>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ j5060 1)')
+529: i19 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+533: i21 = int_add_ovf(i19, 1)
+537: guard_no_overflow(descr=<Guard0x3c15220>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5058 AppRand34)')
+543: guard_class(p15, 16478824, descr=<Guard0x3c15268>) [i0, p1, p2, p3]
+556: p23 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+567: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x3c152b0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 AppRand34)')
debug_merge_point(0, 0, '(> j5060 jj)')
+576: p25 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+580: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x3c1e680>) [i0, p1, p2, p3]
+599: i27 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+603: i28 = int_gt(i21, i27)
+606: guard_true(i28, descr=<Guard0x3c152f8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(void)')
+612: p29 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+623: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x3c15340>) [i0, p1, p2, p3]
+632: p31 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+636: p32 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)) from (void)')
+640: guard_class(p31, 16504944, descr=<Guard0x3c15388>) [i0, p1, p2, p3]
+653: p34 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+657: guard_class(p32, 16435208, descr=<Guard0x3c153d0>) [i0, p1, p2, p3]
+670: p36 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+674: guard_nonnull_class(p36, ConstClass(ForwardLink), descr=<Guard0x3c1e6e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5054 1)')
+692: i38 = getfield_gc_i(p31, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+696: i40 = int_add_ovf(i38, 1)
+700: guard_no_overflow(descr=<Guard0x3c15418>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5052 AppRand35)')
+706: guard_class(p34, 16478824, descr=<Guard0x3c15460>) [i0, p1, p2, p3]
+719: p42 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+730: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x3c154a8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 AppRand35)')
debug_merge_point(0, 0, '(> i5054 ii)')
+739: p44 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+743: guard_nonnull_class(p44, ConstClass(W_Fixnum), descr=<Guard0x3c1e740>) [i0, p1, p2, p3]
+761: i46 = getfield_gc_i(p44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+765: i47 = int_gt(i40, i46)
+768: guard_false(i47, descr=<Guard0x3c154f0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
+774: p48 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+778: p49 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+782: p50 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+793: p51 = getfield_gc_r(p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+804: guard_class(p51, 16505296, descr=<Guard0x3c15538>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
+817: guard_nonnull_class(p49, ConstClass(W_Fixnum), descr=<Guard0x3c1e7a0>) [i0, p1, p2, p3]
+835: i54 = getfield_gc_i(p49, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+846: i56 = int_gt(0, i54)
+850: guard_false(i56, descr=<Guard0x3c15580>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
+856: guard_nonnull_class(p48, ConstClass(W_Fixnum), descr=<Guard0x3c1e800>) [i0, p1, p2, p3]
+881: i58 = getfield_gc_i(p48, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+885: i60 = int_gt(0, i58)
+889: guard_false(i60, descr=<Guard0x3c155c8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
+895: p61 = getfield_gc_r(p50, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+913: guard_nonnull_class(p61, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1e860>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+938: p64 = getfield_gc_r(ConstPtr(ptr63), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+943: setfield_gc(p61, i40, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+947: guard_nonnull_class(p64, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1e8c0>) [p64, p34, p32, p49, i40, p50, p48, p51, p36, None, None, None, None]
+966: i67 = getfield_gc_i(p64, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+970: i69 = int_ge(i67, 0)
+974: guard_true(i69, descr=<Guard0x3c15610>) [p64, p34, p32, p49, i40, p50, p48, p51, p36, None, None, None, None]
+980: i71 = int_lt(i67, 13)
+984: guard_true(i71, descr=<Guard0x3c15658>) [p64, p34, p32, p49, i40, p50, p48, p51, p36, None, None, None, None]
+997: p73 = getfield_gc_r(ConstPtr(ptr72), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1008: guard_class(p73, 16622984, descr=<Guard0x3c156a0>) [p64, p34, p32, p49, i40, p50, p48, p51, p36, None, None, None, None]
+1020: p76 = getfield_gc_r(ConstPtr(ptr75), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1024: p77 = getarrayitem_gc_r(p76, i67, descr=<ArrayP 8>)
+1029: guard_class(p77, ConstClass(W_Vector), descr=<Guard0x3c156e8>) [p64, p34, p32, p49, i40, p50, p48, p51, p36, None, None, None, None]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+1041: p79 = getfield_gc_r(p77, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1045: guard_class(p79, 16622984, descr=<Guard0x3c15730>) [p64, p34, p32, p49, i40, p50, p48, p51, p36, None, None, None, None]
+1059: i82 = int_ge(i40, 0)
+1063: guard_true(i82, descr=<Guard0x3c15778>) [p64, p34, p32, p49, i40, p50, p48, p51, p36, None, None, None, None]
+1069: i83 = getfield_gc_i(p77, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1073: i84 = int_lt(i40, i83)
+1076: guard_true(i84, descr=<Guard0x3c157c0>) [p64, p34, p32, p49, i40, p50, p48, p51, p36, None, None, None, None]
+1082: p85 = getfield_gc_r(p77, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1105: setarrayitem_gc(p85, i40, ConstPtr(ptr86), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+1110: p87 = new_with_vtable(descr=<SizeDescr 56>)
+1160: p88 = new_with_vtable(descr=<SizeDescr 16>)
+1171: setfield_gc(p88, i40, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1175: p89 = new_with_vtable(descr=<SizeDescr 40>)
+1193: p90 = new_with_vtable(descr=<SizeDescr 24>)
+1212: p91 = new_with_vtable(descr=<SizeDescr 56>)
+1231: setfield_gc(p91, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1235: setfield_gc(p91, ConstPtr(ptr92), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1239: setfield_gc(p91, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1250: setfield_gc(p91, p49, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1254: setfield_gc(p91, p50, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1265: setfield_gc(p91, p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1269: setfield_gc(p90, p91, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1274: setfield_gc(p90, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1283: p93 = new_with_vtable(descr=<SizeDescr 40>)
+1301: setfield_gc(p93, p36, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1312: p94 = new_with_vtable(descr=<SizeDescr 24>)
+1330: setfield_gc(p94, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1334: setfield_gc(p94, i40, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1338: setfield_gc(p93, p94, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1342: setfield_gc(p93, p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1346: setfield_gc(p93, ConstPtr(ptr95), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1444: i96 = getfield_gc_i(p88, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1455: setfield_gc(p87, ConstPtr(ptr97), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1459: setfield_gc(p87, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1463: setfield_gc(p89, ConstPtr(ptr98), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1467: setfield_gc(p89, p90, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1471: setfield_gc(p89, p93, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1475: setfield_gc(p87, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1479: setfield_gc(p89, p36, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1483: setfield_gc(p87, p50, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1494: setfield_gc(p87, ConstPtr(ptr99), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1498: setfield_gc(p87, p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1502: i101 = int_ge(i96, -9223372036854775807)
+1515: guard_true(i101, descr=<Guard0x3c1e920>) [p89, p87, None, None, None, None, None, None, None, None, None, None, None, None]
+1521: i102 = arraylen_gc(p76, descr=<ArrayP 8>)
+1521: jump(p87, 1, p89, p36, p48, i58, ConstPtr(ptr99), 0, p88, i96, p50, p64, p61, p76, descr=TargetToken(62083248))
+1632: --end of the loop--
[3e4c086c0702ace] jit-log-opt-bridge}
[3e4c086c275f336] {jit-backend
[3e4c086c28040b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835671f
[3e4c086c280e7ad] jit-backend-dump}
[3e4c086c281a442] {jit-backend-addr
Loop 41 ((let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)) has address 0x7fd8356720ad to 0x7fd835672450 (bootstrap 0x7fd835672020)
       gc table: 0x7fd835671f20
       function: 0x7fd835672020
         resops: 0x7fd8356720ad
       failures: 0x7fd835672450
            end: 0x7fd83567272b
[3e4c086c281d9f2] jit-backend-addr}
[3e4c086c2822302] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356720c4 +0  DF030000
[3e4c086c282375c] jit-backend-dump}
[3e4c086c2827076] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356720da +0  E5030000
[3e4c086c2827f25] jit-backend-dump}
[3e4c086c282b760] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356720ed +0  0A040000
[3e4c086c282c4e0] jit-backend-dump}
[3e4c086c282faa2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672101 +0  12040000
[3e4c086c283077a] jit-backend-dump}
[3e4c086c2833bee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672115 +0  1A040000
[3e4c086c2834938] jit-backend-dump}
[3e4c086c2837dd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567212c +0  1F040000
[3e4c086c2838ae9] jit-backend-dump}
[3e4c086c283bf1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672139 +0  2E040000
[3e4c086c283cc3c] jit-backend-dump}
[3e4c086c283ffb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672156 +0  2D040000
[3e4c086c2840ce6] jit-backend-dump}
[3e4c086c2844108] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672169 +0  36040000
[3e4c086c2844e36] jit-backend-dump}
[3e4c086c2848318] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672177 +0  44040000
[3e4c086c2849092] jit-backend-dump}
[3e4c086c284c4b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672189 +0  4E040000
[3e4c086c284d1eb] jit-backend-dump}
[3e4c086c285070e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672197 +0  5C040000
[3e4c086c2851473] jit-backend-dump}
[3e4c086c2854845] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356721af +0  60040000
[3e4c086c2855573] jit-backend-dump}
[3e4c086c285894e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356721d2 +0  59040000
[3e4c086c2859651] jit-backend-dump}
[3e4c086c285c9ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356721e0 +0  67040000
[3e4c086c285d6fe] jit-backend-dump}
[3e4c086c2860aef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356721ea +0  79040000
[3e4c086c28617f5] jit-backend-dump}
[3e4c086c2864b84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672208 +0  77040000
[3e4c086c2865884] jit-backend-dump}
[3e4c086c2868c62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567221e +0  7D040000
[3e4c086c2869984] jit-backend-dump}
[3e4c086c286cdb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672230 +0  87040000
[3e4c086c286db26] jit-backend-dump}
[3e4c086c2870f88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567223a +0  99040000
[3e4c086c2871c8e] jit-backend-dump}
[3e4c086c28750f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672247 +0  A8040000
[3e4c086c2875e55] jit-backend-dump}
[3e4c086c287934d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356723eb +0  20030000
[3e4c086c287a059] jit-backend-dump}
[3e4c086c287dfb3] jit-backend}
[3e4c086c2881f7e] {jit-log-opt-loop
# Loop 41 ((let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)) : entry bridge with 117 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
+405: guard_class(p1, 16435208, descr=<Guard0x3c1ea40>) [p0, p1]
+424: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+428: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c1eaa0>) [p0, p1]
debug_merge_point(0, 0, '(> i5054 ii)')
+446: guard_not_invalidated(descr=<Guard0x3c15850>) [p0, p1]
+446: guard_class(p0, 16504944, descr=<Guard0x3c15898>) [p0, p1]
+465: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+469: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+473: guard_class(p7, 16478824, descr=<Guard0x3c158e0>) [p0, p1]
+485: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+496: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3c15928>) [p0, p1]
+505: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+509: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3c1eb00>) [p0, p1]
+528: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+532: i14 = int_gt(i6, i13)
+535: guard_false(i14, descr=<Guard0x3c15970>) [p0, p1]
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
+541: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+545: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+549: p17 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+553: p18 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+557: guard_class(p18, 16505296, descr=<Guard0x3c159b8>) [p0, p1]
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
+570: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x3c1eb60>) [p0, p1]
+589: i21 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+593: i23 = int_gt(0, i21)
+597: guard_false(i23, descr=<Guard0x3c15a00>) [p0, p1]
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
+603: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3c1ebc0>) [p0, p1]
+621: i25 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+625: i27 = int_gt(0, i25)
+629: guard_false(i27, descr=<Guard0x3c15a48>) [p0, p1]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
+635: p28 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+639: guard_nonnull_class(p28, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1ec20>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+666: p31 = getfield_gc_r(ConstPtr(ptr30), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+670: setfield_gc(p28, i6, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+675: guard_nonnull_class(p31, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1ec80>) [p31, p1, p0, p16, i6, p17, p15, p18, p3]
+694: i33 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+698: i35 = int_ge(i33, 0)
+702: guard_true(i35, descr=<Guard0x3c15a90>) [p31, p1, p0, p16, i6, p17, p15, p18, p3]
+708: i37 = int_lt(i33, 13)
+712: guard_true(i37, descr=<Guard0x3c15ad8>) [p31, p1, p0, p16, i6, p17, p15, p18, p3]
+725: p39 = getfield_gc_r(ConstPtr(ptr38), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+736: guard_class(p39, 16622984, descr=<Guard0x3c15b20>) [p31, p1, p0, p16, i6, p17, p15, p18, p3]
+748: p42 = getfield_gc_r(ConstPtr(ptr41), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+752: p43 = getarrayitem_gc_r(p42, i33, descr=<ArrayP 8>)
+757: guard_class(p43, ConstClass(W_Vector), descr=<Guard0x3c15b68>) [p31, p1, p0, p16, i6, p17, p15, p18, p3]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+770: p45 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+774: guard_class(p45, 16622984, descr=<Guard0x3c15bb0>) [p31, p1, p0, p16, i6, p17, p15, p18, p3]
+788: i48 = int_ge(i6, 0)
+792: guard_true(i48, descr=<Guard0x3c15bf8>) [p31, p1, p0, p16, i6, p17, p15, p18, p3]
+798: i49 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+802: i50 = int_lt(i6, i49)
+805: guard_true(i50, descr=<Guard0x3c15c40>) [p31, p1, p0, p16, i6, p17, p15, p18, p3]
+811: p51 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+833: setarrayitem_gc(p51, i6, ConstPtr(ptr52), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+838: p53 = new_with_vtable(descr=<SizeDescr 56>)
+888: p54 = new_with_vtable(descr=<SizeDescr 16>)
+899: setfield_gc(p54, i6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+903: p55 = new_with_vtable(descr=<SizeDescr 40>)
+914: p56 = new_with_vtable(descr=<SizeDescr 24>)
+932: p57 = new_with_vtable(descr=<SizeDescr 56>)
+950: setfield_gc(p57, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+968: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+972: setfield_gc(p57, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+983: setfield_gc(p57, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+987: setfield_gc(p57, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+998: setfield_gc(p57, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1002: setfield_gc(p56, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1006: setfield_gc(p56, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1014: p59 = new_with_vtable(descr=<SizeDescr 40>)
+1033: setfield_gc(p59, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1045: setfield_gc(p59, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1050: setfield_gc(p59, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1062: setfield_gc(p59, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1147: i61 = getfield_gc_i(p54, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1151: setfield_gc(p55, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1155: setfield_gc(p53, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1166: setfield_gc(p53, ConstPtr(ptr62), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1170: setfield_gc(p53, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1174: setfield_gc(p53, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1185: setfield_gc(p53, ConstPtr(ptr63), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1189: setfield_gc(p53, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1193: setfield_gc(p55, p56, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1197: setfield_gc(p55, p59, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1208: setfield_gc(p55, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1212: i66 = int_ge(i61, -9223372036854775807)
+1225: guard_true(i66, descr=<Guard0x3c1ece0>) [p55, p53, None, None, None, None, None, None, None, None]
+1231: i68 = arraylen_gc(p42, descr=<ArrayP 8>)
+1231: jump(p53, 1, p55, p3, p15, i25, ConstPtr(ptr63), 0, p54, i61, p17, p31, p28, p42, descr=TargetToken(62083248))
+1328: --end of the loop--
[3e4c086c28e3315] jit-log-opt-loop}
[3e4c086c2a716f2] {jit-backend
[3e4c086c2acbc0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356728f
[3e4c086c2ad45da] jit-backend-dump}
[3e4c086c2adf87f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356729e4 +0  23000000
[3e4c086c2ae0c8e] jit-backend-dump}
[3e4c086c2ae4c87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672c05 +0  23000000
[3e4c086c2ae5be2] jit-backend-dump}
[3e4c086c2ae92b7] {jit-backend-addr
bridge out of Guard 0x3c14608 has address 0x7fd8356729e0 to 0x7fd835672c00
       gc table: 0x7fd8356728f0
    jump target: 0x7fd8356729e0
         resops: 0x7fd8356729ee
       failures: 0x7fd835672c00
            end: 0x7fd835672eff
[3e4c086c2aeb6f1] jit-backend-addr}
[3e4c086c2aeeee0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356729fe +0  41020000
[3e4c086c2aefd89] jit-backend-dump}
[3e4c086c2af32df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672a15 +0  46020000
[3e4c086c2af3ffe] jit-backend-dump}
[3e4c086c2af755b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672a22 +0  71020000
[3e4c086c2af826a] jit-backend-dump}
[3e4c086c2afb5fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672a38 +0  77020000
[3e4c086c2afc2f6] jit-backend-dump}
[3e4c086c2aff67e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672a4c +0  7F020000
[3e4c086c2b00394] jit-backend-dump}
[3e4c086c2b03713] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672a63 +0  84020000
[3e4c086c2b04457] jit-backend-dump}
[3e4c086c2b07759] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672a70 +0  93020000
[3e4c086c2b084be] jit-backend-dump}
[3e4c086c2b0b8e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672a88 +0  97020000
[3e4c086c2b0c604] jit-backend-dump}
[3e4c086c2b0f974] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672a97 +0  A4020000
[3e4c086c2b1068d] jit-backend-dump}
[3e4c086c2b13989] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672aa1 +0  B6020000
[3e4c086c2b14695] jit-backend-dump}
[3e4c086c2b179ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672aba +0  B9020000
[3e4c086c2b18702] jit-backend-dump}
[3e4c086c2b1ba1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672ad2 +0  BD020000
[3e4c086c2b1c72c] jit-backend-dump}
[3e4c086c2b1fa6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672adc +0  CF020000
[3e4c086c2b2076b] jit-backend-dump}
[3e4c086c2b23afd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672aea +0  DD020000
[3e4c086c2b247fd] jit-backend-dump}
[3e4c086c2b27b15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672afc +0  E7020000
[3e4c086c2b2881e] jit-backend-dump}
[3e4c086c2b2bb2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672b14 +0  EB020000
[3e4c086c2b2c83c] jit-backend-dump}
[3e4c086c2b2fb59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672b24 +0  F7020000
[3e4c086c2b3085c] jit-backend-dump}
[3e4c086c2b33bdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672b3c +0  FB020000
[3e4c086c2b348f7] jit-backend-dump}
[3e4c086c2b37ba4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672b4a +0  09030000
[3e4c086c2b388a1] jit-backend-dump}
[3e4c086c2b3bc48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672b54 +0  1B030000
[3e4c086c2b3c93f] jit-backend-dump}
[3e4c086c2b3fc50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672b61 +0  2A030000
[3e4c086c2b4096f] jit-backend-dump}
[3e4c086c2b43cb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672b7a +0  2D030000
[3e4c086c2b449b7] jit-backend-dump}
[3e4c086c2b47ccc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672b92 +0  31030000
[3e4c086c2b48a4c] jit-backend-dump}
[3e4c086c2b4bd2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835672b9b +0  44030000
[3e4c086c2b4ca2a] jit-backend-dump}
[3e4c086c2b4ff93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f90b +0  D1300000
[3e4c086c2b50cee] jit-backend-dump}
[3e4c086c2b54da5] jit-backend}
[3e4c086c2b58d27] {jit-log-opt-bridge
# bridge out of Guard 0x3c14608 with 77 ops
[p0, p1]
+262: guard_class(p1, 16437216, descr=<Guard0x3c1ed40>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+278: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c1eda0>) [p0, p1]
debug_merge_point(0, 0, '(> k end)')
+297: guard_not_invalidated(descr=<Guard0x3c15c88>) [p0, p1]
+297: guard_class(p0, 16504944, descr=<Guard0x3c15cd0>) [p0, p1]
+310: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+314: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+318: guard_class(p7, 16478448, descr=<Guard0x3c15d18>) [p0, p1]
+332: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+343: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3c15d60>) [p0, p1]
+352: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+356: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3c1ee00>) [p0, p1]
+375: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+379: i14 = int_gt(i6, i13)
+382: guard_false(i14, descr=<Guard0x3c15da8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+388: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+392: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3c1ee60>) [p0, p1]
+412: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+417: i19 = int_ge(i17, 0)
+421: guard_true(i19, descr=<Guard0x3c15df0>) [p0, p1]
+427: i21 = int_lt(i17, 13)
+431: guard_true(i21, descr=<Guard0x3c15e38>) [p0, p1]
+444: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+449: guard_class(p23, 16622984, descr=<Guard0x3c15e80>) [p0, p1]
+462: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+467: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+472: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3c15ec8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+486: i30 = int_ge(i6, 0)
+490: guard_true(i30, descr=<Guard0x3c15f10>) [p0, p1]
+496: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+501: i32 = int_lt(i6, i31)
+504: guard_true(i32, descr=<Guard0x3c15f58>) [p0, p1]
+510: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+515: guard_class(p33, 16622984, descr=<Guard0x3c15fa0>) [p0, p1]
+528: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+533: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+538: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3c2c020>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+559: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+562: guard_false(i39, descr=<Guard0x3c2c068>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
+568: p40 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j k)')
+568: p41 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+572: guard_nonnull_class(p41, ConstClass(W_Fixnum), descr=<Guard0x3c1eec0>) [p0, p1]
+592: i43 = getfield_gc_i(p41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+597: i44 = int_add_ovf(i43, i6)
+600: guard_no_overflow(descr=<Guard0x3c2c0b0>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+606: i46 = int_ge(i44, 0)
+610: guard_true(i46, descr=<Guard0x3c2c0f8>) [p0, p1]
+616: i48 = int_lt(i44, 512)
+623: guard_true(i48, descr=<Guard0x3c2c140>) [p0, p1]
+636: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+641: guard_class(p50, 16622984, descr=<Guard0x3c2c188>) [p0, p1]
+654: p53 = getfield_gc_r(ConstPtr(ptr52), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+659: p54 = getarrayitem_gc_r(p53, i44, descr=<ArrayP 8>)
+664: guard_class(p54, ConstClass(W_Bool), descr=<Guard0x3c2c1d0>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+678: i57 = instance_ptr_eq(p54, ConstPtr(ptr56))
+681: guard_true(i57, descr=<Guard0x3c2c218>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
+687: i59 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+691: p60 = new_with_vtable(descr=<SizeDescr 24>)
+735: setfield_gc(p60, i59, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+739: setfield_gc(p60, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+743: jump(p60, p1, descr=TargetToken(61624256))
+784: --end of the loop--
[3e4c086c2b99ccb] jit-log-opt-bridge}
[3e4c086c420214e] {jit-backend
[3e4c086c4284b5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356730a
[3e4c086c428dd24] jit-backend-dump}
[3e4c086c429937c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673194 +0  1F000000
[3e4c086c429a8e0] jit-backend-dump}
[3e4c086c429eb2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673435 +0  1F000000
[3e4c086c429fa72] jit-backend-dump}
[3e4c086c42a3144] {jit-backend-addr
bridge out of Guard 0x3bc7340 has address 0x7fd835673190 to 0x7fd835673430
       gc table: 0x7fd8356730a0
    jump target: 0x7fd835673190
         resops: 0x7fd83567319e
       failures: 0x7fd835673430
            end: 0x7fd83567371e
[3e4c086c42a5627] jit-backend-addr}
[3e4c086c42a8fbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356731ac +0  06030000
[3e4c086c42a9e40] jit-backend-dump}
[3e4c086c42ad4a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356731c0 +0  0E030000
[3e4c086c42ae1f3] jit-backend-dump}
[3e4c086c42b1712] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356731d5 +0  15030000
[3e4c086c42b242e] jit-backend-dump}
[3e4c086c42b57db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356731e7 +0  1F030000
[3e4c086c42b64f4] jit-backend-dump}
[3e4c086c42b9934] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356731ff +0  23030000
[3e4c086c42ba690] jit-backend-dump}
[3e4c086c42bda22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567320d +0  31030000
[3e4c086c42be73d] jit-backend-dump}
[3e4c086c42c1a89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567321a +0  40030000
[3e4c086c42c279b] jit-backend-dump}
[3e4c086c42c5b02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567322e +0  48030000
[3e4c086c42c681b] jit-backend-dump}
[3e4c086c42c9b6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673238 +0  5A030000
[3e4c086c42ca885] jit-backend-dump}
[3e4c086c42cdbc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567324d +0  61030000
[3e4c086c42ce8e6] jit-backend-dump}
[3e4c086c42d1c78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673264 +0  66030000
[3e4c086c42d2987] jit-backend-dump}
[3e4c086c42d5d03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673274 +0  72030000
[3e4c086c42d6a28] jit-backend-dump}
[3e4c086c42d9e22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567328a +0  78030000
[3e4c086c42dab56] jit-backend-dump}
[3e4c086c42ddf1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673298 +0  86030000
[3e4c086c42dec47] jit-backend-dump}
[3e4c086c42e1f98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356732a6 +0  94030000
[3e4c086c42e2cb4] jit-backend-dump}
[3e4c086c42e614d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356732be +0  98030000
[3e4c086c42e6eec] jit-backend-dump}
[3e4c086c42ea357] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356732d2 +0  A0030000
[3e4c086c42eb0a0] jit-backend-dump}
[3e4c086c42ee43b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356732df +0  AF030000
[3e4c086c42ef166] jit-backend-dump}
[3e4c086c42f24e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356732e9 +0  C1030000
[3e4c086c42f3217] jit-backend-dump}
[3e4c086c42f65e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356732fa +0  CC030000
[3e4c086c42f734b] jit-backend-dump}
[3e4c086c42fa6d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673315 +0  CD030000
[3e4c086c42fb3ef] jit-backend-dump}
[3e4c086c42fe737] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567331f +0  DF030000
[3e4c086c42ff481] jit-backend-dump}
[3e4c086c4302b40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566a39f +0  ED8D0000
[3e4c086c4303865] jit-backend-dump}
[3e4c086c4307ba1] jit-backend}
[3e4c086c430bbdd] {jit-log-opt-bridge
# bridge out of Guard 0x3bc7340 with 117 ops
[i0, p1, p2, p3]
+262: guard_not_invalidated(descr=<Guard0x3c1ef80>) [i0, p1, p2, p3]
+262: i5 = int_gt(i0, 5)
+266: guard_true(i5, descr=<Guard0x3c2c260>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))')
debug_merge_point(0, 0, '(void)')
+272: p6 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+283: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3c2c2a8>) [i0, p1, p2, p3]
+292: p8 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+296: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43)) from (void)')
+300: guard_class(p8, 16504944, descr=<Guard0x3c2c2f0>) [i0, p1, p2, p3]
+313: p11 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+317: guard_class(p9, 16435208, descr=<Guard0x3c2c338>) [i0, p1, p2, p3]
+331: p13 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+336: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3c1efe0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ j5101 1)')
+355: i15 = getfield_gc_i(p8, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+359: i17 = int_add_ovf(i15, 1)
+363: guard_no_overflow(descr=<Guard0x3c2c380>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5099 AppRand43)')
+369: guard_class(p11, 16482960, descr=<Guard0x3c2c3c8>) [i0, p1, p2, p3]
+382: p19 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+393: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3c2c410>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))) from (doloop5099 AppRand43)')
debug_merge_point(0, 0, '(> j5101 5)')
+402: i22 = int_gt(i17, 5)
+406: guard_true(i22, descr=<Guard0x3c2c458>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))')
debug_merge_point(0, 0, '(void)')
+412: p23 = getfield_gc_r(p9, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+424: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x3c2c4a0>) [i0, p1, p2, p3]
+433: p25 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+438: p26 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44)) from (void)')
+443: guard_class(p25, 16504944, descr=<Guard0x3c2c4e8>) [i0, p1, p2, p3]
+456: p28 = getfield_gc_r(p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+460: guard_class(p26, 16435208, descr=<Guard0x3c2c530>) [i0, p1, p2, p3]
+472: p30 = getfield_gc_r(p26, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+476: guard_nonnull_class(p30, ConstClass(ForwardLink), descr=<Guard0x3c1f040>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5096 1)')
+494: i32 = getfield_gc_i(p25, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+498: i34 = int_add_ovf(i32, 1)
+502: guard_no_overflow(descr=<Guard0x3c2c578>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5094 AppRand44)')
+508: guard_class(p28, 16499664, descr=<Guard0x3c2c5c0>) [i0, p1, p2, p3]
+522: p36 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+527: guard_nonnull_class(p36, 16510992, descr=<Guard0x3c1f0a0>) [i0, p1, p2, p3]
+546: p38 = getfield_gc_r(p36, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+557: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x3c2c608>) [i0, p1, p2, p3]
+566: p40 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+570: i41 = instance_ptr_eq(p28, p40)
+573: guard_true(i41, descr=<Guard0x3c2c650>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if16 (> i5096 5)]) (if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))) from (doloop5094 AppRand44)')
debug_merge_point(0, 0, '(> i5096 5)')
+579: i43 = int_gt(i34, 5)
+583: guard_false(i43, descr=<Guard0x3c2c698>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))')
debug_merge_point(0, 0, '(let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44)))')
debug_merge_point(0, 0, '(lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))')
+589: p44 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+594: guard_class(p44, 16505296, descr=<Guard0x3c2c6e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5099 1)')
debug_merge_point(0, 0, '(let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))) from (doloop5099 1)')
debug_merge_point(0, 0, '(> j5101 5)')
debug_merge_point(0, 0, '(if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))')
debug_merge_point(0, 0, '(let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43)))')
debug_merge_point(0, 0, '(lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))')
debug_merge_point(0, 0, '(doloop5104 1)')
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 1)')
debug_merge_point(0, 0, '(> k5106 5)')
debug_merge_point(0, 0, '(if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))')
debug_merge_point(0, 0, '(let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42)))')
debug_merge_point(0, 0, '(* *d* k5106)')
debug_merge_point(0, 0, '(let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))))')
debug_merge_point(0, 0, '(+ j5101 AppRand38)')
debug_merge_point(0, 0, '(let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))')
debug_merge_point(0, 0, '(* *d* AppRand39)')
debug_merge_point(0, 0, '(let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))')
debug_merge_point(0, 0, '(+ i5096 AppRand40)')
+606: i47 = int_add(i34, 72)
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand41 #f)')
+617: p49 = getfield_gc_r(ConstPtr(ptr48), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+621: guard_class(p49, 16622984, descr=<Guard0x3c2c728>) [i0, p1, p2, p3]
+633: i52 = int_ge(i47, 0)
+637: guard_true(i52, descr=<Guard0x3c2c770>) [i0, p1, p2, p3]
+643: p54 = getfield_gc_r(ConstPtr(ptr53), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+665: setarrayitem_gc(p54, i47, ConstPtr(ptr55), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))')
debug_merge_point(0, 0, '(+ k5106 1)')
debug_merge_point(0, 0, '(doloop5104 AppRand42)')
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)')
+670: p56 = new_with_vtable(descr=<SizeDescr 40>)
+714: p57 = new_with_vtable(descr=<SizeDescr 40>)
+725: p58 = new_with_vtable(descr=<SizeDescr 24>)
+736: p59 = new_with_vtable(descr=<SizeDescr 32>)
+747: setfield_gc(p59, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+751: setfield_gc(p59, ConstPtr(ptr60), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+755: setfield_gc(p59, i34, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+759: setfield_gc(p58, p59, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+763: setfield_gc(p58, 1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+771: p62 = new_with_vtable(descr=<SizeDescr 40>)
+782: setfield_gc(p62, p30, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+786: p63 = new_with_vtable(descr=<SizeDescr 24>)
+797: setfield_gc(p63, p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+801: setfield_gc(p63, i34, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+805: setfield_gc(p62, p63, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+809: setfield_gc(p62, p26, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+813: setfield_gc(p62, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+817: setfield_gc(p57, ConstPtr(ptr65), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+821: setfield_gc(p57, p58, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+825: setfield_gc(p57, p62, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+829: setfield_gc(p56, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+833: setfield_gc(p57, p30, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+844: setfield_gc(p56, ConstPtr(ptr66), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+848: setfield_gc(p56, i34, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed11.inst_vals_fixed_0 24 pure>)
+852: setfield_gc(p56, 1, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed11.inst_vals_fixed_1 32 pure>)
+860: jump(p56, 2, p57, p30, 1, i34, p54, descr=TargetToken(62083088))
+912: --end of the loop--
[3e4c086c436dd8b] jit-log-opt-bridge}
[3e4c086d556da89] {jit-backend
[3e4c086d55d7fda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356738b
[3e4c086d55e0ea9] jit-backend-dump}
[3e4c086d55ed361] {jit-backend-addr
Loop 44 ((let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))) from (doloop5099 AppRand43)) has address 0x7fd835673a3d to 0x7fd835673c80 (bootstrap 0x7fd8356739b0)
       gc table: 0x7fd8356738b0
       function: 0x7fd8356739b0
         resops: 0x7fd835673a3d
       failures: 0x7fd835673c80
            end: 0x7fd835673f32
[3e4c086d55f0666] jit-backend-addr}
[3e4c086d55f517c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673a54 +0  72020000
[3e4c086d55f66f5] jit-backend-dump}
[3e4c086d55fa0ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673a6a +0  78020000
[3e4c086d55fafce] jit-backend-dump}
[3e4c086d55fe786] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673a7d +0  9D020000
[3e4c086d55ff574] jit-backend-dump}
[3e4c086d5602b5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673a8b +0  AB020000
[3e4c086d5603867] jit-backend-dump}
[3e4c086d5606e4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673a9f +0  B3020000
[3e4c086d5607b44] jit-backend-dump}
[3e4c086d560afa9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673ab3 +0  BB020000
[3e4c086d560bcc8] jit-backend-dump}
[3e4c086d560f148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673ac3 +0  C7020000
[3e4c086d560fe51] jit-backend-dump}
[3e4c086d5613298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673ad9 +0  CD020000
[3e4c086d5613fa4] jit-backend-dump}
[3e4c086d561751c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673ae7 +0  DB020000
[3e4c086d5618219] jit-backend-dump}
[3e4c086d561b711] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673af3 +0  EB020000
[3e4c086d561c3e6] jit-backend-dump}
[3e4c086d561f8a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673b09 +0  F1020000
[3e4c086d56205a7] jit-backend-dump}
[3e4c086d56239e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673b1d +0  F9020000
[3e4c086d56246b6] jit-backend-dump}
[3e4c086d5627b55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673b2a +0  08030000
[3e4c086d5628849] jit-backend-dump}
[3e4c086d562bd19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673b34 +0  1A030000
[3e4c086d562ca06] jit-backend-dump}
[3e4c086d562fe78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673b48 +0  22030000
[3e4c086d5630b5f] jit-backend-dump}
[3e4c086d5633f62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673b5c +0  2A030000
[3e4c086d5634c4d] jit-backend-dump}
[3e4c086d5638081] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673b72 +0  30030000
[3e4c086d5638d56] jit-backend-dump}
[3e4c086d563c162] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673b89 +0  35030000
[3e4c086d563ce34] jit-backend-dump}
[3e4c086d5640299] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673b9d +0  3D030000
[3e4c086d5640f7b] jit-backend-dump}
[3e4c086d56443d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673bae +0  48030000
[3e4c086d56450c4] jit-backend-dump}
[3e4c086d5648514] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835673bbc +0  56030000
[3e4c086d56491ec] jit-backend-dump}
[3e4c086d564d140] jit-backend}
[3e4c086d56510ec] {jit-log-opt-loop
# Loop 44 ((let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))) from (doloop5099 AppRand43)) : entry bridge with 91 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))) from (doloop5099 AppRand43)')
+405: guard_class(p1, 16435208, descr=<Guard0x3c1f100>) [p0, p1]
+424: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+428: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c1f160>) [p0, p1]
debug_merge_point(0, 0, '(> j5101 5)')
+446: guard_not_invalidated(descr=<Guard0x3c2c7b8>) [p0, p1]
+446: guard_class(p0, 16504944, descr=<Guard0x3c2c800>) [p0, p1]
+465: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+469: i8 = int_gt(i6, 5)
+473: guard_true(i8, descr=<Guard0x3c2c848>) [p0, p1]
debug_merge_point(0, 0, '(if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))')
debug_merge_point(0, 0, '(void)')
+479: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+490: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3c2c890>) [p0, p1]
+499: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+503: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44)) from (void)')
+507: guard_class(p11, 16504944, descr=<Guard0x3c2c8d8>) [p0, p1]
+519: p14 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+523: guard_class(p12, 16435208, descr=<Guard0x3c2c920>) [p0, p1]
+535: p16 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+539: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x3c1f1c0>) [p0, p1]
debug_merge_point(0, 0, '(+ i5096 1)')
+557: i18 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+561: i20 = int_add_ovf(i18, 1)
+565: guard_no_overflow(descr=<Guard0x3c2c968>) [p0, p1]
debug_merge_point(0, 0, '(doloop5094 AppRand44)')
+571: guard_class(p14, 16499664, descr=<Guard0x3c2c9b0>) [p0, p1]
+583: p22 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+587: guard_nonnull_class(p22, 16510992, descr=<Guard0x3c1f220>) [p0, p1]
+605: p24 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+616: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3c2c9f8>) [p0, p1]
+625: p26 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+629: i27 = instance_ptr_eq(p14, p26)
+632: guard_true(i27, descr=<Guard0x3c2ca40>) [p0, p1]
debug_merge_point(0, 0, '(let ([if16 (> i5096 5)]) (if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))) from (doloop5094 AppRand44)')
debug_merge_point(0, 0, '(> i5096 5)')
+638: i29 = int_gt(i20, 5)
+642: guard_true(i29, descr=<Guard0x3c2ca88>) [p0, p1]
debug_merge_point(0, 0, '(if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))')
debug_merge_point(0, 0, '(void)')
+648: p30 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+659: guard_value(p30, ConstPtr(ptr31), descr=<Guard0x3c2cad0>) [p0, p1]
+668: p32 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+672: p33 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+676: guard_class(p33, 16435208, descr=<Guard0x3c2cb18>) [p0, p1]
+688: p35 = getfield_gc_r(p33, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+692: guard_nonnull_class(p35, ConstClass(ForwardLink), descr=<Guard0x3c1f280>) [p0, p1]
debug_merge_point(0, 0, '(let ([doloop5121 (lambda (i5123) (let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))))]) (doloop5121 0))')
debug_merge_point(0, 0, '(lambda (i5123) (let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))))')
debug_merge_point(0, 0, '(doloop5121 0)')
debug_merge_point(0, 0, '(let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))) from (doloop5121 0)')
debug_merge_point(0, 0, '(> i5123 typemax)')
debug_merge_point(0, 0, '(if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))')
debug_merge_point(0, 0, '(let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47)))')
debug_merge_point(0, 0, '(lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))')
debug_merge_point(0, 0, '(doloop5126 0)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 0)')
debug_merge_point(0, 0, '(> m5128 size)')
debug_merge_point(0, 0, '(if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))')
debug_merge_point(0, 0, '(let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46)))')
debug_merge_point(0, 0, '(vector-ref *p* i5123)')
+717: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+721: guard_class(p38, 16622984, descr=<Guard0x3c2cb60>) [p0, p1]
+733: p41 = getfield_gc_r(ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+737: p43 = getarrayitem_gc_r(p41, 0, descr=<ArrayP 8>)
+741: guard_class(p43, ConstClass(W_Vector), descr=<Guard0x3c2cba8>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand45 m5128 #f)')
+753: p45 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+757: guard_class(p45, 16622984, descr=<Guard0x3c2cbf0>) [p0, p1]
+770: i47 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+774: i49 = int_lt(0, i47)
+778: guard_true(i49, descr=<Guard0x3c2cc38>) [p0, p1]
+784: p50 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))')
debug_merge_point(0, 0, '(+ m5128 1)')
debug_merge_point(0, 0, '(doloop5126 AppRand46)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)')
+805: setarrayitem_gc(p50, 0, ConstPtr(ptr51), descr=<ArrayP 8>)
+809: p52 = new_with_vtable(descr=<SizeDescr 40>)
+853: p53 = new_with_vtable(descr=<SizeDescr 40>)
+864: setfield_gc(p53, p35, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+868: setfield_gc(p53, p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+872: setfield_gc(p53, p33, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+883: setfield_gc(p53, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+887: i55 = arraylen_gc(p41, descr=<ArrayP 8>)
+887: setfield_gc(p52, p35, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+898: setfield_gc(p52, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+909: setfield_gc(p52, ConstPtr(ptr57), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+913: setfield_gc(p52, p53, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+924: jump(ConstPtr(ptr58), 1, p52, p35, p41, 0, descr=TargetToken(61624176))
+976: --end of the loop--
[3e4c086d569a654] jit-log-opt-loop}
[3e4c086d920be29] {jit-backend
[3e4c086d924f96d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086d9255ed8] jit-backend-dump}
[3e4c086d9261809] {jit-backend-addr
Loop 45 ((let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 0)) has address 0x7fd83567412d to 0x7fd835674240 (bootstrap 0x7fd8356740a0)
       gc table: 0x7fd835674020
       function: 0x7fd8356740a0
         resops: 0x7fd83567412d
       failures: 0x7fd835674240
            end: 0x7fd8356743be
[3e4c086d9264b8b] jit-backend-addr}
[3e4c086d92692b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674144 +0  0A010000
[3e4c086d926a654] jit-backend-dump}
[3e4c086d926df5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567415a +0  10010000
[3e4c086d926ee1e] jit-backend-dump}
[3e4c086d92723f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567416d +0  35010000
[3e4c086d927321a] jit-backend-dump}
[3e4c086d92765dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567417b +0  43010000
[3e4c086d927736d] jit-backend-dump}
[3e4c086d927a8dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674185 +0  55010000
[3e4c086d927b697] jit-backend-dump}
[3e4c086d927eb14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567419c +0  5A010000
[3e4c086d927f876] jit-backend-dump}
[3e4c086d9282d34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356741af +0  63010000
[3e4c086d9283a7a] jit-backend-dump}
[3e4c086d9286ea2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356741b9 +0  75010000
[3e4c086d9287c10] jit-backend-dump}
[3e4c086d928b047] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356741d1 +0  79010000
[3e4c086d928bd93] jit-backend-dump}
[3e4c086d928f144] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356741e3 +0  83010000
[3e4c086d928fe8d] jit-backend-dump}
[3e4c086d92932ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356741f8 +0  8A010000
[3e4c086d92940ea] jit-backend-dump}
[3e4c086d9297527] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567420c +0  92010000
[3e4c086d92982d2] jit-backend-dump}
[3e4c086d929c302] jit-backend}
[3e4c086d92a00b6] {jit-log-opt-loop
# Loop 45 ((let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 0)) : entry bridge with 45 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 0)')
+277: guard_class(p1, 16435920, descr=<Guard0x3c1f2e0>) [p0, p1]
+296: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c1f340>) [p0, p1]
debug_merge_point(0, 0, '(> i5026 typemax)')
+318: guard_not_invalidated(descr=<Guard0x3c2cc80>) [p0, p1]
+318: guard_class(p0, 16504944, descr=<Guard0x3c2ccc8>) [p0, p1]
+337: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+341: i8 = int_gt(i6, 12)
+345: guard_false(i8, descr=<Guard0x3c2cd10>) [p0, p1]
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)))')
debug_merge_point(0, 0, '(vector-ref *class* i5026)')
+351: i10 = int_ge(i6, 0)
+355: guard_true(i10, descr=<Guard0x3c2cd58>) [p0, p1]
+368: p12 = getfield_gc_r(ConstPtr(ptr11), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+372: guard_class(p12, 16623792, descr=<Guard0x3c2cda0>) [p0, p1]
+384: p15 = getfield_gc_r(ConstPtr(ptr14), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+388: i16 = getarrayitem_gc_i(p15, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+393: i18 = int_ge(i16, 0)
+397: guard_true(i18, descr=<Guard0x3c2cde8>) [p0, p1]
+403: i20 = int_lt(i16, 4)
+407: guard_true(i20, descr=<Guard0x3c2ce30>) [p0, p1]
+420: p22 = getfield_gc_r(ConstPtr(ptr21), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+424: guard_class(p22, 16623792, descr=<Guard0x3c2ce78>) [p0, p1]
+437: p25 = getfield_gc_r(ConstPtr(ptr24), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+441: i26 = getarrayitem_gc_i(p25, i16, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+446: i27 = int_is_zero(i26)
+449: guard_true(i27, descr=<Guard0x3c2cec0>) [p0, p1]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)) from (void)')
+455: p28 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ i5026 1)')
+459: i30 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
+463: guard_class(p28, 16478448, descr=<Guard0x3c2cf08>) [p0, p1]
+476: p32 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+487: guard_value(p32, ConstPtr(ptr33), descr=<Guard0x3c2cf50>) [p0, p1]
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+496: i34 = arraylen_gc(p15, descr=<ArrayS 8>)
+496: i35 = arraylen_gc(p25, descr=<ArrayS 8>)
+496: jump(p28, i30, p1, p3, p15, p25, descr=TargetToken(62080048))
+544: --end of the loop--
[3e4c086d92c9a17] jit-log-opt-loop}
[3e4c086dc4dae80] {jit-backend
[3e4c086dc52223f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356744e0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F873301000048FF0425D0F5C503488B8D380100008139480E00000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813AB01E01000F8500000000488B5A104883FB050F8F000000004885DB0F8400000000BE08000000480FAFF30F8000000000488B7A08813F68C400000F85000000004C8B47104C8B0D8EFEFFFF4D39C80F85000000004C8B4F204C01CE0F80000000004885F60F8400000000486BF6080F80000000004C8B47184C01C60F80000000004C8B1581FEFFFF4D8B621841813C24C8EB02000F85000000004883FE000F8C000000004881FE000200000F8D00000000498B5210F64204810F854C0000004C8B1563FEFFFF4C8954F2104C8D53014889BD3001000048898D380100004889854001000049BB80906635D87F000041FFE30F1F84000000000049BB50B76535D87F000041FFD3E9BBFEFFFF78105249BBF0A16535D87F000041FFD3790F4989F349C1EB074983F3F84C0FAB1AE98EFFFFFFFF3562FDFFFF49BBE0436735D87F000041534D8D9B205CFEFF41FFE3FF354EFDFFFF49BBF0436735D87F000041534D8D9B105CFEFF41FFE3FF353AFDFFFF49BB00446735D87F000041534D8D9B005CFEFF41FFE3FF3526FDFFFF49BB10446735D87F000041534D8D9BF05BFEFF41FFE3FF3512FDFFFF49BB20446735D87F000041534D8D9BE05BFEFF41FFE3FF35FEFCFFFF49BB30446735D87F000041534D8D9BD05BFEFF41FFE3FF35EAFCFFFF49BB40446735D87F000041534D8D9BC05BFEFF41FFE3FF35D6FCFFFF49BB50446735D87F000041534D8D9BB05BFEFF41FFE3FF35CAFCFFFF49BB60446735D87F000041534D8D9BA05BFEFF41FFE3FF35B6FCFFFF49BB70446735D87F000041534D8D9B905BFEFF41FFE3FF35A2FCFFFF49BB80446735D87F000041534D8D9B805BFEFF41FFE3FF358EFCFFFF49BB90446735D87F000041534D8D9B705BFEFF41FFE3FF357AFCFFFF49BBA0446735D87F000041534D8D9B605BFEFF41FFE3FF356EFCFFFF49BBB0446735D87F000041534D8D9B505BFEFF41FFE3FF355AFCFFFF49BBC0446735D87F000041534D8D9B405BFEFF41FFE3FF3546FCFFFF49BBD0446735D87F000041534D8D9B305BFEFF41FFE3
[3e4c086dc529192] jit-backend-dump}
[3e4c086dc535008] {jit-backend-addr
Loop 46 ((let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 1)) has address 0x7fd83567460d to 0x7fd835674740 (bootstrap 0x7fd835674580)
       gc table: 0x7fd8356744e0
       function: 0x7fd835674580
         resops: 0x7fd83567460d
       failures: 0x7fd835674740
            end: 0x7fd835674938
[3e4c086dc538212] jit-backend-addr}
[3e4c086dc53c7d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674624 +0  50010000
[3e4c086dc53db81] jit-backend-dump}
[3e4c086dc54123b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567463a +0  56010000
[3e4c086dc5420de] jit-backend-dump}
[3e4c086dc54569f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567464d +0  7B010000
[3e4c086dc54647f] jit-backend-dump}
[3e4c086dc5498e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567465b +0  89010000
[3e4c086dc54a658] jit-backend-dump}
[3e4c086dc54da4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674664 +0  9C010000
[3e4c086dc54e7aa] jit-backend-dump}
[3e4c086dc551cbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674673 +0  A9010000
[3e4c086dc552a35] jit-backend-dump}
[3e4c086dc555d43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674683 +0  B5010000
[3e4c086dc556aa8] jit-backend-dump}
[3e4c086dc559edf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674697 +0  BD010000
[3e4c086dc55ac16] jit-backend-dump}
[3e4c086dc55df8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356746a4 +0  CC010000
[3e4c086dc55ecfb] jit-backend-dump}
[3e4c086dc5620cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356746ad +0  DF010000
[3e4c086dc562e0a] jit-backend-dump}
[3e4c086dc56619f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356746b7 +0  F1010000
[3e4c086dc566ed9] jit-backend-dump}
[3e4c086dc56a37e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356746c4 +0  00020000
[3e4c086dc56b0af] jit-backend-dump}
[3e4c086dc56e3dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356746dd +0  03020000
[3e4c086dc56f135] jit-backend-dump}
[3e4c086dc572557] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356746e7 +0  15020000
[3e4c086dc57326f] jit-backend-dump}
[3e4c086dc576587] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356746f4 +0  24020000
[3e4c086dc5772cd] jit-backend-dump}
[3e4c086dc57b1fc] jit-backend}
[3e4c086dc57effc] {jit-log-opt-loop
# Loop 46 ((let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 1)) : entry bridge with 53 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 1)')
+309: guard_class(p1, 16435208, descr=<Guard0x3c1f3a0>) [p0, p1]
+328: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+332: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c1f400>) [p0, p1]
debug_merge_point(0, 0, '(> k5106 5)')
+350: guard_not_invalidated(descr=<Guard0x3c2cf98>) [p0, p1]
+350: guard_class(p0, 16504944, descr=<Guard0x3c2cfe0>) [p0, p1]
+369: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+373: i8 = int_gt(i6, 5)
+377: guard_false(i8, descr=<Guard0x3c2d028>) [p0, p1]
debug_merge_point(0, 0, '(if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))')
debug_merge_point(0, 0, '(let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42)))')
debug_merge_point(0, 0, '(* *d* k5106)')
+383: i9 = int_is_true(i6)
+386: guard_true(i9, descr=<Guard0x3c2d070>) [p0, p1]
+392: i11 = int_mul_ovf(8, i6)
+401: guard_no_overflow(descr=<Guard0x3c2d0b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))))')
+407: p12 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j5101 AppRand38)')
+411: guard_class(p12, 16481832, descr=<Guard0x3c2d100>) [p0, p1]
+423: p14 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+434: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3c2d148>) [p0, p1]
+443: i16 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed11.inst_vals_fixed_1 32 pure>)
+447: i17 = int_add_ovf(i16, i11)
+450: guard_no_overflow(descr=<Guard0x3c2d190>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))')
debug_merge_point(0, 0, '(* *d* AppRand39)')
+456: i18 = int_is_true(i17)
+459: guard_true(i18, descr=<Guard0x3c2d1d8>) [p0, p1]
+465: i20 = int_mul_ovf(8, i17)
+469: guard_no_overflow(descr=<Guard0x3c2d220>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))')
+475: p21 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ i5096 AppRand40)')
+475: i22 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed11.inst_vals_fixed_0 24 pure>)
+479: i23 = int_add_ovf(i22, i20)
+482: guard_no_overflow(descr=<Guard0x3c2d268>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand41 #f)')
+495: p25 = getfield_gc_r(ConstPtr(ptr24), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+499: guard_class(p25, 16622984, descr=<Guard0x3c2d2b0>) [p0, p1]
+513: i28 = int_ge(i23, 0)
+517: guard_true(i28, descr=<Guard0x3c2d2f8>) [p0, p1]
+523: i30 = int_lt(i23, 512)
+530: guard_true(i30, descr=<Guard0x3c2d340>) [p0, p1]
+536: p32 = getfield_gc_r(ConstPtr(ptr31), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+557: setarrayitem_gc(p32, i23, ConstPtr(ptr33), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))')
debug_merge_point(0, 0, '(+ k5106 1)')
+562: i35 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop5104 AppRand42)')
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)')
+566: jump(p12, i35, p1, p3, i16, i22, p32, descr=TargetToken(62083088))
+608: --end of the loop--
[3e4c086dc5adead] jit-log-opt-loop}
[3e4c086df893633] {jit-backend
[3e4c086df901711] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674a
[3e4c086df9094f2] jit-backend-dump}
[3e4c086df91580a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674b34 +0  23000000
[3e4c086df916e07] jit-backend-dump}
[3e4c086df91b278] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674d85 +0  23000000
[3e4c086df91c256] jit-backend-dump}
[3e4c086df91f8d2] {jit-backend-addr
bridge out of Guard 0x3b0dad8 has address 0x7fd835674b30 to 0x7fd835674d80
       gc table: 0x7fd835674a70
    jump target: 0x7fd835674b30
         resops: 0x7fd835674b3e
       failures: 0x7fd835674d80
            end: 0x7fd835674f83
[3e4c086df921e4a] jit-backend-addr}
[3e4c086df925d4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674b4f +0  8C020000
[3e4c086df926ca0] jit-backend-dump}
[3e4c086df92a454] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674b6d +0  8A020000
[3e4c086df92b20c] jit-backend-dump}
[3e4c086df92e76c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674b81 +0  92020000
[3e4c086df92f4b8] jit-backend-dump}
[3e4c086df9328c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674b96 +0  99020000
[3e4c086df933626] jit-backend-dump}
[3e4c086df936ae1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674bae +0  9D020000
[3e4c086df937849] jit-backend-dump}
[3e4c086df93ac80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674bbc +0  AB020000
[3e4c086df93b9e5] jit-backend-dump}
[3e4c086df93edf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674bcd +0  B6020000
[3e4c086df93fb5c] jit-backend-dump}
[3e4c086df942f8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674be1 +0  BE020000
[3e4c086df943d04] jit-backend-dump}
[3e4c086df947172] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674bfc +0  BF020000
[3e4c086df947ee4] jit-backend-dump}
[3e4c086df94b352] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674c1c +0  BB020000
[3e4c086df94c0fd] jit-backend-dump}
[3e4c086df94f55f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674c2e +0  C5020000
[3e4c086df9502c4] jit-backend-dump}
[3e4c086df953699] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674c38 +0  D7020000
[3e4c086df954404] jit-backend-dump}
[3e4c086df957813] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674c4f +0  DC020000
[3e4c086df95858e] jit-backend-dump}
[3e4c086df95b994] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674c61 +0  E6020000
[3e4c086df95c6f3] jit-backend-dump}
[3e4c086df95fafc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835674d49 +0  1A020000
[3e4c086df96085e] jit-backend-dump}
[3e4c086df963e78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565d731 +0  FB730100
[3e4c086df964be6] jit-backend-dump}
[3e4c086df968ddb] jit-backend}
[3e4c086df96cd01] {jit-log-opt-bridge
# bridge out of Guard 0x3b0dad8 with 93 ops
[i0, p1, p2, p3]
+214: guard_not_invalidated(descr=<Guard0x3c1f460>) [i0, p1, p2, p3]
+214: i5 = int_gt(i0, 511)
+221: guard_true(i5, descr=<Guard0x3c2d388>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))')
+227: p6 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+238: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3c1f4c0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))')
debug_merge_point(0, 0, 'or-part4985')
debug_merge_point(0, 0, '(if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18)))')
debug_merge_point(0, 0, '(begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))')
debug_merge_point(0, 0, 'k4983')
+257: p8 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(> k4983 size)')
debug_merge_point(0, 0, '(if if6 0 k4983)')
debug_merge_point(0, 0, '0')
+257: p9 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+268: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3c2d3d0>) [i0, p1, p2, p3]
+277: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+281: p12 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+285: guard_class(p12, 16435208, descr=<Guard0x3c2d418>) [i0, p1, p2, p3]
+298: p14 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+302: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x3c1f520>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(set! k5021 SetBang1) from (> k4983 size)')
+322: guard_class(p11, 16504944, descr=<Guard0x3c2d460>) [i0, p1, p2, p3]
+336: p17 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+340: guard_class(p17, 16478448, descr=<Guard0x3c2d4a8>) [i0, p1, p2, p3]
+353: p19 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+364: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3c2d4f0>) [i0, p1, p2, p3]
+373: p21 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+377: p22 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+381: guard_nonnull_class(p22, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1f580>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))')
debug_merge_point(0, 0, '(trial CellRef(k5021))')
+400: p24 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([k5021 0]) (call-with-current-continuation (lambda (return) (let ([doloop5024 (lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))]) (doloop5024 0)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (return) (let ([doloop5024 (lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))]) (doloop5024 0))))')
debug_merge_point(0, 0, '(let ([doloop5024 (lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))]) (doloop5024 0))')
debug_merge_point(0, 0, '(lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))')
debug_merge_point(0, 0, '(doloop5024 0)')
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 0)')
debug_merge_point(0, 0, '(> i5026 typemax)')
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)))')
debug_merge_point(0, 0, '(vector-ref *class* i5026)')
+407: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+411: setfield_gc(p22, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+419: guard_class(p26, 16623792, descr=<Guard0x3c1f5e0>) [p26, p12, p11, p14, None, None, None, None]
+432: p31 = getfield_gc_r(ConstPtr(ptr30), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+436: i33 = getarrayitem_gc_i(p31, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+440: i35 = int_ge(i33, 0)
+444: guard_true(i35, descr=<Guard0x3c2d538>) [p26, p12, p11, p14, None, None, None, None]
+450: i37 = int_lt(i33, 4)
+454: guard_true(i37, descr=<Guard0x3c2d580>) [p26, p12, p11, p14, None, None, None, None]
+467: p39 = getfield_gc_r(ConstPtr(ptr38), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+471: guard_class(p39, 16623792, descr=<Guard0x3c2d5c8>) [p26, p12, p11, p14, None, None, None, None]
+483: p42 = getfield_gc_r(ConstPtr(ptr41), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+487: i43 = getarrayitem_gc_i(p42, i33, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+492: i44 = int_is_zero(i43)
+495: guard_true(i44, descr=<Guard0x3c2d610>) [p26, p12, p11, p14, None, None, None, None]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)) from (void)')
debug_merge_point(0, 0, '(+ i5026 1)')
debug_merge_point(0, 0, '(doloop5024 AppRand28)')
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 AppRand28)')
+501: p45 = new_with_vtable(descr=<SizeDescr 48>)
+545: p46 = new_with_vtable(descr=<SizeDescr 16>)
+556: p47 = new_with_vtable(descr=<SizeDescr 16>)
+567: setfield_gc(p47, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+575: setfield_gc(p46, p47, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+579: p49 = new_with_vtable(descr=<SizeDescr 24>)
+590: p50 = new_with_vtable(descr=<SizeDescr 40>)
+601: setfield_gc(p50, p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+605: setfield_gc(p50, p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+609: setfield_gc(p50, p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+620: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+624: setfield_gc(p49, p50, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+628: setfield_gc(p49, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+676: p53 = getfield_gc_r(p50, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+687: setfield_gc(p45, ConstPtr(ptr54), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+691: setfield_gc(p45, ConstPtr(ptr55), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+695: setfield_gc(p45, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+706: setfield_gc(p45, ConstPtr(ptr56), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+710: setfield_gc(p45, p49, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+714: guard_nonnull_class(p53, ConstClass(ForwardLink), descr=<Guard0x3c1f640>) [p50, p45, None, None, None, None, None, None, None]
+733: i58 = arraylen_gc(p31, descr=<ArrayS 8>)
+733: i59 = arraylen_gc(p42, descr=<ArrayS 8>)
+733: jump(p45, 1, p50, p53, p31, p42, descr=TargetToken(62080048))
+784: --end of the loop--
[3e4c086df9b50a7] jit-log-opt-bridge}
[3e4c086dfacee4a] {jit-backend
[3e4c086dfb2ff2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356750e0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5202000048FF0425F0F5C5034C8B2533FFFFFF4D39E70F85000000004D8B55104D8B4D18418139480E00000F85000000004D8B41084983F8017207418138900F00000F850000000041813AB01E01000F85000000004D8B420841813830B700000F85000000004D8B5010488B3D0DFFFFFF4939FA0F8500000000498B78204C8B57084983FA01720741813AF08900000F8500000000498B7A084885FF0F8500000000488B3DF5FEFFFF4C8B57084983FA01720741813AF08900000F8500000000498B7A084883C7010F80000000004D8B782849897A084983FF01720741813F705402000F85000000004D8B77084D8B6F104D39F10F84000000004D8B7918488B0C25F091F900488D5148483B14251092F9000F876401000048891425F091F90048C7019847000048C7410801000000488D511848C702080E000048C7420804000000450F57FF440F117A1848C74228000000004C894A10488951104C89A5300100004C898D380100004C8985400100004C8995480100004C89B5500100004C89AD580100004889FB4C89FF4C89EE4C89F241B80000000049BB80506735D87F00004C895D2041BB0085530041FFD3488B0C258893F900488B69F8F64504010F85D500000048C745200000000048833C2540B35F01000F85000000004C8B60084C0FB648104D85E40F85000000004D85C90F85000000004C8B8D50010000418139101100000F85000000004D8B61204C3BA5300100000F85000000004D8B6110498B41184C8B9D480100004C899D400100004989DE4C89E34989C449BB700A6735D87F000041FFE36666666666662E0F1F84000000000048C7442408FFFFFF0049BB904F6735D87F00004C895D204D8D9B6053FEFF41FFD3E988FDFFFF49BB70506735D87F00004C895D204D8D9B805AFEFF41FFD3E987FEFFFF49BB70A26535D87F000041FFD3E919FFFFFFFF359DFCFFFF49BBA04F6735D87F000041534D8D9B6050FEFF41FFE3FF3589FCFFFF49BBB04F6735D87F000041534D8D9B5050FEFF41FFE3FF3575FCFFFF49BBC04F6735D87F000041534D8D9B4050FEFF41FFE3FF3561FCFFFF49BBD04F6735D87F000041534D8D9B3050FEFF41FFE3FF354DFCFFFF49BBE04F6735D87F000041534D8D9B2050FEFF41FFE3FF3539FCFFFF49BBF04F6735D87F000041534D8D9B1050FEFF41FFE3FF352DFCFFFF49BB00506735D87F000041534D8D9B0050FEFF41FFE3FF3519FCFFFF49BB10506735D87F000041534D8D9BF04FFEFF41FFE3FF3505FCFFFF49BB20506735D87F000041534D8D9BE04FFEFF41FFE3FF35F9FBFFFF49BB30506735D87F000041534D8D9BD04FFEFF41FFE3FF35E5FBFFFF49BB40506735D87F000041534D8D9BC04FFEFF41FFE3FF35D1FBFFFF49BB50506735D87F000041534D8D9BB04FFEFF41FFE3FF35BDFBFFFF49BB60506735D87F000041534D8D9BA04FFEFF41FFE3FF35A9FBFFFF49BB90506735D87F000041534D8D9B2050FEFF41FFE3FF3595FBFFFF49BBA0506735D87F000041534D8D9B604FFEFF41FFE3FF3581FBFFFF49BBB0506735D87F000041534D8D9B504FFEFF41FFE3FF356DFBFFFF49BBC0506735D87F000041534D8D9B404FFEFF41FFE3FF3559FBFFFF49BBD0506735D87F000041534D8D9B304FFEFF41FFE3
[3e4c086dfb37dfe] jit-backend-dump}
[3e4c086dfb42ad7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675194 +0  22000000
[3e4c086dfb44052] jit-backend-dump}
[3e4c086dfb47eec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356753f5 +0  22000000
[3e4c086dfb48d61] jit-backend-dump}
[3e4c086dfb4c17f] {jit-backend-addr
bridge out of Guard 0x3b74f50 has address 0x7fd835675190 to 0x7fd8356753f0
       gc table: 0x7fd8356750e0
    jump target: 0x7fd835675190
         resops: 0x7fd83567519e
       failures: 0x7fd8356753f0
            end: 0x7fd83567563d
[3e4c086dfb4e4f9] jit-backend-addr}
[3e4c086dfb51af5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356751b2 +0  8F020000
[3e4c086dfb52933] jit-backend-dump}
[3e4c086dfb56048] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356751c7 +0  B2020000
[3e4c086dfb56de1] jit-backend-dump}
[3e4c086dfb5a341] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356751de +0  B7020000
[3e4c086dfb5b0be] jit-backend-dump}
[3e4c086dfb5e582] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356751eb +0  C6020000
[3e4c086dfb5f294] jit-backend-dump}
[3e4c086dfb6264e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356751fc +0  D1020000
[3e4c086dfb63351] jit-backend-dump}
[3e4c086dfb667f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675210 +0  D9020000
[3e4c086dfb67543] jit-backend-dump}
[3e4c086dfb6a97d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567522b +0  DA020000
[3e4c086dfb6b689] jit-backend-dump}
[3e4c086dfb6ea4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675238 +0  E9020000
[3e4c086dfb6f7b7] jit-backend-dump}
[3e4c086dfb72bee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675256 +0  E7020000
[3e4c086dfb7392b] jit-backend-dump}
[3e4c086dfb76d03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675264 +0  F5020000
[3e4c086dfb77a4a] jit-backend-dump}
[3e4c086dfb7ae06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567527f +0  F6020000
[3e4c086dfb7bb22] jit-backend-dump}
[3e4c086dfb7eec6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675290 +0  01030000
[3e4c086dfb7fc10] jit-backend-dump}
[3e4c086dfb82fe8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675371 +0  3C020000
[3e4c086dfb83cfd] jit-backend-dump}
[3e4c086dfb870d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675383 +0  46020000
[3e4c086dfb87e13] jit-backend-dump}
[3e4c086dfb8b180] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567538c +0  59020000
[3e4c086dfb8be98] jit-backend-dump}
[3e4c086dfb8f212] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356753a0 +0  61020000
[3e4c086dfb8ff4c] jit-backend-dump}
[3e4c086dfb932e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356753b1 +0  6C020000
[3e4c086dfb93ff0] jit-backend-dump}
[3e4c086dfb97584] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356676f2 +0  9ADA0000
[3e4c086dfb982ac] jit-backend-dump}
[3e4c086dfb9c51b] jit-backend}
[3e4c086dfba020b] {jit-log-opt-bridge
# bridge out of Guard 0x3b74f50 with 57 ops
[p0, p1, p2]
+205: guard_value(p2, ConstPtr(ptr3), descr=<Guard0x3c1f6a0>) [p0, p1, p2]
+214: p4 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+218: guard_not_invalidated(descr=<Guard0x3c2d658>) [p0, p1, p2]
+218: p5 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))) from (+ *kount* 1)')
+222: guard_class(p5, 16435208, descr=<Guard0x3c2d6a0>) [p0, p1, p2]
+235: p7 = getfield_gc_r(p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+239: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x3c1f700>) [p0, p1, p2]
debug_merge_point(0, 0, '(if or-part5035 or-part5035 (zero? CellRef(k5021)))')
debug_merge_point(0, 0, '(zero? CellRef(k5021))')
+258: guard_class(p4, 16504944, descr=<Guard0x3c2d6e8>) [p0, p1, p2]
+271: p10 = getfield_gc_r(p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+275: guard_class(p10, 16478448, descr=<Guard0x3c2d730>) [p0, p1, p2]
+288: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+299: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3c2d778>) [p0, p1, p2]
+308: p14 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+312: p15 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+316: guard_nonnull_class(p15, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1f760>) [p0, p1, p2]
+335: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+339: i18 = int_is_zero(i17)
+342: guard_true(i18, descr=<Guard0x3c2d7c0>) [p0, p1, p2]
debug_merge_point(0, 0, '(if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))')
debug_merge_point(0, 0, '(let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t))')
debug_merge_point(0, 0, '(+ *kount* 1)')
+355: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+359: guard_nonnull_class(p20, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1f7c0>) [p0, p1, p2]
+378: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+382: i24 = int_add_ovf(i22, 1)
+386: guard_no_overflow(descr=<Guard0x3c2d808>) [p0, p1, p2]
debug_merge_point(0, 0, '(set! *kount* SetBang2)')
debug_merge_point(0, 0, '(return #t)')
+392: p25 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+396: setfield_gc(p20, i24, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+400: guard_nonnull_class(p25, 16584240, descr=<Guard0x3c1f820>) [p5, p10, p25]
+419: p27 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+423: p28 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+427: i29 = instance_ptr_eq(p5, p27)
+430: guard_false(i29, descr=<Guard0x3c2d850>) [p5, p10, p25]
+436: p30 = getfield_gc_r(p5, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+440: p31 = new(descr=<SizeDescr 24>)
+481: setfield_gc(p31, 1, descr=<FieldS list.length 8>)
+489: p34 = new_array_clear(4, descr=<ArrayP 8>)
+525: setarrayitem_gc(p34, 0, p5, descr=<ArrayP 8>)
+529: setfield_gc(p31, p34, descr=<FieldP list.items 16>)
+533: p38 = call_r(ConstClass(_scan_continuation), p30, p28, p27, p31, 0, descr=<Callr 8 rrrri EF=3>)
+646: guard_no_exception(descr=<Guard0x3c1f880>) [p5, p10, p28, p27, p38]
+661: p39 = getfield_gc_r(p38, descr=<FieldP tuple2.item0 8 pure>)
+665: i40 = getfield_gc_i(p38, descr=<FieldU tuple2.item1 16 pure>)
+670: guard_isnull(p39, descr=<Guard0x3c2d898>) [p5, p10, p28, p27, p38]
+679: guard_false(i40, descr=<Guard0x3c2d8e0>) [p5, p10, p28, p27, p38]
+688: guard_class(p27, 16435920, descr=<Guard0x3c2d928>) [p5, p10, p28, p27, p38]
+708: p42 = getfield_gc_r(p27, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+712: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x3c2d970>) [p5, p10, p28, p27, p38]
+725: p44 = getfield_gc_r(p27, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+729: p45 = getfield_gc_r(p27, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))) from (return #t)')
+733: jump(p44, p45, p20, i24, descr=TargetToken(62847104))
+784: --end of the loop--
[3e4c086dfbd21bf] jit-log-opt-bridge}
[3e4c086dfe26280] {jit-backend
[3e4c086dfe6c920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356756d
[3e4c086dfe7272f] jit-backend-dump}
[3e4c086dfe7d6f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675754 +0  1F000000
[3e4c086dfe7ea29] jit-backend-dump}
[3e4c086dfe829a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356758c5 +0  1F000000
[3e4c086dfe8384b] jit-backend-dump}
[3e4c086dfe86e65] {jit-backend-addr
bridge out of Guard 0x3b0c800 has address 0x7fd835675750 to 0x7fd8356758c0
       gc table: 0x7fd8356756d0
    jump target: 0x7fd835675750
         resops: 0x7fd83567575e
       failures: 0x7fd8356758c0
            end: 0x7fd8356759c8
[3e4c086dfe8930b] jit-backend-addr}
[3e4c086dfe8cc09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567576f +0  C9010000
[3e4c086dfe8dad4] jit-backend-dump}
[3e4c086dfe91083] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567578a +0  CA010000
[3e4c086dfe91dd9] jit-backend-dump}
[3e4c086dfe95281] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567579f +0  D1010000
[3e4c086dfe95fce] jit-backend-dump}
[3e4c086dfe99448] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356757b7 +0  D5010000
[3e4c086dfe9a17c] jit-backend-dump}
[3e4c086dfe9d6d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356757cf +0  D9010000
[3e4c086dfe9e3f7] jit-backend-dump}
[3e4c086dfea1ac3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83565bb21 +0  2B9C0100
[3e4c086dfea27e8] jit-backend-dump}
[3e4c086dfea69f2] jit-backend}
[3e4c086dfeaa756] {jit-log-opt-bridge
# bridge out of Guard 0x3b0c800 with 63 ops
[i0, p1, p2, p3]
+150: guard_not_invalidated(descr=<Guard0x3c1f8e0>) [i0, p1, p2, p3]
+150: i5 = int_gt(i0, 511)
+157: guard_true(i5, descr=<Guard0x3c2d9b8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))')
debug_merge_point(0, 0, '(void)')
+163: p6 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+181: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3c2da00>) [i0, p1, p2, p3]
+190: p8 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+194: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+198: guard_class(p9, 16435208, descr=<Guard0x3c2da48>) [i0, p1, p2, p3]
+211: p11 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+215: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x3c1f940>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([doloop5094 (lambda (i5096) (let ([if16 (> i5096 5)]) (if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))))]) (doloop5094 1))')
debug_merge_point(0, 0, '(lambda (i5096) (let ([if16 (> i5096 5)]) (if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))))')
debug_merge_point(0, 0, '(doloop5094 1)')
debug_merge_point(0, 0, '(let ([if16 (> i5096 5)]) (if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))) from (doloop5094 1)')
debug_merge_point(0, 0, '(> i5096 5)')
debug_merge_point(0, 0, '(if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))')
debug_merge_point(0, 0, '(let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44)))')
debug_merge_point(0, 0, '(lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))')
debug_merge_point(0, 0, '(doloop5099 1)')
debug_merge_point(0, 0, '(let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))) from (doloop5099 1)')
debug_merge_point(0, 0, '(> j5101 5)')
debug_merge_point(0, 0, '(if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))')
debug_merge_point(0, 0, '(let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43)))')
debug_merge_point(0, 0, '(lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))')
debug_merge_point(0, 0, '(doloop5104 1)')
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 1)')
debug_merge_point(0, 0, '(> k5106 5)')
debug_merge_point(0, 0, '(if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))')
debug_merge_point(0, 0, '(let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42)))')
debug_merge_point(0, 0, '(* *d* k5106)')
debug_merge_point(0, 0, '(let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))))')
debug_merge_point(0, 0, '(+ j5101 AppRand38)')
debug_merge_point(0, 0, '(let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))')
debug_merge_point(0, 0, '(* *d* AppRand39)')
debug_merge_point(0, 0, '(let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f))')
debug_merge_point(0, 0, '(+ i5096 AppRand40)')
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand41 #f)')
+242: p14 = getfield_gc_r(ConstPtr(ptr13), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+246: guard_class(p14, 16622984, descr=<Guard0x3c2da90>) [i0, p1, p2, p3]
+259: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))')
debug_merge_point(0, 0, '(+ k5106 1)')
debug_merge_point(0, 0, '(doloop5104 AppRand42)')
debug_merge_point(0, 0, '(let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))) from (doloop5104 AppRand42)')
+281: setarrayitem_gc(p17, 73, ConstPtr(ptr19), descr=<ArrayP 8>)
+288: p20 = new_with_vtable(descr=<SizeDescr 40>)
+329: p21 = new_with_vtable(descr=<SizeDescr 40>)
+340: setfield_gc(p21, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+351: setfield_gc(p21, ConstPtr(ptr22), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+355: p23 = new_with_vtable(descr=<SizeDescr 40>)
+366: setfield_gc(p23, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+370: setfield_gc(p23, p8, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+374: setfield_gc(p23, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+385: setfield_gc(p23, ConstPtr(ptr24), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+389: setfield_gc(p21, p23, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+400: setfield_gc(p21, ConstPtr(ptr25), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+411: setfield_gc(p20, ConstPtr(ptr26), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+422: setfield_gc(p20, ConstPtr(ptr27), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+426: setfield_gc(p20, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+430: setfield_gc(p20, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+441: jump(ConstPtr(ptr28), 2, p20, p11, 1, 1, p17, descr=TargetToken(62083088))
+496: --end of the loop--
[3e4c086dfedad07] jit-log-opt-bridge}
[3e4c086e012b027] {jit-backend
[3e4c086e01a03fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675b
[3e4c086e01a9e2f] jit-backend-dump}
[3e4c086e01b4c1b] {jit-backend-addr
Loop 50 ((let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43)) from (void)) has address 0x7fd835675d3d to 0x7fd835675fb0 (bootstrap 0x7fd835675cb0)
       gc table: 0x7fd835675b90
       function: 0x7fd835675cb0
         resops: 0x7fd835675d3d
       failures: 0x7fd835675fb0
            end: 0x7fd8356762b6
[3e4c086e01b7c3c] jit-backend-addr}
[3e4c086e01bc421] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675d54 +0  A2020000
[3e4c086e01bd69d] jit-backend-dump}
[3e4c086e01c0f2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675d6b +0  A7020000
[3e4c086e01c1d5c] jit-backend-dump}
[3e4c086e01c52aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675d81 +0  AD020000
[3e4c086e01c5fde] jit-backend-dump}
[3e4c086e01c98d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675d8f +0  D7020000
[3e4c086e01ca6f0] jit-backend-dump}
[3e4c086e01cdc9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675d9b +0  E7020000
[3e4c086e01cea2f] jit-backend-dump}
[3e4c086e01d1e22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675daf +0  EF020000
[3e4c086e01d2baf] jit-backend-dump}
[3e4c086e01d6076] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675db9 +0  01030000
[3e4c086e01d6de7] jit-backend-dump}
[3e4c086e01da277] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675dcd +0  09030000
[3e4c086e01dafbd] jit-backend-dump}
[3e4c086e01de3ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675de1 +0  11030000
[3e4c086e01df110] jit-backend-dump}
[3e4c086e01e24ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675df1 +0  1D030000
[3e4c086e01e3241] jit-backend-dump}
[3e4c086e01e66c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675e07 +0  23030000
[3e4c086e01e741a] jit-backend-dump}
[3e4c086e01ea876] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675e15 +0  31030000
[3e4c086e01eb5f6] jit-backend-dump}
[3e4c086e01eea64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675e21 +0  41030000
[3e4c086e01ef7c0] jit-backend-dump}
[3e4c086e01f2b52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675e37 +0  47030000
[3e4c086e01f38b1] jit-backend-dump}
[3e4c086e01f6ce5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675e4b +0  4F030000
[3e4c086e01f7a8a] jit-backend-dump}
[3e4c086e01fae62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675e58 +0  5E030000
[3e4c086e01fbbec] jit-backend-dump}
[3e4c086e01ff05a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675e62 +0  70030000
[3e4c086e01ffded] jit-backend-dump}
[3e4c086e02031ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675e76 +0  78030000
[3e4c086e0203f5e] jit-backend-dump}
[3e4c086e020739b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675e8a +0  80030000
[3e4c086e0208112] jit-backend-dump}
[3e4c086e020b4f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675ea0 +0  86030000
[3e4c086e020c246] jit-backend-dump}
[3e4c086e020f72f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675eb7 +0  8B030000
[3e4c086e02104bc] jit-backend-dump}
[3e4c086e02138f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675ecb +0  93030000
[3e4c086e021466a] jit-backend-dump}
[3e4c086e0217a8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675edc +0  9E030000
[3e4c086e02187e7] jit-backend-dump}
[3e4c086e021bc0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835675eea +0  AC030000
[3e4c086e021c96b] jit-backend-dump}
[3e4c086e022077a] jit-backend}
[3e4c086e0224770] {jit-log-opt-loop
# Loop 50 ((let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43)) from (void)) : entry bridge with 100 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43)) from (void)')
+437: guard_class(p0, 16504944, descr=<Guard0x3c1f9a0>) [p1, p0]
+456: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+460: guard_class(p1, 16435208, descr=<Guard0x3c2dad8>) [p1, p0]
+479: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+483: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x3c1fa00>) [p1, p0]
debug_merge_point(0, 0, '(+ j5101 1)')
+501: guard_not_invalidated(descr=<Guard0x3c2db20>) [p1, p0]
+501: i7 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+505: i9 = int_add_ovf(i7, 1)
+509: guard_no_overflow(descr=<Guard0x3c2db68>) [p1, p0]
debug_merge_point(0, 0, '(doloop5099 AppRand43)')
+515: guard_class(p3, 16482960, descr=<Guard0x3c2dbb0>) [p1, p0]
+527: p11 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+538: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3c2dbf8>) [p1, p0]
debug_merge_point(0, 0, '(let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))) from (doloop5099 AppRand43)')
debug_merge_point(0, 0, '(> j5101 5)')
+547: i14 = int_gt(i9, 5)
+551: guard_true(i14, descr=<Guard0x3c2dc40>) [p1, p0]
debug_merge_point(0, 0, '(if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))')
debug_merge_point(0, 0, '(void)')
+557: p15 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+568: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x3c2dc88>) [p1, p0]
+577: p17 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+581: p18 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44)) from (void)')
+585: guard_class(p17, 16504944, descr=<Guard0x3c2dcd0>) [p1, p0]
+597: p20 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+601: guard_class(p18, 16435208, descr=<Guard0x3c2dd18>) [p1, p0]
+613: p22 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+617: guard_nonnull_class(p22, ConstClass(ForwardLink), descr=<Guard0x3c1fa60>) [p1, p0]
debug_merge_point(0, 0, '(+ i5096 1)')
+635: i24 = getfield_gc_i(p17, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+639: i26 = int_add_ovf(i24, 1)
+643: guard_no_overflow(descr=<Guard0x3c2dd60>) [p1, p0]
debug_merge_point(0, 0, '(doloop5094 AppRand44)')
+649: guard_class(p20, 16499664, descr=<Guard0x3c2dda8>) [p1, p0]
+661: p28 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+665: guard_nonnull_class(p28, 16510992, descr=<Guard0x3c1fac0>) [p1, p0]
+683: p30 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+694: guard_value(p30, ConstPtr(ptr31), descr=<Guard0x3c2ddf0>) [p1, p0]
+703: p32 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+707: i33 = instance_ptr_eq(p20, p32)
+710: guard_true(i33, descr=<Guard0x3c2de38>) [p1, p0]
debug_merge_point(0, 0, '(let ([if16 (> i5096 5)]) (if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))) from (doloop5094 AppRand44)')
debug_merge_point(0, 0, '(> i5096 5)')
+716: i35 = int_gt(i26, 5)
+720: guard_true(i35, descr=<Guard0x3c2de80>) [p1, p0]
debug_merge_point(0, 0, '(if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))')
debug_merge_point(0, 0, '(void)')
+726: p36 = getfield_gc_r(p18, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+737: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x3c2dec8>) [p1, p0]
+746: p38 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+750: p39 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+754: guard_class(p39, 16435208, descr=<Guard0x3c2df10>) [p1, p0]
+766: p41 = getfield_gc_r(p39, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+770: guard_nonnull_class(p41, ConstClass(ForwardLink), descr=<Guard0x3c1fb20>) [p1, p0]
debug_merge_point(0, 0, '(let ([doloop5121 (lambda (i5123) (let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))))]) (doloop5121 0))')
debug_merge_point(0, 0, '(lambda (i5123) (let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))))')
debug_merge_point(0, 0, '(doloop5121 0)')
debug_merge_point(0, 0, '(let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))) from (doloop5121 0)')
debug_merge_point(0, 0, '(> i5123 typemax)')
debug_merge_point(0, 0, '(if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))')
debug_merge_point(0, 0, '(let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47)))')
debug_merge_point(0, 0, '(lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))')
debug_merge_point(0, 0, '(doloop5126 0)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 0)')
debug_merge_point(0, 0, '(> m5128 size)')
debug_merge_point(0, 0, '(if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))')
debug_merge_point(0, 0, '(let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46)))')
debug_merge_point(0, 0, '(vector-ref *p* i5123)')
+795: p44 = getfield_gc_r(ConstPtr(ptr43), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+799: guard_class(p44, 16622984, descr=<Guard0x3c2df58>) [p1, p0]
+811: p47 = getfield_gc_r(ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+815: p49 = getarrayitem_gc_r(p47, 0, descr=<ArrayP 8>)
+819: guard_class(p49, ConstClass(W_Vector), descr=<Guard0x3c2dfa0>) [p1, p0]
debug_merge_point(0, 0, '(vector-set! AppRand45 m5128 #f)')
+831: p51 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+835: guard_class(p51, 16622984, descr=<Guard0x3cae020>) [p1, p0]
+848: i53 = getfield_gc_i(p49, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+852: i55 = int_lt(0, i53)
+856: guard_true(i55, descr=<Guard0x3cae068>) [p1, p0]
+862: p56 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))')
debug_merge_point(0, 0, '(+ m5128 1)')
debug_merge_point(0, 0, '(doloop5126 AppRand46)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)')
+883: setarrayitem_gc(p56, 0, ConstPtr(ptr57), descr=<ArrayP 8>)
+887: p58 = new_with_vtable(descr=<SizeDescr 40>)
+928: p59 = new_with_vtable(descr=<SizeDescr 40>)
+939: setfield_gc(p59, p41, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+943: setfield_gc(p59, p38, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+947: setfield_gc(p59, p39, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+958: setfield_gc(p59, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+962: i61 = arraylen_gc(p47, descr=<ArrayP 8>)
+962: setfield_gc(p58, p41, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+973: setfield_gc(p58, ConstPtr(ptr62), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+984: setfield_gc(p58, ConstPtr(ptr63), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+988: setfield_gc(p58, p59, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+999: jump(ConstPtr(ptr64), 1, p58, p41, p47, 0, descr=TargetToken(61624176))
+1056: --end of the loop--
[3e4c086e0272803] jit-log-opt-loop}
[3e4c086e178d983] {jit-backend
[3e4c086e17f3983] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086e17fc414] jit-backend-dump}
[3e4c086e1807eeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676564 +0  23000000
[3e4c086e1809593] jit-backend-dump}
[3e4c086e180da78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676785 +0  23000000
[3e4c086e180ea6e] jit-backend-dump}
[3e4c086e181232d] {jit-backend-addr
bridge out of Guard 0x3b13580 has address 0x7fd835676560 to 0x7fd835676780
       gc table: 0x7fd835676470
    jump target: 0x7fd835676560
         resops: 0x7fd83567656e
       failures: 0x7fd835676780
            end: 0x7fd835676a7f
[3e4c086e1814893] jit-backend-addr}
[3e4c086e18181bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567657e +0  41020000
[3e4c086e18190ec] jit-backend-dump}
[3e4c086e181c6ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676595 +0  46020000
[3e4c086e181d403] jit-backend-dump}
[3e4c086e182098e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356765a9 +0  6A020000
[3e4c086e18216d7] jit-backend-dump}
[3e4c086e1824c25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356765bf +0  70020000
[3e4c086e1825956] jit-backend-dump}
[3e4c086e1828d8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356765d3 +0  78020000
[3e4c086e1829a8d] jit-backend-dump}
[3e4c086e182cf23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356765ea +0  7D020000
[3e4c086e182dc5a] jit-backend-dump}
[3e4c086e18310d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356765f7 +0  8C020000
[3e4c086e1831ddd] jit-backend-dump}
[3e4c086e183520e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567660f +0  90020000
[3e4c086e1835eff] jit-backend-dump}
[3e4c086e183936d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567661e +0  9D020000
[3e4c086e183a079] jit-backend-dump}
[3e4c086e183d45b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676628 +0  AF020000
[3e4c086e183e18c] jit-backend-dump}
[3e4c086e18415a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676641 +0  B2020000
[3e4c086e18422a4] jit-backend-dump}
[3e4c086e184567c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676659 +0  B6020000
[3e4c086e1846376] jit-backend-dump}
[3e4c086e184976d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676663 +0  C8020000
[3e4c086e184a464] jit-backend-dump}
[3e4c086e184d85b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676671 +0  D6020000
[3e4c086e184e55b] jit-backend-dump}
[3e4c086e185193c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676683 +0  E0020000
[3e4c086e1852648] jit-backend-dump}
[3e4c086e18559e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567669b +0  E4020000
[3e4c086e18566d4] jit-backend-dump}
[3e4c086e1859b08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356766ab +0  F0020000
[3e4c086e185a7fc] jit-backend-dump}
[3e4c086e185df98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356766c3 +0  F4020000
[3e4c086e185ecb6] jit-backend-dump}
[3e4c086e1862247] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356766d1 +0  02030000
[3e4c086e1862fa3] jit-backend-dump}
[3e4c086e18663f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356766db +0  14030000
[3e4c086e18670e6] jit-backend-dump}
[3e4c086e186a4b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356766e8 +0  23030000
[3e4c086e186b1c1] jit-backend-dump}
[3e4c086e186e550] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676701 +0  26030000
[3e4c086e186f241] jit-backend-dump}
[3e4c086e18726a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676719 +0  2A030000
[3e4c086e1873396] jit-backend-dump}
[3e4c086e187671c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676722 +0  3D030000
[3e4c086e1877410] jit-backend-dump}
[3e4c086e187aac9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356616d4 +0  884E0100
[3e4c086e187b7d2] jit-backend-dump}
[3e4c086e187fa07] jit-backend}
[3e4c086e1883a31] {jit-log-opt-bridge
# bridge out of Guard 0x3b13580 with 77 ops
[p0, p1]
+262: guard_class(p1, 16437216, descr=<Guard0x3c1fbe0>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+278: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c1fc40>) [p0, p1]
debug_merge_point(0, 0, '(> k end)')
+297: guard_not_invalidated(descr=<Guard0x3cae0f8>) [p0, p1]
+297: guard_class(p0, 16504944, descr=<Guard0x3cae140>) [p0, p1]
+317: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+321: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+325: guard_class(p7, 16478448, descr=<Guard0x3cae188>) [p0, p1]
+339: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+350: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3cae1d0>) [p0, p1]
+359: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+363: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3c1fca0>) [p0, p1]
+382: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+386: i14 = int_gt(i6, i13)
+389: guard_false(i14, descr=<Guard0x3cae218>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+395: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+399: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3c1fd00>) [p0, p1]
+419: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+424: i19 = int_ge(i17, 0)
+428: guard_true(i19, descr=<Guard0x3cae260>) [p0, p1]
+434: i21 = int_lt(i17, 13)
+438: guard_true(i21, descr=<Guard0x3cae2a8>) [p0, p1]
+451: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+456: guard_class(p23, 16622984, descr=<Guard0x3cae2f0>) [p0, p1]
+469: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+474: p27 = getarrayitem_gc_r(p26, i17, descr=<ArrayP 8>)
+479: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3cae338>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+493: i30 = int_ge(i6, 0)
+497: guard_true(i30, descr=<Guard0x3cae380>) [p0, p1]
+503: i31 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+508: i32 = int_lt(i6, i31)
+511: guard_true(i32, descr=<Guard0x3cae3c8>) [p0, p1]
+517: p33 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+522: guard_class(p33, 16622984, descr=<Guard0x3cae410>) [p0, p1]
+535: p35 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+540: p36 = getarrayitem_gc_r(p35, i6, descr=<ArrayP 8>)
+545: guard_class(p36, ConstClass(W_Bool), descr=<Guard0x3cae458>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+566: i39 = instance_ptr_eq(p36, ConstPtr(ptr38))
+569: guard_false(i39, descr=<Guard0x3cae4a0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
+575: p40 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ j k)')
+575: p41 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+579: guard_nonnull_class(p41, ConstClass(W_Fixnum), descr=<Guard0x3c1fd60>) [p0, p1]
+599: i43 = getfield_gc_i(p41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+604: i44 = int_add_ovf(i43, i6)
+607: guard_no_overflow(descr=<Guard0x3cae4e8>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+613: i46 = int_ge(i44, 0)
+617: guard_true(i46, descr=<Guard0x3cae530>) [p0, p1]
+623: i48 = int_lt(i44, 512)
+630: guard_true(i48, descr=<Guard0x3cae578>) [p0, p1]
+643: p50 = getfield_gc_r(ConstPtr(ptr49), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+648: guard_class(p50, 16622984, descr=<Guard0x3cae5c0>) [p0, p1]
+661: p53 = getfield_gc_r(ConstPtr(ptr52), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+666: p54 = getarrayitem_gc_r(p53, i44, descr=<ArrayP 8>)
+671: guard_class(p54, ConstClass(W_Bool), descr=<Guard0x3cae608>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+685: i57 = instance_ptr_eq(p54, ConstPtr(ptr56))
+688: guard_true(i57, descr=<Guard0x3cae650>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
+694: i59 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+698: p60 = new_with_vtable(descr=<SizeDescr 24>)
+742: setfield_gc(p60, i59, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+746: setfield_gc(p60, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+750: jump(p60, p1, descr=TargetToken(61624256))
+784: --end of the loop--
[3e4c086e18c3e4e] jit-log-opt-bridge}
[3e4c086e1c500fb] {jit-backend
[3e4c086e1d11c62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676cd0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C7204000048FF04258012C6034981F9FF0100000F8F000000004D8B77084983FE01720741813E900F00000F85000000004983F9000F8C000000004C8B3545FEFFFF4D8B6E1841817D00C8EB02000F85000000004D8B6E104F8B74CD1041813E88AD02000F85000000004C8B252EFEFFFF4D39E60F85000000004D8B77204C8B152AFEFFFF4D39D60F85000000004D8B57104D8B771841813A700B01000F85000000004D8B4210498B78084883FF017206813FF08900000F85000000004C894F0841813E480E00000F8500000000498B7E204C8B3DFEFDFFFF4C39FF0F85000000004D8B7E10498B7E1841813F700B01000F85000000004D8B4708418138B01E01000F8500000000498B7008813F480E00000F85000000004C8B47084983F8017207418138900F00000F8500000000498B5F104C8B7B084983FF01720741813FF08900000F8500000000498B5F084C8B3DBAFDFFFF498B5718813AF0EE02000F8500000000498B57104C8B7A104983FF000F8C000000004983FF040F8D00000000488B15A7FDFFFF488B42188138F0EE02000F8500000000488B42104A8B54F8104885D20F8400000000488B1596FDFFFF4C8B7A1841813FF0EE02000F85000000004C8B7A10498B57104883FA000F8C000000004C8B3D84FDFFFF498B47188138C8EB02000F8500000000498B47104C8B781041813FF08C00000F8500000000498B4F084883F9000F8E00000000498B4F188139C8EB02000F8500000000498B4F104C8B791041813F88AD02000F85000000004D39E70F84000000004883FB000F8C000000004881FB000200000F8D000000004D8B7CDD1041813F88AD02000F85000000004D39E70F85000000004989D6488B0C25F091F900488D9158010000483B14251092F9000F870F02000048891425F091F90048C70130B70000488D513048C702601400004C8972084C8D721049C7066014000049895E084D8D4E1049C701101100004D8D512849C702B01E01004D8D621849C7042430B700004C8B3DD3FCFFFF4D897C24084C8B2DCFFCFFFF4D896C24104D8D6C243049C745006014000049895D084D896C2418498D5D1048C703708700004C8D6B1049C74500F089000049C74508000000004C896B0849895C2420498D5D1048C703705402004C8D6B1849C74500101100004D8945084989751049897D18488B3D6AFCFFFF49897D204C896B0848C743100000000049895C24284D89620849C74210000000004D8D652849C70424480E00004D894424084D895424104D896C24184C8B2D2FFCFFFF4D896C242048C741080000000048C741100000000048C741180000000048C741200000000048C741280000000049C741080000000049C741100000000049C741180000000049C74120000000004C8B6A084D8941084C8979084C8B3DD7FBFFFF4D8979204D8951104D8961184C8B25CCFBFFFF4C896110488951184C8971204C8B35C1FBFFFF4C89712848898D300100004C898D380100004C898540010000488995480100004C89EF4C89B5500100004989C541BA00000000BA0100000049BB70C86535D87F000041FFE36666662E0F1F84000000000048C7442408FFFFFF0049BB906A6735D87F00004C895D204D8D9B6038FEFF41FFD3E968FBFFFF49BBC06C6735D87F00004C895D204D8D9B303EFEFF41FFD3E9DCFDFFFFFF35A7F9FFFF49BBA06A6735D87F000041534D8D9B6035FEFF41FFE3FF3593F9FFFF49BBB06A6735D87F000041534D8D9B5035FEFF41FFE3FF357FF9FFFF49BBC06A6735D87F000041534D8D9B4035FEFF41FFE3FF356BF9FFFF49BBD06A6735D87F000041534D8D9B3035FEFF41FFE3FF355FF9FFFF49BBE06A6735D87F000041534D8D9B2035FEFF41FFE3FF354BF9FFFF49BBF06A6735D87F000041534D8D9B1035FEFF41FFE3FF353FF9FFFF49BB006B6735D87F000041534D8D9B0035FEFF41FFE3FF3533F9FFFF49BB106B6735D87F000041534D8D9BF034FEFF41FFE3FF351FF9FFFF49BB206B6735D87F000041534D8D9BE034FEFF41FFE3FF350BF9FFFF49BB306B6735D87F000041534D8D9BD034FEFF41FFE3FF35F7F8FFFF49BB406B6735D87F000041534D8D9BC034FEFF41FFE3FF35EBF8FFFF49BB506B6735D87F000041534D8D9BB034FEFF41FFE3FF35D7F8FFFF49BB606B6735D87F000041534D8D9BA034FEFF41FFE3FF35C3F8FFFF49BB706B6735D87F000041534D8D9B9034FEFF41FFE3FF35AFF8FFFF49BB806B6735D87F000041534D8D9B8034FEFF41FFE3FF359BF8FFFF49BB906B6735D87F000041534D8D9B7034FEFF41FFE3FF3587F8FFFF49BBA06B6735D87F000041534D8D9B6034FEFF41FFE3FF357BF8FFFF49BBB06B6735D87F000041534D8D9B5034FEFF41FFE3FF3567F8FFFF49BBC06B6735D87F000041534D8D9B4034FEFF41FFE3FF3553F8FFFF49BBD06B6735D87F000041534D8D9B3034FEFF41FFE3FF3547F8FFFF49BBE06B6735D87F000041534D8D9B2034FEFF41FFE3FF3533F8FFFF49BBF06B6735D87F000041534D8D9B1034FEFF41FFE3FF3527F8FFFF49BB006C6735D87F000041534D8D9B0034FEFF41FFE3FF3513F8FFFF49BB106C6735D87F000041534D8D9BF033FEFF41FFE3FF3507F8FFFF49BB206C6735D87F000041534D8D9BE033FEFF41FFE3FF35F3F7FFFF49BB306C6735D87F000041534D8D9BD033FEFF41FFE3FF35DFF7FFFF49BB406C6735D87F000041534D8D9BC033FEFF41FFE3FF35CBF7FFFF49BB506C6735D87F000041534D8D9BB033FEFF41FFE3FF35B7F7FFFF49BB606C6735D87F000041534D8D9BA033FEFF41FFE3FF35A3F7FFFF49BB706C6735D87F000041534D8D9B9033FEFF41FFE3FF358FF7FFFF49BB806C6735D87F000041534D8D9B8033FEFF41FFE3FF357BF7FFFF49BB906C6735D87F000041534D8D9B7033FEFF41FFE3FF3567F7FFFF49BBA06C6735D87F000041534D8D9B6033FEFF41FFE3FF3553F7FFFF49BBB06C6735D87F000041534D8D9B5033FEFF41FFE3
[3e4c086e1d1daea] jit-backend-dump}
[3e4c086e1d29877] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676e64 +0  23000000
[3e4c086e1d2ae52] jit-backend-dump}
[3e4c086e1d2f349] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356772e5 +0  23000000
[3e4c086e1d30273] jit-backend-dump}
[3e4c086e1d339b0] {jit-backend-addr
bridge out of Guard 0x3b52c80 has address 0x7fd835676e60 to 0x7fd8356772e0
       gc table: 0x7fd835676cd0
    jump target: 0x7fd835676e60
         resops: 0x7fd835676e6e
       failures: 0x7fd8356772e0
            end: 0x7fd8356776db
[3e4c086e1d35df3] jit-backend-addr}
[3e4c086e1d399f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676e7f +0  BC040000
[3e4c086e1d3a870] jit-backend-dump}
[3e4c086e1d3e01e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676e96 +0  C1040000
[3e4c086e1d3edab] jit-backend-dump}
[3e4c086e1d423a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676ea0 +0  D3040000
[3e4c086e1d430bc] jit-backend-dump}
[3e4c086e1d466f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676eb9 +0  D6040000
[3e4c086e1d47438] jit-backend-dump}
[3e4c086e1d4aa59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676ecf +0  DC040000
[3e4c086e1d4b787] jit-backend-dump}
[3e4c086e1d4ece6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676edf +0  E8040000
[3e4c086e1d4fa2a] jit-backend-dump}
[3e4c086e1d52fb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676ef3 +0  F0040000
[3e4c086e1d53ccd] jit-backend-dump}
[3e4c086e1d5723c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676f08 +0  F7040000
[3e4c086e1d57f82] jit-backend-dump}
[3e4c086e1d5b5da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676f22 +0  F9040000
[3e4c086e1d5c320] jit-backend-dump}
[3e4c086e1d5f846] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676f33 +0  04050000
[3e4c086e1d60598] jit-backend-dump}
[3e4c086e1d63ac1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676f47 +0  0C050000
[3e4c086e1d647d6] jit-backend-dump}
[3e4c086e1d67d73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676f5c +0  13050000
[3e4c086e1d68af4] jit-backend-dump}
[3e4c086e1d6bf71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676f6d +0  1E050000
[3e4c086e1d6ccc1] jit-backend-dump}
[3e4c086e1d7015a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676f7d +0  2A050000
[3e4c086e1d70e88] jit-backend-dump}
[3e4c086e1d74345] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676f94 +0  2F050000
[3e4c086e1d75058] jit-backend-dump}
[3e4c086e1d7850f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676faf +0  30050000
[3e4c086e1d79246] jit-backend-dump}
[3e4c086e1d7c6d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676fca +0  31050000
[3e4c086e1d7d3cd] jit-backend-dump}
[3e4c086e1d8089a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676fdc +0  3B050000
[3e4c086e1d815e9] jit-backend-dump}
[3e4c086e1d84b21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676fe6 +0  4D050000
[3e4c086e1d8588c] jit-backend-dump}
[3e4c086e1d88eea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835676ffd +0  52050000
[3e4c086e1d89c83] jit-backend-dump}
[3e4c086e1d8d248] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567700f +0  5C050000
[3e4c086e1d8dfd1] jit-backend-dump}
[3e4c086e1d915df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677027 +0  60050000
[3e4c086e1d9234a] jit-backend-dump}
[3e4c086e1d9595f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677039 +0  6A050000
[3e4c086e1d96677] jit-backend-dump}
[3e4c086e1d99bb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677050 +0  6F050000
[3e4c086e1d9a911] jit-backend-dump}
[3e4c086e1d9ded9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677065 +0  76050000
[3e4c086e1d9ebf7] jit-backend-dump}
[3e4c086e1da2123] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677073 +0  84050000
[3e4c086e1da2e73] jit-backend-dump}
[3e4c086e1da63dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677083 +0  90050000
[3e4c086e1da70cc] jit-backend-dump}
[3e4c086e1daa5f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677098 +0  97050000
[3e4c086e1dab338] jit-backend-dump}
[3e4c086e1dae8de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356770a1 +0  AA050000
[3e4c086e1daf5de] jit-backend-dump}
[3e4c086e1db2a9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356770ab +0  BC050000
[3e4c086e1db37f8] jit-backend-dump}
[3e4c086e1db6d42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356770b8 +0  CB050000
[3e4c086e1db7a4e] jit-backend-dump}
[3e4c086e1dbafe8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356770ca +0  D5050000
[3e4c086e1dbbd56] jit-backend-dump}
[3e4c086e1dbf3c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356770d3 +0  E8050000
[3e4c086e1dc0113] jit-backend-dump}
[3e4c086e1dc3878] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356644ca +0  92290100
[3e4c086e1dc45d0] jit-backend-dump}
[3e4c086e1dc890f] jit-backend}
[3e4c086e1dcc787] {jit-log-opt-bridge
# bridge out of Guard 0x3b52c80 with 183 ops
[i0, p1, p2, p3]
+422: guard_not_invalidated(descr=<Guard0x3c1fdc0>) [i0, p1, p2, p3]
+422: i5 = int_gt(i0, 511)
+429: guard_false(i5, descr=<Guard0x3cae698>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))')
+435: p6 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+439: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3c1fe20>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))')
debug_merge_point(0, 0, '(let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17))')
+458: p8 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(vector-ref *puzzle* k4983)')
+458: i10 = int_ge(i0, 0)
+462: guard_true(i10, descr=<Guard0x3cae6e0>) [i0, p1, p2, p3]
+475: p12 = getfield_gc_r(ConstPtr(ptr11), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+479: guard_class(p12, 16622984, descr=<Guard0x3cae728>) [i0, p1, p2, p3]
+493: p15 = getfield_gc_r(ConstPtr(ptr14), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+497: p16 = getarrayitem_gc_r(p15, i0, descr=<ArrayP 8>)
+502: guard_class(p16, ConstClass(W_Bool), descr=<Guard0x3cae770>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(not AppRand17)')
+522: i19 = instance_ptr_eq(p16, ConstPtr(ptr18))
+525: guard_true(i19, descr=<Guard0x3cae7b8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18)))')
debug_merge_point(0, 0, '(begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))')
debug_merge_point(0, 0, 'k4983')
debug_merge_point(0, 0, '(> k4983 size)')
debug_merge_point(0, 0, '(if if6 0 k4983)')
debug_merge_point(0, 0, 'k4983')
+531: p20 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+542: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x3cae800>) [i0, p1, p2, p3]
+551: p22 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+555: p23 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! n5141 SetBang5)')
+559: guard_class(p22, 16500016, descr=<Guard0x3cae848>) [i0, p1, p2, p3]
+572: p25 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+576: p26 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+580: guard_nonnull_class(p26, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1fe80>) [i0, p1, p2, p3]
+598: setfield_gc(p26, i0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+602: guard_class(p23, 16435208, descr=<Guard0x3c1fee0>) [p23, p22, i0, None, None, None]
+615: p30 = getfield_gc_r(p23, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+626: guard_value(p30, ConstPtr(ptr31), descr=<Guard0x3cae890>) [p23, p22, i0, None, None, None]
+635: p32 = getfield_gc_r(p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+639: p33 = getfield_gc_r(p23, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([if22 (trial CellRef(n5141))]) (if if22 *kount* #f))')
+643: guard_class(p32, 16500016, descr=<Guard0x3cae8d8>) [p23, p22, i0, None, None, None]
+656: p35 = getfield_gc_r(p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+660: guard_class(p35, 16504944, descr=<Guard0x3cae920>) [p23, p22, i0, None, None, None]
+673: p37 = getfield_gc_r(p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+677: guard_class(p33, 16435208, descr=<Guard0x3cae968>) [p23, p22, i0, None, None, None]
+689: p39 = getfield_gc_r(p33, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+693: guard_nonnull_class(p39, ConstClass(ForwardLink), descr=<Guard0x3c1ff40>) [p23, p22, i0, None, None, None]
debug_merge_point(0, 0, '(trial CellRef(n5141))')
+712: p41 = getfield_gc_r(p32, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+716: p42 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+720: guard_nonnull_class(p42, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3c1ffa0>) [p23, p22, i0, None, None, None]
+739: i44 = getfield_gc_i(p42, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([k5021 0]) (call-with-current-continuation (lambda (return) (let ([doloop5024 (lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))]) (doloop5024 0)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (return) (let ([doloop5024 (lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))]) (doloop5024 0))))')
debug_merge_point(0, 0, '(let ([doloop5024 (lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))]) (doloop5024 0))')
debug_merge_point(0, 0, '(lambda (i5026) (let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))))')
debug_merge_point(0, 0, '(doloop5024 0)')
debug_merge_point(0, 0, '(let ([if9 (> i5026 typemax)]) (if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))) from (doloop5024 0)')
debug_merge_point(0, 0, '(> i5026 typemax)')
debug_merge_point(0, 0, '(if if9 (begin (void) (let ([SetBang0 (+ *kount* 1)]) (set! *kount* SetBang0)) #f) (let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28))))')
debug_merge_point(0, 0, '(let ([AppRand26 (vector-ref *class* i5026)]) (let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))) (let ([AppRand28 (+ i5026 1)]) (doloop5024 AppRand28)))')
debug_merge_point(0, 0, '(vector-ref *class* i5026)')
+750: p46 = getfield_gc_r(ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+754: guard_class(p46, 16623792, descr=<Guard0x3cae9b0>) [p23, p22, i0, None, None, None]
+766: p49 = getfield_gc_r(ConstPtr(ptr48), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+770: i51 = getarrayitem_gc_i(p49, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (vector-ref *piececount* AppRand26)]) (if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void)))')
debug_merge_point(0, 0, '(vector-ref *piececount* AppRand26)')
+774: i53 = int_ge(i51, 0)
+778: guard_true(i53, descr=<Guard0x3cae9f8>) [p23, p22, i0, None, None, None]
+784: i55 = int_lt(i51, 4)
+788: guard_true(i55, descr=<Guard0x3caea40>) [p23, p22, i0, None, None, None]
+801: p57 = getfield_gc_r(ConstPtr(ptr56), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+805: guard_class(p57, 16623792, descr=<Guard0x3caea88>) [p23, p22, i0, None, None, None]
+817: p60 = getfield_gc_r(ConstPtr(ptr59), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+821: i61 = getarrayitem_gc_i(p60, i51, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(if (not (zero? AppRand27)) (let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void))) (void))')
+826: i62 = int_is_zero(i61)
+829: guard_false(i62, descr=<Guard0x3caead0>) [p23, p22, i0, None, None, None]
debug_merge_point(0, 0, '(let ([if10 (fit i5026 j5019)]) (if if10 (let ([SetBang1 (place i5026 j5019)]) (set! k5021 SetBang1) (let ([or-part5035 (trial CellRef(k5021))]) (let ([if11 (if or-part5035 or-part5035 (zero? CellRef(k5021)))]) (if if11 (let ([SetBang2 (+ *kount* 1)]) (set! *kount* SetBang2) (return #t)) (puzzle-remove i5026 j5019))))) (void)))')
debug_merge_point(0, 0, '(fit i5026 j5019)')
debug_merge_point(0, 0, '(let ([end (vector-ref *piecemax* i)]) (let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0)))')
debug_merge_point(0, 0, '(vector-ref *piecemax* i)')
+842: p64 = getfield_gc_r(ConstPtr(ptr63), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+846: guard_class(p64, 16623792, descr=<Guard0x3caeb18>) [p23, p22, i0, None, None, None]
+859: p67 = getfield_gc_r(ConstPtr(ptr66), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+863: i68 = getarrayitem_gc_i(p67, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0))')
debug_merge_point(0, 0, '(lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))')
debug_merge_point(0, 0, '(doloop4942 0)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 0)')
debug_merge_point(0, 0, '(> k end)')
+867: i70 = int_gt(0, i68)
+871: guard_false(i70, descr=<Guard0x3caeb60>) [p23, p22, i0, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+884: p72 = getfield_gc_r(ConstPtr(ptr71), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+888: guard_class(p72, 16622984, descr=<Guard0x3caeba8>) [p23, p22, i0, None, None, None]
+900: p75 = getfield_gc_r(ConstPtr(ptr74), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+904: p76 = getarrayitem_gc_r(p75, 0, descr=<ArrayP 8>)
+908: guard_class(p76, ConstClass(W_Vector), descr=<Guard0x3caebf0>) [p23, p22, i0, None, None, None]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+921: i78 = getfield_gc_i(p76, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+925: i79 = int_lt(0, i78)
+929: guard_true(i79, descr=<Guard0x3caec38>) [p23, p22, i0, None, None, None]
+935: p80 = getfield_gc_r(p76, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+939: guard_class(p80, 16622984, descr=<Guard0x3caec80>) [p23, p22, i0, None, None, None]
+951: p82 = getfield_gc_r(p76, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+955: p83 = getarrayitem_gc_r(p82, 0, descr=<ArrayP 8>)
+959: guard_class(p83, ConstClass(W_Bool), descr=<Guard0x3caecc8>) [p23, p22, i0, None, None, None]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+972: i86 = instance_ptr_eq(p83, ConstPtr(ptr85))
+975: guard_false(i86, descr=<Guard0x3caed10>) [p23, p22, i0, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
debug_merge_point(0, 0, '(+ j k)')
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+981: i88 = int_ge(i44, 0)
+985: guard_true(i88, descr=<Guard0x3caed58>) [p23, p22, i0, None, None, None]
+991: i90 = int_lt(i44, 512)
+998: guard_true(i90, descr=<Guard0x3caeda0>) [p23, p22, i0, None, None, None]
+1004: p91 = getarrayitem_gc_r(p15, i44, descr=<ArrayP 8>)
+1009: guard_class(p91, ConstClass(W_Bool), descr=<Guard0x3caede8>) [p23, p22, i0, None, None, None]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+1022: i94 = instance_ptr_eq(p91, ConstPtr(ptr93))
+1025: guard_true(i94, descr=<Guard0x3caee30>) [p23, p22, i0, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+1031: p95 = new_with_vtable(descr=<SizeDescr 48>)
+1078: p96 = new_with_vtable(descr=<SizeDescr 16>)
+1089: setfield_gc(p96, i68, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1093: p97 = new_with_vtable(descr=<SizeDescr 16>)
+1104: setfield_gc(p97, i44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1108: p98 = new_with_vtable(descr=<SizeDescr 40>)
+1119: p99 = new_with_vtable(descr=<SizeDescr 24>)
+1130: p100 = new_with_vtable(descr=<SizeDescr 48>)
+1149: setfield_gc(p100, ConstPtr(ptr101), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1161: setfield_gc(p100, ConstPtr(ptr102), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1166: p103 = new_with_vtable(descr=<SizeDescr 16>)
+1179: setfield_gc(p103, i44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1183: setfield_gc(p100, p103, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1188: p104 = new_with_vtable(descr=<SizeDescr 16>)
+1199: p105 = new_with_vtable(descr=<SizeDescr 16>)
+1211: setfield_gc(p105, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1219: setfield_gc(p104, p105, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1223: setfield_gc(p100, p104, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1228: p107 = new_with_vtable(descr=<SizeDescr 24>)
+1239: p108 = new_with_vtable(descr=<SizeDescr 40>)
+1251: setfield_gc(p108, p39, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1255: setfield_gc(p108, p37, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1259: setfield_gc(p108, p33, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1270: setfield_gc(p108, ConstPtr(ptr109), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1274: setfield_gc(p107, p108, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+1278: setfield_gc(p107, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+1286: setfield_gc(p100, p107, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1291: setfield_gc(p99, p100, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1295: setfield_gc(p99, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1303: p111 = new_with_vtable(descr=<SizeDescr 40>)
+1315: setfield_gc(p111, p39, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1320: setfield_gc(p111, p99, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1325: setfield_gc(p111, p108, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1337: setfield_gc(p111, ConstPtr(ptr112), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1414: i113 = getfield_gc_i(p96, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1418: i114 = arraylen_gc(p75, descr=<ArrayP 8>)
+1418: setfield_gc(p98, p39, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1422: setfield_gc(p95, ConstPtr(ptr115), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1433: setfield_gc(p98, ConstPtr(ptr116), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1437: setfield_gc(p98, p99, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1441: setfield_gc(p98, p111, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1452: setfield_gc(p95, ConstPtr(ptr117), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1456: setfield_gc(p95, p96, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1460: setfield_gc(p95, p97, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1471: setfield_gc(p95, ConstPtr(ptr118), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1475: jump(p95, 1, p98, p39, p96, i113, ConstPtr(ptr118), p75, 0, descr=TargetToken(61624336))
+1552: --end of the loop--
[3e4c086e1e578d8] jit-log-opt-bridge}
[3e4c086e353367d] {jit-backend
[3e4c086e35f3c53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086e35fe5d3] jit-backend-dump}
[3e4c086e360a0bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356779b4 +0  26000000
[3e4c086e360b6cb] jit-backend-dump}
[3e4c086e360f8aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677e35 +0  26000000
[3e4c086e3610794] jit-backend-dump}
[3e4c086e3613f4b] {jit-backend-addr
bridge out of Guard 0x3bfd028 has address 0x7fd8356779b0 to 0x7fd835677e30
       gc table: 0x7fd835677860
    jump target: 0x7fd8356779b0
         resops: 0x7fd8356779be
       failures: 0x7fd835677e30
            end: 0x7fd8356780da
[3e4c086e3616525] jit-backend-addr}
[3e4c086e3619f1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356779cf +0  D7040000
[3e4c086e361adda] jit-backend-dump}
[3e4c086e361e5ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356779e3 +0  DF040000
[3e4c086e361f318] jit-backend-dump}
[3e4c086e3622bb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356779f9 +0  E5040000
[3e4c086e36238ec] jit-backend-dump}
[3e4c086e3626d82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677a0a +0  F0040000
[3e4c086e3627ac8] jit-backend-dump}
[3e4c086e362b02b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677a21 +0  F5040000
[3e4c086e362bdab] jit-backend-dump}
[3e4c086e362f358] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677a2f +0  03050000
[3e4c086e36300aa] jit-backend-dump}
[3e4c086e3633580] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677a3d +0  11050000
[3e4c086e36342d9] jit-backend-dump}
[3e4c086e36377ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677a56 +0  14050000
[3e4c086e363854e] jit-backend-dump}
[3e4c086e363ba09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677a6a +0  1C050000
[3e4c086e363c73d] jit-backend-dump}
[3e4c086e363fcc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677a77 +0  2B050000
[3e4c086e36409d4] jit-backend-dump}
[3e4c086e3643ee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677a81 +0  3D050000
[3e4c086e3644c02] jit-backend-dump}
[3e4c086e364817b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677a95 +0  45050000
[3e4c086e3648e84] jit-backend-dump}
[3e4c086e364c3d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677aaa +0  4C050000
[3e4c086e364d10e] jit-backend-dump}
[3e4c086e3650668] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677ac1 +0  51050000
[3e4c086e36513ab] jit-backend-dump}
[3e4c086e36548f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677ae1 +0  4D050000
[3e4c086e3655636] jit-backend-dump}
[3e4c086e3658bb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677b00 +0  4A050000
[3e4c086e36598b1] jit-backend-dump}
[3e4c086e365cd7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677b16 +0  50050000
[3e4c086e365da9a] jit-backend-dump}
[3e4c086e3660fcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677b27 +0  5B050000
[3e4c086e3661cbf] jit-backend-dump}
[3e4c086e36651c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677b35 +0  69050000
[3e4c086e3665f13] jit-backend-dump}
[3e4c086e3669420] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835677dbe +0  FC020000
[3e4c086e366a120] jit-backend-dump}
[3e4c086e366d81a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566d576 +0  36A40000
[3e4c086e366e54e] jit-backend-dump}
[3e4c086e3672920] jit-backend}
[3e4c086e36767a6] {jit-log-opt-bridge
# bridge out of Guard 0x3bfd028 with 152 ops
[i0, p1, p2, p3]
+358: guard_not_invalidated(descr=<Guard0x3cc0020>) [i0, p1, p2, p3]
+358: i5 = int_gt(i0, 511)
+365: guard_true(i5, descr=<Guard0x3caee78>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))')
debug_merge_point(0, 0, '(void)')
+371: p6 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+382: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3caeec0>) [i0, p1, p2, p3]
+391: p8 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+395: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47)) from (void)')
+399: guard_class(p8, 16504944, descr=<Guard0x3caef08>) [i0, p1, p2, p3]
+413: p11 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+417: guard_class(p9, 16435208, descr=<Guard0x3caef50>) [i0, p1, p2, p3]
+430: p13 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+434: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3cc0080>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5123 1)')
+453: i15 = getfield_gc_i(p8, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+457: i17 = int_add_ovf(i15, 1)
+461: guard_no_overflow(descr=<Guard0x3caef98>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5121 AppRand47)')
+467: guard_class(p11, 16499664, descr=<Guard0x3caefe0>) [i0, p1, p2, p3]
+481: p19 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+486: guard_nonnull_class(p19, 16510992, descr=<Guard0x3cc00e0>) [i0, p1, p2, p3]
+506: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+517: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x3caf028>) [i0, p1, p2, p3]
+526: p23 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+530: i24 = instance_ptr_eq(p11, p23)
+533: guard_true(i24, descr=<Guard0x3caf070>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))) from (doloop5121 AppRand47)')
debug_merge_point(0, 0, '(> i5123 typemax)')
+539: i26 = int_gt(i17, 12)
+543: guard_true(i26, descr=<Guard0x3caf0b8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))')
debug_merge_point(0, 0, '(void)')
+549: p27 = getfield_gc_r(p9, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+560: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x3caf100>) [i0, p1, p2, p3]
+569: p29 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+573: p30 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+577: guard_class(p30, 16435208, descr=<Guard0x3caf148>) [i0, p1, p2, p3]
+590: p32 = getfield_gc_r(p30, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+594: guard_nonnull_class(p32, ConstClass(ForwardLink), descr=<Guard0x3cc0140>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(set! *iii* 0)')
+620: p35 = getfield_gc_r(ConstPtr(ptr34), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+625: guard_nonnull_class(p35, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc01a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(definePiece 0 3 1 0)')
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+652: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+656: setfield_gc(p35, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+664: guard_class(p38, 16622984, descr=<Guard0x3cc0200>) [p38, p30, p29, p32, None, None, None, None]
+676: p43 = getfield_gc_r(ConstPtr(ptr42), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+680: p44 = getarrayitem_gc_r(p43, 0, descr=<ArrayP 8>)
+685: guard_class(p44, ConstClass(W_Vector), descr=<Guard0x3caf190>) [p38, p30, p29, p32, None, None, None, None]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+698: p46 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+702: guard_class(p46, 16622984, descr=<Guard0x3caf1d8>) [p38, p30, p29, p32, None, None, None, None]
+715: i48 = getfield_gc_i(p44, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+719: i50 = int_lt(0, i48)
+723: guard_true(i50, descr=<Guard0x3caf220>) [p38, p30, p29, p32, None, None, None, None]
+729: p51 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+750: setarrayitem_gc(p51, 0, ConstPtr(ptr52), descr=<ArrayP 8>)
+754: p53 = new_with_vtable(descr=<SizeDescr 56>)
+798: p54 = new_with_vtable(descr=<SizeDescr 16>)
+809: p55 = new_with_vtable(descr=<SizeDescr 16>)
+820: setfield_gc(p55, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+828: setfield_gc(p54, p55, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+832: p56 = new_with_vtable(descr=<SizeDescr 40>)
+843: p57 = new_with_vtable(descr=<SizeDescr 24>)
+854: p58 = new_with_vtable(descr=<SizeDescr 56>)
+872: setfield_gc(p58, ConstPtr(ptr59), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+883: setfield_gc(p58, ConstPtr(ptr60), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+894: setfield_gc(p58, ConstPtr(ptr61), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+905: setfield_gc(p58, ConstPtr(ptr62), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+909: setfield_gc(p58, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+927: setfield_gc(p58, ConstPtr(ptr63), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+931: setfield_gc(p57, p58, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+935: setfield_gc(p57, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+943: p65 = new_with_vtable(descr=<SizeDescr 40>)
+962: setfield_gc(p65, p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+973: p66 = new_with_vtable(descr=<SizeDescr 24>)
+992: p67 = new_with_vtable(descr=<SizeDescr 56>)
+1011: setfield_gc(p67, ConstPtr(ptr59), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1029: setfield_gc(p67, ConstPtr(ptr68), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1033: setfield_gc(p67, ConstPtr(ptr61), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1044: setfield_gc(p67, ConstPtr(ptr69), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1048: setfield_gc(p67, ConstPtr(ptr62), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1052: setfield_gc(p67, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1063: setfield_gc(p66, p67, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1068: setfield_gc(p66, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1077: setfield_gc(p65, p66, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1081: p71 = new_with_vtable(descr=<SizeDescr 40>)
+1093: setfield_gc(p71, p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1098: p72 = new_with_vtable(descr=<SizeDescr 24>)
+1117: setfield_gc(p72, ConstPtr(ptr73), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1121: setfield_gc(p72, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1125: setfield_gc(p71, p72, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1130: p74 = new_with_vtable(descr=<SizeDescr 40>)
+1141: setfield_gc(p74, p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1145: setfield_gc(p74, p29, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1149: setfield_gc(p74, p30, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1160: setfield_gc(p74, ConstPtr(ptr75), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1164: setfield_gc(p71, p74, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1176: setfield_gc(p71, ConstPtr(ptr76), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1181: setfield_gc(p65, p71, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1192: setfield_gc(p65, ConstPtr(ptr77), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1289: p78 = getfield_gc_r(p54, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1300: setfield_gc(p56, ConstPtr(ptr79), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1304: setfield_gc(p56, p57, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1308: setfield_gc(p56, p65, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1312: setfield_gc(p53, ConstPtr(ptr59), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1317: setfield_gc(p56, p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1328: setfield_gc(p53, ConstPtr(ptr80), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1333: setfield_gc(p53, ConstPtr(ptr61), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1338: setfield_gc(p53, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1350: setfield_gc(p53, ConstPtr(ptr81), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1355: setfield_gc(p53, ConstPtr(ptr63), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1360: guard_nonnull_class(p78, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc0260>) [p56, p53, None, None, None, None, None, None, None]
+1378: i83 = arraylen_gc(p43, descr=<ArrayP 8>)
+1378: jump(p53, 1, p56, p32, ConstPtr(ptr61), 0, ConstPtr(ptr81), 0, ConstPtr(ptr63), 0, p54, p35, p78, p43, descr=TargetToken(62083248))
+1488: --end of the loop--
[3e4c086e36e6e71] jit-log-opt-bridge}
[3e4c086e437ef6f] {jit-backend
[3e4c086e441fac8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356781d
[3e4c086e442887a] jit-backend-dump}
[3e4c086e443477d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356782c4 +0  26000000
[3e4c086e4435ef1] jit-backend-dump}
[3e4c086e443a570] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678685 +0  26000000
[3e4c086e443b50b] jit-backend-dump}
[3e4c086e443eda2] {jit-backend-addr
bridge out of Guard 0x3bd5a60 has address 0x7fd8356782c0 to 0x7fd835678680
       gc table: 0x7fd8356781d0
    jump target: 0x7fd8356782c0
         resops: 0x7fd8356782ce
       failures: 0x7fd835678680
            end: 0x7fd835678830
[3e4c086e4441278] jit-backend-addr}
[3e4c086e4444c8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356782e2 +0  FA030000
[3e4c086e4445ac5] jit-backend-dump}
[3e4c086e444915a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356782f7 +0  01040000
[3e4c086e4449f33] jit-backend-dump}
[3e4c086e444d572] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567830f +0  05040000
[3e4c086e444e2cb] jit-backend-dump}
[3e4c086e4451a14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567832e +0  1E040000
[3e4c086e4452770] jit-backend-dump}
[3e4c086e4455cdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567833c +0  2C040000
[3e4c086e4456a4a] jit-backend-dump}
[3e4c086e4459f7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678346 +0  3E040000
[3e4c086e445acc2] jit-backend-dump}
[3e4c086e445e164] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567835d +0  43040000
[3e4c086e445eeaa] jit-backend-dump}
[3e4c086e4462432] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678373 +0  49040000
[3e4c086e4466223] jit-backend-dump}
[3e4c086e446a136] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678385 +0  53040000
[3e4c086e446af19] jit-backend-dump}
[3e4c086e446e494] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678393 +0  61040000
[3e4c086e446f236] jit-backend-dump}
[3e4c086e44727a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567860e +0  02020000
[3e4c086e4473516] jit-backend-dump}
[3e4c086e4476e46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ed1b +0  A1950000
[3e4c086e4477bab] jit-backend-dump}
[3e4c086e447bf58] jit-backend}
[3e4c086e447ffa4] {jit-log-opt-bridge
# bridge out of Guard 0x3bd5a60 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc02c0>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3caf268>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc0320>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 0 1 0 3)')
+323: guard_not_invalidated(descr=<Guard0x3caf2b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc0380>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3caf2f8>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3caf340>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3caf388>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3caf3d0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3caf418>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3caf460>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc03e0>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 3, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c086e44d7716] jit-log-opt-bridge}
[3e4c086e4792304] {jit-backend
[3e4c086e4802b9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678970 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C4202000048FF0425D01AC6034D85F60F84000000004D8B78204C8B2D06FFFFFF4D39EF0F85000000004D8B68104D8B781841813F480E00000F85000000004D8B4F084983F9017207418139900F00000F8500000000488B3DEAFEFFFF488B7718813EF0EE02000F8500000000488B7710488B3DDFFEFFFF4C8B571848C746100D00000048C746180300000048C746200100000048C746280100000041813AF0EE02000F8500000000488B7710488B7E104883FF000F8C00000000488B35ADFEFFFF4C8B4618418138C8EB02000F85000000004C8B4610498B7010813EF08C00000F85000000004C8B46084983F8000F8E000000004C8B4618418138C8EB02000F85000000004C8B4610498B7010813E88AD02000F85000000004C8B057EFEFFFF4C39C60F8400000000488B357EFEFFFF4C8B761841813EC8EB02000F85000000004C8B7610498BB658020000813E88AD02000F85000000004C39C60F8500000000488B0C25F091F900488D91A0000000483B14251092F9000F87EE00000048891425F091F90048C701B01E0100488D511848C70230B700004C8B152FFEFFFF4C8952084C8B152CFEFFFF4C8952104C8D523049C7026014000049897A084C895218488B3D16FEFFFF48897A20488B3D13FEFFFF48897A28498D7A1048C707201600004C8D573049C702B01E01004D896A0849C74210490000004C8957104C897F184C894F084889510848C7411001000000488B15D6FDFFFF4889572048C747280000000048898D300100004889BD3801000049BB00C76535D87F000041FFE30F1F800000000048C7442408FFFFFF0049BB40886735D87F00004C895D204D8D9BB01AFEFF41FFD3E998FDFFFF49BB60896735D87F00004C895D204D8D9B9021FEFF41FFD3E9FDFEFFFFFF3587FCFFFF49BB50886735D87F000041534D8D9BB017FEFF41FFE3FF3573FCFFFF49BB60886735D87F000041534D8D9BA017FEFF41FFE3FF3567FCFFFF49BB70886735D87F000041534D8D9B9017FEFF41FFE3FF3553FCFFFF49BB80886735D87F000041534D8D9B8017FEFF41FFE3FF353FFCFFFF49BB90886735D87F000041534D8D9B7017FEFF41FFE3FF3533FCFFFF49BBA0886735D87F000041534D8D9B6017FEFF41FFE3FF3527FCFFFF49BBB0886735D87F000041534D8D9B5017FEFF41FFE3FF3513FCFFFF49BBC0886735D87F000041534D8D9B4017FEFF41FFE3FF3507FCFFFF49BBD0886735D87F000041534D8D9B3017FEFF41FFE3FF35F3FBFFFF49BBE0886735D87F000041534D8D9B2017FEFF41FFE3FF35DFFBFFFF49BBF0886735D87F000041534D8D9B1017FEFF41FFE3FF35CBFBFFFF49BB00896735D87F000041534D8D9B0017FEFF41FFE3FF35B7FBFFFF49BB10896735D87F000041534D8D9BF016FEFF41FFE3FF35ABFBFFFF49BB20896735D87F000041534D8D9BE016FEFF41FFE3FF359FFBFFFF49BB30896735D87F000041534D8D9BD016FEFF41FFE3FF358BFBFFFF49BB40896735D87F000041534D8D9BC016FEFF41FFE3FF3577FBFFFF49BB50896735D87F000041534D8D9BB016FEFF41FFE3
[3e4c086e480add3] jit-backend-dump}
[3e4c086e48161f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678a54 +0  23000000
[3e4c086e4817760] jit-backend-dump}
[3e4c086e481ba00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678ca5 +0  23000000
[3e4c086e481c94e] jit-backend-dump}
[3e4c086e4820158] {jit-backend-addr
bridge out of Guard 0x3bd5a00 has address 0x7fd835678a50 to 0x7fd835678ca0
       gc table: 0x7fd835678970
    jump target: 0x7fd835678a50
         resops: 0x7fd835678a5e
       failures: 0x7fd835678ca0
            end: 0x7fd835678ebf
[3e4c086e4822653] jit-backend-addr}
[3e4c086e482607a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678a6b +0  74020000
[3e4c086e4826f11] jit-backend-dump}
[3e4c086e482a752] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678a7f +0  98020000
[3e4c086e482b4c0] jit-backend-dump}
[3e4c086e482ead7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678a94 +0  9F020000
[3e4c086e482f83f] jit-backend-dump}
[3e4c086e4832d96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678aab +0  A4020000
[3e4c086e4833aab] jit-backend-dump}
[3e4c086e4836e87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678ac2 +0  A9020000
[3e4c086e4837b84] jit-backend-dump}
[3e4c086e483af00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678afe +0  89020000
[3e4c086e483bc03] jit-backend-dump}
[3e4c086e483f059] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678b10 +0  93020000
[3e4c086e483fd6b] jit-backend-dump}
[3e4c086e4843122] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678b28 +0  97020000
[3e4c086e4843e2b] jit-backend-dump}
[3e4c086e48471c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678b3c +0  9F020000
[3e4c086e4847ec0] jit-backend-dump}
[3e4c086e484b2cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678b4a +0  AD020000
[3e4c086e484bff4] jit-backend-dump}
[3e4c086e484f3eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678b5b +0  B8020000
[3e4c086e48500f7] jit-backend-dump}
[3e4c086e4853553] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678b6f +0  C0020000
[3e4c086e48542ab] jit-backend-dump}
[3e4c086e48576f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678b7f +0  CC020000
[3e4c086e485840a] jit-backend-dump}
[3e4c086e485b86c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678b97 +0  D0020000
[3e4c086e485c5a6] jit-backend-dump}
[3e4c086e485f9b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678bae +0  D5020000
[3e4c086e48606c5] jit-backend-dump}
[3e4c086e4863a7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835678bb7 +0  E8020000
[3e4c086e4864791] jit-backend-dump}
[3e4c086e4867e35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566ecf8 +0  549D0000
[3e4c086e4868b4a] jit-backend-dump}
[3e4c086e486ce58] jit-backend}
[3e4c086e4870ca5] {jit-log-opt-bridge
# bridge out of Guard 0x3bd5a00 with 102 ops
[p0, i1, p2, p3]
+246: guard_true(i1, descr=<Guard0x3cc0440>) [p0, i1, p2, p3]
+255: guard_not_invalidated(descr=<Guard0x3caf4a8>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))')
debug_merge_point(0, 0, '(void)')
+255: p4 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+266: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3caf4f0>) [p0, i1, p2, p3]
+275: p6 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+279: p7 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+283: guard_class(p7, 16435208, descr=<Guard0x3caf538>) [p0, i1, p2, p3]
+296: p9 = getfield_gc_r(p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3cc04a0>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(vector-set! *piececount* 0 13)')
+326: p12 = getfield_gc_r(ConstPtr(ptr11), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+330: guard_class(p12, 16623792, descr=<Guard0x3caf580>) [p0, i1, p2, p3]
+342: p15 = getfield_gc_r(ConstPtr(ptr14), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(vector-set! *piececount* 1 3)')
debug_merge_point(0, 0, '(vector-set! *piececount* 2 1)')
debug_merge_point(0, 0, '(vector-set! *piececount* 3 1)')
debug_merge_point(0, 0, '(let ([AppRand48 (+ *d* 1)]) (let ([AppRand49 (* *d* AppRand48)]) (let ([m5139 (+ AppRand49 1)]) (let ([n5141 0][if21 (fit 0 m5139)]) (if if21 (let ([SetBang5 (place 0 m5139)]) (set! n5141 SetBang5)) (begin (newline) (display Error.))) (let ([if22 (trial CellRef(n5141))]) (if if22 *kount* #f))))))')
debug_merge_point(0, 0, '(+ *d* 1)')
debug_merge_point(0, 0, '(let ([AppRand49 (* *d* AppRand48)]) (let ([m5139 (+ AppRand49 1)]) (let ([n5141 0][if21 (fit 0 m5139)]) (if if21 (let ([SetBang5 (place 0 m5139)]) (set! n5141 SetBang5)) (begin (newline) (display Error.))) (let ([if22 (trial CellRef(n5141))]) (if if22 *kount* #f)))))')
debug_merge_point(0, 0, '(* *d* AppRand48)')
debug_merge_point(0, 0, '(let ([m5139 (+ AppRand49 1)]) (let ([n5141 0][if21 (fit 0 m5139)]) (if if21 (let ([SetBang5 (place 0 m5139)]) (set! n5141 SetBang5)) (begin (newline) (display Error.))) (let ([if22 (trial CellRef(n5141))]) (if if22 *kount* #f))))')
debug_merge_point(0, 0, '(+ AppRand49 1)')
debug_merge_point(0, 0, '(let ([n5141 0][if21 (fit 0 m5139)]) (if if21 (let ([SetBang5 (place 0 m5139)]) (set! n5141 SetBang5)) (begin (newline) (display Error.))) (let ([if22 (trial CellRef(n5141))]) (if if22 *kount* #f)))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(fit 0 m5139)')
debug_merge_point(0, 0, '(let ([end (vector-ref *piecemax* i)]) (let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0)))')
debug_merge_point(0, 0, '(vector-ref *piecemax* i)')
+353: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+357: setarrayitem_gc(p15, 0, 13, descr=<ArrayS 8>)
+365: setarrayitem_gc(p15, 1, 3, descr=<ArrayS 8>)
+373: setarrayitem_gc(p15, 2, 1, descr=<ArrayS 8>)
+381: setarrayitem_gc(p15, 3, 1, descr=<ArrayS 8>)
+389: guard_class(p17, 16623792, descr=<Guard0x3cc0500>) [p17, p6, p7, p9, None, None]
+402: p29 = getfield_gc_r(ConstPtr(ptr28), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+406: i31 = getarrayitem_gc_i(p29, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop4942 (lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))]) (doloop4942 0))')
debug_merge_point(0, 0, '(lambda (k) (let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))))')
debug_merge_point(0, 0, '(doloop4942 0)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 0)')
debug_merge_point(0, 0, '(> k end)')
+410: i33 = int_gt(0, i31)
+414: guard_false(i33, descr=<Guard0x3caf5c8>) [p17, p6, p7, p9, None, None]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)))')
debug_merge_point(0, 0, '(vector-ref *p* i)')
+427: p35 = getfield_gc_r(ConstPtr(ptr34), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+431: guard_class(p35, 16622984, descr=<Guard0x3caf610>) [p17, p6, p7, p9, None, None]
+444: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+448: p40 = getarrayitem_gc_r(p38, 0, descr=<ArrayP 8>)
+452: guard_class(p40, ConstClass(W_Vector), descr=<Guard0x3caf658>) [p17, p6, p7, p9, None, None]
debug_merge_point(0, 0, '(let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))')
debug_merge_point(0, 0, '(vector-ref AppRand7 k)')
+464: i42 = getfield_gc_i(p40, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+468: i43 = int_lt(0, i42)
+472: guard_true(i43, descr=<Guard0x3caf6a0>) [p17, p6, p7, p9, None, None]
+478: p44 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+482: guard_class(p44, 16622984, descr=<Guard0x3caf6e8>) [p17, p6, p7, p9, None, None]
+495: p46 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+499: p47 = getarrayitem_gc_r(p46, 0, descr=<ArrayP 8>)
+503: guard_class(p47, ConstClass(W_Bool), descr=<Guard0x3caf730>) [p17, p6, p7, p9, None, None]
debug_merge_point(0, 0, '(if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f)')
+522: i50 = instance_ptr_eq(p47, ConstPtr(ptr49))
+525: guard_false(i50, descr=<Guard0x3caf778>) [p17, p6, p7, p9, None, None]
debug_merge_point(0, 0, '(let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8))')
debug_merge_point(0, 0, '(+ j k)')
debug_merge_point(0, 0, '(vector-ref *puzzle* AppRand8)')
+538: p52 = getfield_gc_r(ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+542: guard_class(p52, 16622984, descr=<Guard0x3caf7c0>) [p17, p6, p7, p9, None, None]
+555: p55 = getfield_gc_r(ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+559: p57 = getarrayitem_gc_r(p55, 73, descr=<ArrayP 8>)
+566: guard_class(p57, ConstClass(W_Bool), descr=<Guard0x3caf808>) [p17, p6, p7, p9, None, None]
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
+578: i60 = instance_ptr_eq(p57, ConstPtr(ptr59))
+581: guard_true(i60, descr=<Guard0x3caf850>) [p17, p6, p7, p9, None, None]
debug_merge_point(0, 0, '(let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop4942 AppRand9)')
debug_merge_point(0, 0, '(let ([or-part (> k end)]) (let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))) from (doloop4942 AppRand9)')
+587: p61 = new_with_vtable(descr=<SizeDescr 24>)
+631: p62 = new_with_vtable(descr=<SizeDescr 48>)
+649: setfield_gc(p62, ConstPtr(ptr63), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+660: setfield_gc(p62, ConstPtr(ptr64), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+664: p65 = new_with_vtable(descr=<SizeDescr 16>)
+675: setfield_gc(p65, i31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+679: setfield_gc(p62, p65, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+690: setfield_gc(p62, ConstPtr(ptr66), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+701: setfield_gc(p62, ConstPtr(ptr67), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+705: p68 = new_with_vtable(descr=<SizeDescr 48>)
+716: p69 = new_with_vtable(descr=<SizeDescr 24>)
+727: setfield_gc(p69, p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+731: setfield_gc(p69, 73, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+739: setfield_gc(p68, p69, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+743: setfield_gc(p68, p7, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+747: setfield_gc(p68, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+751: setfield_gc(p61, p62, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+755: setfield_gc(p61, 1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+770: setfield_gc(p68, ConstPtr(ptr72), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+774: setfield_gc(p68, 0, descr=<FieldS pycket.small_list.LetContSize1Fixed.inst_vals_fixed_0 40 pure>)
+782: jump(p61, p68, descr=TargetToken(61624256))
+816: --end of the loop--
[3e4c086e48c49cc] jit-log-opt-bridge}
[3e4c086e54e2a38] {jit-backend
[3e4c086e558e083] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086e5598469] jit-backend-dump}
[3e4c086e55a3f43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679184 +0  23000000
[3e4c086e55a5704] jit-backend-dump}
[3e4c086e55a9917] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679545 +0  23000000
[3e4c086e55aa982] jit-backend-dump}
[3e4c086e55adf4d] {jit-backend-addr
bridge out of Guard 0x3c14380 has address 0x7fd835679180 to 0x7fd835679540
       gc table: 0x7fd835679060
    jump target: 0x7fd835679180
         resops: 0x7fd83567918e
       failures: 0x7fd835679540
            end: 0x7fd83567982d
[3e4c086e55b02ca] jit-backend-addr}
[3e4c086e55b6d80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567919e +0  07040000
[3e4c086e55b7d89] jit-backend-dump}
[3e4c086e55bbba5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356791b5 +0  0C040000
[3e4c086e55bc95f] jit-backend-dump}
[3e4c086e55c022a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356791c2 +0  37040000
[3e4c086e55c0fc6] jit-backend-dump}
[3e4c086e55c45d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356791d8 +0  3D040000
[3e4c086e55c533f] jit-backend-dump}
[3e4c086e55c88e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356791ec +0  45040000
[3e4c086e55c9635] jit-backend-dump}
[3e4c086e55ccca2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679203 +0  4A040000
[3e4c086e55cd9eb] jit-backend-dump}
[3e4c086e55d0e87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679210 +0  59040000
[3e4c086e55d1bef] jit-backend-dump}
[3e4c086e55d50a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679224 +0  61040000
[3e4c086e55d5de7] jit-backend-dump}
[3e4c086e55d9227] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567923e +0  63040000
[3e4c086e55d9f40] jit-backend-dump}
[3e4c086e55dd35b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679256 +0  67040000
[3e4c086e55de064] jit-backend-dump}
[3e4c086e55e14a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679264 +0  75040000
[3e4c086e55e21ba] jit-backend-dump}
[3e4c086e55e562b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567927f +0  76040000
[3e4c086e55e6365] jit-backend-dump}
[3e4c086e55e97b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679291 +0  80040000
[3e4c086e55ea4d0] jit-backend-dump}
[3e4c086e55ed932] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356792a8 +0  85040000
[3e4c086e55ee64e] jit-backend-dump}
[3e4c086e55f1a6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356792bc +0  8D040000
[3e4c086e55f2785] jit-backend-dump}
[3e4c086e55f5bb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356792ca +0  9B040000
[3e4c086e55f68c5] jit-backend-dump}
[3e4c086e55f9c82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356792da +0  A7040000
[3e4c086e55fa988] jit-backend-dump}
[3e4c086e55fde8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356792ee +0  AF040000
[3e4c086e55feb98] jit-backend-dump}
[3e4c086e56020d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356792fe +0  BB040000
[3e4c086e5602e35] jit-backend-dump}
[3e4c086e5606238] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679315 +0  C0040000
[3e4c086e5606fa0] jit-backend-dump}
[3e4c086e560a42d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567931f +0  D2040000
[3e4c086e560b182] jit-backend-dump}
[3e4c086e560e5e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567932c +0  E1040000
[3e4c086e560f328] jit-backend-dump}
[3e4c086e5612979] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83566f857 +0  25990000
[3e4c086e56136b9] jit-backend-dump}
[3e4c086e56178e8] jit-backend}
[3e4c086e561b9ae] {jit-log-opt-bridge
# bridge out of Guard 0x3c14380 with 131 ops
[p0, p1]
+310: guard_class(p1, 16437216, descr=<Guard0x3cc0560>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+326: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3cc05c0>) [p0, p1]
debug_merge_point(0, 0, '(> k end)')
+345: guard_not_invalidated(descr=<Guard0x3caf898>) [p0, p1]
+345: guard_class(p0, 16504944, descr=<Guard0x3caf8e0>) [p0, p1]
+358: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+362: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+366: guard_class(p7, 16478448, descr=<Guard0x3caf928>) [p0, p1]
+380: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+391: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3caf970>) [p0, p1]
+400: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+404: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3cc0620>) [p0, p1]
+423: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+427: i14 = int_gt(i6, i13)
+430: guard_true(i14, descr=<Guard0x3caf9b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))]) (if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand7 (vector-ref *p* i)]) (let ([if0 (vector-ref AppRand7 k)]) (if if0 (let ([AppRand8 (+ j k)]) (vector-ref *puzzle* AppRand8)) #f))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if1 (begin (void) (let ([if2 (> k end)]) (if if2 #t #f))) (let ([AppRand9 (+ k 1)]) (doloop4942 AppRand9)))')
debug_merge_point(0, 0, '(begin (void) (let ([if2 (> k end)]) (if if2 #t #f)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([if2 (> k end)]) (if if2 #t #f))')
+436: p15 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(> k end)')
debug_merge_point(0, 0, '(if if2 #t #f)')
debug_merge_point(0, 0, '#t')
+436: p16 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+447: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3cafa00>) [p0, p1]
+456: p18 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+460: i19 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.LetContSize1Fixed.inst_vals_fixed_0 40 pure>)
+464: p20 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+468: guard_class(p20, 16435208, descr=<Guard0x3cafa48>) [p0, p1]
+482: p22 = getfield_gc_r(p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+487: guard_nonnull_class(p22, ConstClass(ForwardLink), descr=<Guard0x3cc0680>) [p0, p1]
debug_merge_point(0, 0, '(if if21 (let ([SetBang5 (place 0 m5139)]) (set! n5141 SetBang5)) (begin (newline) (display Error.)))')
debug_merge_point(0, 0, '(let ([SetBang5 (place 0 m5139)]) (set! n5141 SetBang5))')
debug_merge_point(0, 0, '(place 0 m5139)')
+506: guard_class(p18, 16504944, descr=<Guard0x3cafa90>) [p0, p1]
+520: i25 = getfield_gc_i(p18, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+524: p26 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([end4963 (vector-ref *piecemax* i4959)]) (let ([doloop4966 (lambda (k4968) (let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))))]) (doloop4966 0) (let ([AppRand13 (vector-ref *class* i4959)][AppRand14 (vector-ref *class* i4959)]) (let ([AppRand15 (vector-ref *piececount* AppRand14)]) (let ([AppRand16 (- AppRand15 1)]) (vector-set! *piececount* AppRand13 AppRand16)))) (let ([doloop4981 (lambda (k4983) (let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))))]) (doloop4981 j4961))))')
debug_merge_point(0, 0, '(vector-ref *piecemax* i4959)')
+531: p28 = getfield_gc_r(ConstPtr(ptr27), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+535: guard_class(p28, 16623792, descr=<Guard0x3cafad8>) [p0, p1]
+547: p31 = getfield_gc_r(ConstPtr(ptr30), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+551: i33 = getarrayitem_gc_i(p31, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop4966 (lambda (k4968) (let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))))]) (doloop4966 0) (let ([AppRand13 (vector-ref *class* i4959)][AppRand14 (vector-ref *class* i4959)]) (let ([AppRand15 (vector-ref *piececount* AppRand14)]) (let ([AppRand16 (- AppRand15 1)]) (vector-set! *piececount* AppRand13 AppRand16)))) (let ([doloop4981 (lambda (k4983) (let ([or-part4985 (> k4983 size)]) (let ([if5 (if or-part4985 or-part4985 (let ([AppRand17 (vector-ref *puzzle* k4983)]) (not AppRand17)))]) (if if5 (begin (void) (let ([k4983 k4983][if6 (> k4983 size)]) (if if6 0 k4983))) (let ([AppRand18 (+ k4983 1)]) (doloop4981 AppRand18))))))]) (doloop4981 j4961)))')
debug_merge_point(0, 0, '(lambda (k4968) (let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))))')
debug_merge_point(0, 0, '(doloop4966 0)')
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 0)')
debug_merge_point(0, 0, '(> k4968 end4963)')
+555: i35 = int_gt(0, i33)
+559: guard_false(i35, descr=<Guard0x3cafb20>) [p0, p1]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12)))')
debug_merge_point(0, 0, '(vector-ref *p* i4959)')
+572: p37 = getfield_gc_r(ConstPtr(ptr36), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+576: guard_class(p37, 16622984, descr=<Guard0x3cafb68>) [p0, p1]
+588: p40 = getfield_gc_r(ConstPtr(ptr39), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+592: p42 = getarrayitem_gc_r(p40, 0, descr=<ArrayP 8>)
+596: guard_class(p42, ConstClass(W_Vector), descr=<Guard0x3cafbb0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void)))')
debug_merge_point(0, 0, '(vector-ref AppRand10 k4968)')
+608: i44 = getfield_gc_i(p42, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+612: i45 = int_lt(0, i44)
+616: guard_true(i45, descr=<Guard0x3cafbf8>) [p0, p1]
+622: p46 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+626: guard_class(p46, 16622984, descr=<Guard0x3cafc40>) [p0, p1]
+638: p48 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+642: p49 = getarrayitem_gc_r(p48, 0, descr=<ArrayP 8>)
+646: guard_class(p49, ConstClass(W_Bool), descr=<Guard0x3cafc88>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))')
+665: i52 = instance_ptr_eq(p49, ConstPtr(ptr51))
+668: guard_false(i52, descr=<Guard0x3cafcd0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t)')
debug_merge_point(0, 0, '(+ j4961 k4968)')
debug_merge_point(0, 0, '(vector-set! *puzzle* AppRand11 #t)')
+681: p54 = getfield_gc_r(ConstPtr(ptr53), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+685: guard_class(p54, 16622984, descr=<Guard0x3cafd18>) [p0, p1]
+697: i57 = int_ge(i25, 0)
+701: guard_true(i57, descr=<Guard0x3cafd60>) [p0, p1]
+707: i59 = int_lt(i25, 512)
+714: guard_true(i59, descr=<Guard0x3cafda8>) [p0, p1]
+720: p61 = getfield_gc_r(ConstPtr(ptr60), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+741: setarrayitem_gc(p61, i25, ConstPtr(ptr62), descr=<ArrayP 8>)
debug_merge_point(0, 0, '#t')
debug_merge_point(0, 0, '(let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))')
debug_merge_point(0, 0, '(+ k4968 1)')
debug_merge_point(0, 0, '(doloop4966 AppRand12)')
debug_merge_point(0, 0, '(let ([if3 (> k4968 end4963)]) (if if3 (void) (let ([AppRand10 (vector-ref *p* i4959)]) (let ([if4 (vector-ref AppRand10 k4968)]) (if if4 (let ([AppRand11 (+ j4961 k4968)]) (vector-set! *puzzle* AppRand11 #t) #t) (void))) (let ([AppRand12 (+ k4968 1)]) (doloop4966 AppRand12))))) from (doloop4966 AppRand12)')
+746: p63 = new_with_vtable(descr=<SizeDescr 48>)
+793: p64 = new_with_vtable(descr=<SizeDescr 16>)
+804: setfield_gc(p64, i33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+808: p65 = new_with_vtable(descr=<SizeDescr 16>)
+819: setfield_gc(p65, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+823: p66 = new_with_vtable(descr=<SizeDescr 40>)
+834: p67 = new_with_vtable(descr=<SizeDescr 32>)
+859: setfield_gc(p67, ConstPtr(ptr68), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+863: setfield_gc(p67, 0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+871: setfield_gc(p67, i25, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+875: p70 = new_with_vtable(descr=<SizeDescr 40>)
+886: setfield_gc(p70, p22, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+904: p71 = new_with_vtable(descr=<SizeDescr 32>)
+922: setfield_gc(p71, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+926: p72 = new_with_vtable(descr=<SizeDescr 16>)
+938: p73 = new_with_vtable(descr=<SizeDescr 16>)
+956: setfield_gc(p73, i19, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+960: setfield_gc(p72, p73, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+964: setfield_gc(p71, p72, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+968: setfield_gc(p71, ConstPtr(ptr74), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+972: setfield_gc(p70, p71, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+976: p75 = new_with_vtable(descr=<SizeDescr 40>)
+987: setfield_gc(p75, p22, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+991: setfield_gc(p75, p71, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+995: setfield_gc(p75, p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+999: setfield_gc(p75, ConstPtr(ptr76), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1003: setfield_gc(p70, p75, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1014: setfield_gc(p70, ConstPtr(ptr77), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1097: i78 = getfield_gc_i(p64, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1108: i79 = arraylen_gc(p40, descr=<ArrayP 8>)
+1108: setfield_gc(p66, p22, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1112: setfield_gc(p63, ConstPtr(ptr80), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1123: setfield_gc(p63, ConstPtr(ptr81), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1127: setfield_gc(p63, p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1131: setfield_gc(p66, p67, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1135: setfield_gc(p66, p70, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1146: setfield_gc(p63, ConstPtr(ptr82), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1150: setfield_gc(p63, p65, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1161: setfield_gc(p66, ConstPtr(ptr83), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1165: jump(p63, 1, p66, p22, p64, i78, ConstPtr(ptr82), p40, 0, descr=TargetToken(61624496))
+1248: --end of the loop--
[3e4c086e567b654] jit-log-opt-bridge}
[3e4c086e74e095c] {jit-backend
[3e4c086e7550d33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd
[3e4c086e7558f17] jit-backend-dump}
[3e4c086f6285072] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679a64 +0  21000000
[3e4c086f6286c2b] jit-backend-dump}
[3e4c086f628c138] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679c95 +0  21000000
[3e4c086f628d199] jit-backend-dump}
[3e4c086f6290599] {jit-backend-addr
bridge out of Guard 0x3c15070 has address 0x7fd835679a60 to 0x7fd835679c90
       gc table: 0x7fd835679980
    jump target: 0x7fd835679a60
         resops: 0x7fd835679a6e
       failures: 0x7fd835679c90
            end: 0x7fd835679ee8
[3e4c086f629297e] jit-backend-addr}
[3e4c086f6295d2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679a84 +0  68020000
[3e4c086f6296bf9] jit-backend-dump}
[3e4c086f6299e75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679a8d +0  7B020000
[3e4c086f629ac1d] jit-backend-dump}
[3e4c086f629dbe5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679a99 +0  8B020000
[3e4c086f629e94a] jit-backend-dump}
[3e4c086f62a198a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679aad +0  93020000
[3e4c086f62a26d9] jit-backend-dump}
[3e4c086f62a5832] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679ad0 +0  A8020000
[3e4c086f62a65b9] jit-backend-dump}
[3e4c086f62a970f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679ade +0  B6020000
[3e4c086f62aa480] jit-backend-dump}
[3e4c086f62ad577] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679af2 +0  BE020000
[3e4c086f62ae2e8] jit-backend-dump}
[3e4c086f62b1292] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679b06 +0  C6020000
[3e4c086f62b2028] jit-backend-dump}
[3e4c086f62b5076] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679b18 +0  D0020000
[3e4c086f62b5e00] jit-backend-dump}
[3e4c086f62b8efa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679b2f +0  D5020000
[3e4c086f62b9c90] jit-backend-dump}
[3e4c086f62bcca5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679b3d +0  E3020000
[3e4c086f62bda0d] jit-backend-dump}
[3e4c086f62c096d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679b51 +0  EB020000
[3e4c086f62c16d2] jit-backend-dump}
[3e4c086f62c46e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679b5e +0  FA020000
[3e4c086f62c544c] jit-backend-dump}
[3e4c086f62c8381] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679b6b +0  09030000
[3e4c086f62c90e3] jit-backend-dump}
[3e4c086f62cc040] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679b81 +0  0F030000
[3e4c086f62ccdc4] jit-backend-dump}
[3e4c086f62cfd80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679b8e +0  1E030000
[3e4c086f62d0ad2] jit-backend-dump}
[3e4c086f62d3ab6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835679baf +0  19030000
[3e4c086f62d4818] jit-backend-dump}
[3e4c086f62d79b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd835670c1a +0  428E0000
[3e4c086f62d875f] jit-backend-dump}
[3e4c086f62dc480] jit-backend}
[3e4c086f62e0051] {jit-log-opt-bridge
# bridge out of Guard 0x3c15070 with 77 ops
[p0, p1, p2, p3, p4]
+246: p5 = getfield_gc_r(p4, descr=<FieldP tuple2.item0 8 pure>)
+250: i6 = getfield_gc_i(p4, descr=<FieldU tuple2.item1 16 pure>)
+255: guard_isnull(p5, descr=<Guard0x3cc06e0>) [i6, p5, p0, p1, p2, p3]
+264: guard_false(i6, descr=<Guard0x3cafdf0>) [i6, p5, p0, p1, p2, p3]
+273: guard_class(p3, 16435920, descr=<Guard0x3cafe38>) [i6, p5, p0, p1, p2, p3]
+285: p8 = getfield_gc_r(p3, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+296: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3cafe80>) [i6, p5, p0, p1, p2, p3]
+305: p10 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+305: guard_not_invalidated(descr=<Guard0x3cafec8>) [i6, p5, p0, p1, p2, p3]
+305: p11 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if22 *kount* #f)')
debug_merge_point(0, 0, '*kount*')
+316: p13 = getfield_gc_r(ConstPtr(ptr12), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+320: guard_nonnull_class(p13, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc0740>) [i6, p5, p0, p1, p2, p3]
+340: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+340: guard_class(p11, 16435208, descr=<Guard0x3caff10>) [i6, p5, p0, p1, p2, p3]
+354: p17 = getfield_gc_r(p11, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+365: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3caff58>) [i6, p5, p0, p1, p2, p3]
+374: p19 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+378: p20 = getfield_gc_r(p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop5159 (add1 i5161)) from (return #t)')
+382: guard_class(p19, 16504944, descr=<Guard0x3caffa0>) [i6, p5, p0, p1, p2, p3]
+394: p22 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+398: guard_class(p22, 16499664, descr=<Guard0x3cd0020>) [i6, p5, p0, p1, p2, p3]
+412: p24 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+416: guard_nonnull_class(p24, 16510992, descr=<Guard0x3cc07a0>) [i6, p5, p0, p1, p2, p3]
+435: i26 = getfield_gc_i(p19, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+439: i28 = int_add_ovf(i26, 1)
+443: guard_no_overflow(descr=<Guard0x3cd0068>) [i6, p5, p0, p1, p2, p3]
+449: p29 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+460: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x3cd00b0>) [i6, p5, p0, p1, p2, p3]
+469: p31 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+473: i32 = instance_ptr_eq(p22, p31)
+476: guard_true(i32, descr=<Guard0x3cd00f8>) [i6, p5, p0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if24 (> i5161 puzzle-iters)]) (if if24 (begin (void) (void)) (begin (start) (doloop5159 (add1 i5161))))) from (doloop5159 (add1 i5161))')
+482: guard_class(p20, 16528368, descr=<Guard0x3cd0140>) [i6, p5, p0, p1, p2, p3]
+495: p34 = getfield_gc_r(p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+499: guard_nonnull_class(p34, ConstClass(ForwardLink), descr=<Guard0x3cc0800>) [i6, p5, p0, p1, p2, p3]
debug_merge_point(0, 0, '(> i5161 puzzle-iters)')
+517: i37 = int_gt(i28, 1000)
+524: guard_false(i37, descr=<Guard0x3cd0188>) [i6, p5, p0, p1, p2, p3]
debug_merge_point(0, 0, '(if if24 (begin (void) (void)) (begin (start) (doloop5159 (add1 i5161))))')
debug_merge_point(0, 0, '(begin (start) (doloop5159 (add1 i5161)))')
debug_merge_point(0, 0, '(start)')
+530: p38 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(set! *kount* 0)')
debug_merge_point(0, 0, '(let ([doloop5086 (lambda (m) (let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))))]) (doloop5086 0))')
debug_merge_point(0, 0, '(lambda (m) (let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))))')
debug_merge_point(0, 0, '(doloop5086 0)')
debug_merge_point(0, 0, '(let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))) from (doloop5086 0)')
debug_merge_point(0, 0, '(> m size)')
debug_merge_point(0, 0, '(if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))')
debug_merge_point(0, 0, '(begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37)))')
debug_merge_point(0, 0, '(vector-set! *puzzle* m #t)')
+537: p40 = getfield_gc_r(ConstPtr(ptr39), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+541: setfield_gc(p13, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+550: guard_class(p40, 16622984, descr=<Guard0x3cc0860>) [p40, i28, p22, p20, p34]
+563: p44 = getfield_gc_r(ConstPtr(ptr43), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))')
debug_merge_point(0, 0, '(+ m 1)')
debug_merge_point(0, 0, '(doloop5086 AppRand37)')
debug_merge_point(0, 0, '(let ([if15 (> m size)]) (if if15 (void) (begin (vector-set! *puzzle* m #t) (let ([AppRand37 (+ m 1)]) (doloop5086 AppRand37))))) from (doloop5086 AppRand37)')
+585: setarrayitem_gc(p44, 0, ConstPtr(ptr46), descr=<ArrayP 8>)
+589: p47 = new_with_vtable(descr=<SizeDescr 40>)
+630: p48 = new_with_vtable(descr=<SizeDescr 40>)
+641: setfield_gc(p48, p34, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+645: p49 = new_with_vtable(descr=<SizeDescr 24>)
+656: setfield_gc(p49, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+660: setfield_gc(p49, i28, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+664: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+668: setfield_gc(p48, p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+672: setfield_gc(p48, ConstPtr(ptr50), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+683: setfield_gc(p47, ConstPtr(ptr51), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+687: setfield_gc(p47, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+698: setfield_gc(p47, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+702: setfield_gc(p47, p34, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+720: jump(ConstPtr(ptr53), 1, p47, p34, p44, ConstPtr(ptr55), descr=TargetToken(61624016))
+784: --end of the loop--
[3e4c086f6329501] jit-log-opt-bridge}
[3e4c086f827afcc] {jit-backend
[3e4c086f82f82ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a0d
[3e4c086f8301c7c] jit-backend-dump}
[3e4c086f830d373] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a204 +0  26000000
[3e4c086f830ea58] jit-backend-dump}
[3e4c086f8312972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a4b5 +0  26000000
[3e4c086f8313a23] jit-backend-dump}
[3e4c086f8316d9f] {jit-backend-addr
bridge out of Guard 0x3c2c698 has address 0x7fd83567a200 to 0x7fd83567a4b0
       gc table: 0x7fd83567a0d0
    jump target: 0x7fd83567a200
         resops: 0x7fd83567a20e
       failures: 0x7fd83567a4b0
            end: 0x7fd83567a804
[3e4c086f83194ac] jit-backend-addr}
[3e4c086f831cea2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a21c +0  0C030000
[3e4c086f831de71] jit-backend-dump}
[3e4c086f8321154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a230 +0  14030000
[3e4c086f8321ede] jit-backend-dump}
[3e4c086f8324f39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a246 +0  1A030000
[3e4c086f8325c67] jit-backend-dump}
[3e4c086f8328cda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a257 +0  25030000
[3e4c086f83299f9] jit-backend-dump}
[3e4c086f832c9e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a26e +0  2A030000
[3e4c086f832d6fe] jit-backend-dump}
[3e4c086f83306a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a27c +0  38030000
[3e4c086f83313d0] jit-backend-dump}
[3e4c086f83343bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a28a +0  46030000
[3e4c086f83350db] jit-backend-dump}
[3e4c086f8338076] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a29f +0  4D030000
[3e4c086f8338d94] jit-backend-dump}
[3e4c086f833bd81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a2a9 +0  5F030000
[3e4c086f833caa9] jit-backend-dump}
[3e4c086f833faca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a2bd +0  67030000
[3e4c086f83407ef] jit-backend-dump}
[3e4c086f83437dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a2d3 +0  6D030000
[3e4c086f8344534] jit-backend-dump}
[3e4c086f8347580] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a2e5 +0  77030000
[3e4c086f8348292] jit-backend-dump}
[3e4c086f834b2ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a2fd +0  7B030000
[3e4c086f834c00c] jit-backend-dump}
[3e4c086f834f01b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a30c +0  88030000
[3e4c086f834fd3c] jit-backend-dump}
[3e4c086f8352daa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a319 +0  97030000
[3e4c086f8353adb] jit-backend-dump}
[3e4c086f8356aa3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a331 +0  9B030000
[3e4c086f83577e9] jit-backend-dump}
[3e4c086f835a7c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a346 +0  A2030000
[3e4c086f835b4dc] jit-backend-dump}
[3e4c086f835e486] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a354 +0  B0030000
[3e4c086f835f195] jit-backend-dump}
[3e4c086f8362154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a35e +0  C2030000
[3e4c086f8362e79] jit-backend-dump}
[3e4c086f8365e4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a372 +0  CA030000
[3e4c086f8366b6c] jit-backend-dump}
[3e4c086f8369b44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a388 +0  D0030000
[3e4c086f836a856] jit-backend-dump}
[3e4c086f836d806] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a39f +0  D5030000
[3e4c086f836e515] jit-backend-dump}
[3e4c086f83714fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a3b8 +0  D8030000
[3e4c086f8372214] jit-backend-dump}
[3e4c086f83751d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a3ce +0  DE030000
[3e4c086f8375eec] jit-backend-dump}
[3e4c086f8378ebd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a3df +0  E9030000
[3e4c086f8379be5] jit-backend-dump}
[3e4c086f838099b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a3ed +0  F7030000
[3e4c086f8381897] jit-backend-dump}
[3e4c086f8384ea2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356732e9 +0  136F0000
[3e4c086f8385c63] jit-backend-dump}
[3e4c086f8389cba] jit-backend}
[3e4c086f838d908] {jit-log-opt-bridge
# bridge out of Guard 0x3c2c698 with 108 ops
[i0, p1, p2, p3]
+326: guard_not_invalidated(descr=<Guard0x3cc08c0>) [i0, p1, p2, p3]
+326: i5 = int_gt(i0, 5)
+330: guard_true(i5, descr=<Guard0x3cd0218>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))')
debug_merge_point(0, 0, '(void)')
+336: p6 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+347: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3cd0260>) [i0, p1, p2, p3]
+356: p8 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+360: p9 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43)) from (void)')
+364: guard_class(p8, 16504944, descr=<Guard0x3cd02a8>) [i0, p1, p2, p3]
+378: p11 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+382: guard_class(p9, 16435208, descr=<Guard0x3cd02f0>) [i0, p1, p2, p3]
+395: p13 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+399: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3cc0920>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ j5101 1)')
+418: i15 = getfield_gc_i(p8, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+422: i17 = int_add_ovf(i15, 1)
+426: guard_no_overflow(descr=<Guard0x3cd0338>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5099 AppRand43)')
+432: guard_class(p11, 16482960, descr=<Guard0x3cd0380>) [i0, p1, p2, p3]
+446: p19 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+458: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3cd03c8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))) from (doloop5099 AppRand43)')
debug_merge_point(0, 0, '(> j5101 5)')
+467: i22 = int_gt(i17, 5)
+471: guard_true(i22, descr=<Guard0x3cd0410>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))')
debug_merge_point(0, 0, '(void)')
+477: p23 = getfield_gc_r(p9, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+488: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x3cd0458>) [i0, p1, p2, p3]
+497: p25 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+501: p26 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44)) from (void)')
+505: guard_class(p25, 16504944, descr=<Guard0x3cd04a0>) [i0, p1, p2, p3]
+519: p28 = getfield_gc_r(p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+524: guard_class(p26, 16435208, descr=<Guard0x3cd04e8>) [i0, p1, p2, p3]
+537: p30 = getfield_gc_r(p26, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+541: guard_nonnull_class(p30, ConstClass(ForwardLink), descr=<Guard0x3cc0980>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5096 1)')
+561: i32 = getfield_gc_i(p25, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+566: i34 = int_add_ovf(i32, 1)
+570: guard_no_overflow(descr=<Guard0x3cd0530>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5094 AppRand44)')
+576: guard_class(p28, 16499664, descr=<Guard0x3cd0578>) [i0, p1, p2, p3]
+589: p36 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+593: guard_nonnull_class(p36, 16510992, descr=<Guard0x3cc09e0>) [i0, p1, p2, p3]
+613: p38 = getfield_gc_r(p36, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+625: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x3cd05c0>) [i0, p1, p2, p3]
+634: p40 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+639: i41 = instance_ptr_eq(p28, p40)
+642: guard_true(i41, descr=<Guard0x3cd0608>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if16 (> i5096 5)]) (if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))) from (doloop5094 AppRand44)')
debug_merge_point(0, 0, '(> i5096 5)')
+648: i43 = int_gt(i34, 5)
+652: guard_true(i43, descr=<Guard0x3cd0650>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if16 (void) (let ([doloop5099 (lambda (j5101) (let ([if17 (> j5101 5)]) (if if17 (void) (let ([doloop5104 (lambda (k5106) (let ([if18 (> k5106 5)]) (if if18 (void) (let ([AppRand38 (* *d* k5106)]) (let ([AppRand39 (+ j5101 AppRand38)]) (let ([AppRand40 (* *d* AppRand39)]) (let ([AppRand41 (+ i5096 AppRand40)]) (vector-set! *puzzle* AppRand41 #f)))) (let ([AppRand42 (+ k5106 1)]) (doloop5104 AppRand42))))))]) (doloop5104 1) (let ([AppRand43 (+ j5101 1)]) (doloop5099 AppRand43))))))]) (doloop5099 1) (let ([AppRand44 (+ i5096 1)]) (doloop5094 AppRand44))))')
debug_merge_point(0, 0, '(void)')
+658: p44 = getfield_gc_r(p26, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+669: guard_value(p44, ConstPtr(ptr45), descr=<Guard0x3cd0698>) [i0, p1, p2, p3]
+678: p46 = getfield_gc_r(p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+682: p47 = getfield_gc_r(p26, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+686: guard_class(p47, 16435208, descr=<Guard0x3cd06e0>) [i0, p1, p2, p3]
+700: p49 = getfield_gc_r(p47, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+704: guard_nonnull_class(p49, ConstClass(ForwardLink), descr=<Guard0x3cc0a40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([doloop5121 (lambda (i5123) (let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))))]) (doloop5121 0))')
debug_merge_point(0, 0, '(lambda (i5123) (let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))))')
debug_merge_point(0, 0, '(doloop5121 0)')
debug_merge_point(0, 0, '(let ([if19 (> i5123 typemax)]) (if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))) from (doloop5121 0)')
debug_merge_point(0, 0, '(> i5123 typemax)')
debug_merge_point(0, 0, '(if if19 (void) (let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47))))')
debug_merge_point(0, 0, '(let ([doloop5126 (lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))]) (doloop5126 0) (let ([AppRand47 (+ i5123 1)]) (doloop5121 AppRand47)))')
debug_merge_point(0, 0, '(lambda (m5128) (let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))))')
debug_merge_point(0, 0, '(doloop5126 0)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 0)')
debug_merge_point(0, 0, '(> m5128 size)')
debug_merge_point(0, 0, '(if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))')
debug_merge_point(0, 0, '(let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46)))')
debug_merge_point(0, 0, '(vector-ref *p* i5123)')
+730: p52 = getfield_gc_r(ConstPtr(ptr51), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+734: guard_class(p52, 16622984, descr=<Guard0x3cd0728>) [i0, p1, p2, p3]
+748: p55 = getfield_gc_r(ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+752: p57 = getarrayitem_gc_r(p55, 0, descr=<ArrayP 8>)
+757: guard_class(p57, ConstClass(W_Vector), descr=<Guard0x3cd0770>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! AppRand45 m5128 #f)')
+770: p59 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+774: guard_class(p59, 16622984, descr=<Guard0x3cd07b8>) [i0, p1, p2, p3]
+787: i61 = getfield_gc_i(p57, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+791: i63 = int_lt(0, i61)
+795: guard_true(i63, descr=<Guard0x3cd0800>) [i0, p1, p2, p3]
+801: p64 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))')
debug_merge_point(0, 0, '(+ m5128 1)')
debug_merge_point(0, 0, '(doloop5126 AppRand46)')
debug_merge_point(0, 0, '(let ([if20 (> m5128 size)]) (if if20 (void) (let ([AppRand45 (vector-ref *p* i5123)]) (vector-set! AppRand45 m5128 #f) (let ([AppRand46 (+ m5128 1)]) (doloop5126 AppRand46))))) from (doloop5126 AppRand46)')
+823: setarrayitem_gc(p64, 0, ConstPtr(ptr65), descr=<ArrayP 8>)
+827: p66 = new_with_vtable(descr=<SizeDescr 40>)
+868: p67 = new_with_vtable(descr=<SizeDescr 40>)
+879: setfield_gc(p67, p49, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+883: setfield_gc(p67, p46, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+887: setfield_gc(p67, p47, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+898: setfield_gc(p67, ConstPtr(ptr68), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+902: i69 = arraylen_gc(p55, descr=<ArrayP 8>)
+909: setfield_gc(p66, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+920: setfield_gc(p66, ConstPtr(ptr71), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+924: setfield_gc(p66, p67, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+928: setfield_gc(p66, p49, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+939: jump(ConstPtr(ptr72), 1, p66, p49, p55, 0, descr=TargetToken(61624176))
+992: --end of the loop--
[3e4c086f83e6a22] jit-log-opt-bridge}
[3e4c08713c60598] {jit-backend
[3e4c08713d019c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a8f
[3e4c08713d0a53f] jit-backend-dump}
[3e4c08713d16328] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567a9e4 +0  26000000
[3e4c08713d178cb] jit-backend-dump}
[3e4c08713d1b976] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ada5 +0  26000000
[3e4c08713d1c8f8] jit-backend-dump}
[3e4c08713d1fc47] {jit-backend-addr
bridge out of Guard 0x3cc02c0 has address 0x7fd83567a9e0 to 0x7fd83567ada0
       gc table: 0x7fd83567a8f0
    jump target: 0x7fd83567a9e0
         resops: 0x7fd83567a9ee
       failures: 0x7fd83567ada0
            end: 0x7fd83567af50
[3e4c08713d22218] jit-backend-addr}
[3e4c08713d256c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aa02 +0  FA030000
[3e4c08713d26594] jit-backend-dump}
[3e4c08713d29749] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aa17 +0  01040000
[3e4c08713d2a531] jit-backend-dump}
[3e4c08713d2d7d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aa2f +0  05040000
[3e4c08713d2e595] jit-backend-dump}
[3e4c08713d31952] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aa4e +0  1E040000
[3e4c08713d326b1] jit-backend-dump}
[3e4c08713d3586c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aa5c +0  2C040000
[3e4c08713d365af] jit-backend-dump}
[3e4c08713d3968a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aa66 +0  3E040000
[3e4c08713d3a3da] jit-backend-dump}
[3e4c08713d3d4a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aa7d +0  43040000
[3e4c08713d3e1f0] jit-backend-dump}
[3e4c08713d412c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aa93 +0  49040000
[3e4c08713d42024] jit-backend-dump}
[3e4c08713d45174] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aaa5 +0  53040000
[3e4c08713d45ec3] jit-backend-dump}
[3e4c08713d48f37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aab3 +0  61040000
[3e4c08713d49c92] jit-backend-dump}
[3e4c08713d4cdae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ad2e +0  02020000
[3e4c08713d4dafe] jit-backend-dump}
[3e4c08713d50e2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd8356782e2 +0  FA260000
[3e4c08713d51b99] jit-backend-dump}
[3e4c08713d55a38] jit-backend}
[3e4c08713d5961e] {jit-log-opt-bridge
# bridge out of Guard 0x3cc02c0 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc0aa0>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd0848>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc0b00>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 0 0 3 1)')
+323: guard_not_invalidated(descr=<Guard0x3cd0890>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc0b60>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd08d8>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd0920>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd0968>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd09b0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd09f8>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd0a40>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc0bc0>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 1, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c08713daec9c] jit-log-opt-bridge}
[3e4c087325c1d6e] {jit-backend
[3e4c087326668b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b
[3e4c0873266f3de] jit-backend-dump}
[3e4c0873267b269] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b134 +0  26000000
[3e4c0873267c77d] jit-backend-dump}
[3e4c087326805df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b4f5 +0  26000000
[3e4c0873268165f] jit-backend-dump}
[3e4c08732684898] {jit-backend-addr
bridge out of Guard 0x3cc0aa0 has address 0x7fd83567b130 to 0x7fd83567b4f0
       gc table: 0x7fd83567b040
    jump target: 0x7fd83567b130
         resops: 0x7fd83567b13e
       failures: 0x7fd83567b4f0
            end: 0x7fd83567b6a0
[3e4c08732686e44] jit-backend-addr}
[3e4c0873268a400] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b152 +0  FA030000
[3e4c0873268b30b] jit-backend-dump}
[3e4c0873268e4ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b167 +0  01040000
[3e4c0873268f2ae] jit-backend-dump}
[3e4c08732692374] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b17f +0  05040000
[3e4c087326930c4] jit-backend-dump}
[3e4c08732696706] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b19e +0  1E040000
[3e4c087326974a5] jit-backend-dump}
[3e4c0873269a5e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b1ac +0  2C040000
[3e4c0873269b332] jit-backend-dump}
[3e4c0873269e3b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b1b6 +0  3E040000
[3e4c0873269f116] jit-backend-dump}
[3e4c087326a2214] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b1cd +0  43040000
[3e4c087326a2f6c] jit-backend-dump}
[3e4c087326a6032] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b1e3 +0  49040000
[3e4c087326a6d57] jit-backend-dump}
[3e4c087326a9eb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b1f5 +0  53040000
[3e4c087326aac15] jit-backend-dump}
[3e4c087326ade78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b203 +0  61040000
[3e4c087326aebcb] jit-backend-dump}
[3e4c087326b1cd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b47e +0  02020000
[3e4c087326b2a36] jit-backend-dump}
[3e4c087326b5cef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567aa02 +0  2A070000
[3e4c087326b6a3b] jit-backend-dump}
[3e4c087326ba9d8] jit-backend}
[3e4c087326be474] {jit-log-opt-bridge
# bridge out of Guard 0x3cc0aa0 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc0c20>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd0a88>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc0c80>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 0 1 3 0)')
+323: guard_not_invalidated(descr=<Guard0x3cd0ad0>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc0ce0>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd0b18>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd0b60>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd0ba8>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd0bf0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd0c38>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd0c80>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc0d40>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 0, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c08732712bdb] jit-log-opt-bridge}
[3e4c08750f3ea06] {jit-backend
[3e4c08750fe225f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b
[3e4c08750feb28a] jit-backend-dump}
[3e4c08750ff72bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b884 +0  26000000
[3e4c08750ff885c] jit-backend-dump}
[3e4c08750ffca07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567bc45 +0  26000000
[3e4c08750ffda91] jit-backend-dump}
[3e4c08751000e57] {jit-backend-addr
bridge out of Guard 0x3cc0c20 has address 0x7fd83567b880 to 0x7fd83567bc40
       gc table: 0x7fd83567b790
    jump target: 0x7fd83567b880
         resops: 0x7fd83567b88e
       failures: 0x7fd83567bc40
            end: 0x7fd83567bdf0
[3e4c0875100355d] jit-backend-addr}
[3e4c0875100685c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b8a2 +0  FA030000
[3e4c0875100771a] jit-backend-dump}
[3e4c0875100a990] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b8b7 +0  01040000
[3e4c0875100b735] jit-backend-dump}
[3e4c0875100e8bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b8cf +0  05040000
[3e4c0875100f5cb] jit-backend-dump}
[3e4c08751012853] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b8ee +0  1E040000
[3e4c0875101357b] jit-backend-dump}
[3e4c08751016684] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b8fc +0  2C040000
[3e4c087510173a6] jit-backend-dump}
[3e4c0875101a3a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b906 +0  3E040000
[3e4c0875101b0ae] jit-backend-dump}
[3e4c0875101e22c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b91d +0  43040000
[3e4c0875101efc2] jit-backend-dump}
[3e4c08751022243] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b933 +0  49040000
[3e4c08751022f8d] jit-backend-dump}
[3e4c0875102610a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b945 +0  53040000
[3e4c08751026e97] jit-backend-dump}
[3e4c08751029eda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b953 +0  61040000
[3e4c0875102ac08] jit-backend-dump}
[3e4c0875102dcaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567bbce +0  02020000
[3e4c0875102e9e6] jit-backend-dump}
[3e4c08751031dd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b152 +0  2A070000
[3e4c08751032af2] jit-backend-dump}
[3e4c08751036a0c] jit-backend}
[3e4c0875103a4fa] {jit-log-opt-bridge
# bridge out of Guard 0x3cc0c20 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc0da0>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd0cc8>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc0e00>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 0 3 0 1)')
+323: guard_not_invalidated(descr=<Guard0x3cd0d10>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc0e60>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd0d58>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd0da0>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd0de8>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd0e30>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd0e78>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd0ec0>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc0ec0>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 1, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c08751090e35] jit-log-opt-bridge}
[3e4c0877016aac6] {jit-backend
[3e4c0877021bb70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567bee
[3e4c08770224950] jit-backend-dump}
[3e4c087702307c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567bfd4 +0  26000000
[3e4c08770231e12] jit-backend-dump}
[3e4c08770235e29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c395 +0  26000000
[3e4c08770236db8] jit-backend-dump}
[3e4c0877023a33c] {jit-backend-addr
bridge out of Guard 0x3cc0da0 has address 0x7fd83567bfd0 to 0x7fd83567c390
       gc table: 0x7fd83567bee0
    jump target: 0x7fd83567bfd0
         resops: 0x7fd83567bfde
       failures: 0x7fd83567c390
            end: 0x7fd83567c540
[3e4c0877023c9b9] jit-backend-addr}
[3e4c0877023ff3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567bff2 +0  FA030000
[3e4c08770240df6] jit-backend-dump}
[3e4c0877024422a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c007 +0  01040000
[3e4c08770244fb3] jit-backend-dump}
[3e4c08770248361] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c01f +0  05040000
[3e4c08770249098] jit-backend-dump}
[3e4c0877024c3af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c03e +0  1E040000
[3e4c0877024d0f0] jit-backend-dump}
[3e4c0877025036e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c04c +0  2C040000
[3e4c087702510d6] jit-backend-dump}
[3e4c0877025430b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c056 +0  3E040000
[3e4c0877025508f] jit-backend-dump}
[3e4c08770258307] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c06d +0  43040000
[3e4c08770259054] jit-backend-dump}
[3e4c0877025c215] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c083 +0  49040000
[3e4c0877025cfab] jit-backend-dump}
[3e4c0877026024b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c095 +0  53040000
[3e4c08770260f8b] jit-backend-dump}
[3e4c08770264155] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c0a3 +0  61040000
[3e4c08770264ec0] jit-backend-dump}
[3e4c087702680e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c31e +0  02020000
[3e4c08770268e17] jit-backend-dump}
[3e4c0877026c257] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567b8a2 +0  2A070000
[3e4c0877026d01b] jit-backend-dump}
[3e4c08770271017] jit-backend}
[3e4c08770274c6b] {jit-log-opt-bridge
# bridge out of Guard 0x3cc0da0 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc0f80>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd0f08>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc0fe0>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 0 0 1 3)')
+323: guard_not_invalidated(descr=<Guard0x3cd0f50>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc1040>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd0f98>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd0fe0>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd1028>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd1070>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd10b8>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd1100>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc10a0>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 3, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c087702ced8e] jit-log-opt-bridge}
[3e4c0878e07d37f] {jit-backend
[3e4c0878e121fee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c
[3e4c0878e12ab43] jit-backend-dump}
[3e4c0878e1363bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c724 +0  26000000
[3e4c0878e137904] jit-backend-dump}
[3e4c0878e13b6ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cae5 +0  26000000
[3e4c0878e13c680] jit-backend-dump}
[3e4c0878e13fae8] {jit-backend-addr
bridge out of Guard 0x3cc0f80 has address 0x7fd83567c720 to 0x7fd83567cae0
       gc table: 0x7fd83567c630
    jump target: 0x7fd83567c720
         resops: 0x7fd83567c72e
       failures: 0x7fd83567cae0
            end: 0x7fd83567cc90
[3e4c0878e14208e] jit-backend-addr}
[3e4c0878e1454f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c742 +0  FA030000
[3e4c0878e146396] jit-backend-dump}
[3e4c0878e1496d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c757 +0  01040000
[3e4c0878e14a4a6] jit-backend-dump}
[3e4c0878e14d654] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c76f +0  05040000
[3e4c0878e14e3c2] jit-backend-dump}
[3e4c0878e1518f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c78e +0  1E040000
[3e4c0878e152650] jit-backend-dump}
[3e4c0878e155775] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c79c +0  2C040000
[3e4c0878e1564da] jit-backend-dump}
[3e4c0878e15964e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c7a6 +0  3E040000
[3e4c0878e15a3b3] jit-backend-dump}
[3e4c0878e15d550] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c7bd +0  43040000
[3e4c0878e15e29f] jit-backend-dump}
[3e4c0878e161417] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c7d3 +0  49040000
[3e4c0878e162160] jit-backend-dump}
[3e4c0878e1652bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c7e5 +0  53040000
[3e4c0878e166012] jit-backend-dump}
[3e4c0878e169186] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c7f3 +0  61040000
[3e4c0878e169f47] jit-backend-dump}
[3e4c0878e16d117] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ca6e +0  02020000
[3e4c0878e16de57] jit-backend-dump}
[3e4c0878e171267] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567bff2 +0  2A070000
[3e4c0878e171fb6] jit-backend-dump}
[3e4c0878e175dc0] jit-backend}
[3e4c0878e179791] {jit-log-opt-bridge
# bridge out of Guard 0x3cc0f80 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc1100>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd1148>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc1160>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 1 2 0 0)')
+323: guard_not_invalidated(descr=<Guard0x3cd1190>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc11c0>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd11d8>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd1220>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd1268>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd12b0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd12f8>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd1340>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc1220>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 0, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c0878e1d0629] jit-log-opt-bridge}
[3e4c087adaf0d73] {jit-backend
[3e4c087adba0f11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cd
[3e4c087adba9d07] jit-backend-dump}
[3e4c087adbb5a54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ce74 +0  26000000
[3e4c087adbb70e0] jit-backend-dump}
[3e4c087adbbaf67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d235 +0  26000000
[3e4c087adbbbe72] jit-backend-dump}
[3e4c087adbbf196] {jit-backend-addr
bridge out of Guard 0x3cc1100 has address 0x7fd83567ce70 to 0x7fd83567d230
       gc table: 0x7fd83567cd80
    jump target: 0x7fd83567ce70
         resops: 0x7fd83567ce7e
       failures: 0x7fd83567d230
            end: 0x7fd83567d3e0
[3e4c087adbc1776] jit-backend-addr}
[3e4c087adbc4e3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ce92 +0  FA030000
[3e4c087adbc5c8c] jit-backend-dump}
[3e4c087adbc8f85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cea7 +0  01040000
[3e4c087adbc9ce4] jit-backend-dump}
[3e4c087adbccf56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cebf +0  05040000
[3e4c087adbcdcbb] jit-backend-dump}
[3e4c087adbd1087] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cede +0  1E040000
[3e4c087adbd1e51] jit-backend-dump}
[3e4c087adbd50fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ceec +0  2C040000
[3e4c087adbd5e81] jit-backend-dump}
[3e4c087adbd8fe3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cef6 +0  3E040000
[3e4c087adbd9d61] jit-backend-dump}
[3e4c087adbdcf2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cf0d +0  43040000
[3e4c087adbddc9c] jit-backend-dump}
[3e4c087adbe0e07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cf23 +0  49040000
[3e4c087adbe1b94] jit-backend-dump}
[3e4c087adbe4e13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cf35 +0  53040000
[3e4c087adbe5b8a] jit-backend-dump}
[3e4c087adbe8d29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567cf43 +0  61040000
[3e4c087adbe9a88] jit-backend-dump}
[3e4c087adbecc6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d1be +0  02020000
[3e4c087adbed9c0] jit-backend-dump}
[3e4c087adbf0d43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567c742 +0  2A070000
[3e4c087adbf1aba] jit-backend-dump}
[3e4c087adbf5a4b] jit-backend}
[3e4c087adbf95c0] {jit-log-opt-bridge
# bridge out of Guard 0x3cc1100 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc1280>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd1388>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc12e0>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 1 0 2 0)')
+323: guard_not_invalidated(descr=<Guard0x3cd13d0>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc1340>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd1418>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd1460>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd14a8>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd14f0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd1538>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd1580>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc13a0>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 0, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c087adc510f6] jit-log-opt-bridge}
[3e4c087cc22270b] {jit-backend
[3e4c087cc2cc36f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d4d
[3e4c087cc2d4ebe] jit-backend-dump}
[3e4c087cc2e0983] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d5c4 +0  26000000
[3e4c087cc2e1ff6] jit-backend-dump}
[3e4c087cc2e60b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d985 +0  26000000
[3e4c087cc2e70c2] jit-backend-dump}
[3e4c087cc2ea58c] {jit-backend-addr
bridge out of Guard 0x3cc1280 has address 0x7fd83567d5c0 to 0x7fd83567d980
       gc table: 0x7fd83567d4d0
    jump target: 0x7fd83567d5c0
         resops: 0x7fd83567d5ce
       failures: 0x7fd83567d980
            end: 0x7fd83567db30
[3e4c087cc2ecbb6] jit-backend-addr}
[3e4c087cc2f00cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d5e2 +0  FA030000
[3e4c087cc2f0fc2] jit-backend-dump}
[3e4c087cc2f442d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d5f7 +0  01040000
[3e4c087cc2f51ad] jit-backend-dump}
[3e4c087cc2f85c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d60f +0  05040000
[3e4c087cc2f9328] jit-backend-dump}
[3e4c087cc2fc856] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d62e +0  1E040000
[3e4c087cc2fd5cb] jit-backend-dump}
[3e4c087cc3008c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d63c +0  2C040000
[3e4c087cc30164a] jit-backend-dump}
[3e4c087cc3047e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d646 +0  3E040000
[3e4c087cc30553c] jit-backend-dump}
[3e4c087cc308759] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d65d +0  43040000
[3e4c087cc3094ae] jit-backend-dump}
[3e4c087cc30c626] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d673 +0  49040000
[3e4c087cc30d348] jit-backend-dump}
[3e4c087cc3105b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d685 +0  53040000
[3e4c087cc3112eb] jit-backend-dump}
[3e4c087cc314438] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d693 +0  61040000
[3e4c087cc315141] jit-backend-dump}
[3e4c087cc3182e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d90e +0  02020000
[3e4c087cc319020] jit-backend-dump}
[3e4c087cc31c38a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ce92 +0  2A070000
[3e4c087cc31d0d7] jit-backend-dump}
[3e4c087cc321031] jit-backend}
[3e4c087cc324c23] {jit-log-opt-bridge
# bridge out of Guard 0x3cc1280 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc1400>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd15c8>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc1460>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 1 0 0 2)')
+323: guard_not_invalidated(descr=<Guard0x3cd1610>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc14c0>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd1658>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd16a0>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd16e8>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd1730>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd1778>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd17c0>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc1520>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 2, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c087cc37b84e] jit-log-opt-bridge}
[3e4c087ea90ec36] {jit-backend
[3e4c087ea9c34be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dc
[3e4c087ea9cc203] jit-backend-dump}
[3e4c087ea9d7a3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dd14 +0  26000000
[3e4c087ea9d9133] jit-backend-dump}
[3e4c087ea9dd303] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e0d5 +0  26000000
[3e4c087ea9de34c] jit-backend-dump}
[3e4c087ea9e19bf] {jit-backend-addr
bridge out of Guard 0x3cc1400 has address 0x7fd83567dd10 to 0x7fd83567e0d0
       gc table: 0x7fd83567dc20
    jump target: 0x7fd83567dd10
         resops: 0x7fd83567dd1e
       failures: 0x7fd83567e0d0
            end: 0x7fd83567e280
[3e4c087ea9e408b] jit-backend-addr}
[3e4c087ea9e77d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dd32 +0  FA030000
[3e4c087ea9e86d0] jit-backend-dump}
[3e4c087ea9eba37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dd47 +0  01040000
[3e4c087ea9ec807] jit-backend-dump}
[3e4c087ea9efaee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dd5f +0  05040000
[3e4c087ea9f0843] jit-backend-dump}
[3e4c087ea9f3c90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dd7e +0  1E040000
[3e4c087ea9f4a32] jit-backend-dump}
[3e4c087ea9f7d6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dd8c +0  2C040000
[3e4c087ea9f8afe] jit-backend-dump}
[3e4c087ea9fbd18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dd96 +0  3E040000
[3e4c087ea9fcaba] jit-backend-dump}
[3e4c087ea9ffcbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ddad +0  43040000
[3e4c087eaa00a29] jit-backend-dump}
[3e4c087eaa03b88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ddc3 +0  49040000
[3e4c087eaa048fc] jit-backend-dump}
[3e4c087eaa07adc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ddd5 +0  53040000
[3e4c087eaa0884d] jit-backend-dump}
[3e4c087eaa0b97b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dde3 +0  61040000
[3e4c087eaa0c705] jit-backend-dump}
[3e4c087eaa0fa63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e05e +0  02020000
[3e4c087eaa107da] jit-backend-dump}
[3e4c087eaa17761] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567d5e2 +0  2A070000
[3e4c087eaa185d6] jit-backend-dump}
[3e4c087eaa1c75d] jit-backend}
[3e4c087eaa20403] {jit-log-opt-bridge
# bridge out of Guard 0x3cc1400 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc1580>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd1808>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc15e0>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 2 1 1 0)')
+323: guard_not_invalidated(descr=<Guard0x3cd1850>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc1640>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd1898>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd18e0>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd1928>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd1970>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd19b8>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd1a00>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc16a0>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 0, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c087eaa7594a] jit-log-opt-bridge}
[3e4c0880999192c] {jit-backend
[3e4c08809a3da29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e
[3e4c08809a46544] jit-backend-dump}
[3e4c08809a52260] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e464 +0  26000000
[3e4c08809a539f0] jit-backend-dump}
[3e4c08809a57e7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e825 +0  26000000
[3e4c08809a58efc] jit-backend-dump}
[3e4c08809a5c4b8] {jit-backend-addr
bridge out of Guard 0x3cc1580 has address 0x7fd83567e460 to 0x7fd83567e820
       gc table: 0x7fd83567e370
    jump target: 0x7fd83567e460
         resops: 0x7fd83567e46e
       failures: 0x7fd83567e820
            end: 0x7fd83567e9d0
[3e4c08809a5eb7e] jit-backend-addr}
[3e4c08809a621a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e482 +0  FA030000
[3e4c08809a63111] jit-backend-dump}
[3e4c08809a66573] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e497 +0  01040000
[3e4c08809a67362] jit-backend-dump}
[3e4c08809a6a63c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e4af +0  05040000
[3e4c08809a6b3c9] jit-backend-dump}
[3e4c08809a6e7fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e4ce +0  1E040000
[3e4c08809a6f57a] jit-backend-dump}
[3e4c08809a72993] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e4dc +0  2C040000
[3e4c08809a736e2] jit-backend-dump}
[3e4c08809a76a1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e4e6 +0  3E040000
[3e4c08809a77771] jit-backend-dump}
[3e4c08809a7aa64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e4fd +0  43040000
[3e4c08809a7b79b] jit-backend-dump}
[3e4c08809a7e974] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e513 +0  49040000
[3e4c08809a7f6f8] jit-backend-dump}
[3e4c08809a829db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e525 +0  53040000
[3e4c08809a8372e] jit-backend-dump}
[3e4c08809a86a30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e533 +0  61040000
[3e4c08809a87776] jit-backend-dump}
[3e4c08809a8aaa6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e7ae +0  02020000
[3e4c08809a8b7d4] jit-backend-dump}
[3e4c08809a8ec6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567dd32 +0  2A070000
[3e4c08809a8f98c] jit-backend-dump}
[3e4c08809a93a8c] jit-backend}
[3e4c08809a977a7] {jit-log-opt-bridge
# bridge out of Guard 0x3cc1580 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc1700>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd1a48>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc1760>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 2 1 0 1)')
+323: guard_not_invalidated(descr=<Guard0x3cd1a90>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc17c0>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd1ad8>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd1b20>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd1b68>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd1bb0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd1bf8>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd1c40>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc1820>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 1, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c08809aed6ea] jit-log-opt-bridge}
[3e4c08827f9af7d] {jit-backend
[3e4c0882804b0c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567eac
[3e4c08828053d50] jit-backend-dump}
[3e4c0882805fb33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ebb4 +0  26000000
[3e4c0882806110d] jit-backend-dump}
[3e4c08828065076] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ef75 +0  26000000
[3e4c08828066030] jit-backend-dump}
[3e4c088280695d6] {jit-backend-addr
bridge out of Guard 0x3cc1700 has address 0x7fd83567ebb0 to 0x7fd83567ef70
       gc table: 0x7fd83567eac0
    jump target: 0x7fd83567ebb0
         resops: 0x7fd83567ebbe
       failures: 0x7fd83567ef70
            end: 0x7fd83567f120
[3e4c0882806bf3d] jit-backend-addr}
[3e4c0882806f734] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ebd2 +0  FA030000
[3e4c088280705b9] jit-backend-dump}
[3e4c088280739da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ebe7 +0  01040000
[3e4c08828074773] jit-backend-dump}
[3e4c08828077b89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ebff +0  05040000
[3e4c0882807893d] jit-backend-dump}
[3e4c0882807c337] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ec1e +0  1E040000
[3e4c0882807d0ab] jit-backend-dump}
[3e4c0882808046b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ec2c +0  2C040000
[3e4c08828081192] jit-backend-dump}
[3e4c0882808441a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ec36 +0  3E040000
[3e4c0882808519b] jit-backend-dump}
[3e4c088280883a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ec4d +0  43040000
[3e4c088280890d6] jit-backend-dump}
[3e4c0882808c27b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ec63 +0  49040000
[3e4c0882808cfe3] jit-backend-dump}
[3e4c08828090212] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ec75 +0  53040000
[3e4c08828090f8d] jit-backend-dump}
[3e4c08828094172] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567ec83 +0  61040000
[3e4c08828094f18] jit-backend-dump}
[3e4c08828098190] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567eefe +0  02020000
[3e4c08828098efb] jit-backend-dump}
[3e4c0882809c360] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fd83567e482 +0  2A070000
[3e4c0882809d118] jit-backend-dump}
[3e4c088280a11d1] jit-backend}
[3e4c088280a4f9a] {jit-log-opt-bridge
# bridge out of Guard 0x3cc1700 with 121 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3cc1880>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3cd1c88>) [p0, p1]
+299: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3cc18e0>) [p0, p1]
debug_merge_point(0, 0, '(definePiece 2 0 1 1)')
+323: guard_not_invalidated(descr=<Guard0x3cd1cd0>) [p0, p1]
debug_merge_point(0, 0, '(let ([index 0]) (let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void)))))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '(let ([doloop5052 (lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))]) (doloop5052 0) (vector-set! *class* *iii* iclass) (vector-set! *piecemax* *iii* CellRef(index)) (let ([AppRand36 (= *iii* typemax)]) (if (not AppRand36) (let ([SetBang4 (+ *iii* 1)]) (set! *iii* SetBang4)) (void))))')
debug_merge_point(0, 0, '(lambda (i5054) (let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))))')
debug_merge_point(0, 0, '(doloop5052 0)')
debug_merge_point(0, 0, '(let ([if12 (> i5054 ii)]) (if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))) from (doloop5052 0)')
debug_merge_point(0, 0, '(> i5054 ii)')
debug_merge_point(0, 0, '(if if12 (void) (let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35))))')
debug_merge_point(0, 0, '(let ([doloop5058 (lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))]) (doloop5058 0) (let ([AppRand35 (+ i5054 1)]) (doloop5052 AppRand35)))')
debug_merge_point(0, 0, '(lambda (j5060) (let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))))')
debug_merge_point(0, 0, '(doloop5058 0)')
debug_merge_point(0, 0, '(let ([if13 (> j5060 jj)]) (if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))) from (doloop5058 0)')
debug_merge_point(0, 0, '(> j5060 jj)')
debug_merge_point(0, 0, '(if if13 (void) (let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34))))')
debug_merge_point(0, 0, '(let ([doloop5064 (lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))]) (doloop5064 0) (let ([AppRand34 (+ j5060 1)]) (doloop5058 AppRand34)))')
debug_merge_point(0, 0, '(lambda (k5066) (let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))))')
debug_merge_point(0, 0, '(doloop5064 0)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 0)')
debug_merge_point(0, 0, '(> k5066 kk)')
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))')
debug_merge_point(0, 0, '(let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33)))')
debug_merge_point(0, 0, '(* *d* k5066)')
debug_merge_point(0, 0, '(let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))))')
debug_merge_point(0, 0, '(+ j5060 AppRand29)')
debug_merge_point(0, 0, '(let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))')
debug_merge_point(0, 0, '(* *d* AppRand30)')
debug_merge_point(0, 0, '(let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3))')
debug_merge_point(0, 0, '(+ i5054 AppRand31)')
debug_merge_point(0, 0, '(set! index SetBang3)')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t))')
debug_merge_point(0, 0, '(vector-ref *p* *iii*)')
+330: p9 = getfield_gc_r(ConstPtr(ptr8), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+335: guard_nonnull_class(p9, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc1940>) [p0, p1]
+354: i11 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+358: i13 = int_ge(i11, 0)
+362: guard_true(i13, descr=<Guard0x3cd1d18>) [p0, p1]
+368: i15 = int_lt(i11, 13)
+372: guard_true(i15, descr=<Guard0x3cd1d60>) [p0, p1]
+385: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+389: guard_class(p17, 16622984, descr=<Guard0x3cd1da8>) [p0, p1]
+401: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+405: p21 = getarrayitem_gc_r(p20, i11, descr=<ArrayP 8>)
+410: guard_class(p21, ConstClass(W_Vector), descr=<Guard0x3cd1df0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand32 CellRef(index) #t)')
+423: p23 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+427: guard_class(p23, 16622984, descr=<Guard0x3cd1e38>) [p0, p1]
+441: i25 = getfield_gc_i(p21, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i27 = int_lt(0, i25)
+449: guard_true(i27, descr=<Guard0x3cd1e80>) [p0, p1]
+455: p28 = getfield_gc_r(p21, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))')
debug_merge_point(0, 0, '(+ k5066 1)')
debug_merge_point(0, 0, '(doloop5064 AppRand33)')
debug_merge_point(0, 0, '(let ([if14 (> k5066 kk)]) (if if14 (void) (let ([AppRand29 (* *d* k5066)]) (let ([AppRand30 (+ j5060 AppRand29)]) (let ([AppRand31 (* *d* AppRand30)]) (let ([SetBang3 (+ i5054 AppRand31)]) (set! index SetBang3)))) (let ([AppRand32 (vector-ref *p* *iii*)]) (vector-set! AppRand32 CellRef(index) #t)) (let ([AppRand33 (+ k5066 1)]) (doloop5064 AppRand33))))) from (doloop5064 AppRand33)')
+477: setarrayitem_gc(p28, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+481: p30 = new_with_vtable(descr=<SizeDescr 56>)
+525: p31 = new_with_vtable(descr=<SizeDescr 16>)
+536: p32 = new_with_vtable(descr=<SizeDescr 16>)
+547: setfield_gc(p32, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+555: setfield_gc(p31, p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+559: p33 = new_with_vtable(descr=<SizeDescr 40>)
+570: p34 = new_with_vtable(descr=<SizeDescr 24>)
+581: p35 = new_with_vtable(descr=<SizeDescr 56>)
+600: setfield_gc(p35, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p35, ConstPtr(ptr37), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+624: setfield_gc(p35, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+636: setfield_gc(p35, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+641: setfield_gc(p35, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+660: setfield_gc(p35, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+665: setfield_gc(p34, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+669: setfield_gc(p34, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+677: p42 = new_with_vtable(descr=<SizeDescr 40>)
+696: setfield_gc(p42, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+707: p43 = new_with_vtable(descr=<SizeDescr 24>)
+725: p44 = new_with_vtable(descr=<SizeDescr 56>)
+743: setfield_gc(p44, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+761: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p44, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+776: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+780: setfield_gc(p44, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+784: setfield_gc(p44, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+795: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: setfield_gc(p43, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+807: setfield_gc(p42, p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+811: p48 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: p49 = new_with_vtable(descr=<SizeDescr 24>)
+844: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+848: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+852: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+856: p51 = new_with_vtable(descr=<SizeDescr 40>)
+867: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+871: setfield_gc(p51, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: setfield_gc(p51, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+886: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+890: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+901: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+905: setfield_gc(p42, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p42, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: p55 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1018: setfield_gc(p33, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1022: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1026: setfield_gc(p33, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1030: setfield_gc(p33, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1045: setfield_gc(p30, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1049: setfield_gc(p30, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1064: setfield_gc(p30, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p30, ConstPtr(ptr40), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: guard_nonnull_class(p55, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3cc19a0>) [p33, p30]
+1090: i60 = arraylen_gc(p20, descr=<ArrayP 8>)
+1090: jump(p30, 1, p33, p6, ConstPtr(ptr38), 1, ConstPtr(ptr58), 0, ConstPtr(ptr40), 0, p31, p9, p55, p20, descr=TargetToken(62083248))
+1200: --end of the loop--
[3e4c088280fd16c] jit-log-opt-bridge}
[3e4c09dd6cc8a18] {jit-summary
Tracing:      	68	0.071917
Backend:      	68	0.124831
TOTAL:      		38.334347
ops:             	110446
recorded ops:    	21021
  calls:         	9
guards:          	5762
opt ops:         	7239
opt guards:      	1773
opt guards shared:	1369
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	231
nvholes:         	3
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	21
Total # of bridges:	47
Freed # of loops:	0
Freed # of bridges:	0
[3e4c09dd6cdc23a] jit-summary}
[3e4c09dd6ce6de4] {jit-backend-counts
entry 1:77
TargetToken(61623936):77
TargetToken(61624016):5119790
entry 2:101
TargetToken(61624096):101
TargetToken(61624176):66559763
entry 3:426
TargetToken(61624256):120248
TargetToken(61624336):5255559608
entry 4:234
TargetToken(61624416):234
TargetToken(61624496):1110939625
entry 5:63
TargetToken(61624576):63
TargetToken(61624656):210179801
bridge 61919344:99
bridge 61920784:113
bridge 61919776:368849770
entry 9:191
TargetToken(61624736):191
TargetToken(61624816):1099909674
bridge 61983512:235509796
entry 11:198
TargetToken(62079968):198
TargetToken(62080048):150579728
bridge 61921216:97899758
entry 13:225
bridge 61986824:96829850
entry 15:99
bridge 61986392:25
bridge 61919416:20039933
bridge 61920856:20049927
bridge 61922152:20039925
bridge 62130176:8
bridge 61984592:17309948
bridge 61986464:19869922
bridge 62130608:26039882
bridge 62130392:19879913
bridge 61984160:7609941
bridge 62205632:1119942
entry 27:147
TargetToken(62083008):147
TargetToken(62083088):1249682
entry 28:76
TargetToken(62083168):76
TargetToken(62083248):769749
bridge 62349216:249916
entry 30:153
entry 31:55
entry 32:56
bridge 62678392:469799
bridge 61918120:129940
bridge 62683648:76
bridge 62900800:259843
bridge 60809120:119931
entry 38:63
entry 39:50
TargetToken(62847024):50
TargetToken(62847104):159806
bridge 62905840:129867
entry 41:3447
bridge 62998024:69907
bridge 62681920:49929
entry 44:15
entry 45:21
entry 46:4
bridge 61922008:9942
bridge 62345040:9942
bridge 61917184:9941
entry 50:11
bridge 61945216:2
bridge 62205056:9939
bridge 62902312:9937
bridge 62741088:109306
bridge 62740992:9936
bridge 62997376:9935
bridge 63000688:9933
bridge 63096472:9929
bridge 63701696:98839
bridge 63703712:88496
bridge 63704096:78255
bridge 63704480:68109
bridge 63704960:58079
bridge 63705344:48134
bridge 63705728:38303
bridge 63706112:28574
bridge 63706496:18945
bridge 63706880:9421
[3e4c09dd6cf981a] jit-backend-counts}
