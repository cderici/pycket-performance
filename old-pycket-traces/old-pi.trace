[3e4c0697e7e2494] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a8000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c0697e7f88f4] jit-backend-dump}
[3e4c0697e838222] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a80b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c0697e83b176] jit-backend-dump}
[3e4c0697e848a44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a8180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c0697e84a719] jit-backend-dump}
[3e4c0697e85142d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a81f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c0697e852da4] jit-backend-dump}
[3e4c0697e85c682] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a8270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c0697e85e112] jit-backend-dump}
[3e4c0697e86829a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a82f
[3e4c0697e86bb03] jit-backend-dump}
[3e4c0697e87117c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a
[3e4c0697e8734f2] jit-backend-dump}
[3e4c0697e8785af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a
[3e4c0697e87a9b5] jit-backend-dump}
[3e4c0697e916433] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a
[3e4c0697e918fb4] jit-backend-dump}
[3e4c0697e91f53e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a88f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B528010000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B528010000C20800
[3e4c0697e921b4f] jit-backend-dump}
[3e4c0697e9268e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a8a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c0697e928377] jit-backend-dump}
[3e4c0697e93d2b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a8af0 +0  4889455848895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC084829CA4889D741BB60F0730041FFD3488B0C258893F900488B69F8F64504010F85EA0000004883C4084885C00F84CC0000004889C1488B4558488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B52801000048C7452000000000C34883C40849BB708A2A52F27F000041FFE349BB70822A52F27F000041FFD3E904FFFFFF
[3e4c0697e94034a] jit-backend-dump}
[3e4c0697e9480cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a8ce
[3e4c0697e94b0a9] jit-backend-dump}
[3e4c0697e9531b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a8ee
[3e4c0697e9563f6] jit-backend-dump}
[3e4c0697e95c692] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a90d
[3e4c0697e95f5bf] jit-backend-dump}
[3e4c0697e9697af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a92c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70822A52F27F000041FFD3E99CFFFFFF
[3e4c0697e96b62a] jit-backend-dump}
[3e4c0697e970bab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70822A52F27F000041FFD3E9BCFFFFFF
[3e4c0697e97259f] jit-backend-dump}
[3e4c0697e977a59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a
[3e4c0697e97a630] jit-backend-dump}
[3e4c0697e97ffb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a95c
[3e4c0697e9828ed] jit-backend-dump}
[3e4c0697e993bb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB708A2A52F27F000041FFE3
[3e4c0697e995452] jit-backend-dump}
[3e4c0697f32488c] {jit-backend
[3e4c0697f41ae27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a
[3e4c0697f42312b] jit-backend-dump}
[3e4c0697f4328c4] {jit-backend-addr
Loop 1 ((let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)) has address 0x7ff2522a9a8d to 0x7ff2522a9cb0 (bootstrap 0x7ff2522a9a00)
       gc table: 0x7ff2522a9960
       function: 0x7ff2522a9a00
         resops: 0x7ff2522a9a8d
       failures: 0x7ff2522a9cb0
            end: 0x7ff2522a9ec2
[3e4c0697f437359] jit-backend-addr}
[3e4c0697f4406bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9ab7 +0  2B020000
[3e4c0697f441be5] jit-backend-dump}
[3e4c0697f44562e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9acd +0  31020000
[3e4c0697f4464ff] jit-backend-dump}
[3e4c0697f4499b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9ae0 +0  56020000
[3e4c0697f44a746] jit-backend-dump}
[3e4c0697f44d887] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9af0 +0  62020000
[3e4c0697f44e59c] jit-backend-dump}
[3e4c0697f451634] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9b04 +0  6A020000
[3e4c0697f45234a] jit-backend-dump}
[3e4c0697f4552c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9b1a +0  70020000
[3e4c0697f455fea] jit-backend-dump}
[3e4c0697f458ff3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9b30 +0  76020000
[3e4c0697f459cfc] jit-backend-dump}
[3e4c0697f45ccca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9b75 +0  4D020000
[3e4c0697f45d9d0] jit-backend-dump}
[3e4c0697f46095b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9b83 +0  5B020000
[3e4c0697f46165e] jit-backend-dump}
[3e4c0697f4645ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9be9 +0  11020000
[3e4c0697f4652e0] jit-backend-dump}
[3e4c0697f468256] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9bf7 +0  1F020000
[3e4c0697f468f78] jit-backend-dump}
[3e4c0697f46c05f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9c27 +0  27020000
[3e4c0697f46cd8d] jit-backend-dump}
[3e4c0697f46fdee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9c38 +0  32020000
[3e4c0697f470b13] jit-backend-dump}
[3e4c0697f473a80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9c90 +0  F6010000
[3e4c0697f474792] jit-backend-dump}
[3e4c0697f4776da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9c9e +0  04020000
[3e4c0697f4783ef] jit-backend-dump}
[3e4c0697f47c03d] jit-backend}
[3e4c0697f47fcd7] {jit-log-opt-loop
# Loop 1 ((let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)) : loop with 54 ops
[p0, p1]
+309: label(p0, p1, descr=TargetToken(69318064))
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+328: guard_class(p1, 16437352, descr=<Guard0x41c62c0>) [p0, p1]
+347: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+351: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x41c6320>) [p0, p1]
debug_merge_point(0, 0, '(< x n)')
+369: guard_not_invalidated(descr=<Guard0x4253bb0>) [p0, p1]
+369: guard_class(p0, 16504240, descr=<Guard0x4253bf8>) [p0, p1]
+388: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+392: guard_class(p6, 16477696, descr=<Guard0x4253c40>) [p0, p1]
+404: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+415: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x4253c88>) [p0, p1]
+424: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+428: guard_nonnull_class(p10, ConstClass(W_Bignum), descr=<Guard0x41c6380>) [p0, p1]
+446: p12 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+450: guard_nonnull_class(p12, ConstClass(W_Bignum), descr=<Guard0x41c63e0>) [p0, p1]
+468: p14 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+472: p15 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+476: i17 = call_i(ConstClass(rbigint.lt), p14, p15, descr=<Calli 1 rr EF=0>)
+528: guard_false(i17, descr=<Guard0x41c6440>) [p0, i17, p1, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
+537: i18 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+541: i20 = int_add_ovf(i18, 1)
+545: guard_no_overflow(descr=<Guard0x4253cd0>) [p0, i17, p1, p3]
debug_merge_point(0, 0, '(* n 2)')
+558: p23 = call_r(ConstClass(rbigint.mul), p15, ConstPtr(ptr22), descr=<Callr 8 rr EF=4>)
+638: guard_no_exception(descr=<Guard0x41c64a0>) [p0, p23, p12, i20, p6, p1, p3]
+653: i24 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+657: i26 = int_gt(i24, 2)
+661: guard_true(i26, descr=<Guard0x4253d18>) [p0, p23, p12, i20, p6, p1, p3]
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+667: label(p6, i20, p23, p1, p3, p10, p14, descr=TargetToken(69318144))
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(< x n)')
+680: guard_not_invalidated(descr=<Guard0x41c6500>) [p23, i20, p6, p1, p3]
+680: i28 = call_i(ConstClass(rbigint.lt), p14, p23, descr=<Calli 1 rr EF=0>)
+706: guard_false(i28, descr=<Guard0x41c6560>) [i28, p23, i20, p6, p1, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
+715: i30 = int_add_ovf(i20, 1)
+726: guard_no_overflow(descr=<Guard0x4253d60>) [i28, p23, i20, p6, p1, p3]
debug_merge_point(0, 0, '(* n 2)')
+739: p33 = call_r(ConstClass(rbigint.mul), p23, ConstPtr(ptr32), descr=<Callr 8 rr EF=4>)
+805: guard_no_exception(descr=<Guard0x41c65c0>) [p33, i30, p23, i20, p6, p1, p3]
+820: i34 = getfield_gc_i(p33, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+824: i36 = int_gt(i34, 2)
+828: guard_true(i36, descr=<Guard0x4253da8>) [p33, i30, p23, i20, p6, p1, p3]
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+834: jump(p6, i30, p33, p1, p3, p10, p14, descr=TargetToken(69318144))
+848: --end of the loop--
[3e4c0697f4e9262] jit-log-opt-loop}
[3e4c0697f6abd5f] {jit-backend
[3e4c0697f718547] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9fd0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C9201000048FF042540448E028139A81600000F85000000004C8B79084983FF01720741813F900F00000F8500000000813A901A01000F85000000004C8B720841813E40B400000F85000000004D8B6E104C8B2557FFFFFF4D39E50F85000000004D8B66184983FC01720841813C24B84700000F85000000004C8B6A184889953001000048898D380100004C89BD400100004C89B5480100004C89A5500100004C89EF49BB589F2A52F27F00004C895D2041BBD098A90041FFD3488B0C258893F900488B69F8F64504010F85ED00000048C745200000000048833C2540B35F01000F8500000000488B9550010000488B4A084889CF4889C641BB3096A90041FFD3480FB6C04885C00F8500000000488B8D30010000488B51104883C2010F80000000004D85ED0F84000000004D6BED020F80000000004989D7488B0C25F091F900488D5120483B14251092F9000F877C00000048891425F091F90048C701901A0100488B9548010000488951084C8969184C89791048898D3001000049BBA09A2A52F27F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BBD89E2A52F27F00004C895D204D8D9B18E4FFFF41FFD3E948FEFFFF49BB70822A52F27F000041FFD3E901FFFFFF49BBB89F2A52F27F00004C895D204D8D9B38EBFFFF41FFD3E96FFFFFFFFF3595FDFFFF49BBE89E2A52F27F000041534D8D9B18E1FFFF41FFE3FF3581FDFFFF49BBF89E2A52F27F000041534D8D9B08E1FFFF41FFE3FF356DFDFFFF49BB089F2A52F27F000041534D8D9BF8E0FFFF41FFE3FF3559FDFFFF49BB189F2A52F27F000041534D8D9BE8E0FFFF41FFE3FF3545FDFFFF49BB289F2A52F27F000041534D8D9BD8E0FFFF41FFE3FF3539FDFFFF49BB389F2A52F27F000041534D8D9BC8E0FFFF41FFE3FF3525FDFFFF49BB489F2A52F27F000041534D8D9BB8E0FFFF41FFE3FF3511FDFFFF49BB689F2A52F27F000041534D8D9B48E1FFFF41FFE3FF35FDFCFFFF49BB789F2A52F27F000041534D8D9B88E0FFFF41FFE3FF35E9FCFFFF49BB889F2A52F27F000041534D8D9B78E0FFFF41FFE3FF35D5FCFFFF49BB989F2A52F27F000041534D8D9B68E0FFFF41FFE3FF35C1FCFFFF49BBA89F2A52F27F000041534D8D9B58E0FFFF41FFE3
[3e4c0697f71ee32] jit-backend-dump}
[3e4c0697f729114] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa044 +0  24000000
[3e4c0697f72a580] jit-backend-dump}
[3e4c0697f72e1e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa1e5 +0  24000000
[3e4c0697f72f061] jit-backend-dump}
[3e4c0697f7322af] {jit-backend-addr
bridge out of Guard 0x4253bf8 has address 0x7ff2522aa040 to 0x7ff2522aa1e0
       gc table: 0x7ff2522a9fd0
    jump target: 0x7ff2522aa040
         resops: 0x7ff2522aa04e
       failures: 0x7ff2522aa1e0
            end: 0x7ff2522aa385
[3e4c0697f7346e0] jit-backend-addr}
[3e4c0697f737baa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa05e +0  D3010000
[3e4c0697f738958] jit-backend-dump}
[3e4c0697f73bad6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa075 +0  D8010000
[3e4c0697f73c80a] jit-backend-dump}
[3e4c0697f73f8ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa081 +0  04020000
[3e4c0697f740613] jit-backend-dump}
[3e4c0697f74362b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa092 +0  0F020000
[3e4c0697f7442ee] jit-backend-dump}
[3e4c0697f7472a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa0a6 +0  17020000
[3e4c0697f747f45] jit-backend-dump}
[3e4c0697f74af63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa0be +0  1B020000
[3e4c0697f74bc38] jit-backend-dump}
[3e4c0697f74ec44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa12c +0  C9010000
[3e4c0697f74f8f1] jit-backend-dump}
[3e4c0697f752a19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa153 +0  BE010000
[3e4c0697f7536b1] jit-backend-dump}
[3e4c0697f7565ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa168 +0  C5010000
[3e4c0697f75727b] jit-backend-dump}
[3e4c0697f75a210] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa171 +0  D8010000
[3e4c0697f75ae98] jit-backend-dump}
[3e4c0697f75de14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa17b +0  EA010000
[3e4c0697f75eaa6] jit-backend-dump}
[3e4c0697f7636cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9ae0 +0  5C050000
[3e4c0697f764477] jit-backend-dump}
[3e4c0697f76b356] jit-backend}
[3e4c0697f76f080] {jit-log-opt-bridge
# bridge out of Guard 0x4253bf8 with 36 ops
[p0, p1]
+134: guard_class(p1, 16437352, descr=<Guard0x41c6620>) [p0, p1]
+146: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+150: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x41c6680>) [p0, p1]
debug_merge_point(0, 0, '(< x n)')
+169: guard_not_invalidated(descr=<Guard0x4253df0>) [p0, p1]
+169: guard_class(p0, 16503888, descr=<Guard0x4253e38>) [p0, p1]
+181: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+185: guard_class(p6, 16477696, descr=<Guard0x4253e80>) [p0, p1]
+198: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+209: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x4253ec8>) [p0, p1]
+218: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+222: guard_nonnull_class(p10, ConstClass(W_Bignum), descr=<Guard0x41c66e0>) [p0, p1]
+242: i12 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+246: p14 = call_r(ConstClass(fromint), i12, descr=<Callr 8 i EF=3>)
+337: guard_no_exception(descr=<Guard0x41c6740>) [p0, p14, p10, i12, p1, p3]
+352: p15 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+363: i17 = call_i(ConstClass(rbigint.lt), p15, p14, descr=<Calli 1 rr EF=0>)
+382: guard_false(i17, descr=<Guard0x41c67a0>) [p0, i17, None, p1, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
+391: i19 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+402: i21 = int_add_ovf(i19, 1)
+406: guard_no_overflow(descr=<Guard0x4253f10>) [p0, i17, None, p1, p3]
debug_merge_point(0, 0, '(* n 2)')
+412: i22 = int_is_true(i12)
+415: guard_true(i22, descr=<Guard0x4253f58>) [p0, i17, None, p1, p3]
+421: i24 = int_mul_ovf(i12, 2)
+425: guard_no_overflow(descr=<Guard0x4253fa0>) [p0, i17, None, p1, p3]
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+431: p25 = new_with_vtable(descr=<SizeDescr 32>)
+475: setfield_gc(p25, p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+486: setfield_gc(p25, i24, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+490: setfield_gc(p25, i21, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+494: jump(p25, p1, descr=TargetToken(69318064))
+528: --end of the loop--
[3e4c0697f795487] jit-log-opt-bridge}
[3e4c0697f89f49b] {jit-backend
[3e4c0697f8d7d2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa
[3e4c0697f8dc749] jit-backend-dump}
[3e4c0697f8e637d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa444 +0  24000000
[3e4c0697f8e75c5] jit-backend-dump}
[3e4c0697f8eae74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa535 +0  24000000
[3e4c0697f8ebbcd] jit-backend-dump}
[3e4c0697f8ef11a] {jit-backend-addr
bridge out of Guard 0x4253d18 has address 0x7ff2522aa440 to 0x7ff2522aa530
       gc table: 0x7ff2522aa400
    jump target: 0x7ff2522aa440
         resops: 0x7ff2522aa44e
       failures: 0x7ff2522aa530
            end: 0x7ff2522aa5fe
[3e4c0697f8f1482] jit-backend-addr}
[3e4c0697f8f4986] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa460 +0  F2000000
[3e4c0697f8f568c] jit-backend-dump}
[3e4c0697f8f88e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa484 +0  EA000000
[3e4c0697f8f9724] jit-backend-dump}
[3e4c0697f8fc8ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa4b7 +0  EF000000
[3e4c0697f8fd5ab] jit-backend-dump}
[3e4c0697f90075c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa4d4 +0  EE000000
[3e4c0697f901462] jit-backend-dump}
[3e4c0697f904532] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa4ec +0  F2000000
[3e4c0697f9051eb] jit-backend-dump}
[3e4c0697f908445] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9bf7 +0  45080000
[3e4c0697f90914e] jit-backend-dump}
[3e4c0697f90d123] jit-backend}
[3e4c0697f910b84] {jit-log-opt-bridge
# bridge out of Guard 0x4253d18 with 16 ops
[p0, p1, p2, i3, p4, p5, p6]
+86: i7 = getfield_gc_i(p1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+90: i9 = int_gt(i7, 2)
+94: guard_false(i9, descr=<Guard0x41c6800>) [p0, p1, i7, p2, i3, p5, p4, p6]
+100: i11 = call_i(ConstClass(rbigint._toint_helper), p1, descr=<Calli 8 r EF=4>)
+115: p13 = guard_exception(ConstClass(OverflowError), descr=<Guard0x41c6860>) [p0, p1, i11, p2, i3, p5, p4, p6]
+160: guard_not_invalidated(descr=<Guard0x41c68c0>) [p4, p0, p1, None, i3, p5, None, p6]
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
+160: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+178: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x4344020>) [p4, p0, p1, None, i3, p5, None, p6]
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+187: p17 = getfield_gc_r(p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+198: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x41c6920>) [p5, p1, None, i3, None, p4, None]
+216: p19 = getfield_gc_r(p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+220: guard_nonnull_class(p19, ConstClass(W_Bignum), descr=<Guard0x41c6980>) [p5, p1, None, i3, None, p4, None]
+240: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+245: jump(p4, i3, p1, p5, p17, p19, p21, descr=TargetToken(69318144))
+304: --end of the loop--
[3e4c0697f9297e2] jit-log-opt-bridge}
[3e4c0697fa601d4] {jit-backend
[3e4c0697fa92abb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa
[3e4c0697fa98483] jit-backend-dump}
[3e4c0697faa1ee3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa6c4 +0  24000000
[3e4c0697faa317e] jit-backend-dump}
[3e4c0697faa6b80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa7b5 +0  24000000
[3e4c0697faa796f] jit-backend-dump}
[3e4c0697faaaaa0] {jit-backend-addr
bridge out of Guard 0x4253da8 has address 0x7ff2522aa6c0 to 0x7ff2522aa7b0
       gc table: 0x7ff2522aa680
    jump target: 0x7ff2522aa6c0
         resops: 0x7ff2522aa6ce
       failures: 0x7ff2522aa7b0
            end: 0x7ff2522aa87e
[3e4c0697faacdf2] jit-backend-addr}
[3e4c0697fab0181] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa6e0 +0  F2000000
[3e4c0697fab0f3e] jit-backend-dump}
[3e4c0697fab402f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa704 +0  EA000000
[3e4c0697fab4d32] jit-backend-dump}
[3e4c0697fab811a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa737 +0  EF000000
[3e4c0697fab8dfe] jit-backend-dump}
[3e4c0697fabbf26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa755 +0  ED000000
[3e4c0697fabcc0e] jit-backend-dump}
[3e4c0697fabfca9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa76c +0  F2000000
[3e4c0697fac098e] jit-backend-dump}
[3e4c0697fac3bc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9c9e +0  1E0A0000
[3e4c0697fac4912] jit-backend-dump}
[3e4c0697fac8905] jit-backend}
[3e4c0697facc3aa] {jit-log-opt-bridge
# bridge out of Guard 0x4253da8 with 16 ops
[p0, i1, p2, i3, p4, p5, p6]
+86: i7 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+90: i9 = int_gt(i7, 2)
+94: guard_false(i9, descr=<Guard0x41c69e0>) [p0, i7, p2, i3, i1, p5, p4, p6]
+100: i11 = call_i(ConstClass(rbigint._toint_helper), p0, descr=<Calli 8 r EF=4>)
+115: p13 = guard_exception(ConstClass(OverflowError), descr=<Guard0x41c6a40>) [p0, i11, p2, i3, i1, p5, p4, p6]
+160: guard_not_invalidated(descr=<Guard0x41c6aa0>) [p4, p0, p2, i3, i1, p5, None, p6]
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
+160: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+178: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x4344068>) [p4, p0, p2, i3, i1, p5, None, p6]
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+187: p17 = getfield_gc_r(p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+199: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x41c6b00>) [p5, p0, None, None, i1, None, p4, None]
+217: p19 = getfield_gc_r(p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+221: guard_nonnull_class(p19, ConstClass(W_Bignum), descr=<Guard0x41c6b60>) [p5, p0, None, None, i1, None, p4, None]
+240: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+244: jump(p4, i1, p0, p5, p17, p19, p21, descr=TargetToken(69318144))
+304: --end of the loop--
[3e4c0697fae2a62] jit-log-opt-bridge}
[3e4c069806f75b0] {jit-backend
[3e4c0698092c503] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab
[3e4c0698095a784] jit-backend-dump}
[3e4c06980966059] {jit-backend-addr
Loop 5 ((let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 d)) has address 0x7ff2522ab56d to 0x7ff2522ac5d0 (bootstrap 0x7ff2522ab4e0)
       gc table: 0x7ff2522ab140
       function: 0x7ff2522ab4e0
         resops: 0x7ff2522ab56d
       failures: 0x7ff2522ac5d0
            end: 0x7ff2522ad3e3
[3e4c0698096915c] jit-backend-addr}
[3e4c0698096d9f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab584 +0  6F120000
[3e4c0698096ee36] jit-backend-dump}
[3e4c069809724a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab59a +0  75120000
[3e4c06980973325] jit-backend-dump}
[3e4c069809768c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab5ad +0  9A120000
[3e4c06980977648] jit-backend-dump}
[3e4c0698097a72d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab5bd +0  A6120000
[3e4c0698097b483] jit-backend-dump}
[3e4c0698097e497] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab5d1 +0  AE120000
[3e4c0698097f1c2] jit-backend-dump}
[3e4c069809821a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab5e2 +0  B9120000
[3e4c06980982eda] jit-backend-dump}
[3e4c06980985e2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab5f9 +0  BE120000
[3e4c06980986b1f] jit-backend-dump}
[3e4c06980989b12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab662 +0  71120000
[3e4c0698098a82d] jit-backend-dump}
[3e4c0698098d836] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab6c5 +0  2A120000
[3e4c0698098e54b] jit-backend-dump}
[3e4c06980991499] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab6d3 +0  38120000
[3e4c069809921b8] jit-backend-dump}
[3e4c069809951ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab6dc +0  4B120000
[3e4c06980995efd] jit-backend-dump}
[3e4c06980998e76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab72a +0  19120000
[3e4c06980999b67] jit-backend-dump}
[3e4c0698099cb10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab778 +0  E7110000
[3e4c0698099d7fb] jit-backend-dump}
[3e4c069809a0a27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab786 +0  F5110000
[3e4c069809a171b] jit-backend-dump}
[3e4c069809a4824] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab78f +0  08120000
[3e4c069809a5567] jit-backend-dump}
[3e4c069809a85b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab7eb +0  C8110000
[3e4c069809a930c] jit-backend-dump}
[3e4c069809ac2a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab7f9 +0  D6110000
[3e4c069809acfa6] jit-backend-dump}
[3e4c069809aff47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab84e +0  9D110000
[3e4c069809b0c37] jit-backend-dump}
[3e4c069809b3b64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab85c +0  AB110000
[3e4c069809b4857] jit-backend-dump}
[3e4c069809b7813] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab879 +0  AA110000
[3e4c069809b8504] jit-backend-dump}
[3e4c069809bb41b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab8d5 +0  6A110000
[3e4c069809bc1ba] jit-backend-dump}
[3e4c069809bf179] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab8e3 +0  78110000
[3e4c069809bfe70] jit-backend-dump}
[3e4c069809c2d71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab8f7 +0  80110000
[3e4c069809c3a62] jit-backend-dump}
[3e4c069809c694e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab900 +0  93110000
[3e4c069809c7648] jit-backend-dump}
[3e4c069809ca543] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab909 +0  A6110000
[3e4c069809cb240] jit-backend-dump}
[3e4c069809ce13e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab95a +0  71110000
[3e4c069809cee32] jit-backend-dump}
[3e4c069809d1d24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab973 +0  74110000
[3e4c069809d2a4f] jit-backend-dump}
[3e4c069809d5966] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab97d +0  86110000
[3e4c069809d665d] jit-backend-dump}
[3e4c069809d9552] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab98b +0  94110000
[3e4c069809da243] jit-backend-dump}
[3e4c069809dd135] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab9ae +0  8D110000
[3e4c069809dde2c] jit-backend-dump}
[3e4c069809e0d1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab9c9 +0  8E110000
[3e4c069809e1a0e] jit-backend-dump}
[3e4c069809e49a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab9dd +0  96110000
[3e4c069809e5693] jit-backend-dump}
[3e4c069809e859e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab9f3 +0  9C110000
[3e4c069809e92aa] jit-backend-dump}
[3e4c069809ec21a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aba01 +0  AA110000
[3e4c069809ecf1d] jit-backend-dump}
[3e4c069809efe15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aba13 +0  B4110000
[3e4c069809f0b09] jit-backend-dump}
[3e4c069809f3a4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aba27 +0  BC110000
[3e4c069809f4732] jit-backend-dump}
[3e4c069809f764f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aba3e +0  C1110000
[3e4c069809f8346] jit-backend-dump}
[3e4c069809fb2b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abac1 +0  5A110000
[3e4c069809fbfb2] jit-backend-dump}
[3e4c069809feeb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abacf +0  68110000
[3e4c069809ffb9e] jit-backend-dump}
[3e4c06980a02baa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abaed +0  66110000
[3e4c06980a038ed] jit-backend-dump}
[3e4c06980a068e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abaf6 +0  79110000
[3e4c06980a075e0] jit-backend-dump}
[3e4c06980a0a5cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abb40 +0  4B110000
[3e4c06980a0b2fb] jit-backend-dump}
[3e4c06980a0e2b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abb8e +0  19110000
[3e4c06980a0efb7] jit-backend-dump}
[3e4c06980a11ec8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abb9c +0  27110000
[3e4c06980a12bbb] jit-backend-dump}
[3e4c06980a15b00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abbf8 +0  E7100000
[3e4c06980a167f4] jit-backend-dump}
[3e4c06980a197ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abc06 +0  F5100000
[3e4c06980a1a4ea] jit-backend-dump}
[3e4c06980a1d472] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abc13 +0  04110000
[3e4c06980a1e175] jit-backend-dump}
[3e4c06980a21137] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abc1c +0  17110000
[3e4c06980a21e5f] jit-backend-dump}
[3e4c06980a24e9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abc25 +0  2A110000
[3e4c06980a25b95] jit-backend-dump}
[3e4c06980a28a9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abc7a +0  F1100000
[3e4c06980a2979d] jit-backend-dump}
[3e4c06980a2cb3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abc93 +0  F4100000
[3e4c06980a2d835] jit-backend-dump}
[3e4c06980a30877] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abc9d +0  06110000
[3e4c06980a31577] jit-backend-dump}
[3e4c06980a3450c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abcab +0  14110000
[3e4c06980a35233] jit-backend-dump}
[3e4c06980a38169] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abcc9 +0  12110000
[3e4c06980a38e53] jit-backend-dump}
[3e4c06980a3bd8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abd13 +0  E4100000
[3e4c06980a3ca9b] jit-backend-dump}
[3e4c06980a3f9c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abd68 +0  AB100000
[3e4c06980a406b8] jit-backend-dump}
[3e4c06980a43646] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abd76 +0  B9100000
[3e4c06980a4433d] jit-backend-dump}
[3e4c06980a4723e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abdc7 +0  84100000
[3e4c06980a47f35] jit-backend-dump}
[3e4c06980a4af19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abdd5 +0  92100000
[3e4c06980a4bc1c] jit-backend-dump}
[3e4c06980a4eb3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abded +0  96100000
[3e4c06980a4f836] jit-backend-dump}
[3e4c06980a5278d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abdf6 +0  A9100000
[3e4c06980a5348a] jit-backend-dump}
[3e4c06980a563a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abdff +0  BC100000
[3e4c06980a5708e] jit-backend-dump}
[3e4c06980a59fb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abe09 +0  CE100000
[3e4c06980a5acc1] jit-backend-dump}
[3e4c06980a5dbe1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abe60 +0  93100000
[3e4c06980a5e8ce] jit-backend-dump}
[3e4c06980a6182f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abe78 +0  97100000
[3e4c06980a62519] jit-backend-dump}
[3e4c06980a6556b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abe82 +0  A9100000
[3e4c06980a66268] jit-backend-dump}
[3e4c06980a692dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abe90 +0  B7100000
[3e4c06980a69fc9] jit-backend-dump}
[3e4c06980a6cee3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abede +0  85100000
[3e4c06980a6dbd1] jit-backend-dump}
[3e4c06980a70afa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abeec +0  93100000
[3e4c06980a717f7] jit-backend-dump}
[3e4c06980a74770] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abef5 +0  A6100000
[3e4c06980a75466] jit-backend-dump}
[3e4c06980a78377] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abefe +0  B9100000
[3e4c06980a790e2] jit-backend-dump}
[3e4c06980a7f203] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abf53 +0  80100000
[3e4c06980a80097] jit-backend-dump}
[3e4c06980a83a63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abf6b +0  84100000
[3e4c06980a847f2] jit-backend-dump}
[3e4c06980a87b44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abf75 +0  96100000
[3e4c06980a88838] jit-backend-dump}
[3e4c06980a8ba30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abf83 +0  A4100000
[3e4c06980a8c73f] jit-backend-dump}
[3e4c06980a8f81b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abf8c +0  B7100000
[3e4c06980a9052a] jit-backend-dump}
[3e4c06980a936ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abf99 +0  C6100000
[3e4c06980a943c9] jit-backend-dump}
[3e4c06980a974fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abfea +0  91100000
[3e4c06980a981e8] jit-backend-dump}
[3e4c06980a9b1c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522abff7 +0  A0100000
[3e4c06980a9bea4] jit-backend-dump}
[3e4c06980a9ef67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac014 +0  9F100000
[3e4c06980a9fc67] jit-backend-dump}
[3e4c06980aa2caa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac074 +0  5B100000
[3e4c06980aa3994] jit-backend-dump}
[3e4c06980aa69ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac082 +0  69100000
[3e4c06980aa7697] jit-backend-dump}
[3e4c06980aaa684] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac0db +0  2C100000
[3e4c06980aab343] jit-backend-dump}
[3e4c06980aae367] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac0e9 +0  3A100000
[3e4c06980aaf033] jit-backend-dump}
[3e4c06980ab1ffc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac106 +0  39100000
[3e4c06980ab2cbb] jit-backend-dump}
[3e4c06980ab5c6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac113 +0  48100000
[3e4c06980ab693d] jit-backend-dump}
[3e4c06980ab98cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac16b +0  0C100000
[3e4c06980aba5ad] jit-backend-dump}
[3e4c06980abd560] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac1b9 +0  DA0F0000
[3e4c06980abe222] jit-backend-dump}
[3e4c06980ac1225] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac1c7 +0  E80F0000
[3e4c06980ac1f06] jit-backend-dump}
[3e4c06980ac4f77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac21c +0  AF0F0000
[3e4c06980ac5c77] jit-backend-dump}
[3e4c06980ac8c70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac22a +0  BD0F0000
[3e4c06980ac9973] jit-backend-dump}
[3e4c06980acc8fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac234 +0  CF0F0000
[3e4c06980acd5ca] jit-backend-dump}
[3e4c06980ad058f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac23d +0  E20F0000
[3e4c06980ad1264] jit-backend-dump}
[3e4c06980ad4211] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac246 +0  F50F0000
[3e4c06980ad4eda] jit-backend-dump}
[3e4c06980ad7eef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac29b +0  BC0F0000
[3e4c06980ad8bb8] jit-backend-dump}
[3e4c06980adbb98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac2b3 +0  C00F0000
[3e4c06980adc8ba] jit-backend-dump}
[3e4c06980adf8f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac2bd +0  D20F0000
[3e4c06980ae05d2] jit-backend-dump}
[3e4c06980ae3602] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac2cb +0  E00F0000
[3e4c06980ae42cb] jit-backend-dump}
[3e4c06980ae7304] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac2d5 +0  F20F0000
[3e4c06980ae7fd0] jit-backend-dump}
[3e4c06980aeafeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac2de +0  05100000
[3e4c06980aebcb7] jit-backend-dump}
[3e4c06980aeecb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac2eb +0  14100000
[3e4c06980aef97f] jit-backend-dump}
[3e4c06980af2966] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac347 +0  D40F0000
[3e4c06980af3651] jit-backend-dump}
[3e4c06980af6647] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac355 +0  E20F0000
[3e4c06980af7316] jit-backend-dump}
[3e4c06980afa30c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac379 +0  DA0F0000
[3e4c06980afb00c] jit-backend-dump}
[3e4c06980afe070] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac3b0 +0  BF0F0000
[3e4c06980afed73] jit-backend-dump}
[3e4c06980b01d70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac40d +0  7E0F0000
[3e4c06980b02a3f] jit-backend-dump}
[3e4c06980b05a16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac41b +0  8C0F0000
[3e4c06980b066dc] jit-backend-dump}
[3e4c06980b096cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ac441 +0  820F0000
[3e4c06980b0a3a1] jit-backend-dump}
[3e4c06980b0dfe0] jit-backend}
[3e4c06980b11e4e] {jit-log-opt-loop
# Loop 5 ((let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 d)) : entry bridge with 386 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 d)')
+1077: guard_class(p1, 16435920, descr=<Guard0x41c6bc0>) [p0, p1]
+1096: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1100: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x41c6c20>) [p0, p1]
debug_merge_point(0, 0, '(- y 1)')
+1118: guard_not_invalidated(descr=<Guard0x43440b0>) [p0, p1]
+1118: guard_class(p0, 16499664, descr=<Guard0x43440f8>) [p0, p1]
+1137: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1141: guard_class(p6, 16482208, descr=<Guard0x4344140>) [p0, p1]
+1153: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1164: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x4344188>) [p0, p1]
+1173: i10 = getfield_gc_i(p6, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1177: i12 = int_sub_ovf(i10, 1)
+1184: guard_no_overflow(descr=<Guard0x43441d0>) [p0, p1]
debug_merge_point(0, 0, '(let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))')
debug_merge_point(0, 0, '(expt g AppRand2)')
+1190: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1194: guard_nonnull_class(p13, ConstClass(W_Bignum), descr=<Guard0x41c6c80>) [p0, p1]
+1213: p16 = call_r(ConstClass(fromint), i12, descr=<Callr 8 i EF=3>)
+1303: guard_no_exception(descr=<Guard0x41c6ce0>) [p16, p13, i12, p1, p0, p3]
+1318: p17 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1329: p19 = call_r(ConstClass(rbigint.pow), p17, p16, descr=<Callr 8 rr EF=4>)
+1402: guard_no_exception(descr=<Guard0x41c6d40>) [p19, i12, p1, p0, p3]
+1417: i20 = getfield_gc_i(p19, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1421: i22 = int_gt(i20, 2)
+1425: guard_true(i22, descr=<Guard0x4344218>) [p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))))')
debug_merge_point(0, 0, '(* a y)')
+1431: i23 = int_is_true(i10)
+1434: guard_true(i23, descr=<Guard0x4344260>) [p19, i12, p1, p0, p3]
+1440: p25 = call_r(ConstClass(fromint), i10, descr=<Callr 8 i EF=3>)
+1503: guard_no_exception(descr=<Guard0x41c6da0>) [p25, i10, p19, None, p1, p0, p3]
+1518: p28 = call_r(ConstClass(rbigint.mul), p19, p25, descr=<Callr 8 rr EF=4>)
+1581: guard_no_exception(descr=<Guard0x41c6e00>) [p28, i10, p19, None, p1, p0, p3]
+1596: i29 = getfield_gc_i(p28, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1600: i31 = int_gt(i29, 2)
+1604: guard_true(i31, descr=<Guard0x43442a8>) [p28, i10, p19, None, p1, p0, p3]
debug_merge_point(0, 0, '(- y 1)')
debug_merge_point(0, 0, '(let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))')
debug_merge_point(0, 0, '(* a AppRand3)')
+1610: i32 = int_is_true(i12)
+1613: guard_true(i32, descr=<Guard0x43442f0>) [p28, i10, p19, None, p1, p0, p3]
+1619: p34 = call_r(ConstClass(rbigint.mul), p19, p16, descr=<Callr 8 rr EF=4>)
+1696: guard_no_exception(descr=<Guard0x41c6e60>) [p34, p28, None, p19, i12, p1, p0, p3]
+1711: i35 = getfield_gc_i(p34, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1715: i37 = int_gt(i35, 2)
+1719: guard_true(i37, descr=<Guard0x4344338>) [p34, p28, None, p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))')
debug_merge_point(0, 0, '(* g c)')
+1725: p39 = call_r(ConstClass(rbigint.mul), p17, p34, descr=<Callr 8 rr EF=4>)
+1795: guard_no_exception(descr=<Guard0x41c6ec0>) [p39, p13, p34, p28, None, p19, i12, p1, p0, p3]
+1810: i40 = getfield_gc_i(p39, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1814: i42 = int_gt(i40, 2)
+1818: guard_true(i42, descr=<Guard0x4344380>) [p39, p13, p34, p28, None, p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))')
debug_merge_point(0, 0, '(+ x4934 AppRand4)')
+1824: p43 = getfield_gc_r(p6, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1835: guard_nonnull_class(p43, ConstClass(W_Bignum), descr=<Guard0x41c6f20>) [p39, p13, p34, p28, None, p19, i12, p1, p0, p3]
+1853: p45 = getfield_gc_r(p43, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1857: p47 = call_r(ConstClass(rbigint.add), p45, p39, descr=<Callr 8 rr EF=4>)
+1930: guard_no_exception(descr=<Guard0x41c6f80>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
+1945: i48 = getfield_gc_i(p47, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1949: i50 = int_gt(i48, 2)
+1953: guard_true(i50, descr=<Guard0x43443c8>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))')
debug_merge_point(0, 0, '(quotient AppRand5 b)')
+1959: i51 = getfield_gc_i(p28, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1970: i52 = int_is_zero(i51)
+1973: guard_false(i52, descr=<Guard0x4344410>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
+1979: i53 = int_lt(i48, i29)
+1982: guard_false(i53, descr=<Guard0x4344458>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
+1988: i54 = int_eq(i48, i29)
+1991: guard_false(i54, descr=<Guard0x43444a0>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
+1997: p56 = call_r(ConstClass(_x_divrem), p47, p28, descr=<Callr 8 rr EF=5>)
+2063: guard_no_exception(descr=<Guard0x41c6fe0>) [p56, p28, p47, None, None, None, None, None, None, p19, i12, p1, p0, p3]
+2078: p57 = getfield_gc_r(p56, descr=<FieldP tuple2.item0 8 pure>)
+2082: p58 = getfield_gc_r(p56, descr=<FieldP tuple2.item1 16 pure>)
+2082: i59 = getfield_gc_i(p47, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2094: i60 = int_ne(i59, i51)
+2097: guard_false(i60, descr=<Guard0x43444e8>) [p56, p28, p47, None, None, None, None, None, None, p19, i12, p1, p0, p3]
+2103: i62 = int_lt(i59, 0)
+2107: guard_false(i62, descr=<Guard0x4344530>) [p56, p28, p47, None, None, None, None, None, None, p19, i12, p1, p0, p3]
+2113: i63 = getfield_gc_i(p57, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2117: i65 = int_gt(i63, 2)
+2121: guard_true(i65, descr=<Guard0x4344578>) [p56, p28, p47, None, None, None, None, None, None, p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([if1 (< d g)]) (if if1 (loop4937 d) g))')
debug_merge_point(0, 0, '(< d g)')
+2127: i67 = call_i(ConstClass(rbigint.lt), p57, p17, descr=<Calli 1 rr EF=0>)
+2153: guard_false(i67, descr=<Guard0x41c7040>) [i67, p57, None, None, None, None, None, None, None, None, p1, p0, p3]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, 'g')
+2162: p68 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2180: guard_value(p68, ConstPtr(ptr69), descr=<Guard0x43445c0>) [i67, p57, None, None, None, None, None, None, None, None, p1, p0, p3]
+2189: p70 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2193: p71 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))) from (< d g)')
+2197: guard_class(p71, 16437896, descr=<Guard0x4344608>) [i67, p57, None, None, None, None, None, None, None, None, p1, p0, p3]
+2209: p73 = getfield_gc_r(p71, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2213: guard_nonnull_class(p73, ConstClass(ForwardLink), descr=<Guard0x41c70a0>) [i67, p57, None, None, None, None, None, None, None, None, p1, p0, p3]
debug_merge_point(0, 0, '(- one5062 t1)')
+2231: guard_class(p70, 16500368, descr=<Guard0x4344650>) [i67, p57, None, None, None, None, None, None, None, None, p1, p0, p3]
+2245: p76 = getfield_gc_r(p70, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2250: guard_class(p76, 16478448, descr=<Guard0x4344698>) [i67, p57, None, None, None, None, None, None, None, None, p1, p0, p3]
+2263: p78 = getfield_gc_r(p76, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2274: guard_value(p78, ConstPtr(ptr79), descr=<Guard0x43446e0>) [i67, p57, None, None, None, None, None, None, None, None, p1, p0, p3]
+2283: p80 = getfield_gc_r(p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+2287: guard_nonnull_class(p80, ConstClass(W_Bignum), descr=<Guard0x41c7100>) [i67, p57, None, None, None, None, None, None, None, None, p1, p0, p3]
+2306: p82 = getfield_gc_r(p80, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2310: p84 = call_r(ConstClass(rbigint.sub), p82, p17, descr=<Callr 8 rr EF=4>)
+2422: guard_no_exception(descr=<Guard0x41c7160>) [p84, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
+2437: i85 = getfield_gc_i(p84, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2441: i87 = int_gt(i85, 2)
+2445: guard_false(i87, descr=<Guard0x4344728>) [p84, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
+2451: i89 = call_i(ConstClass(rbigint._toint_helper), p84, descr=<Calli 8 r EF=4>)
+2466: guard_no_exception(descr=<Guard0x41c71c0>) [p84, i89, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))')
debug_merge_point(0, 0, '(* one5062 AppRand45)')
+2481: i90 = int_is_true(i89)
+2484: guard_true(i90, descr=<Guard0x4344770>) [p84, i89, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
+2490: p92 = call_r(ConstClass(fromint), i89, descr=<Callr 8 i EF=3>)
+2549: guard_no_exception(descr=<Guard0x41c7220>) [p92, p80, i89, None, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
+2564: p94 = call_r(ConstClass(rbigint.mul), p82, p92, descr=<Callr 8 rr EF=4>)
+2627: guard_no_exception(descr=<Guard0x41c7280>) [p94, i89, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
+2642: i95 = getfield_gc_i(p94, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2646: i97 = int_gt(i95, 2)
+2650: guard_true(i97, descr=<Guard0x43447b8>) [p94, i89, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(+ one5062 t1)')
+2656: p99 = call_r(ConstClass(rbigint.add), p82, p17, descr=<Callr 8 rr EF=4>)
+2733: guard_no_exception(descr=<Guard0x41c72e0>) [p99, p94, None, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
+2748: i100 = getfield_gc_i(p99, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2752: i102 = int_gt(i100, 2)
+2756: guard_true(i102, descr=<Guard0x4344800>) [p99, p94, None, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))')
debug_merge_point(0, 0, '(quotient AppRand46 AppRand47)')
+2762: i103 = getfield_gc_i(p99, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2766: i104 = int_is_zero(i103)
+2769: guard_false(i104, descr=<Guard0x4344848>) [p99, p94, None, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
+2775: i105 = int_lt(i95, i100)
+2778: guard_false(i105, descr=<Guard0x4344890>) [p99, p94, None, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
+2784: i106 = int_eq(i95, i100)
+2787: guard_false(i106, descr=<Guard0x43448d8>) [p99, p94, None, p80, p70, p71, p73, None, None, None, p13, None, None, None, None, None, None, None, None]
+2793: p108 = call_r(ConstClass(_x_divrem), p94, p99, descr=<Callr 8 rr EF=5>)
+2863: guard_no_exception(descr=<Guard0x41c7340>) [p108, p99, p94, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+2878: p109 = getfield_gc_r(p108, descr=<FieldP tuple2.item0 8 pure>)
+2882: p110 = getfield_gc_r(p108, descr=<FieldP tuple2.item1 16 pure>)
+2882: i111 = getfield_gc_i(p94, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2894: i112 = int_ne(i111, i103)
+2897: guard_false(i112, descr=<Guard0x4344920>) [p108, p99, p94, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+2903: i114 = int_lt(i111, 0)
+2907: guard_false(i114, descr=<Guard0x4344968>) [p108, p99, p94, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+2913: i115 = getfield_gc_i(p109, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2917: i117 = int_gt(i115, 2)
+2921: guard_false(i117, descr=<Guard0x43449b0>) [p108, p99, p94, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+2927: i119 = call_i(ConstClass(rbigint._toint_helper), p109, descr=<Calli 8 r EF=4>)
+2942: guard_no_exception(descr=<Guard0x41c73a0>) [p109, i119, p99, p94, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))')
debug_merge_point(0, 0, '(+ one5062 t2)')
+2957: p121 = call_r(ConstClass(fromint), i119, descr=<Callr 8 i EF=3>)
+3016: guard_no_exception(descr=<Guard0x41c7400>) [p121, p80, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3031: p123 = call_r(ConstClass(rbigint.add), p82, p121, descr=<Callr 8 rr EF=4>)
+3101: guard_no_exception(descr=<Guard0x41c7460>) [p123, i119, None, None, None, p80, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3116: i124 = getfield_gc_i(p123, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3120: i126 = int_gt(i124, 2)
+3124: guard_true(i126, descr=<Guard0x43449f8>) [p123, i119, None, None, None, p80, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))')
debug_merge_point(0, 0, '(square AppRand48)')
+3130: p127 = getfield_gc_r(p76, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+3130: p129 = call_r(ConstClass(rbigint.mul), p123, p123, descr=<Callr 8 rr EF=4>)
+3196: guard_no_exception(descr=<Guard0x41c74c0>) [p129, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3211: i130 = getfield_gc_i(p129, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3215: i132 = int_gt(i130, 2)
+3219: guard_true(i132, descr=<Guard0x4344a40>) [p129, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square (quotient AppRand49 one5062))')
+3225: i133 = getfield_gc_i(p82, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3236: i134 = getfield_gc_i(p82, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+3240: i135 = int_is_zero(i134)
+3243: guard_false(i135, descr=<Guard0x4344a88>) [p129, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3249: i136 = int_lt(i130, i133)
+3252: guard_false(i136, descr=<Guard0x4344ad0>) [p129, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3258: i137 = int_eq(i130, i133)
+3261: guard_false(i137, descr=<Guard0x4344b18>) [p129, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3267: i139 = int_eq(i133, 1)
+3271: guard_false(i139, descr=<Guard0x4344b60>) [p129, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3277: p141 = call_r(ConstClass(_x_divrem), p129, p82, descr=<Callr 8 rr EF=5>)
+3349: guard_no_exception(descr=<Guard0x41c7520>) [p141, p82, p129, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3364: p142 = getfield_gc_r(p141, descr=<FieldP tuple2.item0 8 pure>)
+3368: p143 = getfield_gc_r(p141, descr=<FieldP tuple2.item1 16 pure>)
+3368: i144 = getfield_gc_i(p129, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+3379: i145 = int_ne(i144, i134)
+3382: guard_false(i145, descr=<Guard0x4344ba8>) [p141, p82, p129, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3388: i147 = int_lt(i144, 0)
+3392: guard_false(i147, descr=<Guard0x4344bf0>) [p141, p82, p129, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3398: i148 = getfield_gc_i(p142, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3402: i150 = int_gt(i148, 2)
+3406: guard_true(i150, descr=<Guard0x4344c38>) [p141, p82, p129, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(* x4969 x4969)')
+3412: p152 = call_r(ConstClass(rbigint.mul), p142, p142, descr=<Callr 8 rr EF=4>)
+3475: guard_no_exception(descr=<Guard0x41c7580>) [p152, p142, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3490: i153 = getfield_gc_i(p152, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3494: i155 = int_gt(i153, 2)
+3498: guard_true(i155, descr=<Guard0x4344c80>) [p152, p142, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(quotient AppRand50 one5062)')
+3504: i156 = int_lt(i153, i133)
+3507: guard_false(i156, descr=<Guard0x4344cc8>) [p152, p142, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3513: i157 = int_eq(i153, i133)
+3516: guard_false(i157, descr=<Guard0x4344d10>) [p152, p142, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3522: p159 = call_r(ConstClass(_x_divrem), p152, p82, descr=<Callr 8 rr EF=5>)
+3592: guard_no_exception(descr=<Guard0x41c75e0>) [p159, p82, p152, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3607: p160 = getfield_gc_r(p159, descr=<FieldP tuple2.item0 8 pure>)
+3611: p161 = getfield_gc_r(p159, descr=<FieldP tuple2.item1 16 pure>)
+3611: i162 = getfield_gc_i(p152, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+3622: i163 = int_ne(i162, i134)
+3625: guard_false(i163, descr=<Guard0x4344d58>) [p159, p82, p152, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3631: i165 = int_lt(i162, 0)
+3635: guard_false(i165, descr=<Guard0x4344da0>) [p159, p82, p152, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3641: i166 = getfield_gc_i(p160, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3645: i168 = int_gt(i166, 2)
+3649: guard_true(i168, descr=<Guard0x4344de8>) [p159, p82, p152, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(square t2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+3655: i169 = int_is_true(i119)
+3658: guard_true(i169, descr=<Guard0x4344e30>) [p159, p82, p152, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3664: i170 = int_mul_ovf(i119, i119)
+3671: guard_no_overflow(descr=<Guard0x4344e78>) [p159, p82, p152, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(+ t2 (quotient AppRand51 one5062))')
+3677: p172 = call_r(ConstClass(fromint), i170, descr=<Callr 8 i EF=3>)
+3743: guard_no_exception(descr=<Guard0x41c7640>) [p172, p80, p160, i170, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3758: i173 = getfield_gc_i(p172, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3762: i174 = int_lt(i173, i133)
+3765: guard_true(i174, descr=<Guard0x4344ec0>) [p172, p80, p160, i170, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))')
debug_merge_point(0, 0, '(+ one5062 AppRand52)')
debug_merge_point(0, 0, '(let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))')
debug_merge_point(0, 0, '(* t3 a5078)')
+3771: p175 = getfield_gc_r(p70, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+3782: guard_nonnull_class(p175, ConstClass(W_Bignum), descr=<Guard0x41c76a0>) [p172, p80, p160, i170, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3800: p177 = getfield_gc_r(p175, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3804: p179 = call_r(ConstClass(rbigint.mul), p160, p177, descr=<Callr 8 rr EF=4>)
+3881: guard_no_exception(descr=<Guard0x41c7700>) [p179, p175, p160, i170, None, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3896: i180 = getfield_gc_i(p179, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3900: i182 = int_gt(i180, 2)
+3904: guard_true(i182, descr=<Guard0x4344f08>) [p179, p175, p160, i170, None, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(* t2 t4)')
+3910: p184 = call_r(ConstClass(rbigint.mul), p121, p123, descr=<Callr 8 rr EF=4>)
+3984: guard_no_exception(descr=<Guard0x41c7760>) [p184, p179, None, p160, i170, None, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+3999: i185 = getfield_gc_i(p184, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+4003: i187 = int_gt(i185, 2)
+4007: guard_true(i187, descr=<Guard0x4344f50>) [p184, p179, None, p160, i170, None, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))')
debug_merge_point(0, 0, '(* x5080 AppRand54)')
+4013: p188 = getfield_gc_r(p70, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+4024: guard_nonnull_class(p188, ConstClass(W_Fixnum), descr=<Guard0x41c77c0>) [p184, p179, None, p160, i170, None, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4042: i190 = getfield_gc_i(p188, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+4046: i191 = int_is_true(i190)
+4049: guard_true(i191, descr=<Guard0x4344f98>) [p184, p179, None, p160, i170, None, p123, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4055: p193 = call_r(ConstClass(fromint), i190, descr=<Callr 8 i EF=3>)
+4128: guard_no_exception(descr=<Guard0x41c7820>) [p193, p188, p184, p179, None, None, None, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4143: p195 = call_r(ConstClass(rbigint.mul), p193, p184, descr=<Callr 8 rr EF=4>)
+4206: guard_no_exception(descr=<Guard0x41c7880>) [p195, p188, p184, p179, None, None, None, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4221: i196 = getfield_gc_i(p195, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+4225: i198 = int_gt(i196, 2)
+4229: guard_true(i198, descr=<Guard0x4344fe0>) [p195, p188, p184, p179, None, None, None, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))')
debug_merge_point(0, 0, '(- AppRand53 AppRand55)')
+4235: p200 = call_r(ConstClass(rbigint.sub), p179, p195, descr=<Callr 8 rr EF=4>)
+4305: guard_no_exception(descr=<Guard0x41c78e0>) [p200, p195, None, p184, p179, None, None, None, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4320: i201 = getfield_gc_i(p200, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+4324: i203 = int_gt(i201, 2)
+4328: guard_true(i203, descr=<Guard0x4345028>) [p200, p195, None, p184, p179, None, None, None, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(* 4 x5080)')
+4334: i205 = int_mul_ovf(4, i190)
+4338: guard_no_overflow(descr=<Guard0x4345070>) [p200, p195, None, p184, p179, None, None, None, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
+4344: i206 = int_lt(i201, i133)
+4347: guard_false(i206, descr=<Guard0x43450b8>) [p200, p195, None, p184, p179, None, None, None, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4353: i207 = int_eq(i201, i133)
+4356: guard_false(i207, descr=<Guard0x4345100>) [p200, p195, None, p184, p179, None, None, None, None, None, i119, None, None, None, None, p70, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4362: p209 = call_r(ConstClass(_x_divrem), p200, p82, descr=<Callr 8 rr EF=5>)
+4432: guard_no_exception(descr=<Guard0x41c7940>) [p76, p71, p209, p82, p200, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, p70, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+4447: p210 = getfield_gc_r(p209, descr=<FieldP tuple2.item0 8 pure>)
+4451: p211 = getfield_gc_r(p209, descr=<FieldP tuple2.item1 16 pure>)
+4451: i212 = getfield_gc_i(p200, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+4462: i213 = int_ne(i212, i134)
+4465: guard_false(i213, descr=<Guard0x4345148>) [p76, p71, p209, p82, p200, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, p70, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+4471: i215 = int_lt(i212, 0)
+4475: guard_false(i215, descr=<Guard0x4345190>) [p76, p71, p209, p82, p200, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, p70, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+4481: i216 = getfield_gc_i(p210, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+4485: i218 = int_gt(i216, 2)
+4489: guard_true(i218, descr=<Guard0x43451d8>) [p76, p71, p209, p82, p200, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, p70, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
debug_merge_point(0, 0, '(= y5076 0)')
+4495: i220 = int_eq(i119, 0)
+4499: guard_false(i220, descr=<Guard0x4345220>) [p76, p71, p209, p82, p200, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, p70, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
debug_merge_point(0, 0, '(* x4969 x4969)')
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+4505: i221 = int_is_true(i170)
+4508: guard_true(i221, descr=<Guard0x4345268>) [p76, p71, p209, p82, p200, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, p70, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+4514: i222 = int_mul_ovf(i170, i170)
+4521: guard_overflow(descr=<Guard0x43452b0>) [p76, p71, p209, p82, p200, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, p70, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+4527: p224 = call_r(ConstClass(rbigint.mul), p172, p172, descr=<Callr 8 rr EF=4>)
+4604: guard_no_exception(descr=<Guard0x41c79a0>) [p224, p210, p76, i205, None, None, None, None, None, None, i170, None, None, i119, None, None, None, None, None, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4619: i225 = getfield_gc_i(p224, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+4623: i227 = int_gt(i225, 2)
+4627: guard_false(i227, descr=<Guard0x43452f8>) [p224, p210, p76, i205, None, None, None, None, None, None, i170, None, None, i119, None, None, None, None, None, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4633: i229 = call_i(ConstClass(rbigint._toint_helper), p224, descr=<Calli 8 r EF=4>)
+4648: p231 = guard_exception(ConstClass(OverflowError), descr=<Guard0x41c7a00>) [p224, i229, p210, p76, i205, None, None, None, None, None, None, i170, None, None, i119, None, None, None, None, None, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+4693: p232 = getfield_gc_r(p76, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+4704: guard_nonnull_class(p232, ConstClass(W_Bignum), descr=<Guard0x41c7a60>) [p232, p224, p210, p76, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, None, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4724: p234 = getfield_gc_r(p232, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+4729: p236 = call_r(ConstClass(rbigint.sub), p234, p224, descr=<Callr 8 rr EF=4>)
+4802: guard_no_exception(descr=<Guard0x41c7ac0>) [p236, p232, p224, p210, p76, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, None, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
+4817: i237 = getfield_gc_i(p236, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+4821: i239 = int_gt(i237, 2)
+4825: guard_true(i239, descr=<Guard0x4345340>) [p236, p232, p224, p210, p76, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, None, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+4838: i242 = call_i(ConstClass(rbigint.lt), p236, ConstPtr(ptr241), descr=<Calli 1 rr EF=0>)
+4860: guard_false(i242, descr=<Guard0x41c7b20>) [i242, p236, None, None, p210, p76, i205, None, None, None, None, None, None, None, None, None, i119, None, None, None, None, None, p71, p73, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+4869: p243 = new_with_vtable(descr=<SizeDescr 32>)
+4913: p244 = new_with_vtable(descr=<SizeDescr 32>)
+4931: setfield_gc(p244, ConstPtr(ptr245), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4942: setfield_gc(p244, ConstPtr(ptr246), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+4946: p247 = new_with_vtable(descr=<SizeDescr 16>)
+4957: setfield_gc(p247, p236, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+4961: setfield_gc(p244, p247, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+4965: p248 = new_with_vtable(descr=<SizeDescr 48>)
+4977: p249 = new_with_vtable(descr=<SizeDescr 32>)
+4989: setfield_gc(p249, ConstPtr(ptr250), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4993: setfield_gc(p249, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+5001: setfield_gc(p249, p247, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+5005: p252 = new_with_vtable(descr=<SizeDescr 40>)
+5017: setfield_gc(p252, p73, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+5028: p253 = new_with_vtable(descr=<SizeDescr 40>)
+5039: setfield_gc(p253, p76, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+5050: p254 = new_with_vtable(descr=<SizeDescr 16>)
+5061: setfield_gc(p254, i119, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+5065: setfield_gc(p253, p254, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+5069: p255 = new_with_vtable(descr=<SizeDescr 16>)
+5080: setfield_gc(p255, p210, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+5091: setfield_gc(p253, p255, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+5095: p256 = new_with_vtable(descr=<SizeDescr 16>)
+5106: setfield_gc(p256, i205, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+5110: setfield_gc(p253, p256, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+5114: setfield_gc(p252, p253, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+5118: setfield_gc(p252, p71, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+5129: setfield_gc(p252, ConstPtr(ptr257), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+5140: p258 = new_with_vtable(descr=<SizeDescr 40>)
+5151: setfield_gc(p258, ConstPtr(ptr259), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+5155: setfield_gc(p258, ConstPtr(ptr260), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+5166: setfield_gc(p258, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+5174: setfield_gc(p258, p247, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+5178: setfield_gc(p248, p73, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+5183: setfield_gc(p243, p244, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+5194: setfield_gc(p248, ConstPtr(ptr262), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+5199: setfield_gc(p248, p249, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+5204: setfield_gc(p248, p252, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+5209: setfield_gc(p243, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+5217: setfield_gc(p243, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+5225: setfield_gc(p248, p258, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+5230: jump(p243, p248, descr=TargetToken(69318064))
+5264: --end of the loop--
[3e4c06980c8c053] jit-log-opt-loop}
[3e4c069811c273c] {jit-backend
[3e4c069812a22bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ad
[3e4c069812b6ac0] jit-backend-dump}
[3e4c069812c1869] {jit-backend-addr
Loop 6 ((let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 d)) has address 0x7ff2522ada3d to 0x7ff2522ae180 (bootstrap 0x7ff2522ad9b0)
       gc table: 0x7ff2522ad810
       function: 0x7ff2522ad9b0
         resops: 0x7ff2522ada3d
       failures: 0x7ff2522ae180
            end: 0x7ff2522ae806
[3e4c069812c48c1] jit-backend-addr}
[3e4c069812c8e39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ada67 +0  23080000
[3e4c069812ca261] jit-backend-dump}
[3e4c069812cd820] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ada7d +0  29080000
[3e4c069812ce6c0] jit-backend-dump}
[3e4c069812d1988] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ada90 +0  4E080000
[3e4c069812d26ea] jit-backend-dump}
[3e4c069812d588f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adaa0 +0  5A080000
[3e4c069812d65df] jit-backend-dump}
[3e4c069812d9640] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adab4 +0  62080000
[3e4c069812da334] jit-backend-dump}
[3e4c069812dd3db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adac5 +0  6D080000
[3e4c069812de0ad] jit-backend-dump}
[3e4c069812e14b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adadc +0  72080000
[3e4c069812e216d] jit-backend-dump}
[3e4c069812e52d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adb3b +0  2F080000
[3e4c069812e5fc3] jit-backend-dump}
[3e4c069812e9036] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adb9e +0  E8070000
[3e4c069812e9d58] jit-backend-dump}
[3e4c069812ece5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adbac +0  F6070000
[3e4c069812edb37] jit-backend-dump}
[3e4c069812f0c03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adbb5 +0  09080000
[3e4c069812f1903] jit-backend-dump}
[3e4c069812f4a90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adc03 +0  D7070000
[3e4c069812f5756] jit-backend-dump}
[3e4c069812f8816] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adc58 +0  9E070000
[3e4c069812f94eb] jit-backend-dump}
[3e4c069812fc540] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adc66 +0  AC070000
[3e4c069812fd20f] jit-backend-dump}
[3e4c06981300236] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adc6f +0  BF070000
[3e4c06981300f02] jit-backend-dump}
[3e4c06981303f7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adccb +0  7F070000
[3e4c06981304c32] jit-backend-dump}
[3e4c06981307c4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adcd9 +0  8D070000
[3e4c06981308907] jit-backend-dump}
[3e4c0698130b9ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522add2e +0  54070000
[3e4c0698130c680] jit-backend-dump}
[3e4c0698130f756] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522add3c +0  62070000
[3e4c06981310412] jit-backend-dump}
[3e4c06981313489] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522add59 +0  61070000
[3e4c0698131414c] jit-backend-dump}
[3e4c069813171a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522addbc +0  1A070000
[3e4c06981317e9e] jit-backend-dump}
[3e4c0698131af1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522addca +0  28070000
[3e4c0698131bbe0] jit-backend-dump}
[3e4c0698131ec5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522addde +0  30070000
[3e4c0698131f926] jit-backend-dump}
[3e4c06981322a0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adde7 +0  43070000
[3e4c069813236c4] jit-backend-dump}
[3e4c06981326781] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522addf0 +0  56070000
[3e4c06981327444] jit-backend-dump}
[3e4c0698132a471] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ade44 +0  1E070000
[3e4c0698132b12e] jit-backend-dump}
[3e4c0698132e1d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ade5c +0  22070000
[3e4c0698132ee98] jit-backend-dump}
[3e4c06981331ef6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ade66 +0  34070000
[3e4c06981332bb6] jit-backend-dump}
[3e4c06981335c14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ade74 +0  42070000
[3e4c069813368d1] jit-backend-dump}
[3e4c0698133997c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ade97 +0  3B070000
[3e4c0698133a638] jit-backend-dump}
[3e4c0698133d7a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adf09 +0  01070000
[3e4c0698133e48b] jit-backend-dump}
[3e4c069813415b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adf17 +0  0F070000
[3e4c0698134227c] jit-backend-dump}
[3e4c06981345308] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adf6c +0  D6060000
[3e4c06981345fce] jit-backend-dump}
[3e4c0698134905d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adf7a +0  E4060000
[3e4c06981349d20] jit-backend-dump}
[3e4c0698134cde6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adfd3 +0  A7060000
[3e4c0698134daaf] jit-backend-dump}
[3e4c06981350baf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522adfe1 +0  B5060000
[3e4c069813518b5] jit-backend-dump}
[3e4c06981354947] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae036 +0  7C060000
[3e4c06981355626] jit-backend-dump}
[3e4c0698135876c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae044 +0  8A060000
[3e4c0698135946f] jit-backend-dump}
[3e4c0698135c5e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae099 +0  51060000
[3e4c0698135d2ce] jit-backend-dump}
[3e4c0698136038b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae0a7 +0  5F060000
[3e4c0698136106a] jit-backend-dump}
[3e4c069813640c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae0bb +0  67060000
[3e4c06981364d88] jit-backend-dump}
[3e4c06981367e54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae0c4 +0  7A060000
[3e4c06981368b0a] jit-backend-dump}
[3e4c0698136bb6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae0cd +0  8D060000
[3e4c0698136c856] jit-backend-dump}
[3e4c0698136f984] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae121 +0  55060000
[3e4c0698137067b] jit-backend-dump}
[3e4c069813736ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae139 +0  59060000
[3e4c069813743cd] jit-backend-dump}
[3e4c0698137745f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae143 +0  6B060000
[3e4c06981378122] jit-backend-dump}
[3e4c0698137b17d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae151 +0  79060000
[3e4c0698137be49] jit-backend-dump}
[3e4c0698137eee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae171 +0  75060000
[3e4c0698137fba1] jit-backend-dump}
[3e4c0698138388e] jit-backend}
[3e4c0698138754d] {jit-log-opt-loop
# Loop 6 ((let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 d)) : loop with 160 ops
[p0, p1]
+565: label(p0, p1, descr=TargetToken(69318224))
+584: guard_class(p1, 16435920, descr=<Guard0x41c7b80>) [p0, p1]
+603: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+607: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x41c7be0>) [p0, p1]
debug_merge_point(0, 0, '(- y 1)')
+625: guard_not_invalidated(descr=<Guard0x4345388>) [p0, p1]
+625: guard_class(p0, 16499664, descr=<Guard0x43453d0>) [p0, p1]
+644: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+648: guard_class(p6, 16482208, descr=<Guard0x4345418>) [p0, p1]
+660: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+671: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x4345460>) [p0, p1]
+680: i10 = getfield_gc_i(p6, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+684: i12 = int_sub_ovf(i10, 1)
+691: guard_no_overflow(descr=<Guard0x43454a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))')
debug_merge_point(0, 0, '(expt g AppRand2)')
+697: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+701: guard_nonnull_class(p13, ConstClass(W_Bignum), descr=<Guard0x41c7c40>) [p0, p1]
+720: p16 = call_r(ConstClass(fromint), i12, descr=<Callr 8 i EF=3>)
+800: guard_no_exception(descr=<Guard0x41c7ca0>) [p16, p13, i12, p1, p0, p3]
+815: p17 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+826: p19 = call_r(ConstClass(rbigint.pow), p17, p16, descr=<Callr 8 rr EF=4>)
+899: guard_no_exception(descr=<Guard0x41c7d00>) [p19, i12, p1, p0, p3]
+914: i20 = getfield_gc_i(p19, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+918: i22 = int_gt(i20, 2)
+922: guard_true(i22, descr=<Guard0x43454f0>) [p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))))')
debug_merge_point(0, 0, '(* a y)')
+928: i23 = int_is_true(i10)
+931: guard_true(i23, descr=<Guard0x4345538>) [p19, i12, p1, p0, p3]
+937: p25 = call_r(ConstClass(fromint), i10, descr=<Callr 8 i EF=3>)
+1000: guard_no_exception(descr=<Guard0x41c7d60>) [p25, i10, p19, None, p1, p0, p3]
+1015: p28 = call_r(ConstClass(rbigint.mul), p19, p25, descr=<Callr 8 rr EF=4>)
+1085: guard_no_exception(descr=<Guard0x41c7dc0>) [p28, i10, p19, None, p1, p0, p3]
+1100: i29 = getfield_gc_i(p28, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1104: i31 = int_gt(i29, 2)
+1108: guard_true(i31, descr=<Guard0x4345580>) [p28, i10, p19, None, p1, p0, p3]
debug_merge_point(0, 0, '(- y 1)')
debug_merge_point(0, 0, '(let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))')
debug_merge_point(0, 0, '(* a AppRand3)')
+1114: i32 = int_is_true(i12)
+1117: guard_true(i32, descr=<Guard0x43455c8>) [p28, i10, p19, None, p1, p0, p3]
+1123: p34 = call_r(ConstClass(rbigint.mul), p19, p16, descr=<Callr 8 rr EF=4>)
+1200: guard_no_exception(descr=<Guard0x41c7e20>) [p34, p28, None, p19, i12, p1, p0, p3]
+1215: i35 = getfield_gc_i(p34, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1219: i37 = int_gt(i35, 2)
+1223: guard_true(i37, descr=<Guard0x4345610>) [p34, p28, None, p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))')
debug_merge_point(0, 0, '(* g c)')
+1229: p39 = call_r(ConstClass(rbigint.mul), p17, p34, descr=<Callr 8 rr EF=4>)
+1299: guard_no_exception(descr=<Guard0x41c7e80>) [p39, p13, p34, p28, None, p19, i12, p1, p0, p3]
+1314: i40 = getfield_gc_i(p39, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1318: i42 = int_gt(i40, 2)
+1322: guard_true(i42, descr=<Guard0x4345658>) [p39, p13, p34, p28, None, p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))')
debug_merge_point(0, 0, '(+ x4934 AppRand4)')
+1328: p43 = getfield_gc_r(p6, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1339: guard_nonnull_class(p43, ConstClass(W_Bignum), descr=<Guard0x41c7ee0>) [p39, p13, p34, p28, None, p19, i12, p1, p0, p3]
+1357: p45 = getfield_gc_r(p43, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1361: p47 = call_r(ConstClass(rbigint.add), p45, p39, descr=<Callr 8 rr EF=4>)
+1441: guard_no_exception(descr=<Guard0x41c7f40>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
+1456: i48 = getfield_gc_i(p47, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1460: i50 = int_gt(i48, 2)
+1464: guard_true(i50, descr=<Guard0x43456a0>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))')
debug_merge_point(0, 0, '(quotient AppRand5 b)')
+1470: i51 = getfield_gc_i(p28, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1481: i52 = int_is_zero(i51)
+1484: guard_false(i52, descr=<Guard0x43456e8>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
+1490: i53 = int_lt(i48, i29)
+1493: guard_false(i53, descr=<Guard0x4345730>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
+1499: i54 = int_eq(i48, i29)
+1502: guard_false(i54, descr=<Guard0x4345778>) [p47, p43, p39, None, None, p28, None, p19, i12, p1, p0, p3]
+1508: p56 = call_r(ConstClass(_x_divrem), p47, p28, descr=<Callr 8 rr EF=5>)
+1577: guard_no_exception(descr=<Guard0x41c7fa0>) [p56, p28, p47, None, None, None, None, None, None, p19, i12, p1, p0, p3]
+1592: p57 = getfield_gc_r(p56, descr=<FieldP tuple2.item0 8 pure>)
+1596: p58 = getfield_gc_r(p56, descr=<FieldP tuple2.item1 16 pure>)
+1596: i59 = getfield_gc_i(p47, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1607: i60 = int_ne(i59, i51)
+1610: guard_false(i60, descr=<Guard0x43457c0>) [p56, p28, p47, None, None, None, None, None, None, p19, i12, p1, p0, p3]
+1616: i62 = int_lt(i59, 0)
+1620: guard_false(i62, descr=<Guard0x4345808>) [p56, p28, p47, None, None, None, None, None, None, p19, i12, p1, p0, p3]
+1626: i63 = getfield_gc_i(p57, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1630: i65 = int_gt(i63, 2)
+1634: guard_true(i65, descr=<Guard0x4345850>) [p56, p28, p47, None, None, None, None, None, None, p19, i12, p1, p0, p3]
debug_merge_point(0, 0, '(let ([if1 (< d g)]) (if if1 (loop4937 d) g))')
debug_merge_point(0, 0, '(< d g)')
+1640: i67 = call_i(ConstClass(rbigint.lt), p57, p17, descr=<Calli 1 rr EF=0>)
+1666: guard_true(i67, descr=<Guard0x4356020>) [i67, p57, None, None, None, None, None, None, None, None, p1, p0, p3]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, '(loop4937 d)')
debug_merge_point(0, 0, '(let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 d)')
+1675: label(p6, p57, p1, p3, i12, p16, i10, p25, p43, p45, descr=TargetToken(69318304))
debug_merge_point(0, 0, '(- y 1)')
+1704: guard_not_invalidated(descr=<Guard0x4356080>) [p57, p6, p1, p3]
debug_merge_point(0, 0, '(let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))')
debug_merge_point(0, 0, '(expt g AppRand2)')
+1704: p69 = call_r(ConstClass(rbigint.pow), p57, p16, descr=<Callr 8 rr EF=4>)
+1774: guard_no_exception(descr=<Guard0x43560e0>) [p69, i12, p57, p6, p1, p3]
+1789: i70 = getfield_gc_i(p69, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1793: i72 = int_gt(i70, 2)
+1797: guard_true(i72, descr=<Guard0x4345898>) [p69, i12, p57, p6, p1, p3]
debug_merge_point(0, 0, '(let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))))')
debug_merge_point(0, 0, '(* a y)')
+1803: p74 = call_r(ConstClass(rbigint.mul), p69, p25, descr=<Callr 8 rr EF=4>)
+1873: guard_no_exception(descr=<Guard0x4356140>) [p74, i10, p69, None, p57, p6, p1, p3]
+1888: i75 = getfield_gc_i(p74, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1892: i77 = int_gt(i75, 2)
+1896: guard_true(i77, descr=<Guard0x43458e0>) [p74, i10, p69, None, p57, p6, p1, p3]
debug_merge_point(0, 0, '(- y 1)')
debug_merge_point(0, 0, '(let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))')
debug_merge_point(0, 0, '(* a AppRand3)')
+1902: p79 = call_r(ConstClass(rbigint.mul), p69, p16, descr=<Callr 8 rr EF=4>)
+1976: guard_no_exception(descr=<Guard0x43561a0>) [p79, p74, None, p69, i12, p57, p6, p1, p3]
+1991: i80 = getfield_gc_i(p79, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1995: i82 = int_gt(i80, 2)
+1999: guard_true(i82, descr=<Guard0x4345928>) [p79, p74, None, p69, i12, p57, p6, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))')
debug_merge_point(0, 0, '(* g c)')
+2005: p84 = call_r(ConstClass(rbigint.mul), p57, p79, descr=<Callr 8 rr EF=4>)
+2075: guard_no_exception(descr=<Guard0x4356200>) [p84, p79, p74, None, p69, i12, p57, p6, p1, p3]
+2090: i85 = getfield_gc_i(p84, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2094: i87 = int_gt(i85, 2)
+2098: guard_true(i87, descr=<Guard0x4345970>) [p84, p79, p74, None, p69, i12, p57, p6, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))')
debug_merge_point(0, 0, '(+ x4934 AppRand4)')
+2104: p89 = call_r(ConstClass(rbigint.add), p45, p84, descr=<Callr 8 rr EF=4>)
+2174: guard_no_exception(descr=<Guard0x4356260>) [p89, p43, p84, None, p74, None, p69, i12, p57, p6, p1, p3]
+2189: i90 = getfield_gc_i(p89, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2193: i92 = int_gt(i90, 2)
+2197: guard_true(i92, descr=<Guard0x43459b8>) [p89, p43, p84, None, p74, None, p69, i12, p57, p6, p1, p3]
debug_merge_point(0, 0, '(let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))')
debug_merge_point(0, 0, '(quotient AppRand5 b)')
+2203: i93 = getfield_gc_i(p74, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2214: i94 = int_is_zero(i93)
+2217: guard_false(i94, descr=<Guard0x4345a00>) [p89, p43, p84, None, p74, None, p69, i12, p57, p6, p1, p3]
+2223: i95 = int_lt(i90, i75)
+2226: guard_false(i95, descr=<Guard0x4345a48>) [p89, p43, p84, None, p74, None, p69, i12, p57, p6, p1, p3]
+2232: i96 = int_eq(i90, i75)
+2235: guard_false(i96, descr=<Guard0x4345a90>) [p89, p43, p84, None, p74, None, p69, i12, p57, p6, p1, p3]
+2241: p98 = call_r(ConstClass(_x_divrem), p89, p74, descr=<Callr 8 rr EF=5>)
+2310: guard_no_exception(descr=<Guard0x43562c0>) [p98, p74, p89, None, None, None, None, None, p69, i12, p57, p6, p1, p3]
+2325: p99 = getfield_gc_r(p98, descr=<FieldP tuple2.item0 8 pure>)
+2329: p100 = getfield_gc_r(p98, descr=<FieldP tuple2.item1 16 pure>)
+2329: i101 = getfield_gc_i(p89, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2340: i102 = int_ne(i101, i93)
+2343: guard_false(i102, descr=<Guard0x4345ad8>) [p98, p74, p89, None, None, None, None, None, p69, i12, p57, p6, p1, p3]
+2349: i104 = int_lt(i101, 0)
+2353: guard_false(i104, descr=<Guard0x4345b20>) [p98, p74, p89, None, None, None, None, None, p69, i12, p57, p6, p1, p3]
+2359: i105 = getfield_gc_i(p99, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2363: i107 = int_gt(i105, 2)
+2367: guard_true(i107, descr=<Guard0x4345b68>) [p98, p74, p89, None, None, None, None, None, p69, i12, p57, p6, p1, p3]
debug_merge_point(0, 0, '(let ([if1 (< d g)]) (if if1 (loop4937 d) g))')
debug_merge_point(0, 0, '(< d g)')
+2373: i109 = call_i(ConstClass(rbigint.lt), p99, p57, descr=<Calli 1 rr EF=0>)
+2396: guard_true(i109, descr=<Guard0x4356320>) [i109, p99, None, None, None, None, None, None, None, p57, p6, p1, p3]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, '(loop4937 d)')
debug_merge_point(0, 0, '(let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 d)')
+2405: jump(p6, p99, p1, p3, i12, p16, i10, p25, p43, p45, descr=TargetToken(69318304))
+2416: --end of the loop--
[3e4c0698140d1a7] jit-log-opt-loop}
[3e4c069814192ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ab4e0 +0  49BBB0D92A52F27F000041FFE3
[3e4c0698141ae5e] jit-backend-dump}
[3e4c06981dc7af1] {jit-backend
[3e4c06981f03b12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aebe
[3e4c06981f1367b] jit-backend-dump}
[3e4c06981f1e77f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aed74 +0  29000000
[3e4c06981f1fca2] jit-backend-dump}
[3e4c06981f23bc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af455 +0  29000000
[3e4c06981f24b88] jit-backend-dump}
[3e4c06981f27cf6] {jit-backend-addr
bridge out of Guard 0x41c6560 has address 0x7ff2522aed70 to 0x7ff2522af450
       gc table: 0x7ff2522aebe0
    jump target: 0x7ff2522aed70
         resops: 0x7ff2522aed7e
       failures: 0x7ff2522af450
            end: 0x7ff2522afa48
[3e4c06981f2a1df] jit-backend-addr}
[3e4c06981f2d6ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aed8b +0  9B070000
[3e4c06981f2e52a] jit-backend-dump}
[3e4c06981f318bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aeda6 +0  B8070000
[3e4c06981f32608] jit-backend-dump}
[3e4c06981f3567f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aedc6 +0  B4070000
[3e4c06981f363d8] jit-backend-dump}
[3e4c06981f395d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aedd3 +0  C3070000
[3e4c06981f3a2d0] jit-backend-dump}
[3e4c06981f3d331] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aedea +0  C8070000
[3e4c06981f3e01b] jit-backend-dump}
[3e4c06981f4101e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aedf8 +0  D6070000
[3e4c06981f41d1e] jit-backend-dump}
[3e4c06981f44cca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aee09 +0  E1070000
[3e4c06981f459dd] jit-backend-dump}
[3e4c06981f48a94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aee19 +0  ED070000
[3e4c06981f497ac] jit-backend-dump}
[3e4c06981f4c7df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aee22 +0  00080000
[3e4c06981f4d4f8] jit-backend-dump}
[3e4c06981f5049b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aee51 +0  ED070000
[3e4c06981f511b4] jit-backend-dump}
[3e4c06981f5429f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aeeac +0  AE070000
[3e4c06981f54f7d] jit-backend-dump}
[3e4c06981f57f9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aeed1 +0  A5070000
[3e4c06981f58cb3] jit-backend-dump}
[3e4c06981f5bd98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aef21 +0  71070000
[3e4c06981f5ca95] jit-backend-dump}
[3e4c06981f5fad8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aef2a +0  84070000
[3e4c06981f607ed] jit-backend-dump}
[3e4c06981f63879] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aef3b +0  8F070000
[3e4c06981f64567] jit-backend-dump}
[3e4c06981f6756c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aef50 +0  96070000
[3e4c06981f68241] jit-backend-dump}
[3e4c06981f6b164] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aef62 +0  9A070000
[3e4c06981f6be40] jit-backend-dump}
[3e4c06981f6ed56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aefb7 +0  61070000
[3e4c06981f6fa32] jit-backend-dump}
[3e4c06981f72967] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af008 +0  2C070000
[3e4c06981f7363f] jit-backend-dump}
[3e4c06981f76559] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af016 +0  3A070000
[3e4c06981f77225] jit-backend-dump}
[3e4c06981f7a164] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af032 +0  3A070000
[3e4c06981f7ae4b] jit-backend-dump}
[3e4c06981f7dd5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af04b +0  3D070000
[3e4c06981f7ea34] jit-backend-dump}
[3e4c06981f81954] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af05d +0  47070000
[3e4c06981f82648] jit-backend-dump}
[3e4c06981f85546] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af0ae +0  12070000
[3e4c06981f8621f] jit-backend-dump}
[3e4c06981f890ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af103 +0  D9060000
[3e4c06981f89dc1] jit-backend-dump}
[3e4c06981f8ccfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af111 +0  E7060000
[3e4c06981f8d9c6] jit-backend-dump}
[3e4c06981f90899] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af11a +0  FA060000
[3e4c06981f91587] jit-backend-dump}
[3e4c06981f9448b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af168 +0  C8060000
[3e4c06981f95167] jit-backend-dump}
[3e4c06981f9806e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af1bd +0  8F060000
[3e4c06981f98d46] jit-backend-dump}
[3e4c06981f9bce4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af1cb +0  9D060000
[3e4c06981f9c9db] jit-backend-dump}
[3e4c06981f9f8d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af1d4 +0  B0060000
[3e4c06981fa05ae] jit-backend-dump}
[3e4c06981fa34a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af22d +0  73060000
[3e4c06981fa418e] jit-backend-dump}
[3e4c06981fa746b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af23b +0  81060000
[3e4c06981fa814a] jit-backend-dump}
[3e4c06981fab115] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af290 +0  48060000
[3e4c06981fabde1] jit-backend-dump}
[3e4c06981faecf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af29e +0  56060000
[3e4c06981faf9ca] jit-backend-dump}
[3e4c06981fb2933] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af2bc +0  54060000
[3e4c06981fb3640] jit-backend-dump}
[3e4c06981fb65a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af31f +0  0D060000
[3e4c06981fb7272] jit-backend-dump}
[3e4c06981fba1c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af32d +0  1B060000
[3e4c06981fbaf03] jit-backend-dump}
[3e4c06981fbde9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af341 +0  23060000
[3e4c06981fbeb85] jit-backend-dump}
[3e4c06981fc1ad6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af34a +0  36060000
[3e4c06981fc27ae] jit-backend-dump}
[3e4c06981fc56ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af353 +0  49060000
[3e4c06981fc63e4] jit-backend-dump}
[3e4c06981fc92f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af3a4 +0  14060000
[3e4c06981fc9fc6] jit-backend-dump}
[3e4c06981fccef0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af3bd +0  17060000
[3e4c06981fcdbc5] jit-backend-dump}
[3e4c06981fd0b34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af3c7 +0  29060000
[3e4c06981fd1806] jit-backend-dump}
[3e4c06981fd4785] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af3d5 +0  37060000
[3e4c06981fd545a] jit-backend-dump}
[3e4c06981fd83ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522af3f5 +0  33060000
[3e4c06981fd9087] jit-backend-dump}
[3e4c06981fdc266] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522a9c27 +0  45510000
[3e4c06981fdcfa3] jit-backend-dump}
[3e4c06981fe0f3a] jit-backend}
[3e4c06981fe4c46] {jit-log-opt-bridge
# bridge out of Guard 0x41c6560 with 147 ops
[i0, p1, i2, p3, p4, p5]
+422: guard_true(i0, descr=<Guard0x43565c0>) [i0, p1, i2, p3, p4, p5]
+431: guard_not_invalidated(descr=<Guard0x435e650>) [i0, p1, i2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, 'i')
+431: p6 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+449: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x435e698>) [i0, p1, i2, p3, p4, p5]
+458: p8 = getfield_gc_r(p4, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+462: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+466: p10 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+470: guard_nonnull_class(p8, 16482208, descr=<Guard0x4356620>) [i0, p1, i2, p3, p4, p5]
+490: guard_class(p10, 16435920, descr=<Guard0x435e6e0>) [i0, p1, i2, p3, p4, p5]
+503: p13 = getfield_gc_r(p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+507: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x4356680>) [i0, p1, i2, p3, p4, p5]
debug_merge_point(0, 0, '(- y 1)')
+526: guard_class(p9, 16503536, descr=<Guard0x435e728>) [i0, p1, i2, p3, p4, p5]
+540: i16 = getfield_gc_i(p9, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+544: i18 = int_sub_ovf(i16, 1)
+551: guard_no_overflow(descr=<Guard0x435e770>) [i0, p1, i2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y))))')
debug_merge_point(0, 0, '(+ AppRand6 AppRand7)')
+557: i19 = int_add_ovf(i2, i18)
+567: guard_no_overflow(descr=<Guard0x435e7b8>) [i0, p1, i2, p3, p4, p5]
debug_merge_point(0, 0, '(loop4937 (expt 2 (quotient AppRand8 y)))')
+573: i20 = int_is_true(i16)
+576: guard_true(i20, descr=<Guard0x435e800>) [i0, p1, i2, p3, p4, p5]
+582: i22 = int_eq(i19, -9223372036854775808)
+604: i24 = int_eq(i16, -1)
+617: i25 = int_and(i22, i24)
+620: guard_false(i25, descr=<Guard0x435e848>) [i0, p1, i2, p3, p4, p5]
+629: i27 = call_i(ConstClass(ll_int_py_div__Signed_Signed), i19, i16, descr=<Calli 8 ii EF=0 OS=12>)
+666: i28 = int_mul(i27, i16)
+673: i29 = int_xor(i19, i16)
+676: i31 = int_rshift(i29, 63)
+680: i32 = int_ne(i28, i19)
+692: i33 = int_and(i31, i32)
+695: i34 = int_add(i27, i33)
+698: f35 = cast_int_to_float(i34)
+703: i36 = float_ne(f35, f35)
+714: guard_false(i36, descr=<Guard0x43566e0>) [p8, p10, f35, i34, i18, p9, i19, None, i2, None, None, None]
+720: f39 = float_add(f35, 11235582092889474423308157442431404585112356118389416079589380072358292237843810195794279832650471001320007117491962084853674360550901038905802964414967132773610493339054092829768888725077880882465817684505312860552384417646403930092119569408801702322709406917786643639996702871154982269052209770601514008576.000000)
+740: i40 = float_eq(f39, f35)
+751: guard_false(i40, descr=<Guard0x435e890>) [p8, p10, f35, i34, i18, p9, i19, None, i2, None, None, None]
+757: f43 = call_f(ConstClass(ccall_pow), 2.000000, f35, descr=<Callf 8 ff EF=2>)
+789: i46 = call_i(ConstClass(_ll_1_threadlocalref_get__INTLlT_Signed), 48, descr=<Calli 4 i EF=2 OS=5>)
+801: f47 = float_sub(f43, f43)
+810: i49 = float_eq(f47, 0.000000)
+831: guard_true(i49, descr=<Guard0x4356740>) [p8, p10, i46, f47, f43, i34, i18, p9, i19, None, i2, None, None, None]
+837: i50 = int_is_true(i46)
+840: guard_false(i50, descr=<Guard0x435e8d8>) [p8, p10, i46, f47, f43, i34, i18, p9, i19, None, i2, None, None, None]
+846: i51 = float_ne(f43, f43)
+857: guard_false(i51, descr=<Guard0x435e920>) [p8, p10, i46, f47, f43, i34, i18, p9, i19, None, i2, None, None, None]
+863: i53 = float_ge(f43, -9223372036854775808.000000)
+878: guard_true(i53, descr=<Guard0x435e968>) [p8, p10, i46, f47, f43, i34, i18, p9, i19, None, i2, None, None, None]
+884: i55 = float_lt(f43, 9223372036854775808.000000)
+896: guard_false(i55, descr=<Guard0x435e9b0>) [p8, p10, i46, f47, f43, i34, i18, p9, i19, None, i2, None, None, None]
+902: p57 = call_r(ConstClass(fromint), i34, descr=<Callr 8 i EF=3>)
+972: guard_no_exception(descr=<Guard0x43567a0>) [p8, p10, p57, None, i18, p9, i19, None, i2, None, None, None]
+994: p60 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr59), p57, descr=<Callr 8 rr EF=4>)
+1053: guard_no_exception(descr=<Guard0x4356800>) [p8, p10, p60, None, i18, p9, i19, None, i2, None, None, None]
+1068: i61 = getfield_gc_i(p60, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1072: i63 = int_gt(i61, 2)
+1076: guard_true(i63, descr=<Guard0x435e9f8>) [p8, p10, p60, None, i18, p9, i19, None, i2, None, None, None]
+1082: p64 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1101: guard_value(p64, ConstPtr(ptr65), descr=<Guard0x435ea40>) [p8, p10, p60, None, i18, p9, i19, None, i2, None, None, None]
+1110: p66 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1121: guard_class(p66, 16505296, descr=<Guard0x435ea88>) [p8, p10, p60, None, i18, p9, i19, None, i2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 (expt 2 (quotient AppRand8 y)))')
debug_merge_point(0, 0, '(- y 1)')
+1135: i68 = getfield_gc_i(p8, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1140: i70 = int_sub_ovf(i68, 1)
+1147: guard_no_overflow(descr=<Guard0x435ead0>) [p8, p10, p60, None, i18, p9, i19, None, i2, None, None, None]
debug_merge_point(0, 0, '(let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))')
debug_merge_point(0, 0, '(expt g AppRand2)')
+1153: p72 = call_r(ConstClass(fromint), i70, descr=<Callr 8 i EF=3>)
+1219: guard_no_exception(descr=<Guard0x4356860>) [p72, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1234: p74 = call_r(ConstClass(rbigint.pow), p60, p72, descr=<Callr 8 rr EF=4>)
+1304: guard_no_exception(descr=<Guard0x43568c0>) [p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1319: i75 = getfield_gc_i(p74, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1323: i77 = int_gt(i75, 2)
+1327: guard_true(i77, descr=<Guard0x435eb18>) [p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))))')
debug_merge_point(0, 0, '(* a y)')
+1333: i78 = int_is_true(i68)
+1336: guard_true(i78, descr=<Guard0x435eb60>) [p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1342: p80 = call_r(ConstClass(fromint), i68, descr=<Callr 8 i EF=3>)
+1405: guard_no_exception(descr=<Guard0x4356920>) [p80, i68, p74, None, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1420: p82 = call_r(ConstClass(rbigint.mul), p74, p80, descr=<Callr 8 rr EF=4>)
+1490: guard_no_exception(descr=<Guard0x4356980>) [p82, i68, p74, None, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1505: i83 = getfield_gc_i(p82, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1509: i85 = int_gt(i83, 2)
+1513: guard_true(i85, descr=<Guard0x435eba8>) [p82, i68, p74, None, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(- y 1)')
debug_merge_point(0, 0, '(let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))')
debug_merge_point(0, 0, '(* a AppRand3)')
+1519: i86 = int_is_true(i70)
+1522: guard_true(i86, descr=<Guard0x435ebf0>) [p82, i68, p74, None, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1528: p88 = call_r(ConstClass(rbigint.mul), p74, p72, descr=<Callr 8 rr EF=4>)
+1602: guard_no_exception(descr=<Guard0x43569e0>) [p88, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1617: i89 = getfield_gc_i(p88, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1621: i91 = int_gt(i89, 2)
+1625: guard_true(i91, descr=<Guard0x435ec38>) [p88, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))')
debug_merge_point(0, 0, '(* g c)')
+1631: p93 = call_r(ConstClass(rbigint.mul), p60, p88, descr=<Callr 8 rr EF=4>)
+1701: guard_no_exception(descr=<Guard0x4356a40>) [p93, p88, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1716: i94 = getfield_gc_i(p93, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1720: i96 = int_gt(i94, 2)
+1724: guard_true(i96, descr=<Guard0x435ec80>) [p93, p88, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))')
debug_merge_point(0, 0, '(+ x4934 AppRand4)')
+1730: p97 = getfield_gc_r(p8, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1741: guard_nonnull_class(p97, ConstClass(W_Bignum), descr=<Guard0x4356aa0>) [p93, p88, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1760: p99 = getfield_gc_r(p97, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1764: p101 = call_r(ConstClass(rbigint.add), p99, p93, descr=<Callr 8 rr EF=4>)
+1844: guard_no_exception(descr=<Guard0x4356b00>) [p101, p97, p93, None, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1859: i102 = getfield_gc_i(p101, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1863: i104 = int_gt(i102, 2)
+1867: guard_true(i104, descr=<Guard0x435ecc8>) [p101, p97, p93, None, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))')
debug_merge_point(0, 0, '(quotient AppRand5 b)')
+1873: i105 = getfield_gc_i(p82, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1884: i106 = int_is_zero(i105)
+1887: guard_false(i106, descr=<Guard0x435ed10>) [p101, p97, p93, None, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1893: i107 = int_lt(i102, i83)
+1896: guard_false(i107, descr=<Guard0x435ed58>) [p101, p97, p93, None, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1902: i108 = int_eq(i102, i83)
+1905: guard_false(i108, descr=<Guard0x435eda0>) [p101, p97, p93, None, p82, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1911: p110 = call_r(ConstClass(_x_divrem), p101, p82, descr=<Callr 8 rr EF=5>)
+1977: guard_no_exception(descr=<Guard0x4356b60>) [p110, p82, p101, None, None, None, None, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+1992: p111 = getfield_gc_r(p110, descr=<FieldP tuple2.item0 8 pure>)
+1996: p112 = getfield_gc_r(p110, descr=<FieldP tuple2.item1 16 pure>)
+1996: i113 = getfield_gc_i(p101, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2008: i114 = int_ne(i113, i105)
+2011: guard_false(i114, descr=<Guard0x435ede8>) [p110, p82, p101, None, None, None, None, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+2017: i116 = int_lt(i113, 0)
+2021: guard_false(i116, descr=<Guard0x435ee30>) [p110, p82, p101, None, None, None, None, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
+2027: i117 = getfield_gc_i(p111, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2031: i119 = int_gt(i117, 2)
+2035: guard_true(i119, descr=<Guard0x435ee78>) [p110, p82, p101, None, None, None, None, None, p74, i70, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (< d g)]) (if if1 (loop4937 d) g))')
debug_merge_point(0, 0, '(< d g)')
+2041: i121 = call_i(ConstClass(rbigint.lt), p111, p60, descr=<Calli 1 rr EF=0>)
+2064: guard_true(i121, descr=<Guard0x4356bc0>) [i121, p111, None, None, None, None, None, None, None, p60, p8, p10, p13, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, '(loop4937 d)')
debug_merge_point(0, 0, '(let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 d)')
+2073: jump(p8, p111, p10, p13, i70, p72, i68, p80, p97, p99, descr=TargetToken(69318304))
+2160: --end of the loop--
[3e4c06982086a43] jit-log-opt-bridge}
[3e4c069821a7610] {jit-backend
[3e4c069821ee7ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afb
[3e4c069821f5556] jit-backend-dump}
[3e4c069821ff4a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afbd4 +0  29000000
[3e4c06982200920] jit-backend-dump}
[3e4c0698220453d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afda5 +0  29000000
[3e4c0698220541d] jit-backend-dump}
[3e4c06982208747] {jit-backend-addr
bridge out of Guard 0x4253fa0 has address 0x7ff2522afbd0 to 0x7ff2522afda0
       gc table: 0x7ff2522afb50
    jump target: 0x7ff2522afbd0
         resops: 0x7ff2522afbde
       failures: 0x7ff2522afda0
            end: 0x7ff2522aff56
[3e4c0698220ab56] jit-backend-addr}
[3e4c0698220e1a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afbeb +0  FB010000
[3e4c0698220efa9] jit-backend-dump}
[3e4c069822122dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afc09 +0  15020000
[3e4c0698221302b] jit-backend-dump}
[3e4c06982216251] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afc17 +0  23020000
[3e4c06982216f1a] jit-backend-dump}
[3e4c0698221a0c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afc28 +0  2E020000
[3e4c0698221adaa] jit-backend-dump}
[3e4c0698221df6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afc35 +0  3D020000
[3e4c0698221ec1c] jit-backend-dump}
[3e4c06982221de0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afc94 +0  FA010000
[3e4c06982222af8] jit-backend-dump}
[3e4c06982225d74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afce5 +0  C5010000
[3e4c06982226a40] jit-backend-dump}
[3e4c06982229aea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afcf3 +0  D3010000
[3e4c0698222a7a7] jit-backend-dump}
[3e4c0698222d9a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afd17 +0  CB010000
[3e4c0698222e6eb] jit-backend-dump}
[3e4c069822317f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afd42 +0  BC010000
[3e4c069822324b8] jit-backend-dump}
[3e4c0698223561a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afd56 +0  C4010000
[3e4c069822362ca] jit-backend-dump}
[3e4c069822393bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522afd6c +0  CA010000
[3e4c0698223a08d] jit-backend-dump}
[3e4c0698223d44a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aa17b +0  515A0000
[3e4c0698223e156] jit-backend-dump}
[3e4c0698224218c] jit-backend}
[3e4c06982245cf8] {jit-log-opt-bridge
# bridge out of Guard 0x4253fa0 with 35 ops
[p0, i1, p2, p3]
+150: guard_false(i1, descr=<Guard0x4356c20>) [p0, i1, p2, p3]
+159: guard_not_invalidated(descr=<Guard0x435eec0>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
+159: p4 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+170: guard_nonnull_class(p4, ConstClass(ForwardLink), descr=<Guard0x4356c80>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(+ i 1)')
+189: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+193: i8 = int_add_ovf(i6, 1)
+197: guard_no_overflow(descr=<Guard0x435ef08>) [p0, i1, p2, p3]
+203: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* n 2)')
+207: i10 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+211: i11 = int_is_true(i10)
+214: guard_true(i11, descr=<Guard0x435ef50>) [p0, i1, p2, p3]
+220: i13 = int_mul_ovf(i10, 2)
+227: guard_overflow(descr=<Guard0x435ef98>) [p0, i1, p2, p3]
+233: p15 = call_r(ConstClass(fromint), i10, descr=<Callr 8 i EF=3>)
+313: guard_no_exception(descr=<Guard0x4356ce0>) [p0, p15, i10, i8, p9, p4, p2, None]
+335: p19 = call_r(ConstClass(rbigint.mul), p15, ConstPtr(ptr18), descr=<Callr 8 rr EF=4>)
+394: guard_no_exception(descr=<Guard0x4356d40>) [p0, p19, i10, i8, p9, p4, p2, None]
+409: i20 = getfield_gc_i(p19, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+413: i22 = int_gt(i20, 2)
+417: guard_false(i22, descr=<Guard0x435efe0>) [p0, p19, i10, i8, p9, p4, p2, None]
+423: i24 = call_i(ConstClass(rbigint._toint_helper), p19, descr=<Calli 8 r EF=4>)
+438: p26 = guard_exception(ConstClass(OverflowError), descr=<Guard0x4356da0>) [p0, p19, i24, i10, i8, p9, p4, p2, None]
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
+483: guard_class(p9, 16477696, descr=<Guard0x4356e00>) [p2, p9, p19, None, i8, None, None, None, None]
+502: p28 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+513: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x435f028>) [p2, p9, p19, None, i8, None, None, None, None]
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+522: p30 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+526: guard_nonnull_class(p30, ConstClass(W_Bignum), descr=<Guard0x4356e60>) [p2, p19, None, i8, p9, None, None, None]
+544: p32 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+548: jump(p9, i8, p19, p2, p4, p30, p32, descr=TargetToken(69318144))
+592: --end of the loop--
[3e4c0698226ef58] jit-log-opt-bridge}
[3e4c06983120409] {jit-backend
[3e4c0698327fd2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b
[3e4c069832950ca] jit-backend-dump}
[3e4c069832a13c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0684 +0  2C000000
[3e4c069832a2aa0] jit-backend-dump}
[3e4c069832a6dbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b10e5 +0  2C000000
[3e4c069832a7cc2] jit-backend-dump}
[3e4c069832aaffe] {jit-backend-addr
bridge out of Guard 0x4356320 has address 0x7ff2522b0680 to 0x7ff2522b10e0
       gc table: 0x7ff2522b0450
    jump target: 0x7ff2522b0680
         resops: 0x7ff2522b068e
       failures: 0x7ff2522b10e0
            end: 0x7ff2522b18dd
[3e4c069832ad55e] jit-backend-addr}
[3e4c069832b0a56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b069b +0  920B0000
[3e4c069832b18c2] jit-backend-dump}
[3e4c069832b4d1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b06b6 +0  AF0B0000
[3e4c069832b5a86] jit-backend-dump}
[3e4c069832b8c56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b06cb +0  B60B0000
[3e4c069832b99b8] jit-backend-dump}
[3e4c069832bc9fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b06e2 +0  BB0B0000
[3e4c069832bd6bd] jit-backend-dump}
[3e4c069832c069e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b06ef +0  CA0B0000
[3e4c069832c1395] jit-backend-dump}
[3e4c069832c4372] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0700 +0  D50B0000
[3e4c069832c5029] jit-backend-dump}
[3e4c069832c8053] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0716 +0  DB0B0000
[3e4c069832c8d1f] jit-backend-dump}
[3e4c069832cbcfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0726 +0  E70B0000
[3e4c069832cc9c9] jit-backend-dump}
[3e4c069832cf9b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b073a +0  EF0B0000
[3e4c069832d0669] jit-backend-dump}
[3e4c069832d364d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0750 +0  F50B0000
[3e4c069832d4310] jit-backend-dump}
[3e4c069832d72de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b07e8 +0  790B0000
[3e4c069832d8037] jit-backend-dump}
[3e4c069832dafd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b07f6 +0  870B0000
[3e4c069832dbc91] jit-backend-dump}
[3e4c069832dec2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b084b +0  4E0B0000
[3e4c069832df8e8] jit-backend-dump}
[3e4c069832e289b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0859 +0  5C0B0000
[3e4c069832e35e1] jit-backend-dump}
[3e4c069832e65ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b08b5 +0  1C0B0000
[3e4c069832e72bc] jit-backend-dump}
[3e4c069832ea3aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b08c3 +0  2A0B0000
[3e4c069832eb076] jit-backend-dump}
[3e4c069832ee097] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b08e1 +0  280B0000
[3e4c069832eed66] jit-backend-dump}
[3e4c069832f1d2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0948 +0  DD0A0000
[3e4c069832f2a31] jit-backend-dump}
[3e4c069832f5a33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0956 +0  EB0A0000
[3e4c069832f66fc] jit-backend-dump}
[3e4c069832f96b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0974 +0  E90A0000
[3e4c069832fa36f] jit-backend-dump}
[3e4c069832fd334] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b09d0 +0  A90A0000
[3e4c069832fe022] jit-backend-dump}
[3e4c06983300ffc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b09de +0  B70A0000
[3e4c06983301cc5] jit-backend-dump}
[3e4c06983304c66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0a33 +0  7E0A0000
[3e4c06983305919] jit-backend-dump}
[3e4c06983308876] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0a41 +0  8C0A0000
[3e4c06983309539] jit-backend-dump}
[3e4c0698330c4dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0a9d +0  4C0A0000
[3e4c0698330d193] jit-backend-dump}
[3e4c06983310140] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0aab +0  5A0A0000
[3e4c06983310e09] jit-backend-dump}
[3e4c06983313e02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0b00 +0  210A0000
[3e4c06983314ac2] jit-backend-dump}
[3e4c06983317a56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0b0e +0  2F0A0000
[3e4c0698331871c] jit-backend-dump}
[3e4c0698331b6a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0b22 +0  370A0000
[3e4c0698331c358] jit-backend-dump}
[3e4c0698331f2bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0b2b +0  4A0A0000
[3e4c0698331ff7e] jit-backend-dump}
[3e4c06983322f0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0b34 +0  5D0A0000
[3e4c06983323bd2] jit-backend-dump}
[3e4c06983326b6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0b8f +0  1E0A0000
[3e4c0698332782f] jit-backend-dump}
[3e4c0698332a7ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0ba7 +0  220A0000
[3e4c0698332b45b] jit-backend-dump}
[3e4c0698332e445] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0bb1 +0  340A0000
[3e4c0698332f133] jit-backend-dump}
[3e4c06983332126] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0bbf +0  420A0000
[3e4c06983332dfe] jit-backend-dump}
[3e4c06983335e28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0bd3 +0  4A0A0000
[3e4c06983336af4] jit-backend-dump}
[3e4c06983339a8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0bdc +0  5D0A0000
[3e4c0698333a74e] jit-backend-dump}
[3e4c0698333d738] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0be5 +0  700A0000
[3e4c0698333e3fb] jit-backend-dump}
[3e4c069833413b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0c3a +0  370A0000
[3e4c06983342095] jit-backend-dump}
[3e4c0698334528d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0c52 +0  3B0A0000
[3e4c06983345fe6] jit-backend-dump}
[3e4c0698334914b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0c5c +0  4D0A0000
[3e4c06983349e36] jit-backend-dump}
[3e4c0698334ce7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0c6a +0  5B0A0000
[3e4c0698334db69] jit-backend-dump}
[3e4c06983350b8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0c88 +0  590A0000
[3e4c06983351896] jit-backend-dump}
[3e4c0698335488c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0ce8 +0  150A0000
[3e4c0698335556e] jit-backend-dump}
[3e4c06983358738] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0cf6 +0  230A0000
[3e4c06983359450] jit-backend-dump}
[3e4c0698335c5a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0d52 +0  E3090000
[3e4c0698335d29d] jit-backend-dump}
[3e4c06983360366] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0d60 +0  F1090000
[3e4c0698336102c] jit-backend-dump}
[3e4c069833640b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0dbc +0  B1090000
[3e4c06983364d5c] jit-backend-dump}
[3e4c06983367d2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0dca +0  BF090000
[3e4c069833689f7] jit-backend-dump}
[3e4c0698336b9ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0dd7 +0  CE090000
[3e4c0698336c697] jit-backend-dump}
[3e4c0698336f64a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0de0 +0  E1090000
[3e4c069833702f1] jit-backend-dump}
[3e4c06983373295] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0de9 +0  F4090000
[3e4c06983373f3f] jit-backend-dump}
[3e4c06983376f5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0e41 +0  B8090000
[3e4c06983377c5d] jit-backend-dump}
[3e4c0698337acaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0e59 +0  BC090000
[3e4c0698337b975] jit-backend-dump}
[3e4c0698337e968] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0e63 +0  CE090000
[3e4c0698337f628] jit-backend-dump}
[3e4c0698338262a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0e71 +0  DC090000
[3e4c069833832f3] jit-backend-dump}
[3e4c069833863db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0e98 +0  D1090000
[3e4c069833870a4] jit-backend-dump}
[3e4c0698338a07e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0ef1 +0  94090000
[3e4c0698338ad60] jit-backend-dump}
[3e4c0698338dd3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0eff +0  A2090000
[3e4c0698338e9f7] jit-backend-dump}
[3e4c06983391a24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0f25 +0  98090000
[3e4c069833926e1] jit-backend-dump}
[3e4c06983395990] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ae171 +0  0B250000
[3e4c069833966c1] jit-backend-dump}
[3e4c0698339a72b] jit-backend}
[3e4c0698339e2f6] {jit-log-opt-bridge
# bridge out of Guard 0x4356320 with 242 ops
[i0, p1, p2, p3, p4, p5]
+582: guard_false(i0, descr=<Guard0x4356ec0>) [i0, p1, p2, p3, p4, p5]
+591: guard_not_invalidated(descr=<Guard0x435f2b0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, 'g')
+591: p6 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+609: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x435f2f8>) [i0, p1, p2, p3, p4, p5]
+618: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+622: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+626: guard_class(p9, 16437352, descr=<Guard0x435f340>) [i0, p1, p2, p3, p4, p5]
+639: p11 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+643: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x4356f20>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(+ x5022 one5009) from (< d g)')
+662: guard_class(p8, 16500016, descr=<Guard0x435f388>) [i0, p1, p2, p3, p4, p5]
+675: p14 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+679: guard_class(p14, 16500368, descr=<Guard0x435f3d0>) [i0, p1, p2, p3, p4, p5]
+692: p16 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+696: guard_nonnull_class(p16, ConstClass(W_Bignum), descr=<Guard0x4356f80>) [i0, p1, p2, p3, p4, p5]
+714: p18 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+718: guard_class(p18, 16478072, descr=<Guard0x435f418>) [i0, p1, p2, p3, p4, p5]
+730: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+741: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x435f460>) [i0, p1, p2, p3, p4, p5]
+750: p22 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+754: guard_nonnull_class(p22, ConstClass(W_Bignum), descr=<Guard0x4356fe0>) [i0, p1, p2, p3, p4, p5]
+772: p24 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+776: p25 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+780: p27 = call_r(ConstClass(rbigint.add), p24, p25, descr=<Callr 8 rr EF=4>)
+909: guard_no_exception(descr=<Guard0x4357040>) [p8, p27, p22, p16, p9, p11, None, p2, None, None, None]
+924: i29 = getfield_gc_i(p27, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+928: i31 = int_gt(i29, 2)
+932: guard_true(i31, descr=<Guard0x435f4a8>) [p8, p27, p22, p16, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)))))')
debug_merge_point(0, 0, '(* one5009 AppRand28)')
+938: p33 = call_r(ConstClass(rbigint.mul), p25, p27, descr=<Callr 8 rr EF=4>)
+1008: guard_no_exception(descr=<Guard0x43570a0>) [p33, p27, p8, p22, None, p9, p11, None, p2, None, None, None]
+1023: i34 = getfield_gc_i(p33, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1027: i36 = int_gt(i34, 2)
+1031: guard_true(i36, descr=<Guard0x435f4f0>) [p33, p27, p8, p22, None, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(* 2 sqrt-x)')
+1044: p39 = call_r(ConstClass(rbigint.mul), ConstPtr(ptr38), p2, descr=<Callr 8 rr EF=4>)
+1114: guard_no_exception(descr=<Guard0x4357100>) [p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
+1129: i40 = getfield_gc_i(p39, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1133: i42 = int_gt(i40, 2)
+1137: guard_true(i42, descr=<Guard0x435f538>) [p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(* x5022 y5024)')
+1143: p43 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+1154: guard_nonnull_class(p43, ConstClass(W_Bignum), descr=<Guard0x4357160>) [p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
+1173: p45 = getfield_gc_r(p43, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1177: p47 = call_r(ConstClass(rbigint.mul), p24, p45, descr=<Callr 8 rr EF=4>)
+1261: guard_no_exception(descr=<Guard0x43571c0>) [p47, p43, p39, p33, p27, p8, None, p16, p9, p11, None, p2, None, None, None]
+1276: i48 = getfield_gc_i(p47, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1280: i50 = int_gt(i48, 2)
+1284: guard_true(i50, descr=<Guard0x435f580>) [p47, p43, p39, p33, p27, p8, None, p16, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))')
debug_merge_point(0, 0, '(+ AppRand31 one^2)')
+1290: p51 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1301: guard_nonnull_class(p51, ConstClass(W_Bignum), descr=<Guard0x4357220>) [p47, p43, p39, p33, p27, p8, None, p16, p9, p11, None, p2, None, None, None]
+1320: p53 = getfield_gc_r(p51, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1324: p55 = call_r(ConstClass(rbigint.add), p47, p53, descr=<Callr 8 rr EF=4>)
+1397: guard_no_exception(descr=<Guard0x4357280>) [p55, p51, p47, None, p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
+1412: i56 = getfield_gc_i(p55, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1416: i58 = int_gt(i56, 2)
+1420: guard_true(i58, descr=<Guard0x435f5c8>) [p55, p51, p47, None, p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)))')
debug_merge_point(0, 0, '(* one5009 AppRand32)')
+1426: p60 = call_r(ConstClass(rbigint.mul), p25, p55, descr=<Callr 8 rr EF=4>)
+1496: guard_no_exception(descr=<Guard0x43572e0>) [p60, p55, None, p47, None, p39, p33, p27, p8, p22, None, p9, p11, None, p2, None, None, None]
+1511: i61 = getfield_gc_i(p60, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1515: i63 = int_gt(i61, 2)
+1519: guard_true(i63, descr=<Guard0x435f610>) [p60, p55, None, p47, None, p39, p33, p27, p8, p22, None, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(+ y5024 one5009)')
+1525: p65 = call_r(ConstClass(rbigint.add), p45, p25, descr=<Callr 8 rr EF=4>)
+1602: guard_no_exception(descr=<Guard0x4357340>) [p65, p60, None, None, p47, p43, p39, p33, p27, p8, p22, None, p9, p11, None, p2, None, None, None]
+1617: i66 = getfield_gc_i(p65, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1621: i68 = int_gt(i66, 2)
+1625: guard_true(i68, descr=<Guard0x435f658>) [p65, p60, None, None, p47, p43, p39, p33, p27, p8, p22, None, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))')
debug_merge_point(0, 0, '(* AppRand34 sqrt-x)')
+1631: p70 = call_r(ConstClass(rbigint.mul), p65, p2, descr=<Callr 8 rr EF=4>)
+1701: guard_no_exception(descr=<Guard0x43573a0>) [p70, p65, p60, None, None, p47, None, p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
+1716: i71 = getfield_gc_i(p70, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1720: i73 = int_gt(i71, 2)
+1724: guard_true(i73, descr=<Guard0x435f6a0>) [p70, p65, p60, None, None, p47, None, p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)')
+1730: i74 = getfield_gc_i(p39, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1741: i75 = int_is_zero(i74)
+1744: guard_false(i75, descr=<Guard0x435f6e8>) [p70, p65, p60, None, None, p47, None, p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
+1750: i76 = int_lt(i34, i40)
+1753: guard_false(i76, descr=<Guard0x435f730>) [p70, p65, p60, None, None, p47, None, p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
+1759: i77 = int_eq(i34, i40)
+1762: guard_false(i77, descr=<Guard0x435f778>) [p70, p65, p60, None, None, p47, None, p39, p33, p27, p8, None, None, p9, p11, None, p2, None, None, None]
+1768: p79 = call_r(ConstClass(_x_divrem), p33, p39, descr=<Callr 8 rr EF=5>)
+1844: guard_no_exception(descr=<Guard0x4357400>) [p18, p9, p79, p39, p33, p70, p65, p60, None, None, p47, None, None, None, p27, p8, None, None, None, None, None, p2, None, None, None]
+1859: p80 = getfield_gc_r(p79, descr=<FieldP tuple2.item0 8 pure>)
+1863: p81 = getfield_gc_r(p79, descr=<FieldP tuple2.item1 16 pure>)
+1863: i82 = getfield_gc_i(p33, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1874: i83 = int_ne(i82, i74)
+1877: guard_false(i83, descr=<Guard0x435f7c0>) [p18, p9, p79, p39, p33, p70, p65, p60, None, None, p47, None, None, None, p27, p8, None, None, None, None, None, p2, None, None, None]
+1883: i85 = int_lt(i82, 0)
+1887: guard_false(i85, descr=<Guard0x435f808>) [p18, p9, p79, p39, p33, p70, p65, p60, None, None, p47, None, None, None, p27, p8, None, None, None, None, None, p2, None, None, None]
+1893: i86 = getfield_gc_i(p80, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1897: i88 = int_gt(i86, 2)
+1901: guard_true(i88, descr=<Guard0x435f850>) [p18, p9, p79, p39, p33, p70, p65, p60, None, None, p47, None, None, None, p27, p8, None, None, None, None, None, p2, None, None, None]
+1907: i89 = getfield_gc_i(p70, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1918: i90 = int_is_zero(i89)
+1921: guard_false(i90, descr=<Guard0x435f898>) [p18, p9, p79, p39, p33, p70, p65, p60, None, None, p47, None, None, None, p27, p8, None, None, None, None, None, p2, None, None, None]
+1927: i91 = int_lt(i61, i71)
+1930: guard_false(i91, descr=<Guard0x435f8e0>) [p18, p9, p79, p39, p33, p70, p65, p60, None, None, p47, None, None, None, p27, p8, None, None, None, None, None, p2, None, None, None]
+1936: i92 = int_eq(i61, i71)
+1939: guard_false(i92, descr=<Guard0x435f928>) [p18, p9, p79, p39, p33, p70, p65, p60, None, None, p47, None, None, None, p27, p8, None, None, None, None, None, p2, None, None, None]
+1945: p94 = call_r(ConstClass(_x_divrem), p60, p70, descr=<Callr 8 rr EF=5>)
+2015: guard_no_exception(descr=<Guard0x4357460>) [p18, p9, p94, p70, p60, p80, None, p65, None, None, None, p47, None, p39, p33, p27, p8, None, None, None, None, None, p2, None, None, None]
+2030: p95 = getfield_gc_r(p94, descr=<FieldP tuple2.item0 8 pure>)
+2034: p96 = getfield_gc_r(p94, descr=<FieldP tuple2.item1 16 pure>)
+2034: i97 = getfield_gc_i(p60, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2045: i98 = int_ne(i97, i89)
+2048: guard_false(i98, descr=<Guard0x435f970>) [p18, p9, p94, p70, p60, p80, None, p65, None, None, None, p47, None, p39, p33, p27, p8, None, None, None, None, None, p2, None, None, None]
+2054: i100 = int_lt(i97, 0)
+2058: guard_false(i100, descr=<Guard0x435f9b8>) [p18, p9, p94, p70, p60, p80, None, p65, None, None, None, p47, None, p39, p33, p27, p8, None, None, None, None, None, p2, None, None, None]
+2064: i101 = getfield_gc_i(p95, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2068: i103 = int_gt(i101, 2)
+2072: guard_true(i103, descr=<Guard0x435fa00>) [p18, p9, p94, p70, p60, p80, None, p65, None, None, None, p47, None, p39, p33, p27, p8, None, None, None, None, None, p2, None, None, None]
+2078: p104 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+2089: guard_nonnull_class(p104, ConstClass(W_Bignum), descr=<Guard0x43574c0>) [p18, p9, p94, p70, p60, p80, None, p65, None, None, None, p47, None, p39, p33, p27, p8, None, None, None, None, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))) from (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)')
debug_merge_point(0, 0, '(+ x5022 one5009)')
+2108: p107 = call_r(ConstClass(rbigint.add), p80, p25, descr=<Callr 8 rr EF=4>)
+2189: guard_no_exception(descr=<Guard0x4357520>) [p107, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, p22, None, p9, p11, None, None, None, None, None]
+2204: i108 = getfield_gc_i(p107, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2208: i110 = int_gt(i108, 2)
+2212: guard_true(i110, descr=<Guard0x435fa48>) [p107, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, p22, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))')
debug_merge_point(0, 0, '(* p AppRand24)')
+2218: p111 = getfield_gc_r(p104, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2229: p113 = call_r(ConstClass(rbigint.mul), p111, p107, descr=<Callr 8 rr EF=4>)
+2295: guard_no_exception(descr=<Guard0x4357580>) [p113, p107, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, None, None, p9, p11, None, None, None, None, None]
+2310: i114 = getfield_gc_i(p113, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2314: i116 = int_gt(i114, 2)
+2318: guard_true(i116, descr=<Guard0x435fa90>) [p113, p107, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, None, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(+ y5024 one5009)')
+2324: p118 = call_r(ConstClass(rbigint.add), p95, p25, descr=<Callr 8 rr EF=4>)
+2401: guard_no_exception(descr=<Guard0x43575e0>) [p118, p113, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, p22, None, p9, p11, None, None, None, None, None]
+2416: i119 = getfield_gc_i(p118, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2420: i121 = int_gt(i119, 2)
+2424: guard_true(i121, descr=<Guard0x435fad8>) [p118, p113, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, p22, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)))))))))')
debug_merge_point(0, 0, '(quotient AppRand25 AppRand26)')
+2430: i122 = getfield_gc_i(p118, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2434: i123 = int_is_zero(i122)
+2437: guard_false(i123, descr=<Guard0x435fb20>) [p118, p113, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, p22, None, p9, p11, None, None, None, None, None]
+2443: i124 = int_lt(i114, i119)
+2446: guard_false(i124, descr=<Guard0x435fb68>) [p118, p113, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, p22, None, p9, p11, None, None, None, None, None]
+2452: i125 = int_eq(i114, i119)
+2455: guard_false(i125, descr=<Guard0x435fbb0>) [p118, p113, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, p22, None, p9, p11, None, None, None, None, None]
+2461: p127 = call_r(ConstClass(_x_divrem), p113, p118, descr=<Callr 8 rr EF=5>)
+2534: guard_no_exception(descr=<Guard0x4357640>) [p127, p118, p113, None, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, None, None, p9, p11, None, None, None, None, None]
+2549: p128 = getfield_gc_r(p127, descr=<FieldP tuple2.item0 8 pure>)
+2553: p129 = getfield_gc_r(p127, descr=<FieldP tuple2.item1 16 pure>)
+2553: i130 = getfield_gc_i(p113, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2564: i131 = int_ne(i130, i122)
+2567: guard_false(i131, descr=<Guard0x435fbf8>) [p127, p118, p113, None, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, None, None, p9, p11, None, None, None, None, None]
+2573: i133 = int_lt(i130, 0)
+2577: guard_false(i133, descr=<Guard0x435fc40>) [p127, p118, p113, None, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, None, None, p9, p11, None, None, None, None, None]
+2583: i134 = getfield_gc_i(p128, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2587: i136 = int_gt(i134, 2)
+2591: guard_true(i136, descr=<Guard0x435fc88>) [p127, p118, p113, None, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, None, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(= x5022 one5009)')
+2597: i138 = call_i(ConstClass(rbigint.eq), p80, p25, descr=<Calli 1 rr EF=0>)
+2627: guard_false(i138, descr=<Guard0x43576a0>) [i138, p128, None, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, None, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))')
debug_merge_point(0, 0, '(let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)))))))')
debug_merge_point(0, 0, '(* one5009 x5022)')
+2636: p140 = call_r(ConstClass(rbigint.mul), p25, p80, descr=<Callr 8 rr EF=4>)
+2710: guard_no_exception(descr=<Guard0x4357700>) [p140, p128, None, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, p22, None, p9, p11, None, None, None, None, None]
+2725: i141 = getfield_gc_i(p140, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2729: i143 = int_gt(i141, 2)
+2733: guard_true(i143, descr=<Guard0x435fcd0>) [p140, p128, None, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, p22, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))')
debug_merge_point(0, 0, '(square-root AppRand27)')
+2739: p144 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+2746: i147 = call_i(ConstClass(rbigint.lt), p140, ConstPtr(ptr146), descr=<Calli 1 rr EF=0>)
+2768: guard_false(i147, descr=<Guard0x4357760>) [i147, p140, p128, None, None, p95, p104, p18, p80, None, None, None, None, None, None, None, None, None, None, None, None, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+2777: p148 = new_with_vtable(descr=<SizeDescr 32>)
+2821: p149 = new_with_vtable(descr=<SizeDescr 32>)
+2839: setfield_gc(p149, ConstPtr(ptr150), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2850: setfield_gc(p149, ConstPtr(ptr151), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2854: p152 = new_with_vtable(descr=<SizeDescr 16>)
+2865: setfield_gc(p152, p140, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2869: setfield_gc(p149, p152, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+2873: p153 = new_with_vtable(descr=<SizeDescr 48>)
+2885: p154 = new_with_vtable(descr=<SizeDescr 32>)
+2897: setfield_gc(p154, ConstPtr(ptr155), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2901: setfield_gc(p154, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+2909: setfield_gc(p154, p152, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+2913: p157 = new_with_vtable(descr=<SizeDescr 40>)
+2924: setfield_gc(p157, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2935: p158 = new_with_vtable(descr=<SizeDescr 32>)
+2946: p159 = new_with_vtable(descr=<SizeDescr 40>)
+2957: setfield_gc(p159, p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2968: p160 = new_with_vtable(descr=<SizeDescr 16>)
+2979: setfield_gc(p160, p80, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2990: setfield_gc(p159, p160, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+2994: p161 = new_with_vtable(descr=<SizeDescr 16>)
+3006: setfield_gc(p161, p95, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3017: setfield_gc(p159, p161, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+3021: setfield_gc(p159, p104, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+3032: setfield_gc(p158, p159, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3036: p162 = new_with_vtable(descr=<SizeDescr 16>)
+3047: setfield_gc(p162, p128, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3058: setfield_gc(p158, p162, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+3069: setfield_gc(p158, ConstPtr(ptr163), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+3073: setfield_gc(p157, p158, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3077: setfield_gc(p157, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3088: setfield_gc(p157, ConstPtr(ptr164), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3099: p165 = new_with_vtable(descr=<SizeDescr 40>)
+3110: setfield_gc(p165, ConstPtr(ptr166), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3121: setfield_gc(p165, ConstPtr(ptr167), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+3125: setfield_gc(p165, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+3133: setfield_gc(p165, p152, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+3144: setfield_gc(p153, ConstPtr(ptr169), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3149: setfield_gc(p153, p154, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3154: setfield_gc(p153, p157, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3159: setfield_gc(p153, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3164: setfield_gc(p148, p149, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3168: setfield_gc(p148, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+3176: setfield_gc(p148, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+3184: setfield_gc(p153, p165, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+3189: jump(p148, p153, descr=TargetToken(69318064))
+3216: --end of the loop--
[3e4c0698347af72] jit-log-opt-bridge}
[3e4c06986639e20] {jit-backend
[3e4c0698668102a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b19e
[3e4c069866878ea] jit-backend-dump}
[3e4c069866939ab] {jit-backend-addr
Loop 10 ((let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)) has address 0x7ff2522b1add to 0x7ff2522b1c60 (bootstrap 0x7ff2522b1a50)
       gc table: 0x7ff2522b19e0
       function: 0x7ff2522b1a50
         resops: 0x7ff2522b1add
       failures: 0x7ff2522b1c60
            end: 0x7ff2522b1df1
[3e4c06986696a19] jit-backend-addr}
[3e4c0698669b0de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1af4 +0  A9010000
[3e4c0698669c41e] jit-backend-dump}
[3e4c0698669fbc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1b0a +0  AF010000
[3e4c069866a0a32] jit-backend-dump}
[3e4c069866a3fc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1b1d +0  D4010000
[3e4c069866a4d77] jit-backend-dump}
[3e4c069866a80f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1b2d +0  E0010000
[3e4c069866a8e3d] jit-backend-dump}
[3e4c069866ac130] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1b41 +0  E8010000
[3e4c069866ace39] jit-backend-dump}
[3e4c069866b010a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1b57 +0  EE010000
[3e4c069866b0e78] jit-backend-dump}
[3e4c069866b41d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1bba +0  A7010000
[3e4c069866b4efb] jit-backend-dump}
[3e4c069866b80b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1be1 +0  9C010000
[3e4c069866b8da6] jit-backend-dump}
[3e4c069866bbfe5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1bf6 +0  A3010000
[3e4c069866bccfa] jit-backend-dump}
[3e4c069866bfeef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1bff +0  B6010000
[3e4c069866c0c5a] jit-backend-dump}
[3e4c069866c3eae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b1c09 +0  C8010000
[3e4c069866c4b9c] jit-backend-dump}
[3e4c069866c8791] jit-backend}
[3e4c069866cc2c5] {jit-log-opt-loop
# Loop 10 ((let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)) : entry bridge with 37 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
+261: guard_class(p1, 16437352, descr=<Guard0x43577c0>) [p0, p1]
+280: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+284: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x4357820>) [p0, p1]
debug_merge_point(0, 0, '(< x n)')
+302: guard_not_invalidated(descr=<Guard0x43822a8>) [p0, p1]
+302: guard_class(p0, 16503888, descr=<Guard0x43822f0>) [p0, p1]
+321: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+325: guard_class(p6, 16477696, descr=<Guard0x4382338>) [p0, p1]
+337: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+348: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x4382380>) [p0, p1]
+357: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+361: guard_nonnull_class(p10, ConstClass(W_Bignum), descr=<Guard0x4357880>) [p0, p1]
+379: i12 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+383: p14 = call_r(ConstClass(fromint), i12, descr=<Callr 8 i EF=3>)
+463: guard_no_exception(descr=<Guard0x43578e0>) [p0, p14, p10, i12, p1, p3]
+478: p15 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+489: i17 = call_i(ConstClass(rbigint.lt), p15, p14, descr=<Calli 1 rr EF=0>)
+508: guard_false(i17, descr=<Guard0x4357940>) [p0, i17, None, p1, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
+517: i19 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+528: i21 = int_add_ovf(i19, 1)
+532: guard_no_overflow(descr=<Guard0x43823c8>) [p0, i17, None, p1, p3]
debug_merge_point(0, 0, '(* n 2)')
+538: i22 = int_is_true(i12)
+541: guard_true(i22, descr=<Guard0x4382410>) [p0, i17, None, p1, p3]
+547: i24 = int_mul_ovf(i12, 2)
+551: guard_no_overflow(descr=<Guard0x4382458>) [p0, i17, None, p1, p3]
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+557: p25 = new_with_vtable(descr=<SizeDescr 32>)
+601: setfield_gc(p25, p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p25, i24, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+616: setfield_gc(p25, i21, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+620: jump(p25, p1, descr=TargetToken(69318064))
+640: --end of the loop--
[3e4c069866f29a1] jit-log-opt-loop}
[3e4c06989844fce] {jit-backend
[3e4c069898fdcd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b20e
[3e4c0698990aa51] jit-backend-dump}
[3e4c06989916d54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2204 +0  2C000000
[3e4c0698991840b] jit-backend-dump}
[3e4c0698991c2ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2785 +0  2C000000
[3e4c0698991d22d] jit-backend-dump}
[3e4c0698992069e] {jit-backend-addr
bridge out of Guard 0x4356740 has address 0x7ff2522b2200 to 0x7ff2522b2780
       gc table: 0x7ff2522b20e0
    jump target: 0x7ff2522b2200
         resops: 0x7ff2522b220e
       failures: 0x7ff2522b2780
            end: 0x7ff2522b2c12
[3e4c06989922b96] jit-backend-addr}
[3e4c0698992600d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b222d +0  29060000
[3e4c06989926dff] jit-backend-dump}
[3e4c06989929ff4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b223e +0  34060000
[3e4c0698992ad1c] jit-backend-dump}
[3e4c0698992de19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2270 +0  1E060000
[3e4c0698992eb19] jit-backend-dump}
[3e4c06989931b1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b22c5 +0  E5050000
[3e4c0698993279b] jit-backend-dump}
[3e4c069899357e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2316 +0  B0050000
[3e4c06989936491] jit-backend-dump}
[3e4c0698993948d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2324 +0  BE050000
[3e4c0698993a11f] jit-backend-dump}
[3e4c0698993d0c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2340 +0  BE050000
[3e4c0698993dd45] jit-backend-dump}
[3e4c06989940d5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2358 +0  C2050000
[3e4c069899419d6] jit-backend-dump}
[3e4c06989944aaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2375 +0  C1050000
[3e4c06989945725] jit-backend-dump}
[3e4c06989948841] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2387 +0  E7050000
[3e4c069899494ee] jit-backend-dump}
[3e4c0698994c56b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b23e2 +0  A8050000
[3e4c0698994d234] jit-backend-dump}
[3e4c0698995020e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2437 +0  6F050000
[3e4c06989950ed1] jit-backend-dump}
[3e4c06989953ee9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2445 +0  7D050000
[3e4c06989954b5c] jit-backend-dump}
[3e4c06989957b2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b244e +0  90050000
[3e4c0698995879e] jit-backend-dump}
[3e4c0698995b70a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b249c +0  5E050000
[3e4c0698995c37b] jit-backend-dump}
[3e4c0698995f38c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b24f1 +0  25050000
[3e4c0698995fff3] jit-backend-dump}
[3e4c06989962fc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b24ff +0  33050000
[3e4c06989963c3b] jit-backend-dump}
[3e4c06989966c2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2508 +0  46050000
[3e4c069899678ae] jit-backend-dump}
[3e4c0698996a848] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2561 +0  09050000
[3e4c0698996b4b2] jit-backend-dump}
[3e4c0698996e484] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b256f +0  17050000
[3e4c0698996f11f] jit-backend-dump}
[3e4c069899720b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b25c4 +0  DE040000
[3e4c06989972d2f] jit-backend-dump}
[3e4c06989975cd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b25d2 +0  EC040000
[3e4c06989976943] jit-backend-dump}
[3e4c0698997990e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b25ef +0  EB040000
[3e4c0698997a582] jit-backend-dump}
[3e4c0698997d5a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2652 +0  A4040000
[3e4c0698997e216] jit-backend-dump}
[3e4c069899811b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2660 +0  B2040000
[3e4c06989981e33] jit-backend-dump}
[3e4c06989984d65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2674 +0  BA040000
[3e4c069899859e2] jit-backend-dump}
[3e4c06989988930] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b267d +0  CD040000
[3e4c069899895a3] jit-backend-dump}
[3e4c0698998c512] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2686 +0  E0040000
[3e4c0698998d176] jit-backend-dump}
[3e4c069899900b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b26da +0  A8040000
[3e4c06989990d84] jit-backend-dump}
[3e4c06989993cea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b26f2 +0  AC040000
[3e4c06989994964] jit-backend-dump}
[3e4c069899978b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b26fc +0  BE040000
[3e4c06989998525] jit-backend-dump}
[3e4c0698999b49b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b270a +0  CC040000
[3e4c0698999c105] jit-backend-dump}
[3e4c0698999f056] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b272d +0  C5040000
[3e4c0698999fcc6] jit-backend-dump}
[3e4c069899a2ef8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522aef21 +0  DB320000
[3e4c069899a3bd0] jit-backend-dump}
[3e4c069899a79bb] jit-backend}
[3e4c069899ab4e6] {jit-log-opt-bridge
# bridge out of Guard 0x4356740 with 102 ops
[p0, p1, i2, f3, f4, i5, i6, p7, i8, i9]
+310: i11 = float_eq(f3, 0.000000)
+331: guard_false(i11, descr=<Guard0x43579a0>) [p0, p1, i2, f3, f4, i5, i6, i9, p7, i8]
+337: i12 = float_ne(f4, f4)
+348: guard_false(i12, descr=<Guard0x43824a0>) [p0, p1, i2, f3, f4, i5, i6, i9, p7, i8]
+354: f14 = call_f(ConstClass(fabs), f4, descr=<Callf 8 f EF=2>)
+377: i16 = float_lt(f14, 1.000000)
+398: guard_false(i16, descr=<Guard0x4357a00>) [p0, p1, f4, f14, i5, i6, i9, p7, i8]
+404: p18 = call_r(ConstClass(fromint), i5, descr=<Callr 8 i EF=3>)
+474: guard_no_exception(descr=<Guard0x4357a60>) [p0, p1, p18, None, i6, i9, p7, i8]
+496: p22 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr21), p18, descr=<Callr 8 rr EF=4>)
+555: guard_no_exception(descr=<Guard0x4357ac0>) [p0, p1, p22, None, i6, i9, p7, i8]
+570: i23 = getfield_gc_i(p22, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+574: i25 = int_gt(i23, 2)
+578: guard_true(i25, descr=<Guard0x43824e8>) [p0, p1, p22, None, i6, i9, p7, i8]
+584: p26 = getfield_gc_r(p0, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+603: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x4382530>) [p0, p1, p22, None, i6, i9, p7, i8]
+612: p28 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+623: guard_class(p28, 16505296, descr=<Guard0x4382578>) [p0, p1, p22, None, i6, i9, p7, i8]
debug_merge_point(0, 0, '(let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 (expt 2 (quotient AppRand8 y)))')
+636: p30 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+647: guard_nonnull_class(p30, ConstClass(ForwardLink), descr=<Guard0x4357b20>) [p0, p1, p22, None, i6, i9, p7, i8]
debug_merge_point(0, 0, '(- y 1)')
+665: guard_not_invalidated(descr=<Guard0x43825c0>) [p0, p1, p22, None, i6, i9, p7, i8]
+665: i32 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+670: i34 = int_sub_ovf(i32, 1)
+677: guard_no_overflow(descr=<Guard0x4382608>) [p0, p1, p22, None, i6, i9, p7, i8]
debug_merge_point(0, 0, '(let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))')
debug_merge_point(0, 0, '(expt g AppRand2)')
+683: p36 = call_r(ConstClass(fromint), i34, descr=<Callr 8 i EF=3>)
+759: guard_no_exception(descr=<Guard0x4357b80>) [p36, i34, p22, p0, p1, p30, None, None, None, None, None]
+774: p38 = call_r(ConstClass(rbigint.pow), p22, p36, descr=<Callr 8 rr EF=4>)
+844: guard_no_exception(descr=<Guard0x4357be0>) [p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+859: i39 = getfield_gc_i(p38, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+863: i41 = int_gt(i39, 2)
+867: guard_true(i41, descr=<Guard0x4382650>) [p38, i34, p22, p0, p1, p30, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))))')
debug_merge_point(0, 0, '(* a y)')
+873: i42 = int_is_true(i32)
+876: guard_true(i42, descr=<Guard0x4382698>) [p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+882: p44 = call_r(ConstClass(fromint), i32, descr=<Callr 8 i EF=3>)
+945: guard_no_exception(descr=<Guard0x4357c40>) [p44, i32, p38, None, p22, p0, p1, p30, None, None, None, None, None]
+960: p46 = call_r(ConstClass(rbigint.mul), p38, p44, descr=<Callr 8 rr EF=4>)
+1030: guard_no_exception(descr=<Guard0x4357ca0>) [p46, i32, p38, None, p22, p0, p1, p30, None, None, None, None, None]
+1045: i47 = getfield_gc_i(p46, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1049: i49 = int_gt(i47, 2)
+1053: guard_true(i49, descr=<Guard0x43826e0>) [p46, i32, p38, None, p22, p0, p1, p30, None, None, None, None, None]
debug_merge_point(0, 0, '(- y 1)')
debug_merge_point(0, 0, '(let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))')
debug_merge_point(0, 0, '(* a AppRand3)')
+1059: i50 = int_is_true(i34)
+1062: guard_true(i50, descr=<Guard0x4382728>) [p46, i32, p38, None, p22, p0, p1, p30, None, None, None, None, None]
+1068: p52 = call_r(ConstClass(rbigint.mul), p38, p36, descr=<Callr 8 rr EF=4>)
+1142: guard_no_exception(descr=<Guard0x4357d00>) [p52, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1157: i53 = getfield_gc_i(p52, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1161: i55 = int_gt(i53, 2)
+1165: guard_true(i55, descr=<Guard0x4382770>) [p52, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))))')
debug_merge_point(0, 0, '(* g c)')
+1171: p57 = call_r(ConstClass(rbigint.mul), p22, p52, descr=<Callr 8 rr EF=4>)
+1241: guard_no_exception(descr=<Guard0x4357d60>) [p57, p52, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1256: i58 = getfield_gc_i(p57, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1260: i60 = int_gt(i58, 2)
+1264: guard_true(i60, descr=<Guard0x43827b8>) [p57, p52, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))')
debug_merge_point(0, 0, '(+ x4934 AppRand4)')
+1270: p61 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1281: guard_nonnull_class(p61, ConstClass(W_Bignum), descr=<Guard0x4357dc0>) [p57, p52, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1299: p63 = getfield_gc_r(p61, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1303: p65 = call_r(ConstClass(rbigint.add), p63, p57, descr=<Callr 8 rr EF=4>)
+1383: guard_no_exception(descr=<Guard0x4357e20>) [p65, p61, p57, None, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1398: i66 = getfield_gc_i(p65, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1402: i68 = int_gt(i66, 2)
+1406: guard_true(i68, descr=<Guard0x4382800>) [p65, p61, p57, None, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g)))')
debug_merge_point(0, 0, '(quotient AppRand5 b)')
+1412: i69 = getfield_gc_i(p46, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1423: i70 = int_is_zero(i69)
+1426: guard_false(i70, descr=<Guard0x4382848>) [p65, p61, p57, None, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1432: i71 = int_lt(i66, i47)
+1435: guard_false(i71, descr=<Guard0x4382890>) [p65, p61, p57, None, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1441: i72 = int_eq(i66, i47)
+1444: guard_false(i72, descr=<Guard0x43828d8>) [p65, p61, p57, None, p46, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1450: p74 = call_r(ConstClass(_x_divrem), p65, p46, descr=<Callr 8 rr EF=5>)
+1519: guard_no_exception(descr=<Guard0x4357e80>) [p74, p46, p65, None, None, None, None, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1534: p75 = getfield_gc_r(p74, descr=<FieldP tuple2.item0 8 pure>)
+1538: p76 = getfield_gc_r(p74, descr=<FieldP tuple2.item1 16 pure>)
+1538: i77 = getfield_gc_i(p65, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1549: i78 = int_ne(i77, i69)
+1552: guard_false(i78, descr=<Guard0x4382920>) [p74, p46, p65, None, None, None, None, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1558: i80 = int_lt(i77, 0)
+1562: guard_false(i80, descr=<Guard0x4382968>) [p74, p46, p65, None, None, None, None, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
+1568: i81 = getfield_gc_i(p75, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1572: i83 = int_gt(i81, 2)
+1576: guard_true(i83, descr=<Guard0x43829b0>) [p74, p46, p65, None, None, None, None, None, p38, i34, p22, p0, p1, p30, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (< d g)]) (if if1 (loop4937 d) g))')
debug_merge_point(0, 0, '(< d g)')
+1582: i85 = call_i(ConstClass(rbigint.lt), p75, p22, descr=<Calli 1 rr EF=0>)
+1608: guard_true(i85, descr=<Guard0x4357ee0>) [i85, p75, None, None, None, None, None, None, None, p22, p0, p1, p30, None, None, None, None, None]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, '(loop4937 d)')
debug_merge_point(0, 0, '(let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))) from (loop4937 d)')
+1617: jump(p0, p75, p1, p30, i34, p36, i32, p44, p61, p63, descr=TargetToken(69318304))
+1696: --end of the loop--
[3e4c06989a19ca0] jit-log-opt-bridge}
[3e4c0698fb5ffe8] {jit-backend
[3e4c0698fc71074] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b2f
[3e4c0698fc7fc17] jit-backend-dump}
[3e4c0698fc8b891] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3084 +0  2C000000
[3e4c0698fc8cf42] jit-backend-dump}
[3e4c0698fc910d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3795 +0  2C000000
[3e4c0698fc9200b] jit-backend-dump}
[3e4c0698fc9540e] {jit-backend-addr
bridge out of Guard 0x435f2f8 has address 0x7ff2522b3080 to 0x7ff2522b3790
       gc table: 0x7ff2522b2f10
    jump target: 0x7ff2522b3080
         resops: 0x7ff2522b308e
       failures: 0x7ff2522b3790
            end: 0x7ff2522b3c96
[3e4c0698fc97946] jit-backend-addr}
[3e4c0698fc9b021] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b309b +0  EB070000
[3e4c0698fc9beaf] jit-backend-dump}
[3e4c0698fc9f430] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b30af +0  0F080000
[3e4c0698fca01cf] jit-backend-dump}
[3e4c0698fca34da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b30c4 +0  16080000
[3e4c0698fca41f6] jit-backend-dump}
[3e4c0698fca73df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b30db +0  1B080000
[3e4c0698fca811c] jit-backend-dump}
[3e4c0698fcab2f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b30e8 +0  2A080000
[3e4c0698fcac02c] jit-backend-dump}
[3e4c0698fcaf414] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b30ff +0  2F080000
[3e4c0698fcb012f] jit-backend-dump}
[3e4c0698fcb325a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b310f +0  3B080000
[3e4c0698fcb3f7c] jit-backend-dump}
[3e4c0698fcb7092] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3125 +0  41080000
[3e4c0698fcb7da7] jit-backend-dump}
[3e4c0698fcbaf6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b31af +0  D3070000
[3e4c0698fcbbc9c] jit-backend-dump}
[3e4c0698fcbedef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b31bd +0  E1070000
[3e4c0698fcbfb20] jit-backend-dump}
[3e4c0698fcc2c8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b31db +0  DF070000
[3e4c0698fcc39bf] jit-backend-dump}
[3e4c0698fcc6a8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b31f3 +0  E3070000
[3e4c0698fcc77b9] jit-backend-dump}
[3e4c0698fcca8db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b31fc +0  F6070000
[3e4c0698fccb60c] jit-backend-dump}
[3e4c0698fcce71c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3209 +0  05080000
[3e4c0698fccf43d] jit-backend-dump}
[3e4c0698fcd271b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3220 +0  0A080000
[3e4c0698fcd345e] jit-backend-dump}
[3e4c0698fcd6595] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b322d +0  19080000
[3e4c0698fcd72cf] jit-backend-dump}
[3e4c0698fcda4fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3236 +0  2C080000
[3e4c0698fcdb217] jit-backend-dump}
[3e4c0698fcde33c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3240 +0  3E080000
[3e4c0698fcdf054] jit-backend-dump}
[3e4c0698fce2198] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3257 +0  43080000
[3e4c0698fce2ea1] jit-backend-dump}
[3e4c0698fce90e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b326b +0  4B080000
[3e4c0698fce9f14] jit-backend-dump}
[3e4c0698fced806] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3281 +0  51080000
[3e4c0698fcee5a8] jit-backend-dump}
[3e4c0698fcf175d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b32e6 +0  08080000
[3e4c0698fcf249d] jit-backend-dump}
[3e4c0698fcf560b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3306 +0  04080000
[3e4c0698fcf633f] jit-backend-dump}
[3e4c0698fcf9436] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b330f +0  17080000
[3e4c0698fcfa164] jit-backend-dump}
[3e4c0698fcfd21e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b336b +0  D7070000
[3e4c0698fcfdf27] jit-backend-dump}
[3e4c0698fd00f92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3379 +0  E5070000
[3e4c0698fd01ca1] jit-backend-dump}
[3e4c0698fd04e00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3383 +0  F7070000
[3e4c0698fd05b06] jit-backend-dump}
[3e4c0698fd08bbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b33aa +0  EC070000
[3e4c0698fd098b1] jit-backend-dump}
[3e4c0698fd0ca7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3403 +0  AF070000
[3e4c0698fd0d7b2] jit-backend-dump}
[3e4c0698fd1099b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3411 +0  BD070000
[3e4c0698fd116de] jit-backend-dump}
[3e4c0698fd14890] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b34e1 +0  09070000
[3e4c0698fd1559f] jit-backend-dump}
[3e4c0698fd1865f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3532 +0  D4060000
[3e4c0698fd193a8] jit-backend-dump}
[3e4c0698fd1c59a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3547 +0  DB060000
[3e4c0698fd1d2b9] jit-backend-dump}
[3e4c0698fd203f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3599 +0  A5060000
[3e4c0698fd2111b] jit-backend-dump}
[3e4c0698fd242e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b35a7 +0  B3060000
[3e4c0698fd25016] jit-backend-dump}
[3e4c0698fd280e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b35cd +0  A9060000
[3e4c0698fd28e0d] jit-backend-dump}
[3e4c0698fd2c1e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b06b6 +0  C6290000
[3e4c0698fd2cf63] jit-backend-dump}
[3e4c0698fd30f7a] jit-backend}
[3e4c0698fd34c5e] {jit-log-opt-bridge
# bridge out of Guard 0x435f2f8 with 179 ops
[i0, p1, p2, p3, p4, p5]
+390: guard_false(i0, descr=<Guard0x439e440>) [i0, p1, p2, p3, p4, p5]
+399: guard_not_invalidated(descr=<Guard0x43832b0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, 'g')
+399: p6 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+410: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x4383268>) [i0, p1, p2, p3, p4, p5]
+419: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+423: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+427: guard_class(p9, 16435920, descr=<Guard0x4383220>) [i0, p1, p2, p3, p4, p5]
+440: p11 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+444: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x439e500>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(- new-a a4978) from (< d g)')
+463: guard_class(p8, 16500016, descr=<Guard0x43831d8>) [i0, p1, p2, p3, p4, p5]
+476: p14 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+480: guard_nonnull_class(p14, ConstClass(W_Bignum), descr=<Guard0x439e4a0>) [i0, p1, p2, p3, p4, p5]
+499: p16 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+503: guard_class(p16, 16500720, descr=<Guard0x4383190>) [i0, p1, p2, p3, p4, p5]
+515: p18 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+519: guard_nonnull_class(p18, ConstClass(W_Bignum), descr=<Guard0x439e3e0>) [i0, p1, p2, p3, p4, p5]
+537: p20 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+541: p21 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+545: p23 = call_r(ConstClass(rbigint.sub), p20, p21, descr=<Callr 8 rr EF=4>)
+660: guard_no_exception(descr=<Guard0x439e380>) [p8, p23, p18, p14, p9, p11, None, p2, None, None, None]
+675: i25 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+679: i27 = int_gt(i25, 2)
+683: guard_false(i27, descr=<Guard0x4383148>) [p8, p23, p18, p14, p9, p11, None, p2, None, None, None]
+689: i29 = call_i(ConstClass(rbigint._toint_helper), p23, descr=<Calli 8 r EF=4>)
+704: guard_no_exception(descr=<Guard0x439e260>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))')
debug_merge_point(0, 0, '(square AppRand15)')
+719: p30 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+730: guard_class(p30, 16477696, descr=<Guard0x4383100>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
+743: p32 = getfield_gc_r(p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+743: i33 = int_is_true(i29)
+746: guard_true(i33, descr=<Guard0x43830b8>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
+752: i34 = int_mul_ovf(i29, i29)
+759: guard_no_overflow(descr=<Guard0x4383070>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(* x4983 AppRand16)')
+765: p35 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+769: guard_nonnull_class(p35, ConstClass(W_Fixnum), descr=<Guard0x439e320>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
+788: i37 = getfield_gc_i(p35, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+792: i38 = int_is_true(i37)
+795: guard_true(i38, descr=<Guard0x4383028>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
+801: i39 = int_is_true(i34)
+804: guard_true(i39, descr=<Guard0x4382fe0>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
+810: i40 = int_mul_ovf(i37, i34)
+814: guard_no_overflow(descr=<Guard0x4382f98>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))')
debug_merge_point(0, 0, '(- t (quotient AppRand17 one))')
+820: p41 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+824: guard_nonnull_class(p41, ConstClass(W_Bignum), descr=<Guard0x439e2c0>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
+843: p43 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+854: guard_value(p43, ConstPtr(ptr44), descr=<Guard0x4382f50>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
+863: p45 = getfield_gc_r(p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+867: guard_nonnull_class(p45, ConstClass(W_Bignum), descr=<Guard0x439e200>) [p8, p23, i29, p18, p14, p9, p11, None, p2, None, None, None]
+885: p48 = call_r(ConstClass(fromint), i40, descr=<Callr 8 i EF=3>)
+971: guard_no_exception(descr=<Guard0x439e1a0>) [p48, p45, i40, i29, p8, p41, None, None, p9, p11, None, p2, None, None, None]
+986: p49 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+997: i50 = getfield_gc_i(p48, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1001: i51 = getfield_gc_i(p49, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1005: i52 = getfield_gc_i(p49, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1009: i53 = int_is_zero(i52)
+1012: guard_false(i53, descr=<Guard0x4382ec0>) [p48, p45, i40, i29, p8, p41, None, None, p9, p11, None, p2, None, None, None]
+1018: i54 = int_lt(i50, i51)
+1021: guard_true(i54, descr=<Guard0x4382de8>) [p48, p45, i40, i29, p8, p41, None, None, p9, p11, None, p2, None, None, None]
+1027: p55 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1045: p58 = call_r(ConstClass(rbigint.sub), p55, ConstPtr(ptr57), descr=<Callr 8 rr EF=4>)
+1104: guard_no_exception(descr=<Guard0x439e140>) [p58, i40, i29, p8, p41, None, None, p9, p11, None, p2, None, None, None]
+1119: i59 = getfield_gc_i(p58, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1123: i61 = int_gt(i59, 2)
+1127: guard_true(i61, descr=<Guard0x4382da0>) [p58, i40, i29, p8, p41, None, None, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(* 2 x4983)')
+1133: i63 = int_mul_ovf(2, i37)
+1137: guard_no_overflow(descr=<Guard0x4382d58>) [p58, i40, i29, p8, p41, None, None, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+1143: i65 = call_i(ConstClass(rbigint.eq), p20, p2, descr=<Calli 1 rr EF=0>)
+1173: guard_false(i65, descr=<Guard0x439e0e0>) [i65, i63, p58, p30, None, None, None, None, None, p14, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+1182: p67 = call_r(ConstClass(rbigint.add), p20, p2, descr=<Callr 8 rr EF=4>)
+1256: guard_no_exception(descr=<Guard0x439e020>) [p67, i63, p58, p30, None, None, None, None, None, p14, p9, p11, None, p2, None, None, None]
+1271: i68 = getfield_gc_i(p67, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1275: i70 = int_gt(i68, 2)
+1279: guard_true(i70, descr=<Guard0x4382d10>) [p67, i63, p58, p30, None, None, None, None, None, p14, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+1292: i73 = getarrayitem_gc_i(ConstPtr(ptr71), 0, descr=<ArrayS 8>)
+1296: p74 = new_array_clear(i68, descr=<ArrayS 8>)
+1396: p75 = new_with_vtable(descr=<SizeDescr 32>)
+1437: setfield_gc(p75, i68, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1441: setfield_gc(p75, p74, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1445: i77 = call_i(ConstClass(_inplace_divrem1), p75, p67, i73, descr=<Calli 8 rri EF=5>)
+1470: setfield_gc(p75, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1478: guard_no_exception(descr=<Guard0x439e560>) [p67, i77, p75, i63, p58, p30, None, None, None, None, None, p14, p9, p11, None, p2, None, None, None]
+1493: call_n(ConstClass(rbigint._normalize), p75, descr=<Callv 0 r EF=5>)
+1559: guard_no_exception(descr=<Guard0x439e5c0>) [p67, i77, p75, i63, p58, p30, None, None, None, None, None, p14, p9, p11, None, p2, None, None, None]
+1574: i80 = int_is_true(i77)
+1574: i81 = getfield_gc_i(p67, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1585: i83 = int_ne(i81, 1)
+1589: guard_false(i83, descr=<Guard0x4383340>) [p67, i77, p75, i63, p58, p30, None, None, None, None, None, p14, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1595: p85 = call_r(ConstClass(rbigint.mul), p20, p2, descr=<Callr 8 rr EF=4>)
+1662: guard_no_exception(descr=<Guard0x439e620>) [p85, p75, i63, p58, p30, None, None, None, None, None, p14, p9, p11, None, p2, None, None, None]
+1677: i86 = getfield_gc_i(p85, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1681: i88 = int_gt(i86, 2)
+1685: guard_true(i88, descr=<Guard0x4383388>) [p85, p75, i63, p58, p30, None, None, None, None, None, p14, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1698: i91 = call_i(ConstClass(rbigint.lt), p85, ConstPtr(ptr90), descr=<Calli 1 rr EF=0>)
+1720: guard_false(i91, descr=<Guard0x439e680>) [i91, p85, p75, i63, p58, p30, None, None, None, None, None, p14, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1729: p92 = new_with_vtable(descr=<SizeDescr 32>)
+1773: p93 = new_with_vtable(descr=<SizeDescr 32>)
+1791: setfield_gc(p93, ConstPtr(ptr94), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1802: setfield_gc(p93, ConstPtr(ptr95), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1806: p96 = new_with_vtable(descr=<SizeDescr 16>)
+1817: setfield_gc(p96, p85, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1821: setfield_gc(p93, p96, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1825: p97 = new_with_vtable(descr=<SizeDescr 48>)
+1837: p98 = new_with_vtable(descr=<SizeDescr 32>)
+1848: setfield_gc(p98, ConstPtr(ptr99), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1852: setfield_gc(p98, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1860: setfield_gc(p98, p96, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1864: p101 = new_with_vtable(descr=<SizeDescr 40>)
+1875: setfield_gc(p101, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1886: p102 = new_with_vtable(descr=<SizeDescr 32>)
+1897: p103 = new_with_vtable(descr=<SizeDescr 48>)
+1908: setfield_gc(p103, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1919: setfield_gc(p103, p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1930: p104 = new_with_vtable(descr=<SizeDescr 16>)
+1941: setfield_gc(p104, p2, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1952: setfield_gc(p103, p104, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1956: p105 = new_with_vtable(descr=<SizeDescr 16>)
+1967: setfield_gc(p105, p58, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1978: setfield_gc(p103, p105, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1982: p106 = new_with_vtable(descr=<SizeDescr 16>)
+1993: setfield_gc(p106, i63, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1997: setfield_gc(p103, p106, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+2001: setfield_gc(p102, p103, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2005: p107 = new_with_vtable(descr=<SizeDescr 16>)
+2016: setfield_gc(p107, p75, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2027: setfield_gc(p102, p107, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+2031: setfield_gc(p102, p96, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+2035: setfield_gc(p101, p102, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2039: setfield_gc(p101, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2050: setfield_gc(p101, ConstPtr(ptr108), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2061: p109 = new_with_vtable(descr=<SizeDescr 40>)
+2072: setfield_gc(p109, ConstPtr(ptr110), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2083: setfield_gc(p109, ConstPtr(ptr111), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2087: setfield_gc(p109, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2095: setfield_gc(p109, p96, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2106: setfield_gc(p97, ConstPtr(ptr113), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2110: setfield_gc(p97, p98, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2114: setfield_gc(p97, p101, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2118: setfield_gc(p97, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2122: setfield_gc(p92, p93, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2126: setfield_gc(p92, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2134: setfield_gc(p92, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2142: setfield_gc(p97, p109, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2146: jump(p92, p97, descr=TargetToken(69318064))
+2176: --end of the loop--
[3e4c0698fdca4a7] jit-log-opt-bridge}
[3e4c06995485edf] {jit-backend
[3e4c06995518bcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3e
[3e4c069955246a6] jit-backend-dump}
[3e4c069955308e5] {jit-backend-addr
Loop 13 ((let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)) has address 0x7ff2522b3f6d to 0x7ff2522b43c0 (bootstrap 0x7ff2522b3ee0)
       gc table: 0x7ff2522b3e20
       function: 0x7ff2522b3ee0
         resops: 0x7ff2522b3f6d
       failures: 0x7ff2522b43c0
            end: 0x7ff2522b4630
[3e4c06995533dc1] jit-backend-addr}
[3e4c06995538459] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3f84 +0  E8040000
[3e4c06995539875] jit-backend-dump}
[3e4c0699553cf9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3f9a +0  EE040000
[3e4c0699553de0b] jit-backend-dump}
[3e4c06995541377] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3fad +0  13050000
[3e4c069955420b8] jit-backend-dump}
[3e4c069955454f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3fc3 +0  19050000
[3e4c0699554625d] jit-backend-dump}
[3e4c06995549577] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3fd9 +0  1F050000
[3e4c0699554a2ec] jit-backend-dump}
[3e4c0699554d650] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b400d +0  07050000
[3e4c0699554e368] jit-backend-dump}
[3e4c06995551692] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4073 +0  BD040000
[3e4c0699555239b] jit-backend-dump}
[3e4c069955555b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4081 +0  CB040000
[3e4c069955562b5] jit-backend-dump}
[3e4c0699555948e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4147 +0  21040000
[3e4c0699555a191] jit-backend-dump}
[3e4c0699555d2f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b419f +0  E5030000
[3e4c0699555e009] jit-backend-dump}
[3e4c069955611c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b41b4 +0  EC030000
[3e4c06995561ec7] jit-backend-dump}
[3e4c0699556507e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4206 +0  B6030000
[3e4c06995565d8b] jit-backend-dump}
[3e4c06995568ef9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4214 +0  C4030000
[3e4c06995569bf9] jit-backend-dump}
[3e4c0699556cdc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b422d +0  C7030000
[3e4c0699556dac9] jit-backend-dump}
[3e4c06995570c59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4253 +0  BD030000
[3e4c06995571956] jit-backend-dump}
[3e4c0699557554e] jit-backend}
[3e4c069955792f3] {jit-log-opt-loop
# Loop 13 ((let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)) : entry bridge with 104 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
+341: guard_class(p1, 16435920, descr=<Guard0x439e6e0>) [p0, p1]
+360: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+364: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x439e740>) [p0, p1]
debug_merge_point(0, 0, '(= a4978 b4980)')
+382: guard_not_invalidated(descr=<Guard0x43834f0>) [p0, p1]
+382: guard_class(p0, 16500720, descr=<Guard0x4383538>) [p0, p1]
+401: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+405: guard_nonnull_class(p6, ConstClass(W_Bignum), descr=<Guard0x439e7a0>) [p0, p1]
+423: p8 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+427: guard_nonnull_class(p8, ConstClass(W_Bignum), descr=<Guard0x439e800>) [p0, p1]
+445: p10 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+449: p11 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+453: i13 = call_i(ConstClass(rbigint.eq), p10, p11, descr=<Calli 1 rr EF=0>)
+488: guard_false(i13, descr=<Guard0x439e860>) [p0, i13, p1, p3]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+497: p15 = call_r(ConstClass(rbigint.add), p10, p11, descr=<Callr 8 rr EF=4>)
+584: guard_no_exception(descr=<Guard0x439e8c0>) [p0, p15, p8, p6, p1, p3]
+599: i16 = getfield_gc_i(p15, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+603: i18 = int_gt(i16, 2)
+607: guard_true(i18, descr=<Guard0x4383580>) [p0, p15, p8, p6, p1, p3]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+620: i21 = getarrayitem_gc_i(ConstPtr(ptr19), 0, descr=<ArrayS 8>)
+624: p22 = new_array_clear(i16, descr=<ArrayS 8>)
+717: p23 = new_with_vtable(descr=<SizeDescr 32>)
+758: setfield_gc(p23, i16, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+762: setfield_gc(p23, p22, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+766: i25 = call_i(ConstClass(_inplace_divrem1), p23, p15, i21, descr=<Calli 8 rri EF=5>)
+787: setfield_gc(p23, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+796: guard_no_exception(descr=<Guard0x439e920>) [p15, i25, p23, p0, None, None, p1, p3]
+811: call_n(ConstClass(rbigint._normalize), p23, descr=<Callv 0 r EF=5>)
+884: guard_no_exception(descr=<Guard0x439e980>) [p15, i25, p23, p0, None, None, p1, p3]
+899: i29 = int_is_true(i25)
+899: i30 = getfield_gc_i(p15, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+910: i32 = int_ne(i30, 1)
+914: guard_false(i32, descr=<Guard0x43835c8>) [p15, i25, p23, p0, None, None, p1, p3]
debug_merge_point(0, 0, '(* a4978 b4980)')
+920: p34 = call_r(ConstClass(rbigint.mul), p10, p11, descr=<Callr 8 rr EF=4>)
+987: guard_no_exception(descr=<Guard0x439e9e0>) [p0, p34, p23, None, p8, p6, p1, p3]
+1002: i35 = getfield_gc_i(p34, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1006: i37 = int_gt(i35, 2)
+1010: guard_true(i37, descr=<Guard0x4383610>) [p0, p34, p23, None, p8, p6, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
+1016: p38 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1027: guard_class(p38, 16477696, descr=<Guard0x4383658>) [p0, p34, p23, None, p8, p6, p1, p3]
+1041: p40 = getfield_gc_r(p38, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1048: i43 = call_i(ConstClass(rbigint.lt), p34, ConstPtr(ptr42), descr=<Calli 1 rr EF=0>)
+1070: guard_false(i43, descr=<Guard0x439ea40>) [i43, p34, p23, p0, None, None, p1, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1079: p44 = new_with_vtable(descr=<SizeDescr 32>)
+1123: p45 = new_with_vtable(descr=<SizeDescr 32>)
+1141: setfield_gc(p45, ConstPtr(ptr46), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1152: setfield_gc(p45, ConstPtr(ptr47), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1156: p48 = new_with_vtable(descr=<SizeDescr 16>)
+1168: setfield_gc(p48, p34, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1172: setfield_gc(p45, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1176: p49 = new_with_vtable(descr=<SizeDescr 48>)
+1188: p50 = new_with_vtable(descr=<SizeDescr 32>)
+1200: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1204: setfield_gc(p50, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1212: setfield_gc(p50, p48, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1216: p53 = new_with_vtable(descr=<SizeDescr 40>)
+1227: setfield_gc(p53, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1238: p54 = new_with_vtable(descr=<SizeDescr 32>)
+1249: setfield_gc(p54, p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1253: p55 = new_with_vtable(descr=<SizeDescr 16>)
+1264: setfield_gc(p55, p23, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1275: setfield_gc(p54, p55, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1279: setfield_gc(p54, p48, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1283: setfield_gc(p53, p54, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1287: setfield_gc(p53, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1305: setfield_gc(p53, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1309: p57 = new_with_vtable(descr=<SizeDescr 40>)
+1320: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1331: setfield_gc(p57, ConstPtr(ptr59), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1335: setfield_gc(p57, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1343: setfield_gc(p57, p48, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1347: setfield_gc(p49, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1352: setfield_gc(p44, p45, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1356: setfield_gc(p44, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1364: setfield_gc(p44, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1372: setfield_gc(p49, p50, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1377: setfield_gc(p49, p53, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1389: setfield_gc(p49, ConstPtr(ptr63), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1394: setfield_gc(p49, p57, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1399: jump(p44, p49, descr=TargetToken(69318064))
+1440: --end of the loop--
[3e4c069955d4933] jit-log-opt-loop}
[3e4c06995e2d5a2] {jit-backend
[3e4c06995f2c2b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b
[3e4c06995f3c510] jit-backend-dump}
[3e4c06995f478b2] {jit-backend-addr
Loop 14 ((let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))) from (* x4969 x4969)) has address 0x7ff2522b4b6d to 0x7ff2522b52d0 (bootstrap 0x7ff2522b4ae0)
       gc table: 0x7ff2522b4960
       function: 0x7ff2522b4ae0
         resops: 0x7ff2522b4b6d
       failures: 0x7ff2522b52d0
            end: 0x7ff2522b580c
[3e4c06995f4a8fb] jit-backend-addr}
[3e4c06995f4ef33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4b84 +0  40080000
[3e4c06995f5027f] jit-backend-dump}
[3e4c06995f539f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4b9b +0  45080000
[3e4c06995f548a6] jit-backend-dump}
[3e4c06995f57bc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4bb1 +0  4B080000
[3e4c06995f58922] jit-backend-dump}
[3e4c06995f5bfae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4bbd +0  77080000
[3e4c06995f5cd4d] jit-backend-dump}
[3e4c06995f600fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4bcd +0  83080000
[3e4c06995f60e53] jit-backend-dump}
[3e4c06995f6410c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4bdd +0  8F080000
[3e4c06995f64e58] jit-backend-dump}
[3e4c06995f680fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4bf4 +0  94080000
[3e4c06995f68de9] jit-backend-dump}
[3e4c06995f6bfe7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4c0b +0  99080000
[3e4c06995f6ccd2] jit-backend-dump}
[3e4c06995f6ff07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4c18 +0  A8080000
[3e4c06995f70c04] jit-backend-dump}
[3e4c06995f73e2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4c8c +0  50080000
[3e4c06995f74b24] jit-backend-dump}
[3e4c06995f77d6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4ce1 +0  17080000
[3e4c06995f78a84] jit-backend-dump}
[3e4c06995f7bcb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4cef +0  25080000
[3e4c06995f7c9b6] jit-backend-dump}
[3e4c06995f7fbd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4d0c +0  24080000
[3e4c06995f808e2] jit-backend-dump}
[3e4c06995f83afb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4d1c +0  30080000
[3e4c06995f847e9] jit-backend-dump}
[3e4c06995f87a1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4d30 +0  38080000
[3e4c06995f88703] jit-backend-dump}
[3e4c06995f8b96f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4d46 +0  3E080000
[3e4c06995f8c650] jit-backend-dump}
[3e4c06995f8f895] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4d5b +0  45080000
[3e4c06995f905c6] jit-backend-dump}
[3e4c06995f937d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4d64 +0  58080000
[3e4c06995f944b8] jit-backend-dump}
[3e4c06995f976a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4d6d +0  6B080000
[3e4c06995f9838b] jit-backend-dump}
[3e4c06995f9b52a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4d77 +0  7D080000
[3e4c06995f9c212] jit-backend-dump}
[3e4c06995f9f3e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4de0 +0  30080000
[3e4c06995fa00e8] jit-backend-dump}
[3e4c06995fa3385] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4df8 +0  34080000
[3e4c06995fa4073] jit-backend-dump}
[3e4c06995fa721e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4e02 +0  46080000
[3e4c06995fa7f46] jit-backend-dump}
[3e4c06995fab1ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4e10 +0  54080000
[3e4c06995fabefc] jit-backend-dump}
[3e4c06995faf13a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4e6c +0  14080000
[3e4c06995fafe34] jit-backend-dump}
[3e4c06995fb2ffb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4e7a +0  22080000
[3e4c06995fb3cca] jit-backend-dump}
[3e4c06995fb6e7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4e84 +0  34080000
[3e4c06995fb7b57] jit-backend-dump}
[3e4c06995fbad3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4ea1 +0  33080000
[3e4c06995fbba2a] jit-backend-dump}
[3e4c06995fbebd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4ebe +0  32080000
[3e4c06995fbf8b7] jit-backend-dump}
[3e4c06995fc2a72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4eef +0  1D080000
[3e4c06995fc3763] jit-backend-dump}
[3e4c06995fc695e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4f55 +0  D3070000
[3e4c06995fc7698] jit-backend-dump}
[3e4c06995fca850] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b4f63 +0  E1070000
[3e4c06995fcb531] jit-backend-dump}
[3e4c06995fce70e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5030 +0  30070000
[3e4c06995fcf3ec] jit-backend-dump}
[3e4c06995fd25b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5081 +0  FB060000
[3e4c06995fd3298] jit-backend-dump}
[3e4c06995fd6415] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5096 +0  02070000
[3e4c06995fda4fa] jit-backend-dump}
[3e4c06995fde2cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b50e8 +0  CC060000
[3e4c06995fdf09c] jit-backend-dump}
[3e4c06995fe2468] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b50f6 +0  DA060000
[3e4c06995fe319f] jit-backend-dump}
[3e4c06995fe63a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b511c +0  D0060000
[3e4c06995fe70b0] jit-backend-dump}
[3e4c06995fead44] jit-backend}
[3e4c06995fee8af] {jit-log-opt-loop
# Loop 14 ((let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))) from (* x4969 x4969)) : entry bridge with 178 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))) from (* x4969 x4969)')
+533: guard_class(p0, 16499664, descr=<Guard0x439eaa0>) [p1, p0]
+552: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+556: guard_class(p1, 16435920, descr=<Guard0x43836a0>) [p1, p0]
+575: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+579: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x439eb00>) [p1, p0]
debug_merge_point(0, 0, '(* x4983 AppRand16)')
+597: guard_not_invalidated(descr=<Guard0x43836e8>) [p1, p0]
+597: guard_class(p3, 16500016, descr=<Guard0x4383730>) [p1, p0]
+609: p8 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+613: guard_class(p8, 16500016, descr=<Guard0x4383778>) [p1, p0]
+625: p10 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+629: guard_class(p10, 16500720, descr=<Guard0x43837c0>) [p1, p0]
+641: p12 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+645: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x439eb60>) [p1, p0]
+664: p14 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+668: guard_nonnull_class(p14, ConstClass(W_Bignum), descr=<Guard0x439ebc0>) [p1, p0]
+687: i16 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+691: i17 = int_is_true(i16)
+694: guard_true(i17, descr=<Guard0x4383808>) [p1, p0]
+700: p19 = call_r(ConstClass(fromint), i16, descr=<Callr 8 i EF=3>)
+801: guard_no_exception(descr=<Guard0x439ec20>) [p0, p19, p14, p12, p1, p3, p5]
+816: p20 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+827: p22 = call_r(ConstClass(rbigint.mul), p19, p20, descr=<Callr 8 rr EF=4>)
+886: guard_no_exception(descr=<Guard0x439ec80>) [p0, p22, p14, p12, p1, p3, p5]
+901: i23 = getfield_gc_i(p22, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+905: i25 = int_gt(i23, 2)
+909: guard_true(i25, descr=<Guard0x4383850>) [p0, p22, p14, p12, p1, p3, p5]
debug_merge_point(0, 0, '(let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))')
debug_merge_point(0, 0, '(- t (quotient AppRand17 one))')
+915: p26 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+926: guard_nonnull_class(p26, ConstClass(W_Bignum), descr=<Guard0x439ece0>) [p0, p22, p14, p12, p1, p3, p5]
+944: p28 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+948: guard_class(p28, 16477696, descr=<Guard0x4383898>) [p0, p22, p14, p12, p1, p3, p5]
+960: p30 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+971: guard_value(p30, ConstPtr(ptr31), descr=<Guard0x43838e0>) [p0, p22, p14, p12, p1, p3, p5]
+980: p32 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+984: guard_nonnull_class(p32, ConstClass(W_Bignum), descr=<Guard0x439ed40>) [p0, p22, p14, p12, p1, p3, p5]
+1002: p34 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1006: i35 = getfield_gc_i(p34, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1010: i36 = getfield_gc_i(p34, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1014: i37 = int_is_zero(i36)
+1017: guard_false(i37, descr=<Guard0x4383928>) [p0, p22, p14, p12, p1, p3, p5]
+1023: i38 = int_lt(i23, i35)
+1026: guard_false(i38, descr=<Guard0x4383970>) [p0, p22, p14, p12, p1, p3, p5]
+1032: i39 = int_eq(i23, i35)
+1035: guard_false(i39, descr=<Guard0x43839b8>) [p0, p22, p14, p12, p1, p3, p5]
+1041: i41 = int_eq(i35, 1)
+1045: guard_false(i41, descr=<Guard0x4383a00>) [p0, p22, p14, p12, p1, p3, p5]
+1051: p43 = call_r(ConstClass(_x_divrem), p22, p34, descr=<Callr 8 rr EF=5>)
+1141: guard_no_exception(descr=<Guard0x439eda0>) [p43, p34, p22, p26, None, None, p1, p3, p5]
+1156: p45 = getfield_gc_r(p43, descr=<FieldP tuple2.item0 8 pure>)
+1160: p46 = getfield_gc_r(p43, descr=<FieldP tuple2.item1 16 pure>)
+1160: i47 = getfield_gc_i(p22, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1171: i48 = int_ne(i47, i36)
+1174: guard_false(i48, descr=<Guard0x4383a48>) [p43, p34, p22, p26, None, None, p1, p3, p5]
+1180: i50 = int_lt(i47, 0)
+1184: guard_false(i50, descr=<Guard0x4383a90>) [p43, p34, p22, p26, None, None, p1, p3, p5]
+1190: i51 = getfield_gc_i(p45, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1194: i53 = int_gt(i51, 2)
+1198: guard_true(i53, descr=<Guard0x4383ad8>) [p43, p34, p22, p26, None, None, p1, p3, p5]
+1204: p54 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1215: p56 = call_r(ConstClass(rbigint.sub), p54, p45, descr=<Callr 8 rr EF=4>)
+1281: guard_no_exception(descr=<Guard0x439ee00>) [p56, p45, p22, p26, None, None, p1, p3, p5]
+1296: i57 = getfield_gc_i(p56, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1300: i59 = int_gt(i57, 2)
+1304: guard_true(i59, descr=<Guard0x4383b20>) [p56, p45, p22, p26, None, None, p1, p3, p5]
debug_merge_point(0, 0, '(* 2 x4983)')
+1310: i61 = int_mul_ovf(2, i16)
+1314: guard_no_overflow(descr=<Guard0x4383b68>) [p56, p45, p22, p26, None, None, p1, p3, p5]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
+1320: p62 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1331: guard_nonnull_class(p62, ConstClass(W_Bignum), descr=<Guard0x439ee60>) [p56, p45, p22, p26, None, None, p1, p3, p5]
+1349: p64 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1360: guard_nonnull_class(p64, ConstClass(W_Bignum), descr=<Guard0x439eec0>) [p56, p45, p22, p26, None, None, p1, p3, p5]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+1378: p66 = getfield_gc_r(p62, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1382: p67 = getfield_gc_r(p64, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1386: i69 = call_i(ConstClass(rbigint.eq), p66, p67, descr=<Calli 1 rr EF=0>)
+1418: guard_false(i69, descr=<Guard0x439ef20>) [i69, i61, p56, p64, p62, p28, None, None, None, None, None, p1, None, p5]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+1427: p71 = call_r(ConstClass(rbigint.add), p66, p67, descr=<Callr 8 rr EF=4>)
+1514: guard_no_exception(descr=<Guard0x439ef80>) [p71, i61, p56, p64, p62, p28, None, None, None, None, None, p1, None, p5]
+1529: i72 = getfield_gc_i(p71, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1533: i74 = int_gt(i72, 2)
+1537: guard_true(i74, descr=<Guard0x4383bb0>) [p71, i61, p56, p64, p62, p28, None, None, None, None, None, p1, None, p5]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+1550: i77 = getarrayitem_gc_i(ConstPtr(ptr75), 0, descr=<ArrayS 8>)
+1554: p78 = new_array_clear(i72, descr=<ArrayS 8>)
+1651: p79 = new_with_vtable(descr=<SizeDescr 32>)
+1692: setfield_gc(p79, i72, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1696: setfield_gc(p79, p78, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1700: i81 = call_i(ConstClass(_inplace_divrem1), p79, p71, i77, descr=<Calli 8 rri EF=5>)
+1725: setfield_gc(p79, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1733: guard_no_exception(descr=<Guard0x439efe0>) [p71, i81, p79, i61, p56, p64, p62, p28, None, None, None, None, None, p1, None, p5]
+1748: call_n(ConstClass(rbigint._normalize), p79, descr=<Callv 0 r EF=5>)
+1814: guard_no_exception(descr=<Guard0x439f040>) [p71, i81, p79, i61, p56, p64, p62, p28, None, None, None, None, None, p1, None, p5]
+1829: i84 = int_is_true(i81)
+1829: i85 = getfield_gc_i(p71, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1840: i87 = int_ne(i85, 1)
+1844: guard_false(i87, descr=<Guard0x4383bf8>) [p71, i81, p79, i61, p56, p64, p62, p28, None, None, None, None, None, p1, None, p5]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1850: p89 = call_r(ConstClass(rbigint.mul), p66, p67, descr=<Callr 8 rr EF=4>)
+1917: guard_no_exception(descr=<Guard0x439f0a0>) [p89, p79, i61, p56, p64, p62, p28, None, None, None, None, None, p1, None, p5]
+1932: i90 = getfield_gc_i(p89, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1936: i92 = int_gt(i90, 2)
+1940: guard_true(i92, descr=<Guard0x4383c40>) [p89, p79, i61, p56, p64, p62, p28, None, None, None, None, None, p1, None, p5]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
+1946: p93 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1953: i96 = call_i(ConstClass(rbigint.lt), p89, ConstPtr(ptr95), descr=<Calli 1 rr EF=0>)
+1975: guard_false(i96, descr=<Guard0x439f100>) [i96, p89, p79, i61, p56, p64, p62, p28, None, None, None, None, None, p1, None, p5]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1984: p97 = new_with_vtable(descr=<SizeDescr 32>)
+2028: p98 = new_with_vtable(descr=<SizeDescr 32>)
+2046: setfield_gc(p98, ConstPtr(ptr99), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2057: setfield_gc(p98, ConstPtr(ptr100), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2061: p101 = new_with_vtable(descr=<SizeDescr 16>)
+2072: setfield_gc(p101, p89, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2076: setfield_gc(p98, p101, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+2080: p102 = new_with_vtable(descr=<SizeDescr 48>)
+2092: p103 = new_with_vtable(descr=<SizeDescr 32>)
+2103: setfield_gc(p103, ConstPtr(ptr104), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2107: setfield_gc(p103, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+2115: setfield_gc(p103, p101, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+2119: p106 = new_with_vtable(descr=<SizeDescr 40>)
+2130: setfield_gc(p106, p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2141: p107 = new_with_vtable(descr=<SizeDescr 32>)
+2152: p108 = new_with_vtable(descr=<SizeDescr 48>)
+2163: setfield_gc(p108, p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2174: setfield_gc(p108, p62, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+2185: setfield_gc(p108, p64, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+2196: p109 = new_with_vtable(descr=<SizeDescr 16>)
+2207: setfield_gc(p109, p56, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2218: setfield_gc(p108, p109, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+2222: p110 = new_with_vtable(descr=<SizeDescr 16>)
+2233: setfield_gc(p110, i61, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2237: setfield_gc(p108, p110, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+2241: setfield_gc(p107, p108, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2245: p111 = new_with_vtable(descr=<SizeDescr 16>)
+2256: setfield_gc(p111, p79, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2267: setfield_gc(p107, p111, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+2271: setfield_gc(p107, p101, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+2275: setfield_gc(p106, p107, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2279: setfield_gc(p106, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2297: setfield_gc(p106, ConstPtr(ptr112), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2301: p113 = new_with_vtable(descr=<SizeDescr 40>)
+2312: setfield_gc(p113, ConstPtr(ptr114), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2323: setfield_gc(p113, ConstPtr(ptr115), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2327: setfield_gc(p113, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2335: setfield_gc(p113, p101, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2339: setfield_gc(p97, p98, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2343: setfield_gc(p102, p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2347: setfield_gc(p97, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2355: setfield_gc(p97, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2363: setfield_gc(p102, p103, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2367: setfield_gc(p102, p106, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2378: setfield_gc(p102, ConstPtr(ptr119), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2382: setfield_gc(p102, p113, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2386: jump(p97, p102, descr=TargetToken(69318064))
+2416: --end of the loop--
[3e4c0699608506f] jit-log-opt-loop}
[3e4c069980936e5] {jit-backend
[3e4c0699819a077] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5b
[3e4c069981a8e9c] jit-backend-dump}
[3e4c069981b5f2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5c84 +0  2C000000
[3e4c069981b76ce] jit-backend-dump}
[3e4c069981bb931] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b6405 +0  2C000000
[3e4c069981bc873] jit-backend-dump}
[3e4c069981bfb3e] {jit-backend-addr
bridge out of Guard 0x4383148 has address 0x7ff2522b5c80 to 0x7ff2522b6400
       gc table: 0x7ff2522b5b20
    jump target: 0x7ff2522b5c80
         resops: 0x7ff2522b5c8e
       failures: 0x7ff2522b6400
            end: 0x7ff2522b690e
[3e4c069981c2106] jit-backend-addr}
[3e4c069981c5758] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5ca0 +0  7A080000
[3e4c069981c659c] jit-backend-dump}
[3e4c069981c9ebf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5cbf +0  93080000
[3e4c069981cabce] jit-backend-dump}
[3e4c069981cde75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5cd8 +0  96080000
[3e4c069981cebb5] jit-backend-dump}
[3e4c069981d1f41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5ce9 +0  A1080000
[3e4c069981d2bc3] jit-backend-dump}
[3e4c069981d5df2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5d4f +0  57080000
[3e4c069981d6a6c] jit-backend-dump}
[3e4c069981d9bce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5d5d +0  65080000
[3e4c069981da844] jit-backend-dump}
[3e4c069981dd89f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5d7c +0  62080000
[3e4c069981de503] jit-backend-dump}
[3e4c069981e15d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5d89 +0  71080000
[3e4c069981e224c] jit-backend-dump}
[3e4c069981e54c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5dde +0  38080000
[3e4c069981e612f] jit-backend-dump}
[3e4c069981e9345] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5e2c +0  06080000
[3e4c069981e9fa6] jit-backend-dump}
[3e4c069981ed0f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5e3a +0  14080000
[3e4c069981edd5d] jit-backend-dump}
[3e4c069981f0e1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5e58 +0  12080000
[3e4c069981f1aa3] jit-backend-dump}
[3e4c069981f4afe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5e73 +0  13080000
[3e4c069981f5786] jit-backend-dump}
[3e4c069981f88a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5e8a +0  18080000
[3e4c069981f9531] jit-backend-dump}
[3e4c069981fc619] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5e9f +0  1F080000
[3e4c069981fd28c] jit-backend-dump}
[3e4c0699820034c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5ea8 +0  32080000
[3e4c06998200fb6] jit-backend-dump}
[3e4c06998204027] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5eb1 +0  45080000
[3e4c06998204c8e] jit-backend-dump}
[3e4c06998207d04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5ebb +0  57080000
[3e4c06998208987] jit-backend-dump}
[3e4c0699820b9e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5f1d +0  11080000
[3e4c0699820c655] jit-backend-dump}
[3e4c0699820f6ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5f35 +0  15080000
[3e4c0699821035b] jit-backend-dump}
[3e4c069982133e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5f3f +0  27080000
[3e4c06998214054] jit-backend-dump}
[3e4c069982170dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5f4d +0  35080000
[3e4c06998217d53] jit-backend-dump}
[3e4c0699821ae41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5fa9 +0  F5070000
[3e4c0699821baba] jit-backend-dump}
[3e4c0699821ec0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5fb7 +0  03080000
[3e4c0699821f88a] jit-backend-dump}
[3e4c069982228fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5fc1 +0  15080000
[3e4c06998223574] jit-backend-dump}
[3e4c069982265f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5fe0 +0  12080000
[3e4c06998227257] jit-backend-dump}
[3e4c0699822a2da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b600a +0  04080000
[3e4c0699822af41] jit-backend-dump}
[3e4c0699822dff2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b606d +0  BD070000
[3e4c0699822ec6b] jit-backend-dump}
[3e4c06998231d10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b607b +0  CB070000
[3e4c06998232977] jit-backend-dump}
[3e4c069982359fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b6148 +0  1A070000
[3e4c06998236667] jit-backend-dump}
[3e4c069982396ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b6199 +0  E5060000
[3e4c0699823a357] jit-backend-dump}
[3e4c0699823d3ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b61ae +0  EC060000
[3e4c0699823e05f] jit-backend-dump}
[3e4c069982410c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b6200 +0  B6060000
[3e4c06998241d31] jit-backend-dump}
[3e4c06998244da7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b620e +0  C4060000
[3e4c06998245a24] jit-backend-dump}
[3e4c06998248aa4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b6234 +0  BA060000
[3e4c06998249720] jit-backend-dump}
[3e4c0699824ca0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b31bd +0  BF2A0000
[3e4c0699824d6b4] jit-backend-dump}
[3e4c069982516aa] jit-backend}
[3e4c0699825532f] {jit-log-opt-bridge
# bridge out of Guard 0x4383148 with 179 ops
[p0, p1, p2, p3, p4, p5, p6]
+374: i7 = getfield_gc_i(p1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+378: i9 = int_gt(i7, 2)
+382: guard_true(i9, descr=<Guard0x439f1c0>) [p0, p1, i7, p2, p3, p6, p4, p5]
+388: guard_not_invalidated(descr=<Guard0x4383e80>) [p0, p1, i7, p2, p3, p6, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))')
+388: p10 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+399: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x439f220>) [p0, p1, i7, p2, p3, p6, p4, p5]
debug_merge_point(0, 0, '(square AppRand15)')
+419: p12 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+431: guard_class(p12, 16500720, descr=<Guard0x4383ec8>) [p0, p1, i7, p2, p3, p6, p4, p5]
+444: p14 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+448: guard_class(p14, 16477696, descr=<Guard0x4383f10>) [p0, p1, i7, p2, p3, p6, p4, p5]
+461: p16 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+461: p18 = call_r(ConstClass(rbigint.mul), p1, p1, descr=<Callr 8 rr EF=4>)
+548: guard_no_exception(descr=<Guard0x439f280>) [p18, p1, p0, p10, None, None, p6, p4, None]
+563: i20 = getfield_gc_i(p18, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+567: i22 = int_gt(i20, 2)
+571: guard_true(i22, descr=<Guard0x4383f58>) [p18, p1, p0, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(* x4983 AppRand16)')
+577: p23 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+588: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x439f2e0>) [p18, p1, p0, p10, None, None, p6, p4, None]
+608: i25 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+612: i26 = int_is_true(i25)
+615: guard_true(i26, descr=<Guard0x4383fa0>) [p18, p1, p0, p10, None, None, p6, p4, None]
+621: p28 = call_r(ConstClass(fromint), i25, descr=<Callr 8 i EF=3>)
+691: guard_no_exception(descr=<Guard0x439f340>) [p28, p23, p18, p1, p0, p10, None, None, p6, p4, None]
+706: p30 = call_r(ConstClass(rbigint.mul), p28, p18, descr=<Callr 8 rr EF=4>)
+769: guard_no_exception(descr=<Guard0x439f3a0>) [p30, p23, p18, p1, p0, p10, None, None, p6, p4, None]
+784: i31 = getfield_gc_i(p30, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+788: i33 = int_gt(i31, 2)
+792: guard_true(i33, descr=<Guard0x43ba020>) [p30, p23, p18, p1, p0, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))')
debug_merge_point(0, 0, '(- t (quotient AppRand17 one))')
+798: p34 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+809: guard_nonnull_class(p34, ConstClass(W_Bignum), descr=<Guard0x439f400>) [p30, p23, p18, p1, p0, p10, None, None, p6, p4, None]
+828: p36 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+846: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x43ba068>) [p30, p23, p18, p1, p0, p10, None, None, p6, p4, None]
+855: p38 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+859: guard_nonnull_class(p38, ConstClass(W_Bignum), descr=<Guard0x439f460>) [p30, p23, p18, p1, p0, p10, None, None, p6, p4, None]
+878: p40 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+882: i41 = getfield_gc_i(p40, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+886: i42 = getfield_gc_i(p40, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+890: i43 = int_is_zero(i42)
+893: guard_false(i43, descr=<Guard0x43ba0b0>) [p30, p23, p18, p1, p0, p10, None, None, p6, p4, None]
+899: i44 = int_lt(i31, i41)
+902: guard_false(i44, descr=<Guard0x43ba0f8>) [p30, p23, p18, p1, p0, p10, None, None, p6, p4, None]
+908: i45 = int_eq(i31, i41)
+911: guard_false(i45, descr=<Guard0x43ba140>) [p30, p23, p18, p1, p0, p10, None, None, p6, p4, None]
+917: i47 = int_eq(i41, 1)
+921: guard_false(i47, descr=<Guard0x43ba188>) [p30, p23, p18, p1, p0, p10, None, None, p6, p4, None]
+927: p49 = call_r(ConstClass(_x_divrem), p30, p40, descr=<Callr 8 rr EF=5>)
+1010: guard_no_exception(descr=<Guard0x439f4c0>) [p49, p40, p30, p34, None, None, p1, p0, p10, None, None, p6, p4, None]
+1025: p50 = getfield_gc_r(p49, descr=<FieldP tuple2.item0 8 pure>)
+1029: p51 = getfield_gc_r(p49, descr=<FieldP tuple2.item1 16 pure>)
+1029: i52 = getfield_gc_i(p30, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1040: i53 = int_ne(i52, i42)
+1043: guard_false(i53, descr=<Guard0x43ba1d0>) [p49, p40, p30, p34, None, None, p1, p0, p10, None, None, p6, p4, None]
+1049: i55 = int_lt(i52, 0)
+1053: guard_false(i55, descr=<Guard0x43ba218>) [p49, p40, p30, p34, None, None, p1, p0, p10, None, None, p6, p4, None]
+1059: i56 = getfield_gc_i(p50, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1063: i58 = int_gt(i56, 2)
+1067: guard_true(i58, descr=<Guard0x43ba260>) [p49, p40, p30, p34, None, None, p1, p0, p10, None, None, p6, p4, None]
+1073: p59 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1084: p61 = call_r(ConstClass(rbigint.sub), p59, p50, descr=<Callr 8 rr EF=4>)
+1150: guard_no_exception(descr=<Guard0x439f520>) [p61, p50, p30, p34, None, None, p1, p0, p10, None, None, p6, p4, None]
+1165: i62 = getfield_gc_i(p61, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1169: i64 = int_gt(i62, 2)
+1173: guard_true(i64, descr=<Guard0x43ba2a8>) [p61, p50, p30, p34, None, None, p1, p0, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(* 2 x4983)')
+1179: i66 = int_mul_ovf(2, i25)
+1183: guard_no_overflow(descr=<Guard0x43ba2f0>) [p61, p50, p30, p34, None, None, p1, p0, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
+1189: p67 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1200: guard_nonnull_class(p67, ConstClass(W_Bignum), descr=<Guard0x439f580>) [p61, p50, p30, p34, None, None, p1, p0, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+1220: p69 = getfield_gc_r(p67, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1224: i71 = call_i(ConstClass(rbigint.eq), p69, p6, descr=<Calli 1 rr EF=0>)
+1253: guard_false(i71, descr=<Guard0x439f5e0>) [i71, i66, p61, p67, p14, None, None, None, None, None, None, None, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+1262: p73 = call_r(ConstClass(rbigint.add), p69, p6, descr=<Callr 8 rr EF=4>)
+1346: guard_no_exception(descr=<Guard0x439f640>) [p73, i66, p61, p67, p14, None, None, None, None, None, None, None, p10, None, None, p6, p4, None]
+1361: i74 = getfield_gc_i(p73, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1365: i76 = int_gt(i74, 2)
+1369: guard_true(i76, descr=<Guard0x43ba338>) [p73, i66, p61, p67, p14, None, None, None, None, None, None, None, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+1382: i79 = getarrayitem_gc_i(ConstPtr(ptr77), 0, descr=<ArrayS 8>)
+1386: p80 = new_array_clear(i74, descr=<ArrayS 8>)
+1483: p81 = new_with_vtable(descr=<SizeDescr 32>)
+1524: setfield_gc(p81, i74, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1528: setfield_gc(p81, p80, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1532: i83 = call_i(ConstClass(_inplace_divrem1), p81, p73, i79, descr=<Calli 8 rri EF=5>)
+1557: setfield_gc(p81, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1565: guard_no_exception(descr=<Guard0x439f6a0>) [p73, i83, p81, i66, p61, p67, p14, None, None, None, None, None, None, None, p10, None, None, p6, p4, None]
+1580: call_n(ConstClass(rbigint._normalize), p81, descr=<Callv 0 r EF=5>)
+1646: guard_no_exception(descr=<Guard0x439f700>) [p73, i83, p81, i66, p61, p67, p14, None, None, None, None, None, None, None, p10, None, None, p6, p4, None]
+1661: i86 = int_is_true(i83)
+1661: i87 = getfield_gc_i(p73, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1672: i89 = int_ne(i87, 1)
+1676: guard_false(i89, descr=<Guard0x43ba380>) [p73, i83, p81, i66, p61, p67, p14, None, None, None, None, None, None, None, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1682: p91 = call_r(ConstClass(rbigint.mul), p69, p6, descr=<Callr 8 rr EF=4>)
+1749: guard_no_exception(descr=<Guard0x439f760>) [p91, p81, i66, p61, p67, p14, None, None, None, None, None, None, None, p10, None, None, p6, p4, None]
+1764: i92 = getfield_gc_i(p91, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1768: i94 = int_gt(i92, 2)
+1772: guard_true(i94, descr=<Guard0x43ba3c8>) [p91, p81, i66, p61, p67, p14, None, None, None, None, None, None, None, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1785: i97 = call_i(ConstClass(rbigint.lt), p91, ConstPtr(ptr96), descr=<Calli 1 rr EF=0>)
+1807: guard_false(i97, descr=<Guard0x439f7c0>) [i97, p91, p81, i66, p61, p67, p14, None, None, None, None, None, None, None, p10, None, None, p6, p4, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1816: p98 = new_with_vtable(descr=<SizeDescr 32>)
+1860: p99 = new_with_vtable(descr=<SizeDescr 32>)
+1878: setfield_gc(p99, ConstPtr(ptr100), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1889: setfield_gc(p99, ConstPtr(ptr101), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1893: p102 = new_with_vtable(descr=<SizeDescr 16>)
+1904: setfield_gc(p102, p91, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1908: setfield_gc(p99, p102, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1912: p103 = new_with_vtable(descr=<SizeDescr 48>)
+1923: p104 = new_with_vtable(descr=<SizeDescr 32>)
+1934: setfield_gc(p104, ConstPtr(ptr105), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1938: setfield_gc(p104, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1946: setfield_gc(p104, p102, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1950: p107 = new_with_vtable(descr=<SizeDescr 40>)
+1962: setfield_gc(p107, p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1973: p108 = new_with_vtable(descr=<SizeDescr 32>)
+1984: p109 = new_with_vtable(descr=<SizeDescr 48>)
+1995: setfield_gc(p109, p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2006: setfield_gc(p109, p67, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+2017: p110 = new_with_vtable(descr=<SizeDescr 16>)
+2028: setfield_gc(p110, p6, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2039: setfield_gc(p109, p110, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+2043: p111 = new_with_vtable(descr=<SizeDescr 16>)
+2054: setfield_gc(p111, p61, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2065: setfield_gc(p109, p111, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+2069: p112 = new_with_vtable(descr=<SizeDescr 16>)
+2080: setfield_gc(p112, i66, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2084: setfield_gc(p109, p112, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+2088: setfield_gc(p108, p109, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2092: p113 = new_with_vtable(descr=<SizeDescr 16>)
+2103: setfield_gc(p113, p81, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2114: setfield_gc(p108, p113, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+2118: setfield_gc(p108, p102, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+2122: setfield_gc(p107, p108, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2126: setfield_gc(p107, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2144: setfield_gc(p107, ConstPtr(ptr114), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2148: p115 = new_with_vtable(descr=<SizeDescr 40>)
+2159: setfield_gc(p115, ConstPtr(ptr116), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2170: setfield_gc(p115, ConstPtr(ptr117), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2174: setfield_gc(p115, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2182: setfield_gc(p115, p102, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2186: setfield_gc(p103, p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2190: setfield_gc(p98, p99, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2194: setfield_gc(p98, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2202: setfield_gc(p98, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2210: setfield_gc(p103, p104, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2214: setfield_gc(p103, p107, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2225: setfield_gc(p103, ConstPtr(ptr121), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2229: setfield_gc(p103, p115, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2233: jump(p98, p103, descr=TargetToken(69318064))
+2272: --end of the loop--
[3e4c069982edc88] jit-log-opt-bridge}
[3e4c0699e22a62e] {jit-backend
[3e4c0699e3af900] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b6f
[3e4c0699e3cc6b4] jit-backend-dump}
[3e4c0699e3d9f6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7254 +0  2C000000
[3e4c0699e3db4ec] jit-backend-dump}
[3e4c0699e3dfab4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7ee5 +0  2C000000
[3e4c0699e3e09e3] jit-backend-dump}
[3e4c0699e3e3e2d] {jit-backend-addr
bridge out of Guard 0x4383268 has address 0x7ff2522b7250 to 0x7ff2522b7ee0
       gc table: 0x7ff2522b6f90
    jump target: 0x7ff2522b7250
         resops: 0x7ff2522b725e
       failures: 0x7ff2522b7ee0
            end: 0x7ff2522b895d
[3e4c0699e3e6356] jit-backend-addr}
[3e4c0699e3e99e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b726b +0  2E0E0000
[3e4c0699e3ea838] jit-backend-dump}
[3e4c0699e3edce6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b727f +0  520E0000
[3e4c0699e3eea73] jit-backend-dump}
[3e4c0699e3f1d63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7294 +0  590E0000
[3e4c0699e3f2b20] jit-backend-dump}
[3e4c0699e3f5d1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b72ab +0  5E0E0000
[3e4c0699e3f6a90] jit-backend-dump}
[3e4c0699e3f9c9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b72b8 +0  6D0E0000
[3e4c0699e3fa9cb] jit-backend-dump}
[3e4c0699e3fdba7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b72c9 +0  780E0000
[3e4c0699e3fe8ee] jit-backend-dump}
[3e4c0699e401a25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b72dd +0  800E0000
[3e4c0699e40272b] jit-backend-dump}
[3e4c0699e405822] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b72f3 +0  860E0000
[3e4c0699e406538] jit-backend-dump}
[3e4c0699e409669] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7376 +0  1F0E0000
[3e4c0699e40a36f] jit-backend-dump}
[3e4c0699e40d49d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7384 +0  2D0E0000
[3e4c0699e40e1a3] jit-backend-dump}
[3e4c0699e41122f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b73d9 +0  F40D0000
[3e4c0699e411f2f] jit-backend-dump}
[3e4c0699e414fd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b73e7 +0  020E0000
[3e4c0699e415cc4] jit-backend-dump}
[3e4c0699e418d8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7440 +0  C50D0000
[3e4c0699e419a97] jit-backend-dump}
[3e4c0699e41cb38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b744e +0  D30D0000
[3e4c0699e41d838] jit-backend-dump}
[3e4c0699e42095d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b745b +0  E20D0000
[3e4c0699e42167c] jit-backend-dump}
[3e4c0699e424729] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7464 +0  F50D0000
[3e4c0699e425423] jit-backend-dump}
[3e4c0699e4284b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b746d +0  080E0000
[3e4c0699e4291af] jit-backend-dump}
[3e4c0699e42c275] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b74c5 +0  CC0D0000
[3e4c0699e42cf75] jit-backend-dump}
[3e4c0699e43007f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b74de +0  CF0D0000
[3e4c0699e430d88] jit-backend-dump}
[3e4c0699e433e66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b74e8 +0  E10D0000
[3e4c0699e434b7f] jit-backend-dump}
[3e4c0699e437cbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b74f6 +0  EF0D0000
[3e4c0699e4389bf] jit-backend-dump}
[3e4c0699e43bb40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b754b +0  B60D0000
[3e4c0699e43c840] jit-backend-dump}
[3e4c0699e43f950] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7559 +0  C40D0000
[3e4c0699e440650] jit-backend-dump}
[3e4c0699e4436f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b75aa +0  8F0D0000
[3e4c0699e44441f] jit-backend-dump}
[3e4c0699e4474dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b75b8 +0  9D0D0000
[3e4c0699e4481df] jit-backend-dump}
[3e4c0699e44b341] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b75d2 +0  9F0D0000
[3e4c0699e44c047] jit-backend-dump}
[3e4c0699e44f120] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b75db +0  B20D0000
[3e4c0699e44fe16] jit-backend-dump}
[3e4c0699e452ebb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b75e4 +0  C50D0000
[3e4c0699e453bb5] jit-backend-dump}
[3e4c0699e456c62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b75ee +0  D70D0000
[3e4c0699e45796c] jit-backend-dump}
[3e4c0699e45aa50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7642 +0  9F0D0000
[3e4c0699e45b756] jit-backend-dump}
[3e4c0699e45e7cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b765a +0  A30D0000
[3e4c0699e45f4c7] jit-backend-dump}
[3e4c0699e462578] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7664 +0  B50D0000
[3e4c0699e46326e] jit-backend-dump}
[3e4c0699e466350] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7673 +0  C20D0000
[3e4c0699e46704d] jit-backend-dump}
[3e4c0699e46a10a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b76c4 +0  8D0D0000
[3e4c0699e46ae04] jit-backend-dump}
[3e4c0699e46e1a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b76d2 +0  9B0D0000
[3e4c0699e46ee9f] jit-backend-dump}
[3e4c0699e47208b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b76db +0  AE0D0000
[3e4c0699e472d94] jit-backend-dump}
[3e4c0699e475e7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b76e4 +0  C10D0000
[3e4c0699e476b6f] jit-backend-dump}
[3e4c0699e479cad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7739 +0  880D0000
[3e4c0699e47aa33] jit-backend-dump}
[3e4c0699e47db68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7751 +0  8C0D0000
[3e4c0699e47e89f] jit-backend-dump}
[3e4c0699e481996] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b775b +0  9E0D0000
[3e4c0699e482716] jit-backend-dump}
[3e4c0699e48585a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b776a +0  AB0D0000
[3e4c0699e486563] jit-backend-dump}
[3e4c0699e4895b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b77c3 +0  6E0D0000
[3e4c0699e48a2cd] jit-backend-dump}
[3e4c0699e48d344] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b77d1 +0  7C0D0000
[3e4c0699e48e056] jit-backend-dump}
[3e4c0699e491119] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b77da +0  8F0D0000
[3e4c0699e491e38] jit-backend-dump}
[3e4c0699e494e46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b77e3 +0  A20D0000
[3e4c0699e495ba5] jit-backend-dump}
[3e4c0699e498bf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7838 +0  690D0000
[3e4c0699e4998eb] jit-backend-dump}
[3e4c0699e49c9d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7850 +0  6D0D0000
[3e4c0699e49d6d0] jit-backend-dump}
[3e4c0699e4a06f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b785a +0  7F0D0000
[3e4c0699e4a1400] jit-backend-dump}
[3e4c0699e4a4442] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7869 +0  8C0D0000
[3e4c0699e4a5130] jit-backend-dump}
[3e4c0699e4a8185] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b78be +0  530D0000
[3e4c0699e4a8e85] jit-backend-dump}
[3e4c0699e4abed1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b78cc +0  610D0000
[3e4c0699e4acbbe] jit-backend-dump}
[3e4c0699e4afc60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7921 +0  280D0000
[3e4c0699e4b0960] jit-backend-dump}
[3e4c0699e4b3987] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b792f +0  360D0000
[3e4c0699e4b467b] jit-backend-dump}
[3e4c0699e4b772b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b794e +0  330D0000
[3e4c0699e4b8428] jit-backend-dump}
[3e4c0699e4bb462] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b79ae +0  EF0C0000
[3e4c0699e4bc152] jit-backend-dump}
[3e4c0699e4bf186] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b79bc +0  FD0C0000
[3e4c0699e4bfe76] jit-backend-dump}
[3e4c0699e4c2ef6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7a15 +0  C00C0000
[3e4c0699e4c3bf0] jit-backend-dump}
[3e4c0699e4c6c88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7a23 +0  CE0C0000
[3e4c0699e4c797f] jit-backend-dump}
[3e4c0699e4ca9bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7a42 +0  CB0C0000
[3e4c0699e4cb6a6] jit-backend-dump}
[3e4c0699e4ce6ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7a4f +0  DA0C0000
[3e4c0699e4cf3e9] jit-backend-dump}
[3e4c0699e4d247e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7aa7 +0  9E0C0000
[3e4c0699e4d317b] jit-backend-dump}
[3e4c0699e4d61ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7af5 +0  6C0C0000
[3e4c0699e4d6ea8] jit-backend-dump}
[3e4c0699e4d9f00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7b03 +0  7A0C0000
[3e4c0699e4dabee] jit-backend-dump}
[3e4c0699e4ddcd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7b58 +0  410C0000
[3e4c0699e4de9e2] jit-backend-dump}
[3e4c0699e4e1c5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7b66 +0  4F0C0000
[3e4c0699e4e294b] jit-backend-dump}
[3e4c0699e4e5ae1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7b70 +0  610C0000
[3e4c0699e4e67e1] jit-backend-dump}
[3e4c0699e4e9943] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7b79 +0  740C0000
[3e4c0699e4ea65f] jit-backend-dump}
[3e4c0699e4ed79c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7b82 +0  870C0000
[3e4c0699e4ee4ab] jit-backend-dump}
[3e4c0699e4f14e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7bd7 +0  4E0C0000
[3e4c0699e4f21d2] jit-backend-dump}
[3e4c0699e4f51f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7bf0 +0  510C0000
[3e4c0699e4f5eea] jit-backend-dump}
[3e4c0699e4f8f1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7bfa +0  630C0000
[3e4c0699e4f9c5b] jit-backend-dump}
[3e4c0699e4fcc8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7c08 +0  710C0000
[3e4c0699e4fd9a0] jit-backend-dump}
[3e4c0699e500a66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7c2f +0  660C0000
[3e4c0699e501782] jit-backend-dump}
[3e4c0699e5047d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7c88 +0  290C0000
[3e4c0699e5054cb] jit-backend-dump}
[3e4c0699e5084f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7c96 +0  370C0000
[3e4c0699e5091e2] jit-backend-dump}
[3e4c0699e50c25f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7cb5 +0  340C0000
[3e4c0699e50cf65] jit-backend-dump}
[3e4c0699e50ffc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7d12 +0  F30B0000
[3e4c0699e510cbd] jit-backend-dump}
[3e4c0699e513d12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7d20 +0  010C0000
[3e4c0699e514a18] jit-backend-dump}
[3e4c0699e517a64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7d46 +0  F70B0000
[3e4c0699e518767] jit-backend-dump}
[3e4c0699e51bad1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b30af +0  9D410000
[3e4c0699e51c84f] jit-backend-dump}
[3e4c0699e520851] jit-backend}
[3e4c0699e52450a] {jit-log-opt-bridge
# bridge out of Guard 0x4383268 with 305 ops
[i0, p1, p2, p3, p4, p5]
+726: guard_false(i0, descr=<Guard0x439f880>) [i0, p1, p2, p3, p4, p5]
+735: guard_not_invalidated(descr=<Guard0x43ba608>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, 'g')
+735: p6 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+746: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x43ba650>) [i0, p1, p2, p3, p4, p5]
+755: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+759: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))) from (< d g)')
+763: guard_class(p9, 16437896, descr=<Guard0x43ba698>) [i0, p1, p2, p3, p4, p5]
+776: p11 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+780: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x439f8e0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(- one5062 t1)')
+799: guard_class(p8, 16500368, descr=<Guard0x43ba6e0>) [i0, p1, p2, p3, p4, p5]
+812: p14 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+816: guard_class(p14, 16478448, descr=<Guard0x43ba728>) [i0, p1, p2, p3, p4, p5]
+829: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+840: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x43ba770>) [i0, p1, p2, p3, p4, p5]
+849: p18 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+853: guard_nonnull_class(p18, ConstClass(W_Bignum), descr=<Guard0x439f940>) [i0, p1, p2, p3, p4, p5]
+871: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+875: p22 = call_r(ConstClass(rbigint.sub), p20, p2, descr=<Callr 8 rr EF=4>)
+987: guard_no_exception(descr=<Guard0x439f9a0>) [p22, p18, p8, p9, p11, None, p2, None, None, None]
+1002: i24 = getfield_gc_i(p22, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1006: i26 = int_gt(i24, 2)
+1010: guard_true(i26, descr=<Guard0x43ba7b8>) [p22, p18, p8, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))')
debug_merge_point(0, 0, '(* one5062 AppRand45)')
+1016: p28 = call_r(ConstClass(rbigint.mul), p20, p22, descr=<Callr 8 rr EF=4>)
+1086: guard_no_exception(descr=<Guard0x439fa00>) [p28, p22, p18, p8, p9, p11, None, p2, None, None, None]
+1101: i29 = getfield_gc_i(p28, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1105: i31 = int_gt(i29, 2)
+1109: guard_true(i31, descr=<Guard0x43ba800>) [p28, p22, p18, p8, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(+ one5062 t1)')
+1115: p33 = call_r(ConstClass(rbigint.add), p20, p2, descr=<Callr 8 rr EF=4>)
+1189: guard_no_exception(descr=<Guard0x439fa60>) [p33, p28, None, p18, p8, p9, p11, None, p2, None, None, None]
+1204: i34 = getfield_gc_i(p33, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1208: i36 = int_gt(i34, 2)
+1212: guard_true(i36, descr=<Guard0x43ba848>) [p33, p28, None, p18, p8, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))')
debug_merge_point(0, 0, '(quotient AppRand46 AppRand47)')
+1218: i37 = getfield_gc_i(p33, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1222: i38 = int_is_zero(i37)
+1225: guard_false(i38, descr=<Guard0x43ba890>) [p33, p28, None, p18, p8, p9, p11, None, p2, None, None, None]
+1231: i39 = int_lt(i29, i34)
+1234: guard_false(i39, descr=<Guard0x43ba8d8>) [p33, p28, None, p18, p8, p9, p11, None, p2, None, None, None]
+1240: i40 = int_eq(i29, i34)
+1243: guard_false(i40, descr=<Guard0x43ba920>) [p33, p28, None, p18, p8, p9, p11, None, p2, None, None, None]
+1249: p42 = call_r(ConstClass(_x_divrem), p28, p33, descr=<Callr 8 rr EF=5>)
+1322: guard_no_exception(descr=<Guard0x439fac0>) [p42, p33, p28, None, None, None, p8, p9, p11, None, None, None, None, None]
+1337: p43 = getfield_gc_r(p42, descr=<FieldP tuple2.item0 8 pure>)
+1341: p44 = getfield_gc_r(p42, descr=<FieldP tuple2.item1 16 pure>)
+1341: i45 = getfield_gc_i(p28, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1353: i46 = int_ne(i45, i37)
+1356: guard_false(i46, descr=<Guard0x43ba968>) [p42, p33, p28, None, None, None, p8, p9, p11, None, None, None, None, None]
+1362: i48 = int_lt(i45, 0)
+1366: guard_false(i48, descr=<Guard0x43ba9b0>) [p42, p33, p28, None, None, None, p8, p9, p11, None, None, None, None, None]
+1372: i49 = getfield_gc_i(p43, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1376: i51 = int_gt(i49, 2)
+1380: guard_true(i51, descr=<Guard0x43ba9f8>) [p42, p33, p28, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))')
debug_merge_point(0, 0, '(+ one5062 t2)')
+1386: p53 = call_r(ConstClass(rbigint.add), p20, p43, descr=<Callr 8 rr EF=4>)
+1456: guard_no_exception(descr=<Guard0x439fb20>) [p53, p43, None, None, p18, p8, p9, p11, None, None, None, None, None]
+1471: i54 = getfield_gc_i(p53, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1475: i56 = int_gt(i54, 2)
+1479: guard_true(i56, descr=<Guard0x43baa40>) [p53, p43, None, None, p18, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))')
debug_merge_point(0, 0, '(square AppRand48)')
+1485: p57 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+1485: p59 = call_r(ConstClass(rbigint.mul), p53, p53, descr=<Callr 8 rr EF=4>)
+1551: guard_no_exception(descr=<Guard0x439fb80>) [p59, p53, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1566: i60 = getfield_gc_i(p59, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1570: i62 = int_gt(i60, 2)
+1574: guard_true(i62, descr=<Guard0x43baa88>) [p59, p53, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square (quotient AppRand49 one5062))')
+1580: i63 = getfield_gc_i(p20, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1592: i64 = getfield_gc_i(p20, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1597: i65 = int_is_zero(i64)
+1600: guard_false(i65, descr=<Guard0x43baad0>) [p59, p53, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1606: i66 = int_lt(i60, i63)
+1609: guard_false(i66, descr=<Guard0x43bab18>) [p59, p53, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1615: i67 = int_eq(i60, i63)
+1618: guard_false(i67, descr=<Guard0x43bab60>) [p59, p53, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1624: i69 = int_eq(i63, 1)
+1628: guard_false(i69, descr=<Guard0x43baba8>) [p59, p53, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1634: p71 = call_r(ConstClass(_x_divrem), p59, p20, descr=<Callr 8 rr EF=5>)
+1703: guard_no_exception(descr=<Guard0x439fbe0>) [p71, p20, p59, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1718: p72 = getfield_gc_r(p71, descr=<FieldP tuple2.item0 8 pure>)
+1722: p73 = getfield_gc_r(p71, descr=<FieldP tuple2.item1 16 pure>)
+1722: i74 = getfield_gc_i(p59, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1733: i75 = int_ne(i74, i64)
+1736: guard_false(i75, descr=<Guard0x43babf0>) [p71, p20, p59, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1742: i77 = int_lt(i74, 0)
+1746: guard_false(i77, descr=<Guard0x43bac38>) [p71, p20, p59, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1752: i78 = getfield_gc_i(p72, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1757: i80 = int_gt(i78, 2)
+1761: guard_true(i80, descr=<Guard0x43bac80>) [p71, p20, p59, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(* x4969 x4969)')
+1767: p82 = call_r(ConstClass(rbigint.mul), p72, p72, descr=<Callr 8 rr EF=4>)
+1833: guard_no_exception(descr=<Guard0x439fc40>) [p82, p72, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1848: i83 = getfield_gc_i(p82, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1852: i85 = int_gt(i83, 2)
+1856: guard_true(i85, descr=<Guard0x43bacc8>) [p82, p72, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(quotient AppRand50 one5062)')
+1862: i86 = int_lt(i83, i63)
+1865: guard_false(i86, descr=<Guard0x43bad10>) [p82, p72, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1871: i87 = int_eq(i83, i63)
+1874: guard_false(i87, descr=<Guard0x43bad58>) [p82, p72, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1880: p89 = call_r(ConstClass(_x_divrem), p82, p20, descr=<Callr 8 rr EF=5>)
+1950: guard_no_exception(descr=<Guard0x439fca0>) [p89, p20, p82, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1965: p90 = getfield_gc_r(p89, descr=<FieldP tuple2.item0 8 pure>)
+1969: p91 = getfield_gc_r(p89, descr=<FieldP tuple2.item1 16 pure>)
+1969: i92 = getfield_gc_i(p82, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1980: i93 = int_ne(i92, i64)
+1983: guard_false(i93, descr=<Guard0x43bada0>) [p89, p20, p82, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1989: i95 = int_lt(i92, 0)
+1993: guard_false(i95, descr=<Guard0x43bade8>) [p89, p20, p82, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+1999: i96 = getfield_gc_i(p90, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2004: i98 = int_gt(i96, 2)
+2008: guard_true(i98, descr=<Guard0x43bae30>) [p89, p20, p82, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(square t2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+2014: p100 = call_r(ConstClass(rbigint.mul), p43, p43, descr=<Callr 8 rr EF=4>)
+2088: guard_no_exception(descr=<Guard0x439fd00>) [p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2103: i101 = getfield_gc_i(p100, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2107: i103 = int_gt(i101, 2)
+2111: guard_true(i103, descr=<Guard0x43bae78>) [p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(+ t2 (quotient AppRand51 one5062))')
+2117: i104 = int_lt(i101, i63)
+2120: guard_false(i104, descr=<Guard0x43baec0>) [p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2126: i105 = int_eq(i101, i63)
+2129: guard_false(i105, descr=<Guard0x43baf08>) [p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2135: p107 = call_r(ConstClass(_x_divrem), p100, p20, descr=<Callr 8 rr EF=5>)
+2205: guard_no_exception(descr=<Guard0x439fd60>) [p107, p20, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2220: p108 = getfield_gc_r(p107, descr=<FieldP tuple2.item0 8 pure>)
+2224: p109 = getfield_gc_r(p107, descr=<FieldP tuple2.item1 16 pure>)
+2224: i110 = getfield_gc_i(p100, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2235: i111 = int_ne(i110, i64)
+2238: guard_false(i111, descr=<Guard0x43baf50>) [p107, p20, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2244: i113 = int_lt(i110, 0)
+2248: guard_false(i113, descr=<Guard0x43baf98>) [p107, p20, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2254: i114 = getfield_gc_i(p108, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2259: i116 = int_gt(i114, 2)
+2263: guard_true(i116, descr=<Guard0x43bafe0>) [p107, p20, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2269: p118 = call_r(ConstClass(rbigint.add), p43, p108, descr=<Callr 8 rr EF=4>)
+2339: guard_no_exception(descr=<Guard0x439fdc0>) [p118, p108, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2354: i119 = getfield_gc_i(p118, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2358: i121 = int_gt(i119, 2)
+2362: guard_true(i121, descr=<Guard0x43bb028>) [p118, p108, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))')
debug_merge_point(0, 0, '(+ one5062 AppRand52)')
+2368: p123 = call_r(ConstClass(rbigint.add), p20, p118, descr=<Callr 8 rr EF=4>)
+2438: guard_no_exception(descr=<Guard0x439fe20>) [p123, p118, None, p100, p90, None, None, p43, None, None, p18, p8, p9, p11, None, None, None, None, None]
+2453: i124 = getfield_gc_i(p123, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2457: i126 = int_gt(i124, 2)
+2461: guard_true(i126, descr=<Guard0x43bb070>) [p123, p118, None, p100, p90, None, None, p43, None, None, p18, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))')
debug_merge_point(0, 0, '(* t3 a5078)')
+2467: p127 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+2479: guard_nonnull_class(p127, ConstClass(W_Bignum), descr=<Guard0x439fe80>) [p123, p118, None, p100, p90, None, None, p43, None, None, p18, p8, p9, p11, None, None, None, None, None]
+2498: p129 = getfield_gc_r(p127, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2502: p131 = call_r(ConstClass(rbigint.mul), p90, p129, descr=<Callr 8 rr EF=4>)
+2579: guard_no_exception(descr=<Guard0x439fee0>) [p131, p127, p123, None, None, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2594: i132 = getfield_gc_i(p131, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2598: i134 = int_gt(i132, 2)
+2602: guard_true(i134, descr=<Guard0x43bb0b8>) [p131, p127, p123, None, None, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(* t2 t4)')
+2608: p136 = call_r(ConstClass(rbigint.mul), p43, p123, descr=<Callr 8 rr EF=4>)
+2682: guard_no_exception(descr=<Guard0x439ff40>) [p136, p131, None, p123, None, None, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2697: i137 = getfield_gc_i(p136, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2701: i139 = int_gt(i137, 2)
+2705: guard_true(i139, descr=<Guard0x43bb100>) [p136, p131, None, p123, None, None, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))')
debug_merge_point(0, 0, '(* x5080 AppRand54)')
+2711: p140 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+2723: guard_nonnull_class(p140, ConstClass(W_Fixnum), descr=<Guard0x439ffa0>) [p136, p131, None, p123, None, None, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2742: i142 = getfield_gc_i(p140, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2746: i143 = int_is_true(i142)
+2749: guard_true(i143, descr=<Guard0x43bb148>) [p136, p131, None, p123, None, None, p100, p90, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2755: p145 = call_r(ConstClass(fromint), i142, descr=<Callr 8 i EF=3>)
+2828: guard_no_exception(descr=<Guard0x43dc020>) [p145, p140, p136, p131, None, None, None, None, None, None, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2843: p147 = call_r(ConstClass(rbigint.mul), p145, p136, descr=<Callr 8 rr EF=4>)
+2906: guard_no_exception(descr=<Guard0x43dc080>) [p147, p140, p136, p131, None, None, None, None, None, None, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+2921: i148 = getfield_gc_i(p147, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2925: i150 = int_gt(i148, 2)
+2929: guard_true(i150, descr=<Guard0x43bb190>) [p147, p140, p136, p131, None, None, None, None, None, None, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))')
debug_merge_point(0, 0, '(- AppRand53 AppRand55)')
+2935: p152 = call_r(ConstClass(rbigint.sub), p131, p147, descr=<Callr 8 rr EF=4>)
+3005: guard_no_exception(descr=<Guard0x43dc0e0>) [p152, p147, None, p136, p131, None, None, None, None, None, None, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+3020: i153 = getfield_gc_i(p152, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3024: i155 = int_gt(i153, 2)
+3028: guard_true(i155, descr=<Guard0x43bb1d8>) [p152, p147, None, p136, p131, None, None, None, None, None, None, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(* 4 x5080)')
+3034: i157 = int_mul_ovf(4, i142)
+3038: guard_no_overflow(descr=<Guard0x43bb220>) [p152, p147, None, p136, p131, None, None, None, None, None, None, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
+3044: i158 = int_lt(i153, i63)
+3047: guard_false(i158, descr=<Guard0x43bb268>) [p152, p147, None, p136, p131, None, None, None, None, None, None, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+3053: i159 = int_eq(i153, i63)
+3056: guard_false(i159, descr=<Guard0x43bb2b0>) [p152, p147, None, p136, p131, None, None, None, None, None, None, None, None, p43, None, None, None, p8, p9, p11, None, None, None, None, None]
+3062: p161 = call_r(ConstClass(_x_divrem), p152, p20, descr=<Callr 8 rr EF=5>)
+3132: guard_no_exception(descr=<Guard0x43dc140>) [p14, p9, p161, p20, p152, i157, None, None, None, None, None, None, None, None, None, None, None, None, p43, None, None, None, p8, None, None, None, None, None, None, None]
+3147: p162 = getfield_gc_r(p161, descr=<FieldP tuple2.item0 8 pure>)
+3151: p163 = getfield_gc_r(p161, descr=<FieldP tuple2.item1 16 pure>)
+3151: i164 = getfield_gc_i(p152, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+3163: i165 = int_ne(i164, i64)
+3166: guard_false(i165, descr=<Guard0x43bb2f8>) [p14, p9, p161, p20, p152, i157, None, None, None, None, None, None, None, None, None, None, None, None, p43, None, None, None, p8, None, None, None, None, None, None, None]
+3172: i167 = int_lt(i164, 0)
+3176: guard_false(i167, descr=<Guard0x43bb340>) [p14, p9, p161, p20, p152, i157, None, None, None, None, None, None, None, None, None, None, None, None, p43, None, None, None, p8, None, None, None, None, None, None, None]
+3182: i168 = getfield_gc_i(p162, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3186: i170 = int_gt(i168, 2)
+3190: guard_true(i170, descr=<Guard0x43bb388>) [p14, p9, p161, p20, p152, i157, None, None, None, None, None, None, None, None, None, None, None, None, p43, None, None, None, p8, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
debug_merge_point(0, 0, '(= y5076 0)')
+3203: i173 = call_i(ConstClass(rbigint.eq), p43, ConstPtr(ptr172), descr=<Calli 1 rr EF=0>)
+3226: guard_false(i173, descr=<Guard0x43dc1a0>) [i173, p162, p14, i157, None, None, None, None, None, None, None, None, None, None, None, None, p43, None, None, None, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
debug_merge_point(0, 0, '(* x4969 x4969)')
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+3235: p175 = call_r(ConstClass(rbigint.mul), p100, p100, descr=<Callr 8 rr EF=4>)
+3309: guard_no_exception(descr=<Guard0x43dc200>) [p175, p162, p14, i157, None, None, None, None, None, None, None, None, p100, None, None, None, p43, None, None, None, None, p9, p11, None, None, None, None, None]
+3324: i176 = getfield_gc_i(p175, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3328: i178 = int_gt(i176, 2)
+3332: guard_true(i178, descr=<Guard0x43bb3d0>) [p175, p162, p14, i157, None, None, None, None, None, None, None, None, p100, None, None, None, p43, None, None, None, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+3338: p179 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+3349: guard_nonnull_class(p179, ConstClass(W_Bignum), descr=<Guard0x43dc260>) [p175, p162, p14, i157, None, None, None, None, None, None, None, None, p100, None, None, None, p43, None, None, None, None, p9, p11, None, None, None, None, None]
+3369: p181 = getfield_gc_r(p179, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3374: p183 = call_r(ConstClass(rbigint.sub), p181, p175, descr=<Callr 8 rr EF=4>)
+3447: guard_no_exception(descr=<Guard0x43dc2c0>) [p183, p179, p175, p162, p14, i157, None, None, None, None, None, None, None, None, None, None, None, None, p43, None, None, None, None, p9, p11, None, None, None, None, None]
+3462: i184 = getfield_gc_i(p183, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3466: i186 = int_gt(i184, 2)
+3470: guard_true(i186, descr=<Guard0x43bb418>) [p183, p179, p175, p162, p14, i157, None, None, None, None, None, None, None, None, None, None, None, None, p43, None, None, None, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+3483: i189 = call_i(ConstClass(rbigint.lt), p183, ConstPtr(ptr188), descr=<Calli 1 rr EF=0>)
+3505: guard_false(i189, descr=<Guard0x43dc320>) [i189, p183, None, None, p162, p14, i157, None, None, None, None, None, None, None, None, None, None, None, None, p43, None, None, None, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+3514: p190 = new_with_vtable(descr=<SizeDescr 32>)
+3558: p191 = new_with_vtable(descr=<SizeDescr 32>)
+3576: setfield_gc(p191, ConstPtr(ptr192), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3587: setfield_gc(p191, ConstPtr(ptr193), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+3591: p194 = new_with_vtable(descr=<SizeDescr 16>)
+3602: setfield_gc(p194, p183, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3606: setfield_gc(p191, p194, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+3610: p195 = new_with_vtable(descr=<SizeDescr 48>)
+3622: p196 = new_with_vtable(descr=<SizeDescr 32>)
+3634: setfield_gc(p196, ConstPtr(ptr197), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3638: setfield_gc(p196, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+3646: setfield_gc(p196, p194, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+3650: p199 = new_with_vtable(descr=<SizeDescr 40>)
+3661: setfield_gc(p199, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3672: p200 = new_with_vtable(descr=<SizeDescr 40>)
+3683: setfield_gc(p200, p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3694: p201 = new_with_vtable(descr=<SizeDescr 16>)
+3705: setfield_gc(p201, p43, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3716: setfield_gc(p200, p201, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+3720: p202 = new_with_vtable(descr=<SizeDescr 16>)
+3731: setfield_gc(p202, p162, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3742: setfield_gc(p200, p202, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+3746: p203 = new_with_vtable(descr=<SizeDescr 16>)
+3757: setfield_gc(p203, i157, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+3761: setfield_gc(p200, p203, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+3765: setfield_gc(p199, p200, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3769: setfield_gc(p199, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3780: setfield_gc(p199, ConstPtr(ptr204), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3791: p205 = new_with_vtable(descr=<SizeDescr 40>)
+3802: setfield_gc(p205, ConstPtr(ptr206), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3813: setfield_gc(p205, ConstPtr(ptr207), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+3817: setfield_gc(p205, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+3825: setfield_gc(p205, p194, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+3836: setfield_gc(p195, ConstPtr(ptr209), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3841: setfield_gc(p195, p196, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3846: setfield_gc(p195, p199, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3851: setfield_gc(p195, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3856: setfield_gc(p190, p191, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3860: setfield_gc(p190, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+3868: setfield_gc(p190, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+3876: setfield_gc(p195, p205, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+3881: jump(p190, p195, descr=TargetToken(69318064))
+3920: --end of the loop--
[3e4c0699e62b304] jit-log-opt-bridge}
[3e4c069bf8a516c] {jit-backend
[3e4c069bf91a426] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8a90 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87E302000048FF0425C0C53C04488B8D300100008139100A01000F8500000000488B4108488B9538010000813AC81800000F8500000000488B5A084883FB017206813B900F00000F8500000000488B71104883FE017206813EB84700000F85000000008138D00C01000F8500000000488B7808813F30B700000F8500000000488B4E084889853001000048899D400100004889B5480100004889BD500100004889CF4889CE49BBE8892B52F27F00004C895D2041BB40DFA90041FFD3488B0C258893F900488B69F8F64504010F852802000048C745200000000048833C2540B35F01000F8500000000488B50184883FA020F8E00000000488B9550010000488B5A10488B3507FEFFFF4839F30F8500000000488B72184883FE017206813EB84700000F8500000000488B5608488985480100004889B5500100004889D74889C649BB388A2B52F27F00004C895D2041BBB096A90041FFD3488B0C258893F900488B69F8F64504010F859F01000048C745200000000048833C2540B35F01000F8500000000488B70184883FE020F8E00000000488B359FFDFFFF4889C34889C741BB3096A90041FFD3480FB6C04885C00F8500000000488B0C25F091F900488D91F0000000483B14251092F9000F874C01000048891425F091F90048C701901A0100488D512048C70240B40000488B0555FDFFFF48894208488B3552FDFFFF48897210488D722048C706B847000048895E0848897218488D5E1048C703A8160000488D7B3048C707301901004889470848C7471004000000488977184C8D472049C700101100004C8B8D400100004D8948084C8B95300100004D8950104C8B95380100004D8950184C8B15EAFCFFFF4D8950204D8D502849C702E0C5000049894208488B05D8FCFFFF4989421049C742180400000049897220488951084C894B0848C741100100000048C741180200000048897B104C8943184C8B05A9FCFFFF4C8943204C89532848898D3001000048899D3801000049BBA09A2A52F27F000041FFE3660F1F44000049BB50972A52F27F000041FFD3E90BFDFFFF49BB70822A52F27F000041FFD3E9C6FDFFFF49BB70822A52F27F000041FFD3E94FFEFFFF49BB788A2B52F27F00004C895D204D8D9B7800FFFF41FFD3E99FFEFFFFFF3587FBFFFF49BB78892B52F27F000041534D8D9B88F6FEFF41FFE3FF3573FBFFFF49BB88892B52F27F000041534D8D9B78F6FEFF41FFE3FF355FFBFFFF49BB98892B52F27F000041534D8D9B68F6FEFF41FFE3FF354BFBFFFF49BBA8892B52F27F000041534D8D9B58F6FEFF41FFE3FF3537FBFFFF49BBB8892B52F27F000041534D8D9B48F6FEFF41FFE3FF3523FBFFFF49BBC8892B52F27F000041534D8D9B38F6FEFF41FFE3FF350FFBFFFF49BBD8892B52F27F000041534D8D9B28F6FEFF41FFE3FF35FBFAFFFF49BBF8892B52F27F000041534D8D9BB8F6FEFF41FFE3FF35E7FAFFFF49BB088A2B52F27F000041534D8D9BF8F5FEFF41FFE3FF35DBFAFFFF49BB188A2B52F27F000041534D8D9BE8F5FEFF41FFE3FF35C7FAFFFF49BB288A2B52F27F000041534D8D9BD8F5FEFF41FFE3FF35B3FAFFFF49BB488A2B52F27F000041534D8D9B68F6FEFF41FFE3FF359FFAFFFF49BB588A2B52F27F000041534D8D9BA8F5FEFF41FFE3FF3593FAFFFF49BB688A2B52F27F000041534D8D9B98F5FEFF41FFE3
[3e4c069bf9230ce] jit-backend-dump}
[3e4c069bf930388] {jit-backend-addr
Loop 17 ((let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)) has address 0x7ff2522b8bcd to 0x7ff2522b8eb0 (bootstrap 0x7ff2522b8b40)
       gc table: 0x7ff2522b8a90
       function: 0x7ff2522b8b40
         resops: 0x7ff2522b8bcd
       failures: 0x7ff2522b8eb0
            end: 0x7ff2522b908b
[3e4c069bf933ab5] jit-backend-addr}
[3e4c069bf93865e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8be4 +0  1B030000
[3e4c069bf939a12] jit-backend-dump}
[3e4c069bf940713] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8bfb +0  20030000
[3e4c069bf941735] jit-backend-dump}
[3e4c069bf944ff9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8c11 +0  26030000
[3e4c069bf945e78] jit-backend-dump}
[3e4c069bf9495c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8c27 +0  48030000
[3e4c069bf94a36c] jit-backend-dump}
[3e4c069bf94d61c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8c33 +0  58030000
[3e4c069bf94e300] jit-backend-dump}
[3e4c069bf951538] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8c43 +0  64030000
[3e4c069bf952235] jit-backend-dump}
[3e4c069bf955483] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8cad +0  16030000
[3e4c069bf9561b7] jit-backend-dump}
[3e4c069bf9596c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8cbb +0  24030000
[3e4c069bf95a3e6] jit-backend-dump}
[3e4c069bf95d7f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8cd6 +0  25030000
[3e4c069bf95e4ef] jit-backend-dump}
[3e4c069bf961758] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8cec +0  2B030000
[3e4c069bf962483] jit-backend-dump}
[3e4c069bf965855] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8d48 +0  EB020000
[3e4c069bf966549] jit-backend-dump}
[3e4c069bf96984e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8d56 +0  F9020000
[3e4c069bf96a576] jit-backend-dump}
[3e4c069bf96d7d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b8d79 +0  F2020000
[3e4c069bf96e4c3] jit-backend-dump}
[3e4c069bf97236c] jit-backend}
[3e4c069bf976267] {jit-log-opt-loop
# Loop 17 ((let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)) : entry bridge with 83 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
+325: guard_class(p0, 16499664, descr=<Guard0x43dc620>) [p1, p0]
+344: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+348: guard_class(p1, 16437896, descr=<Guard0x43bba48>) [p1, p0]
+367: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+371: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x43dc680>) [p1, p0]
debug_merge_point(0, 0, '(square AppRand42)')
+389: guard_not_invalidated(descr=<Guard0x43bba90>) [p1, p0]
+389: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+393: guard_nonnull_class(p7, ConstClass(W_Bignum), descr=<Guard0x43dc6e0>) [p1, p0]
+411: guard_class(p3, 16500368, descr=<Guard0x43bbad8>) [p1, p0]
+423: p10 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+427: guard_class(p10, 16478448, descr=<Guard0x43bbb20>) [p1, p0]
+439: p12 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+439: p13 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+443: p15 = call_r(ConstClass(rbigint.mul), p13, p13, descr=<Callr 8 rr EF=4>)
+530: guard_no_exception(descr=<Guard0x43dc740>) [p15, p7, p1, p3, p5]
+545: i16 = getfield_gc_i(p15, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+549: i18 = int_gt(i16, 2)
+553: guard_true(i18, descr=<Guard0x43bbb68>) [p15, p7, p1, p3, p5]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+559: p19 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+577: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x43bbbb0>) [p15, p7, p1, p3, p5]
+586: p21 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+590: guard_nonnull_class(p21, ConstClass(W_Bignum), descr=<Guard0x43dc7a0>) [p15, p7, p1, p3, p5]
+608: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+612: p25 = call_r(ConstClass(rbigint.sub), p23, p15, descr=<Callr 8 rr EF=4>)
+685: guard_no_exception(descr=<Guard0x43dc800>) [p25, p21, p15, None, p1, p3, p5]
+700: i27 = getfield_gc_i(p25, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+704: i29 = int_gt(i27, 2)
+708: guard_true(i29, descr=<Guard0x43bbbf8>) [p25, p21, p15, None, p1, p3, p5]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+721: i32 = call_i(ConstClass(rbigint.lt), p25, ConstPtr(ptr31), descr=<Calli 1 rr EF=0>)
+740: guard_false(i32, descr=<Guard0x43dc860>) [i32, p25, None, None, None, p1, p3, p5]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+749: p33 = new_with_vtable(descr=<SizeDescr 32>)
+793: p34 = new_with_vtable(descr=<SizeDescr 32>)
+811: setfield_gc(p34, ConstPtr(ptr35), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+822: setfield_gc(p34, ConstPtr(ptr36), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+826: p37 = new_with_vtable(descr=<SizeDescr 16>)
+837: setfield_gc(p37, p25, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+841: setfield_gc(p34, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+845: p38 = new_with_vtable(descr=<SizeDescr 48>)
+856: p39 = new_with_vtable(descr=<SizeDescr 32>)
+867: setfield_gc(p39, ConstPtr(ptr40), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+871: setfield_gc(p39, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+879: setfield_gc(p39, p37, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+883: p42 = new_with_vtable(descr=<SizeDescr 40>)
+894: setfield_gc(p42, p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+905: setfield_gc(p42, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+916: setfield_gc(p42, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+934: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+938: p44 = new_with_vtable(descr=<SizeDescr 40>)
+949: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+960: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+964: setfield_gc(p44, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+972: setfield_gc(p44, p37, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+976: setfield_gc(p33, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+980: setfield_gc(p38, p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+984: setfield_gc(p33, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+992: setfield_gc(p33, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1000: setfield_gc(p38, p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1004: setfield_gc(p38, p42, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1015: setfield_gc(p38, ConstPtr(ptr50), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1019: setfield_gc(p38, p44, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1023: jump(p33, p38, descr=TargetToken(69318064))
+1056: --end of the loop--
[3e4c069bf9be11e] jit-log-opt-loop}
[3e4c069c3f7e807] {jit-backend
[3e4c069c3fff27c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b91f
[3e4c069c4009ef3] jit-backend-dump}
[3e4c069c4015c22] {jit-backend-addr
Loop 18 ((let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)) has address 0x7ff2522b933d to 0x7ff2522b96a0 (bootstrap 0x7ff2522b92b0)
       gc table: 0x7ff2522b91f0
       function: 0x7ff2522b92b0
         resops: 0x7ff2522b933d
       failures: 0x7ff2522b96a0
            end: 0x7ff2522b98c5
[3e4c069c4019520] jit-backend-addr}
[3e4c069c401de6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9354 +0  AD030000
[3e4c069c401f25c] jit-backend-dump}
[3e4c069c40229e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b936a +0  B3030000
[3e4c069c4023821] jit-backend-dump}
[3e4c069c4026ea6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b937d +0  D8030000
[3e4c069c4027c0e] jit-backend-dump}
[3e4c069c402b024] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9393 +0  DE030000
[3e4c069c402bd39] jit-backend-dump}
[3e4c069c402efae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b93c5 +0  C8030000
[3e4c069c402fcd0] jit-backend-dump}
[3e4c069c4032e94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b93d5 +0  D4030000
[3e4c069c4033bb0] jit-backend-dump}
[3e4c069c4037061] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9434 +0  91030000
[3e4c069c4037d4f] jit-backend-dump}
[3e4c069c403aff8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9442 +0  9F030000
[3e4c069c403bce0] jit-backend-dump}
[3e4c069c403eec8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9493 +0  6A030000
[3e4c069c403fbd8] jit-backend-dump}
[3e4c069c4042df1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b94a1 +0  78030000
[3e4c069c4043ac0] jit-backend-dump}
[3e4c069c4046c07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b94bc +0  79030000
[3e4c069c40478df] jit-backend-dump}
[3e4c069c404a9f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b94d4 +0  7D030000
[3e4c069c404b6c7] jit-backend-dump}
[3e4c069c404e80a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9530 +0  3D030000
[3e4c069c404f4f5] jit-backend-dump}
[3e4c069c40526de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b953e +0  4B030000
[3e4c069c40533b9] jit-backend-dump}
[3e4c069c4056592] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9564 +0  41030000
[3e4c069c405726e] jit-backend-dump}
[3e4c069c405af98] jit-backend}
[3e4c069c405ec23] {jit-log-opt-loop
# Loop 18 ((let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)) : entry bridge with 94 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
+341: guard_class(p1, 16437896, descr=<Guard0x43dc8c0>) [p0, p1]
+360: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+364: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x43dc920>) [p0, p1]
debug_merge_point(0, 0, '(= y5076 0)')
+382: guard_not_invalidated(descr=<Guard0x43bbc88>) [p0, p1]
+382: guard_class(p0, 16500368, descr=<Guard0x43bbcd0>) [p0, p1]
+401: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+405: guard_nonnull_class(p6, ConstClass(W_Bignum), descr=<Guard0x43dc980>) [p0, p1]
+423: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+434: i11 = call_i(ConstClass(rbigint.eq), p8, ConstPtr(ptr10), descr=<Calli 1 rr EF=0>)
+464: guard_false(i11, descr=<Guard0x43dc9e0>) [p0, i11, p1, p3]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
+473: p12 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+477: guard_class(p12, 16478448, descr=<Guard0x43bbd18>) [p0, i11, p1, p3]
+489: p14 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+489: p16 = call_r(ConstClass(rbigint.mul), p8, p8, descr=<Callr 8 rr EF=4>)
+569: guard_no_exception(descr=<Guard0x43dca40>) [p16, p6, p0, p1, p3]
+584: i17 = getfield_gc_i(p16, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+588: i19 = int_gt(i17, 2)
+592: guard_true(i19, descr=<Guard0x43bbd60>) [p16, p6, p0, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+598: p21 = call_r(ConstClass(rbigint.mul), p16, p16, descr=<Callr 8 rr EF=4>)
+664: guard_no_exception(descr=<Guard0x43dcaa0>) [p21, p16, None, p0, p1, p3]
+679: i23 = getfield_gc_i(p21, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+683: i25 = int_gt(i23, 2)
+687: guard_true(i25, descr=<Guard0x43bbda8>) [p21, p16, None, p0, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+693: p26 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+711: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x43bbdf0>) [p21, p16, None, p0, p1, p3]
+720: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+724: guard_nonnull_class(p28, ConstClass(W_Bignum), descr=<Guard0x43dcb00>) [p21, p16, None, p0, p1, p3]
+744: p30 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+748: p32 = call_r(ConstClass(rbigint.sub), p30, p21, descr=<Callr 8 rr EF=4>)
+821: guard_no_exception(descr=<Guard0x43dcb60>) [p32, p28, p21, None, None, p0, p1, p3]
+836: i33 = getfield_gc_i(p32, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+840: i35 = int_gt(i33, 2)
+844: guard_true(i35, descr=<Guard0x43bbe38>) [p32, p28, p21, None, None, p0, p1, p3]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+857: i38 = call_i(ConstClass(rbigint.lt), p32, ConstPtr(ptr37), descr=<Calli 1 rr EF=0>)
+879: guard_false(i38, descr=<Guard0x43dcbc0>) [i38, p32, None, None, None, None, p0, p1, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+888: p39 = new_with_vtable(descr=<SizeDescr 32>)
+932: p40 = new_with_vtable(descr=<SizeDescr 32>)
+950: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+961: setfield_gc(p40, ConstPtr(ptr42), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+965: p43 = new_with_vtable(descr=<SizeDescr 16>)
+977: setfield_gc(p43, p32, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+981: setfield_gc(p40, p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+985: p44 = new_with_vtable(descr=<SizeDescr 48>)
+996: p45 = new_with_vtable(descr=<SizeDescr 32>)
+1007: setfield_gc(p45, ConstPtr(ptr46), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1011: setfield_gc(p45, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1019: setfield_gc(p45, p43, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1023: p48 = new_with_vtable(descr=<SizeDescr 40>)
+1034: setfield_gc(p48, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1045: setfield_gc(p48, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1056: setfield_gc(p48, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1074: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1078: p50 = new_with_vtable(descr=<SizeDescr 40>)
+1089: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1100: setfield_gc(p50, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1104: setfield_gc(p50, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1112: setfield_gc(p50, p43, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1116: setfield_gc(p44, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1120: setfield_gc(p39, p40, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1124: setfield_gc(p39, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1132: setfield_gc(p39, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1140: setfield_gc(p44, p45, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1144: setfield_gc(p44, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1155: setfield_gc(p44, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1159: setfield_gc(p44, p50, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1163: jump(p39, p44, descr=TargetToken(69318064))
+1200: --end of the loop--
[3e4c069c40b421b] jit-log-opt-loop}
[3e4c069d069ff53] {jit-backend
[3e4c069d077103f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9b
[3e4c069d077ccc5] jit-backend-dump}
[3e4c069d0789c2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9c34 +0  2C000000
[3e4c069d078b2c4] jit-backend-dump}
[3e4c069d078f4da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ba1d5 +0  2C000000
[3e4c069d07904f6] jit-backend-dump}
[3e4c069d0793c30] {jit-backend-addr
bridge out of Guard 0x43576a0 has address 0x7ff2522b9c30 to 0x7ff2522ba1d0
       gc table: 0x7ff2522b9b10
    jump target: 0x7ff2522b9c30
         resops: 0x7ff2522b9c3e
       failures: 0x7ff2522ba1d0
            end: 0x7ff2522ba53f
[3e4c069d0796213] jit-backend-addr}
[3e4c069d07998ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9c4b +0  1E060000
[3e4c069d079a7f3] jit-backend-dump}
[3e4c069d079dea0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9c66 +0  3B060000
[3e4c069d079ec08] jit-backend-dump}
[3e4c069d07a1f51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9c86 +0  37060000
[3e4c069d07a2bd3] jit-backend-dump}
[3e4c069d07a5cf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9c93 +0  46060000
[3e4c069d07a69b8] jit-backend-dump}
[3e4c069d07a9bf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9caa +0  4B060000
[3e4c069d07aa885] jit-backend-dump}
[3e4c069d07ad9ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9cb8 +0  59060000
[3e4c069d07ae65e] jit-backend-dump}
[3e4c069d07b171e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9ccf +0  5E060000
[3e4c069d07b23da] jit-backend-dump}
[3e4c069d07b54c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9cdf +0  6A060000
[3e4c069d07b61c2] jit-backend-dump}
[3e4c069d07b92c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9cf9 +0  6C060000
[3e4c069d07b9f88] jit-backend-dump}
[3e4c069d07bd0a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9d1e +0  63060000
[3e4c069d07bdd58] jit-backend-dump}
[3e4c069d07c0e5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9d78 +0  25060000
[3e4c069d07c1b2d] jit-backend-dump}
[3e4c069d07c4c36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9d81 +0  38060000
[3e4c069d07c58fc] jit-backend-dump}
[3e4c069d07c89f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9d92 +0  43060000
[3e4c069d07c96c2] jit-backend-dump}
[3e4c069d07cc7d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9da7 +0  4A060000
[3e4c069d07cd498] jit-backend-dump}
[3e4c069d07d05bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9db9 +0  4E060000
[3e4c069d07d1286] jit-backend-dump}
[3e4c069d07d434f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9e1c +0  07060000
[3e4c069d07d4fea] jit-backend-dump}
[3e4c069d07d80b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9e6d +0  D2050000
[3e4c069d07d8d48] jit-backend-dump}
[3e4c069d07dbdcb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9e7b +0  E0050000
[3e4c069d07dca44] jit-backend-dump}
[3e4c069d07dfad6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9ecc +0  AB050000
[3e4c069d07e0765] jit-backend-dump}
[3e4c069d07e37c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9eda +0  B9050000
[3e4c069d07e4458] jit-backend-dump}
[3e4c069d07e74fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9f2b +0  84050000
[3e4c069d07e818c] jit-backend-dump}
[3e4c069d07eb1f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9f39 +0  92050000
[3e4c069d07ebe7c] jit-backend-dump}
[3e4c069d07eef1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9f95 +0  52050000
[3e4c069d07efba6] jit-backend-dump}
[3e4c069d07f2c0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9fa3 +0  60050000
[3e4c069d07f38ae] jit-backend-dump}
[3e4c069d07f69a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9fc9 +0  56050000
[3e4c069d07f7659] jit-backend-dump}
[3e4c069d07fa93f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b0e98 +0  948D0000
[3e4c069d07fb5ff] jit-backend-dump}
[3e4c069d07ff6bc] jit-backend}
[3e4c069d0803347] {jit-log-opt-bridge
# bridge out of Guard 0x43576a0 with 145 ops
[i0, p1, p2, p3, p4, p5, p6, p7]
+310: guard_true(i0, descr=<Guard0x43dd100>) [i0, p1, p2, p5, p3, p4, p6, p7]
+319: guard_not_invalidated(descr=<Guard0x44106e0>) [i0, p1, p2, p5, p3, p4, p6, p7]
debug_merge_point(0, 0, '(if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))')
debug_merge_point(0, 0, 'new-p')
+319: p8 = getfield_gc_r(p6, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+337: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x4410698>) [i0, p1, p2, p5, p3, p4, p6, p7]
+346: p10 = getfield_gc_r(p6, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+350: p11 = getfield_gc_r(p6, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+354: p12 = getfield_gc_r(p6, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+358: guard_nonnull_class(p10, ConstClass(W_Bignum), descr=<Guard0x43dd220>) [i0, p1, p2, p5, p3, p4, p6, p7]
+378: guard_class(p12, 16435208, descr=<Guard0x4410650>) [i0, p1, p2, p5, p3, p4, p6, p7]
+391: p15 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+395: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x43dd1c0>) [i0, p1, p2, p5, p3, p4, p6, p7]
debug_merge_point(0, 0, '(pi-borwein4 n5118) from (= x5022 one5009)')
+414: guard_class(p11, 16500368, descr=<Guard0x4410608>) [i0, p1, p2, p5, p3, p4, p6, p7]
+428: p18 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+432: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x43dd160>) [i0, p1, p2, p5, p3, p4, p6, p7]
+451: p20 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+455: guard_class(p20, 16505296, descr=<Guard0x44105c0>) [i0, p1, p2, p5, p3, p4, p6, p7]
+467: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([one5062 (expt 10 nb-digits5060)]) (let ([one^25065 (square one5062)]) (let ([one^45068 (square one^25065)][AppRand41 (* one^25065 2)]) (let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8)))))))')
debug_merge_point(0, 0, '(expt 10 nb-digits5060)')
+471: f23 = cast_int_to_float(i22)
+476: i24 = float_ne(f23, f23)
+487: guard_false(i24, descr=<Guard0x4410578>) [i0, p1, p2, p5, p3, p4, p6, p7]
+493: f26 = float_add(f23, 11235582092889474423308157442431404585112356118389416079589380072358292237843810195794279832650471001320007117491962084853674360550901038905802964414967132773610493339054092829768888725077880882465817684505312860552384417646403930092119569408801702322709406917786643639996702871154982269052209770601514008576.000000)
+513: i27 = float_eq(f26, f23)
+524: guard_false(i27, descr=<Guard0x4410530>) [i0, p1, p2, p5, p3, p4, p6, p7]
+530: f30 = call_f(ConstClass(ccall_pow), 10.000000, f23, descr=<Callf 8 ff EF=2>)
+572: i33 = call_i(ConstClass(_ll_1_threadlocalref_get__INTLlT_Signed), 48, descr=<Calli 4 i EF=2 OS=5>)
+584: f34 = float_sub(f30, f30)
+593: i36 = float_eq(f34, 0.000000)
+614: guard_true(i36, descr=<Guard0x43dd0a0>) [i33, f34, f30, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+620: i38 = int_is_true(i33)
+623: guard_false(i38, descr=<Guard0x44104e8>) [i33, f34, f30, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+629: i39 = float_ne(f30, f30)
+640: guard_false(i39, descr=<Guard0x44104a0>) [i33, f34, f30, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+646: i41 = float_ge(f30, -9223372036854775808.000000)
+661: guard_true(i41, descr=<Guard0x4410458>) [i33, f34, f30, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+667: i43 = float_lt(f30, 9223372036854775808.000000)
+679: guard_false(i43, descr=<Guard0x4410380>) [i33, f34, f30, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+685: p45 = call_r(ConstClass(fromint), i22, descr=<Callr 8 i EF=3>)
+769: guard_no_exception(descr=<Guard0x43dd040>) [p45, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+791: p48 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr47), p45, descr=<Callr 8 rr EF=4>)
+850: guard_no_exception(descr=<Guard0x43dcfe0>) [p48, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+865: i49 = getfield_gc_i(p48, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+869: i51 = int_gt(i49, 2)
+873: guard_true(i51, descr=<Guard0x4410338>) [p48, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([one^25065 (square one5062)]) (let ([one^45068 (square one^25065)][AppRand41 (* one^25065 2)]) (let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8))))))')
debug_merge_point(0, 0, '(square one5062)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+879: p53 = call_r(ConstClass(rbigint.mul), p48, p48, descr=<Callr 8 rr EF=4>)
+945: guard_no_exception(descr=<Guard0x43dcf80>) [p53, p48, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+960: i54 = getfield_gc_i(p53, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+964: i56 = int_gt(i54, 2)
+968: guard_true(i56, descr=<Guard0x44102a8>) [p53, p48, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([one^45068 (square one^25065)][AppRand41 (* one^25065 2)]) (let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8)))))')
debug_merge_point(0, 0, '(square one^25065)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+974: p58 = call_r(ConstClass(rbigint.mul), p53, p53, descr=<Callr 8 rr EF=4>)
+1040: guard_no_exception(descr=<Guard0x43dcf20>) [p58, p53, p48, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+1055: i59 = getfield_gc_i(p58, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1059: i61 = int_gt(i59, 2)
+1063: guard_true(i61, descr=<Guard0x4410218>) [p58, p53, p48, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(* one^25065 2)')
+1076: p64 = call_r(ConstClass(rbigint.mul), p53, ConstPtr(ptr63), descr=<Callr 8 rr EF=4>)
+1146: guard_no_exception(descr=<Guard0x43dcec0>) [p64, p58, p53, p48, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+1161: i65 = getfield_gc_i(p64, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1165: i67 = int_gt(i65, 2)
+1169: guard_true(i67, descr=<Guard0x4410188>) [p64, p58, p53, p48, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8))))')
debug_merge_point(0, 0, '(square-root AppRand41)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1182: i70 = call_i(ConstClass(rbigint.lt), p64, ConstPtr(ptr69), descr=<Calli 1 rr EF=0>)
+1204: guard_false(i70, descr=<Guard0x43dd280>) [i70, p64, p58, p53, p48, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1213: p71 = new_with_vtable(descr=<SizeDescr 32>)
+1257: p72 = new_with_vtable(descr=<SizeDescr 32>)
+1275: setfield_gc(p72, ConstPtr(ptr73), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1286: setfield_gc(p72, ConstPtr(ptr74), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1290: p75 = new_with_vtable(descr=<SizeDescr 16>)
+1301: setfield_gc(p75, p64, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1305: setfield_gc(p72, p75, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1309: p76 = new_with_vtable(descr=<SizeDescr 48>)
+1320: p77 = new_with_vtable(descr=<SizeDescr 32>)
+1332: setfield_gc(p77, ConstPtr(ptr78), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1337: setfield_gc(p77, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1346: setfield_gc(p77, p75, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1351: p80 = new_with_vtable(descr=<SizeDescr 40>)
+1364: setfield_gc(p80, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1375: p81 = new_with_vtable(descr=<SizeDescr 32>)
+1386: p82 = new_with_vtable(descr=<SizeDescr 24>)
+1397: p83 = new_with_vtable(descr=<SizeDescr 24>)
+1408: setfield_gc(p83, ConstPtr(ptr84), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1412: p85 = new_with_vtable(descr=<SizeDescr 16>)
+1423: setfield_gc(p85, p48, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1434: setfield_gc(p83, p85, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1438: setfield_gc(p82, p83, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1442: p86 = new_with_vtable(descr=<SizeDescr 16>)
+1453: setfield_gc(p86, p53, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1464: setfield_gc(p82, p86, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1468: setfield_gc(p81, p82, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1472: p87 = new_with_vtable(descr=<SizeDescr 16>)
+1483: setfield_gc(p87, p58, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1494: setfield_gc(p81, p87, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1498: setfield_gc(p81, p75, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1502: setfield_gc(p80, p81, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1506: p88 = new_with_vtable(descr=<SizeDescr 56>)
+1517: setfield_gc(p88, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1521: setfield_gc(p88, p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1532: setfield_gc(p88, p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1550: setfield_gc(p88, ConstPtr(ptr89), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1554: setfield_gc(p88, p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1565: p90 = new_with_vtable(descr=<SizeDescr 16>)
+1576: setfield_gc(p90, p1, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1587: setfield_gc(p88, p90, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1591: setfield_gc(p80, p88, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1602: setfield_gc(p80, ConstPtr(ptr91), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1606: p92 = new_with_vtable(descr=<SizeDescr 40>)
+1617: setfield_gc(p92, ConstPtr(ptr93), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1628: setfield_gc(p92, ConstPtr(ptr94), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1632: setfield_gc(p92, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1640: setfield_gc(p92, p75, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1651: setfield_gc(p76, ConstPtr(ptr96), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1655: setfield_gc(p76, p92, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1659: setfield_gc(p76, p77, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1663: setfield_gc(p76, p80, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1667: setfield_gc(p76, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1671: setfield_gc(p71, p72, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1675: setfield_gc(p71, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1683: setfield_gc(p71, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1691: jump(p71, p76, descr=TargetToken(69318064))
+1728: --end of the loop--
[3e4c069d088e6f3] jit-log-opt-bridge}
[3e4c069d60add78] {jit-backend
[3e4c069d62e9fd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522baca
[3e4c069d630c7d5] jit-backend-dump}
[3e4c069d6319be2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb004 +0  2C000000
[3e4c069d631b49e] jit-backend-dump}
[3e4c069d631fb2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbf65 +0  2C000000
[3e4c069d6320b1a] jit-backend-dump}
[3e4c069d6324207] {jit-backend-addr
bridge out of Guard 0x43ba7b8 has address 0x7ff2522bb000 to 0x7ff2522bbf60
       gc table: 0x7ff2522baca0
    jump target: 0x7ff2522bb000
         resops: 0x7ff2522bb00e
       failures: 0x7ff2522bbf60
            end: 0x7ff2522bcb5e
[3e4c069d6326587] jit-backend-addr}
[3e4c069d6329d16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb020 +0  0E110000
[3e4c069d632ab58] jit-backend-dump}
[3e4c069d632df36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb03e +0  0C110000
[3e4c069d632ec4b] jit-backend-dump}
[3e4c069d6332033] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb05d +0  25110000
[3e4c069d6332cd7] jit-backend-dump}
[3e4c069d63361a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb076 +0  28110000
[3e4c069d6336e39] jit-backend-dump}
[3e4c069d633a1c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb08a +0  30110000
[3e4c069d633ae41] jit-backend-dump}
[3e4c069d633e1b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb0a1 +0  35110000
[3e4c069d633ee34] jit-backend-dump}
[3e4c069d634202c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb0aa +0  48110000
[3e4c069d6342ca2] jit-backend-dump}
[3e4c069d6345eea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb109 +0  05110000
[3e4c069d6346b5d] jit-backend-dump}
[3e4c069d6349dc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb165 +0  C5100000
[3e4c069d634aa55] jit-backend-dump}
[3e4c069d634dc94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb173 +0  D3100000
[3e4c069d634e919] jit-backend-dump}
[3e4c069d6351b2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb1cc +0  96100000
[3e4c069d63527a0] jit-backend-dump}
[3e4c069d6355942] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb1da +0  A4100000
[3e4c069d63565bf] jit-backend-dump}
[3e4c069d635975b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb1e7 +0  B3100000
[3e4c069d635a3ed] jit-backend-dump}
[3e4c069d635d58f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb1f0 +0  C6100000
[3e4c069d635e21b] jit-backend-dump}
[3e4c069d6361460] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb1f9 +0  D9100000
[3e4c069d636212f] jit-backend-dump}
[3e4c069d636538c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb223 +0  CB100000
[3e4c069d636604e] jit-backend-dump}
[3e4c069d63692ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb27f +0  8B100000
[3e4c069d6369f65] jit-backend-dump}
[3e4c069d636d1f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb28d +0  99100000
[3e4c069d636de8e] jit-backend-dump}
[3e4c069d637106a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb2de +0  64100000
[3e4c069d6371cea] jit-backend-dump}
[3e4c069d6374e86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb2ec +0  72100000
[3e4c069d6375b06] jit-backend-dump}
[3e4c069d6378cd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb306 +0  74100000
[3e4c069d637994c] jit-backend-dump}
[3e4c069d637cbf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb30f +0  87100000
[3e4c069d637d85a] jit-backend-dump}
[3e4c069d6380ad2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb318 +0  9A100000
[3e4c069d638174f] jit-backend-dump}
[3e4c069d638494d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb322 +0  AC100000
[3e4c069d63855c3] jit-backend-dump}
[3e4c069d6388793] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb376 +0  74100000
[3e4c069d6389407] jit-backend-dump}
[3e4c069d638c63c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb38e +0  78100000
[3e4c069d638d2b2] jit-backend-dump}
[3e4c069d63904cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb398 +0  8A100000
[3e4c069d639119b] jit-backend-dump}
[3e4c069d6394438] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb3a7 +0  97100000
[3e4c069d63950ab] jit-backend-dump}
[3e4c069d6398336] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb3f8 +0  62100000
[3e4c069d6398fa3] jit-backend-dump}
[3e4c069d639c2d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb406 +0  70100000
[3e4c069d639cf4a] jit-backend-dump}
[3e4c069d63a0117] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb40f +0  83100000
[3e4c069d63a0d90] jit-backend-dump}
[3e4c069d63a3fcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb418 +0  96100000
[3e4c069d63a4c42] jit-backend-dump}
[3e4c069d63a7e18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb46d +0  5D100000
[3e4c069d63a8a8c] jit-backend-dump}
[3e4c069d63abc56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb485 +0  61100000
[3e4c069d63ac8c0] jit-backend-dump}
[3e4c069d63afa56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb48f +0  73100000
[3e4c069d63b06c9] jit-backend-dump}
[3e4c069d63b38ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb49e +0  80100000
[3e4c069d63b457b] jit-backend-dump}
[3e4c069d63b7733] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb4a8 +0  92100000
[3e4c069d63b83a3] jit-backend-dump}
[3e4c069d63bb564] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb4c6 +0  90100000
[3e4c069d63bc31b] jit-backend-dump}
[3e4c069d63bf5d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb522 +0  50100000
[3e4c069d63c027b] jit-backend-dump}
[3e4c069d63c3480] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb530 +0  5E100000
[3e4c069d63c4108] jit-backend-dump}
[3e4c069d63c72df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb54f +0  5B100000
[3e4c069d63c7f64] jit-backend-dump}
[3e4c069d63cb187] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb55c +0  6A100000
[3e4c069d63cbdfa] jit-backend-dump}
[3e4c069d63cf24d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb5b4 +0  2E100000
[3e4c069d63cfec3] jit-backend-dump}
[3e4c069d63d3203] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb5c2 +0  3C100000
[3e4c069d63d3e7c] jit-backend-dump}
[3e4c069d63d70ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb5cc +0  4E100000
[3e4c069d63d7d1b] jit-backend-dump}
[3e4c069d63db562] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb5d5 +0  61100000
[3e4c069d63dc241] jit-backend-dump}
[3e4c069d63df644] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb5de +0  74100000
[3e4c069d63e0341] jit-backend-dump}
[3e4c069d63e355a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb633 +0  3B100000
[3e4c069d63e4208] jit-backend-dump}
[3e4c069d63e73a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb64c +0  3E100000
[3e4c069d63e8039] jit-backend-dump}
[3e4c069d63eb1ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb656 +0  50100000
[3e4c069d63ebe58] jit-backend-dump}
[3e4c069d63eefe2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb664 +0  5E100000
[3e4c069d63efc80] jit-backend-dump}
[3e4c069d63f2d92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb682 +0  5C100000
[3e4c069d63f3a2a] jit-backend-dump}
[3e4c069d63f6b7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb697 +0  63100000
[3e4c069d63f7812] jit-backend-dump}
[3e4c069d63fa931] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb6a0 +0  76100000
[3e4c069d63fb5c9] jit-backend-dump}
[3e4c069d63fe6fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb6a9 +0  89100000
[3e4c069d63ff389] jit-backend-dump}
[3e4c069d640253b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb704 +0  4A100000
[3e4c069d64031c6] jit-backend-dump}
[3e4c069d640630d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb71c +0  4E100000
[3e4c069d6406fa5] jit-backend-dump}
[3e4c069d640a0be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb726 +0  60100000
[3e4c069d640ad43] jit-backend-dump}
[3e4c069d640de6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb734 +0  6E100000
[3e4c069d640eb37] jit-backend-dump}
[3e4c069d6411c7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb74f +0  6F100000
[3e4c069d6412913] jit-backend-dump}
[3e4c069d6415a7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb76c +0  6E100000
[3e4c069d6416710] jit-backend-dump}
[3e4c069d6419829] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb782 +0  74100000
[3e4c069d641a4c4] jit-backend-dump}
[3e4c069d641d5f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb796 +0  7C100000
[3e4c069d641e29f] jit-backend-dump}
[3e4c069d64213c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb7a9 +0  85100000
[3e4c069d6422056] jit-backend-dump}
[3e4c069d64251b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb82d +0  1D100000
[3e4c069d6425e44] jit-backend-dump}
[3e4c069d6428f5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb83b +0  2B100000
[3e4c069d6429bef] jit-backend-dump}
[3e4c069d642cd29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb859 +0  29100000
[3e4c069d642d9c1] jit-backend-dump}
[3e4c069d6430af2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb8ae +0  F00F0000
[3e4c069d643178a] jit-backend-dump}
[3e4c069d64348b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb8bc +0  FE0F0000
[3e4c069d6435541] jit-backend-dump}
[3e4c069d6438666] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb8da +0  FC0F0000
[3e4c069d64392f8] jit-backend-dump}
[3e4c069d643c40a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb8ed +0  05100000
[3e4c069d643d09c] jit-backend-dump}
[3e4c069d64401b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb904 +0  0A100000
[3e4c069d6440e44] jit-backend-dump}
[3e4c069d6443f7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb91b +0  0F100000
[3e4c069d6444c10] jit-backend-dump}
[3e4c069d6447d66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb92c +0  1A100000
[3e4c069d64489f2] jit-backend-dump}
[3e4c069d644bbf9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb93c +0  26100000
[3e4c069d644c89d] jit-backend-dump}
[3e4c069d644faeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb953 +0  2B100000
[3e4c069d645078c] jit-backend-dump}
[3e4c069d6453975] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb963 +0  37100000
[3e4c069d645460a] jit-backend-dump}
[3e4c069d645772f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb970 +0  46100000
[3e4c069d64583b1] jit-backend-dump}
[3e4c069d645b50d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb986 +0  4C100000
[3e4c069d645c1c1] jit-backend-dump}
[3e4c069d645f301] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb9ab +0  43100000
[3e4c069d645ff90] jit-backend-dump}
[3e4c069d6463093] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bba0c +0  FE0F0000
[3e4c069d6463d1c] jit-backend-dump}
[3e4c069d6466e63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bba1d +0  09100000
[3e4c069d6467b16] jit-backend-dump}
[3e4c069d646ac44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bba4f +0  F30F0000
[3e4c069d646b904] jit-backend-dump}
[3e4c069d646ea32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbaab +0  B30F0000
[3e4c069d646f6ca] jit-backend-dump}
[3e4c069d6472832] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbafc +0  7E0F0000
[3e4c069d64734e3] jit-backend-dump}
[3e4c069d6476673] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbb0a +0  8C0F0000
[3e4c069d6477308] jit-backend-dump}
[3e4c069d647a48c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbb5b +0  570F0000
[3e4c069d647b114] jit-backend-dump}
[3e4c069d647e276] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbb69 +0  650F0000
[3e4c069d647ef30] jit-backend-dump}
[3e4c069d6482061] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbc41 +0  A90E0000
[3e4c069d6482cea] jit-backend-dump}
[3e4c069d6485e1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbc92 +0  740E0000
[3e4c069d6486aad] jit-backend-dump}
[3e4c069d6489bdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbca7 +0  7B0E0000
[3e4c069d648a873] jit-backend-dump}
[3e4c069d648d9aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bbcce +0  700E0000
[3e4c069d648e639] jit-backend-dump}
[3e4c069d64919da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7384 +0  783C0000
[3e4c069d64926bf] jit-backend-dump}
[3e4c069d64967ce] jit-backend}
[3e4c069d649a6df] {jit-log-opt-bridge
# bridge out of Guard 0x43ba7b8 with 392 ops
[p0, p1, p2, p3, p4, p5]
+886: i6 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+890: i8 = int_gt(i6, 2)
+894: guard_false(i8, descr=<Guard0x43dd340>) [p0, i6, p1, p5, p2, p3, p4]
+900: i10 = call_i(ConstClass(rbigint._toint_helper), p0, descr=<Calli 8 r EF=4>)
+915: guard_no_exception(descr=<Guard0x43dd3a0>) [p0, i10, p1, p5, p2, p3, p4]
+930: guard_not_invalidated(descr=<Guard0x4410800>) [p0, i10, p1, p5, p2, p3, p4]
debug_merge_point(0, 0, '(let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))')
+930: p11 = getfield_gc_r(p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+941: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x43dd400>) [p0, i10, p1, p5, p2, p3, p4]
debug_merge_point(0, 0, '(* one5062 AppRand45)')
+961: p13 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+973: guard_class(p13, 16478448, descr=<Guard0x4410848>) [p0, i10, p1, p5, p2, p3, p4]
+986: p15 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+997: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x4410890>) [p0, i10, p1, p5, p2, p3, p4]
+1006: p17 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1010: guard_nonnull_class(p17, ConstClass(W_Bignum), descr=<Guard0x43dd460>) [p0, i10, p1, p5, p2, p3, p4]
+1029: i19 = int_is_true(i10)
+1032: guard_true(i19, descr=<Guard0x44108d8>) [p0, i10, p1, p5, p2, p3, p4]
+1038: p21 = call_r(ConstClass(fromint), i10, descr=<Callr 8 i EF=3>)
+1118: guard_no_exception(descr=<Guard0x43dd4c0>) [p21, p17, i10, p11, None, p5, p2, p3, None]
+1133: p23 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1144: p25 = call_r(ConstClass(rbigint.mul), p23, p21, descr=<Callr 8 rr EF=4>)
+1210: guard_no_exception(descr=<Guard0x43dd520>) [p25, p17, i10, p11, None, p5, p2, p3, None]
+1225: i26 = getfield_gc_i(p25, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1229: i28 = int_gt(i26, 2)
+1233: guard_true(i28, descr=<Guard0x4410920>) [p25, p17, i10, p11, None, p5, p2, p3, None]
debug_merge_point(0, 0, '(+ one5062 t1)')
+1239: p30 = call_r(ConstClass(rbigint.add), p23, p5, descr=<Callr 8 rr EF=4>)
+1313: guard_no_exception(descr=<Guard0x43dd580>) [p30, p25, p17, None, p11, None, p5, p2, p3, None]
+1328: i31 = getfield_gc_i(p30, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1332: i33 = int_gt(i31, 2)
+1336: guard_true(i33, descr=<Guard0x4410968>) [p30, p25, p17, None, p11, None, p5, p2, p3, None]
debug_merge_point(0, 0, '(let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))')
debug_merge_point(0, 0, '(quotient AppRand46 AppRand47)')
+1342: i34 = getfield_gc_i(p30, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1346: i35 = int_is_zero(i34)
+1349: guard_false(i35, descr=<Guard0x44109b0>) [p30, p25, p17, None, p11, None, p5, p2, p3, None]
+1355: i36 = int_lt(i26, i31)
+1358: guard_false(i36, descr=<Guard0x44109f8>) [p30, p25, p17, None, p11, None, p5, p2, p3, None]
+1364: i37 = int_eq(i26, i31)
+1367: guard_true(i37, descr=<Guard0x4410a40>) [p30, p25, p17, None, p11, None, p5, p2, p3, None]
+1373: i39 = int_sub(i26, 1)
+1377: p40 = getfield_gc_r(p25, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1388: i41 = getarrayitem_gc_i(p40, i39, descr=<ArrayS 8>)
+1393: i43 = int_sub(i31, 1)
+1397: p44 = getfield_gc_r(p30, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1401: i45 = getarrayitem_gc_i(p44, i43, descr=<ArrayS 8>)
+1406: i46 = int_lt(i41, i45)
+1409: guard_true(i46, descr=<Guard0x4410a88>) [p30, p25, p17, None, p11, None, p5, p2, p3, None]
debug_merge_point(0, 0, '(let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))')
debug_merge_point(0, 0, '(+ one5062 t2)')
+1422: p49 = call_r(ConstClass(rbigint.add), p23, ConstPtr(ptr48), descr=<Callr 8 rr EF=4>)
+1492: guard_no_exception(descr=<Guard0x43dd5e0>) [p49, None, p17, None, p11, None, None, p2, p3, None]
+1507: i50 = getfield_gc_i(p49, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1511: i52 = int_gt(i50, 2)
+1515: guard_true(i52, descr=<Guard0x4410ad0>) [p49, None, p17, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))')
debug_merge_point(0, 0, '(square AppRand48)')
+1521: p53 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+1521: p55 = call_r(ConstClass(rbigint.mul), p49, p49, descr=<Callr 8 rr EF=4>)
+1587: guard_no_exception(descr=<Guard0x43dd640>) [p55, p49, None, None, None, p11, None, None, p2, p3, None]
+1602: i56 = getfield_gc_i(p55, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1606: i58 = int_gt(i56, 2)
+1610: guard_true(i58, descr=<Guard0x4410b18>) [p55, p49, None, None, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square (quotient AppRand49 one5062))')
+1616: i59 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1628: i60 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1633: i61 = int_is_zero(i60)
+1636: guard_false(i61, descr=<Guard0x4410b60>) [p55, p49, None, None, None, p11, None, None, p2, p3, None]
+1642: i62 = int_lt(i56, i59)
+1645: guard_false(i62, descr=<Guard0x4410ba8>) [p55, p49, None, None, None, p11, None, None, p2, p3, None]
+1651: i63 = int_eq(i56, i59)
+1654: guard_false(i63, descr=<Guard0x4410bf0>) [p55, p49, None, None, None, p11, None, None, p2, p3, None]
+1660: i65 = int_eq(i59, 1)
+1664: guard_false(i65, descr=<Guard0x4410c38>) [p55, p49, None, None, None, p11, None, None, p2, p3, None]
+1670: p67 = call_r(ConstClass(_x_divrem), p55, p23, descr=<Callr 8 rr EF=5>)
+1739: guard_no_exception(descr=<Guard0x43dd6a0>) [p67, p23, p55, None, None, None, None, p11, None, None, p2, p3, None]
+1754: p68 = getfield_gc_r(p67, descr=<FieldP tuple2.item0 8 pure>)
+1758: p69 = getfield_gc_r(p67, descr=<FieldP tuple2.item1 16 pure>)
+1758: i70 = getfield_gc_i(p55, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1769: i71 = int_ne(i70, i60)
+1772: guard_false(i71, descr=<Guard0x4410c80>) [p67, p23, p55, None, None, None, None, p11, None, None, p2, p3, None]
+1778: i73 = int_lt(i70, 0)
+1782: guard_false(i73, descr=<Guard0x4410cc8>) [p67, p23, p55, None, None, None, None, p11, None, None, p2, p3, None]
+1788: i74 = getfield_gc_i(p68, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1793: i76 = int_gt(i74, 2)
+1797: guard_true(i76, descr=<Guard0x4410d10>) [p67, p23, p55, None, None, None, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(* x4969 x4969)')
+1803: p78 = call_r(ConstClass(rbigint.mul), p68, p68, descr=<Callr 8 rr EF=4>)
+1869: guard_no_exception(descr=<Guard0x43dd700>) [p78, p68, None, None, None, None, p11, None, None, p2, p3, None]
+1884: i79 = getfield_gc_i(p78, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1888: i81 = int_gt(i79, 2)
+1892: guard_true(i81, descr=<Guard0x4410d58>) [p78, p68, None, None, None, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(quotient AppRand50 one5062)')
+1898: i82 = int_lt(i79, i59)
+1901: guard_false(i82, descr=<Guard0x4410da0>) [p78, p68, None, None, None, None, p11, None, None, p2, p3, None]
+1907: i83 = int_eq(i79, i59)
+1910: guard_false(i83, descr=<Guard0x4410de8>) [p78, p68, None, None, None, None, p11, None, None, p2, p3, None]
+1916: p85 = call_r(ConstClass(_x_divrem), p78, p23, descr=<Callr 8 rr EF=5>)
+1986: guard_no_exception(descr=<Guard0x43dd760>) [p85, p23, p78, None, None, None, None, None, p11, None, None, p2, p3, None]
+2001: p86 = getfield_gc_r(p85, descr=<FieldP tuple2.item0 8 pure>)
+2005: p87 = getfield_gc_r(p85, descr=<FieldP tuple2.item1 16 pure>)
+2005: i88 = getfield_gc_i(p78, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2016: i89 = int_ne(i88, i60)
+2019: guard_false(i89, descr=<Guard0x4410e30>) [p85, p23, p78, None, None, None, None, None, p11, None, None, p2, p3, None]
+2025: i91 = int_lt(i88, 0)
+2029: guard_false(i91, descr=<Guard0x4410e78>) [p85, p23, p78, None, None, None, None, None, p11, None, None, p2, p3, None]
+2035: i92 = getfield_gc_i(p86, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2040: i94 = int_gt(i92, 2)
+2044: guard_true(i94, descr=<Guard0x4410ec0>) [p85, p23, p78, None, None, None, None, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(square t2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
debug_merge_point(0, 0, '(let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(+ t2 (quotient AppRand51 one5062))')
+2050: i96 = int_lt(1, i59)
+2054: guard_true(i96, descr=<Guard0x4410f08>) [p85, p23, p78, None, None, None, None, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))')
debug_merge_point(0, 0, '(+ one5062 AppRand52)')
debug_merge_point(0, 0, '(let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))')
debug_merge_point(0, 0, '(* t3 a5078)')
+2060: p97 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+2071: guard_nonnull_class(p97, ConstClass(W_Bignum), descr=<Guard0x43dd7c0>) [p85, p23, p78, None, None, None, None, None, p11, None, None, p2, p3, None]
+2090: p99 = getfield_gc_r(p97, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2094: p101 = call_r(ConstClass(rbigint.mul), p86, p99, descr=<Callr 8 rr EF=4>)
+2167: guard_no_exception(descr=<Guard0x43dd820>) [p101, p97, p86, None, p49, None, None, None, p11, None, None, p2, p3, None]
+2182: i102 = getfield_gc_i(p101, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2186: i104 = int_gt(i102, 2)
+2190: guard_true(i104, descr=<Guard0x4410f50>) [p101, p97, p86, None, p49, None, None, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(* t2 t4)')
debug_merge_point(0, 0, '(let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))')
debug_merge_point(0, 0, '(* x5080 AppRand54)')
+2196: p105 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+2208: guard_nonnull_class(p105, ConstClass(W_Fixnum), descr=<Guard0x43dd880>) [p101, p97, p86, None, p49, None, None, None, p11, None, None, p2, p3, None]
+2227: i107 = getfield_gc_i(p105, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2231: i108 = int_is_true(i107)
+2234: guard_true(i108, descr=<Guard0x4410f98>) [p101, p97, p86, None, p49, None, None, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))')
debug_merge_point(0, 0, '(- AppRand53 AppRand55)')
+2240: p111 = call_r(ConstClass(rbigint.sub), p101, ConstPtr(ptr110), descr=<Callr 8 rr EF=4>)
+2313: guard_no_exception(descr=<Guard0x43dd8e0>) [p111, p101, None, None, None, None, None, None, None, p11, None, None, p2, p3, None]
+2328: i112 = getfield_gc_i(p111, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2332: i114 = int_gt(i112, 2)
+2336: guard_true(i114, descr=<Guard0x4410fe0>) [p111, p101, None, None, None, None, None, None, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(* 4 x5080)')
+2342: i116 = int_mul_ovf(4, i107)
+2346: guard_no_overflow(descr=<Guard0x4411028>) [p111, p101, None, None, None, None, None, None, None, p11, None, None, p2, p3, None]
debug_merge_point(0, 0, '(loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
+2352: i117 = int_lt(i112, i59)
+2355: guard_false(i117, descr=<Guard0x4411070>) [p111, p101, None, None, None, None, None, None, None, p11, None, None, p2, p3, None]
+2361: i118 = int_eq(i112, i59)
+2364: guard_false(i118, descr=<Guard0x44110b8>) [p111, p101, None, None, None, None, None, None, None, p11, None, None, p2, p3, None]
+2370: p120 = call_r(ConstClass(_x_divrem), p111, p23, descr=<Callr 8 rr EF=5>)
+2440: guard_no_exception(descr=<Guard0x43dd940>) [p13, p3, p120, p23, p111, i116, None, None, None, None, None, None, None, None, None, None, None, p2, None, None]
+2455: p121 = getfield_gc_r(p120, descr=<FieldP tuple2.item0 8 pure>)
+2459: p122 = getfield_gc_r(p120, descr=<FieldP tuple2.item1 16 pure>)
+2459: i123 = getfield_gc_i(p111, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2471: i124 = int_ne(i123, i60)
+2474: guard_false(i124, descr=<Guard0x4411100>) [p13, p3, p120, p23, p111, i116, None, None, None, None, None, None, None, None, None, None, None, p2, None, None]
+2480: i126 = int_lt(i123, 0)
+2484: guard_false(i126, descr=<Guard0x4411148>) [p13, p3, p120, p23, p111, i116, None, None, None, None, None, None, None, None, None, None, None, p2, None, None]
+2490: i127 = getfield_gc_i(p121, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2494: i129 = int_gt(i127, 2)
+2498: guard_true(i129, descr=<Guard0x4411190>) [p13, p3, p120, p23, p111, i116, None, None, None, None, None, None, None, None, None, None, None, p2, None, None]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
debug_merge_point(0, 0, '(= y5076 0)')
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(quotient one^25065 a5078)')
+2504: p130 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+2515: guard_nonnull_class(p130, ConstClass(W_Bignum), descr=<Guard0x43dd9a0>) [p13, p3, p120, p23, p111, i116, None, None, None, None, None, None, None, None, None, None, None, p2, None, None]
+2534: p132 = getfield_gc_r(p130, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2538: i133 = getfield_gc_i(p132, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2542: i134 = getfield_gc_i(p121, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2546: i135 = int_is_zero(i134)
+2549: guard_false(i135, descr=<Guard0x44111d8>) [p13, p3, p120, p23, p111, i116, None, None, None, None, None, None, None, None, None, None, None, p2, None, None]
+2555: i136 = int_lt(i133, i127)
+2558: guard_false(i136, descr=<Guard0x4411220>) [p13, p3, p120, p23, p111, i116, None, None, None, None, None, None, None, None, None, None, None, p2, None, None]
+2564: i137 = int_eq(i133, i127)
+2567: guard_false(i137, descr=<Guard0x4411268>) [p13, p3, p120, p23, p111, i116, None, None, None, None, None, None, None, None, None, None, None, p2, None, None]
+2573: p139 = call_r(ConstClass(_x_divrem), p132, p121, descr=<Callr 8 rr EF=5>)
+2649: guard_no_exception(descr=<Guard0x43dda00>) [p3, p139, p121, p132, p13, i116, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2664: p140 = getfield_gc_r(p139, descr=<FieldP tuple2.item0 8 pure>)
+2668: p141 = getfield_gc_r(p139, descr=<FieldP tuple2.item1 16 pure>)
+2668: i142 = getfield_gc_i(p132, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2679: i143 = int_ne(i142, i134)
+2682: guard_false(i143, descr=<Guard0x44112b0>) [p3, p139, p121, p132, p13, i116, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2688: i145 = int_lt(i142, 0)
+2692: guard_false(i145, descr=<Guard0x44112f8>) [p3, p139, p121, p132, p13, i116, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2698: i146 = getfield_gc_i(p140, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2702: i148 = int_gt(i146, 2)
+2706: guard_true(i148, descr=<Guard0x4411340>) [p3, p139, p121, p132, p13, i116, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2712: p149 = getfield_gc_r(p3, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2730: guard_value(p149, ConstPtr(ptr150), descr=<Guard0x4411388>) [p3, p139, p121, p132, p13, i116, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2739: p151 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2743: p152 = getfield_gc_r(p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+2747: p153 = getfield_gc_r(p3, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+2751: p154 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66)))) from (quotient one^25065 a5078)')
+2755: guard_class(p154, 16437352, descr=<Guard0x44113d0>) [p3, p139, p121, p132, p13, i116, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2768: p156 = getfield_gc_r(p154, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2772: guard_nonnull_class(p156, ConstClass(ForwardLink), descr=<Guard0x43dda60>) [p3, p139, p121, p132, p13, i116, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(- bs b2)')
+2790: guard_nonnull_class(p152, ConstClass(W_Bignum), descr=<Guard0x43ddac0>) [p3, p139, p121, p132, p13, i116, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2810: guard_nonnull_class(p153, ConstClass(W_Bignum), descr=<Guard0x43ddb20>) [p3, p139, p121, p132, p13, i116, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2829: p160 = getfield_gc_r(p152, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2834: p161 = getfield_gc_r(p153, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2838: p163 = call_r(ConstClass(rbigint.sub), p160, p161, descr=<Callr 8 rr EF=4>)
+2946: guard_no_exception(descr=<Guard0x43ddb80>) [p163, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2961: i164 = getfield_gc_i(p163, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2965: i166 = int_gt(i164, 2)
+2969: guard_false(i166, descr=<Guard0x4411418>) [p163, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2975: i168 = call_i(ConstClass(rbigint._toint_helper), p163, descr=<Calli 8 r EF=4>)
+2990: guard_no_exception(descr=<Guard0x43ddbe0>) [p163, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(- b4 b2)')
+3005: p170 = call_r(ConstClass(rbigint.sub), p140, p161, descr=<Callr 8 rr EF=4>)
+3075: guard_no_exception(descr=<Guard0x43ddc40>) [p170, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3090: i171 = getfield_gc_i(p170, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3094: i173 = int_gt(i171, 2)
+3098: guard_false(i173, descr=<Guard0x4411460>) [p170, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3104: i175 = call_i(ConstClass(rbigint._toint_helper), p170, descr=<Calli 8 r EF=4>)
+3119: guard_no_exception(descr=<Guard0x43ddca0>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66)))')
debug_merge_point(0, 0, '(list b2 AppRand62 AppRand63)')
debug_merge_point(0, 0, '(+ n5118 s)')
+3134: guard_class(p151, 16500368, descr=<Guard0x44114a8>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3153: p177 = getfield_gc_r(p151, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+3157: guard_nonnull_class(p177, ConstClass(W_Fixnum), descr=<Guard0x43ddd00>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3176: p179 = getfield_gc_r(p151, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+3180: guard_nonnull_class(p179, ConstClass(W_Fixnum), descr=<Guard0x43ddd60>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3199: i181 = getfield_gc_i(p177, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+3203: i182 = getfield_gc_i(p179, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+3207: i183 = int_add_ovf(i181, i182)
+3210: guard_no_overflow(descr=<Guard0x44114f0>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))')
debug_merge_point(0, 0, 'AppRand64')
+3216: p184 = getfield_gc_r(p151, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3220: guard_class(p184, 16505296, descr=<Guard0x4411538>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(pies AppRand65 m s)')
+3232: p186 = getfield_gc_r(p151, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+3236: guard_nonnull_class(p186, ConstClass(W_Fixnum), descr=<Guard0x43dddc0>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3262: i189 = instance_ptr_eq(p184, ConstPtr(ptr188))
+3265: guard_true(i189, descr=<Guard0x4411580>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if5 (< m n5118)]) (if if5 '() (let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))))))) from (pies AppRand65 m s)')
debug_merge_point(0, 0, '(< m n5118)')
+3271: i190 = getfield_gc_i(p186, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+3275: i191 = int_lt(i190, i183)
+3278: guard_false(i191, descr=<Guard0x44115c8>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if5 '() (let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))))))')
debug_merge_point(0, 0, '(let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66)))))')
debug_merge_point(0, 0, '(pi-brent-salamin n5118)')
debug_merge_point(0, 0, '(let ([one (expt 10 nb-digits)]) (let ([loop4976 (lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))][AppRand20 (square one)]) (let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1))))')
debug_merge_point(0, 0, '(expt 10 nb-digits)')
+3284: f192 = cast_int_to_float(i183)
+3289: i193 = float_ne(f192, f192)
+3300: guard_false(i193, descr=<Guard0x4411610>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3306: f195 = float_add(f192, 11235582092889474423308157442431404585112356118389416079589380072358292237843810195794279832650471001320007117491962084853674360550901038905802964414967132773610493339054092829768888725077880882465817684505312860552384417646403930092119569408801702322709406917786643639996702871154982269052209770601514008576.000000)
+3326: i196 = float_eq(f195, f192)
+3337: guard_false(i196, descr=<Guard0x4411658>) [p170, i175, i168, p140, p153, p152, p151, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3343: f199 = call_f(ConstClass(ccall_pow), 10.000000, f192, descr=<Callf 8 ff EF=2>)
+3392: i202 = call_i(ConstClass(_ll_1_threadlocalref_get__INTLlT_Signed), 48, descr=<Calli 4 i EF=2 OS=5>)
+3404: f203 = float_sub(f199, f199)
+3413: i205 = float_eq(f203, 0.000000)
+3434: guard_false(i205, descr=<Guard0x43dde20>) [i202, f203, f199, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3440: i206 = float_ne(f199, f199)
+3451: guard_false(i206, descr=<Guard0x44116a0>) [i202, f203, f199, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3457: f208 = call_f(ConstClass(fabs), f199, descr=<Callf 8 f EF=2>)
+3480: i210 = float_lt(f208, 1.000000)
+3501: guard_false(i210, descr=<Guard0x43dde80>) [f199, f208, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3507: p212 = call_r(ConstClass(fromint), i183, descr=<Callr 8 i EF=3>)
+3584: guard_no_exception(descr=<Guard0x43ddee0>) [p212, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3606: p215 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr214), p212, descr=<Callr 8 rr EF=4>)
+3665: guard_no_exception(descr=<Guard0x43ddf40>) [p215, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3680: i216 = getfield_gc_i(p215, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3684: i218 = int_gt(i216, 2)
+3688: guard_true(i218, descr=<Guard0x44116e8>) [p215, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([loop4976 (lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))][AppRand20 (square one)]) (let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1)))')
debug_merge_point(0, 0, '(lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))')
debug_merge_point(0, 0, '(square one)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+3694: p220 = call_r(ConstClass(rbigint.mul), p215, p215, descr=<Callr 8 rr EF=4>)
+3760: guard_no_exception(descr=<Guard0x43ddfa0>) [p220, p215, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3775: i221 = getfield_gc_i(p220, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3779: i223 = int_gt(i221, 2)
+3783: guard_true(i223, descr=<Guard0x4411730>) [p220, p215, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1))')
debug_merge_point(0, 0, '(square-root (quotient AppRand20 2))')
+3796: i226 = getarrayitem_gc_i(ConstPtr(ptr224), 0, descr=<ArrayS 8>)
+3800: p227 = new_array_clear(i221, descr=<ArrayS 8>)
+3901: p228 = new_with_vtable(descr=<SizeDescr 32>)
+3942: setfield_gc(p228, i221, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3946: setfield_gc(p228, p227, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+3957: i230 = call_i(ConstClass(_inplace_divrem1), p228, p220, i226, descr=<Calli 8 rri EF=5>)
+3982: setfield_gc(p228, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+3990: guard_no_exception(descr=<Guard0x443e020>) [p220, i230, p228, p215, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+4005: call_n(ConstClass(rbigint._normalize), p228, descr=<Callv 0 r EF=5>)
+4071: guard_no_exception(descr=<Guard0x443e080>) [p220, i230, p228, p215, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+4086: i233 = int_is_true(i230)
+4086: i234 = getfield_gc_i(p220, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+4097: i236 = int_ne(i234, 1)
+4101: guard_false(i236, descr=<Guard0x4411778>) [p220, i230, p228, p215, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+4114: i239 = call_i(ConstClass(rbigint.lt), p228, ConstPtr(ptr238), descr=<Calli 1 rr EF=0>)
+4137: guard_false(i239, descr=<Guard0x443e0e0>) [i239, p220, p228, p215, i175, i183, p179, p186, p184, i168, None, p153, None, None, p154, p156, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+4146: p240 = new_with_vtable(descr=<SizeDescr 32>)
+4190: p241 = new_with_vtable(descr=<SizeDescr 32>)
+4201: setfield_gc(p241, ConstPtr(ptr242), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4219: setfield_gc(p241, ConstPtr(ptr243), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+4223: p244 = new_with_vtable(descr=<SizeDescr 16>)
+4235: setfield_gc(p244, p228, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+4246: setfield_gc(p241, p244, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+4250: p245 = new_with_vtable(descr=<SizeDescr 48>)
+4261: p246 = new_with_vtable(descr=<SizeDescr 32>)
+4272: setfield_gc(p246, ConstPtr(ptr247), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4276: setfield_gc(p246, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+4284: setfield_gc(p246, p244, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+4288: p249 = new_with_vtable(descr=<SizeDescr 40>)
+4299: setfield_gc(p249, p156, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+4310: p250 = new_with_vtable(descr=<SizeDescr 32>)
+4321: p251 = new_with_vtable(descr=<SizeDescr 24>)
+4332: setfield_gc(p251, ConstPtr(ptr252), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4336: p253 = new_with_vtable(descr=<SizeDescr 16>)
+4354: setfield_gc(p253, p215, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+4372: setfield_gc(p251, p253, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+4376: setfield_gc(p250, p251, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4380: p254 = new_with_vtable(descr=<SizeDescr 32>)
+4391: setfield_gc(p254, ConstPtr(ptr255), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4402: setfield_gc(p254, ConstPtr(ptr256), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+4406: setfield_gc(p254, p253, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+4410: setfield_gc(p250, p254, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+4414: p257 = new_with_vtable(descr=<SizeDescr 16>)
+4425: setfield_gc(p257, p220, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+4429: setfield_gc(p250, p257, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+4433: setfield_gc(p249, p250, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+4437: p258 = new_with_vtable(descr=<SizeDescr 40>)
+4448: setfield_gc(p258, p156, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+4452: p259 = new_with_vtable(descr=<SizeDescr 40>)
+4463: setfield_gc(p259, p184, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4474: p260 = new_with_vtable(descr=<SizeDescr 16>)
+4485: setfield_gc(p260, i183, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+4489: setfield_gc(p259, p260, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+4493: setfield_gc(p259, p186, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+4504: setfield_gc(p259, p179, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+4515: setfield_gc(p258, p259, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+4519: p261 = new_with_vtable(descr=<SizeDescr 48>)
+4530: setfield_gc(p261, p156, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+4534: setfield_gc(p261, p184, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+4538: setfield_gc(p261, p154, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+4556: setfield_gc(p261, ConstPtr(ptr262), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+4560: p263 = new_with_vtable(descr=<SizeDescr 24>)
+4571: setfield_gc(p263, p153, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+4582: p264 = new_with_vtable(descr=<SizeDescr 24>)
+4593: setfield_gc(p264, i168, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+4597: p265 = new_with_vtable(descr=<SizeDescr 24>)
+4608: setfield_gc(p265, i175, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+4626: setfield_gc(p265, ConstPtr(ptr266), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+4630: setfield_gc(p264, p265, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+4634: setfield_gc(p263, p264, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+4638: setfield_gc(p261, p263, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+4642: setfield_gc(p258, p261, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+4653: setfield_gc(p258, ConstPtr(ptr267), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+4657: setfield_gc(p249, p258, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+4668: setfield_gc(p249, ConstPtr(ptr268), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+4672: p269 = new_with_vtable(descr=<SizeDescr 40>)
+4683: setfield_gc(p269, ConstPtr(ptr270), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4694: setfield_gc(p269, ConstPtr(ptr271), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+4698: setfield_gc(p269, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+4706: setfield_gc(p269, p244, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+4710: setfield_gc(p245, p156, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+4721: setfield_gc(p240, p241, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+4739: setfield_gc(p245, ConstPtr(ptr273), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+4743: setfield_gc(p245, p246, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+4747: setfield_gc(p245, p249, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+4751: setfield_gc(p240, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+4759: setfield_gc(p240, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+4767: setfield_gc(p245, p269, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+4771: jump(p240, p245, descr=TargetToken(69318064))
+4800: --end of the loop--
[3e4c069d6601313] jit-log-opt-bridge}
[3e4c069e5008957] {jit-backend
[3e4c069e50fd744] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bcda
[3e4c069e510a315] jit-backend-dump}
[3e4c069e51176f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bcec4 +0  2C000000
[3e4c069e5118cbc] jit-backend-dump}
[3e4c069e511ceb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd515 +0  2C000000
[3e4c069e511de49] jit-backend-dump}
[3e4c069e512149d] {jit-backend-addr
bridge out of Guard 0x43ba650 has address 0x7ff2522bcec0 to 0x7ff2522bd510
       gc table: 0x7ff2522bcda0
    jump target: 0x7ff2522bcec0
         resops: 0x7ff2522bcece
       failures: 0x7ff2522bd510
            end: 0x7ff2522bd8ed
[3e4c069e51238f9] jit-backend-addr}
[3e4c069e5127137] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bcedb +0  52070000
[3e4c069e5127fbc] jit-backend-dump}
[3e4c069e512ba7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bceef +0  76070000
[3e4c069e512c78b] jit-backend-dump}
[3e4c069e512fd4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bcf05 +0  7C070000
[3e4c069e5130a78] jit-backend-dump}
[3e4c069e5133dee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bcf1d +0  80070000
[3e4c069e5134b00] jit-backend-dump}
[3e4c069e5137f4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bcf2f +0  8A070000
[3e4c069e5138c5f] jit-backend-dump}
[3e4c069e513bfba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bcf46 +0  8F070000
[3e4c069e513ccc0] jit-backend-dump}
[3e4c069e51400c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bcf58 +0  99070000
[3e4c069e5140df4] jit-backend-dump}
[3e4c069e51440f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bcf62 +0  AB070000
[3e4c069e5144de4] jit-backend-dump}
[3e4c069e5148194] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd04e +0  DB060000
[3e4c069e5148ea4] jit-backend-dump}
[3e4c069e514c12e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd0ad +0  98060000
[3e4c069e514ce1f] jit-backend-dump}
[3e4c069e515013d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd0c3 +0  9E060000
[3e4c069e5150e4f] jit-backend-dump}
[3e4c069e51540e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd0cd +0  B0060000
[3e4c069e5154db2] jit-backend-dump}
[3e4c069e515813e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd0e8 +0  B1060000
[3e4c069e5158e10] jit-backend-dump}
[3e4c069e515c0d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd0fc +0  B9060000
[3e4c069e515cde7] jit-backend-dump}
[3e4c069e516012a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd113 +0  BE060000
[3e4c069e5160df9] jit-backend-dump}
[3e4c069e5164197] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd133 +0  BA060000
[3e4c069e5164e88] jit-backend-dump}
[3e4c069e516813a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd188 +0  81060000
[3e4c069e5168e1f] jit-backend-dump}
[3e4c069e516c173] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd196 +0  8F060000
[3e4c069e516ce64] jit-backend-dump}
[3e4c069e51700cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd25b +0  E6050000
[3e4c069e5170db2] jit-backend-dump}
[3e4c069e5174092] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd2b3 +0  AA050000
[3e4c069e5174d98] jit-backend-dump}
[3e4c069e517809a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd2c8 +0  B1050000
[3e4c069e5178d8b] jit-backend-dump}
[3e4c069e517c0a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd31a +0  7B050000
[3e4c069e517cda6] jit-backend-dump}
[3e4c069e518000c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd328 +0  89050000
[3e4c069e5180ced] jit-backend-dump}
[3e4c069e5184106] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bd34e +0  7F050000
[3e4c069e5184e03] jit-backend-dump}
[3e4c069e5188362] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b727f +0  3D5C0000
[3e4c069e51890b2] jit-backend-dump}
[3e4c069e518d248] jit-backend}
[3e4c069e5190f9d] {jit-log-opt-bridge
# bridge out of Guard 0x43ba650 with 145 ops
[i0, p1, p2, p3, p4, p5]
+310: guard_false(i0, descr=<Guard0x443e260>) [i0, p1, p2, p3, p4, p5]
+319: guard_not_invalidated(descr=<Guard0x4411d60>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, 'g')
+319: p6 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+330: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x4411da8>) [i0, p1, p2, p3, p4, p5]
+339: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+343: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(loop4976 one AppRand21 (quotient one 4) 1)')
+347: guard_class(p8, 16500016, descr=<Guard0x4411df0>) [i0, p1, p2, p3, p4, p5]
+361: p11 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+366: guard_nonnull_class(p11, 16477696, descr=<Guard0x443e2c0>) [i0, p1, p2, p3, p4, p5]
+385: p13 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+390: guard_class(p13, 16499664, descr=<Guard0x4411e38>) [i0, p1, p2, p3, p4, p5]
+403: p15 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+407: guard_nonnull_class(p15, ConstClass(W_Bignum), descr=<Guard0x443e320>) [i0, p1, p2, p3, p4, p5]
+426: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+430: i18 = getfield_gc_i(p17, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+434: i20 = int_lt(i18, 1)
+438: guard_false(i20, descr=<Guard0x4411e80>) [i0, p1, p2, p3, p4, p5]
+444: i22 = int_eq(i18, 1)
+448: guard_false(i22, descr=<Guard0x4411ec8>) [i0, p1, p2, p3, p4, p5]
+461: i25 = getarrayitem_gc_i(ConstPtr(ptr23), 0, descr=<ArrayS 8>)
+465: p26 = new_array_clear(i18, descr=<ArrayS 8>)
+583: p27 = new_with_vtable(descr=<SizeDescr 32>)
+624: setfield_gc(p27, i18, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+635: setfield_gc(p27, p26, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+639: i29 = call_i(ConstClass(_inplace_divrem1), p27, p17, i25, descr=<Calli 8 rri EF=5>)
+667: setfield_gc(p27, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+675: guard_no_exception(descr=<Guard0x443e380>) [p11, p9, p17, i29, p27, p8, p15, None, p2, None, None, None]
+690: call_n(ConstClass(rbigint._normalize), p27, descr=<Callv 0 r EF=5>)
+770: guard_no_exception(descr=<Guard0x443e3e0>) [p11, p9, p17, i29, p27, p8, p15, None, p2, None, None, None]
+785: i33 = int_is_true(i29)
+785: i34 = getfield_gc_i(p17, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+797: i36 = int_ne(i34, 1)
+801: guard_false(i36, descr=<Guard0x4411f10>) [p11, p9, p17, i29, p27, p8, p15, None, p2, None, None, None]
+807: i38 = int_gt(i18, 2)
+811: guard_true(i38, descr=<Guard0x4411f58>) [p11, p9, p17, i29, p27, p8, p15, None, p2, None, None, None]
+817: p39 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+835: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x4411fa0>) [p11, p9, p17, i29, p27, p8, p15, None, p2, None, None, None]
+844: p41 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 one AppRand21 (quotient one 4) 1)')
+844: guard_class(p9, 16435920, descr=<Guard0x44b0020>) [p11, p9, p17, i29, p27, p8, p15, None, p2, None, None, None]
+864: p43 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+868: guard_nonnull_class(p43, ConstClass(ForwardLink), descr=<Guard0x443e440>) [p11, p9, p17, i29, p27, p8, p15, None, p2, None, None, None]
debug_merge_point(0, 0, '(= a4978 b4980)')
+887: i46 = call_i(ConstClass(rbigint.eq), p17, p2, descr=<Calli 1 rr EF=0>)
+910: guard_false(i46, descr=<Guard0x443e4a0>) [i46, p27, p11, p9, p43, None, p15, None, p2, None, None, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+919: p48 = call_r(ConstClass(rbigint.add), p17, p2, descr=<Callr 8 rr EF=4>)
+989: guard_no_exception(descr=<Guard0x443e500>) [p48, p27, p11, p9, p43, None, p15, None, p2, None, None, None]
+1004: i49 = getfield_gc_i(p48, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1008: i51 = int_gt(i49, 2)
+1012: guard_true(i51, descr=<Guard0x44b0068>) [p48, p27, p11, p9, p43, None, p15, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+1025: i54 = getarrayitem_gc_i(ConstPtr(ptr52), 0, descr=<ArrayS 8>)
+1029: p55 = new_array_clear(i49, descr=<ArrayS 8>)
+1122: p56 = new_with_vtable(descr=<SizeDescr 32>)
+1163: setfield_gc(p56, i49, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1167: setfield_gc(p56, p55, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1171: i58 = call_i(ConstClass(_inplace_divrem1), p56, p48, i54, descr=<Calli 8 rri EF=5>)
+1192: setfield_gc(p56, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1200: guard_no_exception(descr=<Guard0x443e560>) [p48, i58, p56, p27, p11, p9, p43, None, p15, None, p2, None, None, None]
+1215: call_n(ConstClass(rbigint._normalize), p56, descr=<Callv 0 r EF=5>)
+1288: guard_no_exception(descr=<Guard0x443e5c0>) [p48, i58, p56, p27, p11, p9, p43, None, p15, None, p2, None, None, None]
+1303: i61 = int_is_true(i58)
+1303: i62 = getfield_gc_i(p48, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1314: i64 = int_ne(i62, 1)
+1318: guard_false(i64, descr=<Guard0x44b00b0>) [p48, i58, p56, p27, p11, p9, p43, None, p15, None, p2, None, None, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1324: p66 = call_r(ConstClass(rbigint.mul), p17, p2, descr=<Callr 8 rr EF=4>)
+1391: guard_no_exception(descr=<Guard0x443e620>) [p66, p56, p27, p11, p9, p43, None, p15, None, p2, None, None, None]
+1406: i67 = getfield_gc_i(p66, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1410: i69 = int_gt(i67, 2)
+1414: guard_true(i69, descr=<Guard0x44b00f8>) [p66, p56, p27, p11, p9, p43, None, p15, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
+1420: p70 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1427: i73 = call_i(ConstClass(rbigint.lt), p66, ConstPtr(ptr72), descr=<Calli 1 rr EF=0>)
+1449: guard_false(i73, descr=<Guard0x443e680>) [i73, p66, p56, p27, p11, p9, p43, None, p15, None, p2, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1458: p74 = new_with_vtable(descr=<SizeDescr 32>)
+1502: p75 = new_with_vtable(descr=<SizeDescr 32>)
+1520: setfield_gc(p75, ConstPtr(ptr76), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1531: setfield_gc(p75, ConstPtr(ptr77), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1535: p78 = new_with_vtable(descr=<SizeDescr 16>)
+1546: setfield_gc(p78, p66, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1550: setfield_gc(p75, p78, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1554: p79 = new_with_vtable(descr=<SizeDescr 48>)
+1566: p80 = new_with_vtable(descr=<SizeDescr 32>)
+1577: setfield_gc(p80, ConstPtr(ptr81), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1581: setfield_gc(p80, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1589: setfield_gc(p80, p78, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1593: p83 = new_with_vtable(descr=<SizeDescr 40>)
+1605: setfield_gc(p83, p43, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1617: p84 = new_with_vtable(descr=<SizeDescr 32>)
+1629: p85 = new_with_vtable(descr=<SizeDescr 48>)
+1640: setfield_gc(p85, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1651: setfield_gc(p85, p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1662: p86 = new_with_vtable(descr=<SizeDescr 16>)
+1673: setfield_gc(p86, p2, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1684: setfield_gc(p85, p86, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1688: p87 = new_with_vtable(descr=<SizeDescr 16>)
+1699: setfield_gc(p87, p27, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1710: setfield_gc(p85, p87, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1721: setfield_gc(p85, ConstPtr(ptr88), descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+1725: setfield_gc(p84, p85, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1729: p89 = new_with_vtable(descr=<SizeDescr 16>)
+1740: setfield_gc(p89, p56, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1751: setfield_gc(p84, p89, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1755: setfield_gc(p84, p78, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1759: setfield_gc(p83, p84, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1764: setfield_gc(p83, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1783: setfield_gc(p83, ConstPtr(ptr90), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1788: p91 = new_with_vtable(descr=<SizeDescr 40>)
+1799: setfield_gc(p91, ConstPtr(ptr92), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1810: setfield_gc(p91, ConstPtr(ptr93), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1814: setfield_gc(p91, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1822: setfield_gc(p91, p78, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1833: setfield_gc(p79, ConstPtr(ptr95), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1837: setfield_gc(p79, p80, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1841: setfield_gc(p79, p83, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1845: setfield_gc(p74, p75, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1849: setfield_gc(p79, p43, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1853: setfield_gc(p74, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1861: setfield_gc(p74, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1869: setfield_gc(p79, p91, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1873: jump(p74, p79, descr=TargetToken(69318064))
+1904: --end of the loop--
[3e4c069e520d6d3] jit-log-opt-bridge}
[3e4c06a042a18d8] {jit-backend
[3e4c06a043ad541] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdc
[3e4c06a043bc7f4] jit-backend-dump}
[3e4c06a043ca92e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bddd4 +0  2C000000
[3e4c06a043cbe6d] jit-backend-dump}
[3e4c06a043d0257] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be555 +0  2C000000
[3e4c06a043d10f1] jit-backend-dump}
[3e4c06a043d46aa] {jit-backend-addr
bridge out of Guard 0x439e0e0 has address 0x7ff2522bddd0 to 0x7ff2522be550
       gc table: 0x7ff2522bdc40
    jump target: 0x7ff2522bddd0
         resops: 0x7ff2522bddde
       failures: 0x7ff2522be550
            end: 0x7ff2522bea73
[3e4c06a043d6c81] jit-backend-addr}
[3e4c06a043da53c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bddeb +0  46080000
[3e4c06a043db413] jit-backend-dump}
[3e4c06a043de93c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bde0a +0  5F080000
[3e4c06a043df66a] jit-backend-dump}
[3e4c06a043e28ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bde83 +0  02080000
[3e4c06a043e35a5] jit-backend-dump}
[3e4c06a043e674b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bde91 +0  10080000
[3e4c06a043e73fb] jit-backend-dump}
[3e4c06a043ea5bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdee2 +0  DB070000
[3e4c06a043eb273] jit-backend-dump}
[3e4c06a043ee3d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdef0 +0  E9070000
[3e4c06a043ef0aa] jit-backend-dump}
[3e4c06a043f2234] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdf4c +0  A9070000
[3e4c06a043f2f03] jit-backend-dump}
[3e4c06a043f60e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdf5a +0  B7070000
[3e4c06a043f6d93] jit-backend-dump}
[3e4c06a043f9fda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdf67 +0  C6070000
[3e4c06a043facc2] jit-backend-dump}
[3e4c06a043fdf34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdf70 +0  D9070000
[3e4c06a043fec00] jit-backend-dump}
[3e4c06a04401dec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdf79 +0  EC070000
[3e4c06a04402ac1] jit-backend-dump}
[3e4c06a04405ca1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdfce +0  B3070000
[3e4c06a0440696a] jit-backend-dump}
[3e4c06a04409d3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdfe7 +0  B6070000
[3e4c06a0440a9e9] jit-backend-dump}
[3e4c06a0440dc09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdff1 +0  C8070000
[3e4c06a0440e8e1] jit-backend-dump}
[3e4c06a04411a8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bdfff +0  D6070000
[3e4c06a04412737] jit-backend-dump}
[3e4c06a04415887] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be01a +0  D7070000
[3e4c06a0441652b] jit-backend-dump}
[3e4c06a04419678] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be02f +0  DE070000
[3e4c06a0441a31f] jit-backend-dump}
[3e4c06a0441d4d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be046 +0  E3070000
[3e4c06a0441e17e] jit-backend-dump}
[3e4c06a04421311] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be053 +0  F2070000
[3e4c06a04421fc2] jit-backend-dump}
[3e4c06a044250ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be06a +0  F7070000
[3e4c06a04425d8e] jit-backend-dump}
[3e4c06a04428ead] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be07a +0  03080000
[3e4c06a04429b57] jit-backend-dump}
[3e4c06a0442cc7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be094 +0  05080000
[3e4c06a0442d942] jit-backend-dump}
[3e4c06a04430a7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be0b9 +0  FC070000
[3e4c06a0443172d] jit-backend-dump}
[3e4c06a0443485b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be10f +0  C2070000
[3e4c06a04435502] jit-backend-dump}
[3e4c06a04438621] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be118 +0  D5070000
[3e4c06a044392d8] jit-backend-dump}
[3e4c06a0443c46e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be129 +0  E0070000
[3e4c06a0443d118] jit-backend-dump}
[3e4c06a0444026e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be13e +0  E7070000
[3e4c06a04440f12] jit-backend-dump}
[3e4c06a0444402e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be150 +0  EB070000
[3e4c06a04444ccf] jit-backend-dump}
[3e4c06a04447f54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be1b3 +0  A4070000
[3e4c06a04448c1a] jit-backend-dump}
[3e4c06a0444bda4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be204 +0  6F070000
[3e4c06a0444ca4b] jit-backend-dump}
[3e4c06a0444fb67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be212 +0  7D070000
[3e4c06a0445083f] jit-backend-dump}
[3e4c06a0445397c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be263 +0  48070000
[3e4c06a04454627] jit-backend-dump}
[3e4c06a04457767] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be271 +0  56070000
[3e4c06a0445841b] jit-backend-dump}
[3e4c06a0445b55b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be2c2 +0  21070000
[3e4c06a0445c202] jit-backend-dump}
[3e4c06a0445f340] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be2d0 +0  2F070000
[3e4c06a0445ffe7] jit-backend-dump}
[3e4c06a04463134] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be32c +0  EF060000
[3e4c06a04463ddb] jit-backend-dump}
[3e4c06a04466f12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be33a +0  FD060000
[3e4c06a04467bc0] jit-backend-dump}
[3e4c06a0446ad4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be360 +0  F3060000
[3e4c06a0446ba16] jit-backend-dump}
[3e4c06a0446edc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b33aa +0  22AA0000
[3e4c06a0446fb62] jit-backend-dump}
[3e4c06a04473b95] jit-backend}
[3e4c06a044778f6] {jit-log-opt-bridge
# bridge out of Guard 0x439e0e0 with 187 ops
[i0, i1, p2, p3, p4, p5, p6, p7]
+422: guard_true(i0, descr=<Guard0x443e980>) [i0, i1, p2, p7, p4, p3, p5, p6]
+431: guard_not_invalidated(descr=<Guard0x44b0380>) [i0, i1, p2, p7, p4, p3, p5, p6]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11)))')
+431: p8 = getfield_gc_r(p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+442: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x443e9e0>) [i0, i1, p2, p7, p4, p3, p5, p6]
debug_merge_point(0, 0, 't')
+462: p10 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ a4978 b4980)')
+473: p11 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+484: p13 = call_r(ConstClass(rbigint.add), p11, p7, descr=<Callr 8 rr EF=4>)
+568: guard_no_exception(descr=<Guard0x443ea40>) [p13, p10, p8, i1, p2, p7, p4, p3, p5, None]
+583: i15 = getfield_gc_i(p13, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+587: i17 = int_gt(i15, 2)
+591: guard_true(i17, descr=<Guard0x44b03c8>) [p13, p10, p8, i1, p2, p7, p4, p3, p5, None]
debug_merge_point(0, 0, '(let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))')
debug_merge_point(0, 0, '(square AppRand9)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+597: p19 = call_r(ConstClass(rbigint.mul), p13, p13, descr=<Callr 8 rr EF=4>)
+663: guard_no_exception(descr=<Guard0x443eaa0>) [p19, p13, p10, p8, None, p2, None, None, None, p5, None]
+678: i20 = getfield_gc_i(p19, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+682: i22 = int_gt(i20, 2)
+686: guard_true(i22, descr=<Guard0x44b0410>) [p19, p13, p10, p8, None, p2, None, None, None, p5, None]
debug_merge_point(0, 0, '(* 4 t) from (* x4969 x4969)')
+699: p25 = call_r(ConstClass(rbigint.mul), ConstPtr(ptr24), p2, descr=<Callr 8 rr EF=4>)
+769: guard_no_exception(descr=<Guard0x443eb00>) [p25, p19, p13, p10, p8, None, p2, None, None, None, p5, None]
+784: i26 = getfield_gc_i(p25, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+788: i28 = int_gt(i26, 2)
+792: guard_true(i28, descr=<Guard0x44b0458>) [p25, p19, p13, p10, p8, None, p2, None, None, None, p5, None]
debug_merge_point(0, 0, '(quotient AppRand10 AppRand11)')
+798: i29 = getfield_gc_i(p25, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+802: i30 = int_is_zero(i29)
+805: guard_false(i30, descr=<Guard0x44b04a0>) [p25, p19, p13, p10, p8, None, p2, None, None, None, p5, None]
+811: i31 = int_lt(i20, i26)
+814: guard_false(i31, descr=<Guard0x44b04e8>) [p25, p19, p13, p10, p8, None, p2, None, None, None, p5, None]
+820: i32 = int_eq(i20, i26)
+823: guard_false(i32, descr=<Guard0x44b0530>) [p25, p19, p13, p10, p8, None, p2, None, None, None, p5, None]
+829: p34 = call_r(ConstClass(_x_divrem), p19, p25, descr=<Callr 8 rr EF=5>)
+899: guard_no_exception(descr=<Guard0x443eb60>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+914: p35 = getfield_gc_r(p34, descr=<FieldP tuple2.item0 8 pure>)
+918: p36 = getfield_gc_r(p34, descr=<FieldP tuple2.item1 16 pure>)
+918: i37 = getfield_gc_i(p19, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+930: i38 = int_ne(i37, i29)
+933: guard_false(i38, descr=<Guard0x44b0578>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+939: i40 = int_lt(i37, 0)
+943: guard_false(i40, descr=<Guard0x44b05c0>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+949: i41 = getfield_gc_i(p35, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+953: i43 = int_gt(i41, 2)
+957: guard_true(i43, descr=<Guard0x44b0608>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+963: p44 = getfield_gc_r(p5, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+981: guard_value(p44, ConstPtr(ptr45), descr=<Guard0x44b0650>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+990: p46 = getfield_gc_r(p5, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+994: p47 = getfield_gc_r(p5, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+998: guard_class(p47, 16437352, descr=<Guard0x44b0698>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+1011: p49 = getfield_gc_r(p47, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1015: guard_nonnull_class(p49, ConstClass(ForwardLink), descr=<Guard0x443ebc0>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(pi-borwein2 n5118) from (quotient AppRand10 AppRand11)')
+1034: guard_class(p46, 16500368, descr=<Guard0x44b06e0>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+1047: p52 = getfield_gc_r(p46, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+1051: guard_nonnull_class(p52, ConstClass(W_Fixnum), descr=<Guard0x443ec20>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+1070: p54 = getfield_gc_r(p46, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1074: guard_class(p54, 16505296, descr=<Guard0x44b0728>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+1086: i56 = getfield_gc_i(p52, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([one5009 (expt 10 nb-digits5007)]) (let ([one^2 (square one5009)]) (let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))))))))')
debug_merge_point(0, 0, '(expt 10 nb-digits5007)')
+1090: f57 = cast_int_to_float(i56)
+1095: i58 = float_ne(f57, f57)
+1106: guard_false(i58, descr=<Guard0x44b0770>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+1112: f60 = float_add(f57, 11235582092889474423308157442431404585112356118389416079589380072358292237843810195794279832650471001320007117491962084853674360550901038905802964414967132773610493339054092829768888725077880882465817684505312860552384417646403930092119569408801702322709406917786643639996702871154982269052209770601514008576.000000)
+1132: i61 = float_eq(f60, f57)
+1143: guard_false(i61, descr=<Guard0x44b07b8>) [p5, p34, p25, p19, None, None, p10, None, None, None, None, None, None, None, None]
+1149: f64 = call_f(ConstClass(ccall_pow), 10.000000, f57, descr=<Callf 8 ff EF=2>)
+1187: i67 = call_i(ConstClass(_ll_1_threadlocalref_get__INTLlT_Signed), 48, descr=<Calli 4 i EF=2 OS=5>)
+1199: f68 = float_sub(f64, f64)
+1208: i70 = float_eq(f68, 0.000000)
+1229: guard_true(i70, descr=<Guard0x443ec80>) [i67, f68, f64, i56, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1235: i71 = int_is_true(i67)
+1238: guard_false(i71, descr=<Guard0x44b0800>) [i67, f68, f64, i56, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1244: i72 = float_ne(f64, f64)
+1255: guard_false(i72, descr=<Guard0x44b0848>) [i67, f68, f64, i56, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1261: i74 = float_ge(f64, -9223372036854775808.000000)
+1276: guard_true(i74, descr=<Guard0x44b0890>) [i67, f68, f64, i56, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1282: i76 = float_lt(f64, 9223372036854775808.000000)
+1294: guard_false(i76, descr=<Guard0x44b08d8>) [i67, f68, f64, i56, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1300: p78 = call_r(ConstClass(fromint), i56, descr=<Callr 8 i EF=3>)
+1384: guard_no_exception(descr=<Guard0x443ece0>) [p78, i56, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1406: p81 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr80), p78, descr=<Callr 8 rr EF=4>)
+1465: guard_no_exception(descr=<Guard0x443ed40>) [p81, i56, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1480: i82 = getfield_gc_i(p81, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1484: i84 = int_gt(i82, 2)
+1488: guard_true(i84, descr=<Guard0x44b0920>) [p81, i56, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([one^2 (square one5009)]) (let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))))')
debug_merge_point(0, 0, '(square one5009)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1494: p86 = call_r(ConstClass(rbigint.mul), p81, p81, descr=<Callr 8 rr EF=4>)
+1560: guard_no_exception(descr=<Guard0x443eda0>) [p86, p81, None, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1575: i87 = getfield_gc_i(p86, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1579: i89 = int_gt(i87, 2)
+1583: guard_true(i89, descr=<Guard0x44b0968>) [p86, p81, None, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))))))')
debug_merge_point(0, 0, '(square one^2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1589: p91 = call_r(ConstClass(rbigint.mul), p86, p86, descr=<Callr 8 rr EF=4>)
+1655: guard_no_exception(descr=<Guard0x443ee00>) [p91, p86, p81, None, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1670: i92 = getfield_gc_i(p91, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1674: i94 = int_gt(i92, 2)
+1678: guard_true(i94, descr=<Guard0x44b09b0>) [p91, p86, p81, None, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(* one^2 2)')
+1691: p97 = call_r(ConstClass(rbigint.mul), p86, ConstPtr(ptr96), descr=<Callr 8 rr EF=4>)
+1761: guard_no_exception(descr=<Guard0x443ee60>) [p97, p91, p86, p81, None, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
+1776: i98 = getfield_gc_i(p97, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1780: i100 = int_gt(i98, 2)
+1784: guard_true(i100, descr=<Guard0x44b09f8>) [p97, p91, p86, p81, None, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))')
debug_merge_point(0, 0, '(square-root AppRand22)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1797: i103 = call_i(ConstClass(rbigint.lt), p97, ConstPtr(ptr102), descr=<Calli 1 rr EF=0>)
+1819: guard_false(i103, descr=<Guard0x443eec0>) [i103, p97, p91, p86, p81, None, p35, p47, p46, p49, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1828: p104 = new_with_vtable(descr=<SizeDescr 32>)
+1872: p105 = new_with_vtable(descr=<SizeDescr 32>)
+1890: setfield_gc(p105, ConstPtr(ptr106), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1901: setfield_gc(p105, ConstPtr(ptr107), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1905: p108 = new_with_vtable(descr=<SizeDescr 16>)
+1917: setfield_gc(p108, p97, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1922: setfield_gc(p105, p108, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1926: p109 = new_with_vtable(descr=<SizeDescr 48>)
+1938: p110 = new_with_vtable(descr=<SizeDescr 32>)
+1950: setfield_gc(p110, ConstPtr(ptr111), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1954: setfield_gc(p110, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1962: setfield_gc(p110, p108, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1966: p113 = new_with_vtable(descr=<SizeDescr 40>)
+1977: setfield_gc(p113, p49, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1988: p114 = new_with_vtable(descr=<SizeDescr 32>)
+1999: p115 = new_with_vtable(descr=<SizeDescr 24>)
+2010: p116 = new_with_vtable(descr=<SizeDescr 24>)
+2021: setfield_gc(p116, ConstPtr(ptr117), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2025: p118 = new_with_vtable(descr=<SizeDescr 16>)
+2036: setfield_gc(p118, p81, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2047: setfield_gc(p116, p118, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2051: setfield_gc(p115, p116, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2055: p119 = new_with_vtable(descr=<SizeDescr 16>)
+2066: setfield_gc(p119, p86, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2077: setfield_gc(p115, p119, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2081: setfield_gc(p114, p115, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2085: p120 = new_with_vtable(descr=<SizeDescr 16>)
+2096: setfield_gc(p120, p91, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2107: setfield_gc(p114, p120, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+2111: setfield_gc(p114, p108, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+2115: setfield_gc(p113, p114, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2119: p121 = new_with_vtable(descr=<SizeDescr 48>)
+2130: setfield_gc(p121, p49, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2134: setfield_gc(p121, p46, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2145: setfield_gc(p121, p47, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2163: setfield_gc(p121, ConstPtr(ptr122), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2167: p123 = new_with_vtable(descr=<SizeDescr 16>)
+2178: setfield_gc(p123, p35, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2189: setfield_gc(p121, p123, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2193: setfield_gc(p113, p121, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2204: setfield_gc(p113, ConstPtr(ptr124), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2208: p125 = new_with_vtable(descr=<SizeDescr 40>)
+2219: setfield_gc(p125, ConstPtr(ptr126), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2230: setfield_gc(p125, ConstPtr(ptr127), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2234: setfield_gc(p125, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2242: setfield_gc(p125, p108, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2246: setfield_gc(p109, p49, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2250: setfield_gc(p104, p105, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2261: setfield_gc(p109, ConstPtr(ptr129), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2265: setfield_gc(p109, p110, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2269: setfield_gc(p109, p113, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2273: setfield_gc(p104, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2281: setfield_gc(p104, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2289: setfield_gc(p109, p125, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2293: jump(p104, p109, descr=TargetToken(69318064))
+2320: --end of the loop--
[3e4c06a0452d561] jit-log-opt-bridge}
[3e4c06a0deb40ae] {jit-backend
[3e4c06a0dfec2f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522beea
[3e4c06a0dffe5ab] jit-backend-dump}
[3e4c06a0e00bd23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf0a4 +0  2C000000
[3e4c06a0e00d445] jit-backend-dump}
[3e4c06a0e011762] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf9b5 +0  2C000000
[3e4c06a0e01263f] jit-backend-dump}
[3e4c06a0e015cf3] {jit-backend-addr
bridge out of Guard 0x43ba0f8 has address 0x7ff2522bf0a0 to 0x7ff2522bf9b0
       gc table: 0x7ff2522beea0
    jump target: 0x7ff2522bf0a0
         resops: 0x7ff2522bf0ae
       failures: 0x7ff2522bf9b0
            end: 0x7ff2522c003b
[3e4c06a0e01814f] jit-backend-addr}
[3e4c06a0e01b814] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf0c0 +0  E3090000
[3e4c06a0e01c6a8] jit-backend-dump}
[3e4c06a0e01fcf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf0df +0  FC090000
[3e4c06a0e0209f3] jit-backend-dump}
[3e4c06a0e023e43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf0f8 +0  FF090000
[3e4c06a0e024b21] jit-backend-dump}
[3e4c06a0e027de9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf10f +0  040A0000
[3e4c06a0e028b0b] jit-backend-dump}
[3e4c06a0e02be1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf120 +0  0F0A0000
[3e4c06a0e02cad0] jit-backend-dump}
[3e4c06a0e02fd7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf134 +0  170A0000
[3e4c06a0e030a05] jit-backend-dump}
[3e4c06a0e033c3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf14a +0  1D0A0000
[3e4c06a0e0348d5] jit-backend-dump}
[3e4c06a0e037b6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf15f +0  240A0000
[3e4c06a0e038801] jit-backend-dump}
[3e4c06a0e03bac0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf168 +0  370A0000
[3e4c06a0e03c767] jit-backend-dump}
[3e4c06a0e03f9a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf1dd +0  DE090000
[3e4c06a0e040625] jit-backend-dump}
[3e4c06a0e043888] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf1eb +0  EC090000
[3e4c06a0e044523] jit-backend-dump}
[3e4c06a0e047740] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf20a +0  E9090000
[3e4c06a0e0483ea] jit-backend-dump}
[3e4c06a0e04b6ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf217 +0  F8090000
[3e4c06a0e04c335] jit-backend-dump}
[3e4c06a0e04f55b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf221 +0  0A0A0000
[3e4c06a0e0501da] jit-backend-dump}
[3e4c06a0e0533bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf240 +0  070A0000
[3e4c06a0e05405b] jit-backend-dump}
[3e4c06a0e0572bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf268 +0  FB090000
[3e4c06a0e057f3b] jit-backend-dump}
[3e4c06a0e05b117] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf2d6 +0  A9090000
[3e4c06a0e05bdac] jit-backend-dump}
[3e4c06a0e05ef98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf2e4 +0  B7090000
[3e4c06a0e05fc11] jit-backend-dump}
[3e4c06a0e062dcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf335 +0  82090000
[3e4c06a0e063a4f] jit-backend-dump}
[3e4c06a0e066c31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf343 +0  90090000
[3e4c06a0e0678b1] jit-backend-dump}
[3e4c06a0e06aabb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf39f +0  50090000
[3e4c06a0e06b74a] jit-backend-dump}
[3e4c06a0e06e93f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf3ad +0  5E090000
[3e4c06a0e06f5da] jit-backend-dump}
[3e4c06a0e0727e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf3ba +0  6D090000
[3e4c06a0e07347c] jit-backend-dump}
[3e4c06a0e0766be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf3c3 +0  80090000
[3e4c06a0e077331] jit-backend-dump}
[3e4c06a0e07a538] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf3cc +0  93090000
[3e4c06a0e07b1ec] jit-backend-dump}
[3e4c06a0e07e458] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf421 +0  5A090000
[3e4c06a0e07f0db] jit-backend-dump}
[3e4c06a0e0822f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf439 +0  5E090000
[3e4c06a0e082f7a] jit-backend-dump}
[3e4c06a0e0861e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf443 +0  70090000
[3e4c06a0e086e6f] jit-backend-dump}
[3e4c06a0e08a08f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf451 +0  7E090000
[3e4c06a0e08ad1a] jit-backend-dump}
[3e4c06a0e08df34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf46c +0  7F090000
[3e4c06a0e08ebb7] jit-backend-dump}
[3e4c06a0e091da2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf482 +0  85090000
[3e4c06a0e092a25] jit-backend-dump}
[3e4c06a0e095c2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf49a +0  89090000
[3e4c06a0e0968af] jit-backend-dump}
[3e4c06a0e099ab9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf4a7 +0  98090000
[3e4c06a0e09a742] jit-backend-dump}
[3e4c06a0e09d983] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf4be +0  9D090000
[3e4c06a0e09e615] jit-backend-dump}
[3e4c06a0e0a1813] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf4ce +0  A9090000
[3e4c06a0e0a24ae] jit-backend-dump}
[3e4c06a0e0a5688] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf4e8 +0  AB090000
[3e4c06a0e0a6307] jit-backend-dump}
[3e4c06a0e0a9518] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf50d +0  A2090000
[3e4c06a0e0aa1aa] jit-backend-dump}
[3e4c06a0e0ad3e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf563 +0  68090000
[3e4c06a0e0ae071] jit-backend-dump}
[3e4c06a0e0b1294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf574 +0  73090000
[3e4c06a0e0b1f16] jit-backend-dump}
[3e4c06a0e0b50f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf5a6 +0  5D090000
[3e4c06a0e0b5da0] jit-backend-dump}
[3e4c06a0e0b8ff1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf609 +0  16090000
[3e4c06a0e0b9c8f] jit-backend-dump}
[3e4c06a0e0bcefb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf65a +0  E1080000
[3e4c06a0e0bdbe3] jit-backend-dump}
[3e4c06a0e0c0dea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf668 +0  EF080000
[3e4c06a0e0c1a8e] jit-backend-dump}
[3e4c06a0e0c4cae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf6b9 +0  BA080000
[3e4c06a0e0c5952] jit-backend-dump}
[3e4c06a0e0c8bfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf6c7 +0  C8080000
[3e4c06a0e0c9881] jit-backend-dump}
[3e4c06a0e0ccab3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf718 +0  93080000
[3e4c06a0e0cd73f] jit-backend-dump}
[3e4c06a0e0d093a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf726 +0  A1080000
[3e4c06a0e0d15ba] jit-backend-dump}
[3e4c06a0e0d4799] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf782 +0  61080000
[3e4c06a0e0d5419] jit-backend-dump}
[3e4c06a0e0d862f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf790 +0  6F080000
[3e4c06a0e0d92b2] jit-backend-dump}
[3e4c06a0e0dc4f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf7b6 +0  65080000
[3e4c06a0e0dd173] jit-backend-dump}
[3e4c06a0e0e05f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5ea8 +0  F4910000
[3e4c06a0e0e12ea] jit-backend-dump}
[3e4c06a0e0e555f] jit-backend}
[3e4c06a0e0e9335] {jit-log-opt-bridge
# bridge out of Guard 0x43ba0f8 with 226 ops
[p0, p1, p2, p3, p4, p5, p6, p7]
+534: i8 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+538: i10 = int_gt(i8, 2)
+542: guard_true(i10, descr=<Guard0x443efe0>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+548: guard_not_invalidated(descr=<Guard0x44b0c80>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
debug_merge_point(0, 0, '(let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))')
+548: p11 = getfield_gc_r(p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+559: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x443f040>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
debug_merge_point(0, 0, '(- t (quotient AppRand17 one))')
+579: p13 = getfield_gc_r(p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+591: guard_class(p13, 16500720, descr=<Guard0x44b0cc8>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+604: p15 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+608: guard_nonnull_class(p15, ConstClass(W_Bignum), descr=<Guard0x443f0a0>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+627: p17 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+631: guard_class(p17, 16477696, descr=<Guard0x44b0d10>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+644: p19 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+655: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x44b0d58>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+664: p21 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+668: guard_nonnull_class(p21, ConstClass(W_Bignum), descr=<Guard0x443f100>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+686: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+690: i24 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+694: i25 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+698: i26 = int_is_zero(i25)
+701: guard_false(i26, descr=<Guard0x44b0da0>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+707: i27 = int_lt(i8, i24)
+710: guard_true(i27, descr=<Guard0x44b0de8>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+716: p28 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+727: p31 = call_r(ConstClass(rbigint.sub), p28, ConstPtr(ptr30), descr=<Callr 8 rr EF=4>)
+818: guard_no_exception(descr=<Guard0x443f160>) [p31, p15, p0, p11, None, None, p3, p6, p4, p7, None]
+833: i33 = getfield_gc_i(p31, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+837: i35 = int_gt(i33, 2)
+841: guard_true(i35, descr=<Guard0x44b0e30>) [p31, p15, p0, p11, None, None, p3, p6, p4, p7, None]
debug_merge_point(0, 0, '(* 2 x4983)')
+847: p36 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+858: guard_nonnull_class(p36, ConstClass(W_Fixnum), descr=<Guard0x443f1c0>) [p31, p15, p0, p11, None, None, p3, p6, p4, p7, None]
+878: i38 = getfield_gc_i(p36, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+882: i39 = int_is_true(i38)
+885: guard_true(i39, descr=<Guard0x44b0e78>) [p31, p15, p0, p11, None, None, p3, p6, p4, p7, None]
+891: i41 = int_mul_ovf(2, i38)
+895: guard_no_overflow(descr=<Guard0x44b0ec0>) [p31, p15, p0, p11, None, None, p3, p6, p4, p7, None]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
+901: p42 = getfield_gc_r(p4, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+912: guard_nonnull_class(p42, ConstClass(W_Bignum), descr=<Guard0x443f220>) [p31, p15, p0, p11, None, None, p3, p6, p4, p7, None]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+932: p44 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+937: i46 = call_i(ConstClass(rbigint.eq), p44, p6, descr=<Calli 1 rr EF=0>)
+963: guard_true(i46, descr=<Guard0x443f280>) [i46, i41, p31, p42, p17, None, None, p11, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11)))')
debug_merge_point(0, 0, 't')
+972: p47 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ a4978 b4980)')
+983: p49 = call_r(ConstClass(rbigint.add), p44, p6, descr=<Callr 8 rr EF=4>)
+1067: guard_no_exception(descr=<Guard0x443f2e0>) [p49, p47, i41, p31, p42, p17, None, None, p11, None, None, None, p6, None, p7, None]
+1082: i50 = getfield_gc_i(p49, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1086: i52 = int_gt(i50, 2)
+1090: guard_true(i52, descr=<Guard0x44b0f08>) [p49, p47, i41, p31, p42, p17, None, None, p11, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))')
debug_merge_point(0, 0, '(square AppRand9)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1096: p54 = call_r(ConstClass(rbigint.mul), p49, p49, descr=<Callr 8 rr EF=4>)
+1162: guard_no_exception(descr=<Guard0x443f340>) [p54, p49, p47, None, p31, None, None, None, None, p11, None, None, None, None, None, p7, None]
+1177: i55 = getfield_gc_i(p54, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1181: i57 = int_gt(i55, 2)
+1185: guard_true(i57, descr=<Guard0x44b0f50>) [p54, p49, p47, None, p31, None, None, None, None, p11, None, None, None, None, None, p7, None]
debug_merge_point(0, 0, '(* 4 t) from (* x4969 x4969)')
+1198: p60 = call_r(ConstClass(rbigint.mul), ConstPtr(ptr59), p31, descr=<Callr 8 rr EF=4>)
+1268: guard_no_exception(descr=<Guard0x443f3a0>) [p60, p54, p49, p47, None, p31, None, None, None, None, p11, None, None, None, None, None, p7, None]
+1283: i61 = getfield_gc_i(p60, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1287: i63 = int_gt(i61, 2)
+1291: guard_true(i63, descr=<Guard0x44b0f98>) [p60, p54, p49, p47, None, p31, None, None, None, None, p11, None, None, None, None, None, p7, None]
debug_merge_point(0, 0, '(quotient AppRand10 AppRand11)')
+1297: i64 = getfield_gc_i(p60, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1301: i65 = int_is_zero(i64)
+1304: guard_false(i65, descr=<Guard0x44b0fe0>) [p60, p54, p49, p47, None, p31, None, None, None, None, p11, None, None, None, None, None, p7, None]
+1310: i66 = int_lt(i55, i61)
+1313: guard_false(i66, descr=<Guard0x44b1028>) [p60, p54, p49, p47, None, p31, None, None, None, None, p11, None, None, None, None, None, p7, None]
+1319: i67 = int_eq(i55, i61)
+1322: guard_false(i67, descr=<Guard0x44b1070>) [p60, p54, p49, p47, None, p31, None, None, None, None, p11, None, None, None, None, None, p7, None]
+1328: p69 = call_r(ConstClass(_x_divrem), p54, p60, descr=<Callr 8 rr EF=5>)
+1398: guard_no_exception(descr=<Guard0x443f400>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1413: p70 = getfield_gc_r(p69, descr=<FieldP tuple2.item0 8 pure>)
+1417: p71 = getfield_gc_r(p69, descr=<FieldP tuple2.item1 16 pure>)
+1417: i72 = getfield_gc_i(p54, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1428: i73 = int_ne(i72, i64)
+1431: guard_false(i73, descr=<Guard0x44b10b8>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1437: i75 = int_lt(i72, 0)
+1441: guard_false(i75, descr=<Guard0x44b1100>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1447: i76 = getfield_gc_i(p70, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1451: i78 = int_gt(i76, 2)
+1455: guard_true(i78, descr=<Guard0x44b1148>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1461: p79 = getfield_gc_r(p7, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1479: guard_value(p79, ConstPtr(ptr80), descr=<Guard0x44b1190>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1488: p81 = getfield_gc_r(p7, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1492: p82 = getfield_gc_r(p7, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1496: guard_class(p82, 16437352, descr=<Guard0x44b11d8>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1510: p84 = getfield_gc_r(p82, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1515: guard_nonnull_class(p84, ConstClass(ForwardLink), descr=<Guard0x443f460>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(pi-borwein2 n5118) from (quotient AppRand10 AppRand11)')
+1534: guard_class(p81, 16500368, descr=<Guard0x44b1220>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1547: p87 = getfield_gc_r(p81, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+1551: guard_nonnull_class(p87, ConstClass(W_Fixnum), descr=<Guard0x443f4c0>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1570: p89 = getfield_gc_r(p81, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1574: guard_class(p89, 16505296, descr=<Guard0x44b1268>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1586: i91 = getfield_gc_i(p87, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([one5009 (expt 10 nb-digits5007)]) (let ([one^2 (square one5009)]) (let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))))))))')
debug_merge_point(0, 0, '(expt 10 nb-digits5007)')
+1590: f92 = cast_int_to_float(i91)
+1595: i93 = float_ne(f92, f92)
+1606: guard_false(i93, descr=<Guard0x44b12b0>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1612: f95 = float_add(f92, 11235582092889474423308157442431404585112356118389416079589380072358292237843810195794279832650471001320007117491962084853674360550901038905802964414967132773610493339054092829768888725077880882465817684505312860552384417646403930092119569408801702322709406917786643639996702871154982269052209770601514008576.000000)
+1632: i96 = float_eq(f95, f92)
+1643: guard_false(i96, descr=<Guard0x44b12f8>) [p7, p69, p60, p54, None, None, p47, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1649: f99 = call_f(ConstClass(ccall_pow), 10.000000, f92, descr=<Callf 8 ff EF=2>)
+1687: i102 = call_i(ConstClass(_ll_1_threadlocalref_get__INTLlT_Signed), 48, descr=<Calli 4 i EF=2 OS=5>)
+1699: f103 = float_sub(f99, f99)
+1708: i105 = float_eq(f103, 0.000000)
+1729: guard_false(i105, descr=<Guard0x443f520>) [i102, f103, f99, i91, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1735: i106 = float_ne(f99, f99)
+1746: guard_false(i106, descr=<Guard0x44b1340>) [i102, f103, f99, i91, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1752: f108 = call_f(ConstClass(fabs), f99, descr=<Callf 8 f EF=2>)
+1775: i110 = float_lt(f108, 1.000000)
+1796: guard_false(i110, descr=<Guard0x443f580>) [f99, f108, i91, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1802: p112 = call_r(ConstClass(fromint), i91, descr=<Callr 8 i EF=3>)
+1886: guard_no_exception(descr=<Guard0x443f5e0>) [p112, i91, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1908: p115 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr114), p112, descr=<Callr 8 rr EF=4>)
+1967: guard_no_exception(descr=<Guard0x443f640>) [p115, i91, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1982: i116 = getfield_gc_i(p115, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1986: i118 = int_gt(i116, 2)
+1990: guard_true(i118, descr=<Guard0x44b1388>) [p115, i91, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([one^2 (square one5009)]) (let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))))')
debug_merge_point(0, 0, '(square one5009)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1996: p120 = call_r(ConstClass(rbigint.mul), p115, p115, descr=<Callr 8 rr EF=4>)
+2062: guard_no_exception(descr=<Guard0x443f6a0>) [p120, p115, None, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2077: i121 = getfield_gc_i(p120, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2081: i123 = int_gt(i121, 2)
+2085: guard_true(i123, descr=<Guard0x44b13d0>) [p120, p115, None, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))))))')
debug_merge_point(0, 0, '(square one^2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+2091: p125 = call_r(ConstClass(rbigint.mul), p120, p120, descr=<Callr 8 rr EF=4>)
+2157: guard_no_exception(descr=<Guard0x443f700>) [p125, p120, p115, None, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2172: i126 = getfield_gc_i(p125, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2176: i128 = int_gt(i126, 2)
+2180: guard_true(i128, descr=<Guard0x44b1418>) [p125, p120, p115, None, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(* one^2 2)')
+2193: p131 = call_r(ConstClass(rbigint.mul), p120, ConstPtr(ptr130), descr=<Callr 8 rr EF=4>)
+2263: guard_no_exception(descr=<Guard0x443f760>) [p131, p125, p120, p115, None, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2278: i132 = getfield_gc_i(p131, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2282: i134 = int_gt(i132, 2)
+2286: guard_true(i134, descr=<Guard0x44b1460>) [p131, p125, p120, p115, None, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))')
debug_merge_point(0, 0, '(square-root AppRand22)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+2299: i137 = call_i(ConstClass(rbigint.lt), p131, ConstPtr(ptr136), descr=<Calli 1 rr EF=0>)
+2321: guard_false(i137, descr=<Guard0x443f7c0>) [i137, p131, p125, p120, p115, None, p70, p82, p81, p84, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+2330: p138 = new_with_vtable(descr=<SizeDescr 32>)
+2374: p139 = new_with_vtable(descr=<SizeDescr 32>)
+2392: setfield_gc(p139, ConstPtr(ptr140), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2403: setfield_gc(p139, ConstPtr(ptr141), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2407: p142 = new_with_vtable(descr=<SizeDescr 16>)
+2418: setfield_gc(p142, p131, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2422: setfield_gc(p139, p142, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+2426: p143 = new_with_vtable(descr=<SizeDescr 48>)
+2437: p144 = new_with_vtable(descr=<SizeDescr 32>)
+2449: setfield_gc(p144, ConstPtr(ptr145), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2453: setfield_gc(p144, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+2461: setfield_gc(p144, p142, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+2465: p147 = new_with_vtable(descr=<SizeDescr 40>)
+2477: setfield_gc(p147, p84, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2489: p148 = new_with_vtable(descr=<SizeDescr 32>)
+2501: p149 = new_with_vtable(descr=<SizeDescr 24>)
+2512: p150 = new_with_vtable(descr=<SizeDescr 24>)
+2523: setfield_gc(p150, ConstPtr(ptr151), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2527: p152 = new_with_vtable(descr=<SizeDescr 16>)
+2538: setfield_gc(p152, p115, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2549: setfield_gc(p150, p152, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2553: setfield_gc(p149, p150, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2557: p153 = new_with_vtable(descr=<SizeDescr 16>)
+2568: setfield_gc(p153, p120, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2579: setfield_gc(p149, p153, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2583: setfield_gc(p148, p149, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2587: p154 = new_with_vtable(descr=<SizeDescr 16>)
+2598: setfield_gc(p154, p125, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2609: setfield_gc(p148, p154, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+2613: setfield_gc(p148, p142, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+2617: setfield_gc(p147, p148, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2622: p155 = new_with_vtable(descr=<SizeDescr 48>)
+2633: setfield_gc(p155, p84, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2637: setfield_gc(p155, p81, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2648: setfield_gc(p155, p82, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2666: setfield_gc(p155, ConstPtr(ptr156), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2670: p157 = new_with_vtable(descr=<SizeDescr 16>)
+2681: setfield_gc(p157, p70, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2692: setfield_gc(p155, p157, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2696: setfield_gc(p147, p155, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2708: setfield_gc(p147, ConstPtr(ptr158), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2713: p159 = new_with_vtable(descr=<SizeDescr 40>)
+2724: setfield_gc(p159, ConstPtr(ptr160), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2735: setfield_gc(p159, ConstPtr(ptr161), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2739: setfield_gc(p159, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2747: setfield_gc(p159, p142, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2751: setfield_gc(p143, p84, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2755: setfield_gc(p138, p139, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2766: setfield_gc(p143, ConstPtr(ptr163), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2770: setfield_gc(p143, p144, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2774: setfield_gc(p143, p147, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2778: setfield_gc(p138, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2786: setfield_gc(p138, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2794: setfield_gc(p143, p159, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2798: jump(p138, p143, descr=TargetToken(69318064))
+2832: --end of the loop--
[3e4c06a0e1c1e71] jit-log-opt-bridge}
[3e4c06a1b874d8c] {jit-backend
[3e4c06a1b9591cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c
[3e4c06a1b964cc7] jit-backend-dump}
[3e4c06a1b971f06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0374 +0  2C000000
[3e4c06a1b973606] jit-backend-dump}
[3e4c06a1b977a37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0915 +0  2C000000
[3e4c06a1b97894b] jit-backend-dump}
[3e4c06a1b97bf59] {jit-backend-addr
bridge out of Guard 0x4410650 has address 0x7ff2522c0370 to 0x7ff2522c0910
       gc table: 0x7ff2522c0260
    jump target: 0x7ff2522c0370
         resops: 0x7ff2522c037e
       failures: 0x7ff2522c0910
            end: 0x7ff2522c0c4d
[3e4c06a1b97e442] jit-backend-addr}
[3e4c06a1b981c36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c038b +0  1E060000
[3e4c06a1b982a3a] jit-backend-dump}
[3e4c06a1b986165] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c039f +0  42060000
[3e4c06a1b986ebb] jit-backend-dump}
[3e4c06a1b98a2f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c03bf +0  3E060000
[3e4c06a1b98afb8] jit-backend-dump}
[3e4c06a1b98e35f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c03cc +0  4D060000
[3e4c06a1b98f053] jit-backend-dump}
[3e4c06a1b99241f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c03e3 +0  52060000
[3e4c06a1b9930cf] jit-backend-dump}
[3e4c06a1b996537] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c03f1 +0  60060000
[3e4c06a1b9971de] jit-backend-dump}
[3e4c06a1b99a4f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0408 +0  65060000
[3e4c06a1b99b1bf] jit-backend-dump}
[3e4c06a1b99e4e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0418 +0  71060000
[3e4c06a1b99f187] jit-backend-dump}
[3e4c06a1b9a2474] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0432 +0  73060000
[3e4c06a1b9a3121] jit-backend-dump}
[3e4c06a1b9a63b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0457 +0  6A060000
[3e4c06a1b9a7072] jit-backend-dump}
[3e4c06a1b9aa2f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c04b1 +0  2C060000
[3e4c06a1b9aafa7] jit-backend-dump}
[3e4c06a1b9ae238] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c04c2 +0  37060000
[3e4c06a1b9aeedc] jit-backend-dump}
[3e4c06a1b9b215b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c04f4 +0  21060000
[3e4c06a1b9b2e39] jit-backend-dump}
[3e4c06a1b9b60ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0557 +0  DA050000
[3e4c06a1b9b6da5] jit-backend-dump}
[3e4c06a1b9ba021] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c05a8 +0  A5050000
[3e4c06a1b9baced] jit-backend-dump}
[3e4c06a1b9bdffb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c05b6 +0  B3050000
[3e4c06a1b9becb2] jit-backend-dump}
[3e4c06a1b9c1f27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0607 +0  7E050000
[3e4c06a1b9c2be7] jit-backend-dump}
[3e4c06a1b9c5e6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0615 +0  8C050000
[3e4c06a1b9c6b16] jit-backend-dump}
[3e4c06a1b9c9e09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0666 +0  57050000
[3e4c06a1b9caacc] jit-backend-dump}
[3e4c06a1b9ce1a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0674 +0  65050000
[3e4c06a1b9cee85] jit-backend-dump}
[3e4c06a1b9d2229] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c06d0 +0  25050000
[3e4c06a1b9d2ef8] jit-backend-dump}
[3e4c06a1b9d620a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c06de +0  33050000
[3e4c06a1b9d6ee5] jit-backend-dump}
[3e4c06a1b9da249] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0704 +0  29050000
[3e4c06a1b9daf18] jit-backend-dump}
[3e4c06a1b9de50b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9c93 +0  D9660000
[3e4c06a1b9df1e6] jit-backend-dump}
[3e4c06a1b9e33ce] jit-backend}
[3e4c06a1b9e732e] {jit-log-opt-bridge
# bridge out of Guard 0x4410650 with 142 ops
[i0, p1, p2, p3, p4, p5, p6, p7]
+294: guard_true(i0, descr=<Guard0x443f940>) [i0, p1, p2, p3, p4, p5, p6, p7]
+303: guard_not_invalidated(descr=<Guard0x44b1850>) [i0, p1, p2, p3, p4, p5, p6, p7]
debug_merge_point(0, 0, '(if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))')
debug_merge_point(0, 0, 'new-p')
+303: p8 = getfield_gc_r(p6, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+314: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x44b1898>) [i0, p1, p2, p3, p4, p5, p6, p7]
+323: p10 = getfield_gc_r(p6, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+327: p11 = getfield_gc_r(p6, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+331: p12 = getfield_gc_r(p6, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+335: guard_nonnull_class(p10, ConstClass(W_Bignum), descr=<Guard0x443f9a0>) [i0, p1, p2, p3, p4, p5, p6, p7]
+355: guard_class(p12, 16437352, descr=<Guard0x44b18e0>) [i0, p1, p2, p3, p4, p5, p6, p7]
+368: p15 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+372: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x443fa00>) [i0, p1, p2, p3, p4, p5, p6, p7]
debug_merge_point(0, 0, '(pi-borwein4 n5118) from (= x5022 one5009)')
+391: guard_class(p11, 16500368, descr=<Guard0x44b1928>) [i0, p1, p2, p3, p4, p5, p6, p7]
+405: p18 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+409: guard_nonnull_class(p18, ConstClass(W_Fixnum), descr=<Guard0x443fa60>) [i0, p1, p2, p3, p4, p5, p6, p7]
+428: p20 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+432: guard_class(p20, 16505296, descr=<Guard0x44b1970>) [i0, p1, p2, p3, p4, p5, p6, p7]
+444: i22 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([one5062 (expt 10 nb-digits5060)]) (let ([one^25065 (square one5062)]) (let ([one^45068 (square one^25065)][AppRand41 (* one^25065 2)]) (let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8)))))))')
debug_merge_point(0, 0, '(expt 10 nb-digits5060)')
+448: f23 = cast_int_to_float(i22)
+453: i24 = float_ne(f23, f23)
+464: guard_false(i24, descr=<Guard0x44b19b8>) [i0, p1, p2, p3, p4, p5, p6, p7]
+470: f26 = float_add(f23, 11235582092889474423308157442431404585112356118389416079589380072358292237843810195794279832650471001320007117491962084853674360550901038905802964414967132773610493339054092829768888725077880882465817684505312860552384417646403930092119569408801702322709406917786643639996702871154982269052209770601514008576.000000)
+490: i27 = float_eq(f26, f23)
+501: guard_false(i27, descr=<Guard0x44b1a00>) [i0, p1, p2, p3, p4, p5, p6, p7]
+507: f30 = call_f(ConstClass(ccall_pow), 10.000000, f23, descr=<Callf 8 ff EF=2>)
+549: i33 = call_i(ConstClass(_ll_1_threadlocalref_get__INTLlT_Signed), 48, descr=<Calli 4 i EF=2 OS=5>)
+561: f34 = float_sub(f30, f30)
+570: i36 = float_eq(f34, 0.000000)
+591: guard_false(i36, descr=<Guard0x443fac0>) [i33, f34, f30, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+597: i38 = float_ne(f30, f30)
+608: guard_false(i38, descr=<Guard0x44b1a48>) [i33, f34, f30, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+614: f40 = call_f(ConstClass(fabs), f30, descr=<Callf 8 f EF=2>)
+637: i42 = float_lt(f40, 1.000000)
+658: guard_false(i42, descr=<Guard0x443fb20>) [f30, f40, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+664: p44 = call_r(ConstClass(fromint), i22, descr=<Callr 8 i EF=3>)
+748: guard_no_exception(descr=<Guard0x443fb80>) [p44, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+770: p47 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr46), p44, descr=<Callr 8 rr EF=4>)
+829: guard_no_exception(descr=<Guard0x443fbe0>) [p47, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+844: i48 = getfield_gc_i(p47, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+848: i50 = int_gt(i48, 2)
+852: guard_true(i50, descr=<Guard0x44b1a90>) [p47, i22, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([one^25065 (square one5062)]) (let ([one^45068 (square one^25065)][AppRand41 (* one^25065 2)]) (let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8))))))')
debug_merge_point(0, 0, '(square one5062)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+858: p52 = call_r(ConstClass(rbigint.mul), p47, p47, descr=<Callr 8 rr EF=4>)
+924: guard_no_exception(descr=<Guard0x443fc40>) [p52, p47, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+939: i53 = getfield_gc_i(p52, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+943: i55 = int_gt(i53, 2)
+947: guard_true(i55, descr=<Guard0x44b1ad8>) [p52, p47, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([one^45068 (square one^25065)][AppRand41 (* one^25065 2)]) (let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8)))))')
debug_merge_point(0, 0, '(square one^25065)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+953: p57 = call_r(ConstClass(rbigint.mul), p52, p52, descr=<Callr 8 rr EF=4>)
+1019: guard_no_exception(descr=<Guard0x443fca0>) [p57, p52, p47, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+1034: i58 = getfield_gc_i(p57, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1038: i60 = int_gt(i58, 2)
+1042: guard_true(i60, descr=<Guard0x44b1b20>) [p57, p52, p47, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(* one^25065 2)')
+1055: p63 = call_r(ConstClass(rbigint.mul), p52, ConstPtr(ptr62), descr=<Callr 8 rr EF=4>)
+1125: guard_no_exception(descr=<Guard0x443fd00>) [p63, p57, p52, p47, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
+1140: i64 = getfield_gc_i(p63, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1144: i66 = int_gt(i64, 2)
+1148: guard_true(i66, descr=<Guard0x44b1b68>) [p63, p57, p52, p47, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8))))')
debug_merge_point(0, 0, '(square-root AppRand41)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1161: i69 = call_i(ConstClass(rbigint.lt), p63, ConstPtr(ptr68), descr=<Calli 1 rr EF=0>)
+1183: guard_false(i69, descr=<Guard0x443fd60>) [i69, p63, p57, p52, p47, None, p10, p12, p11, p15, p1, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1192: p70 = new_with_vtable(descr=<SizeDescr 32>)
+1236: p71 = new_with_vtable(descr=<SizeDescr 32>)
+1254: setfield_gc(p71, ConstPtr(ptr72), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1265: setfield_gc(p71, ConstPtr(ptr73), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1269: p74 = new_with_vtable(descr=<SizeDescr 16>)
+1280: setfield_gc(p74, p63, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1284: setfield_gc(p71, p74, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1288: p75 = new_with_vtable(descr=<SizeDescr 48>)
+1299: p76 = new_with_vtable(descr=<SizeDescr 32>)
+1311: setfield_gc(p76, ConstPtr(ptr77), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1316: setfield_gc(p76, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1325: setfield_gc(p76, p74, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1330: p79 = new_with_vtable(descr=<SizeDescr 40>)
+1343: setfield_gc(p79, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1354: p80 = new_with_vtable(descr=<SizeDescr 32>)
+1365: p81 = new_with_vtable(descr=<SizeDescr 24>)
+1376: p82 = new_with_vtable(descr=<SizeDescr 24>)
+1387: setfield_gc(p82, ConstPtr(ptr83), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1391: p84 = new_with_vtable(descr=<SizeDescr 16>)
+1402: setfield_gc(p84, p47, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1413: setfield_gc(p82, p84, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1417: setfield_gc(p81, p82, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1421: p85 = new_with_vtable(descr=<SizeDescr 16>)
+1432: setfield_gc(p85, p52, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1443: setfield_gc(p81, p85, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1447: setfield_gc(p80, p81, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1451: p86 = new_with_vtable(descr=<SizeDescr 16>)
+1462: setfield_gc(p86, p57, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1473: setfield_gc(p80, p86, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1477: setfield_gc(p80, p74, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1481: setfield_gc(p79, p80, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1485: p87 = new_with_vtable(descr=<SizeDescr 56>)
+1496: setfield_gc(p87, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1500: setfield_gc(p87, p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1511: setfield_gc(p87, p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1529: setfield_gc(p87, ConstPtr(ptr88), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1533: setfield_gc(p87, p10, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1544: p89 = new_with_vtable(descr=<SizeDescr 16>)
+1555: setfield_gc(p89, p1, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1566: setfield_gc(p87, p89, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1570: setfield_gc(p79, p87, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1581: setfield_gc(p79, ConstPtr(ptr90), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1585: p91 = new_with_vtable(descr=<SizeDescr 40>)
+1596: setfield_gc(p91, ConstPtr(ptr92), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1607: setfield_gc(p91, ConstPtr(ptr93), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1611: setfield_gc(p91, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1619: setfield_gc(p91, p74, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1630: setfield_gc(p75, ConstPtr(ptr95), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1634: setfield_gc(p75, p91, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1638: setfield_gc(p75, p76, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1642: setfield_gc(p75, p79, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1646: setfield_gc(p75, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1650: setfield_gc(p70, p71, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1654: setfield_gc(p70, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1662: setfield_gc(p70, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1670: jump(p70, p75, descr=TargetToken(69318064))
+1712: --end of the loop--
[3e4c06a1ba6fb25] jit-log-opt-bridge}
[3e4c06a296225ca] {jit-backend
[3e4c06a2969b888] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0d
[3e4c06a296a483d] jit-backend-dump}
[3e4c06a296b0e58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0df4 +0  2C000000
[3e4c06a296b2445] jit-backend-dump}
[3e4c06a296b64b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c10b5 +0  2C000000
[3e4c06a296b73dc] jit-backend-dump}
[3e4c06a296bab03] {jit-backend-addr
bridge out of Guard 0x4411da8 has address 0x7ff2522c0df0 to 0x7ff2522c10b0
       gc table: 0x7ff2522c0d50
    jump target: 0x7ff2522c0df0
         resops: 0x7ff2522c0dfe
       failures: 0x7ff2522c10b0
            end: 0x7ff2522c1255
[3e4c06a296bcfaf] jit-backend-addr}
[3e4c06a296c073b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0e0b +0  F6020000
[3e4c06a296c158f] jit-backend-dump}
[3e4c06a296c4c9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0e1f +0  1A030000
[3e4c06a296c59e1] jit-backend-dump}
[3e4c06a296c8e06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0e35 +0  20030000
[3e4c06a296c9af7] jit-backend-dump}
[3e4c06a296ccea4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0e47 +0  2A030000
[3e4c06a296cdba4] jit-backend-dump}
[3e4c06a296d0fd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0e5e +0  2F030000
[3e4c06a296d1caa] jit-backend-dump}
[3e4c06a296d4ff9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0e76 +0  33030000
[3e4c06a296d5caf] jit-backend-dump}
[3e4c06a296d8fef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0eee +0  D7020000
[3e4c06a296d9cbb] jit-backend-dump}
[3e4c06a296dceff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0efc +0  E5020000
[3e4c06a296ddbc8] jit-backend-dump}
[3e4c06a296e0e13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0f11 +0  EC020000
[3e4c06a296e1acf] jit-backend-dump}
[3e4c06a296e4d60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0f23 +0  F6020000
[3e4c06a296e5a4b] jit-backend-dump}
[3e4c06a296e8d22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0f49 +0  EC020000
[3e4c06a296e9a07] jit-backend-dump}
[3e4c06a296ece50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bceef +0  FD3E0000
[3e4c06a296edb5f] jit-backend-dump}
[3e4c06a296f1b3d] jit-backend}
[3e4c06a296f5726] {jit-log-opt-bridge
# bridge out of Guard 0x4411da8 with 82 ops
[i0, p1, p2, p3, p4, p5]
+182: guard_false(i0, descr=<Guard0x443fe80>) [i0, p1, p2, p3, p4, p5]
+191: guard_not_invalidated(descr=<Guard0x44b1e80>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, 'g')
+191: p6 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+202: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x44b1ec8>) [i0, p1, p2, p3, p4, p5]
+211: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+215: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+219: guard_class(p8, 16500016, descr=<Guard0x44b1f10>) [i0, p1, p2, p3, p4, p5]
+233: p11 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+238: guard_class(p9, 16437352, descr=<Guard0x44b1f58>) [i0, p1, p2, p3, p4, p5]
+251: p13 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+255: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x443fee0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(* one^4 2)')
+274: p15 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+279: guard_nonnull_class(p15, ConstClass(W_Bignum), descr=<Guard0x443ff40>) [i0, p1, p2, p3, p4, p5]
+298: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+309: p20 = call_r(ConstClass(rbigint.mul), p17, ConstPtr(ptr19), descr=<Callr 8 rr EF=4>)
+403: guard_no_exception(descr=<Guard0x443ffa0>) [p8, p20, p15, p9, p11, p13, None, p2, None, None, None]
+418: i22 = getfield_gc_i(p20, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+422: i24 = int_gt(i22, 2)
+426: guard_true(i24, descr=<Guard0x44b1fa0>) [p8, p20, p15, p9, p11, p13, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))))')
debug_merge_point(0, 0, '(quartic-root AppRand23)')
+432: guard_class(p11, 16499664, descr=<Guard0x4508020>) [p8, p20, p15, p9, p11, p13, None, p2, None, None, None]
+453: p26 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+458: guard_class(p26, 16499664, descr=<Guard0x4508068>) [p8, p20, p15, p9, p11, p13, None, p2, None, None, None]
+471: p28 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+478: i31 = call_i(ConstClass(rbigint.lt), p20, ConstPtr(ptr30), descr=<Calli 1 rr EF=0>)
+500: guard_false(i31, descr=<Guard0x450a020>) [i31, p20, None, p9, p11, p13, None, p2, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+509: p32 = new_with_vtable(descr=<SizeDescr 32>)
+553: p33 = new_with_vtable(descr=<SizeDescr 32>)
+571: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+582: setfield_gc(p33, ConstPtr(ptr35), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+586: p36 = new_with_vtable(descr=<SizeDescr 16>)
+597: setfield_gc(p36, p20, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+601: setfield_gc(p33, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+605: p37 = new_with_vtable(descr=<SizeDescr 48>)
+616: p38 = new_with_vtable(descr=<SizeDescr 32>)
+627: setfield_gc(p38, ConstPtr(ptr39), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+631: setfield_gc(p38, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+639: setfield_gc(p38, p36, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+643: p41 = new_with_vtable(descr=<SizeDescr 40>)
+654: setfield_gc(p41, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+665: p42 = new_with_vtable(descr=<SizeDescr 32>)
+677: setfield_gc(p42, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+681: p43 = new_with_vtable(descr=<SizeDescr 16>)
+693: setfield_gc(p43, p2, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+705: setfield_gc(p42, p43, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+709: setfield_gc(p42, p36, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+713: setfield_gc(p41, p42, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+717: setfield_gc(p41, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+735: setfield_gc(p41, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+739: p45 = new_with_vtable(descr=<SizeDescr 40>)
+752: setfield_gc(p45, ConstPtr(ptr46), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+763: setfield_gc(p45, ConstPtr(ptr47), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+767: setfield_gc(p45, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+775: setfield_gc(p45, p36, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+786: setfield_gc(p37, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+790: setfield_gc(p37, p38, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+794: setfield_gc(p37, p41, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+798: setfield_gc(p32, p33, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+802: setfield_gc(p37, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+806: setfield_gc(p32, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+814: setfield_gc(p32, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+822: setfield_gc(p37, p45, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+826: jump(p32, p37, descr=TargetToken(69318064))
+864: --end of the loop--
[3e4c06a2973cd64] jit-log-opt-bridge}
[3e4c06a43d58c81] {jit-backend
[3e4c06a43e11fdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c
[3e4c06a43e20e26] jit-backend-dump}
[3e4c06a43e2e655] {jit-backend-addr
Loop 26 ((let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))) from (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)) has address 0x7ff2522c162d to 0x7ff2522c1b20 (bootstrap 0x7ff2522c15a0)
       gc table: 0x7ff2522c1480
       function: 0x7ff2522c15a0
         resops: 0x7ff2522c162d
       failures: 0x7ff2522c1b20
            end: 0x7ff2522c1e9d
[3e4c06a43e31bf5] jit-backend-addr}
[3e4c06a43e36861] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1644 +0  61050000
[3e4c06a43e37cc7] jit-backend-dump}
[3e4c06a43e3b854] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c165a +0  67050000
[3e4c06a43e3c894] jit-backend-dump}
[3e4c06a43e4011b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c166d +0  8C050000
[3e4c06a43e40f81] jit-backend-dump}
[3e4c06a43e444f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1683 +0  92050000
[3e4c06a43e4525e] jit-backend-dump}
[3e4c06a43e48579] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1693 +0  9E050000
[3e4c06a43e492d8] jit-backend-dump}
[3e4c06a43e4c688] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c16a7 +0  A6050000
[3e4c06a43e4d38e] jit-backend-dump}
[3e4c06a43e506d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c16be +0  AB050000
[3e4c06a43e513e6] jit-backend-dump}
[3e4c06a43e547a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1732 +0  53050000
[3e4c06a43e55484] jit-backend-dump}
[3e4c06a43e587e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1740 +0  61050000
[3e4c06a43e594c3] jit-backend-dump}
[3e4c06a43e5c7a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c175d +0  60050000
[3e4c06a43e5d473] jit-backend-dump}
[3e4c06a43e607e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c17b9 +0  20050000
[3e4c06a43e614bb] jit-backend-dump}
[3e4c06a43e6484d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c17c7 +0  2E050000
[3e4c06a43e6552f] jit-backend-dump}
[3e4c06a43e688cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c17e4 +0  2D050000
[3e4c06a43e695d6] jit-backend-dump}
[3e4c06a43e6c952] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1847 +0  E6040000
[3e4c06a43e6d66b] jit-backend-dump}
[3e4c06a43e709d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1855 +0  F4040000
[3e4c06a43e716d5] jit-backend-dump}
[3e4c06a43e74ac0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1862 +0  03050000
[3e4c06a43e757a7] jit-backend-dump}
[3e4c06a43e78b79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c186b +0  16050000
[3e4c06a43e79873] jit-backend-dump}
[3e4c06a43e7cb9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1874 +0  29050000
[3e4c06a43e7d86c] jit-backend-dump}
[3e4c06a43e80b7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c18c9 +0  F0040000
[3e4c06a43e8188d] jit-backend-dump}
[3e4c06a43e84de0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c18e2 +0  F3040000
[3e4c06a43e85ace] jit-backend-dump}
[3e4c06a43e88dd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c18ec +0  05050000
[3e4c06a43e89ad0] jit-backend-dump}
[3e4c06a43e8ce37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c18fa +0  13050000
[3e4c06a43e8db09] jit-backend-dump}
[3e4c06a43e90dbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1921 +0  08050000
[3e4c06a43e91af6] jit-backend-dump}
[3e4c06a43e94e32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c197a +0  CB040000
[3e4c06a43e95b07] jit-backend-dump}
[3e4c06a43e98d83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c1988 +0  D9040000
[3e4c06a43e99a64] jit-backend-dump}
[3e4c06a43e9cd0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c19ae +0  CF040000
[3e4c06a43e9d9e0] jit-backend-dump}
[3e4c06a43ea4a96] jit-backend}
[3e4c06a43ea94fd] {jit-log-opt-loop
# Loop 26 ((let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))) from (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)) : entry bridge with 130 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))) from (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)')
+437: guard_class(p1, 16437352, descr=<Guard0x450a260>) [p0, p1]
+456: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+460: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x450a2c0>) [p0, p1]
debug_merge_point(0, 0, '(+ x5022 one5009)')
+478: guard_not_invalidated(descr=<Guard0x4508188>) [p0, p1]
+478: guard_class(p0, 16500368, descr=<Guard0x45081d0>) [p0, p1]
+497: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+501: guard_nonnull_class(p6, ConstClass(W_Bignum), descr=<Guard0x450a320>) [p0, p1]
+519: p8 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+523: guard_class(p8, 16478072, descr=<Guard0x4508218>) [p0, p1]
+535: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+546: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x4508260>) [p0, p1]
+555: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+559: guard_nonnull_class(p12, ConstClass(W_Bignum), descr=<Guard0x450a380>) [p0, p1]
+578: p14 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+582: p15 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+586: p17 = call_r(ConstClass(rbigint.add), p14, p15, descr=<Callr 8 rr EF=4>)
+679: guard_no_exception(descr=<Guard0x450a3e0>) [p0, p17, p12, p6, p1, p3]
+694: i18 = getfield_gc_i(p17, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+698: i20 = int_gt(i18, 2)
+702: guard_true(i20, descr=<Guard0x45082a8>) [p0, p17, p12, p6, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))')
debug_merge_point(0, 0, '(* p AppRand24)')
+708: p21 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+719: guard_nonnull_class(p21, ConstClass(W_Bignum), descr=<Guard0x450a440>) [p0, p17, p12, p6, p1, p3]
+737: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+741: p25 = call_r(ConstClass(rbigint.mul), p23, p17, descr=<Callr 8 rr EF=4>)
+814: guard_no_exception(descr=<Guard0x450a4a0>) [p25, p21, p17, p0, None, None, p1, p3]
+829: i27 = getfield_gc_i(p25, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+833: i29 = int_gt(i27, 2)
+837: guard_true(i29, descr=<Guard0x45082f0>) [p25, p21, p17, p0, None, None, p1, p3]
debug_merge_point(0, 0, '(+ y5024 one5009)')
+843: p30 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+854: guard_nonnull_class(p30, ConstClass(W_Bignum), descr=<Guard0x450a500>) [p25, p21, p17, p0, None, None, p1, p3]
+872: p32 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+876: p34 = call_r(ConstClass(rbigint.add), p32, p15, descr=<Callr 8 rr EF=4>)
+956: guard_no_exception(descr=<Guard0x450a560>) [p0, p34, p30, p25, None, None, None, p12, None, p1, p3]
+971: i35 = getfield_gc_i(p34, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+975: i37 = int_gt(i35, 2)
+979: guard_true(i37, descr=<Guard0x4508338>) [p0, p34, p30, p25, None, None, None, p12, None, p1, p3]
debug_merge_point(0, 0, '(let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)))))))))')
debug_merge_point(0, 0, '(quotient AppRand25 AppRand26)')
+985: i38 = getfield_gc_i(p34, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+989: i39 = int_is_zero(i38)
+992: guard_false(i39, descr=<Guard0x4508380>) [p0, p34, p30, p25, None, None, None, p12, None, p1, p3]
+998: i40 = int_lt(i27, i35)
+1001: guard_false(i40, descr=<Guard0x45083c8>) [p0, p34, p30, p25, None, None, None, p12, None, p1, p3]
+1007: i41 = int_eq(i27, i35)
+1010: guard_false(i41, descr=<Guard0x4508410>) [p0, p34, p30, p25, None, None, None, p12, None, p1, p3]
+1016: p43 = call_r(ConstClass(_x_divrem), p25, p34, descr=<Callr 8 rr EF=5>)
+1086: guard_no_exception(descr=<Guard0x450a5c0>) [p43, p34, p25, None, None, None, None, p0, None, None, p1, p3]
+1101: p44 = getfield_gc_r(p43, descr=<FieldP tuple2.item0 8 pure>)
+1105: p45 = getfield_gc_r(p43, descr=<FieldP tuple2.item1 16 pure>)
+1105: i46 = getfield_gc_i(p25, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1117: i47 = int_ne(i46, i38)
+1120: guard_false(i47, descr=<Guard0x4508458>) [p43, p34, p25, None, None, None, None, p0, None, None, p1, p3]
+1126: i49 = int_lt(i46, 0)
+1130: guard_false(i49, descr=<Guard0x45084a0>) [p43, p34, p25, None, None, None, None, p0, None, None, p1, p3]
+1136: i50 = getfield_gc_i(p44, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1140: i52 = int_gt(i50, 2)
+1144: guard_true(i52, descr=<Guard0x45084e8>) [p43, p34, p25, None, None, None, None, p0, None, None, p1, p3]
debug_merge_point(0, 0, '(= x5022 one5009)')
+1150: i54 = call_i(ConstClass(rbigint.eq), p14, p15, descr=<Calli 1 rr EF=0>)
+1180: guard_false(i54, descr=<Guard0x450a620>) [p0, i54, p44, None, None, None, None, None, None, None, p1, p3]
debug_merge_point(0, 0, '(if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))')
debug_merge_point(0, 0, '(let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)))))))')
debug_merge_point(0, 0, '(* one5009 x5022)')
+1189: p56 = call_r(ConstClass(rbigint.mul), p15, p14, descr=<Callr 8 rr EF=4>)
+1263: guard_no_exception(descr=<Guard0x450a680>) [p56, p44, None, None, None, None, p0, p12, p6, p1, p3]
+1278: i57 = getfield_gc_i(p56, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1282: i59 = int_gt(i57, 2)
+1286: guard_true(i59, descr=<Guard0x4508530>) [p56, p44, None, None, None, None, p0, p12, p6, p1, p3]
debug_merge_point(0, 0, '(let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))')
debug_merge_point(0, 0, '(square-root AppRand27)')
+1292: p60 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1299: i63 = call_i(ConstClass(rbigint.lt), p56, ConstPtr(ptr62), descr=<Calli 1 rr EF=0>)
+1321: guard_false(i63, descr=<Guard0x450a6e0>) [i63, p56, p44, None, None, None, None, p0, None, None, p1, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1330: p64 = new_with_vtable(descr=<SizeDescr 32>)
+1374: p65 = new_with_vtable(descr=<SizeDescr 32>)
+1392: setfield_gc(p65, ConstPtr(ptr66), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1403: setfield_gc(p65, ConstPtr(ptr67), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1407: p68 = new_with_vtable(descr=<SizeDescr 16>)
+1419: setfield_gc(p68, p56, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1424: setfield_gc(p65, p68, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1428: p69 = new_with_vtable(descr=<SizeDescr 48>)
+1440: p70 = new_with_vtable(descr=<SizeDescr 32>)
+1451: setfield_gc(p70, ConstPtr(ptr71), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1455: setfield_gc(p70, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1463: setfield_gc(p70, p68, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1467: p73 = new_with_vtable(descr=<SizeDescr 40>)
+1478: setfield_gc(p73, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1489: p74 = new_with_vtable(descr=<SizeDescr 32>)
+1500: setfield_gc(p74, p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1511: p75 = new_with_vtable(descr=<SizeDescr 16>)
+1522: setfield_gc(p75, p44, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1533: setfield_gc(p74, p75, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1544: setfield_gc(p74, ConstPtr(ptr76), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1548: setfield_gc(p73, p74, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1552: setfield_gc(p73, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1570: setfield_gc(p73, ConstPtr(ptr77), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1574: p78 = new_with_vtable(descr=<SizeDescr 40>)
+1585: setfield_gc(p78, ConstPtr(ptr79), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1596: setfield_gc(p78, ConstPtr(ptr80), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1600: setfield_gc(p78, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1608: setfield_gc(p78, p68, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1612: setfield_gc(p69, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1616: setfield_gc(p64, p65, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1620: setfield_gc(p64, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1628: setfield_gc(p64, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1636: setfield_gc(p69, p70, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1640: setfield_gc(p69, p73, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1651: setfield_gc(p69, ConstPtr(ptr84), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1655: setfield_gc(p69, p78, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1659: jump(p64, p69, descr=TargetToken(69318064))
+1696: --end of the loop--
[3e4c06a43f1dafa] jit-log-opt-loop}
[3e4c06a519f7ef8] {jit-backend
[3e4c06a51a7a746] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c
[3e4c06a51a8592d] jit-backend-dump}
[3e4c06a51a924e6] {jit-backend-addr
Loop 27 ((let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 AppRand58 AppRand61 8)) has address 0x7ff2522c214d to 0x7ff2522c24b0 (bootstrap 0x7ff2522c20c0)
       gc table: 0x7ff2522c2000
       function: 0x7ff2522c20c0
         resops: 0x7ff2522c214d
       failures: 0x7ff2522c24b0
            end: 0x7ff2522c26d5
[3e4c06a51a95b6b] jit-backend-addr}
[3e4c06a51a9a86a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2164 +0  AD030000
[3e4c06a51a9bdcb] jit-backend-dump}
[3e4c06a51a9f719] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c217a +0  B3030000
[3e4c06a51aa057c] jit-backend-dump}
[3e4c06a51aa3c91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c218d +0  D8030000
[3e4c06a51aa49e3] jit-backend-dump}
[3e4c06a51aa804a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c21a3 +0  DE030000
[3e4c06a51aa8d53] jit-backend-dump}
[3e4c06a51aac300] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c21d5 +0  C8030000
[3e4c06a51aacfdb] jit-backend-dump}
[3e4c06a51ab0382] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c21e5 +0  D4030000
[3e4c06a51ab1054] jit-backend-dump}
[3e4c06a51ab441a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2244 +0  91030000
[3e4c06a51ab5117] jit-backend-dump}
[3e4c06a51ab8472] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2252 +0  9F030000
[3e4c06a51ab9153] jit-backend-dump}
[3e4c06a51abc507] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c22a3 +0  6A030000
[3e4c06a51abd238] jit-backend-dump}
[3e4c06a51ac0593] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c22b1 +0  78030000
[3e4c06a51ac1249] jit-backend-dump}
[3e4c06a51ac4530] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c22cc +0  79030000
[3e4c06a51ac51e0] jit-backend-dump}
[3e4c06a51acbd70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c22e4 +0  7D030000
[3e4c06a51accb89] jit-backend-dump}
[3e4c06a51ad03d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2340 +0  3D030000
[3e4c06a51ad1132] jit-backend-dump}
[3e4c06a51ad4548] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c234e +0  4B030000
[3e4c06a51ad5207] jit-backend-dump}
[3e4c06a51ad8590] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2374 +0  41030000
[3e4c06a51ad924a] jit-backend-dump}
[3e4c06a51add1cb] jit-backend}
[3e4c06a51ae103d] {jit-log-opt-loop
# Loop 27 ((let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 AppRand58 AppRand61 8)) : entry bridge with 94 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 AppRand58 AppRand61 8)')
+341: guard_class(p1, 16437896, descr=<Guard0x450a7a0>) [p0, p1]
+360: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+364: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x450a800>) [p0, p1]
debug_merge_point(0, 0, '(= y5076 0)')
+382: guard_not_invalidated(descr=<Guard0x4508698>) [p0, p1]
+382: guard_class(p0, 16500368, descr=<Guard0x45086e0>) [p0, p1]
+401: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+405: guard_nonnull_class(p6, ConstClass(W_Bignum), descr=<Guard0x450a860>) [p0, p1]
+423: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+434: i11 = call_i(ConstClass(rbigint.eq), p8, ConstPtr(ptr10), descr=<Calli 1 rr EF=0>)
+464: guard_false(i11, descr=<Guard0x450a8c0>) [p0, i11, p1, p3]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
+473: p12 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+477: guard_class(p12, 16478448, descr=<Guard0x4508728>) [p0, i11, p1, p3]
+489: p14 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+489: p16 = call_r(ConstClass(rbigint.mul), p8, p8, descr=<Callr 8 rr EF=4>)
+569: guard_no_exception(descr=<Guard0x450a920>) [p16, p6, p0, p1, p3]
+584: i17 = getfield_gc_i(p16, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+588: i19 = int_gt(i17, 2)
+592: guard_true(i19, descr=<Guard0x4508770>) [p16, p6, p0, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+598: p21 = call_r(ConstClass(rbigint.mul), p16, p16, descr=<Callr 8 rr EF=4>)
+664: guard_no_exception(descr=<Guard0x450a980>) [p21, p16, None, p0, p1, p3]
+679: i23 = getfield_gc_i(p21, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+683: i25 = int_gt(i23, 2)
+687: guard_true(i25, descr=<Guard0x45087b8>) [p21, p16, None, p0, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+693: p26 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+711: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x4508800>) [p21, p16, None, p0, p1, p3]
+720: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+724: guard_nonnull_class(p28, ConstClass(W_Bignum), descr=<Guard0x450a9e0>) [p21, p16, None, p0, p1, p3]
+744: p30 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+748: p32 = call_r(ConstClass(rbigint.sub), p30, p21, descr=<Callr 8 rr EF=4>)
+821: guard_no_exception(descr=<Guard0x450aa40>) [p32, p28, p21, None, None, p0, p1, p3]
+836: i33 = getfield_gc_i(p32, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+840: i35 = int_gt(i33, 2)
+844: guard_true(i35, descr=<Guard0x4508848>) [p32, p28, p21, None, None, p0, p1, p3]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+857: i38 = call_i(ConstClass(rbigint.lt), p32, ConstPtr(ptr37), descr=<Calli 1 rr EF=0>)
+879: guard_false(i38, descr=<Guard0x450aaa0>) [i38, p32, None, None, None, None, p0, p1, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+888: p39 = new_with_vtable(descr=<SizeDescr 32>)
+932: p40 = new_with_vtable(descr=<SizeDescr 32>)
+950: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+961: setfield_gc(p40, ConstPtr(ptr42), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+965: p43 = new_with_vtable(descr=<SizeDescr 16>)
+977: setfield_gc(p43, p32, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+981: setfield_gc(p40, p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+985: p44 = new_with_vtable(descr=<SizeDescr 48>)
+996: p45 = new_with_vtable(descr=<SizeDescr 32>)
+1007: setfield_gc(p45, ConstPtr(ptr46), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1011: setfield_gc(p45, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1019: setfield_gc(p45, p43, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1023: p48 = new_with_vtable(descr=<SizeDescr 40>)
+1034: setfield_gc(p48, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1045: setfield_gc(p48, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1056: setfield_gc(p48, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1074: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1078: p50 = new_with_vtable(descr=<SizeDescr 40>)
+1089: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1100: setfield_gc(p50, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1104: setfield_gc(p50, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1112: setfield_gc(p50, p43, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1116: setfield_gc(p44, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1120: setfield_gc(p39, p40, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1124: setfield_gc(p39, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1132: setfield_gc(p39, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1140: setfield_gc(p44, p45, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1144: setfield_gc(p44, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1155: setfield_gc(p44, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1159: setfield_gc(p44, p50, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1163: jump(p39, p44, descr=TargetToken(69318064))
+1200: --end of the loop--
[3e4c06a51b32620] jit-log-opt-loop}
[3e4c06a6d626263] {jit-backend
[3e4c06a6d73c03f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2aa0 +0  
[3e4c06a6d74ceb9] jit-backend-dump}
[3e4c06a6d75a67a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2c74 +0  2C000000
[3e4c06a6d75bbc8] jit-backend-dump}
[3e4c06a6d75fe2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c34c5 +0  2C000000
[3e4c06a6d760d67] jit-backend-dump}
[3e4c06a6d764142] {jit-backend-addr
bridge out of Guard 0x44b1ec8 has address 0x7ff2522c2c70 to 0x7ff2522c34c0
       gc table: 0x7ff2522c2aa0
    jump target: 0x7ff2522c2c70
         resops: 0x7ff2522c2c7e
       failures: 0x7ff2522c34c0
            end: 0x7ff2522c3ad1
[3e4c06a6d76655b] jit-backend-addr}
[3e4c06a6d769e6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2c8b +0  3A090000
[3e4c06a6d76ac64] jit-backend-dump}
[3e4c06a6d76e351] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2c9f +0  5E090000
[3e4c06a6d76f073] jit-backend-dump}
[3e4c06a6d77250c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2cb4 +0  65090000
[3e4c06a6d7731b0] jit-backend-dump}
[3e4c06a6d77654b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2ccb +0  6A090000
[3e4c06a6d777233] jit-backend-dump}
[3e4c06a6d77a66d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2cd9 +0  78090000
[3e4c06a6d77b342] jit-backend-dump}
[3e4c06a6d77e7f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2ceb +0  82090000
[3e4c06a6d77f4ed] jit-backend-dump}
[3e4c06a6d782857] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2cfc +0  8D090000
[3e4c06a6d783511] jit-backend-dump}
[3e4c06a6d786869] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2d15 +0  90090000
[3e4c06a6d78753e] jit-backend-dump}
[3e4c06a6d78a90d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2d27 +0  9A090000
[3e4c06a6d78b5eb] jit-backend-dump}
[3e4c06a6d78e9d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2d39 +0  A4090000
[3e4c06a6d78f6a2] jit-backend-dump}
[3e4c06a6d792afb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2d51 +0  A8090000
[3e4c06a6d7937e5] jit-backend-dump}
[3e4c06a6d796c7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2de2 +0  33090000
[3e4c06a6d7979b5] jit-backend-dump}
[3e4c06a6d79ae4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2df0 +0  41090000
[3e4c06a6d79bb26] jit-backend-dump}
[3e4c06a6d79f046] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2e45 +0  08090000
[3e4c06a6d79fd2a] jit-backend-dump}
[3e4c06a6d7a3354] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2e53 +0  16090000
[3e4c06a6d7a401d] jit-backend-dump}
[3e4c06a6d7a736c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2eaf +0  D6080000
[3e4c06a6d7a803e] jit-backend-dump}
[3e4c06a6d7ab3d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2ebd +0  E4080000
[3e4c06a6d7ac0bd] jit-backend-dump}
[3e4c06a6d7af45b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2f19 +0  A4080000
[3e4c06a6d7b0140] jit-backend-dump}
[3e4c06a6d7b34e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2f27 +0  B2080000
[3e4c06a6d7b41d2] jit-backend-dump}
[3e4c06a6d7b75e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2f7c +0  79080000
[3e4c06a6d7b82ea] jit-backend-dump}
[3e4c06a6d7bb6b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2f8a +0  87080000
[3e4c06a6d7bc3ea] jit-backend-dump}
[3e4c06a6d7bf788] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2f9e +0  8F080000
[3e4c06a6d7c0473] jit-backend-dump}
[3e4c06a6d7c3851] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2fa7 +0  A2080000
[3e4c06a6d7c4530] jit-backend-dump}
[3e4c06a6d7c78a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2fb0 +0  B5080000
[3e4c06a6d7c85b2] jit-backend-dump}
[3e4c06a6d7cbabf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3008 +0  79080000
[3e4c06a6d7cc7a4] jit-backend-dump}
[3e4c06a6d7cfb48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3020 +0  7D080000
[3e4c06a6d7d0817] jit-backend-dump}
[3e4c06a6d7d3b72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c302a +0  8F080000
[3e4c06a6d7d4838] jit-backend-dump}
[3e4c06a6d7d7bb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3038 +0  9D080000
[3e4c06a6d7d8893] jit-backend-dump}
[3e4c06a6d7dbbea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c308d +0  64080000
[3e4c06a6d7dc8cc] jit-backend-dump}
[3e4c06a6d7dfbe0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c309b +0  72080000
[3e4c06a6d7e08bf] jit-backend-dump}
[3e4c06a6d7e3bf5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c30f0 +0  39080000
[3e4c06a6d7e48b8] jit-backend-dump}
[3e4c06a6d7e7c0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c30fe +0  47080000
[3e4c06a6d7e8925] jit-backend-dump}
[3e4c06a6d7ebca1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c315a +0  07080000
[3e4c06a6d7ec976] jit-backend-dump}
[3e4c06a6d7efd21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3168 +0  15080000
[3e4c06a6d7f09f3] jit-backend-dump}
[3e4c06a6d7f3d1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3175 +0  24080000
[3e4c06a6d7f49d0] jit-backend-dump}
[3e4c06a6d7f7ce2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c317e +0  37080000
[3e4c06a6d7f89b1] jit-backend-dump}
[3e4c06a6d7fbd18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3187 +0  4A080000
[3e4c06a6d7fc9e4] jit-backend-dump}
[3e4c06a6d7ffd57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c31df +0  0E080000
[3e4c06a6d800a2f] jit-backend-dump}
[3e4c06a6d803db5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c31f7 +0  12080000
[3e4c06a6d804a72] jit-backend-dump}
[3e4c06a6d80b770] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3201 +0  24080000
[3e4c06a6d80c5a5] jit-backend-dump}
[3e4c06a6d80fc1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c320f +0  32080000
[3e4c06a6d810968] jit-backend-dump}
[3e4c06a6d813cd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3236 +0  27080000
[3e4c06a6d8149fd] jit-backend-dump}
[3e4c06a6d817e2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c328f +0  EA070000
[3e4c06a6d818b93] jit-backend-dump}
[3e4c06a6d81c04a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c329d +0  F8070000
[3e4c06a6d81cd66] jit-backend-dump}
[3e4c06a6d820135] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c32c3 +0  EE070000
[3e4c06a6d820e4d] jit-backend-dump}
[3e4c06a6d8244ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c0e1f +0  4D1E0000
[3e4c06a6d825247] jit-backend-dump}
[3e4c06a6d829423] jit-backend}
[3e4c06a6d82d254] {jit-log-opt-bridge
# bridge out of Guard 0x44b1ec8 with 203 ops
[i0, p1, p2, p3, p4, p5]
+486: guard_false(i0, descr=<Guard0x450ada0>) [i0, p1, p2, p3, p4, p5]
+495: guard_not_invalidated(descr=<Guard0x45089f8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, 'g')
+495: p6 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+506: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x4508a40>) [i0, p1, p2, p3, p4, p5]
+515: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+519: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+523: guard_class(p9, 16437352, descr=<Guard0x4508a88>) [i0, p1, p2, p3, p4, p5]
+536: p11 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+540: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x450ae00>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))')
+559: guard_class(p8, 16500016, descr=<Guard0x4508ad0>) [i0, p1, p2, p3, p4, p5]
+573: p14 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+578: guard_class(p14, 16499664, descr=<Guard0x4508b18>) [i0, p1, p2, p3, p4, p5]
+591: p16 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+595: guard_class(p16, 16499664, descr=<Guard0x4508b60>) [i0, p1, p2, p3, p4, p5]
+608: p18 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+612: p19 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+616: p20 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+620: guard_class(p20, 16505296, descr=<Guard0x4508ba8>) [i0, p1, p2, p3, p4, p5]
+633: guard_nonnull_class(p18, ConstClass(W_Bignum), descr=<Guard0x450ae60>) [i0, p1, p2, p3, p4, p5]
+651: guard_nonnull_class(p19, ConstClass(W_Bignum), descr=<Guard0x450aec0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(+ sqrt2 one5009)')
+669: p24 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+674: guard_nonnull_class(p24, ConstClass(W_Bignum), descr=<Guard0x450af20>) [i0, p1, p2, p3, p4, p5]
+693: p26 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+697: p27 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+701: p29 = call_r(ConstClass(rbigint.add), p26, p27, descr=<Callr 8 rr EF=4>)
+823: guard_no_exception(descr=<Guard0x450af80>) [p8, p29, p24, p19, p18, p20, p9, p11, None, p2, None, None, None]
+838: i31 = getfield_gc_i(p29, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+842: i33 = int_gt(i31, 2)
+846: guard_true(i33, descr=<Guard0x4508bf0>) [p8, p29, p24, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))')
debug_merge_point(0, 0, '(* one5009 AppRand36)')
+852: p35 = call_r(ConstClass(rbigint.mul), p27, p29, descr=<Callr 8 rr EF=4>)
+922: guard_no_exception(descr=<Guard0x450afe0>) [p35, p29, p8, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+937: i36 = getfield_gc_i(p35, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+941: i38 = int_gt(i36, 2)
+945: guard_true(i38, descr=<Guard0x4508c38>) [p35, p29, p8, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(* 2 qurt2)')
+958: p41 = call_r(ConstClass(rbigint.mul), ConstPtr(ptr40), p2, descr=<Callr 8 rr EF=4>)
+1028: guard_no_exception(descr=<Guard0x450b040>) [p41, p35, p29, p8, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1043: i42 = getfield_gc_i(p41, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1047: i44 = int_gt(i42, 2)
+1051: guard_true(i44, descr=<Guard0x4508c80>) [p41, p35, p29, p8, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(* 2 one5009)')
+1064: p47 = call_r(ConstClass(rbigint.mul), ConstPtr(ptr46), p27, descr=<Callr 8 rr EF=4>)
+1134: guard_no_exception(descr=<Guard0x450b0a0>) [p47, p41, p35, p29, p8, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1149: i48 = getfield_gc_i(p47, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1153: i50 = int_gt(i48, 2)
+1157: guard_true(i50, descr=<Guard0x4508cc8>) [p47, p41, p35, p29, p8, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))')
debug_merge_point(0, 0, '(+ AppRand39 sqrt2)')
+1163: p52 = call_r(ConstClass(rbigint.add), p47, p26, descr=<Callr 8 rr EF=4>)
+1233: guard_no_exception(descr=<Guard0x450b100>) [p52, p47, p41, p35, p29, p8, p24, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1248: i53 = getfield_gc_i(p52, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1252: i55 = int_gt(i53, 2)
+1256: guard_true(i55, descr=<Guard0x4508d10>) [p52, p47, p41, p35, p29, p8, p24, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)')
+1262: i56 = getfield_gc_i(p41, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1273: i57 = int_is_zero(i56)
+1276: guard_false(i57, descr=<Guard0x4508d58>) [p52, p47, p41, p35, p29, p8, p24, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1282: i58 = int_lt(i36, i42)
+1285: guard_false(i58, descr=<Guard0x4508da0>) [p52, p47, p41, p35, p29, p8, p24, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1291: i59 = int_eq(i36, i42)
+1294: guard_false(i59, descr=<Guard0x4508de8>) [p52, p47, p41, p35, p29, p8, p24, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1300: p61 = call_r(ConstClass(_x_divrem), p35, p41, descr=<Callr 8 rr EF=5>)
+1373: guard_no_exception(descr=<Guard0x450b160>) [p9, p61, p41, p35, p52, p47, None, None, p29, p8, None, p19, p18, p20, None, None, None, p2, None, None, None]
+1388: p62 = getfield_gc_r(p61, descr=<FieldP tuple2.item0 8 pure>)
+1392: p63 = getfield_gc_r(p61, descr=<FieldP tuple2.item1 16 pure>)
+1392: i64 = getfield_gc_i(p35, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1403: i65 = int_ne(i64, i56)
+1406: guard_false(i65, descr=<Guard0x4508e30>) [p9, p61, p41, p35, p52, p47, None, None, p29, p8, None, p19, p18, p20, None, None, None, p2, None, None, None]
+1412: i67 = int_lt(i64, 0)
+1416: guard_false(i67, descr=<Guard0x4508e78>) [p9, p61, p41, p35, p52, p47, None, None, p29, p8, None, p19, p18, p20, None, None, None, p2, None, None, None]
+1422: i68 = getfield_gc_i(p62, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1426: i70 = int_gt(i68, 2)
+1430: guard_true(i70, descr=<Guard0x4508ec0>) [p9, p61, p41, p35, p52, p47, None, None, p29, p8, None, p19, p18, p20, None, None, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))) from (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)')
debug_merge_point(0, 0, '(+ x5022 one5009)')
+1436: p72 = call_r(ConstClass(rbigint.add), p62, p27, descr=<Callr 8 rr EF=4>)
+1506: guard_no_exception(descr=<Guard0x450b1c0>) [p72, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1521: i73 = getfield_gc_i(p72, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1525: i75 = int_gt(i73, 2)
+1529: guard_true(i75, descr=<Guard0x4508f08>) [p72, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))')
debug_merge_point(0, 0, '(* p AppRand24)')
+1535: p77 = call_r(ConstClass(rbigint.mul), p52, p72, descr=<Callr 8 rr EF=4>)
+1605: guard_no_exception(descr=<Guard0x450b220>) [p77, p72, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1620: i78 = getfield_gc_i(p77, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1624: i80 = int_gt(i78, 2)
+1628: guard_true(i80, descr=<Guard0x4508f50>) [p77, p72, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(+ y5024 one5009)')
+1634: p82 = call_r(ConstClass(rbigint.add), p2, p27, descr=<Callr 8 rr EF=4>)
+1711: guard_no_exception(descr=<Guard0x450b280>) [p82, p77, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1726: i83 = getfield_gc_i(p82, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1730: i85 = int_gt(i83, 2)
+1734: guard_true(i85, descr=<Guard0x4508f98>) [p82, p77, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)))))))))')
debug_merge_point(0, 0, '(quotient AppRand25 AppRand26)')
+1740: i86 = getfield_gc_i(p82, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1744: i87 = int_is_zero(i86)
+1747: guard_false(i87, descr=<Guard0x4508fe0>) [p82, p77, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1753: i88 = int_lt(i78, i83)
+1756: guard_false(i88, descr=<Guard0x4509028>) [p82, p77, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1762: i89 = int_eq(i78, i83)
+1765: guard_false(i89, descr=<Guard0x4509070>) [p82, p77, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1771: p91 = call_r(ConstClass(_x_divrem), p77, p82, descr=<Callr 8 rr EF=5>)
+1844: guard_no_exception(descr=<Guard0x450b2e0>) [p91, p82, p77, None, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1859: p92 = getfield_gc_r(p91, descr=<FieldP tuple2.item0 8 pure>)
+1863: p93 = getfield_gc_r(p91, descr=<FieldP tuple2.item1 16 pure>)
+1863: i94 = getfield_gc_i(p77, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1874: i95 = int_ne(i94, i86)
+1877: guard_false(i95, descr=<Guard0x45090b8>) [p91, p82, p77, None, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1883: i97 = int_lt(i94, 0)
+1887: guard_false(i97, descr=<Guard0x4509100>) [p91, p82, p77, None, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+1893: i98 = getfield_gc_i(p92, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1897: i100 = int_gt(i98, 2)
+1901: guard_true(i100, descr=<Guard0x4509148>) [p91, p82, p77, None, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(= x5022 one5009)')
+1907: i102 = call_i(ConstClass(rbigint.eq), p62, p27, descr=<Calli 1 rr EF=0>)
+1937: guard_false(i102, descr=<Guard0x450b340>) [i102, p92, None, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))')
debug_merge_point(0, 0, '(let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p)))))))')
debug_merge_point(0, 0, '(* one5009 x5022)')
+1946: p104 = call_r(ConstClass(rbigint.mul), p27, p62, descr=<Callr 8 rr EF=4>)
+2020: guard_no_exception(descr=<Guard0x450b3a0>) [p104, p92, None, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
+2035: i105 = getfield_gc_i(p104, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2039: i107 = int_gt(i105, 2)
+2043: guard_true(i107, descr=<Guard0x4509190>) [p104, p92, None, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))')
debug_merge_point(0, 0, '(square-root AppRand27)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+2056: i110 = call_i(ConstClass(rbigint.lt), p104, ConstPtr(ptr109), descr=<Calli 1 rr EF=0>)
+2078: guard_false(i110, descr=<Guard0x450b400>) [i110, p104, p92, None, None, p62, p52, None, None, None, None, None, None, p19, p18, p20, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+2087: p111 = new_with_vtable(descr=<SizeDescr 32>)
+2131: p112 = new_with_vtable(descr=<SizeDescr 32>)
+2149: setfield_gc(p112, ConstPtr(ptr113), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2160: setfield_gc(p112, ConstPtr(ptr114), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2164: p115 = new_with_vtable(descr=<SizeDescr 16>)
+2175: setfield_gc(p115, p104, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2179: setfield_gc(p112, p115, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+2183: p116 = new_with_vtable(descr=<SizeDescr 48>)
+2195: p117 = new_with_vtable(descr=<SizeDescr 32>)
+2207: setfield_gc(p117, ConstPtr(ptr118), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2211: setfield_gc(p117, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+2219: setfield_gc(p117, p115, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+2223: p120 = new_with_vtable(descr=<SizeDescr 40>)
+2234: setfield_gc(p120, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2245: p121 = new_with_vtable(descr=<SizeDescr 32>)
+2256: p122 = new_with_vtable(descr=<SizeDescr 40>)
+2267: p123 = new_with_vtable(descr=<SizeDescr 40>)
+2278: setfield_gc(p123, p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2296: setfield_gc(p123, ConstPtr(ptr124), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2300: setfield_gc(p123, p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+2311: setfield_gc(p123, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+2322: setfield_gc(p122, p123, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2326: p125 = new_with_vtable(descr=<SizeDescr 16>)
+2338: setfield_gc(p125, p62, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2349: setfield_gc(p122, p125, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+2353: p126 = new_with_vtable(descr=<SizeDescr 16>)
+2364: setfield_gc(p126, p2, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2375: setfield_gc(p122, p126, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+2379: p127 = new_with_vtable(descr=<SizeDescr 16>)
+2391: setfield_gc(p127, p52, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2402: setfield_gc(p122, p127, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+2406: setfield_gc(p121, p122, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2410: p128 = new_with_vtable(descr=<SizeDescr 16>)
+2421: setfield_gc(p128, p92, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2432: setfield_gc(p121, p128, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+2443: setfield_gc(p121, ConstPtr(ptr129), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+2447: setfield_gc(p120, p121, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2451: setfield_gc(p120, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2469: setfield_gc(p120, ConstPtr(ptr130), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2473: p131 = new_with_vtable(descr=<SizeDescr 40>)
+2484: setfield_gc(p131, ConstPtr(ptr132), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2495: setfield_gc(p131, ConstPtr(ptr133), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2499: setfield_gc(p131, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2507: setfield_gc(p131, p115, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2518: setfield_gc(p116, ConstPtr(ptr135), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2523: setfield_gc(p116, p117, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2528: setfield_gc(p116, p120, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2533: setfield_gc(p116, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2538: setfield_gc(p111, p112, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2542: setfield_gc(p111, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2550: setfield_gc(p111, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2558: setfield_gc(p116, p131, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2563: jump(p111, p116, descr=TargetToken(69318064))
+2592: --end of the loop--
[3e4c06a6d8daa0e] jit-log-opt-bridge}
[3e4c06a742d641b] {jit-backend
[3e4c06a74318e5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3bb
[3e4c06a7431f3d3] jit-backend-dump}
[3e4c06a7432b46f] {jit-backend-addr
Loop 29 ((cons AppRand64 AppRand66) from (cons AppRand64 AppRand66)) has address 0x7ff2522c3c9d to 0x7ff2522c3df0 (bootstrap 0x7ff2522c3c10)
       gc table: 0x7ff2522c3bb0
       function: 0x7ff2522c3c10
         resops: 0x7ff2522c3c9d
       failures: 0x7ff2522c3df0
            end: 0x7ff2522c3f53
[3e4c06a7432e263] jit-backend-addr}
[3e4c06a74332880] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3cc7 +0  54010000
[3e4c06a74333c5f] jit-backend-dump}
[3e4c06a74337426] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3cdd +0  5A010000
[3e4c06a743382a7] jit-backend-dump}
[3e4c06a7433b90b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3cf3 +0  60010000
[3e4c06a7433c667] jit-backend-dump}
[3e4c06a7433fc4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3d06 +0  69010000
[3e4c06a743409ef] jit-backend-dump}
[3e4c06a74343e5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3d1a +0  71010000
[3e4c06a74344bb0] jit-backend-dump}
[3e4c06a743480b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3d34 +0  8F010000
[3e4c06a74348e1c] jit-backend-dump}
[3e4c06a7434c2d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3d60 +0  7F010000
[3e4c06a7434d066] jit-backend-dump}
[3e4c06a743504a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3d74 +0  87010000
[3e4c06a7435121e] jit-backend-dump}
[3e4c06a74354712] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3d8e +0  A5010000
[3e4c06a74355484] jit-backend-dump}
[3e4c06a743593bf] jit-backend}
[3e4c06a7435d2dc] {jit-log-opt-loop
# Loop 29 ((cons AppRand64 AppRand66) from (cons AppRand64 AppRand66)) : loop with 31 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(72852928))
debug_merge_point(0, 0, '(cons AppRand64 AppRand66) from (cons AppRand64 AppRand66)')
+264: guard_class(p0, 16500016, descr=<Guard0x450b4c0>) [p1, p0]
+283: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+287: guard_nonnull_class(p3, 16470384, descr=<Guard0x450b520>) [p1, p0]
+305: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+309: guard_nonnull_class(p5, 16470384, descr=<Guard0x450b580>) [p1, p0]
+327: guard_class(p1, 16437352, descr=<Guard0x4509340>) [p1, p0]
+346: p8 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+357: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x4509388>) [p1, p0]
+366: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+370: guard_not_invalidated(descr=<Guard0x45093d0>) [p1, p0]
+370: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+374: guard_nonnull_class(p11, 16470384, descr=<Guard0x450b5e0>) [p1, p0]
+392: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand64 AppRand66) from (cons AppRand64 AppRand66)')
+396: label(p10, p11, p3, p5, p13, descr=TargetToken(72853008))
debug_merge_point(0, 0, '(cons AppRand64 AppRand66) from (cons AppRand64 AppRand66)')
+424: guard_class(p13, 16437352, descr=<Guard0x450b640>) [p13, p5, p3, p11, p10]
+436: p15 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+447: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x4509418>) [p13, p5, p3, p11, p10]
+456: p17 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+460: guard_not_invalidated(descr=<Guard0x4509460>) [p13, p5, p3, p11, p10]
+460: p18 = getfield_gc_r(p13, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+464: guard_nonnull_class(p18, 16470384, descr=<Guard0x450b6a0>) [p13, p5, p3, p11, p10]
+482: p20 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand64 AppRand66) from (cons AppRand64 AppRand66)')
+486: p21 = new_with_vtable(descr=<SizeDescr 24>)
+530: setfield_gc(p21, p3, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+534: setfield_gc(p21, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+538: jump(p17, p18, p11, p21, p20, descr=TargetToken(72853008))
+576: --end of the loop--
[3e4c06a7437ff5c] jit-log-opt-loop}
[3e4c06a9b5e9e5d] {jit-backend
[3e4c06a9b6dba8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c40f
[3e4c06a9b6e664e] jit-backend-dump}
[3e4c06a9b6f3eee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c41d4 +0  2C000000
[3e4c06a9b6f5552] jit-backend-dump}
[3e4c06a9b6f98b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4755 +0  2C000000
[3e4c06a9b6fa6c6] jit-backend-dump}
[3e4c06a9b6fdd5b] {jit-backend-addr
bridge out of Guard 0x43dde20 has address 0x7ff2522c41d0 to 0x7ff2522c4750
       gc table: 0x7ff2522c40f0
    jump target: 0x7ff2522c41d0
         resops: 0x7ff2522c41de
       failures: 0x7ff2522c4750
            end: 0x7ff2522c49c4
[3e4c06a9b70034e] jit-backend-addr}
[3e4c06a9b703e27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c41fd +0  25060000
[3e4c06a9b704bde] jit-backend-dump}
[3e4c06a9b708220] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4206 +0  38060000
[3e4c06a9b708f70] jit-backend-dump}
[3e4c06a9b70c4c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4217 +0  43060000
[3e4c06a9b70d186] jit-backend-dump}
[3e4c06a9b7106c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c422c +0  4A060000
[3e4c06a9b7113da] jit-backend-dump}
[3e4c06a9b71482c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c423e +0  4E060000
[3e4c06a9b7154e0] jit-backend-dump}
[3e4c06a9b71886f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4293 +0  15060000
[3e4c06a9b719556] jit-backend-dump}
[3e4c06a9b71c8ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c42e4 +0  E0050000
[3e4c06a9b71d592] jit-backend-dump}
[3e4c06a9b720870] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c42f2 +0  EE050000
[3e4c06a9b721517] jit-backend-dump}
[3e4c06a9b724c5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4343 +0  D5050000
[3e4c06a9b72593c] jit-backend-dump}
[3e4c06a9b728d9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4351 +0  E3050000
[3e4c06a9b729a91] jit-backend-dump}
[3e4c06a9b72ce88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4429 +0  27050000
[3e4c06a9b72db45] jit-backend-dump}
[3e4c06a9b730ec7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c447a +0  F2040000
[3e4c06a9b731ba9] jit-backend-dump}
[3e4c06a9b734f10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c448f +0  F9040000
[3e4c06a9b735bd0] jit-backend-dump}
[3e4c06a9b738fd9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c44b6 +0  EE040000
[3e4c06a9b739ca8] jit-backend-dump}
[3e4c06a9b73d327] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bba0c +0  C0870000
[3e4c06a9b73e036] jit-backend-dump}
[3e4c06a9b742206] jit-backend}
[3e4c06a9b746117] {jit-log-opt-bridge
# bridge out of Guard 0x43dde20 with 133 ops
[i0, f1, f2, i3, i4, p5, p6, p7, i8, p9, p10, p11]
+246: i13 = float_eq(f1, 0.000000)
+267: guard_true(i13, descr=<Guard0x450b8e0>) [i0, f1, f2, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+273: i14 = int_is_true(i0)
+276: guard_false(i14, descr=<Guard0x4509610>) [i0, f1, f2, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+282: i15 = float_ne(f2, f2)
+293: guard_false(i15, descr=<Guard0x4509658>) [i0, f1, f2, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+299: i17 = float_ge(f2, -9223372036854775808.000000)
+314: guard_true(i17, descr=<Guard0x45096a0>) [i0, f1, f2, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+320: i19 = float_lt(f2, 9223372036854775808.000000)
+332: guard_false(i19, descr=<Guard0x45096e8>) [i0, f1, f2, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+338: p21 = call_r(ConstClass(fromint), i4, descr=<Callr 8 i EF=3>)
+408: guard_no_exception(descr=<Guard0x450b940>) [p21, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+430: p24 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr23), p21, descr=<Callr 8 rr EF=4>)
+489: guard_no_exception(descr=<Guard0x450b9a0>) [p24, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+504: i25 = getfield_gc_i(p24, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+508: i27 = int_gt(i25, 2)
+512: guard_true(i27, descr=<Guard0x4509730>) [p24, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+518: guard_not_invalidated(descr=<Guard0x4509778>) [p24, i3, i8, p9, p10, i4, p5, p6, p7, p11]
debug_merge_point(0, 0, '(let ([loop4976 (lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))][AppRand20 (square one)]) (let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1)))')
debug_merge_point(0, 0, '(lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))')
debug_merge_point(0, 0, '(square one)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+518: p29 = call_r(ConstClass(rbigint.mul), p24, p24, descr=<Callr 8 rr EF=4>)
+584: guard_no_exception(descr=<Guard0x450ba00>) [p29, p24, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+599: i30 = getfield_gc_i(p29, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+603: i32 = int_gt(i30, 2)
+607: guard_true(i32, descr=<Guard0x45097c0>) [p29, p24, i3, i8, p9, p10, i4, p5, p6, p7, p11]
debug_merge_point(0, 0, '(let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1))')
debug_merge_point(0, 0, '(square-root (quotient AppRand20 2))')
+620: i35 = getarrayitem_gc_i(ConstPtr(ptr33), 0, descr=<ArrayS 8>)
+624: p36 = new_array_clear(i30, descr=<ArrayS 8>)
+728: p37 = new_with_vtable(descr=<SizeDescr 32>)
+769: setfield_gc(p37, i30, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+773: setfield_gc(p37, p36, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+777: i39 = call_i(ConstClass(_inplace_divrem1), p37, p29, i35, descr=<Calli 8 rri EF=5>)
+806: setfield_gc(p37, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+814: guard_no_exception(descr=<Guard0x450ba60>) [p29, i39, p37, p24, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+829: call_n(ConstClass(rbigint._normalize), p37, descr=<Callv 0 r EF=5>)
+895: guard_no_exception(descr=<Guard0x450bac0>) [p29, i39, p37, p24, i3, i8, p9, p10, i4, p5, p6, p7, p11]
+910: i42 = int_is_true(i39)
+910: i43 = getfield_gc_i(p29, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+921: i45 = int_ne(i43, 1)
+925: guard_false(i45, descr=<Guard0x4509808>) [p29, i39, p37, p24, i3, i8, p9, p10, i4, p5, p6, p7, p11]
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+938: i48 = call_i(ConstClass(rbigint.lt), p37, ConstPtr(ptr47), descr=<Calli 1 rr EF=0>)
+961: guard_false(i48, descr=<Guard0x450bb20>) [i48, p29, p37, p24, i3, i8, p9, p10, i4, p5, p6, p7, p11]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+970: p49 = new_with_vtable(descr=<SizeDescr 32>)
+1014: p50 = new_with_vtable(descr=<SizeDescr 32>)
+1032: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1043: setfield_gc(p50, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1047: p53 = new_with_vtable(descr=<SizeDescr 16>)
+1058: setfield_gc(p53, p37, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1069: setfield_gc(p50, p53, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1073: p54 = new_with_vtable(descr=<SizeDescr 48>)
+1084: p55 = new_with_vtable(descr=<SizeDescr 32>)
+1095: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1099: setfield_gc(p55, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1107: setfield_gc(p55, p53, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1111: p58 = new_with_vtable(descr=<SizeDescr 40>)
+1122: setfield_gc(p58, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1133: p59 = new_with_vtable(descr=<SizeDescr 32>)
+1144: p60 = new_with_vtable(descr=<SizeDescr 24>)
+1155: setfield_gc(p60, ConstPtr(ptr61), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1159: p62 = new_with_vtable(descr=<SizeDescr 16>)
+1177: setfield_gc(p62, p24, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1195: setfield_gc(p60, p62, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1199: setfield_gc(p59, p60, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1203: p63 = new_with_vtable(descr=<SizeDescr 32>)
+1214: setfield_gc(p63, ConstPtr(ptr64), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1225: setfield_gc(p63, ConstPtr(ptr65), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1229: setfield_gc(p63, p62, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1233: setfield_gc(p59, p63, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1237: p66 = new_with_vtable(descr=<SizeDescr 16>)
+1248: setfield_gc(p66, p29, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1252: setfield_gc(p59, p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1256: setfield_gc(p58, p59, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1260: p67 = new_with_vtable(descr=<SizeDescr 40>)
+1271: setfield_gc(p67, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1275: p68 = new_with_vtable(descr=<SizeDescr 40>)
+1286: setfield_gc(p68, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1297: p69 = new_with_vtable(descr=<SizeDescr 16>)
+1308: setfield_gc(p69, i4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1312: setfield_gc(p68, p69, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+1316: setfield_gc(p68, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+1327: setfield_gc(p68, p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+1338: setfield_gc(p67, p68, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1342: p70 = new_with_vtable(descr=<SizeDescr 48>)
+1353: setfield_gc(p70, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1357: setfield_gc(p70, p7, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1361: setfield_gc(p70, p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1379: setfield_gc(p70, ConstPtr(ptr71), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1383: p72 = new_with_vtable(descr=<SizeDescr 24>)
+1395: setfield_gc(p72, p9, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1406: p73 = new_with_vtable(descr=<SizeDescr 24>)
+1417: setfield_gc(p73, i8, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+1421: p74 = new_with_vtable(descr=<SizeDescr 24>)
+1432: setfield_gc(p74, i3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+1450: setfield_gc(p74, ConstPtr(ptr75), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+1454: setfield_gc(p73, p74, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+1458: setfield_gc(p72, p73, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1462: setfield_gc(p70, p72, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1466: setfield_gc(p67, p70, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1477: setfield_gc(p67, ConstPtr(ptr76), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1481: setfield_gc(p58, p67, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1492: setfield_gc(p58, ConstPtr(ptr77), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1496: p78 = new_with_vtable(descr=<SizeDescr 40>)
+1507: setfield_gc(p78, ConstPtr(ptr79), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1518: setfield_gc(p78, ConstPtr(ptr80), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1522: setfield_gc(p78, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1530: setfield_gc(p78, p53, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1534: setfield_gc(p49, p50, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1545: setfield_gc(p49, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1553: setfield_gc(p49, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1561: setfield_gc(p54, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1572: setfield_gc(p54, p55, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1576: setfield_gc(p54, p58, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1587: setfield_gc(p54, ConstPtr(ptr84), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1591: setfield_gc(p54, p78, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1595: jump(p49, p54, descr=TargetToken(69318064))
+1632: --end of the loop--
[3e4c06a9b7b189d] jit-log-opt-bridge}
[3e4c06aa77ae5bd] {jit-backend
[3e4c06aa7855df9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4b60 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C7204000048FF0425702D610449BBE0492C52F27F000066410F2E037B044883FD000F85000000004885FF0F850000000066450F2EED7B044883FD000F850000000049BB184A2C52F27F000066450F2E2B0F820000000066450F2E6B187B044883FD000F82000000004C89A53801000048899D400100004C89AD480100004C89B5500100004C89FF49BB484A2C52F27F00004C895D2041BBD098A90041FFD3488B0C258893F900488B69F8F64504010F85E803000048C745200000000048833C2540B35F01000F85000000004C8B2584FEFFFF4C89E74889C649BB684A2C52F27F00004C895D2041BBE0F1A90041FFD3488B0C258893F900488B69F8F64504010F85A903000048C745200000000048833C2540B35F01000F85000000004C8B60184983FC020F8E00000000488985580100004889C74889C649BBA84A2C52F27F00004C895D2041BB40DFA90041FFD3488B0C258893F900488B69F8F64504010F855C03000048C745200000000048833C2540B35F01000F85000000004C8B78184983FF020F8E00000000488985600100004889C74889C649BBD84A2C52F27F00004C895D2041BB40DFA90041FFD3488B0C258893F900488B69F8F64504010F850F03000048C745200000000048833C2540B35F01000F85000000004C8B78184983FF020F8E000000004C8B3DA7FDFFFF48898568010000488BBD600100004C89FE49BB084B2C52F27F00004C895D2041BB40DFA90041FFD3488B0C258893F900488B69F8F64504010F85B702000048C745200000000048833C2540B35F01000F85000000004C8B78184983FF020F8E000000004C8B3D55FDFFFF4989C44889C74C89FE41BB3096A90041FFD3480FB6C04885C00F8500000000488B0C25F091F900488D91B8010000483B14251092F9000F876102000048891425F091F90048C701901A0100488D512048C70240B40000488B0508FDFFFF488942084C8B3D05FDFFFF4C897A104C8D7A2049C707B84700004D8967084C897A184D8D671049C70424A8160000498D5C243048C703301901004889430848C74310020000004C897B184C8D6B2049C74500101100004C8BB5300100004D897508498D7D2848C707700B01004C8D572049C702100A01004D8D4A1849C701100A0100498941084D8D411849C700B8470000488BB558010000498970084D8941104D894A084D8D481049C701B84700004C8B85600100004D8941084D894A104C8957084D8D511049C702B84700004C8B8D680100004D894A084C8957104C897F1849897D10498D7A1048C707C81800004C8977084C8B95480100004C8957104C8B95400100004C8957184C8B1508FCFFFF4C8957204C8B95380100004C8957284C8D573849C702B84700004C8B8D500100004D894A084C89573049897D18488B3DDCFBFFFF49897D20498D7A1048C707E0C5000048894708488B05CAFBFFFF4889471048C74718020000004C897F204889510848C741100100000048C74118020000004D8974240849895C24104D896C24184C8B2D98FBFFFF4D896C242049897C242848898D300100004C89A53801000049BBA09A2A52F27F000041FFE30F1F0048C7442408FFFFFF0049BBD0492C52F27F00004C895D204D8D9B2039FEFF41FFD3E968FBFFFF49BB70822A52F27F000041FFD3E906FCFFFF49BB70822A52F27F000041FFD3E945FCFFFF49BB70822A52F27F000041FFD3E992FCFFFF49BB70822A52F27F000041FFD3E9DFFCFFFF49BB70822A52F27F000041FFD3E937FDFFFF49BB484B2C52F27F00004C895D204D8D9BA83FFEFF41FFD3E98AFDFFFFFF350DFAFFFF49BBE8492C52F27F000041534D8D9B283BFEFF41FFE3FF35F9F9FFFF49BBF8492C52F27F000041534D8D9B183BFEFF41FFE3FF35E5F9FFFF49BB084A2C52F27F000041534D8D9B083BFEFF41FFE3FF35D1F9FFFF4D8D5B0841534D8D9BF03AFEFF41FFE3FF35C3F9FFFF49BB384A2C52F27F000041534D8D9BD83AFEFF41FFE3FF35AFF9FFFF49BB584A2C52F27F000041534D8D9B5836FEFF41FFE3FF35A3F9FFFF49BB784A2C52F27F000041534D8D9B3836FEFF41FFE3FF358FF9FFFF49BB884A2C52F27F000041534D8D9B7835FEFF41FFE3FF357BF9FFFF49BB984A2C52F27F000041534D8D9B6835FEFF41FFE3FF3567F9FFFF49BBB84A2C52F27F000041534D8D9BF835FEFF41FFE3FF3553F9FFFF49BBC84A2C52F27F000041534D8D9B3835FEFF41FFE3FF353FF9FFFF49BBE84A2C52F27F000041534D8D9BC835FEFF41FFE3FF352BF9FFFF49BBF84A2C52F27F000041534D8D9B0835FEFF41FFE3FF351FF9FFFF49BB184B2C52F27F000041534D8D9B9835FEFF41FFE3FF350BF9FFFF49BB284B2C52F27F000041534D8D9BD834FEFF41FFE3FF35FFF8FFFF49BB384B2C52F27F000041534D8D9BC834FEFF41FFE3
[3e4c06aa785fa86] jit-backend-dump}
[3e4c06aa786c923] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4c34 +0  2C000000
[3e4c06aa786dffe] jit-backend-dump}
[3e4c06aa78725fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c50b5 +0  2C000000
[3e4c06aa78734e3] jit-backend-dump}
[3e4c06aa7876d46] {jit-backend-addr
bridge out of Guard 0x443fac0 has address 0x7ff2522c4c30 to 0x7ff2522c50b0
       gc table: 0x7ff2522c4b60
    jump target: 0x7ff2522c4c30
         resops: 0x7ff2522c4c3e
       failures: 0x7ff2522c50b0
            end: 0x7ff2522c5307
[3e4c06aa78791d0] jit-backend-addr}
[3e4c06aa787cc22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4c5d +0  EC040000
[3e4c06aa787da9a] jit-backend-dump}
[3e4c06aa78810df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4c66 +0  FF040000
[3e4c06aa7881df5] jit-backend-dump}
[3e4c06aa78852ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4c77 +0  0A050000
[3e4c06aa7885faf] jit-backend-dump}
[3e4c06aa788946d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4c8c +0  11050000
[3e4c06aa788a12a] jit-backend-dump}
[3e4c06aa788d609] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4c9e +0  15050000
[3e4c06aa788e2c0] jit-backend-dump}
[3e4c06aa7891642] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4d01 +0  CE040000
[3e4c06aa78922fc] jit-backend-dump}
[3e4c06aa78956d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4d52 +0  99040000
[3e4c06aa78963a3] jit-backend-dump}
[3e4c06aa7899690] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4d60 +0  A7040000
[3e4c06aa789a35c] jit-backend-dump}
[3e4c06aa789d829] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4db1 +0  8E040000
[3e4c06aa789e510] jit-backend-dump}
[3e4c06aa78a19f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4dbf +0  9C040000
[3e4c06aa78a2708] jit-backend-dump}
[3e4c06aa78a5b4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4e10 +0  67040000
[3e4c06aa78a685e] jit-backend-dump}
[3e4c06aa78a9b91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4e1e +0  75040000
[3e4c06aa78aa844] jit-backend-dump}
[3e4c06aa78adb90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4e7a +0  35040000
[3e4c06aa78ae83d] jit-backend-dump}
[3e4c06aa78b1b39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4e88 +0  43040000
[3e4c06aa78b27f3] jit-backend-dump}
[3e4c06aa78b5b38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c4eae +0  39040000
[3e4c06aa78b6820] jit-backend-dump}
[3e4c06aa78b9dc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c04b1 +0  7B470000
[3e4c06aa78baade] jit-backend-dump}
[3e4c06aa78becae] jit-backend}
[3e4c06aa78c2ac7] {jit-log-opt-bridge
# bridge out of Guard 0x443fac0 with 115 ops
[i0, f1, f2, i3, p4, p5, p6, p7, p8]
+230: i10 = float_eq(f1, 0.000000)
+251: guard_true(i10, descr=<Guard0x450bca0>) [i0, f1, f2, i3, p8, p4, p5, p6, p7]
+257: i11 = int_is_true(i0)
+260: guard_false(i11, descr=<Guard0x4509928>) [i0, f1, f2, i3, p8, p4, p5, p6, p7]
+266: i12 = float_ne(f2, f2)
+277: guard_false(i12, descr=<Guard0x4509970>) [i0, f1, f2, i3, p8, p4, p5, p6, p7]
+283: i14 = float_ge(f2, -9223372036854775808.000000)
+298: guard_true(i14, descr=<Guard0x45099b8>) [i0, f1, f2, i3, p8, p4, p5, p6, p7]
+304: i16 = float_lt(f2, 9223372036854775808.000000)
+316: guard_false(i16, descr=<Guard0x4509a00>) [i0, f1, f2, i3, p8, p4, p5, p6, p7]
+322: p18 = call_r(ConstClass(fromint), i3, descr=<Callr 8 i EF=3>)
+406: guard_no_exception(descr=<Guard0x450bd00>) [p18, i3, p8, p4, p5, p6, p7]
+428: p21 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr20), p18, descr=<Callr 8 rr EF=4>)
+487: guard_no_exception(descr=<Guard0x450bd60>) [p21, i3, p8, p4, p5, p6, p7]
+502: i22 = getfield_gc_i(p21, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+506: i24 = int_gt(i22, 2)
+510: guard_true(i24, descr=<Guard0x4509a48>) [p21, i3, p8, p4, p5, p6, p7]
+516: guard_not_invalidated(descr=<Guard0x4509a90>) [p21, i3, p8, p4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([one^25065 (square one5062)]) (let ([one^45068 (square one^25065)][AppRand41 (* one^25065 2)]) (let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8))))))')
debug_merge_point(0, 0, '(square one5062)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+516: p26 = call_r(ConstClass(rbigint.mul), p21, p21, descr=<Callr 8 rr EF=4>)
+582: guard_no_exception(descr=<Guard0x450bdc0>) [p26, p21, None, p8, p4, p5, p6, p7]
+597: i28 = getfield_gc_i(p26, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+601: i30 = int_gt(i28, 2)
+605: guard_true(i30, descr=<Guard0x4509ad8>) [p26, p21, None, p8, p4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([one^45068 (square one^25065)][AppRand41 (* one^25065 2)]) (let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8)))))')
debug_merge_point(0, 0, '(square one^25065)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+611: p32 = call_r(ConstClass(rbigint.mul), p26, p26, descr=<Callr 8 rr EF=4>)
+677: guard_no_exception(descr=<Guard0x450be20>) [p32, p26, p21, None, p8, p4, p5, p6, p7]
+692: i33 = getfield_gc_i(p32, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+696: i35 = int_gt(i33, 2)
+700: guard_true(i35, descr=<Guard0x4509b20>) [p32, p26, p21, None, p8, p4, p5, p6, p7]
debug_merge_point(0, 0, '(* one^25065 2)')
+713: p38 = call_r(ConstClass(rbigint.mul), p26, ConstPtr(ptr37), descr=<Callr 8 rr EF=4>)
+783: guard_no_exception(descr=<Guard0x450be80>) [p38, p32, p26, p21, None, p8, p4, p5, p6, p7]
+798: i39 = getfield_gc_i(p38, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+802: i41 = int_gt(i39, 2)
+806: guard_true(i41, descr=<Guard0x4509b68>) [p38, p32, p26, p21, None, p8, p4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([sqrt25071 (square-root AppRand41)]) (let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8))))')
debug_merge_point(0, 0, '(square-root AppRand41)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+819: i44 = call_i(ConstClass(rbigint.lt), p38, ConstPtr(ptr43), descr=<Calli 1 rr EF=0>)
+841: guard_false(i44, descr=<Guard0x450bee0>) [i44, p38, p32, p26, p21, None, p8, p4, p5, p6, p7]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+850: p45 = new_with_vtable(descr=<SizeDescr 32>)
+894: p46 = new_with_vtable(descr=<SizeDescr 32>)
+912: setfield_gc(p46, ConstPtr(ptr47), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+923: setfield_gc(p46, ConstPtr(ptr48), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+927: p49 = new_with_vtable(descr=<SizeDescr 16>)
+938: setfield_gc(p49, p38, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+942: setfield_gc(p46, p49, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+946: p50 = new_with_vtable(descr=<SizeDescr 48>)
+958: p51 = new_with_vtable(descr=<SizeDescr 32>)
+970: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+974: setfield_gc(p51, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+982: setfield_gc(p51, p49, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+986: p54 = new_with_vtable(descr=<SizeDescr 40>)
+998: setfield_gc(p54, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1009: p55 = new_with_vtable(descr=<SizeDescr 32>)
+1020: p56 = new_with_vtable(descr=<SizeDescr 24>)
+1031: p57 = new_with_vtable(descr=<SizeDescr 24>)
+1042: setfield_gc(p57, ConstPtr(ptr58), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1046: p59 = new_with_vtable(descr=<SizeDescr 16>)
+1057: setfield_gc(p59, p21, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1068: setfield_gc(p57, p59, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1072: setfield_gc(p56, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1076: p60 = new_with_vtable(descr=<SizeDescr 16>)
+1087: setfield_gc(p60, p26, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1098: setfield_gc(p56, p60, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1102: setfield_gc(p55, p56, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1106: p61 = new_with_vtable(descr=<SizeDescr 16>)
+1117: setfield_gc(p61, p32, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1128: setfield_gc(p55, p61, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1132: setfield_gc(p55, p49, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1136: setfield_gc(p54, p55, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1140: p62 = new_with_vtable(descr=<SizeDescr 56>)
+1151: setfield_gc(p62, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1155: setfield_gc(p62, p6, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1166: setfield_gc(p62, p5, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1184: setfield_gc(p62, ConstPtr(ptr63), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1188: setfield_gc(p62, p4, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+1199: p64 = new_with_vtable(descr=<SizeDescr 16>)
+1210: setfield_gc(p64, p8, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1221: setfield_gc(p62, p64, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+1225: setfield_gc(p54, p62, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1236: setfield_gc(p54, ConstPtr(ptr65), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1240: p66 = new_with_vtable(descr=<SizeDescr 40>)
+1251: setfield_gc(p66, ConstPtr(ptr67), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1262: setfield_gc(p66, ConstPtr(ptr68), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1266: setfield_gc(p66, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1274: setfield_gc(p66, p49, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1278: setfield_gc(p45, p46, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1282: setfield_gc(p45, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1290: setfield_gc(p45, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1298: setfield_gc(p50, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1303: setfield_gc(p50, p51, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1308: setfield_gc(p50, p54, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1320: setfield_gc(p50, ConstPtr(ptr72), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1325: setfield_gc(p50, p66, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1330: jump(p45, p50, descr=TargetToken(69318064))
+1360: --end of the loop--
[3e4c06aa792d251] jit-log-opt-bridge}
[3e4c06ab2815ab9] {jit-backend
[3e4c06ab28e6310] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c
[3e4c06ab28f2953] jit-backend-dump}
[3e4c06ab28ff956] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5694 +0  2C000000
[3e4c06ab2900f7a] jit-backend-dump}
[3e4c06ab29053b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5c75 +0  2C000000
[3e4c06ab290624b] jit-backend-dump}
[3e4c06ab2909a27] {jit-backend-addr
bridge out of Guard 0x4508a40 has address 0x7ff2522c5690 to 0x7ff2522c5c70
       gc table: 0x7ff2522c5550
    jump target: 0x7ff2522c5690
         resops: 0x7ff2522c569e
       failures: 0x7ff2522c5c70
            end: 0x7ff2522c6025
[3e4c06ab290bec0] jit-backend-addr}
[3e4c06ab290f73b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c56ab +0  82060000
[3e4c06ab291056d] jit-backend-dump}
[3e4c06ab2914251] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c56bf +0  A6060000
[3e4c06ab2914ef5] jit-backend-dump}
[3e4c06ab2918510] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c56d4 +0  AD060000
[3e4c06ab29191f1] jit-backend-dump}
[3e4c06ab291c6b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c56eb +0  B2060000
[3e4c06ab291d362] jit-backend-dump}
[3e4c06ab2920667] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c56f9 +0  C0060000
[3e4c06ab2921312] jit-backend-dump}
[3e4c06ab29245fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5710 +0  C5060000
[3e4c06ab29252a9] jit-backend-dump}
[3e4c06ab292860d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5724 +0  CD060000
[3e4c06ab29292ae] jit-backend-dump}
[3e4c06ab292c58b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5738 +0  D5060000
[3e4c06ab292d248] jit-backend-dump}
[3e4c06ab2930563] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c574b +0  DE060000
[3e4c06ab2931201] jit-backend-dump}
[3e4c06ab29344db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c57d5 +0  70060000
[3e4c06ab2935182] jit-backend-dump}
[3e4c06ab2938416] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c57e3 +0  7E060000
[3e4c06ab2939104] jit-backend-dump}
[3e4c06ab293c3bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c583f +0  3E060000
[3e4c06ab293d06a] jit-backend-dump}
[3e4c06ab2940338] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c584d +0  4C060000
[3e4c06ab2940fcd] jit-backend-dump}
[3e4c06ab29442c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c58a9 +0  0C060000
[3e4c06ab2944f6a] jit-backend-dump}
[3e4c06ab29482bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c58b7 +0  1A060000
[3e4c06ab2948fce] jit-backend-dump}
[3e4c06ab294c2ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c590c +0  E1050000
[3e4c06ab294cf56] jit-backend-dump}
[3e4c06ab2950200] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c591a +0  EF050000
[3e4c06ab2950ee4] jit-backend-dump}
[3e4c06ab29541ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5944 +0  E1050000
[3e4c06ab2954ea6] jit-backend-dump}
[3e4c06ab2958199] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c599d +0  A4050000
[3e4c06ab2958e46] jit-backend-dump}
[3e4c06ab295c0f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c59ab +0  B2050000
[3e4c06ab295cda6] jit-backend-dump}
[3e4c06ab2960087] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c59fc +0  7D050000
[3e4c06ab2960d2b] jit-backend-dump}
[3e4c06ab2964005] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5a0a +0  8B050000
[3e4c06ab2964cd4] jit-backend-dump}
[3e4c06ab2967f53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5a24 +0  8D050000
[3e4c06ab2968c00] jit-backend-dump}
[3e4c06ab296beed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5a79 +0  54050000
[3e4c06ab296cb85] jit-backend-dump}
[3e4c06ab296fe1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5a87 +0  62050000
[3e4c06ab2970ab4] jit-backend-dump}
[3e4c06ab2973d8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c5aad +0  58050000
[3e4c06ab2974a5a] jit-backend-dump}
[3e4c06ab2977f58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c2c9f +0  ED290000
[3e4c06ab2978c74] jit-backend-dump}
[3e4c06ab297cdd3] jit-backend}
[3e4c06ab2980d23] {jit-log-opt-bridge
# bridge out of Guard 0x4508a40 with 146 ops
[i0, p1, p2, p3, p4, p5]
+342: guard_false(i0, descr=<Guard0x45ce080>) [i0, p1, p2, p3, p4, p5]
+351: guard_not_invalidated(descr=<Guard0x4509d60>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 (loop4937 d) g)')
debug_merge_point(0, 0, 'g')
+351: p6 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+362: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x4509da8>) [i0, p1, p2, p3, p4, p5]
+371: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+375: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([loop5074 (lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))][AppRand58 (- sqrt25071 one5062)][AppRand59 (* 6 one5062)][AppRand60 (* 4 sqrt25071)]) (let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8)))')
+379: guard_class(p9, 16437896, descr=<Guard0x4509df0>) [i0, p1, p2, p3, p4, p5]
+392: p11 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+396: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x45ce0e0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(lambda (y5076 a5078 x5080) (let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))))')
+415: guard_class(p8, 16500016, descr=<Guard0x4509e38>) [i0, p1, p2, p3, p4, p5]
+429: p14 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+434: p15 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+439: guard_class(p15, 16499664, descr=<Guard0x4509e80>) [i0, p1, p2, p3, p4, p5]
+452: p17 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+456: p18 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+460: guard_class(p18, 16499664, descr=<Guard0x4509ec8>) [i0, p1, p2, p3, p4, p5]
+472: p20 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+476: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+480: guard_class(p21, 16505296, descr=<Guard0x4509f10>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(- sqrt25071 one5062)')
+492: guard_nonnull_class(p20, ConstClass(W_Bignum), descr=<Guard0x45ce140>) [i0, p1, p2, p3, p4, p5]
+511: p24 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+515: p26 = call_r(ConstClass(rbigint.sub), p2, p24, descr=<Callr 8 rr EF=4>)
+634: guard_no_exception(descr=<Guard0x45ce1a0>) [p26, p20, p17, p14, p21, p8, p9, p11, None, p2, None, None, None]
+649: i28 = getfield_gc_i(p26, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+653: i30 = int_gt(i28, 2)
+657: guard_true(i30, descr=<Guard0x4509f58>) [p26, p20, p17, p14, p21, p8, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(* 6 one5062)')
+670: p33 = call_r(ConstClass(rbigint.mul), ConstPtr(ptr32), p24, descr=<Callr 8 rr EF=4>)
+740: guard_no_exception(descr=<Guard0x45ce200>) [p33, p26, p20, p17, p14, p21, p8, p9, p11, None, p2, None, None, None]
+755: i34 = getfield_gc_i(p33, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+759: i36 = int_gt(i34, 2)
+763: guard_true(i36, descr=<Guard0x4509fa0>) [p33, p26, p20, p17, p14, p21, p8, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(* 4 sqrt25071)')
+776: p39 = call_r(ConstClass(rbigint.mul), ConstPtr(ptr38), p2, descr=<Callr 8 rr EF=4>)
+846: guard_no_exception(descr=<Guard0x45ce260>) [p39, p33, p26, p20, p17, p14, p21, p8, p9, p11, None, p2, None, None, None]
+861: i40 = getfield_gc_i(p39, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+865: i42 = int_gt(i40, 2)
+869: guard_true(i42, descr=<Guard0x45d8020>) [p39, p33, p26, p20, p17, p14, p21, p8, p9, p11, None, p2, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand61 (- AppRand59 AppRand60)]) (loop5074 AppRand58 AppRand61 8))')
debug_merge_point(0, 0, '(- AppRand59 AppRand60)')
+875: p44 = call_r(ConstClass(rbigint.sub), p33, p39, descr=<Callr 8 rr EF=4>)
+945: guard_no_exception(descr=<Guard0x45ce2c0>) [p44, p39, p33, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
+960: i45 = getfield_gc_i(p44, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+964: i47 = int_gt(i45, 2)
+968: guard_true(i47, descr=<Guard0x45d8068>) [p44, p39, p33, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(loop5074 AppRand58 AppRand61 8)')
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 AppRand58 AppRand61 8)')
debug_merge_point(0, 0, '(= y5076 0)')
+981: i50 = call_i(ConstClass(rbigint.eq), p26, ConstPtr(ptr49), descr=<Calli 1 rr EF=0>)
+1007: guard_false(i50, descr=<Guard0x45ce320>) [i50, p44, None, None, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1016: p52 = call_r(ConstClass(rbigint.mul), p26, p26, descr=<Callr 8 rr EF=4>)
+1090: guard_no_exception(descr=<Guard0x45ce380>) [p52, p44, None, None, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
+1105: i53 = getfield_gc_i(p52, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1109: i55 = int_gt(i53, 2)
+1113: guard_true(i55, descr=<Guard0x45d80b0>) [p52, p44, None, None, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1119: p57 = call_r(ConstClass(rbigint.mul), p52, p52, descr=<Callr 8 rr EF=4>)
+1185: guard_no_exception(descr=<Guard0x45ce3e0>) [p57, p52, p44, None, None, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
+1200: i58 = getfield_gc_i(p57, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1204: i60 = int_gt(i58, 2)
+1208: guard_true(i60, descr=<Guard0x45d80f8>) [p57, p52, p44, None, None, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+1214: guard_nonnull_class(p14, ConstClass(W_Bignum), descr=<Guard0x45ce440>) [p57, p52, p44, None, None, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
+1240: p62 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1244: p64 = call_r(ConstClass(rbigint.sub), p62, p57, descr=<Callr 8 rr EF=4>)
+1310: guard_no_exception(descr=<Guard0x45ce4a0>) [p64, p57, None, p44, None, None, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
+1325: i65 = getfield_gc_i(p64, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1329: i67 = int_gt(i65, 2)
+1333: guard_true(i67, descr=<Guard0x45d8140>) [p64, p57, None, p44, None, None, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1346: i70 = call_i(ConstClass(rbigint.lt), p64, ConstPtr(ptr69), descr=<Calli 1 rr EF=0>)
+1368: guard_false(i70, descr=<Guard0x45ce500>) [i70, p64, None, None, p44, None, None, p26, p20, p17, p14, p21, None, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1377: p71 = new_with_vtable(descr=<SizeDescr 32>)
+1421: p72 = new_with_vtable(descr=<SizeDescr 32>)
+1439: setfield_gc(p72, ConstPtr(ptr73), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1450: setfield_gc(p72, ConstPtr(ptr74), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1454: p75 = new_with_vtable(descr=<SizeDescr 16>)
+1465: setfield_gc(p75, p64, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1469: setfield_gc(p72, p75, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1473: p76 = new_with_vtable(descr=<SizeDescr 48>)
+1485: p77 = new_with_vtable(descr=<SizeDescr 32>)
+1497: setfield_gc(p77, ConstPtr(ptr78), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1501: setfield_gc(p77, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1509: setfield_gc(p77, p75, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1513: p80 = new_with_vtable(descr=<SizeDescr 40>)
+1524: setfield_gc(p80, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1535: p81 = new_with_vtable(descr=<SizeDescr 40>)
+1546: p82 = new_with_vtable(descr=<SizeDescr 48>)
+1557: setfield_gc(p82, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1575: setfield_gc(p82, ConstPtr(ptr83), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1579: setfield_gc(p82, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1590: setfield_gc(p82, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1601: setfield_gc(p82, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1612: setfield_gc(p81, p82, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1616: p84 = new_with_vtable(descr=<SizeDescr 16>)
+1627: setfield_gc(p84, p26, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1638: setfield_gc(p81, p84, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+1642: p85 = new_with_vtable(descr=<SizeDescr 16>)
+1653: setfield_gc(p85, p44, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1664: setfield_gc(p81, p85, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+1675: setfield_gc(p81, ConstPtr(ptr86), descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+1679: setfield_gc(p80, p81, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1683: setfield_gc(p80, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1701: setfield_gc(p80, ConstPtr(ptr87), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1705: p88 = new_with_vtable(descr=<SizeDescr 40>)
+1716: setfield_gc(p88, ConstPtr(ptr89), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1727: setfield_gc(p88, ConstPtr(ptr90), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1731: setfield_gc(p88, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1739: setfield_gc(p88, p75, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1750: setfield_gc(p76, ConstPtr(ptr92), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1755: setfield_gc(p76, p77, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1760: setfield_gc(p76, p80, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1765: setfield_gc(p76, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1770: setfield_gc(p71, p72, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1774: setfield_gc(p71, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1782: setfield_gc(p71, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1790: setfield_gc(p76, p88, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1795: jump(p71, p76, descr=TargetToken(69318064))
+1824: --end of the loop--
[3e4c06ab2a014bd] jit-log-opt-bridge}
[3e4c06ab35f2213] {jit-backend
[3e4c06ab36df928] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c
[3e4c06ab36ebbaa] jit-backend-dump}
[3e4c06ab36f7d8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6364 +0  2C000000
[3e4c06ab36f9408] jit-backend-dump}
[3e4c06ab36fd832] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6945 +0  2C000000
[3e4c06ab36fe69e] jit-backend-dump}
[3e4c06ab3701c26] {jit-backend-addr
bridge out of Guard 0x43ba260 has address 0x7ff2522c6360 to 0x7ff2522c6940
       gc table: 0x7ff2522c6250
    jump target: 0x7ff2522c6360
         resops: 0x7ff2522c636e
       failures: 0x7ff2522c6940
            end: 0x7ff2522c6cd2
[3e4c06ab3704085] jit-backend-addr}
[3e4c06ab37078aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6393 +0  7F060000
[3e4c06ab370866e] jit-backend-dump}
[3e4c06ab370bb1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c639d +0  91060000
[3e4c06ab370c844] jit-backend-dump}
[3e4c06ab370fb2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c63ab +0  9F060000
[3e4c06ab3710896] jit-backend-dump}
[3e4c06ab3713b42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c63cc +0  9A060000
[3e4c06ab371486a] jit-backend-dump}
[3e4c06ab3717afb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c63f8 +0  8A060000
[3e4c06ab3718820] jit-backend-dump}
[3e4c06ab371ba42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6454 +0  4A060000
[3e4c06ab371c767] jit-backend-dump}
[3e4c06ab371f9e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6462 +0  58060000
[3e4c06ab3720748] jit-backend-dump}
[3e4c06ab37239a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6480 +0  56060000
[3e4c06ab37246e5] jit-backend-dump}
[3e4c06ab3727a5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6498 +0  76060000
[3e4c06ab372879b] jit-backend-dump}
[3e4c06ab372b9e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c64b0 +0  7A060000
[3e4c06ab372c6ef] jit-backend-dump}
[3e4c06ab372f8e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c64be +0  88060000
[3e4c06ab37305e4] jit-backend-dump}
[3e4c06ab37337b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c64c8 +0  9A060000
[3e4c06ab37344b1] jit-backend-dump}
[3e4c06ab3737697] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c64da +0  A4060000
[3e4c06ab373838e] jit-backend-dump}
[3e4c06ab373b53c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c64ef +0  AB060000
[3e4c06ab373c22d] jit-backend-dump}
[3e4c06ab373f410] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6506 +0  B0060000
[3e4c06ab3740125] jit-backend-dump}
[3e4c06ab37432fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c653b +0  97060000
[3e4c06ab3744017] jit-backend-dump}
[3e4c06ab37471f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c65a5 +0  49060000
[3e4c06ab3747f12] jit-backend-dump}
[3e4c06ab374b110] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c65b3 +0  57060000
[3e4c06ab374be35] jit-backend-dump}
[3e4c06ab374f08f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6678 +0  AE050000
[3e4c06ab374fdb0] jit-backend-dump}
[3e4c06ab375300d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c66d0 +0  72050000
[3e4c06ab3753d0a] jit-backend-dump}
[3e4c06ab3756ed7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c66e5 +0  79050000
[3e4c06ab3757bd1] jit-backend-dump}
[3e4c06ab375adae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6737 +0  43050000
[3e4c06ab375bab1] jit-backend-dump}
[3e4c06ab375eca9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6745 +0  51050000
[3e4c06ab375f9dd] jit-backend-dump}
[3e4c06ab3762bd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c676b +0  47050000
[3e4c06ab3763906] jit-backend-dump}
[3e4c06ab3766e87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5f4d +0  0F040100
[3e4c06ab3767bb5] jit-backend-dump}
[3e4c06ab376be36] jit-backend}
[3e4c06ab376fd1f] {jit-log-opt-bridge
# bridge out of Guard 0x43ba260 with 144 ops
[p0, p1, p2, p3, p4, p5, p6, p7, p8]
+294: p9 = getfield_gc_r(p0, descr=<FieldP tuple2.item0 8 pure>)
+298: p10 = getfield_gc_r(p0, descr=<FieldP tuple2.item1 16 pure>)
+302: i11 = getfield_gc_i(p2, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+306: i12 = getfield_gc_i(p1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+318: i13 = int_ne(i11, i12)
+321: guard_false(i13, descr=<Guard0x45ce620>) [i12, i11, p9, p10, p2, p4, p7, p5, p8, p6, p3]
+327: i15 = int_lt(i11, 0)
+331: guard_false(i15, descr=<Guard0x45d82f0>) [i12, i11, p9, p10, p2, p4, p7, p5, p8, p6, p3]
+337: i16 = getfield_gc_i(p9, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+341: i18 = int_gt(i16, 2)
+345: guard_false(i18, descr=<Guard0x45d8338>) [i12, i11, p9, p10, p2, p4, p7, p5, p8, p6, p3]
+351: i20 = call_i(ConstClass(rbigint._toint_helper), p9, descr=<Calli 8 r EF=4>)
+363: p22 = guard_exception(ConstClass(OverflowError), descr=<Guard0x45ce680>) [p9, i20, p2, p4, p7, p5, p8, p6, p3]
+408: guard_class(p3, ConstClass(W_Bignum), descr=<Guard0x45ce6e0>) [p3, p9, p2, p4, p7, p5, p8, p6, None]
+428: p25 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+432: p27 = call_r(ConstClass(rbigint.sub), p25, p9, descr=<Callr 8 rr EF=4>)
+505: guard_no_exception(descr=<Guard0x45ce740>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
+520: i28 = getfield_gc_i(p27, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+524: i30 = int_gt(i28, 2)
+528: guard_true(i30, descr=<Guard0x45d8380>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
+534: p31 = getfield_gc_r(p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+545: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x45ce7a0>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
debug_merge_point(0, 0, '(* 2 x4983)')
+564: guard_not_invalidated(descr=<Guard0x45d83c8>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
+564: p33 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+575: guard_class(p33, 16500720, descr=<Guard0x45d8410>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
+588: p35 = getfield_gc_r(p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+592: guard_nonnull_class(p35, ConstClass(W_Fixnum), descr=<Guard0x45ce800>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
+612: i37 = getfield_gc_i(p35, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+617: i38 = int_is_true(i37)
+620: guard_true(i38, descr=<Guard0x45d8458>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
+626: i40 = int_mul_ovf(2, i37)
+630: guard_no_overflow(descr=<Guard0x45d84a0>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
+636: p41 = getfield_gc_r(p33, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+640: guard_class(p41, 16477696, descr=<Guard0x45d84e8>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
+654: p43 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+666: guard_value(p43, ConstPtr(ptr44), descr=<Guard0x45d8530>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
+675: p45 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+679: guard_nonnull_class(p45, ConstClass(W_Bignum), descr=<Guard0x45ce860>) [p27, p9, p2, p4, p7, p5, p8, p6, p3]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+698: p47 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+702: i49 = call_i(ConstClass(rbigint.eq), p47, p7, descr=<Calli 1 rr EF=0>)
+742: guard_false(i49, descr=<Guard0x45ce8c0>) [i49, i40, p27, p45, p41, p31, None, None, None, p7, None, p8, None, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+751: p51 = call_r(ConstClass(rbigint.add), p47, p7, descr=<Callr 8 rr EF=4>)
+842: guard_no_exception(descr=<Guard0x45ce920>) [p51, i40, p27, p45, p41, p31, None, None, None, p7, None, p8, None, None]
+857: i52 = getfield_gc_i(p51, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+861: i54 = int_gt(i52, 2)
+865: guard_true(i54, descr=<Guard0x45d8578>) [p51, i40, p27, p45, p41, p31, None, None, None, p7, None, p8, None, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+878: i57 = getarrayitem_gc_i(ConstPtr(ptr55), 0, descr=<ArrayS 8>)
+882: p58 = new_array_clear(i52, descr=<ArrayS 8>)
+975: p59 = new_with_vtable(descr=<SizeDescr 32>)
+1016: setfield_gc(p59, i52, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1020: setfield_gc(p59, p58, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1024: i61 = call_i(ConstClass(_inplace_divrem1), p59, p51, i57, descr=<Calli 8 rri EF=5>)
+1045: setfield_gc(p59, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1053: guard_no_exception(descr=<Guard0x45ce980>) [p51, i61, p59, i40, p27, p45, p41, p31, None, None, None, p7, None, p8, None, None]
+1068: call_n(ConstClass(rbigint._normalize), p59, descr=<Callv 0 r EF=5>)
+1141: guard_no_exception(descr=<Guard0x45ce9e0>) [p51, i61, p59, i40, p27, p45, p41, p31, None, None, None, p7, None, p8, None, None]
+1156: i64 = int_is_true(i61)
+1156: i65 = getfield_gc_i(p51, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1167: i67 = int_ne(i65, 1)
+1171: guard_false(i67, descr=<Guard0x45d85c0>) [p51, i61, p59, i40, p27, p45, p41, p31, None, None, None, p7, None, p8, None, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1177: p69 = call_r(ConstClass(rbigint.mul), p47, p7, descr=<Callr 8 rr EF=4>)
+1244: guard_no_exception(descr=<Guard0x45cea40>) [p69, p59, i40, p27, p45, p41, p31, None, None, None, p7, None, p8, None, None]
+1259: i70 = getfield_gc_i(p69, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1263: i72 = int_gt(i70, 2)
+1267: guard_true(i72, descr=<Guard0x45d8608>) [p69, p59, i40, p27, p45, p41, p31, None, None, None, p7, None, p8, None, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
+1273: p73 = getfield_gc_r(p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1280: i76 = call_i(ConstClass(rbigint.lt), p69, ConstPtr(ptr75), descr=<Calli 1 rr EF=0>)
+1302: guard_false(i76, descr=<Guard0x45ceaa0>) [i76, p69, p59, i40, p27, p45, p41, p31, None, None, None, p7, None, p8, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1311: p77 = new_with_vtable(descr=<SizeDescr 32>)
+1355: p78 = new_with_vtable(descr=<SizeDescr 32>)
+1373: setfield_gc(p78, ConstPtr(ptr79), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1384: setfield_gc(p78, ConstPtr(ptr80), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1388: p81 = new_with_vtable(descr=<SizeDescr 16>)
+1400: setfield_gc(p81, p69, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1405: setfield_gc(p78, p81, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1409: p82 = new_with_vtable(descr=<SizeDescr 48>)
+1421: p83 = new_with_vtable(descr=<SizeDescr 32>)
+1432: setfield_gc(p83, ConstPtr(ptr84), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1436: setfield_gc(p83, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1444: setfield_gc(p83, p81, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1448: p86 = new_with_vtable(descr=<SizeDescr 40>)
+1460: setfield_gc(p86, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1471: p87 = new_with_vtable(descr=<SizeDescr 32>)
+1482: p88 = new_with_vtable(descr=<SizeDescr 48>)
+1493: setfield_gc(p88, p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1504: setfield_gc(p88, p45, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1515: p89 = new_with_vtable(descr=<SizeDescr 16>)
+1526: setfield_gc(p89, p7, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1537: setfield_gc(p88, p89, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1541: p90 = new_with_vtable(descr=<SizeDescr 16>)
+1552: setfield_gc(p90, p27, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1563: setfield_gc(p88, p90, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1567: p91 = new_with_vtable(descr=<SizeDescr 16>)
+1578: setfield_gc(p91, i40, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1589: setfield_gc(p88, p91, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+1593: setfield_gc(p87, p88, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1597: p92 = new_with_vtable(descr=<SizeDescr 16>)
+1608: setfield_gc(p92, p59, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1619: setfield_gc(p87, p92, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1623: setfield_gc(p87, p81, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1627: setfield_gc(p86, p87, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1631: setfield_gc(p86, p8, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1649: setfield_gc(p86, ConstPtr(ptr93), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1653: p94 = new_with_vtable(descr=<SizeDescr 40>)
+1664: setfield_gc(p94, ConstPtr(ptr95), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1675: setfield_gc(p94, ConstPtr(ptr96), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1679: setfield_gc(p94, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1687: setfield_gc(p94, p81, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1691: setfield_gc(p82, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1695: setfield_gc(p77, p78, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1699: setfield_gc(p77, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1707: setfield_gc(p77, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1715: setfield_gc(p82, p83, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1719: setfield_gc(p82, p86, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1730: setfield_gc(p82, ConstPtr(ptr100), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1734: setfield_gc(p82, p94, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1738: jump(p77, p82, descr=TargetToken(69318064))
+1776: --end of the loop--
[3e4c06ab37e6ac4] jit-log-opt-bridge}
[3e4c06b52906868] {jit-backend
[3e4c06b52a113ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c6f
[3e4c06b52a1f77e] jit-backend-dump}
[3e4c06b52a2f2ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c70b4 +0  2C000000
[3e4c06b52a3088a] jit-backend-dump}
[3e4c06b52a34f25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c77b5 +0  2C000000
[3e4c06b52a35dcb] jit-backend-dump}
[3e4c06b52a396e8] {jit-backend-addr
bridge out of Guard 0x439e260 has address 0x7ff2522c70b0 to 0x7ff2522c77b0
       gc table: 0x7ff2522c6f70
    jump target: 0x7ff2522c70b0
         resops: 0x7ff2522c70be
       failures: 0x7ff2522c77b0
            end: 0x7ff2522c7c04
[3e4c06b52a3be5f] jit-backend-addr}
[3e4c06b52a3f74f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c70d7 +0  E1070000
[3e4c06b52a40565] jit-backend-dump}
[3e4c06b52a43fe8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c710c +0  E4070000
[3e4c06b52a44cee] jit-backend-dump}
[3e4c06b52a4825a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7125 +0  E7070000
[3e4c06b52a48efe] jit-backend-dump}
[3e4c06b52a4c2e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7136 +0  F2070000
[3e4c06b52a4cfe9] jit-backend-dump}
[3e4c06b52a5036c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c719c +0  A8070000
[3e4c06b52a51047] jit-backend-dump}
[3e4c06b52a543c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c71aa +0  B6070000
[3e4c06b52a55049] jit-backend-dump}
[3e4c06b52a583e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c71c9 +0  B3070000
[3e4c06b52a59070] jit-backend-dump}
[3e4c06b52a5c39a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c71d6 +0  C2070000
[3e4c06b52a5d02f] jit-backend-dump}
[3e4c06b52a603b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c722b +0  89070000
[3e4c06b52a6105f] jit-backend-dump}
[3e4c06b52a64392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7279 +0  57070000
[3e4c06b52a6503c] jit-backend-dump}
[3e4c06b52a68332] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7287 +0  65070000
[3e4c06b52a68fd3] jit-backend-dump}
[3e4c06b52a6c384] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c72a6 +0  62070000
[3e4c06b52a6d056] jit-backend-dump}
[3e4c06b52a70383] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c72c1 +0  63070000
[3e4c06b52a71024] jit-backend-dump}
[3e4c06b52a743c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c72d8 +0  68070000
[3e4c06b52a75063] jit-backend-dump}
[3e4c06b52a783c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c72ed +0  6F070000
[3e4c06b52a7905f] jit-backend-dump}
[3e4c06b52a7c3f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c72f6 +0  82070000
[3e4c06b52a7d0ae] jit-backend-dump}
[3e4c06b52a80480] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7359 +0  3B070000
[3e4c06b52a81133] jit-backend-dump}
[3e4c06b52a8450c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7367 +0  49070000
[3e4c06b52a851b3] jit-backend-dump}
[3e4c06b52a88585] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7371 +0  5B070000
[3e4c06b52a89242] jit-backend-dump}
[3e4c06b52a8c6ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c738f +0  59070000
[3e4c06b52a8d3c2] jit-backend-dump}
[3e4c06b52a90779] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c73b6 +0  4E070000
[3e4c06b52a9141d] jit-backend-dump}
[3e4c06b52a947a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7419 +0  07070000
[3e4c06b52a95447] jit-backend-dump}
[3e4c06b52a98825] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7427 +0  15070000
[3e4c06b52a994c3] jit-backend-dump}
[3e4c06b52a9c8df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c74f4 +0  64060000
[3e4c06b52a9d57a] jit-backend-dump}
[3e4c06b52aa0937] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7545 +0  2F060000
[3e4c06b52aa1600] jit-backend-dump}
[3e4c06b52aa49c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c755a +0  36060000
[3e4c06b52aa566a] jit-backend-dump}
[3e4c06b52aa899d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c75ac +0  00060000
[3e4c06b52aa963b] jit-backend-dump}
[3e4c06b52aac95c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c75ba +0  0E060000
[3e4c06b52aad612] jit-backend-dump}
[3e4c06b52ab09b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c75e0 +0  04060000
[3e4c06b52ab164e] jit-backend-dump}
[3e4c06b52ab4d45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b31db +0  D13E0100
[3e4c06b52ab59ef] jit-backend-dump}
[3e4c06b52ab9c86] jit-backend}
[3e4c06b52abdbac] {jit-log-opt-bridge
# bridge out of Guard 0x439e260 with 164 ops
[p0, p1, i2, p3, p4, p5, p6, p7]
i8 = save_exc_class()
p9 = save_exception()
restore_exception(i8, p9)
+342: p11 = guard_exception(ConstClass(OverflowError), descr=<Guard0x45cf340>) [p0, p1, i2, p3, p4, p7, p5, p6]
+387: guard_not_invalidated(descr=<Guard0x45cf3a0>) [p0, p1, None, None, p7, p5, p6]
debug_merge_point(0, 0, '(let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))')
+387: p13 = getfield_gc_r(p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+398: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x45cf400>) [p0, p1, None, None, p7, p5, p6]
debug_merge_point(0, 0, '(square AppRand15)')
+416: p15 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+427: guard_class(p15, 16500720, descr=<Guard0x45d8c80>) [p0, p1, None, None, p7, p5, p6]
+441: p17 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+445: guard_class(p17, 16477696, descr=<Guard0x45d8cc8>) [p0, p1, None, None, p7, p5, p6]
+458: p19 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+458: p21 = call_r(ConstClass(rbigint.mul), p1, p1, descr=<Callr 8 rr EF=4>)
+545: guard_no_exception(descr=<Guard0x45cf460>) [p21, p0, p13, p1, None, None, p7, p5, None]
+560: i22 = getfield_gc_i(p21, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+564: i24 = int_gt(i22, 2)
+568: guard_true(i24, descr=<Guard0x45d8d10>) [p21, p0, p13, p1, None, None, p7, p5, None]
debug_merge_point(0, 0, '(let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(* x4983 AppRand16)')
+574: p25 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+586: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x45cf4c0>) [p21, p0, p13, p1, None, None, p7, p5, None]
+605: i27 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+609: i28 = int_is_true(i27)
+612: guard_true(i28, descr=<Guard0x45d8d58>) [p21, p0, p13, p1, None, None, p7, p5, None]
+618: p30 = call_r(ConstClass(fromint), i27, descr=<Callr 8 i EF=3>)
+688: guard_no_exception(descr=<Guard0x45cf520>) [p30, p25, p21, p0, p13, p1, None, None, p7, p5, None]
+703: p32 = call_r(ConstClass(rbigint.mul), p30, p21, descr=<Callr 8 rr EF=4>)
+766: guard_no_exception(descr=<Guard0x45cf580>) [p32, p25, p21, p0, p13, p1, None, None, p7, p5, None]
+781: i33 = getfield_gc_i(p32, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+785: i35 = int_gt(i33, 2)
+789: guard_true(i35, descr=<Guard0x45d8da0>) [p32, p25, p21, p0, p13, p1, None, None, p7, p5, None]
debug_merge_point(0, 0, '(let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))')
debug_merge_point(0, 0, '(- t (quotient AppRand17 one))')
+795: p36 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+806: guard_nonnull_class(p36, ConstClass(W_Bignum), descr=<Guard0x45cf5e0>) [p32, p25, p21, p0, p13, p1, None, None, p7, p5, None]
+826: p38 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+844: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x45d8de8>) [p32, p25, p21, p0, p13, p1, None, None, p7, p5, None]
+853: p40 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+857: guard_nonnull_class(p40, ConstClass(W_Bignum), descr=<Guard0x45cf640>) [p32, p25, p21, p0, p13, p1, None, None, p7, p5, None]
+876: p42 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+880: i43 = getfield_gc_i(p42, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+884: i44 = getfield_gc_i(p42, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+888: i45 = int_is_zero(i44)
+891: guard_false(i45, descr=<Guard0x45d8e30>) [p32, p25, p21, p0, p13, p1, None, None, p7, p5, None]
+897: i46 = int_lt(i33, i43)
+900: guard_true(i46, descr=<Guard0x45d8e78>) [p32, p25, p21, p0, p13, p1, None, None, p7, p5, None]
+906: p47 = getfield_gc_r(p36, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+917: p50 = call_r(ConstClass(rbigint.sub), p47, ConstPtr(ptr49), descr=<Callr 8 rr EF=4>)
+990: guard_no_exception(descr=<Guard0x45cf6a0>) [p50, p36, p32, None, None, p0, p13, p1, None, None, p7, p5, None]
+1005: i51 = getfield_gc_i(p50, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1009: i53 = int_gt(i51, 2)
+1013: guard_true(i53, descr=<Guard0x45d8ec0>) [p50, p36, p32, None, None, p0, p13, p1, None, None, p7, p5, None]
debug_merge_point(0, 0, '(* 2 x4983)')
+1019: i55 = int_mul_ovf(2, i27)
+1023: guard_no_overflow(descr=<Guard0x45d8f08>) [p50, p36, p32, None, None, p0, p13, p1, None, None, p7, p5, None]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
+1029: p56 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1040: guard_nonnull_class(p56, ConstClass(W_Bignum), descr=<Guard0x45cf700>) [p50, p36, p32, None, None, p0, p13, p1, None, None, p7, p5, None]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+1059: p58 = getfield_gc_r(p56, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1063: i60 = call_i(ConstClass(rbigint.eq), p58, p7, descr=<Calli 1 rr EF=0>)
+1089: guard_false(i60, descr=<Guard0x45cf760>) [i60, i55, p50, p56, p17, None, None, None, None, None, p13, None, None, None, p7, p5, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+1098: p62 = call_r(ConstClass(rbigint.add), p58, p7, descr=<Callr 8 rr EF=4>)
+1182: guard_no_exception(descr=<Guard0x45cf7c0>) [p62, i55, p50, p56, p17, None, None, None, None, None, p13, None, None, None, p7, p5, None]
+1197: i63 = getfield_gc_i(p62, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1201: i65 = int_gt(i63, 2)
+1205: guard_true(i65, descr=<Guard0x45d8f50>) [p62, i55, p50, p56, p17, None, None, None, None, None, p13, None, None, None, p7, p5, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+1218: i68 = getarrayitem_gc_i(ConstPtr(ptr66), 0, descr=<ArrayS 8>)
+1222: p69 = new_array_clear(i63, descr=<ArrayS 8>)
+1319: p70 = new_with_vtable(descr=<SizeDescr 32>)
+1360: setfield_gc(p70, i63, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1364: setfield_gc(p70, p69, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1368: i72 = call_i(ConstClass(_inplace_divrem1), p70, p62, i68, descr=<Calli 8 rri EF=5>)
+1393: setfield_gc(p70, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1401: guard_no_exception(descr=<Guard0x45cf820>) [p62, i72, p70, i55, p50, p56, p17, None, None, None, None, None, p13, None, None, None, p7, p5, None]
+1416: call_n(ConstClass(rbigint._normalize), p70, descr=<Callv 0 r EF=5>)
+1482: guard_no_exception(descr=<Guard0x45cf880>) [p62, i72, p70, i55, p50, p56, p17, None, None, None, None, None, p13, None, None, None, p7, p5, None]
+1497: i75 = int_is_true(i72)
+1497: i76 = getfield_gc_i(p62, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1508: i78 = int_ne(i76, 1)
+1512: guard_false(i78, descr=<Guard0x45d8f98>) [p62, i72, p70, i55, p50, p56, p17, None, None, None, None, None, p13, None, None, None, p7, p5, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1518: p80 = call_r(ConstClass(rbigint.mul), p58, p7, descr=<Callr 8 rr EF=4>)
+1585: guard_no_exception(descr=<Guard0x45cf8e0>) [p80, p70, i55, p50, p56, p17, None, None, None, None, None, p13, None, None, None, p7, p5, None]
+1600: i81 = getfield_gc_i(p80, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1604: i83 = int_gt(i81, 2)
+1608: guard_true(i83, descr=<Guard0x45d8fe0>) [p80, p70, i55, p50, p56, p17, None, None, None, None, None, p13, None, None, None, p7, p5, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1621: i86 = call_i(ConstClass(rbigint.lt), p80, ConstPtr(ptr85), descr=<Calli 1 rr EF=0>)
+1643: guard_false(i86, descr=<Guard0x45cf940>) [i86, p80, p70, i55, p50, p56, p17, None, None, None, None, None, p13, None, None, None, p7, p5, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1652: p87 = new_with_vtable(descr=<SizeDescr 32>)
+1696: p88 = new_with_vtable(descr=<SizeDescr 32>)
+1714: setfield_gc(p88, ConstPtr(ptr89), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1725: setfield_gc(p88, ConstPtr(ptr90), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1729: p91 = new_with_vtable(descr=<SizeDescr 16>)
+1741: setfield_gc(p91, p80, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1745: setfield_gc(p88, p91, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1749: p92 = new_with_vtable(descr=<SizeDescr 48>)
+1760: p93 = new_with_vtable(descr=<SizeDescr 32>)
+1772: setfield_gc(p93, ConstPtr(ptr94), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1777: setfield_gc(p93, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1786: setfield_gc(p93, p91, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1791: p96 = new_with_vtable(descr=<SizeDescr 40>)
+1803: setfield_gc(p96, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1814: p97 = new_with_vtable(descr=<SizeDescr 32>)
+1825: p98 = new_with_vtable(descr=<SizeDescr 48>)
+1836: setfield_gc(p98, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1847: setfield_gc(p98, p56, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1858: p99 = new_with_vtable(descr=<SizeDescr 16>)
+1869: setfield_gc(p99, p7, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1880: setfield_gc(p98, p99, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1884: p100 = new_with_vtable(descr=<SizeDescr 16>)
+1895: setfield_gc(p100, p50, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1906: setfield_gc(p98, p100, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1910: p101 = new_with_vtable(descr=<SizeDescr 16>)
+1921: setfield_gc(p101, i55, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1925: setfield_gc(p98, p101, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+1929: setfield_gc(p97, p98, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1933: p102 = new_with_vtable(descr=<SizeDescr 16>)
+1944: setfield_gc(p102, p70, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1955: setfield_gc(p97, p102, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1959: setfield_gc(p97, p91, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1963: setfield_gc(p96, p97, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1967: setfield_gc(p96, p5, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1985: setfield_gc(p96, ConstPtr(ptr103), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1989: p104 = new_with_vtable(descr=<SizeDescr 40>)
+2000: setfield_gc(p104, ConstPtr(ptr105), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2011: setfield_gc(p104, ConstPtr(ptr106), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2015: setfield_gc(p104, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2023: setfield_gc(p104, p91, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2027: setfield_gc(p92, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2031: setfield_gc(p87, p88, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2035: setfield_gc(p87, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2043: setfield_gc(p87, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2051: setfield_gc(p92, p93, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2055: setfield_gc(p92, p96, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2066: setfield_gc(p92, ConstPtr(ptr110), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2070: setfield_gc(p92, p104, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2074: jump(p87, p92, descr=TargetToken(69318064))
+2112: --end of the loop--
[3e4c06b52b4715a] jit-log-opt-bridge}
[3e4c06b5573e3bc] {jit-backend
[3e4c06b5583a6d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c7f
[3e4c06b55849d6e] jit-backend-dump}
[3e4c06b558575d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c80f4 +0  2C000000
[3e4c06b55858c0e] jit-backend-dump}
[3e4c06b5585d43f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8895 +0  2C000000
[3e4c06b5585e384] jit-backend-dump}
[3e4c06b55861aa9] {jit-backend-addr
bridge out of Guard 0x43baec0 has address 0x7ff2522c80f0 to 0x7ff2522c8890
       gc table: 0x7ff2522c7f70
    jump target: 0x7ff2522c80f0
         resops: 0x7ff2522c80fe
       failures: 0x7ff2522c8890
            end: 0x7ff2522c8df9
[3e4c06b55863fea] jit-backend-addr}
[3e4c06b55867ba2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8110 +0  85080000
[3e4c06b558689f0] jit-backend-dump}
[3e4c06b5586c11a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c812f +0  9E080000
[3e4c06b5586ce4e] jit-backend-dump}
[3e4c06b558704b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8148 +0  A1080000
[3e4c06b55871184] jit-backend-dump}
[3e4c06b558746b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c815c +0  A9080000
[3e4c06b5587538e] jit-backend-dump}
[3e4c06b558787b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8173 +0  AE080000
[3e4c06b558794a4] jit-backend-dump}
[3e4c06b5587c88e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8188 +0  B5080000
[3e4c06b5587d570] jit-backend-dump}
[3e4c06b55880957] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8191 +0  C8080000
[3e4c06b55881629] jit-backend-dump}
[3e4c06b55884a54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c821a +0  5B080000
[3e4c06b55885732] jit-backend-dump}
[3e4c06b55888ba7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8228 +0  69080000
[3e4c06b5588987c] jit-backend-dump}
[3e4c06b5588ccb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c827d +0  30080000
[3e4c06b5588d98b] jit-backend-dump}
[3e4c06b55890d5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c828b +0  3E080000
[3e4c06b55891a57] jit-backend-dump}
[3e4c06b55894ee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c82aa +0  3B080000
[3e4c06b55895bcb] jit-backend-dump}
[3e4c06b5589908f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c830a +0  F7070000
[3e4c06b55899d6a] jit-backend-dump}
[3e4c06b5589d1f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8318 +0  05080000
[3e4c06b5589deee] jit-backend-dump}
[3e4c06b558a1344] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8371 +0  C8070000
[3e4c06b558a2006] jit-backend-dump}
[3e4c06b558a53dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c837f +0  D6070000
[3e4c06b558a60b1] jit-backend-dump}
[3e4c06b558a962c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c839e +0  D3070000
[3e4c06b558aa314] jit-backend-dump}
[3e4c06b558ad82a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c83ab +0  E2070000
[3e4c06b558ae4f3] jit-backend-dump}
[3e4c06b558b1930] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8400 +0  A9070000
[3e4c06b558b25fc] jit-backend-dump}
[3e4c06b558b5a52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c844e +0  77070000
[3e4c06b558b672d] jit-backend-dump}
[3e4c06b558b9b0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c845c +0  85070000
[3e4c06b558ba7ed] jit-backend-dump}
[3e4c06b558bdbfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c84b1 +0  4C070000
[3e4c06b558be8e7] jit-backend-dump}
[3e4c06b558c1cb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c84bf +0  5A070000
[3e4c06b558c299d] jit-backend-dump}
[3e4c06b558c5dea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c84c9 +0  6C070000
[3e4c06b558c6abf] jit-backend-dump}
[3e4c06b558c9f36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c84d2 +0  7F070000
[3e4c06b558cac27] jit-backend-dump}
[3e4c06b558ce0f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c84db +0  92070000
[3e4c06b558cedde] jit-backend-dump}
[3e4c06b558d2287] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8530 +0  59070000
[3e4c06b558d2f6b] jit-backend-dump}
[3e4c06b558d63d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c854c +0  59070000
[3e4c06b558d7093] jit-backend-dump}
[3e4c06b558da49c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8556 +0  6B070000
[3e4c06b558db193] jit-backend-dump}
[3e4c06b558de6e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8564 +0  79070000
[3e4c06b558df3b2] jit-backend-dump}
[3e4c06b558e6089] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8588 +0  71070000
[3e4c06b558e6f2f] jit-backend-dump}
[3e4c06b558ead67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c85e1 +0  34070000
[3e4c06b558eba54] jit-backend-dump}
[3e4c06b558ef08d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c85ef +0  42070000
[3e4c06b558efd56] jit-backend-dump}
[3e4c06b558f345c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c8640 +0  0D070000
[3e4c06b558f4144] jit-backend-dump}
[3e4c06b558f761d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c864e +0  1B070000
[3e4c06b558f82f5] jit-backend-dump}
[3e4c06b558fb870] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c866c +0  19070000
[3e4c06b558fc542] jit-backend-dump}
[3e4c06b558ff99e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c86c8 +0  D9060000
[3e4c06b55900689] jit-backend-dump}
[3e4c06b55903b99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c86d6 +0  E7060000
[3e4c06b55904834] jit-backend-dump}
[3e4c06b55907e3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c86fc +0  DD060000
[3e4c06b55908af9] jit-backend-dump}
[3e4c06b5590c37d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b77da +0  12090100
[3e4c06b5590d09c] jit-backend-dump}
[3e4c06b559115d6] jit-backend}
[3e4c06b5591558c] {jit-log-opt-bridge
# bridge out of Guard 0x43baec0 with 183 ops
[p0, p1, p2, p3, p4, p5]
+406: i6 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+410: i8 = int_gt(i6, 2)
+414: guard_true(i8, descr=<Guard0x45cfe80>) [p0, i6, p1, p2, p3, p4, p5]
+420: guard_not_invalidated(descr=<Guard0x45d9928>) [p0, i6, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))) from (* x4969 x4969)')
+420: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+431: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x45cff40>) [p0, i6, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(+ t2 (quotient AppRand51 one5062))')
+451: p11 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+463: guard_class(p11, 16478448, descr=<Guard0x45d98e0>) [p0, i6, p1, p2, p3, p4, p5]
+476: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+487: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x45d9898>) [p0, i6, p1, p2, p3, p4, p5]
+496: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+500: guard_nonnull_class(p15, ConstClass(W_Bignum), descr=<Guard0x45cfee0>) [p0, i6, p1, p2, p3, p4, p5]
+519: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+523: i18 = getfield_gc_i(p17, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+527: i19 = getfield_gc_i(p17, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+531: i20 = int_is_zero(i19)
+534: guard_false(i20, descr=<Guard0x45d9850>) [p0, i6, p1, p2, p3, p4, p5]
+540: i21 = int_lt(i6, i18)
+543: guard_true(i21, descr=<Guard0x45d97c0>) [p0, i6, p1, p2, p3, p4, p5]
+556: p24 = call_r(ConstClass(rbigint.add), p2, ConstPtr(ptr23), descr=<Callr 8 rr EF=4>)
+671: guard_no_exception(descr=<Guard0x45cfe20>) [p24, p0, p9, p1, p2, p3, p4, None]
+686: i26 = getfield_gc_i(p24, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+690: i28 = int_gt(i26, 2)
+694: guard_true(i28, descr=<Guard0x45d9778>) [p24, p0, p9, p1, p2, p3, p4, None]
debug_merge_point(0, 0, '(let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))')
debug_merge_point(0, 0, '(+ one5062 AppRand52)')
+700: p30 = call_r(ConstClass(rbigint.add), p17, p24, descr=<Callr 8 rr EF=4>)
+770: guard_no_exception(descr=<Guard0x45cfdc0>) [p30, p15, p24, p0, p9, p1, p2, p3, p4, None]
+785: i31 = getfield_gc_i(p30, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+789: i33 = int_gt(i31, 2)
+793: guard_true(i33, descr=<Guard0x45d9730>) [p30, p15, p24, p0, p9, p1, p2, p3, p4, None]
debug_merge_point(0, 0, '(let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))')
debug_merge_point(0, 0, '(* t3 a5078)')
+799: p34 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+810: guard_nonnull_class(p34, ConstClass(W_Bignum), descr=<Guard0x45cfca0>) [p30, p15, p24, p0, p9, p1, p2, p3, p4, None]
+830: p36 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+834: p38 = call_r(ConstClass(rbigint.mul), p1, p36, descr=<Callr 8 rr EF=4>)
+911: guard_no_exception(descr=<Guard0x45cfc40>) [p38, p34, p30, None, None, p0, p9, p1, p2, p3, p4, None]
+926: i39 = getfield_gc_i(p38, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+930: i41 = int_gt(i39, 2)
+934: guard_true(i41, descr=<Guard0x45d96a0>) [p38, p34, p30, None, None, p0, p9, p1, p2, p3, p4, None]
debug_merge_point(0, 0, '(* t2 t4)')
+940: p43 = call_r(ConstClass(rbigint.mul), p2, p30, descr=<Callr 8 rr EF=4>)
+1014: guard_no_exception(descr=<Guard0x45cfb80>) [p43, p38, None, p30, None, None, p0, p9, p1, p2, p3, p4, None]
+1029: i44 = getfield_gc_i(p43, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1033: i46 = int_gt(i44, 2)
+1037: guard_true(i46, descr=<Guard0x45d9658>) [p43, p38, None, p30, None, None, p0, p9, p1, p2, p3, p4, None]
debug_merge_point(0, 0, '(let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))')
debug_merge_point(0, 0, '(* x5080 AppRand54)')
+1043: p47 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+1054: guard_nonnull_class(p47, ConstClass(W_Fixnum), descr=<Guard0x45cfbe0>) [p43, p38, None, p30, None, None, p0, p9, p1, p2, p3, p4, None]
+1074: i49 = getfield_gc_i(p47, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1078: i50 = int_is_true(i49)
+1081: guard_true(i50, descr=<Guard0x45d95c8>) [p43, p38, None, p30, None, None, p0, p9, p1, p2, p3, p4, None]
+1087: p52 = call_r(ConstClass(fromint), i49, descr=<Callr 8 i EF=3>)
+1157: guard_no_exception(descr=<Guard0x45cfb20>) [p52, p47, p43, p38, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1172: p54 = call_r(ConstClass(rbigint.mul), p52, p43, descr=<Callr 8 rr EF=4>)
+1235: guard_no_exception(descr=<Guard0x45cfac0>) [p54, p47, p43, p38, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1250: i55 = getfield_gc_i(p54, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1254: i57 = int_gt(i55, 2)
+1258: guard_true(i57, descr=<Guard0x45d94f0>) [p54, p47, p43, p38, None, None, None, None, None, p9, None, p2, p3, p4, None]
debug_merge_point(0, 0, '(let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))')
debug_merge_point(0, 0, '(- AppRand53 AppRand55)')
+1264: p59 = call_r(ConstClass(rbigint.sub), p38, p54, descr=<Callr 8 rr EF=4>)
+1334: guard_no_exception(descr=<Guard0x45cfa60>) [p59, p54, None, p43, p38, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1349: i60 = getfield_gc_i(p59, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1353: i62 = int_gt(i60, 2)
+1357: guard_true(i62, descr=<Guard0x45d94a8>) [p59, p54, None, p43, p38, None, None, None, None, None, p9, None, p2, p3, p4, None]
debug_merge_point(0, 0, '(* 4 x5080)')
+1363: i64 = int_mul_ovf(4, i49)
+1367: guard_no_overflow(descr=<Guard0x45d9460>) [p59, p54, None, p43, p38, None, None, None, None, None, p9, None, p2, p3, p4, None]
debug_merge_point(0, 0, '(loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
+1373: i65 = int_lt(i60, i18)
+1376: guard_false(i65, descr=<Guard0x45d9418>) [p59, p54, None, p43, p38, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1382: i66 = int_eq(i60, i18)
+1385: guard_false(i66, descr=<Guard0x45d93d0>) [p59, p54, None, p43, p38, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1391: p68 = call_r(ConstClass(_x_divrem), p59, p17, descr=<Callr 8 rr EF=5>)
+1461: guard_no_exception(descr=<Guard0x45cffa0>) [p11, p4, p68, p17, p59, i64, None, None, None, None, None, None, None, None, None, None, None, p2, p3, None, None]
+1476: p69 = getfield_gc_r(p68, descr=<FieldP tuple2.item0 8 pure>)
+1480: p70 = getfield_gc_r(p68, descr=<FieldP tuple2.item1 16 pure>)
+1480: i71 = getfield_gc_i(p59, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1491: i72 = int_ne(i71, i19)
+1498: guard_false(i72, descr=<Guard0x45d9970>) [p11, p4, p68, p17, p59, i64, None, None, None, None, None, None, None, None, None, None, None, p2, p3, None, None]
+1504: i74 = int_lt(i71, 0)
+1508: guard_false(i74, descr=<Guard0x45d99b8>) [p11, p4, p68, p17, p59, i64, None, None, None, None, None, None, None, None, None, None, None, p2, p3, None, None]
+1514: i75 = getfield_gc_i(p69, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1518: i77 = int_gt(i75, 2)
+1522: guard_true(i77, descr=<Guard0x45d9a00>) [p11, p4, p68, p17, p59, i64, None, None, None, None, None, None, None, None, None, None, None, p2, p3, None, None]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
debug_merge_point(0, 0, '(= y5076 0)')
+1528: i80 = call_i(ConstClass(rbigint.eq), p2, ConstPtr(ptr79), descr=<Calli 1 rr EF=0>)
+1555: guard_false(i80, descr=<Guard0x4726020>) [i80, p69, p11, i64, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
+1564: p81 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+1564: p83 = call_r(ConstClass(rbigint.mul), p2, p2, descr=<Callr 8 rr EF=4>)
+1638: guard_no_exception(descr=<Guard0x4726080>) [p83, p69, p11, i64, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
+1653: i84 = getfield_gc_i(p83, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1657: i86 = int_gt(i84, 2)
+1661: guard_true(i86, descr=<Guard0x45d9a48>) [p83, p69, p11, i64, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1667: p88 = call_r(ConstClass(rbigint.mul), p83, p83, descr=<Callr 8 rr EF=4>)
+1733: guard_no_exception(descr=<Guard0x47260e0>) [p88, p83, p69, p11, i64, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
+1748: i89 = getfield_gc_i(p88, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1752: i91 = int_gt(i89, 2)
+1756: guard_true(i91, descr=<Guard0x45d9a90>) [p88, p83, p69, p11, i64, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+1762: p92 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1773: guard_nonnull_class(p92, ConstClass(W_Bignum), descr=<Guard0x4726140>) [p88, p83, p69, p11, i64, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
+1792: p94 = getfield_gc_r(p92, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1796: p96 = call_r(ConstClass(rbigint.sub), p94, p88, descr=<Callr 8 rr EF=4>)
+1869: guard_no_exception(descr=<Guard0x47261a0>) [p96, p92, p88, None, p69, p11, i64, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
+1884: i97 = getfield_gc_i(p96, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1888: i99 = int_gt(i97, 2)
+1892: guard_true(i99, descr=<Guard0x45d9ad8>) [p96, p92, p88, None, p69, p11, i64, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1905: i102 = call_i(ConstClass(rbigint.lt), p96, ConstPtr(ptr101), descr=<Calli 1 rr EF=0>)
+1927: guard_false(i102, descr=<Guard0x4726200>) [i102, p96, None, None, None, p69, p11, i64, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1936: p103 = new_with_vtable(descr=<SizeDescr 32>)
+1980: p104 = new_with_vtable(descr=<SizeDescr 32>)
+1998: setfield_gc(p104, ConstPtr(ptr105), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2009: setfield_gc(p104, ConstPtr(ptr106), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2013: p107 = new_with_vtable(descr=<SizeDescr 16>)
+2024: setfield_gc(p107, p96, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2028: setfield_gc(p104, p107, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+2032: p108 = new_with_vtable(descr=<SizeDescr 48>)
+2043: p109 = new_with_vtable(descr=<SizeDescr 32>)
+2055: setfield_gc(p109, ConstPtr(ptr110), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2059: setfield_gc(p109, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+2067: setfield_gc(p109, p107, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+2071: p112 = new_with_vtable(descr=<SizeDescr 40>)
+2082: setfield_gc(p112, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2093: p113 = new_with_vtable(descr=<SizeDescr 40>)
+2104: setfield_gc(p113, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2115: p114 = new_with_vtable(descr=<SizeDescr 16>)
+2126: setfield_gc(p114, p2, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2137: setfield_gc(p113, p114, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+2141: p115 = new_with_vtable(descr=<SizeDescr 16>)
+2152: setfield_gc(p115, p69, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2163: setfield_gc(p113, p115, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+2167: p116 = new_with_vtable(descr=<SizeDescr 16>)
+2178: setfield_gc(p116, i64, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2182: setfield_gc(p113, p116, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+2186: setfield_gc(p112, p113, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2190: setfield_gc(p112, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2208: setfield_gc(p112, ConstPtr(ptr117), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2212: p118 = new_with_vtable(descr=<SizeDescr 40>)
+2223: setfield_gc(p118, ConstPtr(ptr119), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2234: setfield_gc(p118, ConstPtr(ptr120), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2238: setfield_gc(p118, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2246: setfield_gc(p118, p107, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2250: setfield_gc(p108, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2254: setfield_gc(p103, p104, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2258: setfield_gc(p103, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2266: setfield_gc(p103, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2274: setfield_gc(p108, p109, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2278: setfield_gc(p108, p112, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2289: setfield_gc(p108, ConstPtr(ptr124), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2293: setfield_gc(p108, p118, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2297: jump(p103, p108, descr=TargetToken(69318064))
+2336: --end of the loop--
[3e4c06b559aa982] jit-log-opt-bridge}
[3e4c06b5781741e] {jit-backend
[3e4c06b57935cd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c91f
[3e4c06b579497e0] jit-backend-dump}
[3e4c06b579577c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c93b4 +0  2C000000
[3e4c06b57958de5] jit-backend-dump}
[3e4c06b5795d69d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9c55 +0  2C000000
[3e4c06b5795e5df] jit-backend-dump}
[3e4c06b57961d4a] {jit-backend-addr
bridge out of Guard 0x43baf08 has address 0x7ff2522c93b0 to 0x7ff2522c9c50
       gc table: 0x7ff2522c91f0
    jump target: 0x7ff2522c93b0
         resops: 0x7ff2522c93be
       failures: 0x7ff2522c9c50
            end: 0x7ff2522ca2bd
[3e4c06b57964144] jit-backend-addr}
[3e4c06b57967bc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c93d0 +0  A9090000
[3e4c06b579689d8] jit-backend-dump}
[3e4c06b5796c2d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c93ef +0  C2090000
[3e4c06b5796d004] jit-backend-dump}
[3e4c06b57970674] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9408 +0  C5090000
[3e4c06b579713c7] jit-backend-dump}
[3e4c06b57974945] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c941c +0  CD090000
[3e4c06b5797569b] jit-backend-dump}
[3e4c06b57978cf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9433 +0  D2090000
[3e4c06b57979a1d] jit-backend-dump}
[3e4c06b5797cf12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9448 +0  D9090000
[3e4c06b5797dbe1] jit-backend-dump}
[3e4c06b57981030] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9451 +0  EC090000
[3e4c06b57981cf6] jit-backend-dump}
[3e4c06b5798510c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c945a +0  FF090000
[3e4c06b57985dcb] jit-backend-dump}
[3e4c06b5798922a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9484 +0  F1090000
[3e4c06b57989ef9] jit-backend-dump}
[3e4c06b5798d523] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c94f0 +0  A1090000
[3e4c06b5798e217] jit-backend-dump}
[3e4c06b5799161a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9509 +0  A4090000
[3e4c06b579922e6] jit-backend-dump}
[3e4c06b579956b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9513 +0  B6090000
[3e4c06b5799637e] jit-backend-dump}
[3e4c06b579997be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9521 +0  C4090000
[3e4c06b5799a484] jit-backend-dump}
[3e4c06b5799d893] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c953c +0  C5090000
[3e4c06b5799e5bb] jit-backend-dump}
[3e4c06b579a196e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9586 +0  97090000
[3e4c06b579a2644] jit-backend-dump}
[3e4c06b579a5a78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c95d4 +0  65090000
[3e4c06b579a675f] jit-backend-dump}
[3e4c06b579a9bb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c95e2 +0  73090000
[3e4c06b579aa899] jit-backend-dump}
[3e4c06b579add23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9637 +0  3A090000
[3e4c06b579ae9ef] jit-backend-dump}
[3e4c06b579b1e01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9645 +0  48090000
[3e4c06b579b2af8] jit-backend-dump}
[3e4c06b579b5ebe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9664 +0  45090000
[3e4c06b579b6b99] jit-backend-dump}
[3e4c06b579b9f1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c96c5 +0  00090000
[3e4c06b579babf4] jit-backend-dump}
[3e4c06b579bdfeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c96d3 +0  0E090000
[3e4c06b579becc3] jit-backend-dump}
[3e4c06b579c20dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c972c +0  D1080000
[3e4c06b579c2d95] jit-backend-dump}
[3e4c06b579c6112] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c973a +0  DF080000
[3e4c06b579c6dcb] jit-backend-dump}
[3e4c06b579ca19a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9759 +0  DC080000
[3e4c06b579cae7c] jit-backend-dump}
[3e4c06b579ce226] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9767 +0  EA080000
[3e4c06b579ceeec] jit-backend-dump}
[3e4c06b579d22be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c97bf +0  AE080000
[3e4c06b579d2f7e] jit-backend-dump}
[3e4c06b579d6353] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c980d +0  7C080000
[3e4c06b579d7013] jit-backend-dump}
[3e4c06b579da3b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c981b +0  8A080000
[3e4c06b579db07a] jit-backend-dump}
[3e4c06b579de400] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9870 +0  51080000
[3e4c06b579df0cc] jit-backend-dump}
[3e4c06b579e2476] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c987e +0  5F080000
[3e4c06b579e313c] jit-backend-dump}
[3e4c06b579e64a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9888 +0  71080000
[3e4c06b579e716c] jit-backend-dump}
[3e4c06b579ea541] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9891 +0  84080000
[3e4c06b579eb1fe] jit-backend-dump}
[3e4c06b579ee580] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c989a +0  97080000
[3e4c06b579ef240] jit-backend-dump}
[3e4c06b579f25e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c98ef +0  5E080000
[3e4c06b579f32ad] jit-backend-dump}
[3e4c06b579f664e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9907 +0  62080000
[3e4c06b579f732d] jit-backend-dump}
[3e4c06b579fa6e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9911 +0  74080000
[3e4c06b579fb39d] jit-backend-dump}
[3e4c06b579fe73b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c991f +0  82080000
[3e4c06b579ff3fe] jit-backend-dump}
[3e4c06b57a027dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9946 +0  77080000
[3e4c06b57a034ab] jit-backend-dump}
[3e4c06b57a0681c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c999f +0  3A080000
[3e4c06b57a074de] jit-backend-dump}
[3e4c06b57a0a89b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c99ad +0  48080000
[3e4c06b57a0b564] jit-backend-dump}
[3e4c06b57a0e8f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c99fe +0  13080000
[3e4c06b57a0f5bf] jit-backend-dump}
[3e4c06b57a12994] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9a0c +0  21080000
[3e4c06b57a1365a] jit-backend-dump}
[3e4c06b57a169e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9a2a +0  1F080000
[3e4c06b57a176af] jit-backend-dump}
[3e4c06b57a1aa4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9a86 +0  DF070000
[3e4c06b57a1b710] jit-backend-dump}
[3e4c06b57a1ea95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9a94 +0  ED070000
[3e4c06b57a1f75b] jit-backend-dump}
[3e4c06b57a22e36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c9aba +0  E3070000
[3e4c06b57a23afc] jit-backend-dump}
[3e4c06b57a272aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b77e3 +0  C91B0100
[3e4c06b57a27fcc] jit-backend-dump}
[3e4c06b57a2c2f2] jit-backend}
[3e4c06b57a30378] {jit-log-opt-bridge
# bridge out of Guard 0x43baf08 with 209 ops
[p0, p1, p2, p3, p4, p5]
+470: i6 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+474: i8 = int_gt(i6, 2)
+478: guard_true(i8, descr=<Guard0x4726380>) [p0, i6, p1, p2, p3, p4, p5]
+484: guard_not_invalidated(descr=<Guard0x45d9e38>) [p0, i6, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))) from (* x4969 x4969)')
+484: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+495: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x47263e0>) [p0, i6, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(+ t2 (quotient AppRand51 one5062))')
+515: p11 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+527: guard_class(p11, 16478448, descr=<Guard0x45d9e80>) [p0, i6, p1, p2, p3, p4, p5]
+540: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+551: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x45d9ec8>) [p0, i6, p1, p2, p3, p4, p5]
+560: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+564: guard_nonnull_class(p15, ConstClass(W_Bignum), descr=<Guard0x4726440>) [p0, i6, p1, p2, p3, p4, p5]
+583: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+587: i18 = getfield_gc_i(p17, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+591: i19 = getfield_gc_i(p17, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+595: i20 = int_is_zero(i19)
+598: guard_false(i20, descr=<Guard0x45d9f10>) [p0, i6, p1, p2, p3, p4, p5]
+604: i21 = int_lt(i6, i18)
+607: guard_false(i21, descr=<Guard0x45d9f58>) [p0, i6, p1, p2, p3, p4, p5]
+613: i22 = int_eq(i6, i18)
+616: guard_true(i22, descr=<Guard0x45d9fa0>) [p0, i6, p1, p2, p3, p4, p5]
+622: i24 = int_sub(i6, 1)
+626: p25 = getfield_gc_r(p0, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+630: i26 = getarrayitem_gc_i(p25, i24, descr=<ArrayS 8>)
+635: i28 = int_sub(i18, 1)
+639: p29 = getfield_gc_r(p17, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+643: i30 = getarrayitem_gc_i(p29, i28, descr=<ArrayS 8>)
+655: i31 = int_lt(i26, i30)
+658: guard_false(i31, descr=<Guard0x4732020>) [p0, i6, p1, p2, p3, p4, p5]
+664: p33 = call_r(ConstClass(_x_divrem), p0, p17, descr=<Callr 8 rr EF=5>)
+757: guard_no_exception(descr=<Guard0x47264a0>) [p33, p17, p0, p9, p1, p2, p3, p4, None]
+772: p35 = getfield_gc_r(p33, descr=<FieldP tuple2.item0 8 pure>)
+776: p36 = getfield_gc_r(p33, descr=<FieldP tuple2.item1 16 pure>)
+776: i37 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+788: i38 = int_ne(i37, i19)
+791: guard_false(i38, descr=<Guard0x4732068>) [p33, p17, p0, p9, p1, p2, p3, p4, None]
+797: i40 = int_lt(i37, 0)
+801: guard_false(i40, descr=<Guard0x47320b0>) [p33, p17, p0, p9, p1, p2, p3, p4, None]
+807: i41 = getfield_gc_i(p35, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+811: i43 = int_gt(i41, 2)
+815: guard_false(i43, descr=<Guard0x47320f8>) [p33, p17, p0, p9, p1, p2, p3, p4, None]
+821: i45 = call_i(ConstClass(rbigint._toint_helper), p35, descr=<Calli 8 r EF=4>)
+833: guard_no_exception(descr=<Guard0x4726500>) [p35, i45, p0, p9, p1, p2, p3, p4, None]
+848: p47 = call_r(ConstClass(fromint), i45, descr=<Callr 8 i EF=3>)
+907: guard_no_exception(descr=<Guard0x4726560>) [p47, i45, p0, p9, p1, p2, p3, p4, None]
+922: p49 = call_r(ConstClass(rbigint.add), p2, p47, descr=<Callr 8 rr EF=4>)
+985: guard_no_exception(descr=<Guard0x47265c0>) [p49, i45, p0, p9, p1, p2, p3, p4, None]
+1000: i50 = getfield_gc_i(p49, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1004: i52 = int_gt(i50, 2)
+1008: guard_true(i52, descr=<Guard0x4732140>) [p49, i45, p0, p9, p1, p2, p3, p4, None]
debug_merge_point(0, 0, '(let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))')
debug_merge_point(0, 0, '(+ one5062 AppRand52)')
+1014: p54 = call_r(ConstClass(rbigint.add), p17, p49, descr=<Callr 8 rr EF=4>)
+1084: guard_no_exception(descr=<Guard0x4726620>) [p54, p15, p49, None, p0, p9, p1, p2, p3, p4, None]
+1099: i55 = getfield_gc_i(p54, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1103: i57 = int_gt(i55, 2)
+1107: guard_true(i57, descr=<Guard0x4732188>) [p54, p15, p49, None, p0, p9, p1, p2, p3, p4, None]
debug_merge_point(0, 0, '(let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))')
debug_merge_point(0, 0, '(* t3 a5078)')
+1113: p58 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+1124: guard_nonnull_class(p58, ConstClass(W_Bignum), descr=<Guard0x4726680>) [p54, p15, p49, None, p0, p9, p1, p2, p3, p4, None]
+1144: p60 = getfield_gc_r(p58, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1149: p62 = call_r(ConstClass(rbigint.mul), p1, p60, descr=<Callr 8 rr EF=4>)
+1226: guard_no_exception(descr=<Guard0x47266e0>) [p62, p58, p54, None, None, None, p0, p9, p1, p2, p3, p4, None]
+1241: i63 = getfield_gc_i(p62, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1245: i65 = int_gt(i63, 2)
+1249: guard_true(i65, descr=<Guard0x47321d0>) [p62, p58, p54, None, None, None, p0, p9, p1, p2, p3, p4, None]
debug_merge_point(0, 0, '(* t2 t4)')
+1255: p67 = call_r(ConstClass(rbigint.mul), p2, p54, descr=<Callr 8 rr EF=4>)
+1329: guard_no_exception(descr=<Guard0x4726740>) [p67, p62, None, p54, None, None, None, p0, p9, p1, p2, p3, p4, None]
+1344: i68 = getfield_gc_i(p67, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1348: i70 = int_gt(i68, 2)
+1352: guard_true(i70, descr=<Guard0x4732218>) [p67, p62, None, p54, None, None, None, p0, p9, p1, p2, p3, p4, None]
debug_merge_point(0, 0, '(let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))')
debug_merge_point(0, 0, '(* x5080 AppRand54)')
+1358: p71 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+1369: guard_nonnull_class(p71, ConstClass(W_Fixnum), descr=<Guard0x47267a0>) [p67, p62, None, p54, None, None, None, p0, p9, p1, p2, p3, p4, None]
+1389: i73 = getfield_gc_i(p71, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1394: i74 = int_is_true(i73)
+1397: guard_true(i74, descr=<Guard0x4732260>) [p67, p62, None, p54, None, None, None, p0, p9, p1, p2, p3, p4, None]
+1403: p76 = call_r(ConstClass(fromint), i73, descr=<Callr 8 i EF=3>)
+1476: guard_no_exception(descr=<Guard0x4726800>) [p76, p71, p67, p62, None, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1491: p78 = call_r(ConstClass(rbigint.mul), p76, p67, descr=<Callr 8 rr EF=4>)
+1554: guard_no_exception(descr=<Guard0x4726860>) [p78, p71, p67, p62, None, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1569: i79 = getfield_gc_i(p78, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1573: i81 = int_gt(i79, 2)
+1577: guard_true(i81, descr=<Guard0x47322a8>) [p78, p71, p67, p62, None, None, None, None, None, None, p9, None, p2, p3, p4, None]
debug_merge_point(0, 0, '(let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))')
debug_merge_point(0, 0, '(- AppRand53 AppRand55)')
+1583: p83 = call_r(ConstClass(rbigint.sub), p62, p78, descr=<Callr 8 rr EF=4>)
+1653: guard_no_exception(descr=<Guard0x47268c0>) [p83, p78, None, p67, p62, None, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1668: i84 = getfield_gc_i(p83, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1672: i86 = int_gt(i84, 2)
+1676: guard_true(i86, descr=<Guard0x47322f0>) [p83, p78, None, p67, p62, None, None, None, None, None, None, p9, None, p2, p3, p4, None]
debug_merge_point(0, 0, '(* 4 x5080)')
+1682: i88 = int_mul_ovf(4, i73)
+1686: guard_no_overflow(descr=<Guard0x4732338>) [p83, p78, None, p67, p62, None, None, None, None, None, None, p9, None, p2, p3, p4, None]
debug_merge_point(0, 0, '(loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
+1692: i89 = int_lt(i84, i18)
+1695: guard_false(i89, descr=<Guard0x4732380>) [p83, p78, None, p67, p62, None, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1701: i90 = int_eq(i84, i18)
+1704: guard_false(i90, descr=<Guard0x47323c8>) [p83, p78, None, p67, p62, None, None, None, None, None, None, p9, None, p2, p3, p4, None]
+1710: p92 = call_r(ConstClass(_x_divrem), p83, p17, descr=<Callr 8 rr EF=5>)
+1780: guard_no_exception(descr=<Guard0x4726920>) [p11, p4, p92, p17, p83, i88, None, None, None, None, None, None, None, None, None, None, None, None, p2, p3, None, None]
+1795: p93 = getfield_gc_r(p92, descr=<FieldP tuple2.item0 8 pure>)
+1799: p94 = getfield_gc_r(p92, descr=<FieldP tuple2.item1 16 pure>)
+1799: i95 = getfield_gc_i(p83, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1810: i96 = int_ne(i95, i19)
+1813: guard_false(i96, descr=<Guard0x4732410>) [p11, p4, p92, p17, p83, i88, None, None, None, None, None, None, None, None, None, None, None, None, p2, p3, None, None]
+1819: i98 = int_lt(i95, 0)
+1823: guard_false(i98, descr=<Guard0x4732458>) [p11, p4, p92, p17, p83, i88, None, None, None, None, None, None, None, None, None, None, None, None, p2, p3, None, None]
+1829: i99 = getfield_gc_i(p93, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1833: i101 = int_gt(i99, 2)
+1837: guard_true(i101, descr=<Guard0x47324a0>) [p11, p4, p92, p17, p83, i88, None, None, None, None, None, None, None, None, None, None, None, None, p2, p3, None, None]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
debug_merge_point(0, 0, '(= y5076 0)')
+1850: i104 = call_i(ConstClass(rbigint.eq), p2, ConstPtr(ptr103), descr=<Calli 1 rr EF=0>)
+1873: guard_false(i104, descr=<Guard0x4726980>) [i104, p93, p11, i88, None, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
+1882: p105 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+1882: p107 = call_r(ConstClass(rbigint.mul), p2, p2, descr=<Callr 8 rr EF=4>)
+1956: guard_no_exception(descr=<Guard0x47269e0>) [p107, p93, p11, i88, None, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
+1971: i108 = getfield_gc_i(p107, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1975: i110 = int_gt(i108, 2)
+1979: guard_true(i110, descr=<Guard0x47324e8>) [p107, p93, p11, i88, None, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1985: p112 = call_r(ConstClass(rbigint.mul), p107, p107, descr=<Callr 8 rr EF=4>)
+2051: guard_no_exception(descr=<Guard0x4726a40>) [p112, p107, p93, p11, i88, None, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
+2066: i113 = getfield_gc_i(p112, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2070: i115 = int_gt(i113, 2)
+2074: guard_true(i115, descr=<Guard0x4732530>) [p112, p107, p93, p11, i88, None, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+2080: p116 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+2091: guard_nonnull_class(p116, ConstClass(W_Bignum), descr=<Guard0x4726aa0>) [p112, p107, p93, p11, i88, None, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
+2110: p118 = getfield_gc_r(p116, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2114: p120 = call_r(ConstClass(rbigint.sub), p118, p112, descr=<Callr 8 rr EF=4>)
+2187: guard_no_exception(descr=<Guard0x4726b00>) [p120, p116, p112, None, p93, p11, i88, None, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
+2202: i121 = getfield_gc_i(p120, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2206: i123 = int_gt(i121, 2)
+2210: guard_true(i123, descr=<Guard0x4732578>) [p120, p116, p112, None, p93, p11, i88, None, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+2223: i126 = call_i(ConstClass(rbigint.lt), p120, ConstPtr(ptr125), descr=<Calli 1 rr EF=0>)
+2245: guard_false(i126, descr=<Guard0x4726b60>) [i126, p120, None, None, None, p93, p11, i88, None, None, None, None, None, None, None, None, None, None, p9, None, p2, None, p4, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+2254: p127 = new_with_vtable(descr=<SizeDescr 32>)
+2298: p128 = new_with_vtable(descr=<SizeDescr 32>)
+2316: setfield_gc(p128, ConstPtr(ptr129), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2327: setfield_gc(p128, ConstPtr(ptr130), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2331: p131 = new_with_vtable(descr=<SizeDescr 16>)
+2342: setfield_gc(p131, p120, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2346: setfield_gc(p128, p131, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+2350: p132 = new_with_vtable(descr=<SizeDescr 48>)
+2361: p133 = new_with_vtable(descr=<SizeDescr 32>)
+2373: setfield_gc(p133, ConstPtr(ptr134), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2378: setfield_gc(p133, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+2387: setfield_gc(p133, p131, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+2392: p136 = new_with_vtable(descr=<SizeDescr 40>)
+2405: setfield_gc(p136, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2416: p137 = new_with_vtable(descr=<SizeDescr 40>)
+2427: setfield_gc(p137, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2438: p138 = new_with_vtable(descr=<SizeDescr 16>)
+2449: setfield_gc(p138, p2, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2460: setfield_gc(p137, p138, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+2464: p139 = new_with_vtable(descr=<SizeDescr 16>)
+2475: setfield_gc(p139, p93, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2486: setfield_gc(p137, p139, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+2490: p140 = new_with_vtable(descr=<SizeDescr 16>)
+2501: setfield_gc(p140, i88, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2505: setfield_gc(p137, p140, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+2509: setfield_gc(p136, p137, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2513: setfield_gc(p136, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2531: setfield_gc(p136, ConstPtr(ptr141), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2535: p142 = new_with_vtable(descr=<SizeDescr 40>)
+2546: setfield_gc(p142, ConstPtr(ptr143), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2557: setfield_gc(p142, ConstPtr(ptr144), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2561: setfield_gc(p142, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2569: setfield_gc(p142, p131, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2573: setfield_gc(p132, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2577: setfield_gc(p127, p128, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2581: setfield_gc(p127, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2589: setfield_gc(p127, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2597: setfield_gc(p132, p133, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2601: setfield_gc(p132, p136, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2612: setfield_gc(p132, ConstPtr(ptr148), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2616: setfield_gc(p132, p142, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2620: jump(p127, p132, descr=TargetToken(69318064))
+2656: --end of the loop--
[3e4c06b57adffbf] jit-log-opt-bridge}
[3e4c06bb62a9937] {jit-backend
[3e4c06bb63515f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca3f
[3e4c06bb635a904] jit-backend-dump}
[3e4c06bb636889f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca484 +0  2C000000
[3e4c06bb6369f62] jit-backend-dump}
[3e4c06bb636e76c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca8c5 +0  2C000000
[3e4c06bb636f6f7] jit-backend-dump}
[3e4c06bb637313a] {jit-backend-addr
bridge out of Guard 0x443f280 has address 0x7ff2522ca480 to 0x7ff2522ca8c0
       gc table: 0x7ff2522ca3f0
    jump target: 0x7ff2522ca480
         resops: 0x7ff2522ca48e
       failures: 0x7ff2522ca8c0
            end: 0x7ff2522caab8
[3e4c06bb637586e] jit-backend-addr}
[3e4c06bb637945d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca49b +0  E5040000
[3e4c06bb637a29b] jit-backend-dump}
[3e4c06bb637da40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca4b9 +0  FF040000
[3e4c06bb637e7e2] jit-backend-dump}
[3e4c06bb6381e7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca528 +0  AC040000
[3e4c06bb6382b4c] jit-backend-dump}
[3e4c06bb6386185] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca536 +0  BA040000
[3e4c06bb6386e57] jit-backend-dump}
[3e4c06bb638a35b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca604 +0  08040000
[3e4c06bb638b052] jit-backend-dump}
[3e4c06bb638e54a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca655 +0  D3030000
[3e4c06bb638f23e] jit-backend-dump}
[3e4c06bb6392760] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca66a +0  DA030000
[3e4c06bb6393432] jit-backend-dump}
[3e4c06bb6396980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca6bc +0  A4030000
[3e4c06bb639766a] jit-backend-dump}
[3e4c06bb639ab16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca6ca +0  B2030000
[3e4c06bb639b7d2] jit-backend-dump}
[3e4c06bb639ed32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ca6f0 +0  A8030000
[3e4c06bb639f9f8] jit-backend-dump}
[3e4c06bb63a3169] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf268 +0  14B20000
[3e4c06bb63a3e8b] jit-backend-dump}
[3e4c06bb63a8379] jit-backend}
[3e4c06bb63ac4b6] {jit-log-opt-bridge
# bridge out of Guard 0x443f280 with 104 ops
[i0, i1, p2, p3, p4, p5, p6, p7]
+166: guard_false(i0, descr=<Guard0x4727040>) [i0, i1, p2, p6, p3, p4, p7, p5]
+175: guard_not_invalidated(descr=<Guard0x4732920>) [i0, i1, p2, p6, p3, p4, p7, p5]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
+175: p8 = getfield_gc_r(p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+186: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x47270a0>) [i0, i1, p2, p6, p3, p4, p7, p5]
debug_merge_point(0, 0, '(+ a4978 b4980)')
+205: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+210: p12 = call_r(ConstClass(rbigint.add), p10, p6, descr=<Callr 8 rr EF=4>)
+301: guard_no_exception(descr=<Guard0x4727100>) [p12, p8, i1, p2, p6, p3, p4, p7, None]
+316: i14 = getfield_gc_i(p12, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+320: i16 = int_gt(i14, 2)
+324: guard_true(i16, descr=<Guard0x4732968>) [p12, p8, i1, p2, p6, p3, p4, p7, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+337: i19 = getarrayitem_gc_i(ConstPtr(ptr17), 0, descr=<ArrayS 8>)
+342: p20 = new_array_clear(i14, descr=<ArrayS 8>)
+439: p21 = new_with_vtable(descr=<SizeDescr 32>)
+480: setfield_gc(p21, i14, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+484: setfield_gc(p21, p20, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+488: i23 = call_i(ConstClass(_inplace_divrem1), p21, p12, i19, descr=<Calli 8 rri EF=5>)
+513: setfield_gc(p21, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+521: guard_no_exception(descr=<Guard0x4727160>) [p12, i23, p21, p8, i1, p2, p6, p3, p4, p7, None]
+536: call_n(ConstClass(rbigint._normalize), p21, descr=<Callv 0 r EF=5>)
+602: guard_no_exception(descr=<Guard0x47271c0>) [p12, i23, p21, p8, i1, p2, p6, p3, p4, p7, None]
+617: i26 = int_is_true(i23)
+617: i27 = getfield_gc_i(p12, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+628: i29 = int_ne(i27, 1)
+632: guard_false(i29, descr=<Guard0x47329b0>) [p12, i23, p21, p8, i1, p2, p6, p3, p4, p7, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+638: p31 = call_r(ConstClass(rbigint.mul), p10, p6, descr=<Callr 8 rr EF=4>)
+705: guard_no_exception(descr=<Guard0x4727220>) [p31, p21, p8, i1, p2, p6, p3, p4, p7, None]
+720: i32 = getfield_gc_i(p31, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+724: i34 = int_gt(i32, 2)
+728: guard_true(i34, descr=<Guard0x47329f8>) [p31, p21, p8, i1, p2, p6, p3, p4, p7, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
+734: p35 = getfield_gc_r(p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+741: i38 = call_i(ConstClass(rbigint.lt), p31, ConstPtr(ptr37), descr=<Calli 1 rr EF=0>)
+763: guard_false(i38, descr=<Guard0x4727280>) [i38, p31, p21, p8, i1, p2, p6, p3, p4, p7, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+772: p39 = new_with_vtable(descr=<SizeDescr 32>)
+816: p40 = new_with_vtable(descr=<SizeDescr 32>)
+834: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+845: setfield_gc(p40, ConstPtr(ptr42), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+849: p43 = new_with_vtable(descr=<SizeDescr 16>)
+861: setfield_gc(p43, p31, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+865: setfield_gc(p40, p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+869: p44 = new_with_vtable(descr=<SizeDescr 48>)
+880: p45 = new_with_vtable(descr=<SizeDescr 32>)
+891: setfield_gc(p45, ConstPtr(ptr46), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+895: setfield_gc(p45, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+903: setfield_gc(p45, p43, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+907: p48 = new_with_vtable(descr=<SizeDescr 40>)
+919: setfield_gc(p48, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+931: p49 = new_with_vtable(descr=<SizeDescr 32>)
+943: p50 = new_with_vtable(descr=<SizeDescr 48>)
+954: setfield_gc(p50, p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+965: setfield_gc(p50, p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+976: p51 = new_with_vtable(descr=<SizeDescr 16>)
+987: setfield_gc(p51, p6, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+998: setfield_gc(p50, p51, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1002: p52 = new_with_vtable(descr=<SizeDescr 16>)
+1013: setfield_gc(p52, p2, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1024: setfield_gc(p50, p52, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1028: p53 = new_with_vtable(descr=<SizeDescr 16>)
+1039: setfield_gc(p53, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1043: setfield_gc(p50, p53, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+1047: setfield_gc(p49, p50, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1051: p54 = new_with_vtable(descr=<SizeDescr 16>)
+1062: setfield_gc(p54, p21, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1073: setfield_gc(p49, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1077: setfield_gc(p49, p43, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1081: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1086: setfield_gc(p48, p7, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1105: setfield_gc(p48, ConstPtr(ptr55), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1110: p56 = new_with_vtable(descr=<SizeDescr 40>)
+1121: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1132: setfield_gc(p56, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1136: setfield_gc(p56, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1144: setfield_gc(p56, p43, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1148: setfield_gc(p44, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1152: setfield_gc(p39, p40, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1156: setfield_gc(p39, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1164: setfield_gc(p39, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1172: setfield_gc(p44, p45, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1176: setfield_gc(p44, p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1187: setfield_gc(p44, ConstPtr(ptr62), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1191: setfield_gc(p44, p56, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1195: jump(p39, p44, descr=TargetToken(69318064))
+1232: --end of the loop--
[3e4c06bb64001c7] jit-log-opt-bridge}
[3e4c0713c0bf85e] {jit-backend
[3e4c0713c18f414] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cac60 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C9203000048FF0425501C6F048139C81800000F85000000004C8B79084983FF01720741813F900F00000F8500000000813AD00C01000F85000000004C8B72104983FE01720741813E601400000F85000000004D8B6E084983FD000F84000000004C8B720841813E30B700000F85000000004D85ED0F84000000004D0FAFED0F80000000004D85ED0F84000000004D89EC4D0FAFED0F81000000004889953001000048898D380100004C89BD400100004C89B5480100004C89E749BB88AB2C52F27F00004C895D2041BBD098A90041FFD3488B0C258893F900488B69F8F64504010F85D602000048C745200000000048833C2540B35F01000F85000000004889C74889C649BBA8AB2C52F27F00004C895D2041BB40DFA90041FFD3488B0C258893F900488B69F8F64504010F859E02000048C745200000000048833C2540B35F01000F8500000000488B50184883FA020F8F000000004989C74889C741BBB047AB0041FFD3488B142540B35F014881FA1858FD000F850000000048C7042540B35F010000000048C7042548B35F0100000000488B95480100004C8B6210488B05EBFDFFFF4939C40F8500000000488B42184883F80172068138B84700000F8500000000488B50084C89BD48010000488985500100004889D74C89FE49BB08AC2C52F27F00004C895D2041BBB096A90041FFD3488B0C258893F900488B69F8F64504010F85D901000048C745200000000048833C2540B35F01000F85000000004C8B78184983FF020F8E000000004C8B3D83FDFFFF4989C44889C74C89FE41BB3096A90041FFD3480FB6C04885C00F8500000000488B0C25F091F900488D91F0000000483B14251092F9000F878301000048891425F091F90048C701901A0100488D512048C70240B40000488B0536FDFFFF488942084C8B3D33FDFFFF4C897A104C8D7A2049C707B84700004D8967084C897A184D8D671049C70424A81600004D8D74243049C706301901004989460849C74610040000004D897E184D8D6E2049C74500101100004C8B95400100004D8955084C8B8D300100004D894D104C8B8D380100004D894D184C8B0DC8FCFFFF4D894D204D8D4D2849C701E0C5000049894108488B05B6FCFFFF4989411049C74118040000004D8979204D895424084889510848C741100100000048C74118020000004D897424104D896C24184C8B2D84FCFFFF4D896C24204D894C242848898D300100004C89A53801000049BBA09A2A52F27F000041FFE36666666666662E0F1F84000000000048C7442408FFFFFF0049BBC8AA2C52F27F00004C895D204D8D9B28D8FDFF41FFD3E948FCFFFF49BB70822A52F27F000041FFD3E918FDFFFF49BB70822A52F27F000041FFD3E950FDFFFF49BB70822A52F27F000041FFD3E915FEFFFF49BB48AC2C52F27F00004C895D204D8D9BA8DEFDFF41FFD3E968FEFFFFFF3501FBFFFF49BBD8AA2C52F27F000041534D8D9B28D5FDFF41FFE3FF35EDFAFFFF49BBE8AA2C52F27F000041534D8D9B18D5FDFF41FFE3FF35D9FAFFFF49BBF8AA2C52F27F000041534D8D9B08D5FDFF41FFE3FF35C5FAFFFF49BB08AB2C52F27F000041534D8D9BF8D4FDFF41FFE3FF35B1FAFFFF49BB18AB2C52F27F000041534D8D9BE8D4FDFF41FFE3FF359DFAFFFF49BB28AB2C52F27F000041534D8D9BD8D4FDFF41FFE3FF3589FAFFFF49BB38AB2C52F27F000041534D8D9BC8D4FDFF41FFE3FF3575FAFFFF49BB48AB2C52F27F000041534D8D9BB8D4FDFF41FFE3FF3561FAFFFF49BB58AB2C52F27F000041534D8D9BA8D4FDFF41FFE3FF354DFAFFFF49BB68AB2C52F27F000041534D8D9B98D4FDFF41FFE3FF3539FAFFFF49BB78AB2C52F27F000041534D8D9B88D4FDFF41FFE3FF3525FAFFFF49BB98AB2C52F27F000041534D8D9B18D5FDFF41FFE3FF3511FAFFFF49BBB8AB2C52F27F000041534D8D9BF8D4FDFF41FFE3FF35FDF9FFFF49BBC8AB2C52F27F000041534D8D9B38D4FDFF41FFE3FF35E9F9FFFF49BBD8AB2C52F27F000041534D8D9BD8D4FDFF41FFE3FF35DDF9FFFF49BBE8AB2C52F27F000041534D8D9B18D4FDFF41FFE3FF35C9F9FFFF49BBF8AB2C52F27F000041534D8D9B08D4FDFF41FFE3FF35B5F9FFFF49BB18AC2C52F27F000041534D8D9B98D4FDFF41FFE3FF35A1F9FFFF49BB28AC2C52F27F000041534D8D9BD8D3FDFF41FFE3FF3595F9FFFF49BB38AC2C52F27F000041534D8D9BC8D3FDFF41FFE3
[3e4c0713c19bda6] jit-backend-dump}
[3e4c0713c1afc26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cad44 +0  2C000000
[3e4c0713c1b1259] jit-backend-dump}
[3e4c0713c1b5d60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb0e5 +0  2C000000
[3e4c0713c1b6d75] jit-backend-dump}
[3e4c0713c1ba6c3] {jit-backend-addr
bridge out of Guard 0x43dc980 has address 0x7ff2522cad40 to 0x7ff2522cb0e0
       gc table: 0x7ff2522cac60
    jump target: 0x7ff2522cad40
         resops: 0x7ff2522cad4e
       failures: 0x7ff2522cb0e0
            end: 0x7ff2522cb389
[3e4c0713c1bd5c7] jit-backend-addr}
[3e4c0713c1c0ecf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cad5e +0  F7030000
[3e4c0713c1c1c87] jit-backend-dump}
[3e4c0713c1c53ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cad75 +0  FC030000
[3e4c0713c1c60b4] jit-backend-dump}
[3e4c0713c1c9a58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cad81 +0  28040000
[3e4c0713c1ca783] jit-backend-dump}
[3e4c0713c1cddf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cad98 +0  2D040000
[3e4c0713c1ceace] jit-backend-dump}
[3e4c0713c1d2224] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cada6 +0  3B040000
[3e4c0713c1d2f39] jit-backend-dump}
[3e4c0713c1d6504] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cadb7 +0  46040000
[3e4c0713c1d71d3] jit-backend-dump}
[3e4c0713c1da80c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cadc0 +0  59040000
[3e4c0713c1db4f6] jit-backend-dump}
[3e4c0713c1deac7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cadca +0  6B040000
[3e4c0713c1df7a9] jit-backend-dump}
[3e4c0713c1e2e99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cadd3 +0  7E040000
[3e4c0713c1e3b87] jit-backend-dump}
[3e4c0713c1e71fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cade0 +0  8D040000
[3e4c0713c1e7f37] jit-backend-dump}
[3e4c0713c1eb696] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cae43 +0  46040000
[3e4c0713c1ec399] jit-backend-dump}
[3e4c0713c1ef9cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cae8d +0  18040000
[3e4c0713c1f06b3] jit-backend-dump}
[3e4c0713c1f3e80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cae9b +0  26040000
[3e4c0713c1f4b74] jit-backend-dump}
[3e4c0713c1f820e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522caebf +0  1E040000
[3e4c0713c1f8ef0] jit-backend-dump}
[3e4c0713c1fc56c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522caef2 +0  07040000
[3e4c0713c1fd269] jit-backend-dump}
[3e4c0713c2008a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522caf08 +0  0D040000
[3e4c0713c201599] jit-backend-dump}
[3e4c0713c204ba7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522caf64 +0  CD030000
[3e4c0713c2058a1] jit-backend-dump}
[3e4c0713c208f11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522caf72 +0  DB030000
[3e4c0713c209be3] jit-backend-dump}
[3e4c0713c20d2fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522caf98 +0  D1030000
[3e4c0713c20e007] jit-backend-dump}
[3e4c0713c211a44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b9393 +0  A9190100
[3e4c0713c21274d] jit-backend-dump}
[3e4c0713c2175b8] jit-backend}
[3e4c0713c21b8f1] {jit-log-opt-bridge
# bridge out of Guard 0x43dc980 with 100 ops
[p0, p1]
+246: guard_class(p1, 16437896, descr=<Guard0x4c194c0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+262: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x4c19520>) [p0, p1]
debug_merge_point(0, 0, '(= y5076 0)')
+281: guard_not_invalidated(descr=<Guard0x4733a00>) [p0, p1]
+281: guard_class(p0, 16500368, descr=<Guard0x4733a48>) [p0, p1]
+293: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+297: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x4c19580>) [p0, p1]
+316: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+320: i10 = int_eq(i8, 0)
+324: guard_false(i10, descr=<Guard0x4733a90>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
+330: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+334: guard_class(p11, 16478448, descr=<Guard0x4733ad8>) [p0, p1]
+347: p13 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+347: i14 = int_is_true(i8)
+350: guard_true(i14, descr=<Guard0x4733b20>) [p0, p1]
+356: i15 = int_mul_ovf(i8, i8)
+360: guard_no_overflow(descr=<Guard0x4733b68>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+366: i16 = int_is_true(i15)
+369: guard_true(i16, descr=<Guard0x4733bb0>) [p0, p1]
+375: i17 = int_mul_ovf(i15, i15)
+382: guard_overflow(descr=<Guard0x4733bf8>) [p0, p1]
+388: p19 = call_r(ConstClass(fromint), i15, descr=<Callr 8 i EF=3>)
+472: guard_no_exception(descr=<Guard0x4c195e0>) [p19, i15, p1, p0, p3]
+487: p21 = call_r(ConstClass(rbigint.mul), p19, p19, descr=<Callr 8 rr EF=4>)
+546: guard_no_exception(descr=<Guard0x4c19640>) [p21, i15, p1, p0, p3]
+561: i22 = getfield_gc_i(p21, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+565: i24 = int_gt(i22, 2)
+569: guard_false(i24, descr=<Guard0x4733c40>) [p21, i15, p1, p0, p3]
+575: i26 = call_i(ConstClass(rbigint._toint_helper), p21, descr=<Calli 8 r EF=4>)
+590: p28 = guard_exception(ConstClass(OverflowError), descr=<Guard0x4c196a0>) [p21, i26, i15, p1, p0, p3]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+635: p29 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+653: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x4c19700>) [p29, p11, p21, None, p1, p0, p3]
+662: p32 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+666: guard_nonnull_class(p32, ConstClass(W_Bignum), descr=<Guard0x4c19760>) [p29, p11, p21, None, p1, p0, p3]
+684: p34 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+688: p36 = call_r(ConstClass(rbigint.sub), p34, p21, descr=<Callr 8 rr EF=4>)
+761: guard_no_exception(descr=<Guard0x4c197c0>) [p36, p32, p21, None, p1, p0, p3]
+776: i37 = getfield_gc_i(p36, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+780: i39 = int_gt(i37, 2)
+784: guard_true(i39, descr=<Guard0x4733c88>) [p36, p32, p21, None, p1, p0, p3]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+797: i42 = call_i(ConstClass(rbigint.lt), p36, ConstPtr(ptr41), descr=<Calli 1 rr EF=0>)
+819: guard_false(i42, descr=<Guard0x4c19820>) [i42, p36, None, None, None, p1, p0, p3]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+828: p43 = new_with_vtable(descr=<SizeDescr 32>)
+872: p44 = new_with_vtable(descr=<SizeDescr 32>)
+890: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+901: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+905: p47 = new_with_vtable(descr=<SizeDescr 16>)
+916: setfield_gc(p47, p36, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+920: setfield_gc(p44, p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+924: p48 = new_with_vtable(descr=<SizeDescr 48>)
+936: p49 = new_with_vtable(descr=<SizeDescr 32>)
+948: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+952: setfield_gc(p49, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+960: setfield_gc(p49, p47, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+964: p52 = new_with_vtable(descr=<SizeDescr 40>)
+976: setfield_gc(p52, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+987: setfield_gc(p52, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+998: setfield_gc(p52, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1016: setfield_gc(p52, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1020: p54 = new_with_vtable(descr=<SizeDescr 40>)
+1031: setfield_gc(p54, ConstPtr(ptr55), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1042: setfield_gc(p54, ConstPtr(ptr56), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1046: setfield_gc(p54, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1054: setfield_gc(p54, p47, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1058: setfield_gc(p48, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1063: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1067: setfield_gc(p43, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1075: setfield_gc(p43, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1083: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1088: setfield_gc(p48, p52, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1100: setfield_gc(p48, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1105: setfield_gc(p48, p54, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1110: jump(p43, p48, descr=TargetToken(69318064))
+1152: --end of the loop--
[3e4c0713c280e4f] jit-log-opt-bridge}
[3e4c071d2943afe] {jit-backend
[3e4c071d2a65326] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb
[3e4c071d2a734ba] jit-backend-dump}
[3e4c071d4b5386d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb794 +0  2C000000
[3e4c071d4b55a34] jit-backend-dump}
[3e4c071d4b5b890] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cbe65 +0  2C000000
[3e4c071d4b5c81e] jit-backend-dump}
[3e4c071d4b5fcfe] {jit-backend-addr
bridge out of Guard 0x43ba140 has address 0x7ff2522cb790 to 0x7ff2522cbe60
       gc table: 0x7ff2522cb640
    jump target: 0x7ff2522cb790
         resops: 0x7ff2522cb79e
       failures: 0x7ff2522cbe60
            end: 0x7ff2522cc2f6
[3e4c071d4b622fd] jit-backend-addr}
[3e4c071d4b6589d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb7b0 +0  A6070000
[3e4c071d4b6669b] jit-backend-dump}
[3e4c071d4b69b1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb7cf +0  BF070000
[3e4c071d4b6a7ea] jit-backend-dump}
[3e4c071d4b6d8b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb7e8 +0  C2070000
[3e4c071d4b6e5ea] jit-backend-dump}
[3e4c071d4b71633] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb7ff +0  C7070000
[3e4c071d4b72370] jit-backend-dump}
[3e4c071d4b753e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb810 +0  D2070000
[3e4c071d4b760ea] jit-backend-dump}
[3e4c071d4b790b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb824 +0  DA070000
[3e4c071d4b79dda] jit-backend-dump}
[3e4c071d4b7cd3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb83a +0  E0070000
[3e4c071d4b7da5f] jit-backend-dump}
[3e4c071d4b809d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb84f +0  E7070000
[3e4c071d4b816d8] jit-backend-dump}
[3e4c071d4b845ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb858 +0  FA070000
[3e4c071d4b8529f] jit-backend-dump}
[3e4c071d4b88154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb861 +0  0D080000
[3e4c071d4b88e88] jit-backend-dump}
[3e4c071d4b8bd7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb88b +0  FF070000
[3e4c071d4b8ca86] jit-backend-dump}
[3e4c071d4b8f997] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb8f8 +0  AE070000
[3e4c071d4b9069d] jit-backend-dump}
[3e4c071d4b93552] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb911 +0  B1070000
[3e4c071d4b9424f] jit-backend-dump}
[3e4c071d4b970ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb91b +0  C3070000
[3e4c071d4b97dba] jit-backend-dump}
[3e4c071d4b9abe9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb929 +0  D1070000
[3e4c071d4b9b904] jit-backend-dump}
[3e4c071d4b9e7e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb944 +0  D2070000
[3e4c071d4b9f4d5] jit-backend-dump}
[3e4c071d4ba232b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb98e +0  A4070000
[3e4c071d4ba302b] jit-backend-dump}
[3e4c071d4ba5e6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb9e4 +0  6A070000
[3e4c071d4ba6b56] jit-backend-dump}
[3e4c071d4ba998e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cb9f2 +0  78070000
[3e4c071d4baa675] jit-backend-dump}
[3e4c071d4bad4ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cba11 +0  75070000
[3e4c071d4bae191] jit-backend-dump}
[3e4c071d4bb1068] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cba1e +0  84070000
[3e4c071d4bb1d4c] jit-backend-dump}
[3e4c071d4bb4c4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cba28 +0  96070000
[3e4c071d4bb5935] jit-backend-dump}
[3e4c071d4bb876d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cba45 +0  95070000
[3e4c071d4bb946d] jit-backend-dump}
[3e4c071d4bbc2d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cba6f +0  87070000
[3e4c071d4bbcfc3] jit-backend-dump}
[3e4c071d4bc3d3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cbad2 +0  40070000
[3e4c071d4bc4bc0] jit-backend-dump}
[3e4c071d4bc875a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cbae0 +0  4E070000
[3e4c071d4bc9494] jit-backend-dump}
[3e4c071d4bcc5f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cbbad +0  9D060000
[3e4c071d4bcd2d4] jit-backend-dump}
[3e4c071d4bd02f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cbbfe +0  68060000
[3e4c071d4bd0fe9] jit-backend-dump}
[3e4c071d4bd3f74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cbc13 +0  6F060000
[3e4c071d4bd4c40] jit-backend-dump}
[3e4c071d4bd7bf9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cbc65 +0  39060000
[3e4c071d4bd88da] jit-backend-dump}
[3e4c071d4bdb8a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cbc73 +0  47060000
[3e4c071d4bdc590] jit-backend-dump}
[3e4c071d4bdf5a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cbc99 +0  3D060000
[3e4c071d4be0277] jit-backend-dump}
[3e4c071d4be3435] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b5eb1 +0  DB580100
[3e4c071d4be418e] jit-backend-dump}
[3e4c071d4be8623] jit-backend}
[3e4c071d4bec14f] {jit-log-opt-bridge
# bridge out of Guard 0x43ba140 with 172 ops
[p0, p1, p2, p3, p4, p5, p6, p7]
+358: i8 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+362: i10 = int_gt(i8, 2)
+366: guard_true(i10, descr=<Guard0x4c19e80>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+372: guard_not_invalidated(descr=<Guard0x4733ec8>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
debug_merge_point(0, 0, '(let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))')
+372: p11 = getfield_gc_r(p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+383: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x4c19ee0>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
debug_merge_point(0, 0, '(- t (quotient AppRand17 one))')
+403: p13 = getfield_gc_r(p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+415: guard_class(p13, 16500720, descr=<Guard0x4733f10>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+428: p15 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+432: guard_nonnull_class(p15, ConstClass(W_Bignum), descr=<Guard0x4c19f40>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+451: p17 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+455: guard_class(p17, 16477696, descr=<Guard0x4733f58>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+468: p19 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+479: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x4733fa0>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+488: p21 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+492: guard_nonnull_class(p21, ConstClass(W_Bignum), descr=<Guard0x4c19fa0>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+510: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+514: i24 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+518: i25 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+522: i26 = int_is_zero(i25)
+525: guard_false(i26, descr=<Guard0x4eb8020>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+531: i27 = int_lt(i8, i24)
+534: guard_false(i27, descr=<Guard0x4eb8068>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+540: i28 = int_eq(i8, i24)
+543: guard_true(i28, descr=<Guard0x4eb80b0>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+549: i30 = int_sub(i8, 1)
+553: p31 = getfield_gc_r(p0, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+557: i32 = getarrayitem_gc_i(p31, i30, descr=<ArrayS 8>)
+569: i34 = int_sub(i24, 1)
+573: p35 = getfield_gc_r(p23, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+577: i36 = getarrayitem_gc_i(p35, i34, descr=<ArrayS 8>)
+582: i37 = int_lt(i32, i36)
+585: guard_false(i37, descr=<Guard0x4eb80f8>) [p0, i8, p1, p2, p3, p6, p4, p7, p5]
+591: p39 = call_r(ConstClass(_x_divrem), p0, p23, descr=<Callr 8 rr EF=5>)
+685: guard_no_exception(descr=<Guard0x4eba020>) [p39, p23, p0, p11, p15, None, None, p3, p6, p4, p7, None]
+700: p41 = getfield_gc_r(p39, descr=<FieldP tuple2.item0 8 pure>)
+704: p42 = getfield_gc_r(p39, descr=<FieldP tuple2.item1 16 pure>)
+704: i43 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+716: i44 = int_ne(i43, i25)
+719: guard_false(i44, descr=<Guard0x4eb8140>) [p39, p23, p0, p11, p15, None, None, p3, p6, p4, p7, None]
+725: i46 = int_lt(i43, 0)
+729: guard_false(i46, descr=<Guard0x4eb8188>) [p39, p23, p0, p11, p15, None, None, p3, p6, p4, p7, None]
+735: i47 = getfield_gc_i(p41, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+739: i49 = int_gt(i47, 2)
+743: guard_false(i49, descr=<Guard0x4eb81d0>) [p39, p23, p0, p11, p15, None, None, p3, p6, p4, p7, None]
+749: i51 = call_i(ConstClass(rbigint._toint_helper), p41, descr=<Calli 8 r EF=4>)
+761: guard_no_exception(descr=<Guard0x4eba080>) [p41, i51, p0, p11, p15, None, None, p3, p6, p4, p7, None]
+776: p53 = call_r(ConstClass(fromint), i51, descr=<Callr 8 i EF=3>)
+835: guard_no_exception(descr=<Guard0x4eba0e0>) [p53, p15, i51, p0, p11, None, None, None, p3, p6, p4, p7, None]
+850: p54 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+862: p56 = call_r(ConstClass(rbigint.sub), p54, p53, descr=<Callr 8 rr EF=4>)
+921: guard_no_exception(descr=<Guard0x4eba140>) [p56, i51, p0, p11, p15, None, None, p3, p6, p4, p7, None]
+936: i57 = getfield_gc_i(p56, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+940: i59 = int_gt(i57, 2)
+944: guard_true(i59, descr=<Guard0x4eb8218>) [p56, i51, p0, p11, p15, None, None, p3, p6, p4, p7, None]
debug_merge_point(0, 0, '(* 2 x4983)')
+950: p60 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+962: guard_nonnull_class(p60, ConstClass(W_Fixnum), descr=<Guard0x4eba1a0>) [p56, i51, p0, p11, p15, None, None, p3, p6, p4, p7, None]
+981: i62 = getfield_gc_i(p60, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+985: i63 = int_is_true(i62)
+988: guard_true(i63, descr=<Guard0x4eb8260>) [p56, i51, p0, p11, p15, None, None, p3, p6, p4, p7, None]
+994: i65 = int_mul_ovf(2, i62)
+998: guard_no_overflow(descr=<Guard0x4eb82a8>) [p56, i51, p0, p11, p15, None, None, p3, p6, p4, p7, None]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
+1004: p66 = getfield_gc_r(p4, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1015: guard_nonnull_class(p66, ConstClass(W_Bignum), descr=<Guard0x4eba200>) [p56, i51, p0, p11, p15, None, None, p3, p6, p4, p7, None]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+1033: p68 = getfield_gc_r(p66, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1037: i70 = call_i(ConstClass(rbigint.eq), p68, p6, descr=<Calli 1 rr EF=0>)
+1066: guard_false(i70, descr=<Guard0x4eba260>) [i70, i65, p56, p66, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+1075: p72 = call_r(ConstClass(rbigint.add), p68, p6, descr=<Callr 8 rr EF=4>)
+1159: guard_no_exception(descr=<Guard0x4eba2c0>) [p72, i65, p56, p66, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
+1174: i73 = getfield_gc_i(p72, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1178: i75 = int_gt(i73, 2)
+1182: guard_true(i75, descr=<Guard0x4eb82f0>) [p72, i65, p56, p66, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+1195: i78 = getarrayitem_gc_i(ConstPtr(ptr76), 0, descr=<ArrayS 8>)
+1199: p79 = new_array_clear(i73, descr=<ArrayS 8>)
+1296: p80 = new_with_vtable(descr=<SizeDescr 32>)
+1337: setfield_gc(p80, i73, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1341: setfield_gc(p80, p79, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1345: i82 = call_i(ConstClass(_inplace_divrem1), p80, p72, i78, descr=<Calli 8 rri EF=5>)
+1370: setfield_gc(p80, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1378: guard_no_exception(descr=<Guard0x4eba320>) [p72, i82, p80, i65, p56, p66, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
+1393: call_n(ConstClass(rbigint._normalize), p80, descr=<Callv 0 r EF=5>)
+1459: guard_no_exception(descr=<Guard0x4eba380>) [p72, i82, p80, i65, p56, p66, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
+1474: i85 = int_is_true(i82)
+1474: i86 = getfield_gc_i(p72, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1485: i88 = int_ne(i86, 1)
+1489: guard_false(i88, descr=<Guard0x4eb8338>) [p72, i82, p80, i65, p56, p66, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1495: p90 = call_r(ConstClass(rbigint.mul), p68, p6, descr=<Callr 8 rr EF=4>)
+1562: guard_no_exception(descr=<Guard0x4eba3e0>) [p90, p80, i65, p56, p66, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
+1577: i91 = getfield_gc_i(p90, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1581: i93 = int_gt(i91, 2)
+1585: guard_true(i93, descr=<Guard0x4eb8380>) [p90, p80, i65, p56, p66, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
+1591: p94 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1598: i97 = call_i(ConstClass(rbigint.lt), p90, ConstPtr(ptr96), descr=<Calli 1 rr EF=0>)
+1620: guard_false(i97, descr=<Guard0x4eba440>) [i97, p90, p80, i65, p56, p66, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1629: p98 = new_with_vtable(descr=<SizeDescr 32>)
+1673: p99 = new_with_vtable(descr=<SizeDescr 32>)
+1691: setfield_gc(p99, ConstPtr(ptr100), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1702: setfield_gc(p99, ConstPtr(ptr101), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1706: p102 = new_with_vtable(descr=<SizeDescr 16>)
+1717: setfield_gc(p102, p90, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1721: setfield_gc(p99, p102, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1725: p103 = new_with_vtable(descr=<SizeDescr 48>)
+1737: p104 = new_with_vtable(descr=<SizeDescr 32>)
+1748: setfield_gc(p104, ConstPtr(ptr105), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1752: setfield_gc(p104, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1760: setfield_gc(p104, p102, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1764: p107 = new_with_vtable(descr=<SizeDescr 40>)
+1775: setfield_gc(p107, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1786: p108 = new_with_vtable(descr=<SizeDescr 32>)
+1797: p109 = new_with_vtable(descr=<SizeDescr 48>)
+1808: setfield_gc(p109, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1819: setfield_gc(p109, p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1830: p110 = new_with_vtable(descr=<SizeDescr 16>)
+1841: setfield_gc(p110, p6, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1852: setfield_gc(p109, p110, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1856: p111 = new_with_vtable(descr=<SizeDescr 16>)
+1867: setfield_gc(p111, p56, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1878: setfield_gc(p109, p111, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1882: p112 = new_with_vtable(descr=<SizeDescr 16>)
+1893: setfield_gc(p112, i65, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1897: setfield_gc(p109, p112, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+1901: setfield_gc(p108, p109, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1905: p113 = new_with_vtable(descr=<SizeDescr 16>)
+1916: setfield_gc(p113, p80, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1927: setfield_gc(p108, p113, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1931: setfield_gc(p108, p102, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1935: setfield_gc(p107, p108, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1939: setfield_gc(p107, p7, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1957: setfield_gc(p107, ConstPtr(ptr114), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1961: p115 = new_with_vtable(descr=<SizeDescr 40>)
+1972: setfield_gc(p115, ConstPtr(ptr116), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1983: setfield_gc(p115, ConstPtr(ptr117), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1987: setfield_gc(p115, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1995: setfield_gc(p115, p102, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1999: setfield_gc(p103, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2003: setfield_gc(p98, p99, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2007: setfield_gc(p98, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2015: setfield_gc(p98, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2023: setfield_gc(p103, p104, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2027: setfield_gc(p103, p107, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2038: setfield_gc(p103, ConstPtr(ptr121), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2042: setfield_gc(p103, p115, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2046: jump(p98, p103, descr=TargetToken(69318064))
+2080: --end of the loop--
[3e4c071d4c879da] jit-log-opt-bridge}
[3e4c0731a690d1e] {jit-backend
[3e4c0731a6fb128] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc3f
[3e4c0731a701aa9] jit-backend-dump}
[3e4c0731a711144] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc474 +0  22000000
[3e4c0731a71283e] jit-backend-dump}
[3e4c0731a71674f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc625 +0  22000000
[3e4c0731a717635] jit-backend-dump}
[3e4c0731a71aac5] {jit-backend-addr
bridge out of Guard 0x44115c8 has address 0x7ff2522cc470 to 0x7ff2522cc620
       gc table: 0x7ff2522cc3f0
    jump target: 0x7ff2522cc470
         resops: 0x7ff2522cc47e
       failures: 0x7ff2522cc620
            end: 0x7ff2522cc7b3
[3e4c0731a71d4e3] jit-backend-addr}
[3e4c0731a720a52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc4a1 +0  DA010000
[3e4c0731a721838] jit-backend-dump}
[3e4c0731a724c38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc4ad +0  EA010000
[3e4c0731a7259c4] jit-backend-dump}
[3e4c0731a728c21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc4c4 +0  EF010000
[3e4c0731a729943] jit-backend-dump}
[3e4c0731a72ca40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc4dc +0  F3010000
[3e4c0731a72d765] jit-backend-dump}
[3e4c0731a730935] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc4ed +0  FE010000
[3e4c0731a731613] jit-backend-dump}
[3e4c0731a73465f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc4fe +0  09020000
[3e4c0731a735387] jit-backend-dump}
[3e4c0731a738438] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc516 +0  0D020000
[3e4c0731a73912e] jit-backend-dump}
[3e4c0731a73c1ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc526 +0  19020000
[3e4c0731a73ced3] jit-backend-dump}
[3e4c0731a73ff71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc533 +0  28020000
[3e4c0731a740c6e] jit-backend-dump}
[3e4c0731a743c67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc548 +0  2F020000
[3e4c0731a744986] jit-backend-dump}
[3e4c0731a747a46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cc565 +0  2E020000
[3e4c0731a748737] jit-backend-dump}
[3e4c0731a74b9cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb970 +0  FC0A0100
[3e4c0731a74c751] jit-backend-dump}
[3e4c0731a7505c6] jit-backend}
[3e4c0731a75425a] {jit-log-opt-bridge
# bridge out of Guard 0x44115c8 with 56 ops
[p0, i1, i2, p3, p4, p5, p6, p7, p8]
+150: guard_not_invalidated(descr=<Guard0x4ebab60>) [i1, i2, p7, p8, p3, p4, p5, p6]
debug_merge_point(0, 0, '(let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66)))')
+150: p9 = getfield_gc_r(p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+162: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x4ebabc0>) [i1, i2, p7, p8, p3, p4, p5, p6]
debug_merge_point(0, 0, '(list b2 AppRand62 AppRand63)')
debug_merge_point(0, 0, '(+ n5118 s)')
+181: guard_class(p6, 16500368, descr=<Guard0x4eb8770>) [i1, i2, p7, p8, p3, p4, p5, p6]
+193: p12 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+197: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x4ebac20>) [i1, i2, p7, p8, p3, p4, p5, p6]
+216: p14 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+220: guard_nonnull_class(p14, ConstClass(W_Fixnum), descr=<Guard0x4ebac80>) [i1, i2, p7, p8, p3, p4, p5, p6]
+240: i16 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+244: i17 = getfield_gc_i(p14, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+248: i18 = int_add_ovf(i16, i17)
+251: guard_no_overflow(descr=<Guard0x4eb87b8>) [i1, i2, p7, p8, p3, p4, p5, p6]
debug_merge_point(0, 0, '(let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))')
debug_merge_point(0, 0, 'AppRand64')
+257: p19 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+261: guard_class(p19, 16505296, descr=<Guard0x4eb8800>) [i1, i2, p7, p8, p3, p4, p5, p6]
debug_merge_point(0, 0, '(pies AppRand65 m s)')
+274: p21 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+278: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x4ebace0>) [i1, i2, p7, p8, p3, p4, p5, p6]
+305: i24 = instance_ptr_eq(p19, ConstPtr(ptr23))
+308: guard_true(i24, descr=<Guard0x4eb8848>) [i1, i2, p7, p8, p3, p4, p5, p6]
debug_merge_point(0, 0, '(let ([if5 (< m n5118)]) (if if5 '() (let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))))))) from (pies AppRand65 m s)')
debug_merge_point(0, 0, '(< m n5118)')
+314: i25 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+318: i26 = int_lt(i25, i18)
+321: guard_true(i26, descr=<Guard0x4eb8890>) [i1, i2, p7, p8, p3, p4, p5, p6]
debug_merge_point(0, 0, '(if if5 '() (let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))))))')
debug_merge_point(0, 0, ''()')
debug_merge_point(0, 0, '(cons AppRand64 AppRand66) from (< m n5118)')
+327: p27 = getfield_gc_r(p7, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+339: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x4eb88d8>) [i1, i2, p7, p8, p3, p4, p5, p6]
+348: p29 = getfield_gc_r(p7, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+353: p30 = getfield_gc_r(p7, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+358: guard_nonnull_class(p30, 16470384, descr=<Guard0x4ebad40>) [i1, i2, p7, p8, p3, p4, p5, p6]
+377: p32 = getfield_gc_r(p7, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons AppRand64 AppRand66) from (cons AppRand64 AppRand66)')
+382: p33 = new_with_vtable(descr=<SizeDescr 32>)
+426: p34 = new_with_vtable(descr=<SizeDescr 24>)
+437: p35 = new_with_vtable(descr=<SizeDescr 24>)
+449: setfield_gc(p35, p4, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+461: p36 = new_with_vtable(descr=<SizeDescr 24>)
+474: setfield_gc(p36, i2, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+478: p37 = new_with_vtable(descr=<SizeDescr 24>)
+489: setfield_gc(p37, i1, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+500: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+504: setfield_gc(p36, p37, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+508: setfield_gc(p35, p36, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+513: setfield_gc(p34, p35, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+517: setfield_gc(p34, ConstPtr(ptr39), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+521: setfield_gc(p33, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+525: setfield_gc(p33, p30, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+529: setfield_gc(p33, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+533: jump(p33, p32, descr=TargetToken(72852928))
+560: --end of the loop--
[3e4c0731a78e464] jit-log-opt-bridge}
[3e4c0731af9ab4d] {jit-backend
[3e4c0731b1bcca1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccc
[3e4c0731b1d8ff3] jit-backend-dump}
[3e4c0731b1e4dc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cceb4 +0  2C000000
[3e4c0731b1e6320] jit-backend-dump}
[3e4c0731b1ea5f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cdac5 +0  2C000000
[3e4c0731b1eb50c] jit-backend-dump}
[3e4c0731b1ee854] {jit-backend-addr
bridge out of Guard 0x450b640 has address 0x7ff2522cceb0 to 0x7ff2522cdac0
       gc table: 0x7ff2522ccc40
    jump target: 0x7ff2522cceb0
         resops: 0x7ff2522ccebe
       failures: 0x7ff2522cdac0
            end: 0x7ff2522ce243
[3e4c0731b1f0d5e] jit-backend-addr}
[3e4c0731b1f444c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccece +0  4D0D0000
[3e4c0731b1f52f5] jit-backend-dump}
[3e4c0731b1f86e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccee2 +0  550D0000
[3e4c0731b1f9460] jit-backend-dump}
[3e4c0731b1fc633] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccef7 +0  5C0D0000
[3e4c0731b1fd34f] jit-backend-dump}
[3e4c0731b2005fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccf09 +0  660D0000
[3e4c0731b201329] jit-backend-dump}
[3e4c0731b204604] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccf21 +0  6A0D0000
[3e4c0731b2052fa] jit-backend-dump}
[3e4c0731b2084c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccf2f +0  780D0000
[3e4c0731b2091e9] jit-backend-dump}
[3e4c0731b20c38f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccf43 +0  800D0000
[3e4c0731b20d07c] jit-backend-dump}
[3e4c0731b210121] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccf50 +0  8F0D0000
[3e4c0731b210e42] jit-backend-dump}
[3e4c0731b213fbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccf5e +0  9D0D0000
[3e4c0731b214cb7] jit-backend-dump}
[3e4c0731b217cea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccf75 +0  A20D0000
[3e4c0731b218a24] jit-backend-dump}
[3e4c0731b21be8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccf7f +0  D00D0000
[3e4c0731b21cb83] jit-backend-dump}
[3e4c0731b21fd0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccfb4 +0  B70D0000
[3e4c0731b220a2f] jit-backend-dump}
[3e4c0731b223c45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ccfd4 +0  B30D0000
[3e4c0731b224939] jit-backend-dump}
[3e4c0731b227972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd042 +0  610D0000
[3e4c0731b2286b3] jit-backend-dump}
[3e4c0731b22b87a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd057 +0  620D0000
[3e4c0731b22c549] jit-backend-dump}
[3e4c0731b22f5f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd06e +0  610D0000
[3e4c0731b23033d] jit-backend-dump}
[3e4c0731b2334ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd085 +0  600D0000
[3e4c0731b2341a5] jit-backend-dump}
[3e4c0731b23720f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd092 +0  6F0D0000
[3e4c0731b237f34] jit-backend-dump}
[3e4c0731b23b0c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd0a9 +0  740D0000
[3e4c0731b23bd90] jit-backend-dump}
[3e4c0731b23ee5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd0bd +0  7C0D0000
[3e4c0731b23fb81] jit-backend-dump}
[3e4c0731b242ce9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd0ca +0  8B0D0000
[3e4c0731b2439be] jit-backend-dump}
[3e4c0731b246a5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd13b +0  360D0000
[3e4c0731b247788] jit-backend-dump}
[3e4c0731b24a8f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd14c +0  410D0000
[3e4c0731b24b5c2] jit-backend-dump}
[3e4c0731b24e6cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd19a +0  0F0D0000
[3e4c0731b24f40f] jit-backend-dump}
[3e4c0731b252537] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd1ac +0  190D0000
[3e4c0731b253218] jit-backend-dump}
[3e4c0731b256292] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd1b9 +0  280D0000
[3e4c0731b256fb6] jit-backend-dump}
[3e4c0731b25a0eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd1c6 +0  370D0000
[3e4c0731b25adc6] jit-backend-dump}
[3e4c0731b25de33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd1d3 +0  460D0000
[3e4c0731b25eb77] jit-backend-dump}
[3e4c0731b261ceb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd1df +0  560D0000
[3e4c0731b2629c0] jit-backend-dump}
[3e4c0731b265a43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd1ec +0  650D0000
[3e4c0731b266765] jit-backend-dump}
[3e4c0731b269887] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd381 +0  EC0B0000
[3e4c0731b26a584] jit-backend-dump}
[3e4c0731b26d61f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd3ba +0  CF0B0000
[3e4c0731b26e344] jit-backend-dump}
[3e4c0731b27153c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd3c3 +0  E20B0000
[3e4c0731b272223] jit-backend-dump}
[3e4c0731b275232] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd3cc +0  F50B0000
[3e4c0731b275f35] jit-backend-dump}
[3e4c0731b27907b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd3d5 +0  080C0000
[3e4c0731b279d7b] jit-backend-dump}
[3e4c0731b27ce20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd4b6 +0  430B0000
[3e4c0731b27db48] jit-backend-dump}
[3e4c0731b280c73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd4c5 +0  500B0000
[3e4c0731b281957] jit-backend-dump}
[3e4c0731b2849bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd4fd +0  340B0000
[3e4c0731b2856dd] jit-backend-dump}
[3e4c0731b2888a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd512 +0  570B0000
[3e4c0731b2895a1] jit-backend-dump}
[3e4c0731b28c5d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd522 +0  630B0000
[3e4c0731b28d2f0] jit-backend-dump}
[3e4c0731b2903de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd538 +0  690B0000
[3e4c0731b2910c5] jit-backend-dump}
[3e4c0731b2940d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd546 +0  770B0000
[3e4c0731b294dff] jit-backend-dump}
[3e4c0731b297ecb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd55a +0  7F0B0000
[3e4c0731b298ba6] jit-backend-dump}
[3e4c0731b29bc14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd567 +0  8E0B0000
[3e4c0731b29c938] jit-backend-dump}
[3e4c0731b29fa45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd571 +0  A00B0000
[3e4c0731b2a0723] jit-backend-dump}
[3e4c0731b2a3769] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd593 +0  9A0B0000
[3e4c0731b2a4475] jit-backend-dump}
[3e4c0731b2a7529] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd5b7 +0  920B0000
[3e4c0731b2a8204] jit-backend-dump}
[3e4c0731b2ab281] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd646 +0  1F0B0000
[3e4c0731b2abf96] jit-backend-dump}
[3e4c0731b2af0a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd64f +0  320B0000
[3e4c0731b2afd84] jit-backend-dump}
[3e4c0731b2b2dd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd660 +0  3D0B0000
[3e4c0731b2b3ae2] jit-backend-dump}
[3e4c0731b2b6bc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd675 +0  440B0000
[3e4c0731b2b7890] jit-backend-dump}
[3e4c0731b2ba903] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd687 +0  480B0000
[3e4c0731b2bb622] jit-backend-dump}
[3e4c0731b2be6ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd736 +0  B50A0000
[3e4c0731b2bf3dc] jit-backend-dump}
[3e4c0731b2c2412] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd792 +0  750A0000
[3e4c0731b2c311e] jit-backend-dump}
[3e4c0731b2c6246] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cd7b9 +0  6A0A0000
[3e4c0731b2c6f46] jit-backend-dump}
[3e4c0731b2ca303] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c3d60 +0  4C910000
[3e4c0731b2cb06e] jit-backend-dump}
[3e4c0731b2cf168] jit-backend}
[3e4c0731b2d2d85] {jit-log-opt-bridge
# bridge out of Guard 0x450b640 with 299 ops
[p0, p1, p2, p3, p4]
+646: guard_class(p0, 16435208, descr=<Guard0x4ebada0>) [p0, p1, p2, p3, p4]
+658: p6 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+669: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x4eb8920>) [p0, p1, p2, p3, p4]
+678: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+682: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop5147 (add1 i5149)) from (cons AppRand64 AppRand66)')
+686: guard_class(p8, 16504944, descr=<Guard0x4eb8968>) [p0, p1, p2, p3, p4]
+699: p11 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+703: guard_class(p11, 16499664, descr=<Guard0x4eb89b0>) [p0, p1, p2, p3, p4]
+717: p13 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+722: guard_nonnull_class(p13, 16510992, descr=<Guard0x4ebae00>) [p0, p1, p2, p3, p4]
+741: i15 = getfield_gc_i(p8, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+745: i17 = int_add_ovf(i15, 1)
+749: guard_no_overflow(descr=<Guard0x4eb89f8>) [p0, p1, p2, p3, p4]
+755: p18 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+766: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x4eb8a40>) [p0, p1, p2, p3, p4]
+775: p20 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+779: i21 = instance_ptr_eq(p11, p20)
+782: guard_true(i21, descr=<Guard0x4eb8a88>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if7 (> i5149 pi-iters)]) (if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))) from (doloop5147 (add1 i5149))')
+788: guard_class(p9, 16528368, descr=<Guard0x4eb8ad0>) [p0, p1, p2, p3, p4]
+802: p23 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+806: guard_nonnull_class(p23, ConstClass(ForwardLink), descr=<Guard0x4ebae60>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(> i5149 pi-iters)')
+825: guard_not_invalidated(descr=<Guard0x4eb8b18>) [p0, p1, p2, p3, p4]
+825: i26 = int_gt(i17, 40)
+829: guard_true(i26, descr=<Guard0x4eb8b60>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '(if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))')
debug_merge_point(0, 0, '(begin (void) (void))')
+835: p27 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(void)')
+835: f28 = getfield_gc_f(p9, descr=<FieldF pycket.cont.time_apply_contPrimCont.inst_initial 32 pure>)
+841: p29 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+845: p30 = getfield_gc_r(p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+849: i32 = call_i(ConstClass(_ll_0_raw_malloc_fixedsize___), descr=<Calli 8 EF=5>)
+873: guard_no_exception(descr=<Guard0x4ebaec0>) [p30, p29, f28, i32, None, None, None, None]
+888: i36 = call_i(ConstClass(ccall_clock_gettime), 2, i32, descr=<Calli 4 ii EF=2>)
+911: i37 = int_is_zero(i36)
+914: guard_true(i37, descr=<Guard0x4ebaf20>) [p30, p29, f28, i32, i36, None, None, None, None]
+920: i38 = getfield_raw_i(i32, descr=<FieldS timespec.c_tv_sec 0>)
+923: f39 = cast_int_to_float(i38)
+928: i40 = getfield_raw_i(i32, descr=<FieldS timespec.c_tv_nsec 8>)
+932: f41 = cast_int_to_float(i40)
+937: f43 = float_mul(f41, 0.000000)
+952: f44 = float_add(f39, f43)
+957: call_n(ConstClass(_ll_1_raw_free__timespecPtr), i32, descr=<Callv 0 i EF=2 OS=111>)
+978: f46 = float_sub(f44, f28)
+996: f48 = float_mul(f46, 1000.000000)
+1011: i49 = cast_float_to_int(f48)
+1016: guard_class(p30, 16435920, descr=<Guard0x4ebaf80>) [p30, p29, i49, None, None, None, None]
+1030: p51 = getfield_gc_r(p30, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1042: guard_value(p51, ConstPtr(ptr52), descr=<Guard0x4eb8ba8>) [p30, p29, i49, None, None, None, None]
+1051: p53 = getfield_gc_r(p30, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1056: p54 = getfield_gc_r(p30, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1061: guard_class(p54, 16520144, descr=<Guard0x4eb8bf0>) [p30, p29, i49, None, None, None, None]
+1074: p56 = getfield_gc_r(p54, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1078: guard_nonnull_class(p56, ConstClass(ForwardLink), descr=<Guard0x4ebafe0>) [p30, p29, i49, None, None, None, None]
debug_merge_point(0, 0, '(current-error-port) from (void)')
+1097: p58 = getfield_gc_r(p56, descr=<FieldP pycket.cont.ForwardLink.inst_cont 8 pure>)
+1101: guard_nonnull(p58, descr=<Guard0x4eb8c38>) [p30, p29, i49, None, None, None, None]
+1110: p59 = getfield_gc_r(p58, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1114: guard_nonnull_class(p59, ConstClass(Link), descr=<Guard0x4ebb040>) [p30, p29, i49, None, None, None, None]
+1133: p61 = getfield_gc_r(p59, descr=<FieldP pycket.cont.Link.inst_key 8 pure>)
+1144: i63 = instance_ptr_eq(p61, ConstPtr(ptr62))
+1147: guard_true(i63, descr=<Guard0x4eb8c80>) [p30, p29, i49, None, None, None, None]
+1153: p64 = getfield_gc_r(p59, descr=<FieldP pycket.cont.Link.inst_val 24>)
+1157: guard_nonnull(p64, descr=<Guard0x4eb8cc8>) [p30, p29, i49, None, None, None, None]
+1173: p67 = call_r(ConstClass(W_Parameterization.get), p64, ConstPtr(ptr66), descr=<Callr 8 rr EF=4>)
+1264: guard_no_exception(descr=<Guard0x4ebb0a0>) [p53, p67, p54, p56, i49, None, None, None, None]
+1279: p68 = getfield_gc_r(p67, descr=<FieldP pycket.values.W_ThreadCell.inst_value 16>)
+1283: guard_class(p68, 16587280, descr=<Guard0x4eb8d10>) [p53, p67, p54, p56, i49, None, None, None, None]
debug_merge_point(0, 0, '(fprintf AppRand67 RESULT-cpu: ~a.0
RESULT-gc: ~a.0
RESULT-total: ~a.0
 cpu gc user)')
+1296: p71 = call_r(ConstClass(ll_str__IntegerR_SignedConst_Signed), i49, descr=<Callr 8 i EF=3>)
+1359: guard_no_exception(descr=<Guard0x4ebb100>) [p68, p71, p53, p54, p56, i49, None, None, None, None]
+1374: i72 = strlen(p71)
+1378: i74 = int_add_ovf(12, i72)
+1386: guard_no_overflow(descr=<Guard0x4eb8d58>) [p68, p71, p53, p54, p56, i49, None, None, None, None]
+1392: i76 = int_add_ovf(i74, 14)
+1399: guard_no_overflow(descr=<Guard0x4eb8da0>) [p68, p71, p53, p54, p56, i49, None, None, None, None]
+1405: i78 = int_add_ovf(i76, 1)
+1412: guard_no_overflow(descr=<Guard0x4eb8de8>) [p68, p71, p53, p54, p56, i49, None, None, None, None]
+1418: i80 = int_add_ovf(i78, 17)
+1425: guard_no_overflow(descr=<Guard0x4eb8e30>) [p68, p71, p53, p54, p56, i49, None, None, None, None]
+1431: i81 = int_add_ovf(i80, i72)
+1437: guard_no_overflow(descr=<Guard0x4eb8e78>) [p68, p71, p53, p54, p56, i49, None, None, None, None]
+1443: i83 = int_add_ovf(i81, 3)
+1450: guard_no_overflow(descr=<Guard0x4eb8ec0>) [p68, p71, p53, p54, p56, i49, None, None, None, None]
+1456: p84 = newstr(i83)
+1526: strsetitem(p84, 0, 82)
+1531: strsetitem(p84, 1, 69)
+1536: strsetitem(p84, 2, 83)
+1541: strsetitem(p84, 3, 85)
+1546: strsetitem(p84, 4, 76)
+1551: strsetitem(p84, 5, 84)
+1556: strsetitem(p84, 6, 45)
+1561: strsetitem(p84, 7, 99)
+1566: strsetitem(p84, 8, 112)
+1571: strsetitem(p84, 9, 117)
+1576: strsetitem(p84, 10, 58)
+1581: strsetitem(p84, 11, 32)
+1586: copystrcontent(p71, p84, 0, 12, i72)
+1654: copystrcontent(ConstPtr(ptr111), p84, 0, i74, 14)
+1697: strsetitem(p84, i76, 48)
+1724: copystrcontent(ConstPtr(ptr115), p84, 0, i78, 17)
+1760: copystrcontent(p71, p84, 0, i80, i72)
+1801: strsetitem(p84, i81, 46)
+1814: i121 = int_add(i81, 1)
+1819: strsetitem(p84, i121, 48)
+1825: i123 = int_add(i121, 1)
+1829: strsetitem(p84, i123, 10)
+1835: i125 = int_add(i123, 1)
+1835: i127 = int_add(i81, 3)
+1835: p128 = getfield_gc_r(p68, descr=<FieldP pycket.values.W_FileOutputPort.inst_file 16 pure>)
+1847: guard_class(p128, 16510632, descr=<Guard0x4ebb160>) [p84, p128, p68, p53, p54, p56, i49, None, None, None, None]
+1861: i133 = call_i(ConstClass(ll_rfind_char__rpy_stringPtr_Char_Signed_Signed), p84, 10, 0, i83, descr=<Calli 8 riii EF=0>)
+1886: i135 = int_add(i133, 1)
+1890: i136 = getfield_gc_i(p128, descr=<FieldS rpython.rlib.streamio.BufferingOutputStream.inst_buflen 24>)
+1894: i137 = int_add(i136, i83)
+1900: i138 = getfield_gc_i(p128, descr=<FieldS rpython.rlib.streamio.BufferingOutputStream.inst_bufsize 32>)
+1904: setfield_gc(p128, 0, descr=<FieldU rpython.rlib.streamio.BufferingOutputStream.inst_error 48>)
+1909: i140 = int_lt(i137, i138)
+1912: guard_true(i140, descr=<Guard0x4ebb1c0>) [i135, i138, i137, p84, p128, p68, p53, p54, p56, i49, None, None, None, None]
+1918: i141 = int_is_zero(i135)
+1921: guard_false(i141, descr=<Guard0x4eb8f08>) [i135, i138, i137, p84, p128, p68, p53, p54, p56, i49, None, None, None, None]
+1927: i142 = int_is_true(i136)
+1930: guard_false(i142, descr=<Guard0x4eb8f50>) [i135, i138, i137, p84, p128, p68, p53, p54, p56, i49, None, None, None, None]
+1936: i143 = int_gt(i135, i83)
+1939: guard_false(i143, descr=<Guard0x4eb8f98>) [i135, i138, i137, p84, p128, p68, p53, p54, p56, i49, None, None, None, None]
+1945: p144 = getfield_gc_r(p128, descr=<FieldP rpython.rlib.streamio.BufferingOutputStream.inst_base 8>)
+1949: p145 = newstr(i135)
+2016: copystrcontent(p84, p145, 0, 0, i135)
+2060: call_may_force_n(ConstClass(DiskFile.write), p144, p145, descr=<Callv 0 rr EF=7>)
+2159: guard_not_forced(descr=<Guard0x4f9dbc0>) [i135, p128, p84, p68, p53, p54, p56, i49, None, None, None, None]
+2170: guard_no_exception(descr=<Guard0x4eb8fe0>) [i135, p128, p84, p68, p53, p54, p56, i49, None, None, None, None]
+2185: i149 = int_sub(i83, i135)
+2199: p150 = getfield_gc_r(p54, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2210: setfield_gc(p128, i149, descr=<FieldS rpython.rlib.streamio.BufferingOutputStream.inst_buflen 24>)
+2222: guard_nonnull_class(p150, ConstClass(ForwardLink), descr=<Guard0x4ebb220>) [p150, p53, p54, i149, i135, p84, p128, p68, None, None, None, i49, None, None, None, None]
debug_merge_point(0, 0, '(apply values v)')
+2241: guard_not_invalidated(descr=<Guard0x4eb9028>) [p150, p53, p54, i149, i135, p84, p128, p68, None, None, None, i49, None, None, None, None]
debug_merge_point(0, 0, '(doloop (add1 i5140))')
+2241: guard_class(p53, 16504944, descr=<Guard0x4eb9070>) [p150, p53, p54, i149, i135, p84, p128, p68, None, None, None, i49, None, None, None, None]
+2262: p153 = getfield_gc_r(p53, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2266: guard_class(p153, 16499664, descr=<Guard0x4eb90b8>) [p150, p53, p54, i149, i135, p84, p128, p68, None, None, None, i49, None, None, None, None]
+2278: p155 = getfield_gc_r(p153, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2282: guard_nonnull_class(p155, 16510992, descr=<Guard0x4ebb280>) [p150, p53, p54, i149, i135, p84, p128, p68, None, None, None, i49, None, None, None, None]
+2300: i157 = getfield_gc_i(p53, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+2304: i159 = int_add_ovf(i157, 1)
+2308: guard_no_overflow(descr=<Guard0x4eb9100>) [p150, p53, p54, i149, i135, p84, p128, p68, None, None, None, i49, None, None, None, None]
+2314: p160 = getfield_gc_r(p155, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+2325: guard_value(p160, ConstPtr(ptr161), descr=<Guard0x4eb9148>) [p150, p53, p54, i149, i135, p84, p128, p68, None, None, None, i49, None, None, None, None]
+2334: p162 = getfield_gc_r(p155, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+2338: i163 = instance_ptr_eq(p153, p162)
+2341: guard_true(i163, descr=<Guard0x4eb9190>) [p150, p53, p54, i149, i135, p84, p128, p68, None, None, None, i49, None, None, None, None]
debug_merge_point(0, 0, '(let ([if6 (> i5140 outer)]) (if if6 (begin (void) (void)) (let ([(v cpu user gc) (time-apply (lambda () (let ([doloop5147 (lambda (i5149) (let ([if7 (> i5149 pi-iters)]) (if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))))]) (doloop5147 1))) null)][AppRand67 (current-error-port)]) (fprintf AppRand67 RESULT-cpu: ~a.0
RESULT-gc: ~a.0
RESULT-total: ~a.0
 cpu gc user) (apply values v) (doloop (add1 i5140))))) from (doloop (add1 i5140))')
debug_merge_point(0, 0, '(> i5140 outer)')
+2347: i165 = int_gt(i159, 10)
+2351: guard_false(i165, descr=<Guard0x4eb91d8>) [p150, p53, p54, i149, i135, p84, p128, p68, None, None, None, i49, None, None, None, None]
debug_merge_point(0, 0, '(if if6 (begin (void) (void)) (let ([(v cpu user gc) (time-apply (lambda () (let ([doloop5147 (lambda (i5149) (let ([if7 (> i5149 pi-iters)]) (if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))))]) (doloop5147 1))) null)][AppRand67 (current-error-port)]) (fprintf AppRand67 RESULT-cpu: ~a.0
RESULT-gc: ~a.0
RESULT-total: ~a.0
 cpu gc user) (apply values v) (doloop (add1 i5140))))')
debug_merge_point(0, 0, '(let ([(v cpu user gc) (time-apply (lambda () (let ([doloop5147 (lambda (i5149) (let ([if7 (> i5149 pi-iters)]) (if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))))]) (doloop5147 1))) null)][AppRand67 (current-error-port)]) (fprintf AppRand67 RESULT-cpu: ~a.0
RESULT-gc: ~a.0
RESULT-total: ~a.0
 cpu gc user) (apply values v) (doloop (add1 i5140)))')
debug_merge_point(0, 0, '(time-apply (lambda () (let ([doloop5147 (lambda (i5149) (let ([if7 (> i5149 pi-iters)]) (if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))))]) (doloop5147 1))) null)')
+2357: i167 = call_i(ConstClass(_ll_0_raw_malloc_fixedsize___), descr=<Calli 8 EF=5>)
+2376: guard_no_exception(descr=<Guard0x4ebb2e0>) [i167, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
+2391: i170 = call_i(ConstClass(ccall_clock_gettime), 2, i167, descr=<Calli 4 ii EF=2>)
+2418: i171 = int_is_zero(i170)
+2421: guard_true(i171, descr=<Guard0x4ebb340>) [i167, i170, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
+2427: i172 = getfield_raw_i(i167, descr=<FieldS timespec.c_tv_sec 0>)
+2437: f173 = cast_int_to_float(i172)
+2442: i174 = getfield_raw_i(i167, descr=<FieldS timespec.c_tv_nsec 8>)
+2446: f175 = cast_int_to_float(i174)
+2451: f177 = float_mul(f175, 0.000000)
+2466: f178 = float_add(f173, f177)
+2471: call_n(ConstClass(_ll_1_raw_free__timespecPtr), i167, descr=<Callv 0 i EF=2 OS=111>)
+2492: p180 = getfield_gc_r(p153, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([doloop5147 (lambda (i5149) (let ([if7 (> i5149 pi-iters)]) (if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))))]) (doloop5147 1))')
debug_merge_point(0, 0, '(lambda (i5149) (let ([if7 (> i5149 pi-iters)]) (if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))))')
debug_merge_point(0, 0, '(doloop5147 1)')
debug_merge_point(0, 0, '(let ([if7 (> i5149 pi-iters)]) (if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))) from (doloop5147 1)')
debug_merge_point(0, 0, '(> i5149 pi-iters)')
debug_merge_point(0, 0, '(if if7 (begin (void) (void)) (begin (pies 50 500 50) (doloop5147 (add1 i5149))))')
debug_merge_point(0, 0, '(begin (pies 50 500 50) (doloop5147 (add1 i5149)))')
debug_merge_point(0, 0, '(pies 50 500 50)')
debug_merge_point(0, 0, '(let ([if5 (< m n5118)]) (if if5 '() (let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))))))) from (pies 50 500 50)')
debug_merge_point(0, 0, '(< m n5118)')
debug_merge_point(0, 0, '(if if5 '() (let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))))))')
debug_merge_point(0, 0, '(let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66)))))')
debug_merge_point(0, 0, '(pi-brent-salamin n5118)')
debug_merge_point(0, 0, '(let ([one (expt 10 nb-digits)]) (let ([loop4976 (lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))][AppRand20 (square one)]) (let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1))))')
debug_merge_point(0, 0, '(expt 10 nb-digits)')
+2492: f184 = call_f(ConstClass(ccall_pow), 10.000000, 50.000000, descr=<Callf 8 ff EF=2>)
+2522: i187 = call_i(ConstClass(_ll_1_threadlocalref_get__INTLlT_Signed), 48, descr=<Calli 4 i EF=2 OS=5>)
+2534: f188 = float_sub(f184, f184)
+2543: i190 = float_eq(f188, 0.000000)
+2564: guard_true(i190, descr=<Guard0x4ebb3a0>) [i187, f188, f184, f178, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
+2570: i191 = int_is_true(i187)
+2573: guard_false(i191, descr=<Guard0x4eb9220>) [i187, f188, f184, f178, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
+2579: i192 = float_ne(f184, f184)
+2590: guard_false(i192, descr=<Guard0x4eb9268>) [i187, f188, f184, f178, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
+2596: i194 = float_ge(f184, -9223372036854775808.000000)
+2611: guard_true(i194, descr=<Guard0x4eb92b0>) [i187, f188, f184, f178, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
+2617: i196 = float_lt(f184, 9223372036854775808.000000)
+2629: guard_false(i196, descr=<Guard0x4eb92f8>) [i187, f188, f184, f178, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([loop4976 (lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))][AppRand20 (square one)]) (let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1)))')
debug_merge_point(0, 0, '(lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))')
debug_merge_point(0, 0, '(square one)')
debug_merge_point(0, 0, '(* x4969 x4969)')
debug_merge_point(0, 0, '(let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1))')
debug_merge_point(0, 0, '(square-root (quotient AppRand20 2))')
+2642: i199 = getarrayitem_gc_i(ConstPtr(ptr197), 0, descr=<ArrayS 8>)
+2646: p200 = new_with_vtable(descr=<SizeDescr 32>)
+2694: p202 = new_array_clear(6, descr=<ArrayS 8>)
+2732: setfield_gc(p200, p202, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+2736: setfield_gc(p200, 6, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2751: i206 = call_i(ConstClass(_inplace_divrem1), p200, ConstPtr(ptr205), i199, descr=<Calli 8 rri EF=5>)
+2780: setfield_gc(p200, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2795: guard_no_exception(descr=<Guard0x4ebb400>) [i206, p200, f178, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
+2810: call_n(ConstClass(rbigint._normalize), p200, descr=<Callv 0 r EF=5>)
+2887: guard_no_exception(descr=<Guard0x4ebb460>) [i206, p200, f178, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
+2902: i209 = int_is_true(i206)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+2909: i212 = call_i(ConstClass(rbigint.lt), p200, ConstPtr(ptr211), descr=<Calli 1 rr EF=0>)
+2932: guard_false(i212, descr=<Guard0x4ebb4c0>) [i212, p200, f178, i159, p153, p150, i149, i135, p84, p128, None, None, p54, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+2941: p213 = new(descr=<SizeDescr 24>)
+2982: setfield_gc(p213, 1, descr=<FieldS list.length 8>)
+2990: p216 = new_array_clear(1, descr=<ArrayP 8>)
+3025: p217 = newstr(i149)
+3098: copystrcontent(p84, p217, i135, 0, i149)
+3156: setarrayitem_gc(p216, 0, p217, descr=<ArrayP 8>)
+3178: setfield_gc(p213, p216, descr=<FieldP list.items 16>)
+3199: setfield_gc(p128, p213, descr=<FieldP rpython.rlib.streamio.BufferingOutputStream.inst_buf 16>)
+3203: p219 = new_with_vtable(descr=<SizeDescr 32>)
+3247: p220 = new_with_vtable(descr=<SizeDescr 32>)
+3265: setfield_gc(p220, ConstPtr(ptr221), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3276: setfield_gc(p220, ConstPtr(ptr222), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+3280: p223 = new_with_vtable(descr=<SizeDescr 16>)
+3291: setfield_gc(p223, p200, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3302: setfield_gc(p220, p223, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+3306: p224 = new_with_vtable(descr=<SizeDescr 48>)
+3317: p225 = new_with_vtable(descr=<SizeDescr 32>)
+3328: setfield_gc(p225, ConstPtr(ptr226), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3332: setfield_gc(p225, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+3340: setfield_gc(p225, p223, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+3344: p228 = new_with_vtable(descr=<SizeDescr 40>)
+3356: setfield_gc(p228, p150, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3375: setfield_gc(p228, ConstPtr(ptr229), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3380: p230 = new_with_vtable(descr=<SizeDescr 40>)
+3392: setfield_gc(p230, p150, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3403: setfield_gc(p230, ConstPtr(ptr231), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3407: p232 = new_with_vtable(descr=<SizeDescr 40>)
+3418: setfield_gc(p232, p150, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3429: setfield_gc(p232, ConstPtr(ptr233), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3433: p234 = new_with_vtable(descr=<SizeDescr 40>)
+3444: setfield_gc(p234, p150, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3448: p235 = new_with_vtable(descr=<SizeDescr 24>)
+3459: setfield_gc(p235, p153, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3470: setfield_gc(p235, i159, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+3481: setfield_gc(p234, p235, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3485: p236 = new_with_vtable(descr=<SizeDescr 40>)
+3496: setfield_gc(p236, p150, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3500: setfield_gc(p236, p235, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3504: setfield_gc(p236, p54, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3515: setfield_gc(p236, ConstPtr(ptr237), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3526: setfield_gc(p234, p236, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3530: setfield_gc(p234, f178, descr=<FieldF pycket.cont.time_apply_contPrimCont.inst_initial 32 pure>)
+3545: setfield_gc(p232, p234, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3549: setfield_gc(p232, ConstPtr(ptr238), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+3560: setfield_gc(p230, p232, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3571: setfield_gc(p230, ConstPtr(ptr239), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3575: setfield_gc(p228, p230, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3587: setfield_gc(p228, ConstPtr(ptr240), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3592: p241 = new_with_vtable(descr=<SizeDescr 40>)
+3603: setfield_gc(p241, ConstPtr(ptr242), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3614: setfield_gc(p241, ConstPtr(ptr243), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+3618: setfield_gc(p241, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+3626: setfield_gc(p241, p223, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+3630: setfield_gc(p224, p225, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3634: setfield_gc(p224, p228, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3638: setfield_gc(p219, p220, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3642: setfield_gc(p224, p150, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3653: setfield_gc(p224, ConstPtr(ptr245), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3657: setfield_gc(p219, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+3665: setfield_gc(p219, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+3673: setfield_gc(p224, p241, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+3677: jump(p219, p224, descr=TargetToken(69318064))
+3712: --end of the loop--
[3e4c0731b405a1b] jit-log-opt-bridge}
[3e4c0731b75ff3c] {jit-backend
[3e4c0731b8276e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce4a
[3e4c0731b834486] jit-backend-dump}
[3e4c0731b83fc88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce5d4 +0  2C000000
[3e4c0731b84138e] jit-backend-dump}
[3e4c0731b8452cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ceb75 +0  2C000000
[3e4c0731b8461c8] jit-backend-dump}
[3e4c0731b849636] {jit-backend-addr
bridge out of Guard 0x44b0698 has address 0x7ff2522ce5d0 to 0x7ff2522ceb70
       gc table: 0x7ff2522ce4a0
    jump target: 0x7ff2522ce5d0
         resops: 0x7ff2522ce5de
       failures: 0x7ff2522ceb70
            end: 0x7ff2522ceefb
[3e4c0731b84bc4b] jit-backend-addr}
[3e4c0731b84f20f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce603 +0  06060000
[3e4c0731b8500c8] jit-backend-dump}
[3e4c0731b85333d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce60d +0  18060000
[3e4c0731b85407a] jit-backend-dump}
[3e4c0731b857201] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce61b +0  26060000
[3e4c0731b857ee9] jit-backend-dump}
[3e4c0731b85af8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce62f +0  2E060000
[3e4c0731b85bc3b] jit-backend-dump}
[3e4c0731b85ec93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce644 +0  35060000
[3e4c0731b85f971] jit-backend-dump}
[3e4c0731b8629fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce65a +0  3B060000
[3e4c0731b8636fd] jit-backend-dump}
[3e4c0731b86684d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce666 +0  67060000
[3e4c0731b867565] jit-backend-dump}
[3e4c0731b86a5f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce67c +0  6D060000
[3e4c0731b86b325] jit-backend-dump}
[3e4c0731b86e396] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce68c +0  79060000
[3e4c0731b86f04f] jit-backend-dump}
[3e4c0731b8720f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce6a6 +0  7B060000
[3e4c0731b872dd8] jit-backend-dump}
[3e4c0731b875e92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce6cb +0  72060000
[3e4c0731b876b6a] jit-backend-dump}
[3e4c0731b879bb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce724 +0  35060000
[3e4c0731b87a8b3] jit-backend-dump}
[3e4c0731b87d93f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce72d +0  48060000
[3e4c0731b87e5ff] jit-backend-dump}
[3e4c0731b881614] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce73e +0  53060000
[3e4c0731b8822f5] jit-backend-dump}
[3e4c0731b88533e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce753 +0  5A060000
[3e4c0731b886004] jit-backend-dump}
[3e4c0731b889083] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce765 +0  5E060000
[3e4c0731b889d7a] jit-backend-dump}
[3e4c0731b88cda1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce7c8 +0  17060000
[3e4c0731b88da6d] jit-backend-dump}
[3e4c0731b890a42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce819 +0  E2050000
[3e4c0731b891742] jit-backend-dump}
[3e4c0731b894794] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce827 +0  F0050000
[3e4c0731b895456] jit-backend-dump}
[3e4c0731b8984dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce878 +0  BB050000
[3e4c0731b89920a] jit-backend-dump}
[3e4c0731b89c2ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce886 +0  C9050000
[3e4c0731b89cf7e] jit-backend-dump}
[3e4c0731b89ffb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce8d7 +0  94050000
[3e4c0731b8a0cab] jit-backend-dump}
[3e4c0731b8a3e4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce8e5 +0  A2050000
[3e4c0731b8a4b13] jit-backend-dump}
[3e4c0731b8a7bb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce941 +0  62050000
[3e4c0731b8a88ae] jit-backend-dump}
[3e4c0731b8ab906] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce94f +0  70050000
[3e4c0731b8ac5dc] jit-backend-dump}
[3e4c0731b8af64c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522ce975 +0  66050000
[3e4c0731b8b0334] jit-backend-dump}
[3e4c0731b8b35e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be02f +0  9D050100
[3e4c0731b8b437c] jit-backend-dump}
[3e4c0731b8b82d6] jit-backend}
[3e4c0731b8bbdac] {jit-log-opt-bridge
# bridge out of Guard 0x44b0698 with 150 ops
[p0, p1, p2, p3, p4]
+326: p5 = getfield_gc_r(p1, descr=<FieldP tuple2.item0 8 pure>)
+330: p6 = getfield_gc_r(p1, descr=<FieldP tuple2.item1 16 pure>)
+334: i7 = getfield_gc_i(p3, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+339: i8 = getfield_gc_i(p2, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+350: i9 = int_ne(i7, i8)
+353: guard_false(i9, descr=<Guard0x4ebb520>) [p0, i8, i7, p5, p6, p3, p2, p4]
+359: i11 = int_lt(i7, 0)
+363: guard_false(i11, descr=<Guard0x4eb9340>) [p0, i8, i7, p5, p6, p3, p2, p4]
+369: i12 = getfield_gc_i(p5, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+373: i14 = int_gt(i12, 2)
+377: guard_true(i14, descr=<Guard0x4eb9388>) [p0, i8, i7, p5, p6, p3, p2, p4]
+383: p15 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+394: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x4eb93d0>) [p0, i8, i7, p5, p6, p3, p2, p4]
+403: p17 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+407: p18 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+411: guard_class(p18, 16435208, descr=<Guard0x4eb9418>) [p0, i8, i7, p5, p6, p3, p2, p4]
+424: p20 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+428: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x4ebb580>) [p0, i8, i7, p5, p6, p3, p2, p4]
debug_merge_point(0, 0, '(pi-borwein2 n5118) from (quotient AppRand10 AppRand11)')
+446: guard_not_invalidated(descr=<Guard0x4eb9460>) [p0, i8, i7, p5, p6, p3, p2, p4]
+446: guard_class(p17, 16500368, descr=<Guard0x4eb94a8>) [p0, i8, i7, p5, p6, p3, p2, p4]
+458: p23 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+462: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x4ebb5e0>) [p0, i8, i7, p5, p6, p3, p2, p4]
+480: p25 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+484: guard_class(p25, 16505296, descr=<Guard0x4eb94f0>) [p0, i8, i7, p5, p6, p3, p2, p4]
+496: i27 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([one5009 (expt 10 nb-digits5007)]) (let ([one^2 (square one5009)]) (let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))))))))')
debug_merge_point(0, 0, '(expt 10 nb-digits5007)')
+500: f28 = cast_int_to_float(i27)
+505: i29 = float_ne(f28, f28)
+516: guard_false(i29, descr=<Guard0x4eb9538>) [p0, i8, i7, p5, p6, p3, p2, p4]
+522: f31 = float_add(f28, 11235582092889474423308157442431404585112356118389416079589380072358292237843810195794279832650471001320007117491962084853674360550901038905802964414967132773610493339054092829768888725077880882465817684505312860552384417646403930092119569408801702322709406917786643639996702871154982269052209770601514008576.000000)
+542: i32 = float_eq(f31, f28)
+553: guard_false(i32, descr=<Guard0x4eb9580>) [p0, i8, i7, p5, p6, p3, p2, p4]
+559: f35 = call_f(ConstClass(ccall_pow), 10.000000, f28, descr=<Callf 8 ff EF=2>)
+600: i38 = call_i(ConstClass(_ll_1_threadlocalref_get__INTLlT_Signed), 48, descr=<Calli 4 i EF=2 OS=5>)
+612: f39 = float_sub(f35, f35)
+621: i41 = float_eq(f39, 0.000000)
+642: guard_true(i41, descr=<Guard0x4ebb640>) [i38, f39, f35, i27, p5, p18, p17, p20, None, None]
+648: i43 = int_is_true(i38)
+651: guard_false(i43, descr=<Guard0x4eb95c8>) [i38, f39, f35, i27, p5, p18, p17, p20, None, None]
+657: i44 = float_ne(f35, f35)
+668: guard_false(i44, descr=<Guard0x4eb9610>) [i38, f39, f35, i27, p5, p18, p17, p20, None, None]
+674: i46 = float_ge(f35, -9223372036854775808.000000)
+689: guard_true(i46, descr=<Guard0x4eb9658>) [i38, f39, f35, i27, p5, p18, p17, p20, None, None]
+695: i48 = float_lt(f35, 9223372036854775808.000000)
+707: guard_false(i48, descr=<Guard0x4eb96a0>) [i38, f39, f35, i27, p5, p18, p17, p20, None, None]
+713: p50 = call_r(ConstClass(fromint), i27, descr=<Callr 8 i EF=3>)
+797: guard_no_exception(descr=<Guard0x4ebb6a0>) [p50, i27, p5, p18, p17, p20, None, None]
+819: p53 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr52), p50, descr=<Callr 8 rr EF=4>)
+878: guard_no_exception(descr=<Guard0x4ebb700>) [p53, i27, p5, p18, p17, p20, None, None]
+893: i54 = getfield_gc_i(p53, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+897: i56 = int_gt(i54, 2)
+901: guard_true(i56, descr=<Guard0x4eb96e8>) [p53, i27, p5, p18, p17, p20, None, None]
debug_merge_point(0, 0, '(let ([one^2 (square one5009)]) (let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))))')
debug_merge_point(0, 0, '(square one5009)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+907: p58 = call_r(ConstClass(rbigint.mul), p53, p53, descr=<Callr 8 rr EF=4>)
+973: guard_no_exception(descr=<Guard0x4ebb760>) [p58, p53, None, p5, p18, p17, p20, None, None]
+988: i59 = getfield_gc_i(p58, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+992: i61 = int_gt(i59, 2)
+996: guard_true(i61, descr=<Guard0x4eb9730>) [p58, p53, None, p5, p18, p17, p20, None, None]
debug_merge_point(0, 0, '(let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))))))')
debug_merge_point(0, 0, '(square one^2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1002: p63 = call_r(ConstClass(rbigint.mul), p58, p58, descr=<Callr 8 rr EF=4>)
+1068: guard_no_exception(descr=<Guard0x4ebb7c0>) [p63, p58, p53, None, p5, p18, p17, p20, None, None]
+1083: i64 = getfield_gc_i(p63, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1087: i66 = int_gt(i64, 2)
+1091: guard_true(i66, descr=<Guard0x4eb9778>) [p63, p58, p53, None, p5, p18, p17, p20, None, None]
debug_merge_point(0, 0, '(* one^2 2)')
+1104: p69 = call_r(ConstClass(rbigint.mul), p58, ConstPtr(ptr68), descr=<Callr 8 rr EF=4>)
+1174: guard_no_exception(descr=<Guard0x4ebb820>) [p69, p63, p58, p53, None, p5, p18, p17, p20, None, None]
+1189: i70 = getfield_gc_i(p69, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1193: i72 = int_gt(i70, 2)
+1197: guard_true(i72, descr=<Guard0x4eb97c0>) [p69, p63, p58, p53, None, p5, p18, p17, p20, None, None]
debug_merge_point(0, 0, '(let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))')
debug_merge_point(0, 0, '(square-root AppRand22)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1210: i75 = call_i(ConstClass(rbigint.lt), p69, ConstPtr(ptr74), descr=<Calli 1 rr EF=0>)
+1232: guard_false(i75, descr=<Guard0x4ebb880>) [i75, p69, p63, p58, p53, None, p5, p18, p17, p20, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1241: p76 = new_with_vtable(descr=<SizeDescr 32>)
+1285: p77 = new_with_vtable(descr=<SizeDescr 32>)
+1303: setfield_gc(p77, ConstPtr(ptr78), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1314: setfield_gc(p77, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1318: p80 = new_with_vtable(descr=<SizeDescr 16>)
+1330: setfield_gc(p80, p69, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1335: setfield_gc(p77, p80, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1339: p81 = new_with_vtable(descr=<SizeDescr 48>)
+1351: p82 = new_with_vtable(descr=<SizeDescr 32>)
+1362: setfield_gc(p82, ConstPtr(ptr83), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1366: setfield_gc(p82, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1374: setfield_gc(p82, p80, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1378: p85 = new_with_vtable(descr=<SizeDescr 40>)
+1390: setfield_gc(p85, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1401: p86 = new_with_vtable(descr=<SizeDescr 32>)
+1412: p87 = new_with_vtable(descr=<SizeDescr 24>)
+1423: p88 = new_with_vtable(descr=<SizeDescr 24>)
+1434: setfield_gc(p88, ConstPtr(ptr89), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1438: p90 = new_with_vtable(descr=<SizeDescr 16>)
+1449: setfield_gc(p90, p53, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1460: setfield_gc(p88, p90, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1464: setfield_gc(p87, p88, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1468: p91 = new_with_vtable(descr=<SizeDescr 16>)
+1479: setfield_gc(p91, p58, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1490: setfield_gc(p87, p91, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1494: setfield_gc(p86, p87, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1498: p92 = new_with_vtable(descr=<SizeDescr 16>)
+1509: setfield_gc(p92, p63, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1520: setfield_gc(p86, p92, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1524: setfield_gc(p86, p80, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1528: setfield_gc(p85, p86, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1532: p93 = new_with_vtable(descr=<SizeDescr 48>)
+1543: setfield_gc(p93, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1547: setfield_gc(p93, p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1558: setfield_gc(p93, p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1576: setfield_gc(p93, ConstPtr(ptr94), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1580: p95 = new_with_vtable(descr=<SizeDescr 16>)
+1591: setfield_gc(p95, p5, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1602: setfield_gc(p93, p95, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1606: setfield_gc(p85, p93, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1617: setfield_gc(p85, ConstPtr(ptr96), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1621: p97 = new_with_vtable(descr=<SizeDescr 40>)
+1632: setfield_gc(p97, ConstPtr(ptr98), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1643: setfield_gc(p97, ConstPtr(ptr99), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1647: setfield_gc(p97, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1655: setfield_gc(p97, p80, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1666: setfield_gc(p81, ConstPtr(ptr101), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1670: setfield_gc(p81, p82, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1674: setfield_gc(p81, p85, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1678: setfield_gc(p81, p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1682: setfield_gc(p76, p77, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1686: setfield_gc(p76, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1694: setfield_gc(p76, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1702: setfield_gc(p81, p97, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1706: jump(p76, p81, descr=TargetToken(69318064))
+1744: --end of the loop--
[3e4c0731b94b3cd] jit-log-opt-bridge}
[3e4c0731befa02e] {jit-backend
[3e4c0731c003a80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf
[3e4c0731c014730] jit-backend-dump}
[3e4c0731c020085] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf434 +0  2C000000
[3e4c0731c02155c] jit-backend-dump}
[3e4c0731c025c61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cfc25 +0  2C000000
[3e4c0731c026c89] jit-backend-dump}
[3e4c0731c02a1cd] {jit-backend-addr
bridge out of Guard 0x43bafe0 has address 0x7ff2522cf430 to 0x7ff2522cfc20
       gc table: 0x7ff2522cf290
    jump target: 0x7ff2522cf430
         resops: 0x7ff2522cf43e
       failures: 0x7ff2522cfc20
            end: 0x7ff2522d01dd
[3e4c0731c02c8f5] jit-backend-addr}
[3e4c0731c02fe9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf462 +0  C3080000
[3e4c0731c030d4a] jit-backend-dump}
[3e4c0731c03403a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf46c +0  D5080000
[3e4c0731c034d71] jit-backend-dump}
[3e4c0731c037edc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf47a +0  E3080000
[3e4c0731c038c04] jit-backend-dump}
[3e4c0731c03bd9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf49e +0  DB080000
[3e4c0731c03ca7f] jit-backend-dump}
[3e4c0731c03fb97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf512 +0  83080000
[3e4c0731c040866] jit-backend-dump}
[3e4c0731c043979] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf520 +0  91080000
[3e4c0731c044648] jit-backend-dump}
[3e4c0731c047c3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf53e +0  AB080000
[3e4c0731c04892b] jit-backend-dump}
[3e4c0731c04bc06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf557 +0  AE080000
[3e4c0731c04c8d2] jit-backend-dump}
[3e4c0731c04fa40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf56c +0  B5080000
[3e4c0731c0506fa] jit-backend-dump}
[3e4c0731c0538a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf584 +0  B9080000
[3e4c0731c054543] jit-backend-dump}
[3e4c0731c05a92d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf5f5 +0  64080000
[3e4c0731c05b82f] jit-backend-dump}
[3e4c0731c05f09b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf603 +0  72080000
[3e4c0731c05fe40] jit-backend-dump}
[3e4c0731c0630bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf621 +0  70080000
[3e4c0731c063db2] jit-backend-dump}
[3e4c0731c066f21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf681 +0  2C080000
[3e4c0731c067bfc] jit-backend-dump}
[3e4c0731c06ad80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf68f +0  3A080000
[3e4c0731c06ba33] jit-backend-dump}
[3e4c0731c06ec44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf6e8 +0  FD070000
[3e4c0731c06f8f4] jit-backend-dump}
[3e4c0731c072a44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf6f6 +0  0B080000
[3e4c0731c073707] jit-backend-dump}
[3e4c0731c076847] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf714 +0  09080000
[3e4c0731c07750a] jit-backend-dump}
[3e4c0731c07a6b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf721 +0  18080000
[3e4c0731c07b39d] jit-backend-dump}
[3e4c0731c07e5b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf779 +0  DC070000
[3e4c0731c07f267] jit-backend-dump}
[3e4c0731c0823f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf7c7 +0  AA070000
[3e4c0731c0830ba] jit-backend-dump}
[3e4c0731c0861fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf7d5 +0  B8070000
[3e4c0731c086eca] jit-backend-dump}
[3e4c0731c089ff2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf82a +0  7F070000
[3e4c0731c08acbe] jit-backend-dump}
[3e4c0731c08ddbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf838 +0  8D070000
[3e4c0731c08ea84] jit-backend-dump}
[3e4c0731c091b90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf842 +0  9F070000
[3e4c0731c092847] jit-backend-dump}
[3e4c0731c09597b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf85a +0  A3070000
[3e4c0731c096644] jit-backend-dump}
[3e4c0731c09978e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf863 +0  B6070000
[3e4c0731c09a44a] jit-backend-dump}
[3e4c0731c09d563] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf86c +0  C9070000
[3e4c0731c09e25d] jit-backend-dump}
[3e4c0731c0a1379] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf876 +0  DB070000
[3e4c0731c0a2048] jit-backend-dump}
[3e4c0731c0a5148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf8ca +0  A3070000
[3e4c0731c0a5e17] jit-backend-dump}
[3e4c0731c0a8f1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf8e2 +0  A7070000
[3e4c0731c0a9c2d] jit-backend-dump}
[3e4c0731c0acd18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf8ec +0  B9070000
[3e4c0731c0ad9f0] jit-backend-dump}
[3e4c0731c0b0aff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf8fa +0  C7070000
[3e4c0731c0b17c8] jit-backend-dump}
[3e4c0731c0b4924] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf921 +0  BC070000
[3e4c0731c0b55f6] jit-backend-dump}
[3e4c0731c0b8746] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf97a +0  7F070000
[3e4c0731c0b941e] jit-backend-dump}
[3e4c0731c0bc571] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf988 +0  8D070000
[3e4c0731c0bd234] jit-backend-dump}
[3e4c0731c0c0319] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf9d9 +0  58070000
[3e4c0731c0c0fe2] jit-backend-dump}
[3e4c0731c0c40eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cf9e7 +0  66070000
[3e4c0731c0c4db4] jit-backend-dump}
[3e4c0731c0c7ee5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cfa05 +0  64070000
[3e4c0731c0c8ba2] jit-backend-dump}
[3e4c0731c0cbca8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cfa61 +0  24070000
[3e4c0731c0cc977] jit-backend-dump}
[3e4c0731c0cfa9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cfa6f +0  32070000
[3e4c0731c0d0759] jit-backend-dump}
[3e4c0731c0d38b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522cfa95 +0  28070000
[3e4c0731c0d45b8] jit-backend-dump}
[3e4c0731c0d79e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b7869 +0  C37B0100
[3e4c0731c0d870b] jit-backend-dump}
[3e4c0731c0dc72b] jit-backend}
[3e4c0731c0e03e1] {jit-log-opt-bridge
# bridge out of Guard 0x43bafe0 with 191 ops
[p0, p1, p2, p3, p4, p5, p6, p7]
+438: p8 = getfield_gc_r(p0, descr=<FieldP tuple2.item0 8 pure>)
+442: p9 = getfield_gc_r(p0, descr=<FieldP tuple2.item1 16 pure>)
+446: i10 = getfield_gc_i(p2, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+450: i11 = getfield_gc_i(p1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+461: i12 = int_ne(i10, i11)
+464: guard_false(i12, descr=<Guard0x4ebba60>) [i11, i10, p8, p9, p2, p3, p5, p6, p7, p4]
+470: i14 = int_lt(i10, 0)
+474: guard_false(i14, descr=<Guard0x4eb9a90>) [i11, i10, p8, p9, p2, p3, p5, p6, p7, p4]
+480: i15 = getfield_gc_i(p8, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+484: i17 = int_gt(i15, 2)
+488: guard_false(i17, descr=<Guard0x4eb9a00>) [i11, i10, p8, p9, p2, p3, p5, p6, p7, p4]
+494: i19 = call_i(ConstClass(rbigint._toint_helper), p8, descr=<Calli 8 r EF=4>)
+509: p21 = guard_exception(ConstClass(OverflowError), descr=<Guard0x4ebb8e0>) [p8, i19, p2, p3, p5, p6, p7, p4]
+554: p23 = call_r(ConstClass(rbigint.add), p4, p8, descr=<Callr 8 rr EF=4>)
+631: guard_no_exception(descr=<Guard0x4ebbbe0>) [p23, p8, p2, p3, p5, p6, p7, p4]
+646: i24 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+650: i26 = int_gt(i24, 2)
+654: guard_true(i26, descr=<Guard0x4eb9df0>) [p23, p8, p2, p3, p5, p6, p7, p4]
+660: guard_not_invalidated(descr=<Guard0x4eb9e38>) [p23, p8, p2, p3, p5, p6, p7, p4]
debug_merge_point(0, 0, '(let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))')
+660: p27 = getfield_gc_r(p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+671: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x4ebbc40>) [p23, p8, p2, p3, p5, p6, p7, p4]
debug_merge_point(0, 0, '(+ one5062 AppRand52)')
+690: p29 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+701: guard_class(p29, 16478448, descr=<Guard0x4eb9e80>) [p23, p8, p2, p3, p5, p6, p7, p4]
+715: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+727: guard_value(p31, ConstPtr(ptr32), descr=<Guard0x4eb9ec8>) [p23, p8, p2, p3, p5, p6, p7, p4]
+736: p33 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+741: guard_nonnull_class(p33, ConstClass(W_Bignum), descr=<Guard0x4ebbca0>) [p23, p8, p2, p3, p5, p6, p7, p4]
+760: p35 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+764: p37 = call_r(ConstClass(rbigint.add), p35, p23, descr=<Callr 8 rr EF=4>)
+858: guard_no_exception(descr=<Guard0x4ebbd00>) [p37, p33, p23, p27, None, p2, p3, p5, p6, None, p4]
+873: i39 = getfield_gc_i(p37, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+877: i41 = int_gt(i39, 2)
+881: guard_true(i41, descr=<Guard0x4eb9f10>) [p37, p33, p23, p27, None, p2, p3, p5, p6, None, p4]
debug_merge_point(0, 0, '(let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))')
debug_merge_point(0, 0, '(* t3 a5078)')
+887: p42 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+898: guard_nonnull_class(p42, ConstClass(W_Bignum), descr=<Guard0x4ebbd60>) [p37, p33, p23, p27, None, p2, p3, p5, p6, None, p4]
+917: p44 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+921: p46 = call_r(ConstClass(rbigint.mul), p3, p44, descr=<Callr 8 rr EF=4>)
+998: guard_no_exception(descr=<Guard0x4ebbdc0>) [p46, p42, p37, None, None, p27, None, p2, p3, p5, p6, None, p4]
+1013: i47 = getfield_gc_i(p46, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1017: i49 = int_gt(i47, 2)
+1021: guard_true(i49, descr=<Guard0x4eb9f58>) [p46, p42, p37, None, None, p27, None, p2, p3, p5, p6, None, p4]
debug_merge_point(0, 0, '(* t2 t4)')
+1027: p51 = call_r(ConstClass(rbigint.mul), p4, p37, descr=<Callr 8 rr EF=4>)
+1101: guard_no_exception(descr=<Guard0x4ebbe20>) [p51, p46, None, p37, None, None, p27, None, p2, p3, p5, p6, None, p4]
+1116: i52 = getfield_gc_i(p51, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1120: i54 = int_gt(i52, 2)
+1124: guard_true(i54, descr=<Guard0x4eb9fa0>) [p51, p46, None, p37, None, None, p27, None, p2, p3, p5, p6, None, p4]
debug_merge_point(0, 0, '(let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))')
debug_merge_point(0, 0, '(* x5080 AppRand54)')
+1130: p55 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+1141: guard_nonnull_class(p55, ConstClass(W_Fixnum), descr=<Guard0x4ebbe80>) [p51, p46, None, p37, None, None, p27, None, p2, p3, p5, p6, None, p4]
+1160: i57 = getfield_gc_i(p55, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1164: i58 = int_is_true(i57)
+1167: guard_true(i58, descr=<Guard0x506c020>) [p51, p46, None, p37, None, None, p27, None, p2, p3, p5, p6, None, p4]
+1173: p60 = call_r(ConstClass(fromint), i57, descr=<Callr 8 i EF=3>)
+1246: guard_no_exception(descr=<Guard0x4ebbee0>) [p60, p55, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
+1261: p62 = call_r(ConstClass(rbigint.mul), p60, p51, descr=<Callr 8 rr EF=4>)
+1324: guard_no_exception(descr=<Guard0x4ebbf40>) [p62, p55, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
+1339: i63 = getfield_gc_i(p62, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1343: i65 = int_gt(i63, 2)
+1347: guard_true(i65, descr=<Guard0x506c068>) [p62, p55, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
debug_merge_point(0, 0, '(let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))')
debug_merge_point(0, 0, '(- AppRand53 AppRand55)')
+1353: p67 = call_r(ConstClass(rbigint.sub), p46, p62, descr=<Callr 8 rr EF=4>)
+1423: guard_no_exception(descr=<Guard0x4ebbfa0>) [p67, p62, None, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
+1438: i68 = getfield_gc_i(p67, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1442: i70 = int_gt(i68, 2)
+1446: guard_true(i70, descr=<Guard0x506c0b0>) [p67, p62, None, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
debug_merge_point(0, 0, '(* 4 x5080)')
+1452: i72 = int_mul_ovf(4, i57)
+1456: guard_no_overflow(descr=<Guard0x506c0f8>) [p67, p62, None, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
debug_merge_point(0, 0, '(loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
+1462: i73 = getfield_gc_i(p35, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1473: i74 = getfield_gc_i(p35, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1477: i75 = int_is_zero(i74)
+1480: guard_false(i75, descr=<Guard0x506c140>) [p67, p62, None, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
+1486: i76 = int_lt(i68, i73)
+1489: guard_false(i76, descr=<Guard0x506c188>) [p67, p62, None, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
+1495: i77 = int_eq(i68, i73)
+1498: guard_false(i77, descr=<Guard0x506c1d0>) [p67, p62, None, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
+1504: i79 = int_eq(i73, 1)
+1508: guard_false(i79, descr=<Guard0x506c218>) [p67, p62, None, p51, p46, None, None, None, None, p27, None, None, None, p5, p6, None, p4]
+1514: p81 = call_r(ConstClass(_x_divrem), p67, p35, descr=<Callr 8 rr EF=5>)
+1583: guard_no_exception(descr=<Guard0x506e020>) [p29, p6, p81, p35, p67, i72, None, None, None, None, None, None, None, None, None, None, None, None, p5, None, None, p4]
+1598: p82 = getfield_gc_r(p81, descr=<FieldP tuple2.item0 8 pure>)
+1602: p83 = getfield_gc_r(p81, descr=<FieldP tuple2.item1 16 pure>)
+1602: i84 = getfield_gc_i(p67, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1613: i85 = int_ne(i84, i74)
+1616: guard_false(i85, descr=<Guard0x506c260>) [p29, p6, p81, p35, p67, i72, None, None, None, None, None, None, None, None, None, None, None, None, p5, None, None, p4]
+1622: i87 = int_lt(i84, 0)
+1626: guard_false(i87, descr=<Guard0x506c2a8>) [p29, p6, p81, p35, p67, i72, None, None, None, None, None, None, None, None, None, None, None, None, p5, None, None, p4]
+1632: i88 = getfield_gc_i(p82, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1636: i90 = int_gt(i88, 2)
+1640: guard_true(i90, descr=<Guard0x506c2f0>) [p29, p6, p81, p35, p67, i72, None, None, None, None, None, None, None, None, None, None, None, None, p5, None, None, p4]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
debug_merge_point(0, 0, '(= y5076 0)')
+1653: i93 = call_i(ConstClass(rbigint.eq), p4, ConstPtr(ptr92), descr=<Calli 1 rr EF=0>)
+1676: guard_false(i93, descr=<Guard0x506e080>) [i93, p82, p29, i72, None, None, None, None, None, None, None, None, p27, None, None, None, None, p6, None, p4]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
+1685: p94 = getfield_gc_r(p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+1685: p96 = call_r(ConstClass(rbigint.mul), p4, p4, descr=<Callr 8 rr EF=4>)
+1759: guard_no_exception(descr=<Guard0x506e0e0>) [p96, p82, p29, i72, None, None, None, None, None, None, None, None, p27, None, None, None, None, p6, None, p4]
+1774: i97 = getfield_gc_i(p96, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1778: i99 = int_gt(i97, 2)
+1782: guard_true(i99, descr=<Guard0x506c338>) [p96, p82, p29, i72, None, None, None, None, None, None, None, None, p27, None, None, None, None, p6, None, p4]
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1788: p101 = call_r(ConstClass(rbigint.mul), p96, p96, descr=<Callr 8 rr EF=4>)
+1854: guard_no_exception(descr=<Guard0x506e140>) [p101, p96, p82, p29, i72, None, None, None, None, None, None, None, None, p27, None, None, None, None, p6, None, p4]
+1869: i102 = getfield_gc_i(p101, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1873: i104 = int_gt(i102, 2)
+1877: guard_true(i104, descr=<Guard0x506c380>) [p101, p96, p82, p29, i72, None, None, None, None, None, None, None, None, p27, None, None, None, None, p6, None, p4]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+1883: p105 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1894: guard_nonnull_class(p105, ConstClass(W_Bignum), descr=<Guard0x506e1a0>) [p101, p96, p82, p29, i72, None, None, None, None, None, None, None, None, p27, None, None, None, None, p6, None, p4]
+1913: p107 = getfield_gc_r(p105, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1917: p109 = call_r(ConstClass(rbigint.sub), p107, p101, descr=<Callr 8 rr EF=4>)
+1990: guard_no_exception(descr=<Guard0x506e200>) [p109, p105, p101, None, p82, p29, i72, None, None, None, None, None, None, None, None, p27, None, None, None, None, p6, None, p4]
+2005: i110 = getfield_gc_i(p109, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2009: i112 = int_gt(i110, 2)
+2013: guard_true(i112, descr=<Guard0x506c3c8>) [p109, p105, p101, None, p82, p29, i72, None, None, None, None, None, None, None, None, p27, None, None, None, None, p6, None, p4]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+2026: i115 = call_i(ConstClass(rbigint.lt), p109, ConstPtr(ptr114), descr=<Calli 1 rr EF=0>)
+2048: guard_false(i115, descr=<Guard0x506e260>) [i115, p109, None, None, None, p82, p29, i72, None, None, None, None, None, None, None, None, p27, None, None, None, None, p6, None, p4]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+2057: p116 = new_with_vtable(descr=<SizeDescr 32>)
+2101: p117 = new_with_vtable(descr=<SizeDescr 32>)
+2119: setfield_gc(p117, ConstPtr(ptr118), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2130: setfield_gc(p117, ConstPtr(ptr119), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2134: p120 = new_with_vtable(descr=<SizeDescr 16>)
+2145: setfield_gc(p120, p109, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2149: setfield_gc(p117, p120, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+2153: p121 = new_with_vtable(descr=<SizeDescr 48>)
+2164: p122 = new_with_vtable(descr=<SizeDescr 32>)
+2175: setfield_gc(p122, ConstPtr(ptr123), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2179: setfield_gc(p122, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+2187: setfield_gc(p122, p120, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+2191: p125 = new_with_vtable(descr=<SizeDescr 40>)
+2202: setfield_gc(p125, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2213: p126 = new_with_vtable(descr=<SizeDescr 40>)
+2224: setfield_gc(p126, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2235: p127 = new_with_vtable(descr=<SizeDescr 16>)
+2246: setfield_gc(p127, p4, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2257: setfield_gc(p126, p127, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+2261: p128 = new_with_vtable(descr=<SizeDescr 16>)
+2272: setfield_gc(p128, p82, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2283: setfield_gc(p126, p128, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+2287: p129 = new_with_vtable(descr=<SizeDescr 16>)
+2298: setfield_gc(p129, i72, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2302: setfield_gc(p126, p129, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+2306: setfield_gc(p125, p126, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2310: setfield_gc(p125, p6, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2328: setfield_gc(p125, ConstPtr(ptr130), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2332: p131 = new_with_vtable(descr=<SizeDescr 40>)
+2343: setfield_gc(p131, ConstPtr(ptr132), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2354: setfield_gc(p131, ConstPtr(ptr133), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2358: setfield_gc(p131, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2366: setfield_gc(p131, p120, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2370: setfield_gc(p121, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2374: setfield_gc(p116, p117, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2378: setfield_gc(p116, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2386: setfield_gc(p116, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2394: setfield_gc(p121, p122, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2398: setfield_gc(p121, p125, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2409: setfield_gc(p121, ConstPtr(ptr137), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2413: setfield_gc(p121, p131, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2417: jump(p116, p121, descr=TargetToken(69318064))
+2448: --end of the loop--
[3e4c0731c18ab93] jit-log-opt-bridge}
[3e4c07334df6e3c] {jit-backend
[3e4c07334f5e565] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d
[3e4c07334f73da8] jit-backend-dump}
[3e4c07334f82acf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d09b4 +0  2C000000
[3e4c07334f840f6] jit-backend-dump}
[3e4c07334f88432] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1435 +0  2C000000
[3e4c07334f89306] jit-backend-dump}
[3e4c07334f8c888] {jit-backend-addr
bridge out of Guard 0x4410a40 has address 0x7ff2522d09b0 to 0x7ff2522d1430
       gc table: 0x7ff2522d0750
    jump target: 0x7ff2522d09b0
         resops: 0x7ff2522d09be
       failures: 0x7ff2522d1430
            end: 0x7ff2522d1d03
[3e4c07334f8ece1] jit-backend-addr}
[3e4c07334f9221c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d09d0 +0  BF0B0000
[3e4c07334f93051] jit-backend-dump}
[3e4c07334f96634] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d09ef +0  D80B0000
[3e4c07334f973a5] jit-backend-dump}
[3e4c07334f9a6b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0a08 +0  DB0B0000
[3e4c07334f9b3eb] jit-backend-dump}
[3e4c07334f9e67f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0a11 +0  EE0B0000
[3e4c07334f9f33b] jit-backend-dump}
[3e4c07334fa2555] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0a1a +0  010C0000
[3e4c07334fa31f3] jit-backend-dump}
[3e4c07334fa63a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0a75 +0  C20B0000
[3e4c07334fa706e] jit-backend-dump}
[3e4c07334faa1a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0a8d +0  C60B0000
[3e4c07334faae43] jit-backend-dump}
[3e4c07334fadf46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0a97 +0  D80B0000
[3e4c07334faebf7] jit-backend-dump}
[3e4c07334fb1d6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0aa5 +0  E60B0000
[3e4c07334fb2a1f] jit-backend-dump}
[3e4c07334fb5ad3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0ac0 +0  E70B0000
[3e4c07334fb678f] jit-backend-dump}
[3e4c07334fb984c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0ad9 +0  EA0B0000
[3e4c07334fba4fd] jit-backend-dump}
[3e4c07334fbd5cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0aed +0  F20B0000
[3e4c07334fbe298] jit-backend-dump}
[3e4c07334fc1425] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0b04 +0  F70B0000
[3e4c07334fc20cc] jit-backend-dump}
[3e4c07334fc51f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0b5c +0  BB0B0000
[3e4c07334fc5e9c] jit-backend-dump}
[3e4c07334fc8f5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0bc0 +0  730B0000
[3e4c07334fc9c0c] jit-backend-dump}
[3e4c07334fccd34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0bce +0  810B0000
[3e4c07334fcd9de] jit-backend-dump}
[3e4c07334fd0a95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0c1f +0  4C0B0000
[3e4c07334fd1749] jit-backend-dump}
[3e4c07334fd489f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0c2d +0  5A0B0000
[3e4c07334fd556b] jit-backend-dump}
[3e4c07334fd869f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0c45 +0  5E0B0000
[3e4c07334fd936e] jit-backend-dump}
[3e4c07334fdc474] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0c4e +0  710B0000
[3e4c07334fdd122] jit-backend-dump}
[3e4c07334fe0213] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0c57 +0  840B0000
[3e4c07334fe0ecf] jit-backend-dump}
[3e4c07334fe402e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0c61 +0  960B0000
[3e4c07334fe4cf4] jit-backend-dump}
[3e4c07334fe7e72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0cb5 +0  5E0B0000
[3e4c07334fe8b13] jit-backend-dump}
[3e4c07334febe09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0ccd +0  620B0000
[3e4c07334fecac0] jit-backend-dump}
[3e4c07334fefd9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0cd7 +0  740B0000
[3e4c07334ff0a44] jit-backend-dump}
[3e4c07334ff3b54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0ce5 +0  820B0000
[3e4c07334ff480a] jit-backend-dump}
[3e4c07334ff791d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0d36 +0  4D0B0000
[3e4c07334ff85c1] jit-backend-dump}
[3e4c07334ffb6be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0d44 +0  5B0B0000
[3e4c07334ffc356] jit-backend-dump}
[3e4c07334fff426] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0d4d +0  6E0B0000
[3e4c073350000d0] jit-backend-dump}
[3e4c073350031bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0d56 +0  810B0000
[3e4c07335003e62] jit-backend-dump}
[3e4c07335006f3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0dab +0  480B0000
[3e4c07335007be5] jit-backend-dump}
[3e4c0733500acca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0dc3 +0  4C0B0000
[3e4c0733500b971] jit-backend-dump}
[3e4c0733500ea68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0dcd +0  5E0B0000
[3e4c0733500f6fd] jit-backend-dump}
[3e4c07335012816] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0ddb +0  6C0B0000
[3e4c073350134c0] jit-backend-dump}
[3e4c073350165a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0de4 +0  7F0B0000
[3e4c07335017246] jit-backend-dump}
[3e4c0733501a383] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0df1 +0  8E0B0000
[3e4c0733501b02b] jit-backend-dump}
[3e4c0733501e159] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0e42 +0  590B0000
[3e4c0733501edf1] jit-backend-dump}
[3e4c07335021f28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0e4f +0  680B0000
[3e4c07335022bd2] jit-backend-dump}
[3e4c07335025cf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0e6d +0  660B0000
[3e4c07335026989] jit-backend-dump}
[3e4c07335029aab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0ecd +0  220B0000
[3e4c0733502a749] jit-backend-dump}
[3e4c0733502d837] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0edb +0  300B0000
[3e4c0733502e4d8] jit-backend-dump}
[3e4c0733503159e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0f34 +0  F30A0000
[3e4c0733503224c] jit-backend-dump}
[3e4c07335035349] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0f42 +0  010B0000
[3e4c07335035fe1] jit-backend-dump}
[3e4c073350390cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0f60 +0  FF0A0000
[3e4c07335039d7c] jit-backend-dump}
[3e4c0733503ce4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0f6d +0  0E0B0000
[3e4c0733503dafc] jit-backend-dump}
[3e4c07335040c2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d0fc9 +0  CE0A0000
[3e4c073350418de] jit-backend-dump}
[3e4c07335044a06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1017 +0  9C0A0000
[3e4c073350456bc] jit-backend-dump}
[3e4c073350487c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1025 +0  AA0A0000
[3e4c07335049470] jit-backend-dump}
[3e4c0733504c573] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d107a +0  710A0000
[3e4c0733504d227] jit-backend-dump}
[3e4c07335050330] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1088 +0  7F0A0000
[3e4c07335050fc2] jit-backend-dump}
[3e4c07335054085] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d109c +0  870A0000
[3e4c07335054d30] jit-backend-dump}
[3e4c0733505820f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d10a5 +0  9A0A0000
[3e4c07335058ead] jit-backend-dump}
[3e4c0733505c093] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d10ae +0  AD0A0000
[3e4c0733505cd4f] jit-backend-dump}
[3e4c0733505fe77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1106 +0  710A0000
[3e4c07335060b22] jit-backend-dump}
[3e4c07335063c1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d111e +0  750A0000
[3e4c073350648c3] jit-backend-dump}
[3e4c073350679f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1128 +0  870A0000
[3e4c0733506869f] jit-backend-dump}
[3e4c0733506b7cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1136 +0  950A0000
[3e4c0733506c468] jit-backend-dump}
[3e4c0733506f57a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1140 +0  A70A0000
[3e4c07335070222] jit-backend-dump}
[3e4c07335073300] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1149 +0  BA0A0000
[3e4c07335073f98] jit-backend-dump}
[3e4c07335077086] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1156 +0  C90A0000
[3e4c07335077d27] jit-backend-dump}
[3e4c0733507ae0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d11b2 +0  890A0000
[3e4c0733507bab3] jit-backend-dump}
[3e4c0733507ebc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d11c0 +0  970A0000
[3e4c0733507f86a] jit-backend-dump}
[3e4c07335082949] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d11e4 +0  8F0A0000
[3e4c073350835ea] jit-backend-dump}
[3e4c07335086749] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d121a +0  750A0000
[3e4c073350873e1] jit-backend-dump}
[3e4c0733508a4d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1276 +0  350A0000
[3e4c0733508b173] jit-backend-dump}
[3e4c0733508e2a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d1284 +0  430A0000
[3e4c0733508ef55] jit-backend-dump}
[3e4c07335092074] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d12aa +0  390A0000
[3e4c07335092d15] jit-backend-dump}
[3e4c07335096097] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb1f9 +0  B3570100
[3e4c07335096d70] jit-backend-dump}
[3e4c0733509b028] jit-backend}
[3e4c0733509ec7f] {jit-log-opt-bridge
# bridge out of Guard 0x4410a40 with 268 ops
[p0, p1, p2, p3, p4, p5, p6]
+630: i7 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+634: i9 = int_gt(i7, 2)
+638: guard_true(i9, descr=<Guard0x506e500>) [p0, i7, p2, p4, p1, p6, p5, p3]
+644: guard_not_invalidated(descr=<Guard0x506c698>) [p0, i7, p2, p4, p1, p6, p5, p3]
debug_merge_point(0, 0, '(let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))')
+644: p10 = getfield_gc_r(p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+655: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x506e560>) [p0, i7, p2, p4, p1, p6, p5, p3]
debug_merge_point(0, 0, '(quotient AppRand46 AppRand47)')
+675: i12 = getfield_gc_i(p1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+687: i13 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+691: i14 = int_is_zero(i13)
+694: guard_false(i14, descr=<Guard0x506c6e0>) [p0, i7, p2, p4, p1, p6, p5, p3]
+700: i15 = int_lt(i12, i7)
+703: guard_false(i15, descr=<Guard0x506c728>) [p0, i7, p2, p4, p1, p6, p5, p3]
+709: i16 = int_eq(i12, i7)
+712: guard_false(i16, descr=<Guard0x506c770>) [p0, i7, p2, p4, p1, p6, p5, p3]
+718: p18 = call_r(ConstClass(_x_divrem), p1, p0, descr=<Callr 8 rr EF=5>)
+794: guard_no_exception(descr=<Guard0x506e5c0>) [p18, p0, p1, p10, None, None, None, p6, p5, None]
+809: p20 = getfield_gc_r(p18, descr=<FieldP tuple2.item0 8 pure>)
+813: p21 = getfield_gc_r(p18, descr=<FieldP tuple2.item1 16 pure>)
+813: i22 = getfield_gc_i(p1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+824: i23 = int_ne(i22, i13)
+827: guard_false(i23, descr=<Guard0x506c7b8>) [p18, p0, p1, p10, None, None, None, p6, p5, None]
+833: i25 = int_lt(i22, 0)
+837: guard_false(i25, descr=<Guard0x506c800>) [p18, p0, p1, p10, None, None, None, p6, p5, None]
+843: i26 = getfield_gc_i(p20, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+847: i28 = int_gt(i26, 2)
+851: guard_false(i28, descr=<Guard0x506c848>) [p18, p0, p1, p10, None, None, None, p6, p5, None]
+857: i30 = call_i(ConstClass(rbigint._toint_helper), p20, descr=<Calli 8 r EF=4>)
+869: guard_no_exception(descr=<Guard0x506e620>) [p20, i30, p0, p10, None, None, p1, p6, p5, None]
debug_merge_point(0, 0, '(let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))')
debug_merge_point(0, 0, '(+ one5062 t2)')
+884: p31 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+896: guard_class(p31, 16478448, descr=<Guard0x506c890>) [p20, i30, p0, p10, None, None, p1, p6, p5, None]
+909: p33 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+920: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x506c8d8>) [p20, i30, p0, p10, None, None, p1, p6, p5, None]
+929: p35 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+933: guard_nonnull_class(p35, ConstClass(W_Bignum), descr=<Guard0x506e680>) [p20, i30, p0, p10, None, None, p1, p6, p5, None]
+952: p38 = call_r(ConstClass(fromint), i30, descr=<Callr 8 i EF=3>)
+1025: guard_no_exception(descr=<Guard0x506e6e0>) [p38, p35, i30, None, p10, None, None, None, p6, p5, None]
+1040: p39 = getfield_gc_r(p35, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1052: p41 = call_r(ConstClass(rbigint.add), p39, p38, descr=<Callr 8 rr EF=4>)
+1125: guard_no_exception(descr=<Guard0x506e740>) [p41, p35, i30, None, p10, None, None, None, p6, p5, None]
+1140: i42 = getfield_gc_i(p41, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1144: i44 = int_gt(i42, 2)
+1148: guard_true(i44, descr=<Guard0x506c920>) [p41, p35, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))')
debug_merge_point(0, 0, '(square AppRand48)')
+1154: p45 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+1154: p47 = call_r(ConstClass(rbigint.mul), p41, p41, descr=<Callr 8 rr EF=4>)
+1220: guard_no_exception(descr=<Guard0x506e7a0>) [p47, p41, None, i30, None, p10, None, None, None, p6, p5, None]
+1235: i48 = getfield_gc_i(p47, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1239: i50 = int_gt(i48, 2)
+1243: guard_true(i50, descr=<Guard0x506c968>) [p47, p41, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square (quotient AppRand49 one5062))')
+1249: i51 = getfield_gc_i(p39, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1260: i52 = getfield_gc_i(p39, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1264: i53 = int_is_zero(i52)
+1267: guard_false(i53, descr=<Guard0x506c9b0>) [p47, p41, None, i30, None, p10, None, None, None, p6, p5, None]
+1273: i54 = int_lt(i48, i51)
+1276: guard_false(i54, descr=<Guard0x506c9f8>) [p47, p41, None, i30, None, p10, None, None, None, p6, p5, None]
+1282: i55 = int_eq(i48, i51)
+1285: guard_false(i55, descr=<Guard0x506ca40>) [p47, p41, None, i30, None, p10, None, None, None, p6, p5, None]
+1291: i57 = int_eq(i51, 1)
+1295: guard_false(i57, descr=<Guard0x506ca88>) [p47, p41, None, i30, None, p10, None, None, None, p6, p5, None]
+1301: p59 = call_r(ConstClass(_x_divrem), p47, p39, descr=<Callr 8 rr EF=5>)
+1370: guard_no_exception(descr=<Guard0x506e800>) [p59, p39, p47, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1385: p60 = getfield_gc_r(p59, descr=<FieldP tuple2.item0 8 pure>)
+1389: p61 = getfield_gc_r(p59, descr=<FieldP tuple2.item1 16 pure>)
+1389: i62 = getfield_gc_i(p47, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1400: i63 = int_ne(i62, i52)
+1403: guard_false(i63, descr=<Guard0x506cad0>) [p59, p39, p47, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1409: i65 = int_lt(i62, 0)
+1413: guard_false(i65, descr=<Guard0x506cb18>) [p59, p39, p47, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1419: i66 = getfield_gc_i(p60, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1423: i68 = int_gt(i66, 2)
+1427: guard_true(i68, descr=<Guard0x506cb60>) [p59, p39, p47, None, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(* x4969 x4969)')
+1433: p70 = call_r(ConstClass(rbigint.mul), p60, p60, descr=<Callr 8 rr EF=4>)
+1499: guard_no_exception(descr=<Guard0x506e860>) [p70, p60, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1514: i71 = getfield_gc_i(p70, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1518: i73 = int_gt(i71, 2)
+1522: guard_true(i73, descr=<Guard0x506cba8>) [p70, p60, None, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(quotient AppRand50 one5062)')
+1528: i74 = int_lt(i71, i51)
+1531: guard_false(i74, descr=<Guard0x506cbf0>) [p70, p60, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1537: i75 = int_eq(i71, i51)
+1540: guard_false(i75, descr=<Guard0x506cc38>) [p70, p60, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1546: p77 = call_r(ConstClass(_x_divrem), p70, p39, descr=<Callr 8 rr EF=5>)
+1616: guard_no_exception(descr=<Guard0x506e8c0>) [p77, p39, p70, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1631: p78 = getfield_gc_r(p77, descr=<FieldP tuple2.item0 8 pure>)
+1635: p79 = getfield_gc_r(p77, descr=<FieldP tuple2.item1 16 pure>)
+1635: i80 = getfield_gc_i(p70, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1646: i81 = int_ne(i80, i52)
+1649: guard_false(i81, descr=<Guard0x506cc80>) [p77, p39, p70, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1655: i83 = int_lt(i80, 0)
+1659: guard_false(i83, descr=<Guard0x506ccc8>) [p77, p39, p70, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1665: i84 = getfield_gc_i(p78, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1669: i86 = int_gt(i84, 2)
+1673: guard_true(i86, descr=<Guard0x506cd10>) [p77, p39, p70, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(square t2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1679: i87 = int_is_true(i30)
+1682: guard_true(i87, descr=<Guard0x506cd58>) [p77, p39, p70, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1688: i88 = int_mul_ovf(i30, i30)
+1695: guard_no_overflow(descr=<Guard0x506cda0>) [p77, p39, p70, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(+ t2 (quotient AppRand51 one5062))')
+1701: p90 = call_r(ConstClass(fromint), i88, descr=<Callr 8 i EF=3>)
+1767: guard_no_exception(descr=<Guard0x506e920>) [p90, p35, p78, i88, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1782: i91 = getfield_gc_i(p90, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1786: i92 = int_lt(i91, i51)
+1789: guard_true(i92, descr=<Guard0x506cde8>) [p90, p35, p78, i88, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))')
debug_merge_point(0, 0, '(+ one5062 AppRand52)')
debug_merge_point(0, 0, '(let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))')
debug_merge_point(0, 0, '(* t3 a5078)')
+1795: p93 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+1806: guard_nonnull_class(p93, ConstClass(W_Bignum), descr=<Guard0x506e980>) [p90, p35, p78, i88, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+1825: p95 = getfield_gc_r(p93, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1829: p97 = call_r(ConstClass(rbigint.mul), p78, p95, descr=<Callr 8 rr EF=4>)
+1906: guard_no_exception(descr=<Guard0x506e9e0>) [p97, p93, p78, i88, None, p41, None, i30, None, p10, None, None, None, p6, p5, None]
+1921: i98 = getfield_gc_i(p97, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1925: i100 = int_gt(i98, 2)
+1929: guard_true(i100, descr=<Guard0x506ce30>) [p97, p93, p78, i88, None, p41, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(* t2 t4)')
+1935: p102 = call_r(ConstClass(rbigint.mul), p38, p41, descr=<Callr 8 rr EF=4>)
+2009: guard_no_exception(descr=<Guard0x506ea40>) [p102, p97, None, p78, i88, None, p41, None, i30, None, p10, None, None, None, p6, p5, None]
+2024: i103 = getfield_gc_i(p102, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2028: i105 = int_gt(i103, 2)
+2032: guard_true(i105, descr=<Guard0x506ce78>) [p102, p97, None, p78, i88, None, p41, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))')
debug_merge_point(0, 0, '(* x5080 AppRand54)')
+2038: p106 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+2049: guard_nonnull_class(p106, ConstClass(W_Fixnum), descr=<Guard0x506eaa0>) [p102, p97, None, p78, i88, None, p41, None, i30, None, p10, None, None, None, p6, p5, None]
+2068: i108 = getfield_gc_i(p106, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2072: i109 = int_is_true(i108)
+2075: guard_true(i109, descr=<Guard0x506cec0>) [p102, p97, None, p78, i88, None, p41, None, i30, None, p10, None, None, None, p6, p5, None]
+2081: p111 = call_r(ConstClass(fromint), i108, descr=<Callr 8 i EF=3>)
+2158: guard_no_exception(descr=<Guard0x506eb00>) [p111, p106, p102, p97, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+2173: p113 = call_r(ConstClass(rbigint.mul), p111, p102, descr=<Callr 8 rr EF=4>)
+2236: guard_no_exception(descr=<Guard0x506eb60>) [p113, p106, p102, p97, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+2251: i114 = getfield_gc_i(p113, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2255: i116 = int_gt(i114, 2)
+2259: guard_true(i116, descr=<Guard0x506cf08>) [p113, p106, p102, p97, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))')
debug_merge_point(0, 0, '(- AppRand53 AppRand55)')
+2265: p118 = call_r(ConstClass(rbigint.sub), p97, p113, descr=<Callr 8 rr EF=4>)
+2335: guard_no_exception(descr=<Guard0x506ebc0>) [p118, p113, None, p102, p97, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+2350: i119 = getfield_gc_i(p118, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2354: i121 = int_gt(i119, 2)
+2358: guard_true(i121, descr=<Guard0x506cf50>) [p118, p113, None, p102, p97, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(* 4 x5080)')
+2364: i123 = int_mul_ovf(4, i108)
+2378: guard_no_overflow(descr=<Guard0x506cf98>) [p118, p113, None, p102, p97, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
debug_merge_point(0, 0, '(loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
+2384: i124 = int_lt(i119, i51)
+2387: guard_false(i124, descr=<Guard0x506cfe0>) [p118, p113, None, p102, p97, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+2393: i125 = int_eq(i119, i51)
+2396: guard_false(i125, descr=<Guard0x506d028>) [p118, p113, None, p102, p97, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, p5, None]
+2402: p127 = call_r(ConstClass(_x_divrem), p118, p39, descr=<Callr 8 rr EF=5>)
+2475: guard_no_exception(descr=<Guard0x506ec20>) [p31, p6, p127, p39, p118, i123, None, None, None, None, None, None, None, None, None, None, i30, None, None, None, None, None, None, p5, None]
+2490: p128 = getfield_gc_r(p127, descr=<FieldP tuple2.item0 8 pure>)
+2494: p129 = getfield_gc_r(p127, descr=<FieldP tuple2.item1 16 pure>)
+2494: i130 = getfield_gc_i(p118, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2505: i131 = int_ne(i130, i52)
+2508: guard_false(i131, descr=<Guard0x506d070>) [p31, p6, p127, p39, p118, i123, None, None, None, None, None, None, None, None, None, None, i30, None, None, None, None, None, None, p5, None]
+2514: i133 = int_lt(i130, 0)
+2518: guard_false(i133, descr=<Guard0x506d0b8>) [p31, p6, p127, p39, p118, i123, None, None, None, None, None, None, None, None, None, None, i30, None, None, None, None, None, None, p5, None]
+2524: i134 = getfield_gc_i(p128, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2528: i136 = int_gt(i134, 2)
+2532: guard_true(i136, descr=<Guard0x506d100>) [p31, p6, p127, p39, p118, i123, None, None, None, None, None, None, None, None, None, None, i30, None, None, None, None, None, None, p5, None]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
debug_merge_point(0, 0, '(= y5076 0)')
+2538: i138 = int_eq(i30, 0)
+2542: guard_false(i138, descr=<Guard0x506d148>) [p31, p6, p127, p39, p118, i123, None, None, None, None, None, None, None, None, None, None, i30, None, None, None, None, None, None, p5, None]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
debug_merge_point(0, 0, '(* x4969 x4969)')
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+2548: i139 = int_is_true(i88)
+2551: guard_true(i139, descr=<Guard0x506d190>) [p31, p6, p127, p39, p118, i123, None, None, None, None, None, None, None, None, None, None, i30, None, None, None, None, None, None, p5, None]
+2557: i140 = int_mul_ovf(i88, i88)
+2564: guard_overflow(descr=<Guard0x506d1d8>) [p31, p6, p127, p39, p118, i123, None, None, None, None, None, None, None, None, None, None, i30, None, None, None, None, None, None, p5, None]
+2570: p142 = call_r(ConstClass(rbigint.mul), p90, p90, descr=<Callr 8 rr EF=4>)
+2647: guard_no_exception(descr=<Guard0x506ec80>) [p142, p128, p31, i123, None, None, None, None, None, None, i88, None, None, None, i30, None, p10, None, None, None, p6, None, None]
+2662: i143 = getfield_gc_i(p142, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2666: i145 = int_gt(i143, 2)
+2670: guard_false(i145, descr=<Guard0x506d220>) [p142, p128, p31, i123, None, None, None, None, None, None, i88, None, None, None, i30, None, p10, None, None, None, p6, None, None]
+2676: i147 = call_i(ConstClass(rbigint._toint_helper), p142, descr=<Calli 8 r EF=4>)
+2691: p149 = guard_exception(ConstClass(OverflowError), descr=<Guard0x506ece0>) [p142, i147, p128, p31, i123, None, None, None, None, None, None, i88, None, None, None, i30, None, p10, None, None, None, p6, None, None]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+2736: p150 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+2747: guard_nonnull_class(p150, ConstClass(W_Bignum), descr=<Guard0x506ed40>) [p150, p142, p128, p31, i123, None, None, None, None, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, None, None]
+2766: p152 = getfield_gc_r(p150, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2770: p154 = call_r(ConstClass(rbigint.sub), p152, p142, descr=<Callr 8 rr EF=4>)
+2843: guard_no_exception(descr=<Guard0x506eda0>) [p154, p150, p142, p128, p31, i123, None, None, None, None, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, None, None]
+2858: i155 = getfield_gc_i(p154, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2862: i157 = int_gt(i155, 2)
+2866: guard_true(i157, descr=<Guard0x506d268>) [p154, p150, p142, p128, p31, i123, None, None, None, None, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, None, None]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+2879: i160 = call_i(ConstClass(rbigint.lt), p154, ConstPtr(ptr159), descr=<Calli 1 rr EF=0>)
+2901: guard_false(i160, descr=<Guard0x506ee00>) [i160, p154, None, None, p128, p31, i123, None, None, None, None, None, None, None, None, None, None, i30, None, p10, None, None, None, p6, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+2910: p161 = new_with_vtable(descr=<SizeDescr 32>)
+2954: p162 = new_with_vtable(descr=<SizeDescr 32>)
+2972: setfield_gc(p162, ConstPtr(ptr163), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2983: setfield_gc(p162, ConstPtr(ptr164), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2987: p165 = new_with_vtable(descr=<SizeDescr 16>)
+2999: setfield_gc(p165, p154, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3003: setfield_gc(p162, p165, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+3007: p166 = new_with_vtable(descr=<SizeDescr 48>)
+3018: p167 = new_with_vtable(descr=<SizeDescr 32>)
+3029: setfield_gc(p167, ConstPtr(ptr168), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3033: setfield_gc(p167, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+3041: setfield_gc(p167, p165, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+3045: p170 = new_with_vtable(descr=<SizeDescr 40>)
+3056: setfield_gc(p170, p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3067: p171 = new_with_vtable(descr=<SizeDescr 40>)
+3078: setfield_gc(p171, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3089: p172 = new_with_vtable(descr=<SizeDescr 16>)
+3100: setfield_gc(p172, i30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+3104: setfield_gc(p171, p172, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+3108: p173 = new_with_vtable(descr=<SizeDescr 16>)
+3119: setfield_gc(p173, p128, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3130: setfield_gc(p171, p173, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+3134: p174 = new_with_vtable(descr=<SizeDescr 16>)
+3145: setfield_gc(p174, i123, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+3149: setfield_gc(p171, p174, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+3153: setfield_gc(p170, p171, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3157: setfield_gc(p170, p6, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3175: setfield_gc(p170, ConstPtr(ptr175), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3179: p176 = new_with_vtable(descr=<SizeDescr 40>)
+3190: setfield_gc(p176, ConstPtr(ptr177), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3201: setfield_gc(p176, ConstPtr(ptr178), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+3205: setfield_gc(p176, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+3213: setfield_gc(p176, p165, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+3217: setfield_gc(p166, p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3221: setfield_gc(p161, p162, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3225: setfield_gc(p161, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+3233: setfield_gc(p161, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+3241: setfield_gc(p166, p167, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3245: setfield_gc(p166, p170, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3256: setfield_gc(p166, ConstPtr(ptr182), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3260: setfield_gc(p166, p176, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+3264: jump(p161, p166, descr=TargetToken(69318064))
+3296: --end of the loop--
[3e4c07335186f08] jit-log-opt-bridge}
[3e4c073355a45aa] {jit-backend
[3e4c0733571e911] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d
[3e4c0733572f391] jit-backend-dump}
[3e4c0733573a828] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d21f4 +0  2C000000
[3e4c0733573bed3] jit-backend-dump}
[3e4c0733574025b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2a65 +0  2C000000
[3e4c07335741185] jit-backend-dump}
[3e4c0733574450b] {jit-backend-addr
bridge out of Guard 0x44113d0 has address 0x7ff2522d21f0 to 0x7ff2522d2a60
       gc table: 0x7ff2522d2050
    jump target: 0x7ff2522d21f0
         resops: 0x7ff2522d21fe
       failures: 0x7ff2522d2a60
            end: 0x7ff2522d2f98
[3e4c07335746a0c] jit-backend-addr}
[3e4c0733574a01d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2222 +0  34090000
[3e4c0733574ae40] jit-backend-dump}
[3e4c0733574e21b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d222c +0  46090000
[3e4c0733574ef8c] jit-backend-dump}
[3e4c0733575228e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d223a +0  54090000
[3e4c07335752fa7] jit-backend-dump}
[3e4c0733575617d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d224e +0  5C090000
[3e4c07335756e80] jit-backend-dump}
[3e4c0733575a1b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d226a +0  78090000
[3e4c0733575ae9e] jit-backend-dump}
[3e4c0733575e090] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2280 +0  7E090000
[3e4c0733575ed6b] jit-backend-dump}
[3e4c07335761ec7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2292 +0  88090000
[3e4c07335762ba2] jit-backend-dump}
[3e4c07335765d23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d22a4 +0  92090000
[3e4c073357669f5] jit-backend-dump}
[3e4c07335769b94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2327 +0  2B090000
[3e4c0733576a885] jit-backend-dump}
[3e4c0733576d9cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2335 +0  39090000
[3e4c0733576e6a1] jit-backend-dump}
[3e4c07335771828] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2353 +0  37090000
[3e4c073357724ea] jit-backend-dump}
[3e4c0733577566e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d23a8 +0  FE080000
[3e4c07335776334] jit-backend-dump}
[3e4c073357794c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d23b6 +0  0C090000
[3e4c0733577a18a] jit-backend-dump}
[3e4c0733577d2dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d23d4 +0  0A090000
[3e4c0733577dfb8] jit-backend-dump}
[3e4c0733578111a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d23e7 +0  13090000
[3e4c07335781de9] jit-backend-dump}
[3e4c07335784f92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d23fd +0  19090000
[3e4c07335785c64] jit-backend-dump}
[3e4c07335788d92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2413 +0  1F090000
[3e4c07335789a6d] jit-backend-dump}
[3e4c0733578cb86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2424 +0  2A090000
[3e4c0733578d858] jit-backend-dump}
[3e4c07335790aa9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2434 +0  36090000
[3e4c07335791793] jit-backend-dump}
[3e4c07335794920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d244b +0  3B090000
[3e4c07335795630] jit-backend-dump}
[3e4c073357987c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d245b +0  47090000
[3e4c073357994ad] jit-backend-dump}
[3e4c0733579c60c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2468 +0  56090000
[3e4c0733579d2f4] jit-backend-dump}
[3e4c073357a0468] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d247e +0  5C090000
[3e4c073357a114a] jit-backend-dump}
[3e4c073357a4320] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d24a3 +0  53090000
[3e4c073357a4fdd] jit-backend-dump}
[3e4c073357a8157] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2507 +0  0B090000
[3e4c073357a8e79] jit-backend-dump}
[3e4c073357abff7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2510 +0  1E090000
[3e4c073357accc6] jit-backend-dump}
[3e4c073357afdeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2521 +0  29090000
[3e4c073357b0adb] jit-backend-dump}
[3e4c073357b3bf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2536 +0  30090000
[3e4c073357b48cc] jit-backend-dump}
[3e4c073357b7a38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2548 +0  34090000
[3e4c073357b86f7] jit-backend-dump}
[3e4c073357bb850] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d25a4 +0  F4080000
[3e4c073357bc51c] jit-backend-dump}
[3e4c073357bf6c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d25f5 +0  BF080000
[3e4c073357c03d4] jit-backend-dump}
[3e4c073357c3628] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2603 +0  CD080000
[3e4c073357c431f] jit-backend-dump}
[3e4c073357c74e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2654 +0  98080000
[3e4c073357c81bb] jit-backend-dump}
[3e4c073357cb35a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d2662 +0  A6080000
[3e4c073357cc011] jit-backend-dump}
[3e4c073357cf11d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d273b +0  E9070000
[3e4c073357cfde6] jit-backend-dump}
[3e4c073357d2fcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d278c +0  B4070000
[3e4c073357d3ca4] jit-backend-dump}
[3e4c073357d6e87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d27a2 +0  BA070000
[3e4c073357d7b53] jit-backend-dump}
[3e4c073357dad48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d27c9 +0  AF070000
[3e4c073357dba0a] jit-backend-dump}
[3e4c073357deeda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb76c +0  806A0100
[3e4c073357dfc52] jit-backend-dump}
[3e4c073357e3e37] jit-backend}
[3e4c073357e7b77] {jit-log-opt-bridge
# bridge out of Guard 0x44113d0 with 214 ops
[p0, p1, p2, p3, p4, i5]
+438: p6 = getfield_gc_r(p1, descr=<FieldP tuple2.item0 8 pure>)
+442: p7 = getfield_gc_r(p1, descr=<FieldP tuple2.item1 16 pure>)
+446: i8 = getfield_gc_i(p3, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+450: i9 = getfield_gc_i(p2, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+461: i10 = int_ne(i8, i9)
+464: guard_false(i10, descr=<Guard0x506ee60>) [p0, i9, i8, p6, p7, p3, i5, p2, p4]
+470: i12 = int_lt(i8, 0)
+474: guard_false(i12, descr=<Guard0x506d2b0>) [p0, i9, i8, p6, p7, p3, i5, p2, p4]
+480: i13 = getfield_gc_i(p6, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+484: i15 = int_gt(i13, 2)
+488: guard_true(i15, descr=<Guard0x506d2f8>) [p0, i9, i8, p6, p7, p3, i5, p2, p4]
+494: p16 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+505: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x506d340>) [p0, i9, i8, p6, p7, p3, i5, p2, p4]
+514: p18 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+518: guard_not_invalidated(descr=<Guard0x506d388>) [p0, i9, i8, p6, p7, p3, i5, p2, p4]
+518: p19 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_0 40 pure>)
+522: p20 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2.inst__vals_w_1 48 pure>)
+526: p21 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66)))) from (quotient one^25065 a5078)')
+530: guard_class(p21, 16435208, descr=<Guard0x506d3d0>) [p0, i9, i8, p6, p7, p3, i5, p2, p4]
+542: p23 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+546: guard_nonnull_class(p23, ConstClass(ForwardLink), descr=<Guard0x506eec0>) [p0, i9, i8, p6, p7, p3, i5, p2, p4]
debug_merge_point(0, 0, '(- bs b2)')
+564: guard_nonnull_class(p19, ConstClass(W_Bignum), descr=<Guard0x506ef20>) [p0, i9, i8, p6, p7, p3, i5, p2, p4]
+582: guard_nonnull_class(p20, ConstClass(W_Bignum), descr=<Guard0x506ef80>) [p0, i9, i8, p6, p7, p3, i5, p2, p4]
+600: p27 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+604: p28 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+608: p30 = call_r(ConstClass(rbigint.sub), p27, p28, descr=<Callr 8 rr EF=4>)
+716: guard_no_exception(descr=<Guard0x506efe0>) [p30, p6, p20, p19, p18, p21, p23, None, None, None]
+731: i32 = getfield_gc_i(p30, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+735: i34 = int_gt(i32, 2)
+739: guard_false(i34, descr=<Guard0x506d418>) [p30, p6, p20, p19, p18, p21, p23, None, None, None]
+745: i36 = call_i(ConstClass(rbigint._toint_helper), p30, descr=<Calli 8 r EF=4>)
+760: guard_no_exception(descr=<Guard0x506f040>) [p30, i36, p6, p20, p19, p18, p21, p23, None, None, None]
debug_merge_point(0, 0, '(- b4 b2)')
+775: p38 = call_r(ConstClass(rbigint.sub), p6, p28, descr=<Callr 8 rr EF=4>)
+845: guard_no_exception(descr=<Guard0x506f0a0>) [p38, i36, p6, p20, p19, p18, p21, p23, None, None, None]
+860: i39 = getfield_gc_i(p38, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+864: i41 = int_gt(i39, 2)
+868: guard_false(i41, descr=<Guard0x506d460>) [p38, i36, p6, p20, p19, p18, p21, p23, None, None, None]
+874: i43 = call_i(ConstClass(rbigint._toint_helper), p38, descr=<Calli 8 r EF=4>)
+889: guard_no_exception(descr=<Guard0x506f100>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66)))')
debug_merge_point(0, 0, '(list b2 AppRand62 AppRand63)')
debug_merge_point(0, 0, '(+ n5118 s)')
+904: guard_class(p18, 16500368, descr=<Guard0x506d4a8>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
+923: p45 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+927: guard_nonnull_class(p45, ConstClass(W_Fixnum), descr=<Guard0x506f160>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
+945: p47 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+949: guard_nonnull_class(p47, ConstClass(W_Fixnum), descr=<Guard0x506f1c0>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
+967: i49 = getfield_gc_i(p45, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+971: i50 = getfield_gc_i(p47, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+975: i51 = int_add_ovf(i49, i50)
+978: guard_no_overflow(descr=<Guard0x506d4f0>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))')
debug_merge_point(0, 0, 'AppRand64')
+984: p52 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+988: guard_class(p52, 16505296, descr=<Guard0x506d538>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
debug_merge_point(0, 0, '(pies AppRand65 m s)')
+1000: p54 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+1004: guard_nonnull_class(p54, ConstClass(W_Fixnum), descr=<Guard0x506f220>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
+1030: i57 = instance_ptr_eq(p52, ConstPtr(ptr56))
+1033: guard_true(i57, descr=<Guard0x506d580>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
debug_merge_point(0, 0, '(let ([if5 (< m n5118)]) (if if5 '() (let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))))))) from (pies AppRand65 m s)')
debug_merge_point(0, 0, '(< m n5118)')
+1039: i58 = getfield_gc_i(p54, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1043: i59 = int_lt(i58, i51)
+1046: guard_false(i59, descr=<Guard0x506d5c8>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
debug_merge_point(0, 0, '(if if5 '() (let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66))))))')
debug_merge_point(0, 0, '(let ([bs (pi-brent-salamin n5118)][b2 (pi-borwein2 n5118)][b4 (pi-borwein4 n5118)]) (let ([AppRand62 (- bs b2)][AppRand63 (- b4 b2)]) (let ([AppRand64 (list b2 AppRand62 AppRand63)][AppRand65 (+ n5118 s)]) (let ([AppRand64 AppRand64][AppRand66 (pies AppRand65 m s)]) (cons AppRand64 AppRand66)))))')
debug_merge_point(0, 0, '(pi-brent-salamin n5118)')
debug_merge_point(0, 0, '(let ([one (expt 10 nb-digits)]) (let ([loop4976 (lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))][AppRand20 (square one)]) (let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1))))')
debug_merge_point(0, 0, '(expt 10 nb-digits)')
+1052: f60 = cast_int_to_float(i51)
+1057: i61 = float_ne(f60, f60)
+1068: guard_false(i61, descr=<Guard0x506d610>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
+1074: f63 = float_add(f60, 11235582092889474423308157442431404585112356118389416079589380072358292237843810195794279832650471001320007117491962084853674360550901038905802964414967132773610493339054092829768888725077880882465817684505312860552384417646403930092119569408801702322709406917786643639996702871154982269052209770601514008576.000000)
+1094: i64 = float_eq(f63, f60)
+1105: guard_false(i64, descr=<Guard0x506d658>) [p38, i43, i36, p6, p20, p19, p18, p21, p23, None, None, None]
+1111: f67 = call_f(ConstClass(ccall_pow), 10.000000, f60, descr=<Callf 8 ff EF=2>)
+1163: i70 = call_i(ConstClass(_ll_1_threadlocalref_get__INTLlT_Signed), 48, descr=<Calli 4 i EF=2 OS=5>)
+1175: f71 = float_sub(f67, f67)
+1184: i73 = float_eq(f71, 0.000000)
+1205: guard_true(i73, descr=<Guard0x506f280>) [i70, f71, f67, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1211: i74 = int_is_true(i70)
+1214: guard_false(i74, descr=<Guard0x506d6a0>) [i70, f71, f67, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1220: i75 = float_ne(f67, f67)
+1231: guard_false(i75, descr=<Guard0x506d6e8>) [i70, f71, f67, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1237: i77 = float_ge(f67, -9223372036854775808.000000)
+1252: guard_true(i77, descr=<Guard0x506d730>) [i70, f71, f67, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1258: i79 = float_lt(f67, 9223372036854775808.000000)
+1270: guard_false(i79, descr=<Guard0x506d778>) [i70, f71, f67, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1276: p81 = call_r(ConstClass(fromint), i51, descr=<Callr 8 i EF=3>)
+1353: guard_no_exception(descr=<Guard0x506f2e0>) [p81, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1375: p84 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr83), p81, descr=<Callr 8 rr EF=4>)
+1434: guard_no_exception(descr=<Guard0x506f340>) [p84, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1449: i85 = getfield_gc_i(p84, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1453: i87 = int_gt(i85, 2)
+1457: guard_true(i87, descr=<Guard0x506d7c0>) [p84, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
debug_merge_point(0, 0, '(let ([loop4976 (lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))][AppRand20 (square one)]) (let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1)))')
debug_merge_point(0, 0, '(lambda (a4978 b4980 t x4983) (let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))))')
debug_merge_point(0, 0, '(square one)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1463: p89 = call_r(ConstClass(rbigint.mul), p84, p84, descr=<Callr 8 rr EF=4>)
+1529: guard_no_exception(descr=<Guard0x506f3a0>) [p89, p84, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1544: i90 = getfield_gc_i(p89, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1548: i92 = int_gt(i90, 2)
+1552: guard_true(i92, descr=<Guard0x506d808>) [p89, p84, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand21 (square-root (quotient AppRand20 2))]) (loop4976 one AppRand21 (quotient one 4) 1))')
debug_merge_point(0, 0, '(square-root (quotient AppRand20 2))')
+1565: i95 = getarrayitem_gc_i(ConstPtr(ptr93), 0, descr=<ArrayS 8>)
+1569: p96 = new_array_clear(i90, descr=<ArrayS 8>)
+1670: p97 = new_with_vtable(descr=<SizeDescr 32>)
+1711: setfield_gc(p97, i90, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1715: setfield_gc(p97, p96, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1726: i99 = call_i(ConstClass(_inplace_divrem1), p97, p89, i95, descr=<Calli 8 rri EF=5>)
+1751: setfield_gc(p97, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1760: guard_no_exception(descr=<Guard0x506f400>) [p89, i99, p97, p84, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1775: call_n(ConstClass(rbigint._normalize), p97, descr=<Callv 0 r EF=5>)
+1841: guard_no_exception(descr=<Guard0x506f460>) [p89, i99, p97, p84, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
+1856: i102 = int_is_true(i99)
+1856: i103 = getfield_gc_i(p89, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1868: i105 = int_ne(i103, 1)
+1872: guard_false(i105, descr=<Guard0x506d850>) [p89, i99, p97, p84, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1885: i108 = call_i(ConstClass(rbigint.lt), p97, ConstPtr(ptr107), descr=<Calli 1 rr EF=0>)
+1908: guard_false(i108, descr=<Guard0x506f4c0>) [i108, p89, p97, p84, i43, i51, p47, p54, p52, i36, None, p20, None, None, p21, p23, None, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1917: p109 = new_with_vtable(descr=<SizeDescr 32>)
+1961: p110 = new_with_vtable(descr=<SizeDescr 32>)
+1972: setfield_gc(p110, ConstPtr(ptr111), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1990: setfield_gc(p110, ConstPtr(ptr112), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1994: p113 = new_with_vtable(descr=<SizeDescr 16>)
+2005: setfield_gc(p113, p97, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2016: setfield_gc(p110, p113, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+2020: p114 = new_with_vtable(descr=<SizeDescr 48>)
+2032: p115 = new_with_vtable(descr=<SizeDescr 32>)
+2043: setfield_gc(p115, ConstPtr(ptr116), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2047: setfield_gc(p115, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+2055: setfield_gc(p115, p113, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+2059: p118 = new_with_vtable(descr=<SizeDescr 40>)
+2070: setfield_gc(p118, p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2081: p119 = new_with_vtable(descr=<SizeDescr 32>)
+2092: p120 = new_with_vtable(descr=<SizeDescr 24>)
+2103: setfield_gc(p120, ConstPtr(ptr121), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2107: p122 = new_with_vtable(descr=<SizeDescr 16>)
+2125: setfield_gc(p122, p84, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2143: setfield_gc(p120, p122, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2147: setfield_gc(p119, p120, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2151: p123 = new_with_vtable(descr=<SizeDescr 32>)
+2162: setfield_gc(p123, ConstPtr(ptr124), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2173: setfield_gc(p123, ConstPtr(ptr125), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2177: setfield_gc(p123, p122, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+2181: setfield_gc(p119, p123, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+2185: p126 = new_with_vtable(descr=<SizeDescr 16>)
+2196: setfield_gc(p126, p89, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2200: setfield_gc(p119, p126, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+2204: setfield_gc(p118, p119, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2208: p127 = new_with_vtable(descr=<SizeDescr 40>)
+2219: setfield_gc(p127, p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2223: p128 = new_with_vtable(descr=<SizeDescr 40>)
+2234: setfield_gc(p128, p52, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2245: p129 = new_with_vtable(descr=<SizeDescr 16>)
+2256: setfield_gc(p129, i51, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2260: setfield_gc(p128, p129, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+2264: setfield_gc(p128, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+2275: setfield_gc(p128, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+2286: setfield_gc(p127, p128, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2290: p130 = new_with_vtable(descr=<SizeDescr 48>)
+2301: setfield_gc(p130, p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2305: setfield_gc(p130, p52, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2309: setfield_gc(p130, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2327: setfield_gc(p130, ConstPtr(ptr131), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2331: p132 = new_with_vtable(descr=<SizeDescr 24>)
+2343: setfield_gc(p132, p20, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+2355: p133 = new_with_vtable(descr=<SizeDescr 24>)
+2367: setfield_gc(p133, i36, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+2371: p134 = new_with_vtable(descr=<SizeDescr 24>)
+2382: setfield_gc(p134, i43, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+2400: setfield_gc(p134, ConstPtr(ptr135), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+2404: setfield_gc(p133, p134, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+2408: setfield_gc(p132, p133, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+2413: setfield_gc(p130, p132, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2417: setfield_gc(p127, p130, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2428: setfield_gc(p127, ConstPtr(ptr136), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2432: setfield_gc(p118, p127, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2443: setfield_gc(p118, ConstPtr(ptr137), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2447: p138 = new_with_vtable(descr=<SizeDescr 40>)
+2458: setfield_gc(p138, ConstPtr(ptr139), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2469: setfield_gc(p138, ConstPtr(ptr140), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2473: setfield_gc(p138, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2481: setfield_gc(p138, p113, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2492: setfield_gc(p114, ConstPtr(ptr142), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2503: setfield_gc(p114, p115, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2507: setfield_gc(p114, p118, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2511: setfield_gc(p114, p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2515: setfield_gc(p109, p110, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2526: setfield_gc(p109, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2534: setfield_gc(p109, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2542: setfield_gc(p114, p138, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2546: jump(p109, p114, descr=TargetToken(69318064))
+2576: --end of the loop--
[3e4c073358b4de7] jit-log-opt-bridge}
[3e4c07335c46e5e] {jit-backend
[3e4c07335d0e8a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d31b
[3e4c07335d1ad34] jit-backend-dump}
[3e4c07335d260c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d32b4 +0  2C000000
[3e4c07335d2763d] jit-backend-dump}
[3e4c07335d2b838] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d3885 +0  2C000000
[3e4c07335d2c727] jit-backend-dump}
[3e4c07335d2fe3c] {jit-backend-addr
bridge out of Guard 0x45ce680 has address 0x7ff2522d32b0 to 0x7ff2522d3880
       gc table: 0x7ff2522d31b0
    jump target: 0x7ff2522d32b0
         resops: 0x7ff2522d32be
       failures: 0x7ff2522d3880
            end: 0x7ff2522d3bec
[3e4c07335d322c3] jit-backend-addr}
[3e4c07335d35a09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d32d1 +0  93060000
[3e4c07335d367d3] jit-backend-dump}
[3e4c07335d39b68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d32e5 +0  9B060000
[3e4c07335d3a87a] jit-backend-dump}
[3e4c07335d3dbb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d3336 +0  66060000
[3e4c07335d3e8fa] jit-backend-dump}
[3e4c07335d41bbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d338b +0  2D060000
[3e4c07335d42882] jit-backend-dump}
[3e4c07335d45abd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d3399 +0  3B060000
[3e4c07335d4677a] jit-backend-dump}
[3e4c07335d49a7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d33b7 +0  39060000
[3e4c07335d4a779] jit-backend-dump}
[3e4c07335d4d977] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d33d0 +0  58060000
[3e4c07335d4e63a] jit-backend-dump}
[3e4c07335d51796] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d33e7 +0  5D060000
[3e4c07335d52477] jit-backend-dump}
[3e4c07335d555d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d33f4 +0  6C060000
[3e4c07335d56284] jit-backend-dump}
[3e4c07335d5943e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d33fe +0  7E060000
[3e4c07335d5a114] jit-backend-dump}
[3e4c07335d5d2ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d340f +0  89060000
[3e4c07335d5df94] jit-backend-dump}
[3e4c07335d611c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d3423 +0  91060000
[3e4c07335d61e7d] jit-backend-dump}
[3e4c07335d64fe2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d343a +0  96060000
[3e4c07335d65c9f] jit-backend-dump}
[3e4c07335d68f11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d3472 +0  7A060000
[3e4c07335d69bf6] jit-backend-dump}
[3e4c07335d6cd36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d34dc +0  2C060000
[3e4c07335d70ed5] jit-backend-dump}
[3e4c07335d74bce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d34ea +0  3A060000
[3e4c07335d75977] jit-backend-dump}
[3e4c07335d78cde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d35af +0  91050000
[3e4c07335d799de] jit-backend-dump}
[3e4c07335d7cbdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d3607 +0  55050000
[3e4c07335d7d8fa] jit-backend-dump}
[3e4c07335d80bd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d361d +0  5B050000
[3e4c07335d818f6] jit-backend-dump}
[3e4c07335d84b2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d366f +0  25050000
[3e4c07335d85807] jit-backend-dump}
[3e4c07335d889af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d367d +0  33050000
[3e4c07335d89697] jit-backend-dump}
[3e4c07335d8c8a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d36a3 +0  29050000
[3e4c07335d8d589] jit-backend-dump}
[3e4c07335d90ca7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c63cc +0  E0CE0000
[3e4c07335d91a1e] jit-backend-dump}
[3e4c07335d95b71] jit-backend}
[3e4c07335d998d8] {jit-log-opt-bridge
# bridge out of Guard 0x45ce680 with 137 ops
[p0, i1, p2, p3, p4, p5, p6, p7, p8]
i9 = save_exc_class()
p10 = save_exception()
restore_exception(i9, p10)
+278: guard_no_exception(descr=<Guard0x506f520>) [p0, i1, p2, p3, p4, p5, p6, p7, p8]
+293: guard_class(p8, ConstClass(W_Bignum), descr=<Guard0x506d898>) [p0, i1, p2, p3, p4, p5, p6, p7, p8]
+313: p13 = call_r(ConstClass(fromint), i1, descr=<Callr 8 i EF=3>)
+379: guard_no_exception(descr=<Guard0x506f580>) [p13, p8, i1, p2, p3, p4, p5, p6, p7, None]
+394: p15 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+405: p17 = call_r(ConstClass(rbigint.sub), p15, p13, descr=<Callr 8 rr EF=4>)
+464: guard_no_exception(descr=<Guard0x506f5e0>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
+479: i18 = getfield_gc_i(p17, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+483: i20 = int_gt(i18, 2)
+487: guard_true(i20, descr=<Guard0x506d8e0>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
+493: p21 = getfield_gc_r(p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+504: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x506f640>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
debug_merge_point(0, 0, '(* 2 x4983)')
+523: guard_not_invalidated(descr=<Guard0x506d928>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
+523: p23 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+535: guard_class(p23, 16500720, descr=<Guard0x506d970>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
+548: p25 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+552: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x506f6a0>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
+571: i27 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+575: i28 = int_is_true(i27)
+578: guard_true(i28, descr=<Guard0x506d9b8>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
+584: i30 = int_mul_ovf(2, i27)
+588: guard_no_overflow(descr=<Guard0x506da00>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
+594: p31 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+598: guard_class(p31, 16477696, descr=<Guard0x506da48>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
+611: p33 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+622: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x506da90>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
+631: p35 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+636: guard_nonnull_class(p35, ConstClass(W_Bignum), descr=<Guard0x506f700>) [p17, i1, p2, p3, p4, p5, p6, p7, p8]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+654: p37 = getfield_gc_r(p35, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+658: i39 = call_i(ConstClass(rbigint.eq), p37, p4, descr=<Calli 1 rr EF=0>)
+701: guard_false(i39, descr=<Guard0x506f760>) [i39, i30, p17, p35, p31, p21, None, None, None, p4, None, p6, None, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+710: p41 = call_r(ConstClass(rbigint.add), p37, p4, descr=<Callr 8 rr EF=4>)
+801: guard_no_exception(descr=<Guard0x506f7c0>) [p41, i30, p17, p35, p31, p21, None, None, None, p4, None, p6, None, None]
+816: i42 = getfield_gc_i(p41, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+820: i44 = int_gt(i42, 2)
+824: guard_true(i44, descr=<Guard0x506dad8>) [p41, i30, p17, p35, p31, p21, None, None, None, p4, None, p6, None, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+837: i47 = getarrayitem_gc_i(ConstPtr(ptr45), 0, descr=<ArrayS 8>)
+841: p48 = new_array_clear(i42, descr=<ArrayS 8>)
+934: p49 = new_with_vtable(descr=<SizeDescr 32>)
+975: setfield_gc(p49, i42, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+979: setfield_gc(p49, p48, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+983: i51 = call_i(ConstClass(_inplace_divrem1), p49, p41, i47, descr=<Calli 8 rri EF=5>)
+1004: setfield_gc(p49, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1012: guard_no_exception(descr=<Guard0x506f820>) [p41, i51, p49, i30, p17, p35, p31, p21, None, None, None, p4, None, p6, None, None]
+1027: call_n(ConstClass(rbigint._normalize), p49, descr=<Callv 0 r EF=5>)
+1100: guard_no_exception(descr=<Guard0x506f880>) [p41, i51, p49, i30, p17, p35, p31, p21, None, None, None, p4, None, p6, None, None]
+1115: i54 = int_is_true(i51)
+1115: i55 = getfield_gc_i(p41, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1127: i57 = int_ne(i55, 1)
+1131: guard_false(i57, descr=<Guard0x506db20>) [p41, i51, p49, i30, p17, p35, p31, p21, None, None, None, p4, None, p6, None, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1137: p59 = call_r(ConstClass(rbigint.mul), p37, p4, descr=<Callr 8 rr EF=4>)
+1204: guard_no_exception(descr=<Guard0x506f8e0>) [p59, p49, i30, p17, p35, p31, p21, None, None, None, p4, None, p6, None, None]
+1219: i60 = getfield_gc_i(p59, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1223: i62 = int_gt(i60, 2)
+1227: guard_true(i62, descr=<Guard0x506db68>) [p59, p49, i30, p17, p35, p31, p21, None, None, None, p4, None, p6, None, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
+1233: p63 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1240: i66 = call_i(ConstClass(rbigint.lt), p59, ConstPtr(ptr65), descr=<Calli 1 rr EF=0>)
+1262: guard_false(i66, descr=<Guard0x506f940>) [i66, p59, p49, i30, p17, p35, p31, p21, None, None, None, p4, None, p6, None, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1271: p67 = new_with_vtable(descr=<SizeDescr 32>)
+1315: p68 = new_with_vtable(descr=<SizeDescr 32>)
+1333: setfield_gc(p68, ConstPtr(ptr69), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1344: setfield_gc(p68, ConstPtr(ptr70), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1348: p71 = new_with_vtable(descr=<SizeDescr 16>)
+1359: setfield_gc(p71, p59, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1363: setfield_gc(p68, p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1367: p72 = new_with_vtable(descr=<SizeDescr 48>)
+1379: p73 = new_with_vtable(descr=<SizeDescr 32>)
+1391: setfield_gc(p73, ConstPtr(ptr74), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1395: setfield_gc(p73, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1403: setfield_gc(p73, p71, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1407: p76 = new_with_vtable(descr=<SizeDescr 40>)
+1419: setfield_gc(p76, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1430: p77 = new_with_vtable(descr=<SizeDescr 32>)
+1441: p78 = new_with_vtable(descr=<SizeDescr 48>)
+1452: setfield_gc(p78, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1463: setfield_gc(p78, p35, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1474: p79 = new_with_vtable(descr=<SizeDescr 16>)
+1485: setfield_gc(p79, p4, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1496: setfield_gc(p78, p79, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1500: p80 = new_with_vtable(descr=<SizeDescr 16>)
+1511: setfield_gc(p80, p17, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1522: setfield_gc(p78, p80, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1526: p81 = new_with_vtable(descr=<SizeDescr 16>)
+1537: setfield_gc(p81, i30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1548: setfield_gc(p78, p81, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+1552: setfield_gc(p77, p78, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1556: p82 = new_with_vtable(descr=<SizeDescr 16>)
+1567: setfield_gc(p82, p49, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1578: setfield_gc(p77, p82, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1582: setfield_gc(p77, p71, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1586: setfield_gc(p76, p77, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1590: setfield_gc(p76, p6, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1608: setfield_gc(p76, ConstPtr(ptr83), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1612: p84 = new_with_vtable(descr=<SizeDescr 40>)
+1623: setfield_gc(p84, ConstPtr(ptr85), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1634: setfield_gc(p84, ConstPtr(ptr86), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1638: setfield_gc(p84, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1646: setfield_gc(p84, p71, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1650: setfield_gc(p72, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1655: setfield_gc(p67, p68, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1659: setfield_gc(p67, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1667: setfield_gc(p67, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1675: setfield_gc(p72, p73, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1680: setfield_gc(p72, p76, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1692: setfield_gc(p72, ConstPtr(ptr90), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1697: setfield_gc(p72, p84, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1702: jump(p67, p72, descr=TargetToken(69318064))
+1744: --end of the loop--
[3e4c07335e10a4a] jit-log-opt-bridge}
[3e4c0733620cba8] {jit-backend
[3e4c07336309249] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d3ee
[3e4c07336318e54] jit-backend-dump}
[3e4c073363244d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4044 +0  2C000000
[3e4c07336325b51] jit-backend-dump}
[3e4c0733632a00b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d47e5 +0  2C000000
[3e4c0733632b064] jit-backend-dump}
[3e4c0733632e506] {jit-backend-addr
bridge out of Guard 0x4383070 has address 0x7ff2522d4040 to 0x7ff2522d47e0
       gc table: 0x7ff2522d3ee0
    jump target: 0x7ff2522d4040
         resops: 0x7ff2522d404e
       failures: 0x7ff2522d47e0
            end: 0x7ff2522d4cb6
[3e4c07336330993] jit-backend-addr}
[3e4c07336334058] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4071 +0  A5080000
[3e4c07336334f42] jit-backend-dump}
[3e4c07336338363] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d408a +0  A8080000
[3e4c07336339118] jit-backend-dump}
[3e4c0733633c44e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d409b +0  B3080000
[3e4c0733633d1a7] jit-backend-dump}
[3e4c07336340523] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d40a4 +0  C6080000
[3e4c07336341257] jit-backend-dump}
[3e4c07336344544] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d40b1 +0  D5080000
[3e4c0733634528a] jit-backend-dump}
[3e4c07336348476] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4110 +0  92080000
[3e4c073363491ad] jit-backend-dump}
[3e4c0733634c396] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d415a +0  64080000
[3e4c0733634d0cd] jit-backend-dump}
[3e4c07336350297] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4168 +0  72080000
[3e4c07336350ff3] jit-backend-dump}
[3e4c07336354198] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d418c +0  6A080000
[3e4c07336354ecc] jit-backend-dump}
[3e4c07336358239] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d41c1 +0  51080000
[3e4c07336358fb4] jit-backend-dump}
[3e4c0733635c1b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d41ce +0  60080000
[3e4c0733635cf17] jit-backend-dump}
[3e4c0733636018f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4223 +0  27080000
[3e4c07336360eeb] jit-backend-dump}
[3e4c073363640dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4271 +0  F5070000
[3e4c07336364e4b] jit-backend-dump}
[3e4c073363680a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d427f +0  03080000
[3e4c07336368e0d] jit-backend-dump}
[3e4c0733636bfbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d42a3 +0  FB070000
[3e4c0733636cd0e] jit-backend-dump}
[3e4c0733636ff40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d42d8 +0  E2070000
[3e4c07336370cab] jit-backend-dump}
[3e4c07336373f2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d42f3 +0  E3070000
[3e4c07336374cad] jit-backend-dump}
[3e4c07336378011] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d430a +0  E8070000
[3e4c07336378d5b] jit-backend-dump}
[3e4c0733637bfcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d431f +0  EF070000
[3e4c0733637cd35] jit-backend-dump}
[3e4c0733638000c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4328 +0  02080000
[3e4c07336380d90] jit-backend-dump}
[3e4c07336383ffc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d438b +0  BB070000
[3e4c07336384d64] jit-backend-dump}
[3e4c07336387edc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4399 +0  C9070000
[3e4c07336388c31] jit-backend-dump}
[3e4c0733638bec8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d43a3 +0  DB070000
[3e4c0733638cc36] jit-backend-dump}
[3e4c0733638fee3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d43c2 +0  D8070000
[3e4c07336390c0b] jit-backend-dump}
[3e4c07336393e92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d43e9 +0  CD070000
[3e4c07336394bdf] jit-backend-dump}
[3e4c07336397e8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d444c +0  86070000
[3e4c07336398bf0] jit-backend-dump}
[3e4c0733639be16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d445a +0  94070000
[3e4c0733639cb3e] jit-backend-dump}
[3e4c0733639fe74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4528 +0  E2060000
[3e4c073363a0bfe] jit-backend-dump}
[3e4c073363a3e58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4579 +0  AD060000
[3e4c073363a4bfa] jit-backend-dump}
[3e4c073363a7ea9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d458f +0  B3060000
[3e4c073363a8c3c] jit-backend-dump}
[3e4c073363abdeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d45e1 +0  7D060000
[3e4c073363acb74] jit-backend-dump}
[3e4c073363afd69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d45ef +0  8B060000
[3e4c073363b0acb] jit-backend-dump}
[3e4c073363b3d50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d4615 +0  81060000
[3e4c073363b4acd] jit-backend-dump}
[3e4c073363b7f69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522b3209 +0  330E0200
[3e4c073363b8cf0] jit-backend-dump}
[3e4c073363bce08] jit-backend}
[3e4c073363c0b23] {jit-log-opt-bridge
# bridge out of Guard 0x4383070 with 170 ops
[p0, p1, i2, p3, p4, p5, p6, p7]
+374: guard_not_invalidated(descr=<Guard0x506f9a0>) [p0, i2, p7, p5, p6]
debug_merge_point(0, 0, '(let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))')
+374: p8 = getfield_gc_r(p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+386: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x506fa00>) [p0, i2, p7, p5, p6]
debug_merge_point(0, 0, '(square AppRand15)')
+405: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+416: guard_class(p10, 16500720, descr=<Guard0x506dbb0>) [p0, i2, p7, p5, p6]
+430: p12 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+434: guard_class(p12, 16477696, descr=<Guard0x506dbf8>) [p0, i2, p7, p5, p6]
+447: p14 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+447: i15 = int_is_true(i2)
+450: guard_true(i15, descr=<Guard0x506dc40>) [p0, i2, p7, p5, p6]
+456: i16 = int_mul_ovf(i2, i2)
+463: guard_overflow(descr=<Guard0x506dc88>) [p0, i2, p7, p5, p6]
+469: p18 = call_r(ConstClass(fromint), i2, descr=<Callr 8 i EF=3>)
+549: guard_no_exception(descr=<Guard0x506fa60>) [p18, p0, p8, i2, p7, p5, None]
+564: p21 = call_r(ConstClass(rbigint.mul), p18, p18, descr=<Callr 8 rr EF=4>)
+623: guard_no_exception(descr=<Guard0x506fac0>) [p21, p0, p8, i2, p7, p5, None]
+638: i22 = getfield_gc_i(p21, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+642: i24 = int_gt(i22, 2)
+646: guard_false(i24, descr=<Guard0x506dcd0>) [p21, p0, p8, i2, p7, p5, None]
+652: i26 = call_i(ConstClass(rbigint._toint_helper), p21, descr=<Calli 8 r EF=4>)
+667: p28 = guard_exception(ConstClass(OverflowError), descr=<Guard0x506fb20>) [p21, i26, p0, p8, i2, p7, p5, None]
debug_merge_point(0, 0, '(let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(* x4983 AppRand16)')
+712: p29 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+723: guard_nonnull_class(p29, ConstClass(W_Fixnum), descr=<Guard0x506fb80>) [p29, p21, p0, p8, i2, p7, p5, None]
+741: i31 = getfield_gc_i(p29, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+745: i32 = int_is_true(i31)
+748: guard_true(i32, descr=<Guard0x506dd18>) [p29, p21, p0, p8, i2, p7, p5, None]
+754: p34 = call_r(ConstClass(fromint), i31, descr=<Callr 8 i EF=3>)
+824: guard_no_exception(descr=<Guard0x506fbe0>) [p34, p29, p21, p0, p8, i2, p7, p5, None]
+839: p36 = call_r(ConstClass(rbigint.mul), p34, p21, descr=<Callr 8 rr EF=4>)
+902: guard_no_exception(descr=<Guard0x506fc40>) [p36, p29, p21, p0, p8, i2, p7, p5, None]
+917: i37 = getfield_gc_i(p36, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+921: i39 = int_gt(i37, 2)
+925: guard_false(i39, descr=<Guard0x506dd60>) [p36, p29, p21, p0, p8, i2, p7, p5, None]
+931: i41 = call_i(ConstClass(rbigint._toint_helper), p36, descr=<Calli 8 r EF=4>)
+946: p43 = guard_exception(ConstClass(OverflowError), descr=<Guard0x506fca0>) [p36, i41, p29, p21, p0, p8, i2, p7, p5, None]
debug_merge_point(0, 0, '(let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))')
debug_merge_point(0, 0, '(- t (quotient AppRand17 one))')
+991: p44 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1002: guard_nonnull_class(p44, ConstClass(W_Bignum), descr=<Guard0x506fd00>) [p44, p36, None, None, p0, p8, i2, p7, p5, None]
+1020: p46 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1038: guard_value(p46, ConstPtr(ptr47), descr=<Guard0x506dda8>) [p44, p36, None, None, p0, p8, i2, p7, p5, None]
+1047: p48 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1051: guard_nonnull_class(p48, ConstClass(W_Bignum), descr=<Guard0x506fd60>) [p44, p36, None, None, p0, p8, i2, p7, p5, None]
+1070: p50 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1074: i51 = getfield_gc_i(p50, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1078: i52 = getfield_gc_i(p50, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1082: i53 = int_is_zero(i52)
+1085: guard_false(i53, descr=<Guard0x506ddf0>) [p44, p36, None, None, p0, p8, i2, p7, p5, None]
+1091: i54 = int_lt(i37, i51)
+1094: guard_true(i54, descr=<Guard0x506de38>) [p44, p36, None, None, p0, p8, i2, p7, p5, None]
+1100: p55 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1111: p58 = call_r(ConstClass(rbigint.sub), p55, ConstPtr(ptr57), descr=<Callr 8 rr EF=4>)
+1184: guard_no_exception(descr=<Guard0x506fdc0>) [p58, p44, p36, None, None, p0, p8, i2, p7, p5, None]
+1199: i59 = getfield_gc_i(p58, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1203: i61 = int_gt(i59, 2)
+1207: guard_true(i61, descr=<Guard0x506de80>) [p58, p44, p36, None, None, p0, p8, i2, p7, p5, None]
debug_merge_point(0, 0, '(* 2 x4983)')
+1213: i63 = int_mul_ovf(2, i31)
+1217: guard_no_overflow(descr=<Guard0x506dec8>) [p58, p44, p36, None, None, p0, p8, i2, p7, p5, None]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
+1223: p64 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1234: guard_nonnull_class(p64, ConstClass(W_Bignum), descr=<Guard0x506fe20>) [p58, p44, p36, None, None, p0, p8, i2, p7, p5, None]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+1254: p66 = getfield_gc_r(p64, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1258: i68 = call_i(ConstClass(rbigint.eq), p66, p7, descr=<Calli 1 rr EF=0>)
+1284: guard_false(i68, descr=<Guard0x506fe80>) [i68, i63, p58, p64, p12, None, None, None, None, None, p8, None, p7, p5, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+1293: p70 = call_r(ConstClass(rbigint.add), p66, p7, descr=<Callr 8 rr EF=4>)
+1377: guard_no_exception(descr=<Guard0x506fee0>) [p70, i63, p58, p64, p12, None, None, None, None, None, p8, None, p7, p5, None]
+1392: i71 = getfield_gc_i(p70, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1396: i73 = int_gt(i71, 2)
+1400: guard_true(i73, descr=<Guard0x506df10>) [p70, i63, p58, p64, p12, None, None, None, None, None, p8, None, p7, p5, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+1413: i76 = getarrayitem_gc_i(ConstPtr(ptr74), 0, descr=<ArrayS 8>)
+1417: p77 = new_array_clear(i71, descr=<ArrayS 8>)
+1514: p78 = new_with_vtable(descr=<SizeDescr 32>)
+1555: setfield_gc(p78, i71, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1559: setfield_gc(p78, p77, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1563: i80 = call_i(ConstClass(_inplace_divrem1), p78, p70, i76, descr=<Calli 8 rri EF=5>)
+1588: setfield_gc(p78, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1597: guard_no_exception(descr=<Guard0x506ff40>) [p70, i80, p78, i63, p58, p64, p12, None, None, None, None, None, p8, None, p7, p5, None]
+1612: call_n(ConstClass(rbigint._normalize), p78, descr=<Callv 0 r EF=5>)
+1678: guard_no_exception(descr=<Guard0x506ffa0>) [p70, i80, p78, i63, p58, p64, p12, None, None, None, None, None, p8, None, p7, p5, None]
+1693: i83 = int_is_true(i80)
+1693: i84 = getfield_gc_i(p70, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1705: i86 = int_ne(i84, 1)
+1709: guard_false(i86, descr=<Guard0x506df58>) [p70, i80, p78, i63, p58, p64, p12, None, None, None, None, None, p8, None, p7, p5, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1715: p88 = call_r(ConstClass(rbigint.mul), p66, p7, descr=<Callr 8 rr EF=4>)
+1782: guard_no_exception(descr=<Guard0x509c020>) [p88, p78, i63, p58, p64, p12, None, None, None, None, None, p8, None, p7, p5, None]
+1797: i89 = getfield_gc_i(p88, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1801: i91 = int_gt(i89, 2)
+1805: guard_true(i91, descr=<Guard0x506dfa0>) [p88, p78, i63, p58, p64, p12, None, None, None, None, None, p8, None, p7, p5, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1818: i94 = call_i(ConstClass(rbigint.lt), p88, ConstPtr(ptr93), descr=<Calli 1 rr EF=0>)
+1840: guard_false(i94, descr=<Guard0x509c080>) [i94, p88, p78, i63, p58, p64, p12, None, None, None, None, None, p8, None, p7, p5, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1849: p95 = new_with_vtable(descr=<SizeDescr 32>)
+1893: p96 = new_with_vtable(descr=<SizeDescr 32>)
+1911: setfield_gc(p96, ConstPtr(ptr97), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1922: setfield_gc(p96, ConstPtr(ptr98), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1926: p99 = new_with_vtable(descr=<SizeDescr 16>)
+1937: setfield_gc(p99, p88, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1941: setfield_gc(p96, p99, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1945: p100 = new_with_vtable(descr=<SizeDescr 48>)
+1957: p101 = new_with_vtable(descr=<SizeDescr 32>)
+1969: setfield_gc(p101, ConstPtr(ptr102), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1973: setfield_gc(p101, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1981: setfield_gc(p101, p99, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1985: p104 = new_with_vtable(descr=<SizeDescr 40>)
+1997: setfield_gc(p104, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2008: p105 = new_with_vtable(descr=<SizeDescr 32>)
+2019: p106 = new_with_vtable(descr=<SizeDescr 48>)
+2030: setfield_gc(p106, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2041: setfield_gc(p106, p64, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+2052: p107 = new_with_vtable(descr=<SizeDescr 16>)
+2063: setfield_gc(p107, p7, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2074: setfield_gc(p106, p107, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+2078: p108 = new_with_vtable(descr=<SizeDescr 16>)
+2089: setfield_gc(p108, p58, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2100: setfield_gc(p106, p108, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+2104: p109 = new_with_vtable(descr=<SizeDescr 16>)
+2115: setfield_gc(p109, i63, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2119: setfield_gc(p106, p109, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+2123: setfield_gc(p105, p106, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2127: p110 = new_with_vtable(descr=<SizeDescr 16>)
+2138: setfield_gc(p110, p78, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2149: setfield_gc(p105, p110, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+2153: setfield_gc(p105, p99, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+2157: setfield_gc(p104, p105, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2161: setfield_gc(p104, p5, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2179: setfield_gc(p104, ConstPtr(ptr111), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2183: p112 = new_with_vtable(descr=<SizeDescr 40>)
+2194: setfield_gc(p112, ConstPtr(ptr113), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2205: setfield_gc(p112, ConstPtr(ptr114), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2209: setfield_gc(p112, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+2217: setfield_gc(p112, p99, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+2221: setfield_gc(p100, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2226: setfield_gc(p95, p96, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2230: setfield_gc(p95, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2238: setfield_gc(p95, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2246: setfield_gc(p100, p101, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2251: setfield_gc(p100, p104, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2263: setfield_gc(p100, ConstPtr(ptr118), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2268: setfield_gc(p100, p112, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2273: jump(p95, p100, descr=TargetToken(69318064))
+2304: --end of the loop--
[3e4c07336452089] jit-log-opt-bridge}
[3e4c073687a979d] {jit-backend
[3e4c07368918edd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d
[3e4c0736893646e] jit-backend-dump}
[3e4c07368945076] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5514 +0  2C000000
[3e4c07368946730] jit-backend-dump}
[3e4c0736894adfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6115 +0  2C000000
[3e4c0736894be8b] jit-backend-dump}
[3e4c0736894f34c] {jit-backend-addr
bridge out of Guard 0x43dd3a0 has address 0x7ff2522d5510 to 0x7ff2522d6110
       gc table: 0x7ff2522d5290
    jump target: 0x7ff2522d5510
         resops: 0x7ff2522d551e
       failures: 0x7ff2522d6110
            end: 0x7ff2522d6a89
[3e4c07368951884] jit-backend-addr}
[3e4c07368954fcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5537 +0  6E0D0000
[3e4c07368955e4e] jit-backend-dump}
[3e4c07368959390] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d556c +0  710D0000
[3e4c0736895a0ba] jit-backend-dump}
[3e4c0736895d4e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5585 +0  740D0000
[3e4c0736895e196] jit-backend-dump}
[3e4c07368961338] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d559a +0  7B0D0000
[3e4c07368961fd3] jit-backend-dump}
[3e4c0736896516c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d55b2 +0  7F0D0000
[3e4c07368965e20] jit-backend-dump}
[3e4c07368969156] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5623 +0  2A0D0000
[3e4c07368969deb] jit-backend-dump}
[3e4c0736896d0bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5631 +0  380D0000
[3e4c0736896ddc2] jit-backend-dump}
[3e4c07368970fd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d568a +0  FB0C0000
[3e4c07368971cc0] jit-backend-dump}
[3e4c07368974ea6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5698 +0  090D0000
[3e4c07368975b53] jit-backend-dump}
[3e4c07368978d24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d56a5 +0  180D0000
[3e4c073689799c8] jit-backend-dump}
[3e4c0736897cb98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d56ae +0  2B0D0000
[3e4c0736897d84c] jit-backend-dump}
[3e4c07368980ad0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d56b7 +0  3E0D0000
[3e4c07368981768] jit-backend-dump}
[3e4c073689849bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d570c +0  050D0000
[3e4c07368985670] jit-backend-dump}
[3e4c073689888ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5724 +0  090D0000
[3e4c07368989543] jit-backend-dump}
[3e4c0736898c707] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d572e +0  1B0D0000
[3e4c0736898d3a2] jit-backend-dump}
[3e4c07368990560] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d573c +0  290D0000
[3e4c073689911ef] jit-backend-dump}
[3e4c07368994442] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d575d +0  240D0000
[3e4c0736899510e] jit-backend-dump}
[3e4c0736899837b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d57ca +0  D30C0000
[3e4c07368999016] jit-backend-dump}
[3e4c0736899c1fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d57d8 +0  E10C0000
[3e4c0736899cea0] jit-backend-dump}
[3e4c073689a0057] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5829 +0  AC0C0000
[3e4c073689a0cda] jit-backend-dump}
[3e4c073689a3e76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5837 +0  BA0C0000
[3e4c073689a4b0b] jit-backend-dump}
[3e4c073689a7cb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5851 +0  BC0C0000
[3e4c073689a8983] jit-backend-dump}
[3e4c073689abb2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d585a +0  CF0C0000
[3e4c073689ac7e8] jit-backend-dump}
[3e4c073689afa4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5863 +0  E20C0000
[3e4c073689b06ca] jit-backend-dump}
[3e4c073689b38b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d586d +0  F40C0000
[3e4c073689b453f] jit-backend-dump}
[3e4c073689b770f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d58be +0  BF0C0000
[3e4c073689b839b] jit-backend-dump}
[3e4c073689bb559] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d58d6 +0  C30C0000
[3e4c073689bc1e8] jit-backend-dump}
[3e4c073689bf390] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d58e0 +0  D50C0000
[3e4c073689c002e] jit-backend-dump}
[3e4c073689c3226] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d58ef +0  E20C0000
[3e4c073689c3ea6] jit-backend-dump}
[3e4c073689c7023] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5940 +0  AD0C0000
[3e4c073689c7cce] jit-backend-dump}
[3e4c073689caeaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d594e +0  BB0C0000
[3e4c073689cbb2d] jit-backend-dump}
[3e4c073689cecde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5957 +0  CE0C0000
[3e4c073689cf96d] jit-backend-dump}
[3e4c073689d2b1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5960 +0  E10C0000
[3e4c073689d37ab] jit-backend-dump}
[3e4c073689d6941] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d59b5 +0  A80C0000
[3e4c073689d75e5] jit-backend-dump}
[3e4c073689da7b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d59cd +0  AC0C0000
[3e4c073689db453] jit-backend-dump}
[3e4c073689de5ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d59d7 +0  BE0C0000
[3e4c073689df2ac] jit-backend-dump}
[3e4c073689e244f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d59e6 +0  CB0C0000
[3e4c073689e30d1] jit-backend-dump}
[3e4c073689e62c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5a3f +0  8E0C0000
[3e4c073689e6f77] jit-backend-dump}
[3e4c073689ea13e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5a4d +0  9C0C0000
[3e4c073689eadee] jit-backend-dump}
[3e4c073689edfb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5a56 +0  AF0C0000
[3e4c073689eec41] jit-backend-dump}
[3e4c073689f1de6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5ab9 +0  680C0000
[3e4c073689f2a8e] jit-backend-dump}
[3e4c073689f5d5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5ac7 +0  760C0000
[3e4c073689f69d5] jit-backend-dump}
[3e4c073689f9bbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5aeb +0  6E0C0000
[3e4c073689fa87e] jit-backend-dump}
[3e4c073689fdadb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5b58 +0  1D0C0000
[3e4c073689fe760] jit-backend-dump}
[3e4c07368a0192a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5b66 +0  2B0C0000
[3e4c07368a025cf] jit-backend-dump}
[3e4c07368a05752] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5b85 +0  280C0000
[3e4c07368a063e1] jit-backend-dump}
[3e4c07368a095bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5be5 +0  E40B0000
[3e4c07368a0a243] jit-backend-dump}
[3e4c07368a0d47c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5bf3 +0  F20B0000
[3e4c07368a0e0fe] jit-backend-dump}
[3e4c07368a112ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5c4c +0  B50B0000
[3e4c07368a11f32] jit-backend-dump}
[3e4c07368a15124] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5c5a +0  C30B0000
[3e4c07368a15dad] jit-backend-dump}
[3e4c07368a18f7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5c79 +0  C00B0000
[3e4c07368a19c15] jit-backend-dump}
[3e4c07368a1cddf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5c86 +0  CF0B0000
[3e4c07368a1daa8] jit-backend-dump}
[3e4c07368a20d0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5cde +0  930B0000
[3e4c07368a219d4] jit-backend-dump}
[3e4c07368a24c50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5d2c +0  610B0000
[3e4c07368a258f4] jit-backend-dump}
[3e4c07368a28b4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5d3a +0  6F0B0000
[3e4c07368a297e0] jit-backend-dump}
[3e4c07368a2c9b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5d8f +0  360B0000
[3e4c07368a2d6b0] jit-backend-dump}
[3e4c07368a3086e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5d9d +0  440B0000
[3e4c07368a31512] jit-backend-dump}
[3e4c07368a346cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5da7 +0  560B0000
[3e4c07368a3535c] jit-backend-dump}
[3e4c07368a3850a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5db0 +0  690B0000
[3e4c07368a391a2] jit-backend-dump}
[3e4c07368a3c357] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5db9 +0  7C0B0000
[3e4c07368a3cfe3] jit-backend-dump}
[3e4c07368a401e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5e0e +0  430B0000
[3e4c07368a40e9b] jit-backend-dump}
[3e4c07368a44052] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5e27 +0  460B0000
[3e4c07368a44cea] jit-backend-dump}
[3e4c07368a47e96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5e31 +0  580B0000
[3e4c07368a48b34] jit-backend-dump}
[3e4c07368a4bcfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5e3f +0  660B0000
[3e4c07368a4c987] jit-backend-dump}
[3e4c07368a4fb7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5e63 +0  5E0B0000
[3e4c07368a50826] jit-backend-dump}
[3e4c07368a539e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5ebc +0  210B0000
[3e4c07368a54670] jit-backend-dump}
[3e4c07368a5780f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5eca +0  2F0B0000
[3e4c07368a58495] jit-backend-dump}
[3e4c07368a5b634] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5ee9 +0  2C0B0000
[3e4c07368a5c2c0] jit-backend-dump}
[3e4c07368a5f48d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5f46 +0  EB0A0000
[3e4c07368a60125] jit-backend-dump}
[3e4c07368a632c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5f54 +0  F90A0000
[3e4c07368a63f4a] jit-backend-dump}
[3e4c07368a670ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d5f7a +0  EF0A0000
[3e4c07368a67d6f] jit-backend-dump}
[3e4c07368a6b19a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bb03e +0  CEA40100
[3e4c07368a6be97] jit-backend-dump}
[3e4c07368a7031d] jit-backend}
[3e4c07368a74173] {jit-log-opt-bridge
# bridge out of Guard 0x43dd3a0 with 283 ops
[p0, i1, p2, p3, p4, p5, p6]
i7 = save_exc_class()
p8 = save_exception()
restore_exception(i7, p8)
+662: p10 = guard_exception(ConstClass(OverflowError), descr=<Guard0x509c440>) [p0, i1, p2, p3, p4, p5, p6]
+707: guard_not_invalidated(descr=<Guard0x509c4a0>) [p0, None, p3, p4, p5, p6]
debug_merge_point(0, 0, '(let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))')
+707: p12 = getfield_gc_r(p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+718: guard_nonnull_class(p12, ConstClass(ForwardLink), descr=<Guard0x509c500>) [p0, None, p3, p4, p5, p6]
debug_merge_point(0, 0, '(* one5062 AppRand45)')
+736: p14 = getfield_gc_r(p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+747: guard_class(p14, 16478448, descr=<Guard0x50a29f8>) [p0, None, p3, p4, p5, p6]
+761: p16 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+773: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x50a2a40>) [p0, None, p3, p4, p5, p6]
+782: p18 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+787: guard_nonnull_class(p18, ConstClass(W_Bignum), descr=<Guard0x509c560>) [p0, None, p3, p4, p5, p6]
+806: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+810: p22 = call_r(ConstClass(rbigint.mul), p20, p0, descr=<Callr 8 rr EF=4>)
+904: guard_no_exception(descr=<Guard0x509c5c0>) [p22, p18, p12, p0, None, p3, p4, p5, None]
+919: i23 = getfield_gc_i(p22, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+923: i25 = int_gt(i23, 2)
+927: guard_true(i25, descr=<Guard0x50a2a88>) [p22, p18, p12, p0, None, p3, p4, p5, None]
debug_merge_point(0, 0, '(+ one5062 t1)')
+933: p27 = call_r(ConstClass(rbigint.add), p20, p3, descr=<Callr 8 rr EF=4>)
+1007: guard_no_exception(descr=<Guard0x509c620>) [p27, p22, p18, p12, None, None, p3, p4, p5, None]
+1022: i28 = getfield_gc_i(p27, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1026: i30 = int_gt(i28, 2)
+1030: guard_true(i30, descr=<Guard0x50a2ad0>) [p27, p22, p18, p12, None, None, p3, p4, p5, None]
debug_merge_point(0, 0, '(let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))')
debug_merge_point(0, 0, '(quotient AppRand46 AppRand47)')
+1036: i31 = getfield_gc_i(p27, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1040: i32 = int_is_zero(i31)
+1043: guard_false(i32, descr=<Guard0x50a2b18>) [p27, p22, p18, p12, None, None, p3, p4, p5, None]
+1049: i33 = int_lt(i23, i28)
+1052: guard_false(i33, descr=<Guard0x50a2b60>) [p27, p22, p18, p12, None, None, p3, p4, p5, None]
+1058: i34 = int_eq(i23, i28)
+1061: guard_false(i34, descr=<Guard0x50a2ba8>) [p27, p22, p18, p12, None, None, p3, p4, p5, None]
+1067: p36 = call_r(ConstClass(_x_divrem), p22, p27, descr=<Callr 8 rr EF=5>)
+1137: guard_no_exception(descr=<Guard0x509c680>) [p36, p27, p22, None, None, p12, None, None, None, p4, p5, None]
+1152: p37 = getfield_gc_r(p36, descr=<FieldP tuple2.item0 8 pure>)
+1156: p38 = getfield_gc_r(p36, descr=<FieldP tuple2.item1 16 pure>)
+1156: i39 = getfield_gc_i(p22, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1167: i40 = int_ne(i39, i31)
+1170: guard_false(i40, descr=<Guard0x50a2bf0>) [p36, p27, p22, None, None, p12, None, None, None, p4, p5, None]
+1176: i42 = int_lt(i39, 0)
+1180: guard_false(i42, descr=<Guard0x50a2c38>) [p36, p27, p22, None, None, p12, None, None, None, p4, p5, None]
+1186: i43 = getfield_gc_i(p37, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1190: i45 = int_gt(i43, 2)
+1194: guard_false(i45, descr=<Guard0x50a2c80>) [p36, p27, p22, None, None, p12, None, None, None, p4, p5, None]
+1200: i47 = call_i(ConstClass(rbigint._toint_helper), p37, descr=<Calli 8 r EF=4>)
+1212: p49 = guard_exception(ConstClass(OverflowError), descr=<Guard0x509c6e0>) [p37, i47, p27, p22, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))')
debug_merge_point(0, 0, '(+ one5062 t2)')
+1257: p51 = call_r(ConstClass(rbigint.add), p20, p37, descr=<Callr 8 rr EF=4>)
+1327: guard_no_exception(descr=<Guard0x509c740>) [p51, p37, None, None, p18, p12, None, None, None, p4, p5, None]
+1342: i52 = getfield_gc_i(p51, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1346: i54 = int_gt(i52, 2)
+1350: guard_true(i54, descr=<Guard0x50a2cc8>) [p51, p37, None, None, p18, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))')
debug_merge_point(0, 0, '(square AppRand48)')
+1356: p55 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(* x4969 x4969)')
+1356: p57 = call_r(ConstClass(rbigint.mul), p51, p51, descr=<Callr 8 rr EF=4>)
+1422: guard_no_exception(descr=<Guard0x509c7a0>) [p57, p51, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1437: i58 = getfield_gc_i(p57, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1441: i60 = int_gt(i58, 2)
+1445: guard_true(i60, descr=<Guard0x50a2d10>) [p57, p51, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square (quotient AppRand49 one5062))')
+1451: i61 = getfield_gc_i(p20, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1463: i62 = getfield_gc_i(p20, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1468: i63 = int_is_zero(i62)
+1471: guard_false(i63, descr=<Guard0x50a2d58>) [p57, p51, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1477: i64 = int_lt(i58, i61)
+1480: guard_false(i64, descr=<Guard0x50a2da0>) [p57, p51, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1486: i65 = int_eq(i58, i61)
+1489: guard_false(i65, descr=<Guard0x50a2de8>) [p57, p51, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1495: i67 = int_eq(i61, 1)
+1499: guard_false(i67, descr=<Guard0x50a2e30>) [p57, p51, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1505: p69 = call_r(ConstClass(_x_divrem), p57, p20, descr=<Callr 8 rr EF=5>)
+1571: guard_no_exception(descr=<Guard0x509c800>) [p69, p20, p57, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1586: p70 = getfield_gc_r(p69, descr=<FieldP tuple2.item0 8 pure>)
+1590: p71 = getfield_gc_r(p69, descr=<FieldP tuple2.item1 16 pure>)
+1590: i72 = getfield_gc_i(p57, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1601: i73 = int_ne(i72, i62)
+1604: guard_false(i73, descr=<Guard0x50a2e78>) [p69, p20, p57, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1610: i75 = int_lt(i72, 0)
+1614: guard_false(i75, descr=<Guard0x50a2ec0>) [p69, p20, p57, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1620: i76 = getfield_gc_i(p70, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1625: i78 = int_gt(i76, 2)
+1629: guard_true(i78, descr=<Guard0x50a2f08>) [p69, p20, p57, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(* x4969 x4969)')
+1635: p80 = call_r(ConstClass(rbigint.mul), p70, p70, descr=<Callr 8 rr EF=4>)
+1701: guard_no_exception(descr=<Guard0x509c860>) [p80, p70, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1716: i81 = getfield_gc_i(p80, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1720: i83 = int_gt(i81, 2)
+1724: guard_true(i83, descr=<Guard0x50a2f50>) [p80, p70, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(quotient AppRand50 one5062)')
+1730: i84 = int_lt(i81, i61)
+1733: guard_false(i84, descr=<Guard0x50a2f98>) [p80, p70, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1739: i85 = int_eq(i81, i61)
+1742: guard_false(i85, descr=<Guard0x50a2fe0>) [p80, p70, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1748: p87 = call_r(ConstClass(_x_divrem), p80, p20, descr=<Callr 8 rr EF=5>)
+1818: guard_no_exception(descr=<Guard0x509c8c0>) [p87, p20, p80, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1833: p88 = getfield_gc_r(p87, descr=<FieldP tuple2.item0 8 pure>)
+1837: p89 = getfield_gc_r(p87, descr=<FieldP tuple2.item1 16 pure>)
+1837: i90 = getfield_gc_i(p80, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1848: i91 = int_ne(i90, i62)
+1851: guard_false(i91, descr=<Guard0x50a3028>) [p87, p20, p80, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1857: i93 = int_lt(i90, 0)
+1861: guard_false(i93, descr=<Guard0x50a3070>) [p87, p20, p80, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1867: i94 = getfield_gc_i(p88, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1872: i96 = int_gt(i94, 2)
+1876: guard_true(i96, descr=<Guard0x50a30b8>) [p87, p20, p80, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(square t2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+1882: p98 = call_r(ConstClass(rbigint.mul), p37, p37, descr=<Callr 8 rr EF=4>)
+1956: guard_no_exception(descr=<Guard0x509c920>) [p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+1971: i99 = getfield_gc_i(p98, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1975: i101 = int_gt(i99, 2)
+1979: guard_true(i101, descr=<Guard0x50a3100>) [p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(+ t2 (quotient AppRand51 one5062))')
+1985: i102 = int_lt(i99, i61)
+1988: guard_true(i102, descr=<Guard0x50a3148>) [p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2001: p105 = call_r(ConstClass(rbigint.add), p37, ConstPtr(ptr104), descr=<Callr 8 rr EF=4>)
+2078: guard_no_exception(descr=<Guard0x509c980>) [p105, p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2093: i106 = getfield_gc_i(p105, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2097: i108 = int_gt(i106, 2)
+2101: guard_false(i108, descr=<Guard0x50a3190>) [p105, p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2107: i110 = call_i(ConstClass(rbigint._toint_helper), p105, descr=<Calli 8 r EF=4>)
+2122: p112 = guard_exception(ConstClass(OverflowError), descr=<Guard0x509c9e0>) [p105, i110, p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))')
debug_merge_point(0, 0, '(+ one5062 AppRand52)')
+2167: p114 = call_r(ConstClass(rbigint.add), p20, p105, descr=<Callr 8 rr EF=4>)
+2237: guard_no_exception(descr=<Guard0x509ca40>) [p114, p105, p98, p88, None, None, p37, None, None, p18, p12, None, None, None, p4, p5, None]
+2252: i115 = getfield_gc_i(p114, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2256: i117 = int_gt(i115, 2)
+2260: guard_true(i117, descr=<Guard0x50a31d8>) [p114, p105, p98, p88, None, None, p37, None, None, p18, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))')
debug_merge_point(0, 0, '(* t3 a5078)')
+2266: p118 = getfield_gc_r(p4, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+2278: guard_nonnull_class(p118, ConstClass(W_Bignum), descr=<Guard0x509caa0>) [p114, p105, p98, p88, None, None, p37, None, None, p18, p12, None, None, None, p4, p5, None]
+2297: p120 = getfield_gc_r(p118, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+2301: p122 = call_r(ConstClass(rbigint.mul), p88, p120, descr=<Callr 8 rr EF=4>)
+2378: guard_no_exception(descr=<Guard0x509cb00>) [p122, p118, p114, None, p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2393: i123 = getfield_gc_i(p122, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2397: i125 = int_gt(i123, 2)
+2401: guard_true(i125, descr=<Guard0x50a3220>) [p122, p118, p114, None, p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(* t2 t4)')
+2407: p127 = call_r(ConstClass(rbigint.mul), p37, p114, descr=<Callr 8 rr EF=4>)
+2481: guard_no_exception(descr=<Guard0x509cb60>) [p127, p122, None, p114, None, p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2496: i128 = getfield_gc_i(p127, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2500: i130 = int_gt(i128, 2)
+2504: guard_true(i130, descr=<Guard0x50a3268>) [p127, p122, None, p114, None, p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))')
debug_merge_point(0, 0, '(* x5080 AppRand54)')
+2510: p131 = getfield_gc_r(p4, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+2522: guard_nonnull_class(p131, ConstClass(W_Fixnum), descr=<Guard0x509cbc0>) [p127, p122, None, p114, None, p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2541: i133 = getfield_gc_i(p131, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2545: i134 = int_is_true(i133)
+2548: guard_true(i134, descr=<Guard0x50a32b0>) [p127, p122, None, p114, None, p98, p88, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2554: p136 = call_r(ConstClass(fromint), i133, descr=<Callr 8 i EF=3>)
+2627: guard_no_exception(descr=<Guard0x509cc20>) [p136, p131, p127, p122, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2642: p138 = call_r(ConstClass(rbigint.mul), p136, p127, descr=<Callr 8 rr EF=4>)
+2705: guard_no_exception(descr=<Guard0x509cc80>) [p138, p131, p127, p122, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2720: i139 = getfield_gc_i(p138, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2724: i141 = int_gt(i139, 2)
+2728: guard_true(i141, descr=<Guard0x50a32f8>) [p138, p131, p127, p122, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))')
debug_merge_point(0, 0, '(- AppRand53 AppRand55)')
+2734: p143 = call_r(ConstClass(rbigint.sub), p122, p138, descr=<Callr 8 rr EF=4>)
+2804: guard_no_exception(descr=<Guard0x509cce0>) [p143, p138, None, p127, p122, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2819: i144 = getfield_gc_i(p143, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2823: i146 = int_gt(i144, 2)
+2827: guard_true(i146, descr=<Guard0x50a3340>) [p143, p138, None, p127, p122, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(* 4 x5080)')
+2833: i148 = int_mul_ovf(4, i133)
+2837: guard_no_overflow(descr=<Guard0x50a3388>) [p143, p138, None, p127, p122, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
debug_merge_point(0, 0, '(loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
+2843: i149 = int_lt(i144, i61)
+2846: guard_false(i149, descr=<Guard0x50a33d0>) [p143, p138, None, p127, p122, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2852: i150 = int_eq(i144, i61)
+2855: guard_false(i150, descr=<Guard0x50a3418>) [p143, p138, None, p127, p122, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, p4, p5, None]
+2861: p152 = call_r(ConstClass(_x_divrem), p143, p20, descr=<Callr 8 rr EF=5>)
+2931: guard_no_exception(descr=<Guard0x509cd40>) [p14, p5, p152, p20, p143, i148, None, None, None, None, None, None, None, None, None, None, None, p37, None, None, None, None, None, None, None, p4, None, None]
+2946: p153 = getfield_gc_r(p152, descr=<FieldP tuple2.item0 8 pure>)
+2950: p154 = getfield_gc_r(p152, descr=<FieldP tuple2.item1 16 pure>)
+2950: i155 = getfield_gc_i(p143, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+2962: i156 = int_ne(i155, i62)
+2965: guard_false(i156, descr=<Guard0x50a3460>) [p14, p5, p152, p20, p143, i148, None, None, None, None, None, None, None, None, None, None, None, p37, None, None, None, None, None, None, None, p4, None, None]
+2971: i158 = int_lt(i155, 0)
+2975: guard_false(i158, descr=<Guard0x50a34a8>) [p14, p5, p152, p20, p143, i148, None, None, None, None, None, None, None, None, None, None, None, p37, None, None, None, None, None, None, None, p4, None, None]
+2981: i159 = getfield_gc_i(p153, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+2985: i161 = int_gt(i159, 2)
+2989: guard_true(i161, descr=<Guard0x50a34f0>) [p14, p5, p152, p20, p143, i148, None, None, None, None, None, None, None, None, None, None, None, p37, None, None, None, None, None, None, None, p4, None, None]
debug_merge_point(0, 0, '(let ([if4 (= y5076 0)]) (if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))) from (loop5074 t2 (quotient AppRand56 one5062) AppRand57)')
debug_merge_point(0, 0, '(= y5076 0)')
+2995: i164 = call_i(ConstClass(rbigint.eq), p37, ConstPtr(ptr163), descr=<Calli 1 rr EF=0>)
+3022: guard_false(i164, descr=<Guard0x509cda0>) [i164, p153, p14, i148, None, None, None, None, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, None, p5, None]
debug_merge_point(0, 0, '(if if4 (quotient one^25065 a5078) (let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))))))')
debug_merge_point(0, 0, '(let ([AppRand42 (square y5076)]) (let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))))')
debug_merge_point(0, 0, '(square y5076)')
debug_merge_point(0, 0, '(* x4969 x4969)')
debug_merge_point(0, 0, '(let ([AppRand43 (square AppRand42)]) (let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57)))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(square AppRand42)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+3031: p166 = call_r(ConstClass(rbigint.mul), p98, p98, descr=<Callr 8 rr EF=4>)
+3105: guard_no_exception(descr=<Guard0x509ce00>) [p166, p153, p14, i148, None, None, None, None, None, None, None, p98, None, None, None, p37, None, None, None, p12, None, None, None, None, p5, None]
+3120: i167 = getfield_gc_i(p166, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3124: i169 = int_gt(i167, 2)
+3128: guard_true(i169, descr=<Guard0x50a3538>) [p166, p153, p14, i148, None, None, None, None, None, None, None, p98, None, None, None, p37, None, None, None, p12, None, None, None, None, p5, None]
debug_merge_point(0, 0, '(let ([AppRand44 (- one^45068 AppRand43)]) (let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))) from (* x4969 x4969)')
debug_merge_point(0, 0, '(- one^45068 AppRand43)')
+3134: p170 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+3145: guard_nonnull_class(p170, ConstClass(W_Bignum), descr=<Guard0x509ce60>) [p166, p153, p14, i148, None, None, None, None, None, None, None, p98, None, None, None, p37, None, None, None, p12, None, None, None, None, p5, None]
+3165: p172 = getfield_gc_r(p170, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3170: p174 = call_r(ConstClass(rbigint.sub), p172, p166, descr=<Callr 8 rr EF=4>)
+3243: guard_no_exception(descr=<Guard0x509cec0>) [p174, p170, p166, p153, p14, i148, None, None, None, None, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, None, p5, None]
+3258: i175 = getfield_gc_i(p174, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+3262: i177 = int_gt(i175, 2)
+3266: guard_true(i177, descr=<Guard0x50a3580>) [p174, p170, p166, p153, p14, i148, None, None, None, None, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, None, p5, None]
debug_merge_point(0, 0, '(let ([t1 (quartic-root AppRand44)]) (let ([AppRand45 (- one5062 t1)]) (let ([AppRand46 (* one5062 AppRand45)][AppRand47 (+ one5062 t1)]) (let ([t2 (quotient AppRand46 AppRand47)]) (let ([AppRand48 (+ one5062 t2)]) (let ([AppRand49 (square AppRand48)]) (let ([AppRand50 (square (quotient AppRand49 one5062))]) (let ([t3 (quotient AppRand50 one5062)][AppRand51 (square t2)]) (let ([AppRand52 (+ t2 (quotient AppRand51 one5062))]) (let ([t4 (+ one5062 AppRand52)]) (let ([AppRand53 (* t3 a5078)][AppRand54 (* t2 t4)]) (let ([AppRand55 (* x5080 AppRand54)]) (let ([AppRand56 (- AppRand53 AppRand55)][AppRand57 (* 4 x5080)]) (loop5074 t2 (quotient AppRand56 one5062) AppRand57))))))))))))))')
debug_merge_point(0, 0, '(quartic-root AppRand44)')
debug_merge_point(0, 0, '(root x4966 4)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+3279: i180 = call_i(ConstClass(rbigint.lt), p174, ConstPtr(ptr179), descr=<Calli 1 rr EF=0>)
+3301: guard_false(i180, descr=<Guard0x509cf20>) [i180, p174, None, None, p153, p14, i148, None, None, None, None, None, None, None, None, None, None, None, p37, None, None, None, p12, None, None, None, None, p5, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+3310: p181 = new_with_vtable(descr=<SizeDescr 32>)
+3354: p182 = new_with_vtable(descr=<SizeDescr 32>)
+3372: setfield_gc(p182, ConstPtr(ptr183), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3383: setfield_gc(p182, ConstPtr(ptr184), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+3387: p185 = new_with_vtable(descr=<SizeDescr 16>)
+3398: setfield_gc(p185, p174, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3402: setfield_gc(p182, p185, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+3406: p186 = new_with_vtable(descr=<SizeDescr 48>)
+3418: p187 = new_with_vtable(descr=<SizeDescr 32>)
+3430: setfield_gc(p187, ConstPtr(ptr188), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3434: setfield_gc(p187, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+3442: setfield_gc(p187, p185, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+3446: p190 = new_with_vtable(descr=<SizeDescr 40>)
+3458: setfield_gc(p190, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3469: p191 = new_with_vtable(descr=<SizeDescr 40>)
+3480: setfield_gc(p191, p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3491: p192 = new_with_vtable(descr=<SizeDescr 16>)
+3502: setfield_gc(p192, p37, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3513: setfield_gc(p191, p192, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+3517: p193 = new_with_vtable(descr=<SizeDescr 16>)
+3528: setfield_gc(p193, p153, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+3539: setfield_gc(p191, p193, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+3543: p194 = new_with_vtable(descr=<SizeDescr 16>)
+3554: setfield_gc(p194, i148, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+3558: setfield_gc(p191, p194, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+3562: setfield_gc(p190, p191, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3566: setfield_gc(p190, p5, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3584: setfield_gc(p190, ConstPtr(ptr195), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3588: p196 = new_with_vtable(descr=<SizeDescr 40>)
+3599: setfield_gc(p196, ConstPtr(ptr197), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3610: setfield_gc(p196, ConstPtr(ptr198), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+3614: setfield_gc(p196, 4, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+3622: setfield_gc(p196, p185, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+3626: setfield_gc(p186, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+3631: setfield_gc(p181, p182, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3635: setfield_gc(p181, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+3643: setfield_gc(p181, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+3651: setfield_gc(p186, p187, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3656: setfield_gc(p186, p190, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3668: setfield_gc(p186, ConstPtr(ptr202), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+3673: setfield_gc(p186, p196, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+3678: jump(p181, p186, descr=TargetToken(69318064))
+3712: --end of the loop--
[3e4c07368b69da0] jit-log-opt-bridge}
[3e4c0739ac33b6f] {jit-backend
[3e4c0739acd9f6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6c
[3e4c0739ace52dc] jit-backend-dump}
[3e4c0739acf1b6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6cf4 +0  2C000000
[3e4c0739acf30ff] jit-backend-dump}
[3e4c0739acf7386] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7165 +0  2C000000
[3e4c0739acf8403] jit-backend-dump}
[3e4c0739acfbd1a] {jit-backend-addr
bridge out of Guard 0x443f520 has address 0x7ff2522d6cf0 to 0x7ff2522d7160
       gc table: 0x7ff2522d6c20
    jump target: 0x7ff2522d6cf0
         resops: 0x7ff2522d6cfe
       failures: 0x7ff2522d7160
            end: 0x7ff2522d73b7
[3e4c0739acfe2c7] jit-backend-addr}
[3e4c0739ad01a47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6d1d +0  DC040000
[3e4c0739ad028e7] jit-backend-dump}
[3e4c0739ad05e6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6d26 +0  EF040000
[3e4c0739ad06c17] jit-backend-dump}
[3e4c0739ad0a247] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6d37 +0  FA040000
[3e4c0739ad0af3a] jit-backend-dump}
[3e4c0739ad0e2b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6d4c +0  01050000
[3e4c0739ad0efa8] jit-backend-dump}
[3e4c0739ad12478] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6d5e +0  05050000
[3e4c0739ad13184] jit-backend-dump}
[3e4c0739ad1646a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6dc1 +0  BE040000
[3e4c0739ad17177] jit-backend-dump}
[3e4c0739ad1a304] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6e12 +0  89040000
[3e4c0739ad1aff7] jit-backend-dump}
[3e4c0739ad1e197] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6e20 +0  97040000
[3e4c0739ad1ee87] jit-backend-dump}
[3e4c0739ad221c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6e71 +0  7E040000
[3e4c0739ad22eb1] jit-backend-dump}
[3e4c0739ad2616d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6e7f +0  8C040000
[3e4c0739ad26e76] jit-backend-dump}
[3e4c0739ad2a01c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6ed0 +0  57040000
[3e4c0739ad2acfd] jit-backend-dump}
[3e4c0739ad2de59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6ede +0  65040000
[3e4c0739ad2eb44] jit-backend-dump}
[3e4c0739ad31c75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6f3a +0  25040000
[3e4c0739ad3295c] jit-backend-dump}
[3e4c0739ad35ac8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6f48 +0  33040000
[3e4c0739ad367b5] jit-backend-dump}
[3e4c0739ad39914] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d6f6e +0  29040000
[3e4c0739ad3a5f9] jit-backend-dump}
[3e4c0739ad3d988] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522bf563 +0  89770100
[3e4c0739ad3e6b2] jit-backend-dump}
[3e4c0739ad4265f] jit-backend}
[3e4c0739ad46428] {jit-log-opt-bridge
# bridge out of Guard 0x443f520 with 114 ops
[i0, f1, f2, i3, p4, p5, p6, p7]
+230: i9 = float_eq(f1, 0.000000)
+251: guard_true(i9, descr=<Guard0x509d160>) [i0, f1, f2, i3, p4, p5, p6, p7]
+257: i10 = int_is_true(i0)
+260: guard_false(i10, descr=<Guard0x50a3c40>) [i0, f1, f2, i3, p4, p5, p6, p7]
+266: i11 = float_ne(f2, f2)
+277: guard_false(i11, descr=<Guard0x50a3c88>) [i0, f1, f2, i3, p4, p5, p6, p7]
+283: i13 = float_ge(f2, -9223372036854775808.000000)
+298: guard_true(i13, descr=<Guard0x50a3cd0>) [i0, f1, f2, i3, p4, p5, p6, p7]
+304: i15 = float_lt(f2, 9223372036854775808.000000)
+316: guard_false(i15, descr=<Guard0x50a3d18>) [i0, f1, f2, i3, p4, p5, p6, p7]
+322: p17 = call_r(ConstClass(fromint), i3, descr=<Callr 8 i EF=3>)
+406: guard_no_exception(descr=<Guard0x509d1c0>) [p17, i3, p4, p5, p6, p7]
+428: p20 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr19), p17, descr=<Callr 8 rr EF=4>)
+487: guard_no_exception(descr=<Guard0x509d220>) [p20, i3, p4, p5, p6, p7]
+502: i21 = getfield_gc_i(p20, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+506: i23 = int_gt(i21, 2)
+510: guard_true(i23, descr=<Guard0x50a3d60>) [p20, i3, p4, p5, p6, p7]
+516: guard_not_invalidated(descr=<Guard0x50a3da8>) [p20, i3, p4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([one^2 (square one5009)]) (let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))))')
debug_merge_point(0, 0, '(square one5009)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+516: p25 = call_r(ConstClass(rbigint.mul), p20, p20, descr=<Callr 8 rr EF=4>)
+582: guard_no_exception(descr=<Guard0x509d280>) [p25, p20, None, p4, p5, p6, p7]
+597: i27 = getfield_gc_i(p25, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+601: i29 = int_gt(i27, 2)
+605: guard_true(i29, descr=<Guard0x50a3df0>) [p25, p20, None, p4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))))))')
debug_merge_point(0, 0, '(square one^2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+611: p31 = call_r(ConstClass(rbigint.mul), p25, p25, descr=<Callr 8 rr EF=4>)
+677: guard_no_exception(descr=<Guard0x509d2e0>) [p31, p25, p20, None, p4, p5, p6, p7]
+692: i32 = getfield_gc_i(p31, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+696: i34 = int_gt(i32, 2)
+700: guard_true(i34, descr=<Guard0x50a3e38>) [p31, p25, p20, None, p4, p5, p6, p7]
debug_merge_point(0, 0, '(* one^2 2)')
+713: p37 = call_r(ConstClass(rbigint.mul), p25, ConstPtr(ptr36), descr=<Callr 8 rr EF=4>)
+783: guard_no_exception(descr=<Guard0x509d340>) [p37, p31, p25, p20, None, p4, p5, p6, p7]
+798: i38 = getfield_gc_i(p37, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+802: i40 = int_gt(i38, 2)
+806: guard_true(i40, descr=<Guard0x50a3e80>) [p37, p31, p25, p20, None, p4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))')
debug_merge_point(0, 0, '(square-root AppRand22)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+819: i43 = call_i(ConstClass(rbigint.lt), p37, ConstPtr(ptr42), descr=<Calli 1 rr EF=0>)
+841: guard_false(i43, descr=<Guard0x509d3a0>) [i43, p37, p31, p25, p20, None, p4, p5, p6, p7]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+850: p44 = new_with_vtable(descr=<SizeDescr 32>)
+894: p45 = new_with_vtable(descr=<SizeDescr 32>)
+912: setfield_gc(p45, ConstPtr(ptr46), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+923: setfield_gc(p45, ConstPtr(ptr47), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+927: p48 = new_with_vtable(descr=<SizeDescr 16>)
+938: setfield_gc(p48, p37, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+942: setfield_gc(p45, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+946: p49 = new_with_vtable(descr=<SizeDescr 48>)
+957: p50 = new_with_vtable(descr=<SizeDescr 32>)
+969: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+974: setfield_gc(p50, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+983: setfield_gc(p50, p48, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+988: p53 = new_with_vtable(descr=<SizeDescr 40>)
+1001: setfield_gc(p53, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1012: p54 = new_with_vtable(descr=<SizeDescr 32>)
+1023: p55 = new_with_vtable(descr=<SizeDescr 24>)
+1034: p56 = new_with_vtable(descr=<SizeDescr 24>)
+1045: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1049: p58 = new_with_vtable(descr=<SizeDescr 16>)
+1060: setfield_gc(p58, p20, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1071: setfield_gc(p56, p58, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1075: setfield_gc(p55, p56, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1079: p59 = new_with_vtable(descr=<SizeDescr 16>)
+1090: setfield_gc(p59, p25, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1101: setfield_gc(p55, p59, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1105: setfield_gc(p54, p55, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1109: p60 = new_with_vtable(descr=<SizeDescr 16>)
+1120: setfield_gc(p60, p31, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1131: setfield_gc(p54, p60, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1135: setfield_gc(p54, p48, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1139: setfield_gc(p53, p54, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1143: p61 = new_with_vtable(descr=<SizeDescr 48>)
+1154: setfield_gc(p61, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1158: setfield_gc(p61, p6, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1169: setfield_gc(p61, p5, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1187: setfield_gc(p61, ConstPtr(ptr62), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1191: p63 = new_with_vtable(descr=<SizeDescr 16>)
+1202: setfield_gc(p63, p4, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1213: setfield_gc(p61, p63, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1217: setfield_gc(p53, p61, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1228: setfield_gc(p53, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1232: p65 = new_with_vtable(descr=<SizeDescr 40>)
+1243: setfield_gc(p65, ConstPtr(ptr66), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1254: setfield_gc(p65, ConstPtr(ptr67), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1258: setfield_gc(p65, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1266: setfield_gc(p65, p48, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1270: setfield_gc(p44, p45, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1274: setfield_gc(p44, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1282: setfield_gc(p44, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1290: setfield_gc(p49, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1294: setfield_gc(p49, p50, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1298: setfield_gc(p49, p53, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1309: setfield_gc(p49, ConstPtr(ptr71), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1313: setfield_gc(p49, p65, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1317: jump(p44, p49, descr=TargetToken(69318064))
+1344: --end of the loop--
[3e4c0739adb20c2] jit-log-opt-bridge}
[3e4c073ccfb97a8] {jit-backend
[3e4c073cd0603bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7530 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C6204000048FF042510B71A0549BBD8732D52F27F000066410F2E037B044883FD000F840000000066450F2EED7B044883FD000F8500000000F2440F11AD3001000066410F28C541BB0825400041FFD349BB00742D52F27F000066410F2E037B044883FD000F82000000004C89B5300100004C89BD380100004C89AD4001000048899D480100004C89E749BB18742D52F27F00004C895D2041BBD098A90041FFD3488B0C258893F900488B69F8F64504010F85D603000048C745200000000048833C2540B35F01000F85000000004C8B3582FEFFFF4C89F74889C649BB38742D52F27F00004C895D2041BBE0F1A90041FFD3488B0C258893F900488B69F8F64504010F859703000048C745200000000048833C2540B35F01000F85000000004C8B70184983FE020F8E00000000488985500100004889C74889C649BB78742D52F27F00004C895D2041BB40DFA90041FFD3488B0C258893F900488B69F8F64504010F854A03000048C745200000000048833C2540B35F01000F85000000004C8B60184983FC020F8E00000000488985580100004889C74889C649BBA8742D52F27F00004C895D2041BB40DFA90041FFD3488B0C258893F900488B69F8F64504010F85FD02000048C745200000000048833C2540B35F01000F85000000004C8B60184983FC020F8E000000004C8B25A5FDFFFF48898560010000488BBD580100004C89E649BBD8742D52F27F00004C895D2041BB40DFA90041FFD3488B0C258893F900488B69F8F64504010F85A502000048C745200000000048833C2540B35F01000F85000000004C8B60184983FC020F8E000000004C8B2553FDFFFF4989C64889C74C89E641BB3096A90041FFD3480FB6C04885C00F8500000000488B0C25F091F900488D91B0010000483B14251092F9000F874F02000048891425F091F90048C701901A0100488D512048C70240B40000488B0506FDFFFF488942084C8B2503FDFFFF4C8962104C8D622049C70424B84700004D897424084C8962184D8D74241049C706A81600004D8D7E3049C707301901004989470849C74710020000004D8967184D8D6F2049C7450010110000488B9D4801000049895D08498D7D2848C707700B01004C8D572049C702100A01004D8D4A1849C701100A0100498941084D8D411849C700B8470000488BB550010000498970084D8941104D894A084D8D481049C701B84700004C8B85580100004D8941084D894A104C8957084D8D511049C702B84700004C8B8D600100004D894A084C8957104C89671849897D10498D7A1048C707A816000048895F084C8B95400100004C8957104C8B95380100004C8957184C8B1505FCFFFF4C8957204C8D573049C702B84700004C8B8D300100004D894A084C89572849897D18488B3DE4FBFFFF49897D20498D7A1048C707E0C5000048894708488B05D2FBFFFF4889471048C74718020000004C8967204889510848C741100100000048C741180200000049895E084D897E104D896E184C8B2DA3FBFFFF4D896E2049897E2848898D300100004C89B53801000049BBA09A2A52F27F000041FFE348C7442408FFFFFF0049BBC8732D52F27F00004C895D204D8D9B280FFDFF41FFD3E978FBFFFF49BB70822A52F27F000041FFD3E918FCFFFF49BB70822A52F27F000041FFD3E957FCFFFF49BB70822A52F27F000041FFD3E9A4FCFFFF49BB70822A52F27F000041FFD3E9F1FCFFFF49BB70822A52F27F000041FFD3E949FDFFFF49BB18752D52F27F00004C895D204D8D9BD815FDFF41FFD3E99CFDFFFFFF352DFAFFFF49BBE0732D52F27F000041534D8D9B3011FDFF41FFE3FF3519FAFFFF49BBF0732D52F27F000041534D8D9B2011FDFF41FFE3FF3505FAFFFF49BB08742D52F27F000041534D8D9B0811FDFF41FFE3FF35F1F9FFFF49BB28742D52F27F000041534D8D9B880CFDFF41FFE3FF35E5F9FFFF49BB48742D52F27F000041534D8D9B680CFDFF41FFE3FF35D1F9FFFF49BB58742D52F27F000041534D8D9BA80BFDFF41FFE3FF35BDF9FFFF49BB68742D52F27F000041534D8D9B980BFDFF41FFE3FF35A9F9FFFF49BB88742D52F27F000041534D8D9B280CFDFF41FFE3FF3595F9FFFF49BB98742D52F27F000041534D8D9B680BFDFF41FFE3FF3581F9FFFF49BBB8742D52F27F000041534D8D9BF80BFDFF41FFE3FF356DF9FFFF49BBC8742D52F27F000041534D8D9B380BFDFF41FFE3FF3561F9FFFF49BBE8742D52F27F000041534D8D9BC80BFDFF41FFE3FF354DF9FFFF49BBF8742D52F27F000041534D8D9B080BFDFF41FFE3FF3541F9FFFF49BB08752D52F27F000041534D8D9BF80AFDFF41FFE3
[3e4c073cd06bb2c] jit-backend-dump}
[3e4c073cd078132] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d75f4 +0  2C000000
[3e4c073cd079753] jit-backend-dump}
[3e4c073cd07d7a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7a65 +0  2C000000
[3e4c073cd07e679] jit-backend-dump}
[3e4c073cd081bee] {jit-backend-addr
bridge out of Guard 0x443ec80 has address 0x7ff2522d75f0 to 0x7ff2522d7a60
       gc table: 0x7ff2522d7530
    jump target: 0x7ff2522d75f0
         resops: 0x7ff2522d75fe
       failures: 0x7ff2522d7a60
            end: 0x7ff2522d7c85
[3e4c073cd083fa5] jit-backend-addr}
[3e4c073cd087787] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d761d +0  DC040000
[3e4c073cd0885bf] jit-backend-dump}
[3e4c073cd08b9a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d762e +0  E7040000
[3e4c073cd08c702] jit-backend-dump}
[3e4c073cd08fa04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7660 +0  D1040000
[3e4c073cd09076f] jit-backend-dump}
[3e4c073cd093c5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d76c3 +0  8A040000
[3e4c073cd0949c9] jit-backend-dump}
[3e4c073cd097d42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7714 +0  55040000
[3e4c073cd09bda6] jit-backend-dump}
[3e4c073cd09f98c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7722 +0  63040000
[3e4c073cd0a07c1] jit-backend-dump}
[3e4c073cd0a3ce7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7773 +0  4A040000
[3e4c073cd0a49c8] jit-backend-dump}
[3e4c073cd0a7ec9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7781 +0  58040000
[3e4c073cd0a8bc0] jit-backend-dump}
[3e4c073cd0abef3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d77d2 +0  23040000
[3e4c073cd0acbc5] jit-backend-dump}
[3e4c073cd0afd77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d77e0 +0  31040000
[3e4c073cd0b0a46] jit-backend-dump}
[3e4c073cd0b3bf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d783c +0  F1030000
[3e4c073cd0b48cd] jit-backend-dump}
[3e4c073cd0b7ac5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d784a +0  FF030000
[3e4c073cd0b878b] jit-backend-dump}
[3e4c073cd0bb976] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7870 +0  F5030000
[3e4c073cd0bc655] jit-backend-dump}
[3e4c073cd0bfa55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522be10f +0  DD940100
[3e4c073cd0c0767] jit-backend-dump}
[3e4c073cd0c472c] jit-backend}
[3e4c073cd0c8585] {jit-log-opt-bridge
# bridge out of Guard 0x443ec80 with 111 ops
[i0, f1, f2, i3, p4, p5, p6, p7]
+214: i9 = float_eq(f1, 0.000000)
+235: guard_false(i9, descr=<Guard0x509d460>) [i0, f1, f2, i3, p4, p5, p6, p7]
+241: i10 = float_ne(f2, f2)
+252: guard_false(i10, descr=<Guard0x5146140>) [i0, f1, f2, i3, p4, p5, p6, p7]
+258: f12 = call_f(ConstClass(fabs), f2, descr=<Callf 8 f EF=2>)
+281: i14 = float_lt(f12, 1.000000)
+302: guard_false(i14, descr=<Guard0x509d4c0>) [f2, f12, i3, p4, p5, p6, p7]
+308: p16 = call_r(ConstClass(fromint), i3, descr=<Callr 8 i EF=3>)
+392: guard_no_exception(descr=<Guard0x509d520>) [p16, i3, p4, p5, p6, p7]
+414: p19 = call_r(ConstClass(rbigint.pow), ConstPtr(ptr18), p16, descr=<Callr 8 rr EF=4>)
+473: guard_no_exception(descr=<Guard0x509d580>) [p19, i3, p4, p5, p6, p7]
+488: i20 = getfield_gc_i(p19, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+492: i22 = int_gt(i20, 2)
+496: guard_true(i22, descr=<Guard0x5146188>) [p19, i3, p4, p5, p6, p7]
+502: guard_not_invalidated(descr=<Guard0x51461d0>) [p19, i3, p4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([one^2 (square one5009)]) (let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))))')
debug_merge_point(0, 0, '(square one5009)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+502: p24 = call_r(ConstClass(rbigint.mul), p19, p19, descr=<Callr 8 rr EF=4>)
+568: guard_no_exception(descr=<Guard0x509d5e0>) [p24, p19, None, p4, p5, p6, p7]
+583: i26 = getfield_gc_i(p24, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+587: i28 = int_gt(i26, 2)
+591: guard_true(i28, descr=<Guard0x5146218>) [p24, p19, None, p4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([one^4 (square one^2)][AppRand22 (* one^2 2)]) (let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40))))))')
debug_merge_point(0, 0, '(square one^2)')
debug_merge_point(0, 0, '(* x4969 x4969)')
+597: p30 = call_r(ConstClass(rbigint.mul), p24, p24, descr=<Callr 8 rr EF=4>)
+663: guard_no_exception(descr=<Guard0x509d640>) [p30, p24, p19, None, p4, p5, p6, p7]
+678: i31 = getfield_gc_i(p30, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+682: i33 = int_gt(i31, 2)
+686: guard_true(i33, descr=<Guard0x5146260>) [p30, p24, p19, None, p4, p5, p6, p7]
debug_merge_point(0, 0, '(* one^2 2)')
+699: p36 = call_r(ConstClass(rbigint.mul), p24, ConstPtr(ptr35), descr=<Callr 8 rr EF=4>)
+769: guard_no_exception(descr=<Guard0x509d6a0>) [p36, p30, p24, p19, None, p4, p5, p6, p7]
+784: i37 = getfield_gc_i(p36, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+788: i39 = int_gt(i37, 2)
+792: guard_true(i39, descr=<Guard0x51462a8>) [p36, p30, p24, p19, None, p4, p5, p6, p7]
debug_merge_point(0, 0, '(let ([sqrt2 (square-root AppRand22)][AppRand23 (* one^4 2)]) (let ([qurt2 (quartic-root AppRand23)][loop5020 (lambda (x5022 y5024 p) (let ([AppRand24 (+ x5022 one5009)]) (let ([AppRand25 (* p AppRand24)][AppRand26 (+ y5024 one5009)]) (let ([new-p (quotient AppRand25 AppRand26)][if3 (= x5022 one5009)]) (if if3 new-p (let ([AppRand27 (* one5009 x5022)]) (let ([sqrt-x (square-root AppRand27)][AppRand28 (+ x5022 one5009)]) (let ([AppRand29 (* one5009 AppRand28)][AppRand30 (* 2 sqrt-x)][AppRand31 (* x5022 y5024)]) (let ([AppRand32 (+ AppRand31 one^2)]) (let ([AppRand33 (* one5009 AppRand32)][AppRand34 (+ y5024 one5009)]) (let ([AppRand35 (* AppRand34 sqrt-x)]) (loop5020 (quotient AppRand29 AppRand30) (quotient AppRand33 AppRand35) new-p))))))))))))][AppRand36 (+ sqrt2 one5009)]) (let ([AppRand37 (* one5009 AppRand36)][AppRand38 (* 2 qurt2)][AppRand39 (* 2 one5009)]) (let ([AppRand40 (+ AppRand39 sqrt2)]) (loop5020 (quotient AppRand37 AppRand38) qurt2 AppRand40)))))')
debug_merge_point(0, 0, '(square-root AppRand22)')
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+805: i42 = call_i(ConstClass(rbigint.lt), p36, ConstPtr(ptr41), descr=<Calli 1 rr EF=0>)
+827: guard_false(i42, descr=<Guard0x509d700>) [i42, p36, p30, p24, p19, None, p4, p5, p6, p7]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+836: p43 = new_with_vtable(descr=<SizeDescr 32>)
+880: p44 = new_with_vtable(descr=<SizeDescr 32>)
+898: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+909: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+913: p47 = new_with_vtable(descr=<SizeDescr 16>)
+925: setfield_gc(p47, p36, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+930: setfield_gc(p44, p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+934: p48 = new_with_vtable(descr=<SizeDescr 48>)
+946: p49 = new_with_vtable(descr=<SizeDescr 32>)
+957: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+961: setfield_gc(p49, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+969: setfield_gc(p49, p47, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+973: p52 = new_with_vtable(descr=<SizeDescr 40>)
+985: setfield_gc(p52, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+996: p53 = new_with_vtable(descr=<SizeDescr 32>)
+1007: p54 = new_with_vtable(descr=<SizeDescr 24>)
+1018: p55 = new_with_vtable(descr=<SizeDescr 24>)
+1029: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1033: p57 = new_with_vtable(descr=<SizeDescr 16>)
+1044: setfield_gc(p57, p19, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1055: setfield_gc(p55, p57, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1059: setfield_gc(p54, p55, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1063: p58 = new_with_vtable(descr=<SizeDescr 16>)
+1074: setfield_gc(p58, p24, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1085: setfield_gc(p54, p58, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1089: setfield_gc(p53, p54, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1093: p59 = new_with_vtable(descr=<SizeDescr 16>)
+1104: setfield_gc(p59, p30, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1115: setfield_gc(p53, p59, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1119: setfield_gc(p53, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1123: setfield_gc(p52, p53, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1127: p60 = new_with_vtable(descr=<SizeDescr 48>)
+1138: setfield_gc(p60, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1142: setfield_gc(p60, p6, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1153: setfield_gc(p60, p5, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1171: setfield_gc(p60, ConstPtr(ptr61), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1175: p62 = new_with_vtable(descr=<SizeDescr 16>)
+1186: setfield_gc(p62, p4, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1197: setfield_gc(p60, p62, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1201: setfield_gc(p52, p60, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1212: setfield_gc(p52, ConstPtr(ptr63), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1216: p64 = new_with_vtable(descr=<SizeDescr 40>)
+1227: setfield_gc(p64, ConstPtr(ptr65), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1238: setfield_gc(p64, ConstPtr(ptr66), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1242: setfield_gc(p64, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1250: setfield_gc(p64, p47, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1254: setfield_gc(p43, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1258: setfield_gc(p43, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1266: setfield_gc(p43, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1274: setfield_gc(p48, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1278: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1282: setfield_gc(p48, p52, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1293: setfield_gc(p48, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1297: setfield_gc(p48, p64, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1301: jump(p43, p48, descr=TargetToken(69318064))
+1328: --end of the loop--
[3e4c073cd13112b] jit-log-opt-bridge}
[3e4c075120254ee] {jit-backend
[3e4c07512156dc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d7f
[3e4c075121659c3] jit-backend-dump}
[3e4c075121750d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8094 +0  2C000000
[3e4c07512176773] jit-backend-dump}
[3e4c0751217ac0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8745 +0  2C000000
[3e4c0751217bb9e] jit-backend-dump}
[3e4c0751217f2cb] {jit-backend-addr
bridge out of Guard 0x45d8e78 has address 0x7ff2522d8090 to 0x7ff2522d8740
       gc table: 0x7ff2522d7f40
    jump target: 0x7ff2522d8090
         resops: 0x7ff2522d809e
       failures: 0x7ff2522d8740
            end: 0x7ff2522d8bd6
[3e4c07512181d58] jit-backend-addr}
[3e4c07512185675] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d80b0 +0  86070000
[3e4c0751218641a] jit-backend-dump}
[3e4c075121899d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d80cf +0  9F070000
[3e4c0751218a738] jit-backend-dump}
[3e4c0751218dbaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d80e8 +0  A2070000
[3e4c0751218e878] jit-backend-dump}
[3e4c07512191c84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d80ff +0  A7070000
[3e4c07512192938] jit-backend-dump}
[3e4c07512195bb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8110 +0  B2070000
[3e4c0751219685a] jit-backend-dump}
[3e4c07512199b01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8124 +0  BA070000
[3e4c0751219a7a8] jit-backend-dump}
[3e4c0751219d95d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d813a +0  C0070000
[3e4c0751219e607] jit-backend-dump}
[3e4c075121a1788] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d814f +0  C7070000
[3e4c075121a2448] jit-backend-dump}
[3e4c075121a55f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8158 +0  DA070000
[3e4c075121a62c5] jit-backend-dump}
[3e4c075121a9458] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8161 +0  ED070000
[3e4c075121aa106] jit-backend-dump}
[3e4c075121ad2a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d816b +0  FF070000
[3e4c075121adf86] jit-backend-dump}
[3e4c075121b12e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d81df +0  A7070000
[3e4c075121b1f6d] jit-backend-dump}
[3e4c075121b51ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d81f7 +0  AB070000
[3e4c075121b5ecd] jit-backend-dump}
[3e4c075121b9142] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8201 +0  BD070000
[3e4c075121b9e18] jit-backend-dump}
[3e4c075121bcfe5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d820f +0  CB070000
[3e4c075121bdcba] jit-backend-dump}
[3e4c075121c0e84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d822a +0  CC070000
[3e4c075121c1b38] jit-backend-dump}
[3e4c075121c4ca3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8274 +0  9E070000
[3e4c075121c5963] jit-backend-dump}
[3e4c075121c8b39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d82c9 +0  65070000
[3e4c075121c97da] jit-backend-dump}
[3e4c075121cc980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d82d7 +0  73070000
[3e4c075121cd64c] jit-backend-dump}
[3e4c075121d0837] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d82f6 +0  70070000
[3e4c075121d14ee] jit-backend-dump}
[3e4c075121d46bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8304 +0  7E070000
[3e4c075121d5375] jit-backend-dump}
[3e4c075121d853c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d830e +0  90070000
[3e4c075121d91ec] jit-backend-dump}
[3e4c075121dc3d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d832c +0  8E070000
[3e4c075121dd08c] jit-backend-dump}
[3e4c075121e0256] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8353 +0  83070000
[3e4c075121e0f3d] jit-backend-dump}
[3e4c075121e411d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d83b6 +0  3C070000
[3e4c075121e4df5] jit-backend-dump}
[3e4c075121e8049] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d83c4 +0  4A070000
[3e4c075121e8cf3] jit-backend-dump}
[3e4c075121ebef7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8491 +0  99060000
[3e4c075121ecba8] jit-backend-dump}
[3e4c075121efde6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d84e2 +0  64060000
[3e4c075121f0aa9] jit-backend-dump}
[3e4c075121f3cd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d84f7 +0  6B060000
[3e4c075121f49a4] jit-backend-dump}
[3e4c075121f7ed9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8549 +0  35060000
[3e4c075121f8bae] jit-backend-dump}
[3e4c075121fbe39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d8557 +0  43060000
[3e4c075121fcb05] jit-backend-dump}
[3e4c075121ffcf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522d857d +0  39060000
[3e4c07512200989] jit-backend-dump}
[3e4c07512204024] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7ff2522c72f6 +0  960D0100
[3e4c07512204d39] jit-backend-dump}
[3e4c07512209240] jit-backend}
[3e4c0751220cffa] {jit-log-opt-bridge
# bridge out of Guard 0x45d8e78 with 166 ops
[p0, p1, p2, p3, p4, p5, p6, p7]
+358: i8 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+362: i10 = int_gt(i8, 2)
+366: guard_true(i10, descr=<Guard0x509dd00>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+372: guard_not_invalidated(descr=<Guard0x5146770>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
debug_merge_point(0, 0, '(let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))')
+372: p11 = getfield_gc_r(p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+383: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x509dd60>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
debug_merge_point(0, 0, '(- t (quotient AppRand17 one))')
+403: p13 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+415: guard_class(p13, 16500720, descr=<Guard0x51467b8>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+428: p15 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+432: guard_nonnull_class(p15, ConstClass(W_Bignum), descr=<Guard0x509ddc0>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+451: p17 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+455: guard_class(p17, 16477696, descr=<Guard0x5146800>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+468: p19 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+479: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x5146848>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+488: p21 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+492: guard_nonnull_class(p21, ConstClass(W_Bignum), descr=<Guard0x509de20>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+510: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+514: i24 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+518: i25 = getfield_gc_i(p23, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+522: i26 = int_is_zero(i25)
+525: guard_false(i26, descr=<Guard0x5146890>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+531: i27 = int_lt(i8, i24)
+534: guard_false(i27, descr=<Guard0x51468d8>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+540: i28 = int_eq(i8, i24)
+543: guard_false(i28, descr=<Guard0x5146920>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+549: i30 = int_eq(i24, 1)
+553: guard_false(i30, descr=<Guard0x5146968>) [p0, i8, p1, p2, p5, p6, p3, p7, p4]
+559: p32 = call_r(ConstClass(_x_divrem), p0, p23, descr=<Callr 8 rr EF=5>)
+660: guard_no_exception(descr=<Guard0x509de80>) [p32, p23, p0, p11, p15, None, None, p5, p6, p3, p7, None]
+675: p34 = getfield_gc_r(p32, descr=<FieldP tuple2.item0 8 pure>)
+679: p35 = getfield_gc_r(p32, descr=<FieldP tuple2.item1 16 pure>)
+679: i36 = getfield_gc_i(p0, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+690: i37 = int_ne(i36, i25)
+693: guard_false(i37, descr=<Guard0x51469b0>) [p32, p23, p0, p11, p15, None, None, p5, p6, p3, p7, None]
+699: i39 = int_lt(i36, 0)
+703: guard_false(i39, descr=<Guard0x51469f8>) [p32, p23, p0, p11, p15, None, None, p5, p6, p3, p7, None]
+709: i40 = getfield_gc_i(p34, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+713: i42 = int_gt(i40, 2)
+717: guard_false(i42, descr=<Guard0x5146a40>) [p32, p23, p0, p11, p15, None, None, p5, p6, p3, p7, None]
+723: i44 = call_i(ConstClass(rbigint._toint_helper), p34, descr=<Calli 8 r EF=4>)
+735: guard_no_exception(descr=<Guard0x509dee0>) [p34, i44, p0, p11, p15, None, None, p5, p6, p3, p7, None]
+750: p46 = call_r(ConstClass(fromint), i44, descr=<Callr 8 i EF=3>)
+809: guard_no_exception(descr=<Guard0x509df40>) [p46, p15, i44, p0, p11, None, None, None, p5, p6, p3, p7, None]
+824: p47 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+835: p49 = call_r(ConstClass(rbigint.sub), p47, p46, descr=<Callr 8 rr EF=4>)
+894: guard_no_exception(descr=<Guard0x509dfa0>) [p49, i44, p0, p11, p15, None, None, p5, p6, p3, p7, None]
+909: i50 = getfield_gc_i(p49, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+913: i52 = int_gt(i50, 2)
+917: guard_true(i52, descr=<Guard0x5146a88>) [p49, i44, p0, p11, p15, None, None, p5, p6, p3, p7, None]
debug_merge_point(0, 0, '(* 2 x4983)')
+923: p53 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+934: guard_nonnull_class(p53, ConstClass(W_Fixnum), descr=<Guard0x52cc020>) [p49, i44, p0, p11, p15, None, None, p5, p6, p3, p7, None]
+954: i55 = getfield_gc_i(p53, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+959: i56 = int_is_true(i55)
+962: guard_true(i56, descr=<Guard0x5146ad0>) [p49, i44, p0, p11, p15, None, None, p5, p6, p3, p7, None]
+968: i58 = int_mul_ovf(2, i55)
+972: guard_no_overflow(descr=<Guard0x5146b18>) [p49, i44, p0, p11, p15, None, None, p5, p6, p3, p7, None]
debug_merge_point(0, 0, '(loop4976 new-a AppRand14 AppRand18 AppRand19)')
+978: p59 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+990: guard_nonnull_class(p59, ConstClass(W_Bignum), descr=<Guard0x52cc080>) [p49, i44, p0, p11, p15, None, None, p5, p6, p3, p7, None]
debug_merge_point(0, 0, '(let ([if2 (= a4978 b4980)]) (if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))) from (loop4976 new-a AppRand14 AppRand18 AppRand19)')
debug_merge_point(0, 0, '(= a4978 b4980)')
+1008: p61 = getfield_gc_r(p59, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1012: i63 = call_i(ConstClass(rbigint.eq), p61, p6, descr=<Calli 1 rr EF=0>)
+1038: guard_false(i63, descr=<Guard0x52cc0e0>) [i63, i58, p49, p59, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(if if2 (let ([t t][AppRand9 (+ a4978 b4980)]) (let ([AppRand10 (square AppRand9)][AppRand11 (* 4 t)]) (quotient AppRand10 AppRand11))) (let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))))')
debug_merge_point(0, 0, '(let ([AppRand12 (+ a4978 b4980)]) (let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))))')
debug_merge_point(0, 0, '(+ a4978 b4980)')
+1047: p65 = call_r(ConstClass(rbigint.add), p61, p6, descr=<Callr 8 rr EF=4>)
+1131: guard_no_exception(descr=<Guard0x52cc140>) [p65, i58, p49, p59, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
+1146: i66 = getfield_gc_i(p65, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1150: i68 = int_gt(i66, 2)
+1154: guard_true(i68, descr=<Guard0x5146b60>) [p65, i58, p49, p59, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(let ([new-a (quotient AppRand12 2)][AppRand13 (* a4978 b4980)]) (let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19))))))')
debug_merge_point(0, 0, '(quotient AppRand12 2)')
+1167: i71 = getarrayitem_gc_i(ConstPtr(ptr69), 0, descr=<ArrayS 8>)
+1171: p72 = new_array_clear(i66, descr=<ArrayS 8>)
+1268: p73 = new_with_vtable(descr=<SizeDescr 32>)
+1309: setfield_gc(p73, i66, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1313: setfield_gc(p73, p72, descr=<FieldP rpython.rlib.rbigint.rbigint.inst__digits 8 pure>)
+1317: i75 = call_i(ConstClass(_inplace_divrem1), p73, p65, i71, descr=<Calli 8 rri EF=5>)
+1342: setfield_gc(p73, 1, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1350: guard_no_exception(descr=<Guard0x52cc1a0>) [p65, i75, p73, i58, p49, p59, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
+1365: call_n(ConstClass(rbigint._normalize), p73, descr=<Callv 0 r EF=5>)
+1431: guard_no_exception(descr=<Guard0x52cc200>) [p65, i75, p73, i58, p49, p59, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
+1446: i78 = int_is_true(i75)
+1446: i79 = getfield_gc_i(p65, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_sign 16 pure>)
+1457: i81 = int_ne(i79, 1)
+1461: guard_false(i81, descr=<Guard0x5146ba8>) [p65, i75, p73, i58, p49, p59, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(* a4978 b4980)')
+1467: p83 = call_r(ConstClass(rbigint.mul), p61, p6, descr=<Callr 8 rr EF=4>)
+1534: guard_no_exception(descr=<Guard0x52cc260>) [p83, p73, i58, p49, p59, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
+1549: i84 = getfield_gc_i(p83, descr=<FieldS rpython.rlib.rbigint.rbigint.inst_size 24 pure>)
+1553: i86 = int_gt(i84, 2)
+1557: guard_true(i86, descr=<Guard0x5146bf0>) [p83, p73, i58, p49, p59, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(let ([AppRand14 (square-root AppRand13)][AppRand15 (- new-a a4978)]) (let ([AppRand16 (square AppRand15)]) (let ([AppRand17 (* x4983 AppRand16)]) (let ([AppRand18 (- t (quotient AppRand17 one))][AppRand19 (* 2 x4983)]) (loop4976 new-a AppRand14 AppRand18 AppRand19)))))')
debug_merge_point(0, 0, '(square-root AppRand13)')
+1563: p87 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(root x4963 2)')
debug_merge_point(0, 0, '(let ([loop4937 (lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))][AppRand6 (width x4934)][AppRand7 (- y 1)]) (let ([AppRand8 (+ AppRand6 AppRand7)]) (loop4937 (expt 2 (quotient AppRand8 y)))))')
debug_merge_point(0, 0, '(lambda (g) (let ([AppRand2 (- y 1)]) (let ([a (expt g AppRand2)]) (let ([b (* a y)][AppRand3 (- y 1)]) (let ([c (* a AppRand3)]) (let ([AppRand4 (* g c)]) (let ([AppRand5 (+ x4934 AppRand4)]) (let ([d (quotient AppRand5 b)]) (let ([if1 (< d g)]) (if if1 (loop4937 d) g))))))))))')
debug_merge_point(0, 0, '(width x4934)')
debug_merge_point(0, 0, '(let ([loop (lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))]) (loop 0 1))')
debug_merge_point(0, 0, '(lambda (i n) (let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))))')
debug_merge_point(0, 0, '(loop 0 1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop 0 1)')
debug_merge_point(0, 0, '(< x n)')
+1570: i90 = call_i(ConstClass(rbigint.lt), p83, ConstPtr(ptr89), descr=<Calli 1 rr EF=0>)
+1592: guard_false(i90, descr=<Guard0x52cc2c0>) [i90, p83, p73, i58, p49, p59, p17, None, None, p11, None, None, None, None, p6, None, p7, None]
debug_merge_point(0, 0, '(if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1))')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(* n 2)')
debug_merge_point(0, 0, '(loop AppRand0 AppRand1)')
debug_merge_point(0, 0, '(let ([if0 (< x n)]) (if if0 i (let ([AppRand0 (+ i 1)][AppRand1 (* n 2)]) (loop AppRand0 AppRand1)))) from (loop AppRand0 AppRand1)')
+1601: p91 = new_with_vtable(descr=<SizeDescr 32>)
+1645: p92 = new_with_vtable(descr=<SizeDescr 32>)
+1663: setfield_gc(p92, ConstPtr(ptr93), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1674: setfield_gc(p92, ConstPtr(ptr94), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1678: p95 = new_with_vtable(descr=<SizeDescr 16>)
+1690: setfield_gc(p95, p83, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1695: setfield_gc(p92, p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1699: p96 = new_with_vtable(descr=<SizeDescr 48>)
+1711: p97 = new_with_vtable(descr=<SizeDescr 32>)
+1722: setfield_gc(p97, ConstPtr(ptr98), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1726: setfield_gc(p97, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+1734: setfield_gc(p97, p95, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+1738: p100 = new_with_vtable(descr=<SizeDescr 40>)
+1749: setfield_gc(p100, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1760: p101 = new_with_vtable(descr=<SizeDescr 32>)
+1771: p102 = new_with_vtable(descr=<SizeDescr 48>)
+1782: setfield_gc(p102, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1793: setfield_gc(p102, p59, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1804: p103 = new_with_vtable(descr=<SizeDescr 16>)
+1815: setfield_gc(p103, p6, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1826: setfield_gc(p102, p103, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1830: p104 = new_with_vtable(descr=<SizeDescr 16>)
+1841: setfield_gc(p104, p49, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1852: setfield_gc(p102, p104, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1856: p105 = new_with_vtable(descr=<SizeDescr 16>)
+1867: setfield_gc(p105, i58, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1871: setfield_gc(p102, p105, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+1875: setfield_gc(p101, p102, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1879: p106 = new_with_vtable(descr=<SizeDescr 16>)
+1890: setfield_gc(p106, p73, descr=<FieldP pycket.values.W_Bignum.inst_value 8 pure>)
+1901: setfield_gc(p101, p106, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1905: setfield_gc(p101, p95, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1909: setfield_gc(p100, p101, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1913: setfield_gc(p100, p7, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1931: setfield_gc(p100, ConstPtr(ptr107), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1935: p108 = new_with_vtable(descr=<SizeDescr 40>)
+1946: setfield_gc(p108, ConstPtr(ptr109), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1957: setfield_gc(p108, ConstPtr(ptr110), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1961: setfield_gc(p108, 2, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+1969: setfield_gc(p108, p95, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+1973: setfield_gc(p96, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1977: setfield_gc(p91, p92, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1981: setfield_gc(p91, 1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1989: setfield_gc(p91, 2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1997: setfield_gc(p96, p97, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2001: setfield_gc(p96, p100, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2012: setfield_gc(p96, ConstPtr(ptr114), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+2016: setfield_gc(p96, p108, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+2020: jump(p91, p96, descr=TargetToken(69318064))
+2048: --end of the loop--
[3e4c075122a3540] jit-log-opt-bridge}
[3e4c07c9f7a7220] {jit-summary
Tracing:      	51	0.085212
Backend:      	51	0.046503
TOTAL:      		31.674614
ops:             	112131
recorded ops:    	23865
  calls:         	645
guards:          	5929
opt ops:         	7940
opt guards:      	1865
opt guards shared:	1115
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	6655
nvholes:         	2978
nvreused:        	1787
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	11
Total # of bridges:	40
Freed # of loops:	0
Freed # of bridges:	0
[3e4c07c9f7b85a3] jit-summary}
[3e4c07c9f7c3c60] {jit-backend-counts
entry 1:374
TargetToken(69318064):6026448
TargetToken(69318144):221762175
bridge 69549048:6026246
bridge 69549336:100
bridge 69549480:6026135
entry 5:58
entry 6:74
TargetToken(69318224):74
TargetToken(69318304):866933
bridge 68969824:97149
bridge 69549984:97148
bridge 70607648:97122
entry 10:2321
bridge 70608704:41949
bridge 70644472:69020
entry 13:951
entry 14:273
bridge 70791496:29867
bridge 70791784:34612
entry 17:273
entry 18:735
bridge 70612640:3939
bridge 71018424:4719
bridge 71018064:15687
bridge 70901984:2336
bridge 71016696:2334
bridge 71370320:3492
bridge 71376296:11609
entry 26:32
entry 27:75
bridge 72031944:7625
entry 29:182
TargetToken(72852928):382
TargetToken(72853008):3047
bridge 71163424:1508
bridge 71563968:1881
bridge 72387136:3758
bridge 71017056:1125
bridge 70902368:724
bridge 71020224:724
bridge 71020296:724
bridge 71561856:708
bridge 71158144:40
bridge 71016768:226
bridge 71374280:200
bridge 72398400:200
bridge 72025752:199
bridge 71020512:199
bridge 71371328:197
bridge 71373776:197
bridge 73197184:197
bridge 70791280:197
bridge 71160736:193
bridge 71562528:189
bridge 71560320:185
bridge 73240184:158
[3e4c07c9f7d127b] jit-backend-counts}
