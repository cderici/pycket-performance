[2a70a1677e825d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94119000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[2a70a1677e96e98] jit-backend-dump}
[2a70a1677ec90d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941190b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[2a70a1677ecc316] jit-backend-dump}
[2a70a1677ed86fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94119180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[2a70a1677eda328] jit-backend-dump}
[2a70a1677ee0b90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941191f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[2a70a1677ee2507] jit-backend-dump}
[2a70a1677eeabff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94119270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[2a70a1677eec725] jit-backend-dump}
[2a70a1677ef5864] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941192f
[2a70a1677ef9419] jit-backend-dump}
[2a70a1677efec93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b
[2a70a1677f0107b] jit-backend-dump}
[2a70a1677f05d9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94119630 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B528010000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[2a70a1677f08018] jit-backend-dump}
[2a70a1677fb062d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b
[2a70a1677fb33ad] jit-backend-dump}
[2a70a1677fb9ccc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941198f
[2a70a1677fbc597] jit-backend-dump}
[2a70a1677fc15d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94119a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[2a70a1677fc2f0c] jit-backend-dump}
[2a70a1677fd4c9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94119af
[2a70a1677fd7ed6] jit-backend-dump}
[2a70a1677fdff33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94119ce
[2a70a1677fe2f9b] jit-backend-dump}
[2a70a1677feb252] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94119ee
[2a70a1677fee481] jit-backend-dump}
[2a70a1677ff46bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411a0d0 +0  4889455848895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC084889D741BB50D2720041FFD3488B0C258893F900488B69F8F64504010F85EA0000004883C4084885C00F84CC0000004889C1488B4558488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B52801000048C7452000000000C34883C40849BB709A11946B7F000041FFE349BB709211946B7F000041FFD3E904FFFFFF
[2a70a1677ff743c] jit-backend-dump}
[2a70a1678000694] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411a2c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB709211946B7F000041FFD3E99CFFFFFF
[2a70a16780024a4] jit-backend-dump}
[2a70a1678007e85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411a380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB709211946B7F000041FFD3E9BCFFFFFF
[2a70a167800988e] jit-backend-dump}
[2a70a167800ee8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411a
[2a70a1678011a5a] jit-backend-dump}
[2a70a1678017015] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411a5c
[2a70a16780197b4] jit-backend-dump}
[2a70a167802b372] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411a750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB709A11946B7F000041FFE3
[2a70a167802cd01] jit-backend-dump}
[2a70a16785b56ac] {jit-backend
[2a70a16789847c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411a9a0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87A301000048FF04254024770266662E0F1F84000000000048FF0425403EE602488B8D380100008139480E00000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813A901A01000F8500000000488B5A104883FB240F8400000000488B7218488B7A08813F100A01000F85000000004883FE0E0F84000000004883FB000F8C000000004883FB250F8D000000004C8B054DFEFFFF4D8B4818418139F0EE02000F85000000004D8B48104D8B44D9104983F8000F8C000000004983F8100F8D000000004C8B1538FEFFFF4D8B621841813C24F0EE02000F85000000004D8B62104F8B54C4104983FA010F84000000004C8D5301488B5F104883FB017206813B503601000F85000000004C8B43084C8B2D0EFEFFFF4D39E80F85000000004C8B6B104C39EF0F85000000004889BD300100004889B5400100004889854801000048899D500100000F1F400048FF0425B0E47C024983FA240F84000000004983FA250F8D000000004B8B5CD1104883FB000F8C000000004883FB100F8D00000000498B44DC104883F8010F8400000000498D42014989C2E9B0FFFFFF49BB50A711946B7F000041FFD3E94BFEFFFFFF35E8FCFFFF49BB30A811946B7F000041534D8D9BD0E7FFFF41FFE3FF35D4FCFFFF49BB40A811946B7F000041534D8D9BC0E7FFFF41FFE3FF35C0FCFFFF49BB50A811946B7F000041534D8D9BB0E7FFFF41FFE3FF35ACFCFFFF49BB60A811946B7F000041534D8D9BA0E7FFFF41FFE3FF3598FCFFFF49BB70A811946B7F000041534D8D9B90E7FFFF41FFE3FF3584FCFFFF49BB80A811946B7F000041534D8D9B80E7FFFF41FFE3FF3570FCFFFF49BB90A811946B7F000041534D8D9B70E7FFFF41FFE3FF355CFCFFFF49BBA0A811946B7F000041534D8D9B60E7FFFF41FFE3FF3548FCFFFF49BBB0A811946B7F000041534D8D9B50E7FFFF41FFE3FF353CFCFFFF49BBC0A811946B7F000041534D8D9B40E7FFFF41FFE3FF3528FCFFFF49BBD0A811946B7F000041534D8D9B30E7FFFF41FFE3FF3514FCFFFF49BBE0A811946B7F000041534D8D9B20E7FFFF41FFE3FF3508FCFFFF49BBF0A811946B7F000041534D8D9B10E7FFFF41FFE3FF35F4FBFFFF49BB00A911946B7F000041534D8D9B00E7FFFF41FFE3FF35E0FBFFFF49BB10A911946B7F000041534D8D9BF0E6FFFF41FFE3FF35D4FBFFFF49BB20A911946B7F000041534D8D9BE0E6FFFF41FFE3FF35C0FBFFFF49BB30A911946B7F000041534D8D9BD0E6FFFF41FFE3FF35ACFBFFFF49BB40A911946B7F000041534D8D9BC0E6FFFF41FFE3FF3598FBFFFF49BB50A911946B7F000041534D8D9BB0E6FFFF41FFE3FF3584FBFFFF49BB60A911946B7F000041534D8D9BA0E6FFFF41FFE3FF3570FBFFFF49BB70A911946B7F000041534D8D9B90E6FFFF41FFE3FF355CFBFFFF49BB80A911946B7F000041534D8D9B80E6FFFF41FFE3FF3548FBFFFF49BB90A911946B7F000041534D8D9B70E6FFFF41FFE3
[2a70a167898f959] jit-backend-dump}
[2a70a167899f096] {jit-backend-addr
Loop 1 ((let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)) has address 0x7f6b9411aafd to 0x7f6b9411aca0 (bootstrap 0x7f6b9411aa70)
       gc table: 0x7f6b9411a9a0
       function: 0x7f6b9411aa70
         resops: 0x7f6b9411aafd
       failures: 0x7f6b9411aca0
            end: 0x7f6b9411af36
[2a70a16789a32fc] jit-backend-addr}
[2a70a16789a7d26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ab27 +0  87010000
[2a70a16789a9124] jit-backend-dump}
[2a70a16789ac54c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ab3d +0  8D010000
[2a70a16789ad413] jit-backend-dump}
[2a70a16789b06d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ab50 +0  B2010000
[2a70a16789b149c] jit-backend-dump}
[2a70a16789b43c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ab5e +0  C0010000
[2a70a16789b5130] jit-backend-dump}
[2a70a16789b7f00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ab72 +0  C8010000
[2a70a16789b8c86] jit-backend-dump}
[2a70a16789bbb54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ab7c +0  DA010000
[2a70a16789bc8b0] jit-backend-dump}
[2a70a16789bf749] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ab86 +0  EC010000
[2a70a16789c045b] jit-backend-dump}
[2a70a16789c32c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ab90 +0  FE010000
[2a70a16789c400d] jit-backend-dump}
[2a70a16789c6e1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411aba8 +0  02020000
[2a70a16789c7b57] jit-backend-dump}
[2a70a16789ca98c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411abbb +0  0B020000
[2a70a16789cb6aa] jit-backend-dump}
[2a70a16789ce4eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411abc5 +0  1D020000
[2a70a16789cf231] jit-backend-dump}
[2a70a16789d2050] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411abde +0  20020000
[2a70a16789d2d72] jit-backend-dump}
[2a70a16789d5b23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411abf1 +0  29020000
[2a70a16789d6823] jit-backend-dump}
[2a70a16789d95bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac0b +0  2B020000
[2a70a16789da2d4] jit-backend-dump}
[2a70a16789dd08b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac1f +0  33020000
[2a70a16789ddd8b] jit-backend-dump}
[2a70a16789e0b98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac2c +0  42020000
[2a70a16789e18cc] jit-backend-dump}
[2a70a16789e47d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac5e +0  48020000
[2a70a16789e54bb] jit-backend-dump}
[2a70a16789e834e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac68 +0  5A020000
[2a70a16789e90d8] jit-backend-dump}
[2a70a16789ebf34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac77 +0  67020000
[2a70a16789ecc96] jit-backend-dump}
[2a70a16789efb4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac81 +0  79020000
[2a70a16789f087c] jit-backend-dump}
[2a70a16789f36c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac90 +0  86020000
[2a70a16789f440f] jit-backend-dump}
[2a70a16789f7d51] jit-backend}
[2a70a16789fb94c] {jit-log-opt-loop
# Loop 1 ((let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)) : loop with 107 ops
[p0, p1]
+357: label(p0, p1, descr=TargetToken(67757584))
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+376: guard_class(p1, 16435208, descr=<Guard0x4036980>) [p0, p1]
+395: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+399: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x4036a40>) [p0, p1]
debug_merge_point(0, 0, '(= j 36)')
+417: guard_not_invalidated(descr=<Guard0x40a5da8>) [p0, p1]
+417: guard_class(p0, 16503888, descr=<Guard0x40a5d60>) [p0, p1]
+436: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+440: i8 = int_eq(i6, 36)
+444: guard_false(i8, descr=<Guard0x40a5d18>) [p0, p1]
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
+450: i9 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+454: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+458: guard_class(p10, 16499664, descr=<Guard0x40a5cd0>) [p0, p1]
+470: p12 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
+470: i14 = int_eq(i9, 14)
+474: guard_false(i14, descr=<Guard0x40a5c88>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+480: i16 = int_ge(i6, 0)
+484: guard_true(i16, descr=<Guard0x40a5c40>) [p0, p1]
+490: i18 = int_lt(i6, 37)
+494: guard_true(i18, descr=<Guard0x40a5bf8>) [p0, p1]
+507: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+511: guard_class(p20, 16623792, descr=<Guard0x40a5bb0>) [p0, p1]
+524: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+528: i24 = getarrayitem_gc_i(p23, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+533: i26 = int_ge(i24, 0)
+537: guard_true(i26, descr=<Guard0x40a5b68>) [p0, p1]
+543: i28 = int_lt(i24, 16)
+547: guard_true(i28, descr=<Guard0x40a5b20>) [p0, p1]
+560: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+564: guard_class(p30, 16623792, descr=<Guard0x40a5ad8>) [p0, p1]
+578: p33 = getfield_gc_r(ConstPtr(ptr32), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+582: i34 = getarrayitem_gc_i(p33, i24, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+587: i36 = int_eq(1, i34)
+591: guard_false(i36, descr=<Guard0x40a5a90>) [p0, p1]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand2)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
+597: i38 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
+601: p39 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+605: guard_nonnull_class(p39, 16510992, descr=<Guard0x40369e0>) [p0, p1]
+623: p41 = getfield_gc_r(p39, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+634: guard_value(p41, ConstPtr(ptr42), descr=<Guard0x40a5a48>) [p0, p1]
+643: p43 = getfield_gc_r(p39, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+647: i44 = instance_ptr_eq(p10, p43)
+650: guard_true(i44, descr=<Guard0x40a5a00>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+656: label(p10, i38, i9, p1, p3, p23, p33, p39, descr=TargetToken(67757824))
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
debug_merge_point(0, 0, '(= j 36)')
+696: guard_not_invalidated(descr=<Guard0x4036920>) [i9, i38, p10, p1, p3]
+696: i46 = int_eq(i38, 36)
+700: guard_false(i46, descr=<Guard0x40a59b8>) [i9, i38, p10, p1, p3]
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+706: i48 = int_lt(i38, 37)
+710: guard_true(i48, descr=<Guard0x40a5970>) [i9, i38, p10, p1, p3]
+716: i49 = getarrayitem_gc_i(p23, i38, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+721: i51 = int_ge(i49, 0)
+725: guard_true(i51, descr=<Guard0x40a5928>) [i9, i38, p10, p1, p3]
+731: i53 = int_lt(i49, 16)
+735: guard_true(i53, descr=<Guard0x40a58e0>) [i9, i38, p10, p1, p3]
+741: i54 = getarrayitem_gc_i(p33, i49, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+746: i56 = int_eq(1, i54)
+750: guard_false(i56, descr=<Guard0x40a5898>) [i9, i38, p10, p1, p3]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand2)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
+756: i58 = int_add(i38, 1)
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+760: i59 = arraylen_gc(p23, descr=<ArrayS 8>)
+760: i60 = arraylen_gc(p33, descr=<ArrayS 8>)
+760: jump(p10, i58, i9, p1, p3, p23, p33, p39, descr=TargetToken(67757824))
+768: --end of the loop--
[2a70a1678a90a6d] jit-log-opt-loop}
[2a70a1678d8c25a] {jit-backend
[2a70a1678dec7f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b
[2a70a1678df3eda] jit-backend-dump}
[2a70a1678dfec1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b134 +0  21000000
[2a70a1678dffffd] jit-backend-dump}
[2a70a1678e03be0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b2b5 +0  21000000
[2a70a1678e04ad2] jit-backend-dump}
[2a70a1678e07a66] {jit-backend-addr
bridge out of Guard 0x40a5898 has address 0x7f6b9411b130 to 0x7f6b9411b2b0
       gc table: 0x7f6b9411b080
    jump target: 0x7f6b9411b130
         resops: 0x7f6b9411b13e
       failures: 0x7f6b9411b2b0
            end: 0x7f6b9411b4ce
[2a70a1678e09fe5] jit-backend-addr}
[2a70a1678e0d413] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b14c +0  A2010000
[2a70a1678e0e16f] jit-backend-dump}
[2a70a1678e11250] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b16a +0  A0010000
[2a70a1678e11f63] jit-backend-dump}
[2a70a1678e14da6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b178 +0  AE010000
[2a70a1678e15a63] jit-backend-dump}
[2a70a1678e188ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b182 +0  C0010000
[2a70a1678e195a1] jit-backend-dump}
[2a70a1678e1c395] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b18c +0  D2010000
[2a70a1678e1d08c] jit-backend-dump}
[2a70a1678e1fd7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b1a5 +0  D5010000
[2a70a1678e20a0e] jit-backend-dump}
[2a70a1678e236ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b1b8 +0  DE010000
[2a70a1678e24381] jit-backend-dump}
[2a70a1678e27090] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b1c2 +0  F0010000
[2a70a1678e27d06] jit-backend-dump}
[2a70a1678e2a9ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b1da +0  F4010000
[2a70a1678e2b65a] jit-backend-dump}
[2a70a1678e2e341] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b1ed +0  FD010000
[2a70a1678e2f013] jit-backend-dump}
[2a70a1678e31ce5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b206 +0  00020000
[2a70a1678e3298f] jit-backend-dump}
[2a70a1678e3561e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b219 +0  09020000
[2a70a1678e36291] jit-backend-dump}
[2a70a1678e38ee2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b223 +0  1B020000
[2a70a1678e39b4c] jit-backend-dump}
[2a70a1678e3c779] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b232 +0  28020000
[2a70a1678e3d3d4] jit-backend-dump}
[2a70a1678e40040] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b253 +0  23020000
[2a70a1678e40cdb] jit-backend-dump}
[2a70a1678e43914] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b267 +0  2B020000
[2a70a1678e4456c] jit-backend-dump}
[2a70a1678e471cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b274 +0  3A020000
[2a70a1678e47e46] jit-backend-dump}
[2a70a1678e4c9eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac90 +0  9C040000
[2a70a1678e4d7ef] jit-backend-dump}
[2a70a1678e53bfe] jit-backend}
[2a70a1678e579a5] {jit-log-opt-bridge
# bridge out of Guard 0x40a5898 with 77 ops
[i0, i1, p2, p3, p4]
+198: guard_not_invalidated(descr=<Guard0x4036c80>) [i0, i1, p2, p3, p4]
+198: i6 = int_eq(i1, 36)
+202: guard_false(i6, descr=<Guard0x40ffec8>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
+208: p7 = getfield_gc_r(p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+219: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x4036ce0>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
+238: p9 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
+238: i11 = int_eq(i0, 14)
+246: guard_false(i11, descr=<Guard0x40fff10>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+252: i13 = int_ge(i1, 0)
+256: guard_true(i13, descr=<Guard0x40fff58>) [i0, i1, p2, p3, p4]
+262: i15 = int_lt(i1, 37)
+266: guard_true(i15, descr=<Guard0x40fffa0>) [i0, i1, p2, p3, p4]
+279: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+283: guard_class(p17, 16623792, descr=<Guard0x4170020>) [i0, i1, p2, p3, p4]
+297: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+301: i21 = getarrayitem_gc_i(p20, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+306: i23 = int_ge(i21, 0)
+310: guard_true(i23, descr=<Guard0x4170068>) [i0, i1, p2, p3, p4]
+316: i25 = int_lt(i21, 16)
+320: guard_true(i25, descr=<Guard0x41700b0>) [i0, i1, p2, p3, p4]
+333: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+337: guard_class(p27, 16623792, descr=<Guard0x41700f8>) [i0, i1, p2, p3, p4]
+350: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+354: i31 = getarrayitem_gc_i(p30, i21, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+359: i33 = int_eq(1, i31)
+363: guard_true(i33, descr=<Guard0x4170140>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+376: p35 = getfield_gc_r(ConstPtr(ptr34), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+380: guard_class(p35, 16623792, descr=<Guard0x4170188>) [i0, i1, p2, p3, p4]
+394: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+398: i39 = getarrayitem_gc_i(p38, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+403: i41 = int_ge(i39, 0)
+407: guard_true(i41, descr=<Guard0x41701d0>) [i0, i1, p2, p3, p4]
+413: i43 = int_lt(i39, 16)
+417: guard_true(i43, descr=<Guard0x4170218>) [i0, i1, p2, p3, p4]
+423: i44 = getarrayitem_gc_i(p30, i39, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+428: i46 = int_eq(1, i44)
+432: guard_false(i46, descr=<Guard0x4170260>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
+438: i48 = int_add(i1, 1)
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
+442: p49 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+453: guard_nonnull_class(p49, 16510992, descr=<Guard0x4036d40>) [i0, i1, p2, p3, p4]
+471: p51 = getfield_gc_r(p49, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+482: guard_value(p51, ConstPtr(ptr52), descr=<Guard0x41702a8>) [i0, i1, p2, p3, p4]
+491: p53 = getfield_gc_r(p49, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+495: i54 = instance_ptr_eq(p2, p53)
+498: guard_true(i54, descr=<Guard0x41702f0>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+504: i55 = arraylen_gc(p20, descr=<ArrayS 8>)
+504: i56 = arraylen_gc(p30, descr=<ArrayS 8>)
+504: jump(p2, i48, i0, p3, p7, p20, p30, p49, descr=TargetToken(67757824))
+560: --end of the loop--
[2a70a1678ea29d4] jit-log-opt-bridge}
[2a70a16791e1697] {jit-backend
[2a70a16792318d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b640 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C9201000048FF0425308F12038139480E00000F85000000004C8B79084983FF01720741813F900F00000F8500000000813A901A01000F85000000004C8B72104983FE240F84000000004C8B6A184C8B620841813C24100A01000F85000000004983FD0E0F84000000004983FE000F8C000000004983FE250F8D000000004C8B15EAFEFFFF4D8B4A18418139F0EE02000F85000000004D8B4A104F8B54F1104983FA000F8C000000004983FA100F8D000000004C8B05D5FEFFFF498B7818813FF0EE02000F8500000000498B78104E8B44D7104983F8010F85000000004C8B05C3FEFFFF4D8B501841813AF0EE02000F85000000004D8B50104F8B44F2104983F8000F8C000000004983F8100F8D000000004E8B54C7104983FA010F84000000004D8D56014D8B7424104983FE01720741813E503601000F85000000004D8B4608488B358FFEFFFF4939F00F8500000000498B76104939F40F85000000004C89A5300100004C89AD4001000048898D380100004C89BD480100004989FC4C89B55001000049BB50AC11946B7F000041FFE3660F1F44000048C7442408FFFFFF0049BBD8B411946B7F00004C895D204D8D9B18DEFFFF41FFD3E948FEFFFFFF3564FDFFFF49BBE8B411946B7F000041534D8D9B18DBFFFF41FFE3FF3550FDFFFF49BBF8B411946B7F000041534D8D9B08DBFFFF41FFE3FF353CFDFFFF49BB08B511946B7F000041534D8D9BF8DAFFFF41FFE3FF3528FDFFFF49BB18B511946B7F000041534D8D9BE8DAFFFF41FFE3FF3514FDFFFF49BB28B511946B7F000041534D8D9BD8DAFFFF41FFE3FF3500FDFFFF49BB38B511946B7F000041534D8D9BC8DAFFFF41FFE3FF35ECFCFFFF49BB48B511946B7F000041534D8D9BB8DAFFFF41FFE3FF35D8FCFFFF49BB58B511946B7F000041534D8D9BA8DAFFFF41FFE3FF35C4FCFFFF49BB68B511946B7F000041534D8D9B98DAFFFF41FFE3FF35B8FCFFFF49BB78B511946B7F000041534D8D9B88DAFFFF41FFE3FF35A4FCFFFF49BB88B511946B7F000041534D8D9B78DAFFFF41FFE3FF3590FCFFFF49BB98B511946B7F000041534D8D9B68DAFFFF41FFE3FF3584FCFFFF49BBA8B511946B7F000041534D8D9B58DAFFFF41FFE3FF3570FCFFFF49BBB8B511946B7F000041534D8D9B48DAFFFF41FFE3FF3564FCFFFF49BBC8B511946B7F000041534D8D9B38DAFFFF41FFE3FF3550FCFFFF49BBD8B511946B7F000041534D8D9B28DAFFFF41FFE3FF353CFCFFFF49BBE8B511946B7F000041534D8D9B18DAFFFF41FFE3FF3528FCFFFF49BBF8B511946B7F000041534D8D9B08DAFFFF41FFE3FF3514FCFFFF49BB08B611946B7F000041534D8D9BF8D9FFFF41FFE3FF3508FCFFFF49BB18B611946B7F000041534D8D9BE8D9FFFF41FFE3FF35F4FBFFFF49BB28B611946B7F000041534D8D9BD8D9FFFF41FFE3
[2a70a1679239544] jit-backend-dump}
[2a70a1679243d8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b714 +0  21000000
[2a70a16792451e9] jit-backend-dump}
[2a70a1679248d48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b8b5 +0  21000000
[2a70a1679249c50] jit-backend-dump}
[2a70a167924ce2a] {jit-backend-addr
bridge out of Guard 0x40a5a90 has address 0x7f6b9411b710 to 0x7f6b9411b8b0
       gc table: 0x7f6b9411b640
    jump target: 0x7f6b9411b710
         resops: 0x7f6b9411b71e
       failures: 0x7f6b9411b8b0
            end: 0x7f6b9411bb22
[2a70a167924f230] jit-backend-addr}
[2a70a1679252706] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b72e +0  A4010000
[2a70a16792534fe] jit-backend-dump}
[2a70a167925661a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b745 +0  A9010000
[2a70a167925734e] jit-backend-dump}
[2a70a167925a4ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b751 +0  D5010000
[2a70a167925b2ab] jit-backend-dump}
[2a70a167925e39f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b75f +0  E3010000
[2a70a167925f0fa] jit-backend-dump}
[2a70a1679262171] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b775 +0  E9010000
[2a70a1679262f01] jit-backend-dump}
[2a70a1679265fc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b77f +0  FB010000
[2a70a1679266d0d] jit-backend-dump}
[2a70a167926a046] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b789 +0  0D020000
[2a70a167926ad7a] jit-backend-dump}
[2a70a167926df17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b793 +0  1F020000
[2a70a167926ec20] jit-backend-dump}
[2a70a1679271b74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b7ab +0  23020000
[2a70a1679272880] jit-backend-dump}
[2a70a16792757af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b7be +0  2C020000
[2a70a167927647e] jit-backend-dump}
[2a70a167927942b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b7c8 +0  3E020000
[2a70a167927a119] jit-backend-dump}
[2a70a167927cfa6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b7df +0  43020000
[2a70a167927dc63] jit-backend-dump}
[2a70a1679280ab3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b7f2 +0  4C020000
[2a70a1679281769] jit-backend-dump}
[2a70a1679284615] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b80a +0  50020000
[2a70a16792852d2] jit-backend-dump}
[2a70a16792881d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b81d +0  59020000
[2a70a1679288ec4] jit-backend-dump}
[2a70a167928bdfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b827 +0  6B020000
[2a70a167928cadb] jit-backend-dump}
[2a70a167928f9b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b836 +0  78020000
[2a70a167929066b] jit-backend-dump}
[2a70a167929351a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b852 +0  78020000
[2a70a1679294207] jit-backend-dump}
[2a70a16792970d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b866 +0  80020000
[2a70a1679297d79] jit-backend-dump}
[2a70a167929abf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b873 +0  8F020000
[2a70a167929b8b7] jit-backend-dump}
[2a70a167929ea2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411abf1 +0  1B0B0000
[2a70a167929f731] jit-backend-dump}
[2a70a16792a3724] jit-backend}
[2a70a16792a7127] {jit-log-opt-bridge
# bridge out of Guard 0x40a5a90 with 84 ops
[p0, p1]
+230: guard_class(p1, 16435208, descr=<Guard0x4036da0>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+246: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x4036e00>) [p0, p1]
debug_merge_point(0, 0, '(= j 36)')
+265: guard_not_invalidated(descr=<Guard0x4170338>) [p0, p1]
+265: guard_class(p0, 16503888, descr=<Guard0x4170380>) [p0, p1]
+277: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+281: i8 = int_eq(i6, 36)
+285: guard_false(i8, descr=<Guard0x41703c8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
+291: i9 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+295: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+299: guard_class(p10, 16499664, descr=<Guard0x4170410>) [p0, p1]
+313: p12 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
+313: i14 = int_eq(i9, 14)
+317: guard_false(i14, descr=<Guard0x4170458>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+323: i16 = int_ge(i6, 0)
+327: guard_true(i16, descr=<Guard0x41704a0>) [p0, p1]
+333: i18 = int_lt(i6, 37)
+337: guard_true(i18, descr=<Guard0x41704e8>) [p0, p1]
+350: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+354: guard_class(p20, 16623792, descr=<Guard0x4170530>) [p0, p1]
+367: p23 = getfield_gc_r(ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+371: i24 = getarrayitem_gc_i(p23, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+376: i26 = int_ge(i24, 0)
+380: guard_true(i26, descr=<Guard0x4170578>) [p0, p1]
+386: i28 = int_lt(i24, 16)
+390: guard_true(i28, descr=<Guard0x41705c0>) [p0, p1]
+403: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+407: guard_class(p30, 16623792, descr=<Guard0x4170608>) [p0, p1]
+419: p33 = getfield_gc_r(ConstPtr(ptr32), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+423: i34 = getarrayitem_gc_i(p33, i24, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+428: i36 = int_eq(1, i34)
+432: guard_true(i36, descr=<Guard0x4170650>) [p0, p1]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+445: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+449: guard_class(p38, 16623792, descr=<Guard0x4170698>) [p0, p1]
+462: p41 = getfield_gc_r(ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+466: i42 = getarrayitem_gc_i(p41, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+471: i44 = int_ge(i42, 0)
+475: guard_true(i44, descr=<Guard0x41706e0>) [p0, p1]
+481: i46 = int_lt(i42, 16)
+485: guard_true(i46, descr=<Guard0x4170728>) [p0, p1]
+491: i47 = getarrayitem_gc_i(p33, i42, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+496: i49 = int_eq(1, i47)
+500: guard_false(i49, descr=<Guard0x4170770>) [p0, p1]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
+506: i51 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
+510: p52 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+515: guard_nonnull_class(p52, 16510992, descr=<Guard0x4036e60>) [p0, p1]
+534: p54 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+545: guard_value(p54, ConstPtr(ptr55), descr=<Guard0x41707b8>) [p0, p1]
+554: p56 = getfield_gc_r(p52, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+558: i57 = instance_ptr_eq(p10, p56)
+561: guard_true(i57, descr=<Guard0x4170800>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+567: i58 = arraylen_gc(p23, descr=<ArrayS 8>)
+567: i59 = arraylen_gc(p33, descr=<ArrayS 8>)
+567: jump(p10, i51, i9, p1, p3, p23, p33, p52, descr=TargetToken(67757824))
+624: --end of the loop--
[2a70a16792eaabb] jit-log-opt-bridge}
[2a70a16793e68a6] {jit-backend
[2a70a1679434af4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bc90 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F879301000048FF042500631203488B8D300100008139100A01000F8500000000488B41104885C00F8400000000488B1584FEFFFF4839D00F8500000000488B5108488B85380100008138480E00000F8500000000488B58084883FB017206813B900F00000F8500000000813A901A01000F8500000000488B72104883C6010F8000000000488B7A08813F100A01000F85000000004C8B47104983F8017207418138503601000F85000000004C8B4A18498B50084C8B1546FEFFFF4C39D20F85000000004D8B50104C39D70F85000000004883FE010F8C000000004883FE250F8F000000004983F90E0F8400000000488B0D3BFEFFFF4C8B51184983FA01720741813AF0EE02000F85000000004C8B51104D85D20F840000000041813A080200000F8500000000488B0D23FEFFFF488B51184883FA017206813AF0EE02000F8500000000488B51104885D20F8400000000813A080200000F85000000004889BD300100004C898D400100004889853801000048899D480100004D89D14989D44C8985500100004989F249BB50AC11946B7F000041FFE30F1F0049BB50A711946B7F000041FFD3E95BFEFFFFFF35F8FCFFFF49BB40BB11946B7F000041534D8D9BC0D4FFFF41FFE3FF35E4FCFFFF49BB50BB11946B7F000041534D8D9BB0D4FFFF41FFE3FF35D8FCFFFF49BB60BB11946B7F000041534D8D9BA0D4FFFF41FFE3FF35C4FCFFFF49BB70BB11946B7F000041534D8D9B90D4FFFF41FFE3FF35B0FCFFFF49BB80BB11946B7F000041534D8D9B80D4FFFF41FFE3FF359CFCFFFF49BB90BB11946B7F000041534D8D9B70D4FFFF41FFE3FF3588FCFFFF49BBA0BB11946B7F000041534D8D9B60D4FFFF41FFE3FF3574FCFFFF49BBB0BB11946B7F000041534D8D9B50D4FFFF41FFE3FF3560FCFFFF49BBC0BB11946B7F000041534D8D9B40D4FFFF41FFE3FF354CFCFFFF49BBD0BB11946B7F000041534D8D9B30D4FFFF41FFE3FF3540FCFFFF49BBE0BB11946B7F000041534D8D9B20D4FFFF41FFE3FF352CFCFFFF49BBF0BB11946B7F000041534D8D9B10D4FFFF41FFE3FF3518FCFFFF49BB00BC11946B7F000041534D8D9B00D4FFFF41FFE3FF3504FCFFFF49BB10BC11946B7F000041534D8D9BF0D3FFFF41FFE3FF35F0FBFFFF49BB20BC11946B7F000041534D8D9BE0D3FFFF41FFE3FF35E4FBFFFF49BB30BC11946B7F000041534D8D9BD0D3FFFF41FFE3FF35D0FBFFFF49BB40BC11946B7F000041534D8D9BC0D3FFFF41FFE3FF35BCFBFFFF49BB50BC11946B7F000041534D8D9BB0D3FFFF41FFE3FF35B0FBFFFF49BB60BC11946B7F000041534D8D9BA0D3FFFF41FFE3FF359CFBFFFF49BB70BC11946B7F000041534D8D9B90D3FFFF41FFE3FF3588FBFFFF49BB80BC11946B7F000041534D8D9B80D3FFFF41FFE3
[2a70a167943ded7] jit-backend-dump}
[2a70a1679447eaa] {jit-backend-addr
Loop 4 ((if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand4)) has address 0x7f6b9411bded to 0x7f6b9411bf80 (bootstrap 0x7f6b9411bd60)
       gc table: 0x7f6b9411bc90
       function: 0x7f6b9411bd60
         resops: 0x7f6b9411bded
       failures: 0x7f6b9411bf80
            end: 0x7f6b9411c1de
[2a70a167944aa53] jit-backend-addr}
[2a70a167944e8a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411be04 +0  8A010000
[2a70a167944fb4a] jit-backend-dump}
[2a70a1679452e49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411be11 +0  99010000
[2a70a1679453c9f] jit-backend-dump}
[2a70a1679456d84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411be21 +0  A5010000
[2a70a1679457b57] jit-backend-dump}
[2a70a167945ac02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411be38 +0  AA010000
[2a70a167945b8e0] jit-backend-dump}
[2a70a167945e99a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411be4e +0  B0010000
[2a70a167945f60d] jit-backend-dump}
[2a70a1679462760] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411be5a +0  DC010000
[2a70a16794633e0] jit-backend-dump}
[2a70a1679466374] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411be68 +0  EA010000
[2a70a1679466fad] jit-backend-dump}
[2a70a1679469fe3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411be78 +0  F6010000
[2a70a167946ac13] jit-backend-dump}
[2a70a167946db67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411be8f +0  FB010000
[2a70a167946e7b6] jit-backend-dump}
[2a70a167947170d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bea7 +0  FF010000
[2a70a16794723ae] jit-backend-dump}
[2a70a167947534f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411beb4 +0  0E020000
[2a70a1679476002] jit-backend-dump}
[2a70a1679478ff8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bebe +0  20020000
[2a70a1679479c4a] jit-backend-dump}
[2a70a167947cbc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bec8 +0  32020000
[2a70a167947d814] jit-backend-dump}
[2a70a1679480747] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bed2 +0  44020000
[2a70a16794813ba] jit-backend-dump}
[2a70a1679484342] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bef0 +0  42020000
[2a70a1679484f94] jit-backend-dump}
[2a70a1679487f43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411befd +0  51020000
[2a70a1679488be8] jit-backend-dump}
[2a70a167948baef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bf0a +0  60020000
[2a70a167948c762] jit-backend-dump}
[2a70a167948f698] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bf27 +0  5F020000
[2a70a16794902dd] jit-backend-dump}
[2a70a1679493256] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bf34 +0  6E020000
[2a70a1679493eba] jit-backend-dump}
[2a70a1679496ddd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411bf40 +0  7E020000
[2a70a1679497a47] jit-backend-dump}
[2a70a167949b312] jit-backend}
[2a70a167949ed17] {jit-log-opt-loop
# Loop 4 ((if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand4)) : entry bridge with 49 ops
[p0, p1]
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand4)')
+357: guard_class(p0, 16499664, descr=<Guard0x4036ec0>) [p1, p0]
+376: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+380: guard_nonnull(p3, descr=<Guard0x4170848>) [p1, p0]
+396: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+399: guard_true(i5, descr=<Guard0x4170890>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
+405: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+409: guard_class(p1, 16435208, descr=<Guard0x41708d8>) [p1, p0]
+428: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+432: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x4036f20>) [p1, p0]
debug_merge_point(0, 0, '(+ j 1)')
+450: guard_not_invalidated(descr=<Guard0x4170920>) [p1, p0]
+450: guard_class(p6, 16503888, descr=<Guard0x4170968>) [p1, p0]
+462: i11 = getfield_gc_i(p6, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+466: i13 = int_add_ovf(i11, 1)
+470: guard_no_overflow(descr=<Guard0x41709b0>) [p1, p0]
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
+476: p14 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+480: guard_class(p14, 16499664, descr=<Guard0x41709f8>) [p1, p0]
+492: p16 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+496: guard_nonnull_class(p16, 16510992, descr=<Guard0x4036f80>) [p1, p0]
+515: i18 = getfield_gc_i(p6, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+519: p19 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+530: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x4170a40>) [p1, p0]
+539: p21 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+543: i22 = instance_ptr_eq(p14, p21)
+546: guard_true(i22, descr=<Guard0x4170a88>) [p1, p0]
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+552: i24 = int_ge(i13, 1)
+556: guard_true(i24, descr=<Guard0x4036fe0>) [p1, i18, i13, p14]
+562: i26 = int_le(i13, 37)
+566: guard_true(i26, descr=<Guard0x4037040>) [p1, i18, i13, p14]
+572: p27 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+572: i29 = int_eq(i18, 14)
+576: guard_false(i29, descr=<Guard0x40370a0>) [p1, i18, i13, p14]
+589: p31 = getfield_gc_r(ConstPtr(ptr30), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+593: guard_nonnull_class(p31, 16623792, descr=<Guard0x4037100>) [p1, i18, i13, p14]
+612: p34 = getfield_gc_r(ConstPtr(ptr33), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+616: guard_nonnull(p34, descr=<Guard0x4037160>) [p1, i18, i13, p14]
+625: guard_gc_type(p34, 520, descr=<Guard0x40371c0>) [p1, i18, i13, p14]
+638: i36 = arraylen_gc(p34, descr=<ArrayS 8>)
+645: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+649: guard_nonnull_class(p38, 16623792, descr=<Guard0x4037220>) [p1, i18, i13, p14]
+667: p41 = getfield_gc_r(ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+671: guard_nonnull(p41, descr=<Guard0x4037280>) [p1, i18, i13, p14]
+680: guard_gc_type(p41, 520, descr=<Guard0x40372e0>) [p1, i18, i13, p14]
+692: i43 = arraylen_gc(p41, descr=<ArrayS 8>)
+692: jump(p14, i13, i18, p1, p8, p34, p41, p16, descr=TargetToken(67757824))
+752: --end of the loop--
[2a70a16794d288d] jit-log-opt-loop}
[2a70a167997d1f2] {jit-backend
[2a70a1679a420b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c
[2a70a1679a4dc3b] jit-backend-dump}
[2a70a1679a589e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c564 +0  21000000
[2a70a1679a59de5] jit-backend-dump}
[2a70a1679a5db80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c885 +0  21000000
[2a70a1679a5ea97] jit-backend-dump}
[2a70a1679a61abe] {jit-backend-addr
bridge out of Guard 0x4170260 has address 0x7f6b9411c560 to 0x7f6b9411c880
       gc table: 0x7f6b9411c410
    jump target: 0x7f6b9411c560
         resops: 0x7f6b9411c56e
       failures: 0x7f6b9411c880
            end: 0x7f6b9411cc43
[2a70a1679a63ef0] jit-backend-addr}
[2a70a1679a675fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c57c +0  5F030000
[2a70a1679a6838e] jit-backend-dump}
[2a70a1679a6b4de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c593 +0  64030000
[2a70a1679a6c145] jit-backend-dump}
[2a70a1679a6f107] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c5a1 +0  72030000
[2a70a1679a6fdb2] jit-backend-dump}
[2a70a1679a72d43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c5ab +0  84030000
[2a70a1679a739d2] jit-backend-dump}
[2a70a1679a768c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c5b5 +0  96030000
[2a70a1679a77550] jit-backend-dump}
[2a70a1679a7a3f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c5ce +0  99030000
[2a70a1679a7b0a6] jit-backend-dump}
[2a70a1679a7dfc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c5e1 +0  A2030000
[2a70a1679a7ec45] jit-backend-dump}
[2a70a1679a81bb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c5eb +0  B4030000
[2a70a1679a82844] jit-backend-dump}
[2a70a1679a85733] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c603 +0  B8030000
[2a70a1679a863fc] jit-backend-dump}
[2a70a1679a89346] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c616 +0  C1030000
[2a70a1679a8a01c] jit-backend-dump}
[2a70a1679a8cf4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c62f +0  C4030000
[2a70a1679a8dc14] jit-backend-dump}
[2a70a1679a90b77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c642 +0  CD030000
[2a70a1679a917f7] jit-backend-dump}
[2a70a1679a946d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c64c +0  DF030000
[2a70a1679a9537b] jit-backend-dump}
[2a70a1679a982cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c65b +0  EC030000
[2a70a1679a98f4b] jit-backend-dump}
[2a70a1679a9bdd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c673 +0  F0030000
[2a70a1679a9ca70] jit-backend-dump}
[2a70a1679a9fc65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c686 +0  F9030000
[2a70a1679aa0906] jit-backend-dump}
[2a70a1679aa38f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c690 +0  0B040000
[2a70a1679aa4582] jit-backend-dump}
[2a70a1679aa74b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c69f +0  18040000
[2a70a1679aa812e] jit-backend-dump}
[2a70a1679aaaf96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c6ae +0  25040000
[2a70a1679aabc07] jit-backend-dump}
[2a70a1679aaea78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c6b8 +0  37040000
[2a70a1679aaf70d] jit-backend-dump}
[2a70a1679ab25aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c6d0 +0  3B040000
[2a70a1679ab321d] jit-backend-dump}
[2a70a1679ab60c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c6da +0  4D040000
[2a70a1679ab6d73] jit-backend-dump}
[2a70a1679ab9c68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c6f2 +0  51040000
[2a70a1679aba8fd] jit-backend-dump}
[2a70a1679abd88e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c6fc +0  63040000
[2a70a1679abe545] jit-backend-dump}
[2a70a1679ac1468] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c71d +0  5E040000
[2a70a1679ac210c] jit-backend-dump}
[2a70a1679ac4fbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c72b +0  6C040000
[2a70a1679ac5c72] jit-backend-dump}
[2a70a1679ac8b4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c739 +0  7A040000
[2a70a1679ac97fc] jit-backend-dump}
[2a70a1679acc689] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c769 +0  66040000
[2a70a1679acd302] jit-backend-dump}
[2a70a1679ad0193] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c778 +0  73040000
[2a70a1679ad0e06] jit-backend-dump}
[2a70a1679ad3cf5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c782 +0  85040000
[2a70a1679ad4984] jit-backend-dump}
[2a70a1679adb597] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c791 +0  92040000
[2a70a1679adc3e7] jit-backend-dump}
[2a70a1679adf7b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411b232 +0  2A130000
[2a70a1679ae0492] jit-backend-dump}
[2a70a1679ae4491] jit-backend}
[2a70a1679ae7f5a] {jit-log-opt-bridge
# bridge out of Guard 0x4170260 with 171 ops
[i0, i1, p2, p3, p4]
+358: guard_not_invalidated(descr=<Guard0x4037340>) [i0, i1, p2, p3, p4]
+358: i6 = int_eq(i1, 36)
+362: guard_false(i6, descr=<Guard0x4170ad0>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
+368: p7 = getfield_gc_r(p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+372: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x40373a0>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
+391: p9 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
+391: i11 = int_eq(i0, 14)
+399: guard_false(i11, descr=<Guard0x4170b18>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+405: i13 = int_ge(i1, 0)
+409: guard_true(i13, descr=<Guard0x4170b60>) [i0, i1, p2, p3, p4]
+415: i15 = int_lt(i1, 37)
+419: guard_true(i15, descr=<Guard0x4170ba8>) [i0, i1, p2, p3, p4]
+432: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+436: guard_class(p17, 16623792, descr=<Guard0x4170bf0>) [i0, i1, p2, p3, p4]
+450: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+454: i21 = getarrayitem_gc_i(p20, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+459: i23 = int_ge(i21, 0)
+463: guard_true(i23, descr=<Guard0x4170c38>) [i0, i1, p2, p3, p4]
+469: i25 = int_lt(i21, 16)
+473: guard_true(i25, descr=<Guard0x4170c80>) [i0, i1, p2, p3, p4]
+486: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+490: guard_class(p27, 16623792, descr=<Guard0x4170cc8>) [i0, i1, p2, p3, p4]
+503: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+507: i31 = getarrayitem_gc_i(p30, i21, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+512: i33 = int_eq(1, i31)
+516: guard_true(i33, descr=<Guard0x4170d10>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+529: p35 = getfield_gc_r(ConstPtr(ptr34), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+533: guard_class(p35, 16623792, descr=<Guard0x4170d58>) [i0, i1, p2, p3, p4]
+547: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+551: i39 = getarrayitem_gc_i(p38, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+556: i41 = int_ge(i39, 0)
+560: guard_true(i41, descr=<Guard0x4170da0>) [i0, i1, p2, p3, p4]
+566: i43 = int_lt(i39, 16)
+570: guard_true(i43, descr=<Guard0x4170de8>) [i0, i1, p2, p3, p4]
+576: i44 = getarrayitem_gc_i(p30, i39, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+581: i46 = int_eq(1, i44)
+585: guard_true(i46, descr=<Guard0x4170e30>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '(let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6)))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+598: p48 = getfield_gc_r(ConstPtr(ptr47), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+602: guard_class(p48, 16623792, descr=<Guard0x4170e78>) [i0, i1, p2, p3, p4]
+615: p51 = getfield_gc_r(ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+619: i52 = getarrayitem_gc_i(p51, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand5)')
+624: i54 = int_ge(i52, 0)
+628: guard_true(i54, descr=<Guard0x4170ec0>) [i0, i1, p2, p3, p4]
+634: i56 = int_lt(i52, 16)
+638: guard_true(i56, descr=<Guard0x4170f08>) [i0, i1, p2, p3, p4]
+644: i57 = getarrayitem_gc_i(p30, i52, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(= 0 AppRand6)')
+649: i59 = int_eq(0, i57)
+653: guard_true(i59, descr=<Guard0x4170f50>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f)')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+659: i60 = getarrayitem_gc_i(p20, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand7 0)')
+664: i62 = int_ge(i60, 0)
+668: guard_true(i62, descr=<Guard0x4170f98>) [i0, i1, p2, p3, p4]
+674: i64 = int_lt(i60, 16)
+678: guard_true(i64, descr=<Guard0x4170fe0>) [i0, i1, p2, p3, p4]
+684: setarrayitem_gc(p30, i60, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+693: i66 = getarrayitem_gc_i(p38, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand8 0)')
+698: i68 = int_ge(i66, 0)
+702: guard_true(i68, descr=<Guard0x4037400>) [i66, p7, i0, i1, p2, p3, None]
+708: i71 = int_lt(i66, 16)
+712: guard_true(i71, descr=<Guard0x4171028>) [i66, p7, i0, i1, p2, p3, None]
+718: setarrayitem_gc(p30, i66, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+727: i73 = getarrayitem_gc_i(p51, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand9 1)')
+732: i75 = int_ge(i73, 0)
+736: guard_true(i75, descr=<Guard0x4037460>) [i73, p7, i0, i1, p2, p3, None]
+742: i77 = int_lt(i73, 16)
+746: guard_true(i77, descr=<Guard0x4171070>) [i73, p7, i0, i1, p2, p3, None]
+752: setarrayitem_gc(p30, i73, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *sequence* depth i)')
+768: p80 = getfield_gc_r(ConstPtr(ptr79), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+772: guard_class(p80, 16623792, descr=<Guard0x40374c0>) [p80, p7, i0, i1, p2, p3, None]
+785: i83 = int_ge(i0, 0)
+793: guard_true(i83, descr=<Guard0x41710b8>) [p80, p7, i0, i1, p2, p3, None]
+799: i85 = int_lt(i0, 14)
+807: guard_true(i85, descr=<Guard0x4171100>) [p80, p7, i0, i1, p2, p3, None]
+813: p87 = getfield_gc_r(ConstPtr(ptr86), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+817: setarrayitem_gc(p87, i0, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11))')
debug_merge_point(0, 0, '(lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))')
debug_merge_point(0, 0, '(+ depth 1)')
+829: i89 = int_add(i0, 1)
debug_merge_point(0, 0, '(doloop 0 AppRand11)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop 0 AppRand11)')
debug_merge_point(0, 0, '(= j 36)')
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
+839: i91 = int_eq(i89, 14)
guard_false(i91, descr=<Guard0x4037520>) [i91, i89, p7, i0, i1, p2, p3, None]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+861: i93 = getarrayitem_gc_i(p20, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+866: i95 = int_ge(i93, 0)
+870: guard_true(i95, descr=<Guard0x4171148>) [i91, i89, p7, i0, i1, p2, p3, None]
+876: i97 = int_lt(i93, 16)
+880: guard_true(i97, descr=<Guard0x4171190>) [i91, i89, p7, i0, i1, p2, p3, None]
+886: i98 = getarrayitem_gc_i(p30, i93, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+891: i100 = int_eq(1, i98)
+895: guard_false(i100, descr=<Guard0x41711d8>) [i91, i89, p7, i0, i1, p2, p3, None]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand2)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+901: p101 = new_with_vtable(descr=<SizeDescr 40>)
+945: p102 = new_with_vtable(descr=<SizeDescr 32>)
+963: setfield_gc(p102, ConstPtr(ptr103), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+967: setfield_gc(p102, i1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+971: setfield_gc(p102, i0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+975: p104 = new_with_vtable(descr=<SizeDescr 40>)
+986: setfield_gc(p104, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+990: p105 = new_with_vtable(descr=<SizeDescr 32>)
+1001: setfield_gc(p105, p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1012: setfield_gc(p105, i1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1016: setfield_gc(p105, i0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1020: setfield_gc(p104, p105, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1024: setfield_gc(p104, p3, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1035: setfield_gc(p104, ConstPtr(ptr106), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1039: i107 = arraylen_gc(p20, descr=<ArrayS 8>)
+1039: i108 = arraylen_gc(p30, descr=<ArrayS 8>)
+1039: setfield_gc(p101, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1043: setfield_gc(p101, p102, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1047: setfield_gc(p101, p104, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1058: setfield_gc(p101, ConstPtr(ptr109), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1076: jump(ConstPtr(ptr110), 1, i89, p101, p7, p20, p30, ConstPtr(ptr112), descr=TargetToken(67757824))
+1136: --end of the loop--
[2a70a1679b6c593] jit-log-opt-bridge}
[2a70a1679dfd65f] {jit-backend
[2a70a1679e7e5c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ce
[2a70a1679e895df] jit-backend-dump}
[2a70a1679e948ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411cfc4 +0  21000000
[2a70a1679e95ea4] jit-backend-dump}
[2a70a1679e99ba7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d265 +0  21000000
[2a70a1679e9aa6e] jit-backend-dump}
[2a70a1679e9dc4b] {jit-backend-addr
bridge out of Guard 0x40a59b8 has address 0x7f6b9411cfc0 to 0x7f6b9411d260
       gc table: 0x7f6b9411ce80
    jump target: 0x7f6b9411cfc0
         resops: 0x7f6b9411cfce
       failures: 0x7f6b9411d260
            end: 0x7f6b9411d622
[2a70a1679ea00d8] jit-backend-addr}
[2a70a1679ea35b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411cfdc +0  C2020000
[2a70a1679ea43d4] jit-backend-dump}
[2a70a1679ea753c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411cffa +0  C0020000
[2a70a1679ea8230] jit-backend-dump}
[2a70a1679eab403] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d00e +0  C8020000
[2a70a1679eac171] jit-backend-dump}
[2a70a1679eaf1d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d023 +0  CF020000
[2a70a1679eafe92] jit-backend-dump}
[2a70a1679eb2dfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d03b +0  D3020000
[2a70a1679eb3aa3] jit-backend-dump}
[2a70a1679eb6a1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d049 +0  E1020000
[2a70a1679eb767f] jit-backend-dump}
[2a70a1679eba65a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d05a +0  EC020000
[2a70a1679ebb2c4] jit-backend-dump}
[2a70a1679ebe1e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d068 +0  FA020000
[2a70a1679ebee85] jit-backend-dump}
[2a70a1679ec1e20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d072 +0  0C030000
[2a70a1679ec2abb] jit-backend-dump}
[2a70a1679ec5a18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d089 +0  11030000
[2a70a1679ec66b0] jit-backend-dump}
[2a70a1679ec978e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d0a9 +0  0D030000
[2a70a1679eca3fc] jit-backend-dump}
[2a70a1679ecd475] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d0b3 +0  1F030000
[2a70a1679ece0f2] jit-backend-dump}
[2a70a1679ed10e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d0bd +0  31030000
[2a70a1679ed1d77] jit-backend-dump}
[2a70a1679ed4d70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d0e1 +0  29030000
[2a70a1679ed5a14] jit-backend-dump}
[2a70a1679ed8a69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d0f4 +0  32030000
[2a70a1679ed96cd] jit-backend-dump}
[2a70a1679edc6b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d0fe +0  44030000
[2a70a1679edd352] jit-backend-dump}
[2a70a1679ee045e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d11e +0  40030000
[2a70a1679ee1124] jit-backend-dump}
[2a70a1679ee426e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d131 +0  49030000
[2a70a1679ee4f3a] jit-backend-dump}
[2a70a1679ee7eff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d13b +0  5B030000
[2a70a1679ee8b8e] jit-backend-dump}
[2a70a1679eebbc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d158 +0  5A030000
[2a70a1679eec84d] jit-backend-dump}
[2a70a1679eef89c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d16e +0  60030000
[2a70a1679ef0549] jit-backend-dump}
[2a70a1679ef35aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d184 +0  66030000
[2a70a1679ef4224] jit-backend-dump}
[2a70a1679ef7291] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d192 +0  74030000
[2a70a1679ef7f2f] jit-backend-dump}
[2a70a1679efafbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d1a1 +0  81030000
[2a70a1679efbc44] jit-backend-dump}
[2a70a1679efeba7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d1b3 +0  8B030000
[2a70a1679eff842] jit-backend-dump}
[2a70a1679f02891] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d1c9 +0  91030000
[2a70a1679f034fe] jit-backend-dump}
[2a70a1679f064dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d1e2 +0  94030000
[2a70a1679f07171] jit-backend-dump}
[2a70a1679f0a158] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d1ef +0  A3030000
[2a70a1679f0adda] jit-backend-dump}
[2a70a1679f0e013] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d1f9 +0  B5030000
[2a70a1679f0ec9b] jit-backend-dump}
[2a70a1679f11c9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d203 +0  C7030000
[2a70a1679f128e6] jit-backend-dump}
[2a70a1679f15874] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d20d +0  D9030000
[2a70a1679f16525] jit-backend-dump}
[2a70a1679f195bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d21a +0  E8030000
[2a70a1679f1a230] jit-backend-dump}
[2a70a1679f1d44d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ac5e +0  5E230000
[2a70a1679f1e0c3] jit-backend-dump}
[2a70a1679f21ee5] jit-backend}
[2a70a1679f25ba7] {jit-log-opt-bridge
# bridge out of Guard 0x40a59b8 with 105 ops
[i0, i1, p2, p3, p4]
+342: guard_not_invalidated(descr=<Guard0x4037580>) [i0, i1, p2, p3, p4]
+342: i6 = int_eq(i1, 36)
+346: guard_true(i6, descr=<Guard0x4171220>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
+352: p7 = getfield_gc_r(p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+363: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x40375e0>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= j 36)')
debug_merge_point(0, 0, '(begin (void) #f)')
+382: p9 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '#f')
+382: p10 = getfield_gc_r(p3, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+393: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x4171268>) [i0, i1, p2, p3, p4]
+402: p12 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+406: p13 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+410: guard_class(p13, 16435920, descr=<Guard0x41712b0>) [i0, i1, p2, p3, p4]
+423: p15 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+427: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x4037640>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) from (void)')
+447: guard_class(p12, 16503888, descr=<Guard0x41712f8>) [i0, i1, p2, p3, p4]
+461: p18 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+465: guard_class(p18, 16505296, descr=<Guard0x4171340>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(vector-ref *a* i)')
+478: i20 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+482: i22 = int_ge(i20, 0)
+486: guard_true(i22, descr=<Guard0x4171388>) [i0, i1, p2, p3, p4]
+492: i24 = int_lt(i20, 37)
+496: guard_true(i24, descr=<Guard0x41713d0>) [i0, i1, p2, p3, p4]
+509: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+513: guard_class(p26, 16623792, descr=<Guard0x4171418>) [i0, i1, p2, p3, p4]
+525: p29 = getfield_gc_r(ConstPtr(ptr28), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+529: i30 = getarrayitem_gc_i(p29, i20, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand12 1)')
+541: p32 = getfield_gc_r(ConstPtr(ptr31), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+545: guard_class(p32, 16623792, descr=<Guard0x4171460>) [i0, i1, p2, p3, p4]
+557: i35 = int_ge(i30, 0)
+561: guard_true(i35, descr=<Guard0x41714a8>) [i0, i1, p2, p3, p4]
+567: i37 = int_lt(i30, 16)
+571: guard_true(i37, descr=<Guard0x41714f0>) [i0, i1, p2, p3, p4]
+577: p39 = getfield_gc_r(ConstPtr(ptr38), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+581: setarrayitem_gc(p39, i30, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+597: p42 = getfield_gc_r(ConstPtr(ptr41), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+601: guard_class(p42, 16623792, descr=<Guard0x40376a0>) [i20, p42, p12, p13, p18, p15, None, None, None, None, None]
+613: p46 = getfield_gc_r(ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+617: i47 = getarrayitem_gc_i(p46, i20, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand13 1)')
+622: i49 = int_ge(i47, 0)
+626: guard_true(i49, descr=<Guard0x4171538>) [i20, p42, p12, p13, p18, p15, None, None, None, None, None]
+632: i51 = int_lt(i47, 16)
+636: guard_true(i51, descr=<Guard0x4171580>) [i20, p42, p12, p13, p18, p15, None, None, None, None, None]
+642: setarrayitem_gc(p39, i47, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+658: p54 = getfield_gc_r(ConstPtr(ptr53), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+662: guard_class(p54, 16623792, descr=<Guard0x4037700>) [i20, p54, p12, p13, p18, p15, None, None, None, None, None]
+674: p57 = getfield_gc_r(ConstPtr(ptr56), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+678: i58 = getarrayitem_gc_i(p57, i20, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand14 0)')
+683: i60 = int_ge(i58, 0)
+687: guard_true(i60, descr=<Guard0x41715c8>) [i20, p54, p12, p13, p18, p15, None, None, None, None, None]
+693: i62 = int_lt(i58, 16)
+697: guard_true(i62, descr=<Guard0x4171610>) [i20, p54, p12, p13, p18, p15, None, None, None, None, None]
+703: setarrayitem_gc(p39, i58, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '#f')
+712: p64 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+723: guard_value(p64, ConstPtr(ptr65), descr=<Guard0x4037760>) [p13, p18, p64, None, None, None, None, None, None, None, None]
+732: p66 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+736: p67 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (vector-set! *board* AppRand14 0)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
+740: guard_class(p67, 16435208, descr=<Guard0x4171658>) [p13, p18, p64, None, None, None, None, None, None, None, None]
+754: p69 = getfield_gc_r(p67, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+758: guard_nonnull_class(p69, ConstClass(ForwardLink), descr=<Guard0x40377c0>) [p13, p18, p64, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(+ j 1)')
+776: guard_class(p66, 16503888, descr=<Guard0x41716a0>) [p13, p18, p64, None, None, None, None, None, None, None, None]
+790: i72 = getfield_gc_i(p66, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+795: i74 = int_add_ovf(i72, 1)
+799: guard_no_overflow(descr=<Guard0x41716e8>) [p13, p18, p64, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
+805: p75 = getfield_gc_r(p66, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+810: guard_class(p75, 16499664, descr=<Guard0x4171730>) [p13, p18, p64, None, None, None, None, None, None, None, None]
+823: p77 = getfield_gc_r(p75, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+827: guard_nonnull_class(p77, 16510992, descr=<Guard0x4037820>) [p13, p18, p64, None, None, None, None, None, None, None, None]
+845: i79 = getfield_gc_i(p66, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+850: p80 = getfield_gc_r(p77, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+861: guard_value(p80, ConstPtr(ptr81), descr=<Guard0x4171778>) [p13, p18, p64, None, None, None, None, None, None, None, None]
+870: p82 = getfield_gc_r(p77, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+874: i83 = instance_ptr_eq(p75, p82)
+877: guard_true(i83, descr=<Guard0x41717c0>) [p13, p18, p64, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+883: i85 = int_ge(i74, 1)
+887: guard_true(i85, descr=<Guard0x4037880>) [p67, i79, i74, p75, None, None, None, None, None, None, None, None]
+893: i87 = int_le(i74, 37)
+897: guard_true(i87, descr=<Guard0x40378e0>) [p67, i79, i74, p75, None, None, None, None, None, None, None, None]
+903: p88 = getfield_gc_r(p75, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+903: i90 = int_eq(i79, 14)
+907: guard_false(i90, descr=<Guard0x4037940>) [p67, i79, i74, p75, None, None, None, None, None, None, None, None]
+913: i91 = arraylen_gc(p29, descr=<ArrayS 8>)
+913: guard_gc_type(p39, 520, descr=<Guard0x40379a0>) [p67, i79, i74, p75, None, None, None, None, None, None, None, None]
+926: i93 = arraylen_gc(p39, descr=<ArrayS 8>)
+926: jump(p75, i74, i79, p67, p69, p29, p39, p77, descr=TargetToken(67757824))
+992: --end of the loop--
[2a70a1679f802a8] jit-log-opt-bridge}
[2a70a167a2c9048] {jit-backend
[2a70a167a329289] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d7a0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB201000048FF04258008B4034983FA240F84000000004D8B77084983FE01720741813E900F00000F85000000004883BD400100000E0F84000000004983FA000F8C000000004983FA250F8D000000004C8B2DF0FEFFFF4D8B651841813C24F0EE02000F85000000004D8B65104F8B6CD4104983FD000F8C000000004983FD100F8D000000004C8B0DDAFEFFFF4D8B4118418138F0EE02000F85000000004D8B41104F8B4CE8104983F9010F85000000004C8B0DC7FEFFFF4D8B691841817D00F0EE02000F85000000004D8B69104F8B4CD5104983F9000F8C000000004983F9100F8D000000004F8B6CC8104983FD010F85000000004C8B2DAAFEFFFF4D8B4D18418139F0EE02000F85000000004D8B4D104F8B6CD1104983FD000F8C000000004983FD100F8D000000004F8B4CE8104983F9000F84000000004D8D4A014C8BAD30010000498B7D104883FF017206813F503601000F8500000000488B7708488B1D71FEFFFF4839DE0F8500000000488B5F104939DD0F85000000004C89AD300100004D89CA4C89BD380100004C89B5480100004D89E14D89C44889BD5001000049BB50AC11946B7F000041FFE3660F1F84000000000048C7442408FFFFFF0049BB30D611946B7F00004C895D204D8D9BC0BCFFFF41FFD3E928FEFFFFFF3534FDFFFF49BB40D611946B7F000041534D8D9BC0B9FFFF41FFE3FF3520FDFFFF49BB50D611946B7F000041534D8D9BB0B9FFFF41FFE3FF350CFDFFFF49BB60D611946B7F000041534D8D9BA0B9FFFF41FFE3FF35F8FCFFFF49BB70D611946B7F000041534D8D9B90B9FFFF41FFE3FF35E4FCFFFF49BB80D611946B7F000041534D8D9B80B9FFFF41FFE3FF35D0FCFFFF49BB90D611946B7F000041534D8D9B70B9FFFF41FFE3FF35C4FCFFFF49BBA0D611946B7F000041534D8D9B60B9FFFF41FFE3FF35B0FCFFFF49BBB0D611946B7F000041534D8D9B50B9FFFF41FFE3FF359CFCFFFF49BBC0D611946B7F000041534D8D9B40B9FFFF41FFE3FF3590FCFFFF49BBD0D611946B7F000041534D8D9B30B9FFFF41FFE3FF357CFCFFFF49BBE0D611946B7F000041534D8D9B20B9FFFF41FFE3FF3570FCFFFF49BBF0D611946B7F000041534D8D9B10B9FFFF41FFE3FF355CFCFFFF49BB00D711946B7F000041534D8D9B00B9FFFF41FFE3FF3548FCFFFF49BB10D711946B7F000041534D8D9BF0B8FFFF41FFE3FF3534FCFFFF49BB20D711946B7F000041534D8D9BE0B8FFFF41FFE3FF3528FCFFFF49BB30D711946B7F000041534D8D9BD0B8FFFF41FFE3FF3514FCFFFF49BB40D711946B7F000041534D8D9BC0B8FFFF41FFE3FF3500FCFFFF49BB50D711946B7F000041534D8D9BB0B8FFFF41FFE3FF35ECFBFFFF49BB60D711946B7F000041534D8D9BA0B8FFFF41FFE3FF35D8FBFFFF49BB70D711946B7F000041534D8D9B90B8FFFF41FFE3FF35CCFBFFFF49BB80D711946B7F000041534D8D9B80B8FFFF41FFE3FF35B8FBFFFF49BB90D711946B7F000041534D8D9B70B8FFFF41FFE3
[2a70a167a3316f9] jit-backend-dump}
[2a70a167a33c425] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d884 +0  21000000
[2a70a167a33d973] jit-backend-dump}
[2a70a167a341593] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411da45 +0  21000000
[2a70a167a342423] jit-backend-dump}
[2a70a167a34566b] {jit-backend-addr
bridge out of Guard 0x4170f50 has address 0x7f6b9411d880 to 0x7f6b9411da40
       gc table: 0x7f6b9411d7a0
    jump target: 0x7f6b9411d880
         resops: 0x7f6b9411d88e
       failures: 0x7f6b9411da40
            end: 0x7f6b9411dcce
[2a70a167a347d80] jit-backend-addr}
[2a70a167a34b20d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d89c +0  E2010000
[2a70a167a34c039] jit-backend-dump}
[2a70a167a34f1c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d8b3 +0  E7010000
[2a70a167a34fede] jit-backend-dump}
[2a70a167a352e3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d8c1 +0  F5010000
[2a70a167a353b4b] jit-backend-dump}
[2a70a167a356ab7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d8cb +0  07020000
[2a70a167a35774c] jit-backend-dump}
[2a70a167a35a6f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d8d5 +0  19020000
[2a70a167a35b38e] jit-backend-dump}
[2a70a167a35e24f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d8ee +0  1C020000
[2a70a167a35eec8] jit-backend-dump}
[2a70a167a361e0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d901 +0  25020000
[2a70a167a362aab] jit-backend-dump}
[2a70a167a3659f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d90b +0  37020000
[2a70a167a3666a3] jit-backend-dump}
[2a70a167a3695f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d923 +0  3B020000
[2a70a167a36a277] jit-backend-dump}
[2a70a167a36d20b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d936 +0  44020000
[2a70a167a36dee0] jit-backend-dump}
[2a70a167a370e96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d94f +0  47020000
[2a70a167a371b2e] jit-backend-dump}
[2a70a167a374a11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d962 +0  50020000
[2a70a167a375687] jit-backend-dump}
[2a70a167a378583] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d96c +0  62020000
[2a70a167a379202] jit-backend-dump}
[2a70a167a37c162] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d97b +0  6F020000
[2a70a167a37ce13] jit-backend-dump}
[2a70a167a37fdf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d993 +0  73020000
[2a70a167a380a82] jit-backend-dump}
[2a70a167a3839d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d9a6 +0  7C020000
[2a70a167a384687] jit-backend-dump}
[2a70a167a3874a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d9b0 +0  8E020000
[2a70a167a3880e2] jit-backend-dump}
[2a70a167a38af3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d9bf +0  9B020000
[2a70a167a38bbf5] jit-backend-dump}
[2a70a167a38eab6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d9e0 +0  96020000
[2a70a167a38f745] jit-backend-dump}
[2a70a167a392693] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d9f4 +0  9E020000
[2a70a167a3932f7] jit-backend-dump}
[2a70a167a3961ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411da01 +0  AD020000
[2a70a167a396e78] jit-backend-dump}
[2a70a167a39a0a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c69f +0  DD110000
[2a70a167a39ad23] jit-backend-dump}
[2a70a167a39ebd2] jit-backend}
[2a70a167a3a2612] {jit-log-opt-bridge
# bridge out of Guard 0x4170f50 with 92 ops
[i0, i1, p2, p3, p4]
+246: guard_not_invalidated(descr=<Guard0x4037a00>) [i0, i1, p2, p3, p4]
+246: i6 = int_eq(i1, 36)
+250: guard_false(i6, descr=<Guard0x4171808>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
+256: p7 = getfield_gc_r(p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+260: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x4037a60>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
+279: p9 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
+279: i11 = int_eq(i0, 14)
+287: guard_false(i11, descr=<Guard0x4171850>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+293: i13 = int_ge(i1, 0)
+297: guard_true(i13, descr=<Guard0x4171898>) [i0, i1, p2, p3, p4]
+303: i15 = int_lt(i1, 37)
+307: guard_true(i15, descr=<Guard0x41718e0>) [i0, i1, p2, p3, p4]
+320: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+324: guard_class(p17, 16623792, descr=<Guard0x4171928>) [i0, i1, p2, p3, p4]
+338: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+342: i21 = getarrayitem_gc_i(p20, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+347: i23 = int_ge(i21, 0)
+351: guard_true(i23, descr=<Guard0x4171970>) [i0, i1, p2, p3, p4]
+357: i25 = int_lt(i21, 16)
+361: guard_true(i25, descr=<Guard0x41719b8>) [i0, i1, p2, p3, p4]
+374: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+378: guard_class(p27, 16623792, descr=<Guard0x4171a00>) [i0, i1, p2, p3, p4]
+391: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+395: i31 = getarrayitem_gc_i(p30, i21, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+400: i33 = int_eq(1, i31)
+404: guard_true(i33, descr=<Guard0x4171a48>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+417: p35 = getfield_gc_r(ConstPtr(ptr34), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+421: guard_class(p35, 16623792, descr=<Guard0x4171a90>) [i0, i1, p2, p3, p4]
+435: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+439: i39 = getarrayitem_gc_i(p38, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+444: i41 = int_ge(i39, 0)
+448: guard_true(i41, descr=<Guard0x4171ad8>) [i0, i1, p2, p3, p4]
+454: i43 = int_lt(i39, 16)
+458: guard_true(i43, descr=<Guard0x4171b20>) [i0, i1, p2, p3, p4]
+464: i44 = getarrayitem_gc_i(p30, i39, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+469: i46 = int_eq(1, i44)
+473: guard_true(i46, descr=<Guard0x4171b68>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '(let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6)))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+486: p48 = getfield_gc_r(ConstPtr(ptr47), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+490: guard_class(p48, 16623792, descr=<Guard0x4171bb0>) [i0, i1, p2, p3, p4]
+503: p51 = getfield_gc_r(ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+507: i52 = getarrayitem_gc_i(p51, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand5)')
+512: i54 = int_ge(i52, 0)
+516: guard_true(i54, descr=<Guard0x4171bf8>) [i0, i1, p2, p3, p4]
+522: i56 = int_lt(i52, 16)
+526: guard_true(i56, descr=<Guard0x4171c40>) [i0, i1, p2, p3, p4]
+532: i57 = getarrayitem_gc_i(p30, i52, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(= 0 AppRand6)')
+537: i59 = int_eq(0, i57)
+541: guard_false(i59, descr=<Guard0x4171c88>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 0 AppRand6)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
+547: i61 = int_add(i1, 1)
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
+551: p62 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+562: guard_nonnull_class(p62, 16510992, descr=<Guard0x4037ac0>) [i0, i1, p2, p3, p4]
+580: p64 = getfield_gc_r(p62, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+591: guard_value(p64, ConstPtr(ptr65), descr=<Guard0x4171cd0>) [i0, i1, p2, p3, p4]
+600: p66 = getfield_gc_r(p62, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+604: i67 = instance_ptr_eq(p2, p66)
+607: guard_true(i67, descr=<Guard0x4171d18>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+613: i68 = arraylen_gc(p20, descr=<ArrayS 8>)
+613: i69 = arraylen_gc(p30, descr=<ArrayS 8>)
+613: jump(p2, i61, i0, p3, p7, p20, p30, p62, descr=TargetToken(67757824))
+672: --end of the loop--
[2a70a167a3ebc8d] jit-log-opt-bridge}
[2a70a167a5dee0a] {jit-backend
[2a70a167a63ff1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ddc
[2a70a167a64705e] jit-backend-dump}
[2a70a167a6517f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411de64 +0  21000000
[2a70a167a652c73] jit-backend-dump}
[2a70a167a6568b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e025 +0  21000000
[2a70a167a6576c5] jit-backend-dump}
[2a70a167a65a9d7] {jit-backend-addr
bridge out of Guard 0x41711d8 has address 0x7f6b9411de60 to 0x7f6b9411e020
       gc table: 0x7f6b9411ddc0
    jump target: 0x7f6b9411de60
         resops: 0x7f6b9411de6e
       failures: 0x7f6b9411e020
            end: 0x7f6b9411e1b3
[2a70a167a65cda0] jit-backend-addr}
[2a70a167a660242] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411de7b +0  E4010000
[2a70a167a660f85] jit-backend-dump}
[2a70a167a6640b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411de94 +0  03020000
[2a70a167a664d4b] jit-backend-dump}
[2a70a167a667e55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411dea7 +0  0C020000
[2a70a167a668b67] jit-backend-dump}
[2a70a167a66bc89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411deb1 +0  1E020000
[2a70a167a66c9a8] jit-backend-dump}
[2a70a167a66f9d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411dec8 +0  23020000
[2a70a167a67069e] jit-backend-dump}
[2a70a167a673623] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411dedb +0  2C020000
[2a70a167a674301] jit-backend-dump}
[2a70a167a6772c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411def4 +0  2F020000
[2a70a167a677f24] jit-backend-dump}
[2a70a167a67aec8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411df06 +0  39020000
[2a70a167a67bb41] jit-backend-dump}
[2a70a167a67eb28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411df10 +0  4B020000
[2a70a167a67f7cf] jit-backend-dump}
[2a70a167a682791] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411df1f +0  58020000
[2a70a167a68341d] jit-backend-dump}
[2a70a167a6863b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411dfcb +0  C8010000
[2a70a167a68705c] jit-backend-dump}
[2a70a167a68a2dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c791 +0  CB160000
[2a70a167a68af66] jit-backend-dump}
[2a70a167a68ef56] jit-backend}
[2a70a167a692b08] {jit-log-opt-bridge
# bridge out of Guard 0x41711d8 with 74 ops
[i0, i1, p2, i3, i4, p5, p6]
+182: guard_false(i0, descr=<Guard0x4037b20>) [i0, p5, p6, i3, i4, i1, p2]
+191: guard_not_invalidated(descr=<Guard0x4171d60>) [i0, p5, p6, i3, i4, i1, p2]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+198: p8 = getfield_gc_r(ConstPtr(ptr7), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+202: guard_class(p8, 16623792, descr=<Guard0x4171da8>) [i0, p5, p6, i3, i4, i1, p2]
+216: p11 = getfield_gc_r(ConstPtr(ptr10), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+220: i13 = getarrayitem_gc_i(p11, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+225: i15 = int_ge(i13, 0)
+229: guard_true(i15, descr=<Guard0x4171df0>) [i0, p5, p6, i3, i4, i1, p2]
+235: i17 = int_lt(i13, 16)
+239: guard_true(i17, descr=<Guard0x4171e38>) [i0, p5, p6, i3, i4, i1, p2]
+252: p19 = getfield_gc_r(ConstPtr(ptr18), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+256: guard_class(p19, 16623792, descr=<Guard0x4171e80>) [i0, p5, p6, i3, i4, i1, p2]
+268: p22 = getfield_gc_r(ConstPtr(ptr21), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+272: i23 = getarrayitem_gc_i(p22, i13, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+277: i25 = int_eq(1, i23)
+281: guard_true(i25, descr=<Guard0x4171ec8>) [i0, p5, p6, i3, i4, i1, p2]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+294: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+298: guard_class(p27, 16623792, descr=<Guard0x4171f10>) [i0, p5, p6, i3, i4, i1, p2]
+312: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+316: i32 = getarrayitem_gc_i(p30, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+320: i34 = int_ge(i32, 0)
+324: guard_true(i34, descr=<Guard0x4171f58>) [i0, p5, p6, i3, i4, i1, p2]
+330: i36 = int_lt(i32, 16)
+334: guard_true(i36, descr=<Guard0x4171fa0>) [i0, p5, p6, i3, i4, i1, p2]
+340: i37 = getarrayitem_gc_i(p22, i32, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+345: i39 = int_eq(1, i37)
+349: guard_false(i39, descr=<Guard0x417e020>) [i0, p5, p6, i3, i4, i1, p2]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand4)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+355: p40 = new_with_vtable(descr=<SizeDescr 40>)
+399: p41 = new_with_vtable(descr=<SizeDescr 32>)
+417: setfield_gc(p41, ConstPtr(ptr42), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+421: setfield_gc(p41, i4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+425: setfield_gc(p41, i3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+429: p43 = new_with_vtable(descr=<SizeDescr 40>)
+440: setfield_gc(p43, p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+444: p44 = new_with_vtable(descr=<SizeDescr 32>)
+456: setfield_gc(p44, p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+467: setfield_gc(p44, i4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+471: setfield_gc(p44, i3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+475: setfield_gc(p43, p44, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+479: setfield_gc(p43, p6, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+490: setfield_gc(p43, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+494: setfield_gc(p40, p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+498: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+502: setfield_gc(p40, p43, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+513: setfield_gc(p40, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+517: i48 = int_eq(i1, 14)
+521: guard_false(i48, descr=<Guard0x4037b80>) [p40, None, None, None, None, i1, None]
+527: i50 = arraylen_gc(p11, descr=<ArrayS 8>)
+527: i51 = arraylen_gc(p22, descr=<ArrayS 8>)
+541: jump(ConstPtr(ptr52), 1, i1, p40, p2, p11, p22, ConstPtr(ptr54), descr=TargetToken(67757824))
+608: --end of the loop--
[2a70a167a6d5973] jit-log-opt-bridge}
[2a70a167a8f529b] {jit-backend
[2a70a167a93ddbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e330 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F879301000048FF042560651203488B8D300100008139100A01000F8500000000488B41104885C00F8400000000488B1584FEFFFF4839D00F8500000000488B5108488B85380100008138480E00000F8500000000488B58084883FB017206813B900F00000F8500000000813A901A01000F8500000000488B72104883C6010F8000000000488B7A08813F100A01000F85000000004C8B47104983F8017207418138503601000F85000000004C8B4A18498B50084C8B1546FEFFFF4C39D20F85000000004D8B50104C39D70F85000000004883FE010F8C000000004883FE250F8F000000004983F90E0F8400000000488B0D3BFEFFFF4C8B51184983FA01720741813AF0EE02000F85000000004C8B51104D85D20F840000000041813A080200000F8500000000488B0D23FEFFFF488B51184883FA017206813AF0EE02000F8500000000488B51104885D20F8400000000813A080200000F85000000004889BD300100004C898D400100004889853801000048899D480100004D89D14989D44C8985500100004989F249BB50AC11946B7F000041FFE30F1F0049BB50A711946B7F000041FFD3E95BFEFFFFFF35F8FCFFFF49BBD8E111946B7F000041534D8D9B28AEFFFF41FFE3FF35E4FCFFFF49BBE8E111946B7F000041534D8D9B18AEFFFF41FFE3FF35D8FCFFFF49BBF8E111946B7F000041534D8D9B08AEFFFF41FFE3FF35C4FCFFFF49BB08E211946B7F000041534D8D9BF8ADFFFF41FFE3FF35B0FCFFFF49BB18E211946B7F000041534D8D9BE8ADFFFF41FFE3FF359CFCFFFF49BB28E211946B7F000041534D8D9BD8ADFFFF41FFE3FF3588FCFFFF49BB38E211946B7F000041534D8D9BC8ADFFFF41FFE3FF3574FCFFFF49BB48E211946B7F000041534D8D9BB8ADFFFF41FFE3FF3560FCFFFF49BB58E211946B7F000041534D8D9BA8ADFFFF41FFE3FF354CFCFFFF49BB68E211946B7F000041534D8D9B98ADFFFF41FFE3FF3540FCFFFF49BB78E211946B7F000041534D8D9B88ADFFFF41FFE3FF352CFCFFFF49BB88E211946B7F000041534D8D9B78ADFFFF41FFE3FF3518FCFFFF49BB98E211946B7F000041534D8D9B68ADFFFF41FFE3FF3504FCFFFF49BBA8E211946B7F000041534D8D9B58ADFFFF41FFE3FF35F0FBFFFF49BBB8E211946B7F000041534D8D9B48ADFFFF41FFE3FF35E4FBFFFF49BBC8E211946B7F000041534D8D9B38ADFFFF41FFE3FF35D0FBFFFF49BBD8E211946B7F000041534D8D9B28ADFFFF41FFE3FF35BCFBFFFF49BBE8E211946B7F000041534D8D9B18ADFFFF41FFE3FF35B0FBFFFF49BBF8E211946B7F000041534D8D9B08ADFFFF41FFE3FF359CFBFFFF49BB08E311946B7F000041534D8D9BF8ACFFFF41FFE3FF3588FBFFFF49BB18E311946B7F000041534D8D9BE8ACFFFF41FFE3
[2a70a167a94605b] jit-backend-dump}
[2a70a167a95092a] {jit-backend-addr
Loop 9 ((if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 0 AppRand6)) has address 0x7f6b9411e48d to 0x7f6b9411e620 (bootstrap 0x7f6b9411e400)
       gc table: 0x7f6b9411e330
       function: 0x7f6b9411e400
         resops: 0x7f6b9411e48d
       failures: 0x7f6b9411e620
            end: 0x7f6b9411e87e
[2a70a167a9537b8] jit-backend-addr}
[2a70a167a957856] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e4a4 +0  8A010000
[2a70a167a958adb] jit-backend-dump}
[2a70a167a95bff7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e4b1 +0  99010000
[2a70a167a95ce54] jit-backend-dump}
[2a70a167a95ff08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e4c1 +0  A5010000
[2a70a167a960c7f] jit-backend-dump}
[2a70a167a963d3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e4d8 +0  AA010000
[2a70a167a964a61] jit-backend-dump}
[2a70a167a967a66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e4ee +0  B0010000
[2a70a167a968729] jit-backend-dump}
[2a70a167a96b888] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e4fa +0  DC010000
[2a70a167a96c548] jit-backend-dump}
[2a70a167a96f519] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e508 +0  EA010000
[2a70a167a970201] jit-backend-dump}
[2a70a167a973228] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e518 +0  F6010000
[2a70a167a973f28] jit-backend-dump}
[2a70a167a976eea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e52f +0  FB010000
[2a70a167a977b8e] jit-backend-dump}
[2a70a167a97ab1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e547 +0  FF010000
[2a70a167a97b7d0] jit-backend-dump}
[2a70a167a97e786] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e554 +0  0E020000
[2a70a167a97f43c] jit-backend-dump}
[2a70a167a982592] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e55e +0  20020000
[2a70a167a983292] jit-backend-dump}
[2a70a167a986321] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e568 +0  32020000
[2a70a167a9870bd] jit-backend-dump}
[2a70a167a98a0a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e572 +0  44020000
[2a70a167a98adc6] jit-backend-dump}
[2a70a167a98ddff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e590 +0  42020000
[2a70a167a98eada] jit-backend-dump}
[2a70a167a991b51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e59d +0  51020000
[2a70a167a992848] jit-backend-dump}
[2a70a167a99588a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e5aa +0  60020000
[2a70a167a996584] jit-backend-dump}
[2a70a167a999571] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e5c7 +0  5F020000
[2a70a167a99a284] jit-backend-dump}
[2a70a167a99d240] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e5d4 +0  6E020000
[2a70a167a99deff] jit-backend-dump}
[2a70a167a9a0ea6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411e5e0 +0  7E020000
[2a70a167a9a1b56] jit-backend-dump}
[2a70a167a9a5522] jit-backend}
[2a70a167a9a91e1] {jit-log-opt-loop
# Loop 9 ((if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 0 AppRand6)) : entry bridge with 49 ops
[p0, p1]
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 0 AppRand6)')
+357: guard_class(p0, 16499664, descr=<Guard0x4037be0>) [p1, p0]
+376: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+380: guard_nonnull(p3, descr=<Guard0x417e068>) [p1, p0]
+396: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+399: guard_true(i5, descr=<Guard0x417e0b0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
+405: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+409: guard_class(p1, 16435208, descr=<Guard0x417e0f8>) [p1, p0]
+428: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+432: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x4037c40>) [p1, p0]
debug_merge_point(0, 0, '(+ j 1)')
+450: guard_not_invalidated(descr=<Guard0x417e140>) [p1, p0]
+450: guard_class(p6, 16503888, descr=<Guard0x417e188>) [p1, p0]
+462: i11 = getfield_gc_i(p6, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+466: i13 = int_add_ovf(i11, 1)
+470: guard_no_overflow(descr=<Guard0x417e1d0>) [p1, p0]
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
+476: p14 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+480: guard_class(p14, 16499664, descr=<Guard0x417e218>) [p1, p0]
+492: p16 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+496: guard_nonnull_class(p16, 16510992, descr=<Guard0x4037ca0>) [p1, p0]
+515: i18 = getfield_gc_i(p6, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+519: p19 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+530: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x417e260>) [p1, p0]
+539: p21 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+543: i22 = instance_ptr_eq(p14, p21)
+546: guard_true(i22, descr=<Guard0x417e2a8>) [p1, p0]
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+552: i24 = int_ge(i13, 1)
+556: guard_true(i24, descr=<Guard0x4037d00>) [p1, i18, i13, p14]
+562: i26 = int_le(i13, 37)
+566: guard_true(i26, descr=<Guard0x4037d60>) [p1, i18, i13, p14]
+572: p27 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+572: i29 = int_eq(i18, 14)
+576: guard_false(i29, descr=<Guard0x4037dc0>) [p1, i18, i13, p14]
+589: p31 = getfield_gc_r(ConstPtr(ptr30), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+593: guard_nonnull_class(p31, 16623792, descr=<Guard0x4037e20>) [p1, i18, i13, p14]
+612: p34 = getfield_gc_r(ConstPtr(ptr33), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+616: guard_nonnull(p34, descr=<Guard0x4037e80>) [p1, i18, i13, p14]
+625: guard_gc_type(p34, 520, descr=<Guard0x4037ee0>) [p1, i18, i13, p14]
+638: i36 = arraylen_gc(p34, descr=<ArrayS 8>)
+645: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+649: guard_nonnull_class(p38, 16623792, descr=<Guard0x4037f40>) [p1, i18, i13, p14]
+667: p41 = getfield_gc_r(ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+671: guard_nonnull(p41, descr=<Guard0x4037fa0>) [p1, i18, i13, p14]
+680: guard_gc_type(p41, 520, descr=<Guard0x4182020>) [p1, i18, i13, p14]
+692: i43 = arraylen_gc(p41, descr=<ArrayS 8>)
+692: jump(p14, i13, i18, p1, p8, p34, p41, p16, descr=TargetToken(67757824))
+752: --end of the loop--
[2a70a167a9dffd8] jit-log-opt-loop}
[2a70a167ae308aa] {jit-backend
[2a70a167aee5de0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ea
[2a70a167aef14a4] jit-backend-dump}
[2a70a167aefc2a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411eb74 +0  21000000
[2a70a167aefd7b3] jit-backend-dump}
[2a70a167af015a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411eed5 +0  21000000
[2a70a167af0254e] jit-backend-dump}
[2a70a167af0561a] {jit-backend-addr
bridge out of Guard 0x417e020 has address 0x7f6b9411eb70 to 0x7f6b9411eed0
       gc table: 0x7f6b9411ea50
    jump target: 0x7f6b9411eb70
         resops: 0x7f6b9411eb7e
       failures: 0x7f6b9411eed0
            end: 0x7f6b9411f1eb
[2a70a167af07a0b] jit-backend-addr}
[2a70a167af0ae05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411eb8b +0  84030000
[2a70a167af0bb79] jit-backend-dump}
[2a70a167af0f0dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411eba4 +0  A3030000
[2a70a167af0fd65] jit-backend-dump}
[2a70a167af12e62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ebb7 +0  AC030000
[2a70a167af13aee] jit-backend-dump}
[2a70a167af16b33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ebc1 +0  BE030000
[2a70a167af177cb] jit-backend-dump}
[2a70a167af1a817] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ebd8 +0  C3030000
[2a70a167af1b511] jit-backend-dump}
[2a70a167af1e5ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ebeb +0  CC030000
[2a70a167af1f278] jit-backend-dump}
[2a70a167af2225f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec02 +0  D1030000
[2a70a167af22f2e] jit-backend-dump}
[2a70a167af25f1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec14 +0  DB030000
[2a70a167af26b98] jit-backend-dump}
[2a70a167af29b2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec1e +0  ED030000
[2a70a167af2a7ab] jit-backend-dump}
[2a70a167af2d800] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec2d +0  FA030000
[2a70a167af2e483] jit-backend-dump}
[2a70a167af3143c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec45 +0  FE030000
[2a70a167af320af] jit-backend-dump}
[2a70a167af3502e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec57 +0  08040000
[2a70a167af35cb7] jit-backend-dump}
[2a70a167af38bf5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec61 +0  1A040000
[2a70a167af39859] jit-backend-dump}
[2a70a167af3c7a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec70 +0  27040000
[2a70a167af3d417] jit-backend-dump}
[2a70a167af403b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec87 +0  2C040000
[2a70a167af41034] jit-backend-dump}
[2a70a167af43fb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec91 +0  3E040000
[2a70a167af44c3f] jit-backend-dump}
[2a70a167af47bbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411eca8 +0  43040000
[2a70a167af48846] jit-backend-dump}
[2a70a167af4b7f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ecb2 +0  55040000
[2a70a167af4c494] jit-backend-dump}
[2a70a167af4f441] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ecd3 +0  50040000
[2a70a167af500df] jit-backend-dump}
[2a70a167af53095] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ecdd +0  62040000
[2a70a167af53d67] jit-backend-dump}
[2a70a167af56d17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ece7 +0  74040000
[2a70a167af579e3] jit-backend-dump}
[2a70a167af5a9d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ed14 +0  63040000
[2a70a167af5b6ba] jit-backend-dump}
[2a70a167af5e6aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ed23 +0  70040000
[2a70a167af5f342] jit-backend-dump}
[2a70a167af622e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ed2d +0  82040000
[2a70a167af62f90] jit-backend-dump}
[2a70a167af6606c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ed3c +0  8F040000
[2a70a167af66d32] jit-backend-dump}
[2a70a167af69f42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411df1f +0  4D0C0000
[2a70a167af6abc8] jit-backend-dump}
[2a70a167af6eba8] jit-backend}
[2a70a167af728c6] {jit-log-opt-bridge
# bridge out of Guard 0x417e020 with 169 ops
[i0, p1, p2, i3, i4, i5, p6]
+310: guard_false(i0, descr=<Guard0x4182080>) [i0, p1, p2, i3, i4, i5, p6]
+319: guard_not_invalidated(descr=<Guard0x417e2f0>) [i0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+326: p8 = getfield_gc_r(ConstPtr(ptr7), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+330: guard_class(p8, 16623792, descr=<Guard0x417e338>) [i0, p1, p2, i3, i4, i5, p6]
+344: p11 = getfield_gc_r(ConstPtr(ptr10), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+348: i13 = getarrayitem_gc_i(p11, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+353: i15 = int_ge(i13, 0)
+357: guard_true(i15, descr=<Guard0x417e380>) [i0, p1, p2, i3, i4, i5, p6]
+363: i17 = int_lt(i13, 16)
+367: guard_true(i17, descr=<Guard0x417e3c8>) [i0, p1, p2, i3, i4, i5, p6]
+380: p19 = getfield_gc_r(ConstPtr(ptr18), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+384: guard_class(p19, 16623792, descr=<Guard0x417e410>) [i0, p1, p2, i3, i4, i5, p6]
+396: p22 = getfield_gc_r(ConstPtr(ptr21), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+400: i23 = getarrayitem_gc_i(p22, i13, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+405: i25 = int_eq(1, i23)
+409: guard_true(i25, descr=<Guard0x417e458>) [i0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+422: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+426: guard_class(p27, 16623792, descr=<Guard0x417e4a0>) [i0, p1, p2, i3, i4, i5, p6]
+438: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+442: i32 = getarrayitem_gc_i(p30, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+446: i34 = int_ge(i32, 0)
+450: guard_true(i34, descr=<Guard0x417e4e8>) [i0, p1, p2, i3, i4, i5, p6]
+456: i36 = int_lt(i32, 16)
+460: guard_true(i36, descr=<Guard0x417e530>) [i0, p1, p2, i3, i4, i5, p6]
+466: i37 = getarrayitem_gc_i(p22, i32, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+471: i39 = int_eq(1, i37)
+475: guard_true(i39, descr=<Guard0x417e578>) [i0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '(let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6)))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+488: p41 = getfield_gc_r(ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+492: guard_class(p41, 16623792, descr=<Guard0x417e5c0>) [i0, p1, p2, i3, i4, i5, p6]
+505: p44 = getfield_gc_r(ConstPtr(ptr43), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+509: i46 = getarrayitem_gc_i(p44, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand5)')
+513: i48 = int_ge(i46, 0)
+517: guard_true(i48, descr=<Guard0x417e608>) [i0, p1, p2, i3, i4, i5, p6]
+523: i50 = int_lt(i46, 16)
+527: guard_true(i50, descr=<Guard0x417e650>) [i0, p1, p2, i3, i4, i5, p6]
+533: i51 = getarrayitem_gc_i(p22, i46, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(= 0 AppRand6)')
+538: i53 = int_eq(0, i51)
+542: guard_true(i53, descr=<Guard0x417e698>) [i0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f)')
debug_merge_point(0, 0, '(vector-ref *a* i)')
debug_merge_point(0, 0, '(vector-set! *board* AppRand7 0)')
+548: setarrayitem_gc(p22, i13, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+557: i56 = getarrayitem_gc_i(p30, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand8 0)')
+561: i58 = int_ge(i56, 0)
+565: guard_true(i58, descr=<Guard0x41820e0>) [i56, p1, p2, i3, i4, i5, p6]
+571: i60 = int_lt(i56, 16)
+575: guard_true(i60, descr=<Guard0x417e6e0>) [i56, p1, p2, i3, i4, i5, p6]
+581: setarrayitem_gc(p22, i56, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+590: i63 = getarrayitem_gc_i(p44, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand9 1)')
+594: i65 = int_ge(i63, 0)
+598: guard_true(i65, descr=<Guard0x4182140>) [i63, p1, p2, i3, i4, i5, p6]
+604: i67 = int_lt(i63, 16)
+608: guard_true(i67, descr=<Guard0x417e728>) [i63, p1, p2, i3, i4, i5, p6]
+614: setarrayitem_gc(p22, i63, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *sequence* depth i)')
+630: p70 = getfield_gc_r(ConstPtr(ptr69), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+634: guard_class(p70, 16623792, descr=<Guard0x41821a0>) [p70, p1, p2, i3, i4, i5, p6]
+647: i73 = int_ge(i5, 0)
+651: guard_true(i73, descr=<Guard0x417e770>) [p70, p1, p2, i3, i4, i5, p6]
+657: i75 = int_lt(i5, 14)
+661: guard_true(i75, descr=<Guard0x417e7b8>) [p70, p1, p2, i3, i4, i5, p6]
+667: p77 = getfield_gc_r(ConstPtr(ptr76), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+671: setarrayitem_gc(p77, i5, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11))')
debug_merge_point(0, 0, '(lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))')
debug_merge_point(0, 0, '(+ depth 1)')
+680: i80 = int_add(i5, 1)
debug_merge_point(0, 0, '(doloop 0 AppRand11)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop 0 AppRand11)')
debug_merge_point(0, 0, '(= j 36)')
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
+690: i82 = int_eq(i80, 14)
guard_false(i82, descr=<Guard0x4182200>) [i82, i80, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+712: i84 = getarrayitem_gc_i(p11, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+717: i86 = int_ge(i84, 0)
+721: guard_true(i86, descr=<Guard0x417e800>) [i82, i80, p1, p2, i3, i4, i5, p6]
+727: i88 = int_lt(i84, 16)
+731: guard_true(i88, descr=<Guard0x417e848>) [i82, i80, p1, p2, i3, i4, i5, p6]
+737: i89 = getarrayitem_gc_i(p22, i84, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+742: i91 = int_eq(1, i89)
+746: guard_false(i91, descr=<Guard0x417e890>) [i82, i80, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 1 AppRand2)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+752: p92 = new_with_vtable(descr=<SizeDescr 40>)
+796: p93 = new_with_vtable(descr=<SizeDescr 32>)
+814: setfield_gc(p93, ConstPtr(ptr94), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+818: setfield_gc(p93, 0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+826: setfield_gc(p93, i5, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+830: p96 = new_with_vtable(descr=<SizeDescr 40>)
+842: setfield_gc(p96, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+846: p97 = new_with_vtable(descr=<SizeDescr 32>)
+871: setfield_gc(p97, ConstPtr(ptr98), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+875: setfield_gc(p97, 0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+883: setfield_gc(p97, i5, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+887: setfield_gc(p96, p97, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+891: p100 = new_with_vtable(descr=<SizeDescr 40>)
+902: setfield_gc(p100, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+913: p101 = new_with_vtable(descr=<SizeDescr 32>)
+932: setfield_gc(p101, ConstPtr(ptr102), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+937: setfield_gc(p101, i4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+942: setfield_gc(p101, i3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+947: setfield_gc(p100, p101, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+951: p103 = new_with_vtable(descr=<SizeDescr 40>)
+963: setfield_gc(p103, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+967: p104 = new_with_vtable(descr=<SizeDescr 32>)
+979: setfield_gc(p104, p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+998: setfield_gc(p104, i4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1003: setfield_gc(p104, i3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1008: setfield_gc(p103, p104, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1012: setfield_gc(p103, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1023: setfield_gc(p103, ConstPtr(ptr105), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1027: setfield_gc(p100, p103, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1038: setfield_gc(p100, ConstPtr(ptr106), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1042: setfield_gc(p96, p100, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1046: setfield_gc(p96, ConstPtr(ptr107), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1050: i108 = arraylen_gc(p11, descr=<ArrayS 8>)
+1050: i109 = arraylen_gc(p22, descr=<ArrayS 8>)
+1050: setfield_gc(p92, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1054: setfield_gc(p92, p93, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1058: setfield_gc(p92, p96, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1062: setfield_gc(p92, ConstPtr(ptr110), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1073: jump(ConstPtr(ptr111), 1, i80, p92, p6, p11, p22, ConstPtr(ptr113), descr=TargetToken(67757824))
+1152: --end of the loop--
[2a70a167aff4592] jit-log-opt-bridge}
[2a70a167b31e983] {jit-backend
[2a70a167b455f1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f
[2a70a167b45da6d] jit-backend-dump}
[2a70a167b46887b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f3f4 +0  21000000
[2a70a167b469c75] jit-backend-dump}
[2a70a167b46daf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f5f5 +0  21000000
[2a70a167b46ea07] jit-backend-dump}
[2a70a167b471ccf] {jit-backend-addr
bridge out of Guard 0x417e698 has address 0x7f6b9411f3f0 to 0x7f6b9411f5f0
       gc table: 0x7f6b9411f320
    jump target: 0x7f6b9411f3f0
         resops: 0x7f6b9411f3fe
       failures: 0x7f6b9411f5f0
            end: 0x7f6b9411f7f3
[2a70a167b474254] jit-backend-addr}
[2a70a167b4777f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f40b +0  24020000
[2a70a167b478610] jit-backend-dump}
[2a70a167b47b983] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f424 +0  43020000
[2a70a167b47c67a] jit-backend-dump}
[2a70a167b47f70c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f437 +0  4C020000
[2a70a167b480425] jit-backend-dump}
[2a70a167b483483] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f441 +0  5E020000
[2a70a167b48419b] jit-backend-dump}
[2a70a167b487258] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f458 +0  63020000
[2a70a167b487f52] jit-backend-dump}
[2a70a167b48afd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f46b +0  6C020000
[2a70a167b48bca4] jit-backend-dump}
[2a70a167b48ece7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f484 +0  6F020000
[2a70a167b48f9d4] jit-backend-dump}
[2a70a167b4929ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f496 +0  79020000
[2a70a167b493717] jit-backend-dump}
[2a70a167b496744] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f4a0 +0  8B020000
[2a70a167b497456] jit-backend-dump}
[2a70a167b49a4dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f4af +0  98020000
[2a70a167b49b1ca] jit-backend-dump}
[2a70a167b49e237] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f4c7 +0  9C020000
[2a70a167b49ef1c] jit-backend-dump}
[2a70a167b4a1f1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f4d9 +0  A6020000
[2a70a167b4a2bf0] jit-backend-dump}
[2a70a167b4a5b9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f4e3 +0  B8020000
[2a70a167b4a6894] jit-backend-dump}
[2a70a167b4a9881] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f4f2 +0  C5020000
[2a70a167b4aa56b] jit-backend-dump}
[2a70a167b4ad5ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f59d +0  36020000
[2a70a167b4ae28f] jit-backend-dump}
[2a70a167b4b150b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411ec70 +0  7C070000
[2a70a167b4b224b] jit-backend-dump}
[2a70a167b4b6210] jit-backend}
[2a70a167b4b9e18] {jit-log-opt-bridge
# bridge out of Guard 0x417e698 with 89 ops
[i0, p1, p2, i3, i4, i5, p6]
+230: guard_false(i0, descr=<Guard0x4182380>) [i0, p1, p2, i3, i4, i5, p6]
+239: guard_not_invalidated(descr=<Guard0x417f148>) [i0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+246: p8 = getfield_gc_r(ConstPtr(ptr7), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+250: guard_class(p8, 16623792, descr=<Guard0x417f0b8>) [i0, p1, p2, i3, i4, i5, p6]
+264: p11 = getfield_gc_r(ConstPtr(ptr10), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+268: i13 = getarrayitem_gc_i(p11, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+273: i15 = int_ge(i13, 0)
+277: guard_true(i15, descr=<Guard0x417f028>) [i0, p1, p2, i3, i4, i5, p6]
+283: i17 = int_lt(i13, 16)
+287: guard_true(i17, descr=<Guard0x417ef98>) [i0, p1, p2, i3, i4, i5, p6]
+300: p19 = getfield_gc_r(ConstPtr(ptr18), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+304: guard_class(p19, 16623792, descr=<Guard0x417ef08>) [i0, p1, p2, i3, i4, i5, p6]
+316: p22 = getfield_gc_r(ConstPtr(ptr21), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+320: i23 = getarrayitem_gc_i(p22, i13, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+325: i25 = int_eq(1, i23)
+329: guard_true(i25, descr=<Guard0x417ee78>) [i0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+342: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+346: guard_class(p27, 16623792, descr=<Guard0x417ede8>) [i0, p1, p2, i3, i4, i5, p6]
+360: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+364: i32 = getarrayitem_gc_i(p30, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+368: i34 = int_ge(i32, 0)
+372: guard_true(i34, descr=<Guard0x417ed58>) [i0, p1, p2, i3, i4, i5, p6]
+378: i36 = int_lt(i32, 16)
+382: guard_true(i36, descr=<Guard0x417ecc8>) [i0, p1, p2, i3, i4, i5, p6]
+388: i37 = getarrayitem_gc_i(p22, i32, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+393: i39 = int_eq(1, i37)
+397: guard_true(i39, descr=<Guard0x417ec38>) [i0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '(let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6)))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+410: p41 = getfield_gc_r(ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+414: guard_class(p41, 16623792, descr=<Guard0x417eba8>) [i0, p1, p2, i3, i4, i5, p6]
+427: p44 = getfield_gc_r(ConstPtr(ptr43), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+431: i46 = getarrayitem_gc_i(p44, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand5)')
+435: i48 = int_ge(i46, 0)
+439: guard_true(i48, descr=<Guard0x417eb18>) [i0, p1, p2, i3, i4, i5, p6]
+445: i50 = int_lt(i46, 16)
+449: guard_true(i50, descr=<Guard0x417ea88>) [i0, p1, p2, i3, i4, i5, p6]
+455: i51 = getarrayitem_gc_i(p22, i46, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(= 0 AppRand6)')
+460: i53 = int_eq(0, i51)
+464: guard_false(i53, descr=<Guard0x417e9b0>) [i0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 0 AppRand6)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+470: p54 = new_with_vtable(descr=<SizeDescr 40>)
+514: p55 = new_with_vtable(descr=<SizeDescr 32>)
+532: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+536: setfield_gc(p55, i4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+540: setfield_gc(p55, i3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+544: p57 = new_with_vtable(descr=<SizeDescr 40>)
+555: setfield_gc(p57, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+559: p58 = new_with_vtable(descr=<SizeDescr 32>)
+570: setfield_gc(p58, p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+581: setfield_gc(p58, i4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+585: setfield_gc(p58, i3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+589: setfield_gc(p57, p58, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+593: setfield_gc(p57, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+604: setfield_gc(p57, ConstPtr(ptr59), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+608: setfield_gc(p54, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+612: setfield_gc(p54, p55, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+616: setfield_gc(p54, p57, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+627: setfield_gc(p54, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+631: i62 = int_eq(i5, 14)
+635: guard_false(i62, descr=<Guard0x4182320>) [p54, None, None, None, None, i5, None]
+641: i64 = arraylen_gc(p11, descr=<ArrayS 8>)
+641: i65 = arraylen_gc(p22, descr=<ArrayS 8>)
+655: jump(ConstPtr(ptr66), 1, i5, p54, p6, p11, p22, ConstPtr(ptr68), descr=TargetToken(67757824))
+720: --end of the loop--
[2a70a167b4fef3f] jit-log-opt-bridge}
[2a70a167ce4b48a] {jit-backend
[2a70a167cee68f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411f9c
[2a70a167cef05c6] jit-backend-dump}
[2a70a167cefb830] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fad4 +0  21000000
[2a70a167cefcd78] jit-backend-dump}
[2a70a167cf00b4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fda5 +0  21000000
[2a70a167cf019f7] jit-backend-dump}
[2a70a167cf04bf8] {jit-backend-addr
bridge out of Guard 0x4037520 has address 0x7f6b9411fad0 to 0x7f6b9411fda0
       gc table: 0x7f6b9411f9c0
    jump target: 0x7f6b9411fad0
         resops: 0x7f6b9411fade
       failures: 0x7f6b9411fda0
            end: 0x7f6b941200c5
[2a70a167cf07243] jit-backend-addr}
[2a70a167cf0a713] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411faeb +0  1A030000
[2a70a167cf0b52d] jit-backend-dump}
[2a70a167cf0e6f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fb04 +0  39030000
[2a70a167cf0f450] jit-backend-dump}
[2a70a167cf1244f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fb70 +0  E9020000
[2a70a167cf13158] jit-backend-dump}
[2a70a167cf16102] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fb7c +0  F9020000
[2a70a167cf16e36] jit-backend-dump}
[2a70a167cf19dca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fb93 +0  FE020000
[2a70a167cf1ab26] jit-backend-dump}
[2a70a167cf1da0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fbb2 +0  FB020000
[2a70a167cf1e6f6] jit-backend-dump}
[2a70a167cf21604] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fbbc +0  0D030000
[2a70a167cf22313] jit-backend-dump}
[2a70a167cf251c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fbc6 +0  1F030000
[2a70a167cf25ef0] jit-backend-dump}
[2a70a167cf28de5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fbde +0  23030000
[2a70a167cf29ae2] jit-backend-dump}
[2a70a167cf2ca2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fbff +0  1E030000
[2a70a167cf2d70e] jit-backend-dump}
[2a70a167cf305eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fc09 +0  30030000
[2a70a167cf312c3] jit-backend-dump}
[2a70a167cf34116] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fc13 +0  42030000
[2a70a167cf34e1c] jit-backend-dump}
[2a70a167cf37ca0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fc37 +0  3A030000
[2a70a167cf389a3] jit-backend-dump}
[2a70a167cf3b89f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fc4a +0  43030000
[2a70a167cf3c5ab] jit-backend-dump}
[2a70a167cf3f438] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fc54 +0  55030000
[2a70a167cf4012c] jit-backend-dump}
[2a70a167cf4304c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fc74 +0  51030000
[2a70a167cf43d30] jit-backend-dump}
[2a70a167cf46ce0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fc87 +0  5A030000
[2a70a167cf479c8] jit-backend-dump}
[2a70a167cf4a8c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fc91 +0  6C030000
[2a70a167cf4b5a1] jit-backend-dump}
[2a70a167cf4e3d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fcb7 +0  62030000
[2a70a167cf4f0a2] jit-backend-dump}
[2a70a167cf51e5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fcd8 +0  5D030000
[2a70a167cf52b34] jit-backend-dump}
[2a70a167cf558e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fcec +0  65030000
[2a70a167cf565b4] jit-backend-dump}
[2a70a167cf59387] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fcf9 +0  74030000
[2a70a167cf5a056] jit-backend-dump}
[2a70a167cf5ce2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fd4a +0  3F030000
[2a70a167cf5db2e] jit-backend-dump}
[2a70a167cf60913] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fd58 +0  4D030000
[2a70a167cf615fb] jit-backend-dump}
[2a70a167cf64681] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411c769 +0  63330000
[2a70a167cf65347] jit-backend-dump}
[2a70a167cf69220] jit-backend}
[2a70a167cf6cd08] {jit-log-opt-bridge
# bridge out of Guard 0x4037520 with 91 ops
[i0, i1, p2, i3, i4, p5, p6]
+294: guard_true(i0, descr=<Guard0x41824a0>) [i0, p5, p6, i3, i4, i1, p2]
+303: guard_not_invalidated(descr=<Guard0x417f3d0>) [i0, p5, p6, i3, i4, i1, p2]
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t)')
debug_merge_point(0, 0, '(vector->list *sequence*)')
+310: p8 = getfield_gc_r(ConstPtr(ptr7), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+315: guard_class(p8, 16623792, descr=<Guard0x417f418>) [i0, p5, p6, i3, i4, i1, p2]
+328: p11 = getfield_gc_r(ConstPtr(ptr10), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+335: p15 = call_r(ConstClass(vector_to_improper_trampoline__v174___simple_call__function_v), ConstPtr(ptr13), ConstPtr(ptr14), descr=<Callr 8 rr EF=5>)
+421: guard_no_exception(descr=<Guard0x4182500>) [p15, p5, p6, i3, i4, i1, p2]
+436: guard_class(p15, 16471056, descr=<Guard0x417f460>) [p15, p5, p6, i3, i4, i1, p2]
debug_merge_point(0, 0, '(set! *answer* (cons (cdr AppRand0) *answer*))')
+448: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+452: guard_nonnull_class(p17, 16471056, descr=<Guard0x4182560>) [p15, p5, p6, i3, i4, i1, p2]
+478: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+482: guard_nonnull_class(p20, 16470384, descr=<Guard0x41825c0>) [p15, p5, p6, i3, i4, i1, p2]
debug_merge_point(0, 0, '#t')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (vector->list *sequence*)')
debug_merge_point(0, 0, '(begin (void) #f)')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) from (void)')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+502: i23 = int_ge(i4, 0)
+506: guard_true(i23, descr=<Guard0x417f4a8>) [p15, p5, p6, i3, i4, i1, p2]
+512: i25 = int_lt(i4, 37)
+516: guard_true(i25, descr=<Guard0x417f4f0>) [p15, p5, p6, i3, i4, i1, p2]
+529: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+533: guard_class(p27, 16623792, descr=<Guard0x417f538>) [p15, p5, p6, i3, i4, i1, p2]
+546: p30 = getfield_gc_r(ConstPtr(ptr29), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+550: i31 = getarrayitem_gc_i(p30, i4, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand12 1)')
+562: p33 = getfield_gc_r(ConstPtr(ptr32), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+566: guard_class(p33, 16623792, descr=<Guard0x417f580>) [p15, p5, p6, i3, i4, i1, p2]
+579: i36 = int_ge(i31, 0)
+583: guard_true(i36, descr=<Guard0x417f5c8>) [p15, p5, p6, i3, i4, i1, p2]
+589: i38 = int_lt(i31, 16)
+593: guard_true(i38, descr=<Guard0x417f610>) [p15, p5, p6, i3, i4, i1, p2]
+599: p40 = getfield_gc_r(ConstPtr(ptr39), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+603: setarrayitem_gc(p40, i31, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+619: p43 = getfield_gc_r(ConstPtr(ptr42), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+623: guard_class(p43, 16623792, descr=<Guard0x4182620>) [i4, p43, p20, p17, p5, p6, i3, None, None, p2]
+635: p47 = getfield_gc_r(ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+639: i48 = getarrayitem_gc_i(p47, i4, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand13 1)')
+644: i50 = int_ge(i48, 0)
+648: guard_true(i50, descr=<Guard0x417f658>) [i4, p43, p20, p17, p5, p6, i3, None, None, p2]
+654: i52 = int_lt(i48, 16)
+658: guard_true(i52, descr=<Guard0x417f6a0>) [i4, p43, p20, p17, p5, p6, i3, None, None, p2]
+664: setarrayitem_gc(p40, i48, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+680: p55 = getfield_gc_r(ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+684: guard_class(p55, 16623792, descr=<Guard0x4182680>) [i4, p55, p20, p17, p5, p6, i3, None, None, p2]
+696: p58 = getfield_gc_r(ConstPtr(ptr57), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+700: i59 = getarrayitem_gc_i(p58, i4, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand14 0)')
+705: i61 = int_ge(i59, 0)
+709: guard_true(i61, descr=<Guard0x417f6e8>) [i4, p55, p20, p17, p5, p6, i3, None, None, p2]
+715: i63 = int_lt(i59, 16)
+719: guard_true(i63, descr=<Guard0x417f730>) [i4, p55, p20, p17, p5, p6, i3, None, None, p2]
+725: setarrayitem_gc(p40, i59, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (vector-set! *board* AppRand14 0)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
+734: p65 = getfield_gc_r(p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+745: guard_nonnull_class(p65, ConstClass(ForwardLink), descr=<Guard0x41826e0>) [p65, p6, p20, p17, p5, None, i3, i4, None, None]
debug_merge_point(0, 0, '(+ j 1)')
+763: i68 = int_add(i4, 1)
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
+767: p69 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+778: guard_nonnull_class(p69, 16510992, descr=<Guard0x4182740>) [p65, p6, p20, p17, p5, None, i3, i4, None, None]
+796: p71 = getfield_gc_r(p69, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+807: guard_value(p71, ConstPtr(ptr72), descr=<Guard0x417f778>) [p65, p6, p20, p17, p5, None, i3, i4, None, None]
+816: p73 = getfield_gc_r(p69, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+820: i74 = instance_ptr_eq(p5, p73)
+823: guard_true(i74, descr=<Guard0x417f7c0>) [p65, p6, p20, p17, p5, None, i3, i4, None, None]
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+829: p75 = new_with_vtable(descr=<SizeDescr 24>)
+873: setfield_gc(p75, p17, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+877: setfield_gc(p75, p20, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+892: setfield_gc(ConstPtr(ptr76), p75, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+896: p77 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+896: i79 = int_eq(i3, 14)
+904: guard_false(i79, descr=<Guard0x41827a0>) [p6, i68, None, None, p5, None, i3, None, None, None]
+910: i80 = arraylen_gc(p30, descr=<ArrayS 8>)
+910: guard_gc_type(p40, 520, descr=<Guard0x4182800>) [p6, i68, None, None, p5, None, i3, None, None, None]
+924: i82 = arraylen_gc(p40, descr=<ArrayS 8>)
+924: jump(p5, i68, i3, p6, p65, p30, p40, p69, descr=TargetToken(67757824))
+992: --end of the loop--
[2a70a167cfc267a] jit-log-opt-bridge}
[2a70a16f34ba404] {jit-backend
[2a70a16f35ba812] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b
[2a70a16f35ca325] jit-backend-dump}
[2a70a16f35dbb38] {jit-backend-addr
Loop 13 ((let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) from (void)) has address 0x7f6b9412076d to 0x7f6b94120c80 (bootstrap 0x7f6b941206e0)
       gc table: 0x7f6b94120490
       function: 0x7f6b941206e0
         resops: 0x7f6b9412076d
       failures: 0x7f6b94120c80
            end: 0x7f6b941212fe
[2a70a16f35de963] jit-backend-addr}
[2a70a16f35e2e6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120784 +0  3A050000
[2a70a16f35e41b9] jit-backend-dump}
[2a70a16f35e761e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120794 +0  46050000
[2a70a16f35e84af] jit-backend-dump}
[2a70a16f35eb51f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941207a7 +0  4F050000
[2a70a16f35ec2b2] jit-backend-dump}
[2a70a16f35ef271] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941207bd +0  55050000
[2a70a16f35eff74] jit-backend-dump}
[2a70a16f35f305c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941207cb +0  7F050000
[2a70a16f35f3d46] jit-backend-dump}
[2a70a16f35f6c4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941207d5 +0  91050000
[2a70a16f35f792c] jit-backend-dump}
[2a70a16f35fa7e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941207ec +0  96050000
[2a70a16f35fb4a1] jit-backend-dump}
[2a70a16f35fe328] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412080c +0  92050000
[2a70a16f35fefe2] jit-backend-dump}
[2a70a16f3601e7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120816 +0  A4050000
[2a70a16f3602b19] jit-backend-dump}
[2a70a16f3605991] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120820 +0  B6050000
[2a70a16f360662c] jit-backend-dump}
[2a70a16f360950f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120841 +0  B1050000
[2a70a16f360a1b3] jit-backend-dump}
[2a70a16f360d05c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120855 +0  B9050000
[2a70a16f360dcf7] jit-backend-dump}
[2a70a16f3610b6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412086c +0  BE050000
[2a70a16f361181f] jit-backend-dump}
[2a70a16f3614773] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120878 +0  CE050000
[2a70a16f3615470] jit-backend-dump}
[2a70a16f3618337] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120889 +0  D9050000
[2a70a16f3619022] jit-backend-dump}
[2a70a16f361bf67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120897 +0  E7050000
[2a70a16f361cc4b] jit-backend-dump}
[2a70a16f361facf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941208a1 +0  F9050000
[2a70a16f362076a] jit-backend-dump}
[2a70a16f36235f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941208bb +0  FB050000
[2a70a16f36242c3] jit-backend-dump}
[2a70a16f362717b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941208cf +0  03060000
[2a70a16f3627e72] jit-backend-dump}
[2a70a16f362aed6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941208d9 +0  15060000
[2a70a16f362bb87] jit-backend-dump}
[2a70a16f362e9f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941208fa +0  10060000
[2a70a16f362f68a] jit-backend-dump}
[2a70a16f363250b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412090e +0  18060000
[2a70a16f36331b9] jit-backend-dump}
[2a70a16f3636058] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120918 +0  2A060000
[2a70a16f3636d12] jit-backend-dump}
[2a70a16f3639bd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120935 +0  29060000
[2a70a16f363a8ae] jit-backend-dump}
[2a70a16f363d7aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120956 +0  24060000
[2a70a16f363e473] jit-backend-dump}
[2a70a16f364136e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120963 +0  33060000
[2a70a16f364200f] jit-backend-dump}
[2a70a16f3644e6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120970 +0  42060000
[2a70a16f3645b31] jit-backend-dump}
[2a70a16f36489e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120984 +0  4A060000
[2a70a16f36496da] jit-backend-dump}
[2a70a16f364c5cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120999 +0  51060000
[2a70a16f364d28c] jit-backend-dump}
[2a70a16f36500bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941209aa +0  5C060000
[2a70a16f3650db4] jit-backend-dump}
[2a70a16f3653c2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941209c1 +0  61060000
[2a70a16f36548f2] jit-backend-dump}
[2a70a16f36577b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941209d6 +0  68060000
[2a70a16f365847c] jit-backend-dump}
[2a70a16f365b2f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941209f1 +0  69060000
[2a70a16f365bf9b] jit-backend-dump}
[2a70a16f365ee00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941209fe +0  78060000
[2a70a16f365fa9b] jit-backend-dump}
[2a70a16f366291f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120a0b +0  87060000
[2a70a16f36635dc] jit-backend-dump}
[2a70a16f3666576] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120a21 +0  8D060000
[2a70a16f3667239] jit-backend-dump}
[2a70a16f366a138] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120a2b +0  9F060000
[2a70a16f366ae0d] jit-backend-dump}
[2a70a16f366dca6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120a58 +0  8E060000
[2a70a16f366e960] jit-backend-dump}
[2a70a16f36717b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120a62 +0  A0060000
[2a70a16f3672473] jit-backend-dump}
[2a70a16f36752c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120a78 +0  A6060000
[2a70a16f3675f70] jit-backend-dump}
[2a70a16f3678da8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120a89 +0  B1060000
[2a70a16f3679a4f] jit-backend-dump}
[2a70a16f367c8d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120a93 +0  C3060000
[2a70a16f367d583] jit-backend-dump}
[2a70a16f36803fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120aa2 +0  D0060000
[2a70a16f36810b5] jit-backend-dump}
[2a70a16f3683f5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120ab3 +0  DB060000
[2a70a16f3684c0b] jit-backend-dump}
[2a70a16f3687a30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120abd +0  ED060000
[2a70a16f36886ce] jit-backend-dump}
[2a70a16f368b53a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120ad3 +0  F3060000
[2a70a16f368c209] jit-backend-dump}
[2a70a16f368f053] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b05 +0  DD060000
[2a70a16f368fcdb] jit-backend-dump}
[2a70a16f3692b81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b1f +0  DF060000
[2a70a16f3693825] jit-backend-dump}
[2a70a16f36966e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b29 +0  F1060000
[2a70a16f369738b] jit-backend-dump}
[2a70a16f369a218] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b38 +0  FE060000
[2a70a16f369aec8] jit-backend-dump}
[2a70a16f369dd93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b46 +0  0C070000
[2a70a16f369ea74] jit-backend-dump}
[2a70a16f36a1966] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b50 +0  1E070000
[2a70a16f36a2620] jit-backend-dump}
[2a70a16f36a548e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b5f +0  2B070000
[2a70a16f36a613f] jit-backend-dump}
[2a70a16f36a8fe8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b6d +0  39070000
[2a70a16f36a9c9e] jit-backend-dump}
[2a70a16f36acb5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b77 +0  4B070000
[2a70a16f36ad844] jit-backend-dump}
[2a70a16f36b0745] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94120b86 +0  58070000
[2a70a16f36b1417] jit-backend-dump}
[2a70a16f36b4d8d] jit-backend}
[2a70a16f36b8a0c] {jit-log-opt-loop
# Loop 13 ((let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) from (void)) : entry bridge with 258 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) from (void)')
+741: guard_class(p0, 16503888, descr=<Guard0x41829e0>) [p1, p0]
+760: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+764: guard_class(p3, 16505296, descr=<Guard0x417fcd0>) [p1, p0]
+776: guard_class(p1, 16435208, descr=<Guard0x417fd18>) [p1, p0]
+795: p6 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+799: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x4182a40>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref *a* i)')
+817: guard_not_invalidated(descr=<Guard0x417fd60>) [p1, p0]
+817: i8 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+821: i10 = int_ge(i8, 0)
+825: guard_true(i10, descr=<Guard0x417fda8>) [p1, p0]
+831: i12 = int_lt(i8, 37)
+835: guard_true(i12, descr=<Guard0x417fdf0>) [p1, p0]
+848: p14 = getfield_gc_r(ConstPtr(ptr13), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+852: guard_class(p14, 16623792, descr=<Guard0x417fe38>) [p1, p0]
+864: p17 = getfield_gc_r(ConstPtr(ptr16), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+868: i18 = getarrayitem_gc_i(p17, i8, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand12 1)')
+880: p20 = getfield_gc_r(ConstPtr(ptr19), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+884: guard_class(p20, 16623792, descr=<Guard0x417fe80>) [p1, p0]
+896: i23 = int_ge(i18, 0)
+900: guard_true(i23, descr=<Guard0x417fec8>) [p1, p0]
+906: i25 = int_lt(i18, 16)
+910: guard_true(i25, descr=<Guard0x417ff10>) [p1, p0]
+916: p27 = getfield_gc_r(ConstPtr(ptr26), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+920: setarrayitem_gc(p27, i18, 1, descr=<ArrayS 8>)
+929: p29 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+940: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x4182aa0>) [p29, p1]
+949: p31 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+953: p32 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+957: guard_class(p32, 16435208, descr=<Guard0x417ff58>) [p29, p1]
+969: p34 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+973: guard_nonnull_class(p34, ConstClass(ForwardLink), descr=<Guard0x4182b00>) [p29, p1]
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1))')
+992: guard_class(p31, 16503888, descr=<Guard0x417ffa0>) [p29, p1]
+1004: p37 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1008: guard_class(p37, 16505296, descr=<Guard0x45ae020>) [p29, p1]
debug_merge_point(0, 0, '(vector-ref *b* i)')
+1021: i39 = getfield_gc_i(p31, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1025: i41 = int_ge(i39, 0)
+1029: guard_true(i41, descr=<Guard0x45ae068>) [p29, p1]
+1035: i43 = int_lt(i39, 37)
+1039: guard_true(i43, descr=<Guard0x45ae0b0>) [p29, p1]
+1052: p45 = getfield_gc_r(ConstPtr(ptr44), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1057: guard_class(p45, 16623792, descr=<Guard0x45ae0f8>) [p29, p1]
+1071: p48 = getfield_gc_r(ConstPtr(ptr47), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1076: i49 = getarrayitem_gc_i(p48, i39, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand13 1)')
+1081: i51 = int_ge(i49, 0)
+1085: guard_true(i51, descr=<Guard0x45ae140>) [p29, p1]
+1091: i53 = int_lt(i49, 16)
+1095: guard_true(i53, descr=<Guard0x45ae188>) [p29, p1]
+1101: setarrayitem_gc(p27, i49, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+1117: p56 = getfield_gc_r(ConstPtr(ptr55), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1122: guard_class(p56, 16623792, descr=<Guard0x4182b60>) [i39, p56, p31, p32, p37, p34]
+1134: p59 = getfield_gc_r(ConstPtr(ptr58), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1139: i60 = getarrayitem_gc_i(p59, i39, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand14 0)')
+1144: i62 = int_ge(i60, 0)
+1148: guard_true(i62, descr=<Guard0x45ae1d0>) [i39, p56, p31, p32, p37, p34]
+1154: i64 = int_lt(i60, 16)
+1158: guard_true(i64, descr=<Guard0x45ae218>) [i39, p56, p31, p32, p37, p34]
+1164: setarrayitem_gc(p27, i60, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '#f')
+1173: p66 = getfield_gc_r(p32, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1184: guard_value(p66, ConstPtr(ptr67), descr=<Guard0x4182bc0>) [p66, p32, None, None, None]
+1193: p69 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1193: p70 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(car *answer*)')
+1204: p72 = getfield_gc_r(ConstPtr(ptr71), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1208: guard_nonnull_class(p72, 16470384, descr=<Guard0x4182c20>) [p66, p32, None, None, None]
+1226: p74 = getfield_gc_r(p72, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1230: guard_nonnull(p74, descr=<Guard0x45ae260>) [p66, p32, None, None, None]
+1239: guard_class(p70, 16435208, descr=<Guard0x45ae2a8>) [p66, p32, None, None, None]
+1252: p76 = getfield_gc_r(p70, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1263: guard_value(p76, ConstPtr(ptr77), descr=<Guard0x45ae2f0>) [p66, p32, None, None, None]
+1272: p78 = getfield_gc_r(p70, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1276: p79 = getfield_gc_r(p70, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4875 (add1 i4877)) from (car *answer*)')
+1280: guard_class(p78, 16504944, descr=<Guard0x45ae338>) [p66, p32, None, None, None]
+1293: p81 = getfield_gc_r(p78, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1297: guard_class(p81, 16499664, descr=<Guard0x45ae380>) [p66, p32, None, None, None]
+1310: p83 = getfield_gc_r(p81, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1314: guard_nonnull_class(p83, 16510992, descr=<Guard0x4182c80>) [p66, p32, None, None, None]
+1333: i85 = getfield_gc_i(p78, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1344: i87 = int_add_ovf(i85, 1)
+1348: guard_no_overflow(descr=<Guard0x45ae3c8>) [p66, p32, None, None, None]
+1354: p88 = getfield_gc_r(p83, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+1372: guard_value(p88, ConstPtr(ptr89), descr=<Guard0x45ae410>) [p66, p32, None, None, None]
+1381: p90 = getfield_gc_r(p83, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+1385: i91 = instance_ptr_eq(p81, p90)
+1388: guard_true(i91, descr=<Guard0x45ae458>) [p66, p32, None, None, None]
debug_merge_point(0, 0, '(let ([if6 (> i4877 triangl-iters)]) (if if6 (begin (void) (void)) (begin (test 22 1) (doloop4875 (add1 i4877))))) from (doloop4875 (add1 i4877))')
+1394: guard_class(p79, 16528368, descr=<Guard0x45ae4a0>) [p66, p32, None, None, None]
+1407: p93 = getfield_gc_r(p79, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1411: guard_nonnull_class(p93, ConstClass(ForwardLink), descr=<Guard0x4182ce0>) [p66, p32, None, None, None]
debug_merge_point(0, 0, '(> i4877 triangl-iters)')
+1429: i96 = int_gt(i87, 100)
+1433: guard_false(i96, descr=<Guard0x45ae4e8>) [p66, p32, None, None, None]
debug_merge_point(0, 0, '(if if6 (begin (void) (void)) (begin (test 22 1) (doloop4875 (add1 i4877))))')
debug_merge_point(0, 0, '(begin (test 22 1) (doloop4875 (add1 i4877)))')
debug_merge_point(0, 0, '(test 22 1)')
+1439: p97 = getfield_gc_r(p81, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(set! *answer* '())')
debug_merge_point(0, 0, '(attempt i4860 depth4862)')
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+1439: i99 = getarrayitem_gc_i(p17, 22, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+1470: setfield_gc(ConstPtr(ptr100), ConstPtr(ptr101), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1474: i103 = int_ge(i99, 0)
+1478: guard_true(i103, descr=<Guard0x4182d40>) [i99, i87, p81, p79, p93, None, None, None]
+1484: i105 = int_lt(i99, 16)
+1488: guard_true(i105, descr=<Guard0x45ae530>) [i99, i87, p81, p79, p93, None, None, None]
+1494: i106 = getarrayitem_gc_i(p27, i99, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+1506: i108 = int_eq(1, i106)
+1510: guard_true(i108, descr=<Guard0x45ae578>) [i99, i87, p81, p79, p93, None, None, None]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+1516: i110 = getarrayitem_gc_i(p48, 22, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+1523: i112 = int_ge(i110, 0)
+1527: guard_true(i112, descr=<Guard0x45ae5c0>) [i99, i87, p81, p79, p93, None, None, None]
+1533: i114 = int_lt(i110, 16)
+1537: guard_true(i114, descr=<Guard0x45ae608>) [i99, i87, p81, p79, p93, None, None, None]
+1543: i115 = getarrayitem_gc_i(p27, i110, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+1548: i117 = int_eq(1, i115)
+1552: guard_true(i117, descr=<Guard0x45ae650>) [i99, i87, p81, p79, p93, None, None, None]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '(let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6)))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+1558: i119 = getarrayitem_gc_i(p59, 22, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand5)')
+1565: i121 = int_ge(i119, 0)
+1569: guard_true(i121, descr=<Guard0x45ae698>) [i99, i87, p81, p79, p93, None, None, None]
+1575: i123 = int_lt(i119, 16)
+1579: guard_true(i123, descr=<Guard0x45ae6e0>) [i99, i87, p81, p79, p93, None, None, None]
+1585: i124 = getarrayitem_gc_i(p27, i119, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(= 0 AppRand6)')
+1597: i126 = int_eq(0, i124)
+1601: guard_true(i126, descr=<Guard0x45ae728>) [i99, i87, p81, p79, p93, None, None, None]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f)')
debug_merge_point(0, 0, '(vector-ref *a* i)')
debug_merge_point(0, 0, '(vector-set! *board* AppRand7 0)')
+1607: setarrayitem_gc(p27, i99, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
debug_merge_point(0, 0, '(vector-set! *board* AppRand8 0)')
+1616: setarrayitem_gc(p27, i110, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
debug_merge_point(0, 0, '(vector-set! *board* AppRand9 1)')
+1625: setarrayitem_gc(p27, i119, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *sequence* depth i)')
+1641: p131 = getfield_gc_r(ConstPtr(ptr130), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1645: guard_class(p131, 16623792, descr=<Guard0x4182da0>) [p131, i87, p81, p79, p93, None, None, None]
+1657: p134 = getfield_gc_r(ConstPtr(ptr133), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11))')
debug_merge_point(0, 0, '(lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))')
debug_merge_point(0, 0, '(+ depth 1)')
debug_merge_point(0, 0, '(doloop 0 AppRand11)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop 0 AppRand11)')
debug_merge_point(0, 0, '(= j 36)')
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+1661: i136 = getarrayitem_gc_i(p17, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+1665: setarrayitem_gc(p134, 1, 22, descr=<ArrayS 8>)
+1673: i140 = int_ge(i136, 0)
+1677: guard_true(i140, descr=<Guard0x4182e00>) [i136, i87, p81, p79, p93, None, None, None]
+1683: i142 = int_lt(i136, 16)
+1687: guard_true(i142, descr=<Guard0x45ae770>) [i136, i87, p81, p79, p93, None, None, None]
+1693: i143 = getarrayitem_gc_i(p27, i136, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+1698: i145 = int_eq(1, i143)
+1702: guard_true(i145, descr=<Guard0x45ae7b8>) [i136, i87, p81, p79, p93, None, None, None]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+1708: i146 = getarrayitem_gc_i(p48, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+1712: i148 = int_ge(i146, 0)
+1716: guard_true(i148, descr=<Guard0x45ae800>) [i136, i87, p81, p79, p93, None, None, None]
+1722: i150 = int_lt(i146, 16)
+1726: guard_true(i150, descr=<Guard0x45ae848>) [i136, i87, p81, p79, p93, None, None, None]
+1732: i151 = getarrayitem_gc_i(p27, i146, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+1737: i153 = int_eq(1, i151)
+1741: guard_true(i153, descr=<Guard0x45ae890>) [i136, i87, p81, p79, p93, None, None, None]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '(let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6)))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+1747: i154 = getarrayitem_gc_i(p59, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand5)')
+1751: i156 = int_ge(i154, 0)
+1755: guard_true(i156, descr=<Guard0x45ae8d8>) [i136, i87, p81, p79, p93, None, None, None]
+1761: i158 = int_lt(i154, 16)
+1765: guard_true(i158, descr=<Guard0x45ae920>) [i136, i87, p81, p79, p93, None, None, None]
+1771: i159 = getarrayitem_gc_i(p27, i154, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(= 0 AppRand6)')
+1776: i161 = int_eq(0, i159)
+1780: guard_false(i161, descr=<Guard0x45ae968>) [i136, i87, p81, p79, p93, None, None, None]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 0 AppRand6)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+1786: p162 = new_with_vtable(descr=<SizeDescr 40>)
+1830: p163 = new_with_vtable(descr=<SizeDescr 40>)
+1841: setfield_gc(p163, p93, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1859: setfield_gc(p163, ConstPtr(ptr164), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1863: p165 = new_with_vtable(descr=<SizeDescr 40>)
+1874: setfield_gc(p165, p93, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1878: p166 = new_with_vtable(descr=<SizeDescr 24>)
+1890: setfield_gc(p166, p81, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1894: setfield_gc(p166, i87, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1898: setfield_gc(p165, p166, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1902: setfield_gc(p165, p79, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1906: setfield_gc(p165, ConstPtr(ptr167), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1910: setfield_gc(p163, p165, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1914: setfield_gc(p163, ConstPtr(ptr168), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1918: i169 = arraylen_gc(p17, descr=<ArrayS 8>)
+1918: i170 = arraylen_gc(p27, descr=<ArrayS 8>)
+1918: setfield_gc(p162, p93, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1929: setfield_gc(p162, ConstPtr(ptr171), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1940: setfield_gc(p162, ConstPtr(ptr172), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1944: setfield_gc(p162, p163, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1962: jump(ConstPtr(ptr173), 1, 2, p162, p93, p17, p27, ConstPtr(ptr176), descr=TargetToken(67757824))
+2032: --end of the loop--
[2a70a16f377dc8e] jit-log-opt-loop}
[2a70a17d5fbe0d2] {jit-backend
[2a70a17d60d4fae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b
[2a70a17d60e4592] jit-backend-dump}
[2a70a17d60fef27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941218a4 +0  21000000
[2a70a17d6100438] jit-backend-dump}
[2a70a17d61045b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121d95 +0  21000000
[2a70a17d61054b1] jit-backend-dump}
[2a70a17d61087b3] {jit-backend-addr
bridge out of Guard 0x41712b0 has address 0x7f6b941218a0 to 0x7f6b94121d90
       gc table: 0x7f6b94121680
    jump target: 0x7f6b941218a0
         resops: 0x7f6b941218ae
       failures: 0x7f6b94121d90
            end: 0x7f6b941223b3
[2a70a17d610af0f] jit-backend-addr}
[2a70a17d610e725] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941218bc +0  43050000
[2a70a17d610f5cb] jit-backend-dump}
[2a70a17d61127ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941218d3 +0  48050000
[2a70a17d611351f] jit-backend-dump}
[2a70a17d6116613] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941218e7 +0  50050000
[2a70a17d61172e5] jit-backend-dump}
[2a70a17d611a3c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941218fd +0  56050000
[2a70a17d611b0c7] jit-backend-dump}
[2a70a17d611e2bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121915 +0  5A050000
[2a70a17d611efaf] jit-backend-dump}
[2a70a17d6122085] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121922 +0  69050000
[2a70a17d6122df0] jit-backend-dump}
[2a70a17d6125f0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121933 +0  74050000
[2a70a17d6126c0f] jit-backend-dump}
[2a70a17d6129cb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121941 +0  82050000
[2a70a17d612a9e1] jit-backend-dump}
[2a70a17d612db46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412194b +0  94050000
[2a70a17d612e849] jit-backend-dump}
[2a70a17d613193a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121962 +0  99050000
[2a70a17d6132674] jit-backend-dump}
[2a70a17d6135924] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121982 +0  95050000
[2a70a17d6136618] jit-backend-dump}
[2a70a17d6139730] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412198c +0  A7050000
[2a70a17d613a4b1] jit-backend-dump}
[2a70a17d613d659] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121996 +0  B9050000
[2a70a17d613e359] jit-backend-dump}
[2a70a17d61413a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941219ba +0  B1050000
[2a70a17d61420cd] jit-backend-dump}
[2a70a17d61451bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941219cd +0  BA050000
[2a70a17d6145e90] jit-backend-dump}
[2a70a17d6148e8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941219d7 +0  CC050000
[2a70a17d6149bc3] jit-backend-dump}
[2a70a17d614ccf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941219f7 +0  C8050000
[2a70a17d614d9e5] jit-backend-dump}
[2a70a17d6150a86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121a0a +0  D1050000
[2a70a17d615182f] jit-backend-dump}
[2a70a17d61549a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121a14 +0  E3050000
[2a70a17d61556c2] jit-backend-dump}
[2a70a17d61587c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121a32 +0  E1050000
[2a70a17d61594fc] jit-backend-dump}
[2a70a17d615c6ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121a54 +0  DB050000
[2a70a17d615d3e2] jit-backend-dump}
[2a70a17d616049f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121a61 +0  EA050000
[2a70a17d6161192] jit-backend-dump}
[2a70a17d61642d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121a6e +0  F9050000
[2a70a17d6164fcd] jit-backend-dump}
[2a70a17d6167fee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121a82 +0  01060000
[2a70a17d6168cf4] jit-backend-dump}
[2a70a17d616be47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121a96 +0  09060000
[2a70a17d616cb68] jit-backend-dump}
[2a70a17d616fbb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121aa7 +0  14060000
[2a70a17d61708b4] jit-backend-dump}
[2a70a17d6173a16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121ac4 +0  13060000
[2a70a17d617472f] jit-backend-dump}
[2a70a17d61777fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121ad9 +0  1A060000
[2a70a17d6178557] jit-backend-dump}
[2a70a17d617b654] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121af4 +0  1B060000
[2a70a17d617c329] jit-backend-dump}
[2a70a17d617f375] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121b01 +0  2A060000
[2a70a17d61800a3] jit-backend-dump}
[2a70a17d61831b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121b0d +0  3A060000
[2a70a17d6183e84] jit-backend-dump}
[2a70a17d6186edc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121b25 +0  3E060000
[2a70a17d6187c10] jit-backend-dump}
[2a70a17d618ada0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121b2f +0  50060000
[2a70a17d618babf] jit-backend-dump}
[2a70a17d618eb11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121b5e +0  3D060000
[2a70a17d618f842] jit-backend-dump}
[2a70a17d61929d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121b68 +0  4F060000
[2a70a17d61936e4] jit-backend-dump}
[2a70a17d6196767] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121b7e +0  55060000
[2a70a17d6197498] jit-backend-dump}
[2a70a17d619a6a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121b8f +0  60060000
[2a70a17d619b3cd] jit-backend-dump}
[2a70a17d619e4ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121b99 +0  72060000
[2a70a17d619f1b2] jit-backend-dump}
[2a70a17d61a231a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121ba8 +0  7F060000
[2a70a17d61a300b] jit-backend-dump}
[2a70a17d61a63d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121bb9 +0  8A060000
[2a70a17d61a70f5] jit-backend-dump}
[2a70a17d61aa3b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121bc3 +0  9C060000
[2a70a17d61ab0d0] jit-backend-dump}
[2a70a17d61ae256] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121bd9 +0  A2060000
[2a70a17d61aef6c] jit-backend-dump}
[2a70a17d61b208b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c0c +0  8B060000
[2a70a17d61b2d60] jit-backend-dump}
[2a70a17d61b5e29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c27 +0  8C060000
[2a70a17d61b6b82] jit-backend-dump}
[2a70a17d61b9e6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c31 +0  9E060000
[2a70a17d61bab87] jit-backend-dump}
[2a70a17d61bdc41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c40 +0  AB060000
[2a70a17d61be9a9] jit-backend-dump}
[2a70a17d61c1b6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c4e +0  B9060000
[2a70a17d61c286d] jit-backend-dump}
[2a70a17d61c58f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c58 +0  CB060000
[2a70a17d61c6611] jit-backend-dump}
[2a70a17d61c973f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c67 +0  D8060000
[2a70a17d61ca470] jit-backend-dump}
[2a70a17d61cd5fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c75 +0  E6060000
[2a70a17d61ce303] jit-backend-dump}
[2a70a17d61d13c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c7f +0  F8060000
[2a70a17d61d20b7] jit-backend-dump}
[2a70a17d61d50aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94121c8e +0  05070000
[2a70a17d61d5da1] jit-backend-dump}
[2a70a17d61d924f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411d023 +0  79480000
[2a70a17d61da072] jit-backend-dump}
[2a70a17d61de8da] jit-backend}
[2a70a17d61e25b8] {jit-log-opt-bridge
# bridge out of Guard 0x41712b0 with 259 ops
[i0, i1, p2, p3, p4]
+566: guard_not_invalidated(descr=<Guard0x4182ec0>) [i0, i1, p2, p3, p4]
+566: i6 = int_eq(i1, 36)
+570: guard_true(i6, descr=<Guard0x45aea88>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
+576: p7 = getfield_gc_r(p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+580: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x4182f20>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= j 36)')
debug_merge_point(0, 0, '(begin (void) #f)')
+599: p9 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '#f')
+599: p10 = getfield_gc_r(p3, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+610: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x45aead0>) [i0, i1, p2, p3, p4]
+619: p12 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+623: p13 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+627: guard_class(p13, 16435208, descr=<Guard0x45aeb18>) [i0, i1, p2, p3, p4]
+641: p15 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+646: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x4182f80>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) from (void)')
+665: guard_class(p12, 16503888, descr=<Guard0x45aeb60>) [i0, i1, p2, p3, p4]
+678: p18 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+682: guard_class(p18, 16505296, descr=<Guard0x45aeba8>) [i0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(vector-ref *a* i)')
+695: i20 = getfield_gc_i(p12, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+699: i22 = int_ge(i20, 0)
+703: guard_true(i22, descr=<Guard0x45aebf0>) [i0, i1, p2, p3, p4]
+709: i24 = int_lt(i20, 37)
+713: guard_true(i24, descr=<Guard0x45aec38>) [i0, i1, p2, p3, p4]
+726: p26 = getfield_gc_r(ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+730: guard_class(p26, 16623792, descr=<Guard0x45aec80>) [i0, i1, p2, p3, p4]
+742: p29 = getfield_gc_r(ConstPtr(ptr28), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+746: i30 = getarrayitem_gc_i(p29, i20, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand12 1)')
+758: p32 = getfield_gc_r(ConstPtr(ptr31), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+762: guard_class(p32, 16623792, descr=<Guard0x45aecc8>) [i0, i1, p2, p3, p4]
+774: i35 = int_ge(i30, 0)
+778: guard_true(i35, descr=<Guard0x45aed10>) [i0, i1, p2, p3, p4]
+784: i37 = int_lt(i30, 16)
+788: guard_true(i37, descr=<Guard0x45aed58>) [i0, i1, p2, p3, p4]
+794: p39 = getfield_gc_r(ConstPtr(ptr38), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+798: setarrayitem_gc(p39, i30, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+814: p42 = getfield_gc_r(ConstPtr(ptr41), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+818: guard_class(p42, 16623792, descr=<Guard0x4182fe0>) [i20, p42, p12, p13, p18, p15, None, None, None, None, None]
+830: p46 = getfield_gc_r(ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+834: i47 = getarrayitem_gc_i(p46, i20, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand13 1)')
+839: i49 = int_ge(i47, 0)
+843: guard_true(i49, descr=<Guard0x45aeda0>) [i20, p42, p12, p13, p18, p15, None, None, None, None, None]
+849: i51 = int_lt(i47, 16)
+853: guard_true(i51, descr=<Guard0x45aede8>) [i20, p42, p12, p13, p18, p15, None, None, None, None, None]
+859: setarrayitem_gc(p39, i47, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+875: p54 = getfield_gc_r(ConstPtr(ptr53), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+879: guard_class(p54, 16623792, descr=<Guard0x4183040>) [i20, p54, p12, p13, p18, p15, None, None, None, None, None]
+891: p57 = getfield_gc_r(ConstPtr(ptr56), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+895: i58 = getarrayitem_gc_i(p57, i20, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand14 0)')
+900: i60 = int_ge(i58, 0)
+904: guard_true(i60, descr=<Guard0x45aee30>) [i20, p54, p12, p13, p18, p15, None, None, None, None, None]
+910: i62 = int_lt(i58, 16)
+914: guard_true(i62, descr=<Guard0x45aee78>) [i20, p54, p12, p13, p18, p15, None, None, None, None, None]
+920: setarrayitem_gc(p39, i58, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '#f')
+929: p64 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+941: guard_value(p64, ConstPtr(ptr65), descr=<Guard0x41830a0>) [p64, p13, None, None, None, None, None, None, None, None]
+950: p66 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+950: p67 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(car *answer*)')
+962: p69 = getfield_gc_r(ConstPtr(ptr68), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+966: guard_nonnull_class(p69, 16470384, descr=<Guard0x4183100>) [p64, p13, None, None, None, None, None, None, None, None]
+984: p71 = getfield_gc_r(p69, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+988: guard_nonnull(p71, descr=<Guard0x45aeec0>) [p64, p13, None, None, None, None, None, None, None, None]
+997: guard_class(p67, 16435208, descr=<Guard0x45aef08>) [p64, p13, None, None, None, None, None, None, None, None]
+1010: p73 = getfield_gc_r(p67, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1021: guard_value(p73, ConstPtr(ptr74), descr=<Guard0x45aef50>) [p64, p13, None, None, None, None, None, None, None, None]
+1030: p75 = getfield_gc_r(p67, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1034: p76 = getfield_gc_r(p67, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4875 (add1 i4877)) from (car *answer*)')
+1038: guard_class(p75, 16504944, descr=<Guard0x45aef98>) [p64, p13, None, None, None, None, None, None, None, None]
+1050: p78 = getfield_gc_r(p75, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1054: guard_class(p78, 16499664, descr=<Guard0x45aefe0>) [p64, p13, None, None, None, None, None, None, None, None]
+1067: p80 = getfield_gc_r(p78, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1078: guard_nonnull_class(p80, 16510992, descr=<Guard0x4183160>) [p64, p13, None, None, None, None, None, None, None, None]
+1096: i82 = getfield_gc_i(p75, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1107: i84 = int_add_ovf(i82, 1)
+1111: guard_no_overflow(descr=<Guard0x45af028>) [p64, p13, None, None, None, None, None, None, None, None]
+1117: p85 = getfield_gc_r(p80, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+1135: guard_value(p85, ConstPtr(ptr86), descr=<Guard0x45af070>) [p64, p13, None, None, None, None, None, None, None, None]
+1144: p87 = getfield_gc_r(p80, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+1148: i88 = instance_ptr_eq(p78, p87)
+1151: guard_true(i88, descr=<Guard0x45af0b8>) [p64, p13, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if6 (> i4877 triangl-iters)]) (if if6 (begin (void) (void)) (begin (test 22 1) (doloop4875 (add1 i4877))))) from (doloop4875 (add1 i4877))')
+1157: guard_class(p76, 16528368, descr=<Guard0x45af100>) [p64, p13, None, None, None, None, None, None, None, None]
+1169: p90 = getfield_gc_r(p76, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1173: guard_nonnull_class(p90, ConstClass(ForwardLink), descr=<Guard0x41831c0>) [p64, p13, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(> i4877 triangl-iters)')
+1193: i93 = int_gt(i84, 100)
+1197: guard_false(i93, descr=<Guard0x45af148>) [p64, p13, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if6 (begin (void) (void)) (begin (test 22 1) (doloop4875 (add1 i4877))))')
debug_merge_point(0, 0, '(begin (test 22 1) (doloop4875 (add1 i4877)))')
debug_merge_point(0, 0, '(test 22 1)')
+1203: p94 = getfield_gc_r(p78, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(set! *answer* '())')
debug_merge_point(0, 0, '(attempt i4860 depth4862)')
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+1203: i96 = getarrayitem_gc_i(p29, 22, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+1236: setfield_gc(ConstPtr(ptr97), ConstPtr(ptr98), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1240: i100 = int_ge(i96, 0)
+1244: guard_true(i100, descr=<Guard0x4183220>) [i96, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1250: i102 = int_lt(i96, 16)
+1254: guard_true(i102, descr=<Guard0x45af190>) [i96, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1260: i103 = getarrayitem_gc_i(p39, i96, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+1272: i105 = int_eq(1, i103)
+1276: guard_true(i105, descr=<Guard0x45af1d8>) [i96, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+1282: i107 = getarrayitem_gc_i(p46, 22, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+1289: i109 = int_ge(i107, 0)
+1293: guard_true(i109, descr=<Guard0x45af220>) [i96, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1299: i111 = int_lt(i107, 16)
+1303: guard_true(i111, descr=<Guard0x45af268>) [i96, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1309: i112 = getarrayitem_gc_i(p39, i107, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+1314: i114 = int_eq(1, i112)
+1318: guard_true(i114, descr=<Guard0x45af2b0>) [i96, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '(let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6)))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+1324: i116 = getarrayitem_gc_i(p57, 22, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand5)')
+1331: i118 = int_ge(i116, 0)
+1335: guard_true(i118, descr=<Guard0x45af2f8>) [i96, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1341: i120 = int_lt(i116, 16)
+1345: guard_true(i120, descr=<Guard0x45af340>) [i96, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1351: i121 = getarrayitem_gc_i(p39, i116, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(= 0 AppRand6)')
+1363: i123 = int_eq(0, i121)
+1367: guard_true(i123, descr=<Guard0x45af388>) [i96, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '(let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f)')
debug_merge_point(0, 0, '(vector-ref *a* i)')
debug_merge_point(0, 0, '(vector-set! *board* AppRand7 0)')
+1373: setarrayitem_gc(p39, i96, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
debug_merge_point(0, 0, '(vector-set! *board* AppRand8 0)')
+1382: setarrayitem_gc(p39, i107, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
debug_merge_point(0, 0, '(vector-set! *board* AppRand9 1)')
+1391: setarrayitem_gc(p39, i116, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *sequence* depth i)')
+1407: p128 = getfield_gc_r(ConstPtr(ptr127), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1411: guard_class(p128, 16623792, descr=<Guard0x4183280>) [p128, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1424: p131 = getfield_gc_r(ConstPtr(ptr130), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11))')
debug_merge_point(0, 0, '(lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))')
debug_merge_point(0, 0, '(+ depth 1)')
debug_merge_point(0, 0, '(doloop 0 AppRand11)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop 0 AppRand11)')
debug_merge_point(0, 0, '(= j 36)')
debug_merge_point(0, 0, '(let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))')
debug_merge_point(0, 0, '(if or-part or-part (attempt j depth4844))')
debug_merge_point(0, 0, '(attempt j depth4844)')
debug_merge_point(0, 0, '(let ([if0 (= depth 14)]) (if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))))')
debug_merge_point(0, 0, '(= depth 14)')
debug_merge_point(0, 0, '(if if0 (let ([AppRand0 (vector->list *sequence*)]) (set! *answer* (cons (cdr AppRand0) *answer*)) #t) (let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref *a* i)]) (let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))))')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+1428: i133 = getarrayitem_gc_i(p29, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref *board* AppRand1)]) (let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand1)')
+1433: setarrayitem_gc(p131, 1, 22, descr=<ArrayS 8>)
+1441: i137 = int_ge(i133, 0)
+1445: guard_true(i137, descr=<Guard0x41832e0>) [i133, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1451: i139 = int_lt(i133, 16)
+1455: guard_true(i139, descr=<Guard0x45af3d0>) [i133, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1461: i140 = getarrayitem_gc_i(p39, i133, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if1 (= 1 AppRand2)]) (let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)))')
debug_merge_point(0, 0, '(= 1 AppRand2)')
+1466: i142 = int_eq(1, i140)
+1470: guard_true(i142, descr=<Guard0x45af418>) [i133, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if3 (if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)]) (if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref *b* i)]) (let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+1476: i143 = getarrayitem_gc_i(p46, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref *board* AppRand3)]) (let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand3)')
+1480: i145 = int_ge(i143, 0)
+1484: guard_true(i145, descr=<Guard0x45af460>) [i133, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1490: i147 = int_lt(i143, 16)
+1494: guard_true(i147, descr=<Guard0x45af4a8>) [i133, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1500: i148 = getarrayitem_gc_i(p39, i143, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([if2 (= 1 AppRand4)]) (if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f))')
debug_merge_point(0, 0, '(= 1 AppRand4)')
+1505: i150 = int_eq(1, i148)
+1509: guard_true(i150, descr=<Guard0x45af4f0>) [i133, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if2 (let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))) #f)')
debug_merge_point(0, 0, '(let ([AppRand5 (vector-ref *c* i)]) (let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6)))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+1515: i151 = getarrayitem_gc_i(p57, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand6 (vector-ref *board* AppRand5)]) (= 0 AppRand6))')
debug_merge_point(0, 0, '(vector-ref *board* AppRand5)')
+1519: i153 = int_ge(i151, 0)
+1523: guard_true(i153, descr=<Guard0x45af538>) [i133, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1529: i155 = int_lt(i151, 16)
+1533: guard_true(i155, descr=<Guard0x45af580>) [i133, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
+1539: i156 = getarrayitem_gc_i(p39, i151, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(= 0 AppRand6)')
+1544: i158 = int_eq(0, i156)
+1548: guard_false(i158, descr=<Guard0x45af5c8>) [i133, i84, p78, p76, p90, None, None, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (let ([AppRand7 (vector-ref *a* i)]) (vector-set! *board* AppRand7 0) (let ([AppRand8 (vector-ref *b* i)]) (vector-set! *board* AppRand8 0)) (let ([AppRand9 (vector-ref *c* i)]) (vector-set! *board* AppRand9 1)) (vector-set! *sequence* depth i) (let ([doloop (lambda (j depth4844) (let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))))][AppRand11 (+ depth 1)]) (doloop 0 AppRand11)) (let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) (let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1)) (let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0)) #f) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (= 0 AppRand6)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
debug_merge_point(0, 0, '(+ j 1)')
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+1554: p159 = new_with_vtable(descr=<SizeDescr 40>)
+1604: p160 = new_with_vtable(descr=<SizeDescr 40>)
+1615: setfield_gc(p160, p90, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1633: setfield_gc(p160, ConstPtr(ptr161), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1637: p162 = new_with_vtable(descr=<SizeDescr 40>)
+1648: setfield_gc(p162, p90, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1652: p163 = new_with_vtable(descr=<SizeDescr 24>)
+1663: setfield_gc(p163, p78, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1667: setfield_gc(p163, i84, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1671: setfield_gc(p162, p163, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1675: setfield_gc(p162, p76, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1679: setfield_gc(p162, ConstPtr(ptr164), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1683: setfield_gc(p160, p162, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1687: setfield_gc(p160, ConstPtr(ptr165), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1691: i166 = arraylen_gc(p29, descr=<ArrayS 8>)
+1691: i167 = arraylen_gc(p39, descr=<ArrayS 8>)
+1691: setfield_gc(p159, p90, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1695: setfield_gc(p159, ConstPtr(ptr168), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1713: setfield_gc(p159, ConstPtr(ptr169), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1717: setfield_gc(p159, p160, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1735: jump(ConstPtr(ptr170), 1, 2, p159, p90, p29, p39, ConstPtr(ptr173), descr=TargetToken(67757824))
+1808: --end of the loop--
[2a70a17d62ba930] jit-log-opt-bridge}
[2a70a17d7a2ba73] {jit-backend
[2a70a17d7aa44d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b
[2a70a17d7aacf96] jit-backend-dump}
[2a70a17d7ab806d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94122624 +0  21000000
[2a70a17d7ab96af] jit-backend-dump}
[2a70a17d7abd77b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94122865 +0  21000000
[2a70a17d7abe7d4] jit-backend-dump}
[2a70a17d7ac1b22] {jit-backend-addr
bridge out of Guard 0x41825c0 has address 0x7f6b94122620 to 0x7f6b94122860
       gc table: 0x7f6b94122540
    jump target: 0x7f6b94122620
         resops: 0x7f6b9412262e
       failures: 0x7f6b94122860
            end: 0x7f6b94122b1f
[2a70a17d7ac3fbf] jit-backend-addr}
[2a70a17d7ac751e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412263e +0  75020000
[2a70a17d7ac841a] jit-backend-dump}
[2a70a17d7acb7ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94122655 +0  96020000
[2a70a17d7acc4cb] jit-backend-dump}
[2a70a17d7acf5da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94122674 +0  93020000
[2a70a17d7ad02d1] jit-backend-dump}
[2a70a17d7ad32fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412267e +0  A5020000
[2a70a17d7ad3fc1] jit-backend-dump}
[2a70a17d7ad7047] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94122688 +0  B7020000
[2a70a17d7ad7d47] jit-backend-dump}
[2a70a17d7adad2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941226a0 +0  BB020000
[2a70a17d7adba00] jit-backend-dump}
[2a70a17d7ade948] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941226c0 +0  B7020000
[2a70a17d7adf5e9] jit-backend-dump}
[2a70a17d7ae272c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941226ca +0  C9020000
[2a70a17d7ae33e3] jit-backend-dump}
[2a70a17d7ae6368] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941226d4 +0  DB020000
[2a70a17d7ae702e] jit-backend-dump}
[2a70a17d7ae9f91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941226f9 +0  D2020000
[2a70a17d7aeac69] jit-backend-dump}
[2a70a17d7aedc5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412270c +0  DB020000
[2a70a17d7aee90d] jit-backend-dump}
[2a70a17d7af18ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94122716 +0  ED020000
[2a70a17d7af2567] jit-backend-dump}
[2a70a17d7af5551] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94122737 +0  E8020000
[2a70a17d7af621d] jit-backend-dump}
[2a70a17d7af9216] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412274a +0  F1020000
[2a70a17d7af9ed6] jit-backend-dump}
[2a70a17d7afce98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94122754 +0  03030000
[2a70a17d7afdb5e] jit-backend-dump}
[2a70a17d7b00b07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412277b +0  F8020000
[2a70a17d7b017bb] jit-backend-dump}
[2a70a17d7b0478c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412279c +0  F3020000
[2a70a17d7b0543a] jit-backend-dump}
[2a70a17d7b083f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941227b0 +0  FB020000
[2a70a17d7b090af] jit-backend-dump}
[2a70a17d7b0f374] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b941227bd +0  0A030000
[2a70a17d7b10257] jit-backend-dump}
[2a70a17d7b13b7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9412280b +0  D8020000
[2a70a17d7b14852] jit-backend-dump}
[2a70a17d7b1795f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b94122819 +0  E6020000
[2a70a17d7b18696] jit-backend-dump}
[2a70a17d7b1ba50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6b9411fbb2 +0  6A2A0000
[2a70a17d7b1c6de] jit-backend-dump}
[2a70a17d7b205c1] jit-backend}
[2a70a17d7b24123] {jit-log-opt-bridge
# bridge out of Guard 0x41825c0 with 82 ops
[p0, p1, p2, i3, i4, i5, p6]
+246: guard_class(p0, 16471056, descr=<Guard0x41833a0>) [p0, p1, p2, i3, i4, i5, p6]
+258: guard_not_invalidated(descr=<Guard0x45af658>) [p0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '(set! *answer* (cons (cdr AppRand0) *answer*))')
+258: p8 = getfield_gc_r(p0, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+262: guard_nonnull_class(p8, 16471056, descr=<Guard0x4183400>) [p0, p1, p2, i3, i4, i5, p6]
+288: p11 = getfield_gc_r(ConstPtr(ptr10), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+292: guard_nonnull_class(p11, 16616448, descr=<Guard0x4183460>) [p0, p1, p2, i3, i4, i5, p6]
debug_merge_point(0, 0, '#t')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (vector->list *sequence*)')
debug_merge_point(0, 0, '(begin (void) #f)')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([AppRand12 (vector-ref *a* i)]) (vector-set! *board* AppRand12 1)) from (void)')
debug_merge_point(0, 0, '(vector-ref *a* i)')
+312: i14 = int_ge(i4, 0)
+316: guard_true(i14, descr=<Guard0x45af6a0>) [p0, p1, p2, i3, i4, i5, p6]
+322: i16 = int_lt(i4, 37)
+326: guard_true(i16, descr=<Guard0x45af6e8>) [p0, p1, p2, i3, i4, i5, p6]
+339: p18 = getfield_gc_r(ConstPtr(ptr17), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+343: guard_class(p18, 16623792, descr=<Guard0x45af730>) [p0, p1, p2, i3, i4, i5, p6]
+356: p21 = getfield_gc_r(ConstPtr(ptr20), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+360: i22 = getarrayitem_gc_i(p21, i4, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand12 1)')
+372: p24 = getfield_gc_r(ConstPtr(ptr23), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+376: guard_class(p24, 16623792, descr=<Guard0x45af778>) [p0, p1, p2, i3, i4, i5, p6]
+388: i27 = int_ge(i22, 0)
+392: guard_true(i27, descr=<Guard0x45af7c0>) [p0, p1, p2, i3, i4, i5, p6]
+398: i29 = int_lt(i22, 16)
+402: guard_true(i29, descr=<Guard0x45af808>) [p0, p1, p2, i3, i4, i5, p6]
+408: p31 = getfield_gc_r(ConstPtr(ptr30), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+412: setarrayitem_gc(p31, i22, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref *b* i)]) (vector-set! *board* AppRand13 1))')
debug_merge_point(0, 0, '(vector-ref *b* i)')
+428: p34 = getfield_gc_r(ConstPtr(ptr33), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+432: guard_class(p34, 16623792, descr=<Guard0x41834c0>) [i4, p34, p11, p8, p1, p2, i3, None, None, p6]
+445: p38 = getfield_gc_r(ConstPtr(ptr37), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+449: i39 = getarrayitem_gc_i(p38, i4, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand13 1)')
+454: i41 = int_ge(i39, 0)
+458: guard_true(i41, descr=<Guard0x45af850>) [i4, p34, p11, p8, p1, p2, i3, None, None, p6]
+464: i43 = int_lt(i39, 16)
+468: guard_true(i43, descr=<Guard0x45af898>) [i4, p34, p11, p8, p1, p2, i3, None, None, p6]
+474: setarrayitem_gc(p31, i39, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand14 (vector-ref *c* i)]) (vector-set! *board* AppRand14 0))')
debug_merge_point(0, 0, '(vector-ref *c* i)')
+490: p46 = getfield_gc_r(ConstPtr(ptr45), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+494: guard_class(p46, 16623792, descr=<Guard0x4183520>) [i4, p46, p11, p8, p1, p2, i3, None, None, p6]
+507: p49 = getfield_gc_r(ConstPtr(ptr48), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+511: i50 = getarrayitem_gc_i(p49, i4, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! *board* AppRand14 0)')
+516: i52 = int_ge(i50, 0)
+520: guard_true(i52, descr=<Guard0x45af8e0>) [i4, p46, p11, p8, p1, p2, i3, None, None, p6]
+526: i54 = int_lt(i50, 16)
+530: guard_true(i54, descr=<Guard0x45af928>) [i4, p46, p11, p8, p1, p2, i3, None, None, p6]
+536: setarrayitem_gc(p31, i50, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))) from (vector-set! *board* AppRand14 0)')
debug_merge_point(0, 0, '(let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))')
+545: p56 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+556: guard_nonnull_class(p56, ConstClass(ForwardLink), descr=<Guard0x4183580>) [p56, p2, p11, p8, p1, None, i3, i4, None, None]
debug_merge_point(0, 0, '(+ j 1)')
+575: i59 = int_add(i4, 1)
debug_merge_point(0, 0, '(doloop AppRand10 depth4844)')
+579: p60 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+590: guard_nonnull_class(p60, 16510992, descr=<Guard0x41835e0>) [p56, p2, p11, p8, p1, None, i3, i4, None, None]
+608: p62 = getfield_gc_r(p60, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+619: guard_value(p62, ConstPtr(ptr63), descr=<Guard0x45af970>) [p56, p2, p11, p8, p1, None, i3, i4, None, None]
+628: p64 = getfield_gc_r(p60, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+632: i65 = instance_ptr_eq(p1, p64)
+635: guard_true(i65, descr=<Guard0x45af9b8>) [p56, p2, p11, p8, p1, None, i3, i4, None, None]
debug_merge_point(0, 0, '(let ([or-part (= j 36)]) (let ([if4 (if or-part or-part (attempt j depth4844))]) (if if4 (begin (void) #f) (let ([AppRand10 (+ j 1)]) (doloop AppRand10 depth4844))))) from (doloop AppRand10 depth4844)')
+641: p66 = new_with_vtable(descr=<SizeDescr 24>)
+682: setfield_gc(p66, p8, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+686: setfield_gc(p66, p11, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+701: setfield_gc(ConstPtr(ptr67), p66, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+705: p68 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+705: i70 = int_eq(i3, 14)
+713: guard_false(i70, descr=<Guard0x4183640>) [p2, i59, None, None, p1, None, i3, None, None, None]
+719: i71 = arraylen_gc(p21, descr=<ArrayS 8>)
+719: guard_gc_type(p31, 520, descr=<Guard0x41836a0>) [p2, i59, None, None, p1, None, i3, None, None, None]
+733: i73 = arraylen_gc(p31, descr=<ArrayS 8>)
+733: jump(p1, i59, i3, p2, p56, p21, p31, p60, descr=TargetToken(67757824))
+800: --end of the loop--
[2a70a17d7b6a45c] jit-log-opt-bridge}
[2a70a2effe6088a] {jit-summary
Tracing:      	15	0.020999
Backend:      	15	0.008286
TOTAL:      		40.620330
ops:             	29910
recorded ops:    	6163
  calls:         	5
guards:          	1451
opt ops:         	1789
opt guards:      	437
opt guards shared:	328
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	259
nvholes:         	49
nvreused:        	72
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	4
Total # of bridges:	11
Freed # of loops:	0
Freed # of bridges:	0
[2a70a2effe72c68] jit-summary}
[2a70a2effe7ec77] {jit-backend-counts
entry 1:431
TargetToken(67757584):431
TargetToken(67757824):5801795423
bridge 67786904:1704587657
bridge 67787408:162
entry 4:63
bridge 68616800:215568854
bridge 67787192:161160945
bridge 68620112:67132873
bridge 68620760:79582916
entry 9:80
bridge 68673568:19378946
bridge 68675224:5879937
bridge 67335456:774950
entry 13:71
bridge 68620976:945
bridge 68691392:944
[2a70a2effe83e2b] jit-backend-counts}
