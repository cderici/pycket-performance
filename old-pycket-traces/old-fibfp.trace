[3e4c03f899c4e17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee3000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c03f899d8752] jit-backend-dump}
[3e4c03f89a135cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee30b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c03f89a16475] jit-backend-dump}
[3e4c03f89a230b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee3180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c03f89a24c7c] jit-backend-dump}
[3e4c03f89a2bd2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee31f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c03f89a2d6d6] jit-backend-dump}
[3e4c03f89a36a76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee3270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c03f89a3854f] jit-backend-dump}
[3e4c03f89a422a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee32f
[3e4c03f89a45d4a] jit-backend-dump}
[3e4c03f89a4b2b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee
[3e4c03f89a4d83b] jit-backend-dump}
[3e4c03f89a52307] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee
[3e4c03f89a5475d] jit-backend-dump}
[3e4c03f89ae5514] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee
[3e4c03f89ae7f8e] jit-backend-dump}
[3e4c03f89aee203] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee38f
[3e4c03f89af0c58] jit-backend-dump}
[3e4c03f89af59a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee3a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c03f89af714c] jit-backend-dump}
[3e4c03f89b0b802] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee3af
[3e4c03f89b0ecb3] jit-backend-dump}
[3e4c03f89b16760] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee3ce
[3e4c03f89b19940] jit-backend-dump}
[3e4c03f89b212f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee3ee
[3e4c03f89b246be] jit-backend-dump}
[3e4c03f89b2a7df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee40d
[3e4c03f89b2daaa] jit-backend-dump}
[3e4c03f89b379db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee42c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB7032EE90457F000041FFD3E99CFFFFFF
[3e4c03f89b39a0b] jit-backend-dump}
[3e4c03f89b41d71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB7032EE90457F000041FFD3E9BCFFFFFF
[3e4c03f89b43d7d] jit-backend-dump}
[3e4c03f89b49dbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee
[3e4c03f89b4c9a2] jit-backend-dump}
[3e4c03f89b51ef8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee45c0 +0  4C8985800000004C898D880000004C899590000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC08FFD0488B0C258893F900488B69F8F64504010F85B10000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B528010000C349BB7032EE90457F000041FFD3E93DFFFFFF
[3e4c03f89b545b8] jit-backend-dump}
[3e4c03f89b65946] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB703AEE90457F000041FFE3
[3e4c03f89b67261] jit-backend-dump}
[3e4c03f8a03523d] {jit-backend
[3e4c03f8a165ebf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee48e
[3e4c03f8a16c92f] jit-backend-dump}
[3e4c03f8a17ae98] {jit-backend-addr
Loop 1 ((let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)) has address 0x7f4590ee49bd to 0x7f4590ee4b00 (bootstrap 0x7f4590ee4930)
       gc table: 0x7f4590ee48e0
       function: 0x7f4590ee4930
         resops: 0x7f4590ee49bd
       failures: 0x7f4590ee4b00
            end: 0x7f4590ee4c0d
[3e4c03f8a17f44a] jit-backend-addr}
[3e4c03f8a1845f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee49e7 +0  48010000
[3e4c03f8a185941] jit-backend-dump}
[3e4c03f8a188dc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee49fd +0  4E010000
[3e4c03f8a189c83] jit-backend-dump}
[3e4c03f8a18cf9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4a10 +0  73010000
[3e4c03f8a18dda5] jit-backend-dump}
[3e4c03f8a190da4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4a30 +0  6F010000
[3e4c03f8a191b03] jit-backend-dump}
[3e4c03f8a194a73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4a53 +0  68010000
[3e4c03f8a195840] jit-backend-dump}
[3e4c03f8a198854] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4a7f +0  6E010000
[3e4c03f8a1995bc] jit-backend-dump}
[3e4c03f8a19d076] jit-backend}
[3e4c03f8a1a0d76] {jit-log-opt-loop
# Loop 1 ((let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)) : loop with 43 ops
[p0, p1]
+229: label(p0, p1, descr=TargetToken(67164528))
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)')
+248: guard_class(p1, 16435920, descr=<Guard0x401a260>) [p0, p1]
+267: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+271: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x401a2c0>) [p0, p1]
debug_merge_point(0, 0, '(< n 2.0)')
+289: guard_not_invalidated(descr=<Guard0x4065388>) [p0, p1]
+289: guard_class(p0, 16504592, descr=<Guard0x40653d0>) [p0, p1]
+308: f6 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+313: i8 = float_lt(f6, 2.000000)
+334: guard_false(i8, descr=<Guard0x4065418>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1.0)')
+340: f10 = float_sub(f6, 1.000000)
debug_merge_point(0, 0, '(let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fibfp AppRand0)')
+355: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+366: i13 = instance_ptr_eq(p11, ConstPtr(ptr12))
+369: guard_true(i13, descr=<Guard0x4065460>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)')
+375: label(p11, f10, p3, p0, p1, descr=TargetToken(67164608))
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)')
debug_merge_point(0, 0, '(< n 2.0)')
+392: guard_not_invalidated(descr=<Guard0x401a320>) [p1, p0, f10, p11, p3]
+392: i15 = float_lt(f10, 2.000000)
+413: guard_false(i15, descr=<Guard0x40654a8>) [p1, p0, f10, p11, p3]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1.0)')
+419: f17 = float_sub(f10, 1.000000)
debug_merge_point(0, 0, '(let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fibfp AppRand0)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)')
+438: p18 = new_with_vtable(descr=<SizeDescr 24>)
+485: p19 = new_with_vtable(descr=<SizeDescr 40>)
+496: setfield_gc(p18, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+500: setfield_gc(p18, f10, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+505: setfield_gc(p19, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+509: setfield_gc(p19, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+513: setfield_gc(p19, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+524: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+528: jump(p11, f17, p3, p18, p19, descr=TargetToken(67164608))
+544: --end of the loop--
[3e4c03f8a1fec93] jit-log-opt-loop}
[3e4c03f8a31dabe] {jit-backend
[3e4c03f8a342df9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4ca0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F879300000048FF0425E0E31603488B8D380100008139101100000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813A501D01000F8500000000F20F10421049BB704CEE90457F000066410F2E037B044883FD000F820000000049BB884CEE90457F0000F2410F5C03488B5A08488B35DDFEFFFF4839F30F85000000004D8D9BD8FDFFFF41FFE3669049BB5047EE90457F000041FFD3E95BFFFFFFFF3588FEFFFF49BB304CEE90457F000041534D8D9BD0E3FFFF41FFE3FF3574FEFFFF49BB404CEE90457F000041534D8D9BC0E3FFFF41FFE3FF3560FEFFFF49BB504CEE90457F000041534D8D9BB0E3FFFF41FFE3FF354CFEFFFF49BB604CEE90457F000041534D8D9BA0E3FFFF41FFE3FF3538FEFFFF49BB784CEE90457F000041534D8D9B88E3FFFF41FFE3FF352CFEFFFF4D8D5B0841534D8D9B70E3FFFF41FFE3
[3e4c03f8a348465] jit-backend-dump}
[3e4c03f8a35202b] {jit-backend-addr
Loop 2 ((let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)) has address 0x7f4590ee4d6d to 0x7f4590ee4e00 (bootstrap 0x7f4590ee4ce0)
       gc table: 0x7f4590ee4ca0
       function: 0x7f4590ee4ce0
         resops: 0x7f4590ee4d6d
       failures: 0x7f4590ee4e00
            end: 0x7f4590ee4eb4
[3e4c03f8a354c42] jit-backend-addr}
[3e4c03f8a358969] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4d84 +0  8A000000
[3e4c03f8a359b31] jit-backend-dump}
[3e4c03f8a35cdff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4d9a +0  90000000
[3e4c03f8a35dbd8] jit-backend-dump}
[3e4c03f8a360d74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4dad +0  B5000000
[3e4c03f8a361b2f] jit-backend-dump}
[3e4c03f8a364b56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4dcd +0  B1000000
[3e4c03f8a36592c] jit-backend-dump}
[3e4c03f8a3689b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4df0 +0  AA000000
[3e4c03f8a369748] jit-backend-dump}
[3e4c03f8a36d147] jit-backend}
[3e4c03f8a370b72] {jit-log-opt-loop
# Loop 2 ((let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)) : entry bridge with 21 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+213: guard_class(p1, 16435920, descr=<Guard0x401a380>) [p0, p1]
+232: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+236: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x401a3e0>) [p0, p1]
debug_merge_point(0, 0, '(< n 2.0)')
+254: guard_not_invalidated(descr=<Guard0x40654f0>) [p0, p1]
+254: guard_class(p0, 16504592, descr=<Guard0x4065538>) [p0, p1]
+273: f6 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+278: i8 = float_lt(f6, 2.000000)
+299: guard_false(i8, descr=<Guard0x4065580>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1.0)')
+305: f10 = float_sub(f6, 1.000000)
debug_merge_point(0, 0, '(let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fibfp AppRand0)')
+320: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+331: i13 = instance_ptr_eq(p11, ConstPtr(ptr12))
+334: guard_true(i13, descr=<Guard0x40655c8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)')
+340: jump(p11, f10, p3, p0, p1, descr=TargetToken(67164608))
+352: --end of the loop--
[3e4c03f8a388b20] jit-log-opt-loop}
[3e4c03f8a5da51e] {jit-backend
[3e4c03f8a65f5db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee
[3e4c03f8a668ac5] jit-backend-dump}
[3e4c03f8a672923] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee50f4 +0  1E000000
[3e4c03f8a673c53] jit-backend-dump}
[3e4c03f8a677640] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5365 +0  1E000000
[3e4c03f8a678502] jit-backend-dump}
[3e4c03f8a67b6c6] {jit-backend-addr
bridge out of Guard 0x4065580 has address 0x7f4590ee50f0 to 0x7f4590ee5360
       gc table: 0x7f4590ee5040
    jump target: 0x7f4590ee50f0
         resops: 0x7f4590ee50fe
       failures: 0x7f4590ee5360
            end: 0x7f4590ee55bb
[3e4c03f8a67dd1b] jit-backend-addr}
[3e4c03f8a68116d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee510e +0  95020000
[3e4c03f8a681fd0] jit-backend-dump}
[3e4c03f8a685081] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5125 +0  9A020000
[3e4c03f8a685e2c] jit-backend-dump}
[3e4c03f8a688e41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5131 +0  C6020000
[3e4c03f8a689bf8] jit-backend-dump}
[3e4c03f8a68cb43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5152 +0  C1020000
[3e4c03f8a68d8a5] jit-backend-dump}
[3e4c03f8a690864] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5166 +0  C9020000
[3e4c03f8a6915d5] jit-backend-dump}
[3e4c03f8a6945ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee517b +0  D0020000
[3e4c03f8a6952db] jit-backend-dump}
[3e4c03f8a6981ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5193 +0  D4020000
[3e4c03f8a698ee5] jit-backend-dump}
[3e4c03f8a69beba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee51ad +0  D6020000
[3e4c03f8a69cb76] jit-backend-dump}
[3e4c03f8a69fb23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee51ba +0  E5020000
[3e4c03f8a6a080b] jit-backend-dump}
[3e4c03f8a6a377d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee51d0 +0  EB020000
[3e4c03f8a6a446b] jit-backend-dump}
[3e4c03f8a6a738b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee51e9 +0  EE020000
[3e4c03f8a6a8060] jit-backend-dump}
[3e4c03f8a6ab00d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5201 +0  F2020000
[3e4c03f8a6abcf1] jit-backend-dump}
[3e4c03f8a6aecc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5215 +0  FA020000
[3e4c03f8a6af9c6] jit-backend-dump}
[3e4c03f8a6b2954] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee522b +0  00030000
[3e4c03f8a6b362c] jit-backend-dump}
[3e4c03f8a6b6546] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee523d +0  0A030000
[3e4c03f8a6b721e] jit-backend-dump}
[3e4c03f8a6ba1a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee524b +0  18030000
[3e4c03f8a6bae7e] jit-backend-dump}
[3e4c03f8a6bddf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5262 +0  1D030000
[3e4c03f8a6beac6] jit-backend-dump}
[3e4c03f8a6c1a1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee528a +0  11030000
[3e4c03f8a6c2705] jit-backend-dump}
[3e4c03f8a6c7652] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4dcd +0  1F030000
[3e4c03f8a6c8487] jit-backend-dump}
[3e4c03f8a6cf0a0] jit-backend}
[3e4c03f8a6d2bea] {jit-log-opt-bridge
# bridge out of Guard 0x4065580 with 76 ops
[p0, p1]
+198: guard_class(p1, 16435920, descr=<Guard0x401a440>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+214: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x401a4a0>) [p0, p1]
debug_merge_point(0, 0, '(< n 2.0)')
+233: guard_not_invalidated(descr=<Guard0x4065610>) [p0, p1]
+233: guard_class(p0, 16504592, descr=<Guard0x4065658>) [p0, p1]
+245: f6 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+251: i8 = float_lt(f6, 2.000000)
+272: guard_true(i8, descr=<Guard0x40656a0>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
+278: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+289: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x40656e8>) [p0, p1]
+298: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+302: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2.0)')
+306: guard_class(p11, 16500016, descr=<Guard0x4065730>) [p0, p1]
+319: p14 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+323: guard_nonnull_class(p14, ConstClass(W_Flonum), descr=<Guard0x401a500>) [p0, p1]
+343: f16 = getfield_gc_f(p14, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+350: f17 = float_add(f16, f6)
+355: guard_class(p12, 16435920, descr=<Guard0x4065a00>) [p0, p1]
+369: p19 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+373: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x40659b8>) [p0, p1]
+382: p21 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+386: p22 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+390: guard_class(p21, 16500016, descr=<Guard0x4065970>) [p0, p1]
+404: p24 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+409: guard_nonnull_class(p24, ConstClass(W_Flonum), descr=<Guard0x401a620>) [p0, p1]
+429: f26 = getfield_gc_f(p24, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+435: f27 = float_add(f26, f17)
+440: guard_class(p22, 16435920, descr=<Guard0x4065928>) [p0, p1]
+453: p29 = getfield_gc_r(p22, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+464: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x40658e0>) [p0, p1]
+473: p31 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+477: p32 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+481: guard_class(p31, 16504592, descr=<Guard0x4065898>) [p0, p1]
+495: p34 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+500: guard_class(p34, 16505296, descr=<Guard0x4065850>) [p0, p1]
+513: guard_class(p32, 16435920, descr=<Guard0x4065808>) [p0, p1]
+527: p37 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+531: guard_nonnull_class(p37, ConstClass(ForwardLink), descr=<Guard0x401a5c0>) [p0, p1]
debug_merge_point(0, 0, '(- n 2.0) from (+ AppRand1 AppRand3)')
+550: f39 = getfield_gc_f(p31, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+557: f41 = float_sub(f39, 2.000000)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
debug_merge_point(0, 0, '(< n 2.0)')
+572: i43 = float_lt(f41, 2.000000)
+584: guard_false(i43, descr=<Guard0x40657c0>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1.0)')
+590: f45 = float_sub(f41, 1.000000)
debug_merge_point(0, 0, '(let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fibfp AppRand0)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)')
+610: p46 = new_with_vtable(descr=<SizeDescr 24>)
+654: p47 = new_with_vtable(descr=<SizeDescr 40>)
+665: p48 = new_with_vtable(descr=<SizeDescr 32>)
+677: setfield_gc(p48, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+682: p49 = new_with_vtable(descr=<SizeDescr 16>)
+694: setfield_gc(p49, f27, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+700: setfield_gc(p48, p49, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+705: p50 = new_with_vtable(descr=<SizeDescr 16>)
+716: setfield_gc(p50, f41, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+722: setfield_gc(p48, p50, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+727: setfield_gc(p47, p37, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+731: setfield_gc(p46, f41, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+737: setfield_gc(p47, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+741: setfield_gc(p47, p48, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+745: setfield_gc(p47, p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+756: setfield_gc(p46, ConstPtr(ptr52), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+760: jump(ConstPtr(ptr52), f45, p37, p46, p47, descr=TargetToken(67164608))
+800: --end of the loop--
[3e4c03f8aa5ce64] jit-log-opt-bridge}
[3e4c03f8ab9924c] {jit-backend
[3e4c03f8abe9ac4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee56b
[3e4c03f8abf0b46] jit-backend-dump}
[3e4c03f8abfadde] {jit-backend-addr
Loop 4 ((+ AppRand1 AppRand3) from (< n 2.0)) has address 0x7f4590ee57ad to 0x7f4590ee5950 (bootstrap 0x7f4590ee5720)
       gc table: 0x7f4590ee56b0
       function: 0x7f4590ee5720
         resops: 0x7f4590ee57ad
       failures: 0x7f4590ee5950
            end: 0x7f4590ee5ab7
[3e4c03f8abfdb2a] jit-backend-addr}
[3e4c03f8ac01c80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee57c4 +0  D7010000
[3e4c03f8ac02f8c] jit-backend-dump}
[3e4c03f8ac06480] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee57d4 +0  E3010000
[3e4c03f8ac07373] jit-backend-dump}
[3e4c03f8ac0a52b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee57ea +0  E9010000
[3e4c03f8ac0b2c7] jit-backend-dump}
[3e4c03f8ac0e2c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee580b +0  E4010000
[3e4c03f8ac0efe8] jit-backend-dump}
[3e4c03f8ac11f70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee581f +0  EC010000
[3e4c03f8ac12c63] jit-backend-dump}
[3e4c03f8ac15c60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5833 +0  F4010000
[3e4c03f8ac16994] jit-backend-dump}
[3e4c03f8ac198c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5843 +0  00020000
[3e4c03f8ac1a5fd] jit-backend-dump}
[3e4c03f8ac1d4dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee584f +0  10020000
[3e4c03f8ac1e20b] jit-backend-dump}
[3e4c03f8ac210a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5865 +0  16020000
[3e4c03f8ac21dc6] jit-backend-dump}
[3e4c03f8ac24c53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee588b +0  0C020000
[3e4c03f8ac25968] jit-backend-dump}
[3e4c03f8ac2925b] jit-backend}
[3e4c03f8ac2cb87] {jit-log-opt-loop
# Loop 4 ((+ AppRand1 AppRand3) from (< n 2.0)) : entry bridge with 54 ops
[p0, p1]
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2.0)')
+261: guard_not_invalidated(descr=<Guard0x401a920>) [p1, p0]
+261: guard_class(p0, 16504592, descr=<Guard0x40b5ad8>) [p1, p0]
+280: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+284: guard_class(p3, 16500016, descr=<Guard0x40b5b20>) [p1, p0]
+296: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+300: guard_nonnull_class(p5, ConstClass(W_Flonum), descr=<Guard0x401a980>) [p1, p0]
+318: f7 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+323: f8 = getfield_gc_f(p5, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+328: f9 = float_add(f8, f7)
+332: guard_class(p1, 16435920, descr=<Guard0x40b5b68>) [p1, p0]
+351: p11 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+362: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x40b5bb0>) [p1, p0]
+371: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+375: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+379: guard_class(p13, 16504592, descr=<Guard0x40b5bf8>) [p1, p0]
+391: p16 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+395: guard_class(p16, 16505296, descr=<Guard0x40b5c40>) [p1, p0]
+407: guard_class(p14, 16435920, descr=<Guard0x40b5c88>) [p1, p0]
+419: p19 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+423: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x401a9e0>) [p1, p0]
debug_merge_point(0, 0, '(- n 2.0) from (+ AppRand1 AppRand3)')
+441: f21 = getfield_gc_f(p13, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+446: f23 = float_sub(f21, 2.000000)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
debug_merge_point(0, 0, '(< n 2.0)')
+461: i25 = float_lt(f23, 2.000000)
+473: guard_false(i25, descr=<Guard0x40b5cd0>) [p1, p0]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1.0)')
+479: f27 = float_sub(f23, 1.000000)
debug_merge_point(0, 0, '(let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fibfp AppRand0)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)')
+498: p28 = new_with_vtable(descr=<SizeDescr 24>)
+542: p29 = new_with_vtable(descr=<SizeDescr 40>)
+553: p30 = new_with_vtable(descr=<SizeDescr 32>)
+564: setfield_gc(p30, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+568: p31 = new_with_vtable(descr=<SizeDescr 16>)
+579: setfield_gc(p31, f9, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+584: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+588: p32 = new_with_vtable(descr=<SizeDescr 16>)
+599: setfield_gc(p32, f23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+605: setfield_gc(p30, p32, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+616: setfield_gc(p28, ConstPtr(ptr33), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+620: setfield_gc(p28, f23, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+632: setfield_gc(p29, ConstPtr(ptr34), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+636: setfield_gc(p29, p30, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+640: setfield_gc(p29, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+644: setfield_gc(p29, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+648: jump(ConstPtr(ptr33), f27, p19, p28, p29, descr=TargetToken(67164608))
+672: --end of the loop--
[3e4c03f8ac57739] jit-log-opt-loop}
[3e4c03f8ae6107b] {jit-backend
[3e4c03f8aec92c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5cd
[3e4c03f8aed474b] jit-backend-dump}
[3e4c03f8aede434] {jit-backend-addr
Loop 5 ((let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)) has address 0x7f4590ee5e5d to 0x7f4590ee6100 (bootstrap 0x7f4590ee5dd0)
       gc table: 0x7f4590ee5cd0
       function: 0x7f4590ee5dd0
         resops: 0x7f4590ee5e5d
       failures: 0x7f4590ee6100
            end: 0x7f4590ee643e
[3e4c03f8aee118f] jit-backend-addr}
[3e4c03f8aee51e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5e87 +0  87020000
[3e4c03f8aee62d8] jit-backend-dump}
[3e4c03f8aee9504] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5e9d +0  8D020000
[3e4c03f8aeea2ed] jit-backend-dump}
[3e4c03f8aeed510] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5eb0 +0  B2020000
[3e4c03f8aeee278] jit-backend-dump}
[3e4c03f8aef1347] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5ed0 +0  AE020000
[3e4c03f8aef200d] jit-backend-dump}
[3e4c03f8aef4f98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5ee4 +0  B6020000
[3e4c03f8aef5c36] jit-backend-dump}
[3e4c03f8aef8c1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5ef8 +0  BE020000
[3e4c03f8aef98bb] jit-backend-dump}
[3e4c03f8aefc855] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5f0e +0  C4020000
[3e4c03f8aefd4ea] jit-backend-dump}
[3e4c03f8af00472] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5f23 +0  CB020000
[3e4c03f8af010ef] jit-backend-dump}
[3e4c03f8af04024] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5f30 +0  DA020000
[3e4c03f8af04cb3] jit-backend-dump}
[3e4c03f8af07cce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5f44 +0  E2020000
[3e4c03f8af0896c] jit-backend-dump}
[3e4c03f8af0f318] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5f5a +0  E8020000
[3e4c03f8af101c7] jit-backend-dump}
[3e4c03f8af13351] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5f6f +0  EF020000
[3e4c03f8af140a4] jit-backend-dump}
[3e4c03f8af17072] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5f83 +0  F7020000
[3e4c03f8af17d91] jit-backend-dump}
[3e4c03f8af1acee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5f97 +0  FF020000
[3e4c03f8af1b9f1] jit-backend-dump}
[3e4c03f8af1e8b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5fa7 +0  0B030000
[3e4c03f8af1f5cb] jit-backend-dump}
[3e4c03f8af224aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5fb3 +0  1B030000
[3e4c03f8af231b4] jit-backend-dump}
[3e4c03f8af2607e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5fc9 +0  21030000
[3e4c03f8af26d6c] jit-backend-dump}
[3e4c03f8af29d68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee600f +0  13030000
[3e4c03f8af2aafb] jit-backend-dump}
[3e4c03f8af2da8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee602b +0  13030000
[3e4c03f8af2e82b] jit-backend-dump}
[3e4c03f8af3173c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee603f +0  1B030000
[3e4c03f8af3243c] jit-backend-dump}
[3e4c03f8af35331] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6055 +0  21030000
[3e4c03f8af3602b] jit-backend-dump}
[3e4c03f8af38ef8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee606a +0  28030000
[3e4c03f8af39bfb] jit-backend-dump}
[3e4c03f8af3caea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee607e +0  30030000
[3e4c03f8af3d7ea] jit-backend-dump}
[3e4c03f8af40704] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6092 +0  38030000
[3e4c03f8af41410] jit-backend-dump}
[3e4c03f8af44355] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee60a2 +0  44030000
[3e4c03f8af45074] jit-backend-dump}
[3e4c03f8af47f87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee60ae +0  54030000
[3e4c03f8af48ca6] jit-backend-dump}
[3e4c03f8af4bbf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee60c4 +0  5A030000
[3e4c03f8af4c92b] jit-backend-dump}
[3e4c03f8af5034f] jit-backend}
[3e4c03f8af53e93] {jit-log-opt-loop
# Loop 5 ((let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)) : loop with 87 ops
[p0, p1]
+405: label(p0, p1, descr=TargetToken(67694608))
+424: guard_class(p1, 16435920, descr=<Guard0x401aa40>) [p0, p1]
+443: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+447: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x401aaa0>) [p0, p1]
debug_merge_point(0, 0, '(< n 2.0)')
+465: guard_not_invalidated(descr=<Guard0x40b5d18>) [p0, p1]
+465: guard_class(p0, 16504592, descr=<Guard0x40b5d60>) [p0, p1]
+484: f6 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+489: i8 = float_lt(f6, 2.000000)
+510: guard_true(i8, descr=<Guard0x40b5da8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
+516: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+527: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x40b5df0>) [p0, p1]
+536: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+540: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2.0)')
+544: guard_class(p11, 16500016, descr=<Guard0x40b5e38>) [p0, p1]
+556: p14 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+560: guard_nonnull_class(p14, ConstClass(W_Flonum), descr=<Guard0x401ab00>) [p0, p1]
+578: f16 = getfield_gc_f(p14, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+583: f17 = float_add(f16, f6)
+587: guard_class(p12, 16435920, descr=<Guard0x40b5e80>) [p0, p1]
+599: p19 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+603: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x40b5ec8>) [p0, p1]
+612: p21 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+616: p22 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+620: guard_class(p21, 16500016, descr=<Guard0x40b5f10>) [p0, p1]
+632: p24 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+636: guard_nonnull_class(p24, ConstClass(W_Flonum), descr=<Guard0x401ab60>) [p0, p1]
+654: f26 = getfield_gc_f(p24, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+659: f27 = float_add(f26, f17)
+663: guard_class(p22, 16435920, descr=<Guard0x40b5f58>) [p0, p1]
+675: p29 = getfield_gc_r(p22, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+686: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x40b5fa0>) [p0, p1]
+695: p31 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+699: p32 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+703: guard_class(p31, 16504592, descr=<Guard0x40ee020>) [p0, p1]
+715: p34 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+719: guard_class(p34, 16505296, descr=<Guard0x40ee068>) [p0, p1]
+731: guard_class(p32, 16435920, descr=<Guard0x40ee0b0>) [p0, p1]
+743: p37 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+747: guard_nonnull_class(p37, ConstClass(ForwardLink), descr=<Guard0x401abc0>) [p0, p1]
debug_merge_point(0, 0, '(- n 2.0) from (+ AppRand1 AppRand3)')
+765: f39 = getfield_gc_f(p31, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+770: f41 = float_sub(f39, 2.000000)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+785: label(f41, p37, p34, f27, p32, descr=TargetToken(67694688))
debug_merge_point(0, 0, '(< n 2.0)')
+808: guard_not_invalidated(descr=<Guard0x401ac20>) [f27, p34, p32, f41, p37]
+808: i43 = float_lt(f41, 2.000000)
+829: guard_true(i43, descr=<Guard0x40ee0f8>) [f27, p34, p32, f41, p37]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2.0)')
+835: f44 = float_add(f27, f41)
+843: p45 = getfield_gc_r(p32, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+854: guard_value(p45, ConstPtr(ptr46), descr=<Guard0x40ee140>) [f27, p34, p32, f41, p37]
+863: p47 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+867: p48 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+871: guard_class(p47, 16500016, descr=<Guard0x40ee188>) [f27, p34, p32, f41, p37]
+883: p50 = getfield_gc_r(p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+887: guard_nonnull_class(p50, ConstClass(W_Flonum), descr=<Guard0x401ac80>) [f27, p34, p32, f41, p37]
+905: f52 = getfield_gc_f(p50, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+910: f53 = float_add(f52, f44)
+914: guard_class(p48, 16435920, descr=<Guard0x40ee1d0>) [f27, p34, p32, f41, p37]
+926: p55 = getfield_gc_r(p48, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+937: guard_value(p55, ConstPtr(ptr56), descr=<Guard0x40ee218>) [f27, p34, p32, f41, p37]
+946: p57 = getfield_gc_r(p48, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+950: p58 = getfield_gc_r(p48, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+954: guard_class(p57, 16504592, descr=<Guard0x40ee260>) [f27, p34, p32, f41, p37]
+966: p60 = getfield_gc_r(p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+970: guard_class(p60, 16505296, descr=<Guard0x40ee2a8>) [f27, p34, p32, f41, p37]
+982: guard_class(p58, 16435920, descr=<Guard0x40ee2f0>) [f27, p34, p32, f41, p37]
+994: p63 = getfield_gc_r(p58, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+998: guard_nonnull_class(p63, ConstClass(ForwardLink), descr=<Guard0x401ace0>) [f27, p34, p32, f41, p37]
debug_merge_point(0, 0, '(- n 2.0) from (+ AppRand1 AppRand3)')
+1016: f65 = getfield_gc_f(p57, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+1021: f67 = float_sub(f65, 2.000000)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+1036: jump(f67, p63, p60, f53, p58, descr=TargetToken(67694688))
+1072: --end of the loop--
[3e4c03f8af9c182] jit-log-opt-loop}
[3e4c03f8afa84f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4ce0 +0  49BBD05DEE90457F000041FFE3
[3e4c03f8afa9e04] jit-backend-dump}
[3e4c03f8b07bd9f] {jit-backend
[3e4c03f8b0a2ca7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee64d
[3e4c03f8b0a8304] jit-backend-dump}
[3e4c03f8b0b15c5] {jit-backend-addr
Loop 6 ((- n 2.0) from (+ AppRand1 AppRand3)) has address 0x7f4590ee659d to 0x7f4590ee6670 (bootstrap 0x7f4590ee6510)
       gc table: 0x7f4590ee64d0
       function: 0x7f4590ee6510
         resops: 0x7f4590ee659d
       failures: 0x7f4590ee6670
            end: 0x7f4590ee6734
[3e4c03f8b0b409e] jit-backend-addr}
[3e4c03f8b0b7c5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee65b4 +0  E6000000
[3e4c03f8b0b8d69] jit-backend-dump}
[3e4c03f8b0bc01b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee65db +0  DB000000
[3e4c03f8b0bcdab] jit-backend-dump}
[3e4c03f8b0bfe53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee65ef +0  DD000000
[3e4c03f8b0c0b9c] jit-backend-dump}
[3e4c03f8b0c3d01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6608 +0  DA000000
[3e4c03f8b0c4a82] jit-backend-dump}
[3e4c03f8b0c7dc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee661e +0  DA000000
[3e4c03f8b0c8aac] jit-backend-dump}
[3e4c03f8b0cbc2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6630 +0  E4000000
[3e4c03f8b0cc95a] jit-backend-dump}
[3e4c03f8b0d0246] jit-backend}
[3e4c03f8b0d3a9a] {jit-log-opt-loop
# Loop 6 ((- n 2.0) from (+ AppRand1 AppRand3)) : entry bridge with 19 ops
[p0, p1]
debug_merge_point(0, 0, '(- n 2.0) from (+ AppRand1 AppRand3)')
+213: guard_not_invalidated(descr=<Guard0x401ad40>) [p1, p0]
+213: guard_class(p0, 16504592, descr=<Guard0x40ee338>) [p1, p0]
+232: f3 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+237: f5 = float_sub(f3, 2.000000)
+252: guard_class(p1, 16436632, descr=<Guard0x40ee380>) [p1, p0]
+271: p7 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+282: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x40ee3c8>) [p1, p0]
+291: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+295: f10 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.LetContSize1Flo.inst_vals_flo_0 40 pure>)
+300: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
+304: guard_class(p11, 16435920, descr=<Guard0x40ee410>) [p1, p0]
+316: p13 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+320: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x401ada0>) [p1, p0]
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+338: guard_nonnull_class(p9, 16505296, descr=<Guard0x401ae00>) [f5, f10, p9, p11, p13]
+356: jump(f5, p13, p9, f10, p11, descr=TargetToken(67694688))
+416: --end of the loop--
[3e4c03f8b0ea7e7] jit-log-opt-loop}
[3e4c03f8b232fba] {jit-backend
[3e4c03f8b25c566] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee67d
[3e4c03f8b261bee] jit-backend-dump}
[3e4c03f8b26aef8] {jit-backend-addr
Loop 7 ((- n 2.0) from (< n 2.0)) has address 0x7f4590ee689d to 0x7f4590ee6970 (bootstrap 0x7f4590ee6810)
       gc table: 0x7f4590ee67d0
       function: 0x7f4590ee6810
         resops: 0x7f4590ee689d
       failures: 0x7f4590ee6970
            end: 0x7f4590ee6a34
[3e4c03f8b26d8a2] jit-backend-addr}
[3e4c03f8b2715f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee68b4 +0  E6000000
[3e4c03f8b272678] jit-backend-dump}
[3e4c03f8b2759b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee68db +0  DB000000
[3e4c03f8b276778] jit-backend-dump}
[3e4c03f8b2798be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee68ef +0  DD000000
[3e4c03f8b27a60e] jit-backend-dump}
[3e4c03f8b27d7e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6908 +0  DA000000
[3e4c03f8b27e54c] jit-backend-dump}
[3e4c03f8b281576] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee691e +0  DA000000
[3e4c03f8b282230] jit-backend-dump}
[3e4c03f8b2851d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6930 +0  E4000000
[3e4c03f8b285e7e] jit-backend-dump}
[3e4c03f8b2896d7] jit-backend}
[3e4c03f8b28cf43] {jit-log-opt-loop
# Loop 7 ((- n 2.0) from (< n 2.0)) : entry bridge with 19 ops
[p0, p1]
debug_merge_point(0, 0, '(- n 2.0) from (< n 2.0)')
+213: guard_not_invalidated(descr=<Guard0x401ae60>) [p1, p0]
+213: guard_class(p0, 16504592, descr=<Guard0x40ee458>) [p1, p0]
+232: f3 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+237: f5 = float_sub(f3, 2.000000)
+252: guard_class(p1, 16436632, descr=<Guard0x40ee4a0>) [p1, p0]
+271: p7 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+282: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x40ee4e8>) [p1, p0]
+291: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+295: f10 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.LetContSize1Flo.inst_vals_flo_0 40 pure>)
+300: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
+304: guard_class(p11, 16435920, descr=<Guard0x40ee530>) [p1, p0]
+316: p13 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+320: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x401aec0>) [p1, p0]
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+338: guard_nonnull_class(p9, 16505296, descr=<Guard0x401af20>) [f5, f10, p9, p11, p13]
+356: jump(f5, p13, p9, f10, p11, descr=TargetToken(67694688))
+416: --end of the loop--
[3e4c03f8b2a16db] jit-log-opt-loop}
[3e4c03f8b38e32c] {jit-backend
[3e4c03f8b3ae163] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6ab0 +0  000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8200000048FF0425C0C2510349BB686AEE90457F000066410F2E037B044883FD000F83000000004C8B7A0841813F102001000F85000000004C8B71084983FE01720741813E900F00000F8500000000F2440F10721049BBA06AEE90457F0000F2450F5C334C89B5300100004C89BD380100004889CE66410F28CE4D8D9B50F5FFFF41FFE3669048C7442408FFFFFF0049BB486AEE90457F00004C895D204D8D9BA8C8FFFF41FFD3E958FFFFFFFF3524FFFFFF49BB586AEE90457F000041534D8D9BB8CAFFFF41FFE3FF3510FFFFFF49BB706AEE90457F000041534D8D9BA0CAFFFF41FFE3FF35FCFEFFFF49BB806AEE90457F000041534D8D9B90CAFFFF41FFE3FF35E8FEFFFF49BB906AEE90457F000041534D8D9B80CAFFFF41FFE3
[3e4c03f8b3b1bfe] jit-backend-dump}
[3e4c03f8b3baf4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6ad4 +0  1E000000
[3e4c03f8b3bc11f] jit-backend-dump}
[3e4c03f8b3bf81c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6b65 +0  1E000000
[3e4c03f8b3c0578] jit-backend-dump}
[3e4c03f8b3c36d7] {jit-backend-addr
bridge out of Guard 0x40654a8 has address 0x7f4590ee6ad0 to 0x7f4590ee6b60
       gc table: 0x7f4590ee6ab0
    jump target: 0x7f4590ee6ad0
         resops: 0x7f4590ee6ade
       failures: 0x7f4590ee6b60
            end: 0x7f4590ee6bf6
[3e4c03f8b3c59b4] jit-backend-addr}
[3e4c03f8b3c8d2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6afd +0  A1000000
[3e4c03f8b3c9ad3] jit-backend-dump}
[3e4c03f8b3ccb77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6b0e +0  AC000000
[3e4c03f8b3cd8a8] jit-backend-dump}
[3e4c03f8b3d0797] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6b25 +0  B1000000
[3e4c03f8b3d1494] jit-backend-dump}
[3e4c03f8b3d4722] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee4a7f +0  4D200000
[3e4c03f8b3d546c] jit-backend-dump}
[3e4c03f8b3d9196] jit-backend}
[3e4c03f8b3dc9b2] {jit-log-opt-bridge
# bridge out of Guard 0x40654a8 with 16 ops
[p0, p1, f2, p3, p4]
+54: guard_not_invalidated(descr=<Guard0x401af80>) [p0, p1, f2, p3, p4]
+54: i6 = float_lt(f2, 2.000000)
+75: guard_true(i6, descr=<Guard0x40ee578>) [p0, p1, f2, p3, p4]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
+81: p7 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+85: guard_class(p7, 16505296, descr=<Guard0x40ee5c0>) [p0, p1, f2, p3, p4]
+98: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+102: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x401afe0>) [p0, p1, f2, p3, p4]
debug_merge_point(0, 0, '(- n 2.0) from (< n 2.0)')
+121: f11 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+127: f13 = float_sub(f11, 2.000000)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+142: jump(f13, p9, p7, f2, p0, descr=TargetToken(67694688))
+176: --end of the loop--
[3e4c03f8b3ef220] jit-log-opt-bridge}
[3e4c03f8b5190ab] {jit-backend
[3e4c03f8b554d54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6d
[3e4c03f8b55b848] jit-backend-dump}
[3e4c03f8b564a10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6d84 +0  1E000000
[3e4c03f8b565b73] jit-backend-dump}
[3e4c03f8b5692f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6ee5 +0  1E000000
[3e4c03f8b56a04c] jit-backend-dump}
[3e4c03f8b56d134] {jit-backend-addr
bridge out of Guard 0x40b5ec8 has address 0x7f4590ee6d80 to 0x7f4590ee6ee0
       gc table: 0x7f4590ee6d00
    jump target: 0x7f4590ee6d80
         resops: 0x7f4590ee6d8e
       failures: 0x7f4590ee6ee0
            end: 0x7f4590ee708e
[3e4c03f8b56f326] jit-backend-addr}
[3e4c03f8b572797] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6d9e +0  64010000
[3e4c03f8b573595] jit-backend-dump}
[3e4c03f8b576627] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6db5 +0  69010000
[3e4c03f8b57731b] jit-backend-dump}
[3e4c03f8b57a30b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6dc1 +0  95010000
[3e4c03f8b57b051] jit-backend-dump}
[3e4c03f8b57e078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6de2 +0  90010000
[3e4c03f8b57eda3] jit-backend-dump}
[3e4c03f8b581e91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6df6 +0  98010000
[3e4c03f8b582b6c] jit-backend-dump}
[3e4c03f8b585b28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6e0b +0  9F010000
[3e4c03f8b586847] jit-backend-dump}
[3e4c03f8b589880] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6e23 +0  A3010000
[3e4c03f8b58a56b] jit-backend-dump}
[3e4c03f8b58d4cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6e3b +0  A7010000
[3e4c03f8b58e1bc] jit-backend-dump}
[3e4c03f8b5911fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6e4f +0  AF010000
[3e4c03f8b591eca] jit-backend-dump}
[3e4c03f8b594df6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6e64 +0  B6010000
[3e4c03f8b595ad5] jit-backend-dump}
[3e4c03f8b598af3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6e75 +0  C1010000
[3e4c03f8b5997d1] jit-backend-dump}
[3e4c03f8b59c79f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6e83 +0  CF010000
[3e4c03f8b59d4b8] jit-backend-dump}
[3e4c03f8b5a0510] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee6e9b +0  D3010000
[3e4c03f8b5a11d9] jit-backend-dump}
[3e4c03f8b5a43e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5f30 +0  4C0E0000
[3e4c03f8b5a5120] jit-backend-dump}
[3e4c03f8b5a8ffa] jit-backend}
[3e4c03f8b5ac853] {jit-log-opt-bridge
# bridge out of Guard 0x40b5ec8 with 39 ops
[p0, p1]
+150: guard_class(p1, 16435920, descr=<Guard0x401b040>) [p0, p1]
+162: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+166: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x401b0a0>) [p0, p1]
debug_merge_point(0, 0, '(< n 2.0)')
+185: guard_not_invalidated(descr=<Guard0x40ee608>) [p0, p1]
+185: guard_class(p0, 16504592, descr=<Guard0x40ee650>) [p0, p1]
+197: f6 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+203: i8 = float_lt(f6, 2.000000)
+224: guard_true(i8, descr=<Guard0x40ee698>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
+230: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+241: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x40ee6e0>) [p0, p1]
+250: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+254: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2.0)')
+258: guard_class(p11, 16500016, descr=<Guard0x40ee728>) [p0, p1]
+271: p14 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+275: guard_nonnull_class(p14, ConstClass(W_Flonum), descr=<Guard0x401b100>) [p0, p1]
+295: f16 = getfield_gc_f(p14, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+301: f17 = float_add(f16, f6)
+306: guard_class(p12, 16435920, descr=<Guard0x40ee770>) [p0, p1]
+319: p19 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+330: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x40ee7b8>) [p0, p1]
+339: p21 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+343: p22 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+347: guard_class(p21, 16504592, descr=<Guard0x40ee800>) [p0, p1]
+360: p24 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+364: guard_class(p24, 16505296, descr=<Guard0x40ee848>) [p0, p1]
+377: guard_class(p22, 16435920, descr=<Guard0x40ee890>) [p0, p1]
+391: p27 = getfield_gc_r(p22, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+395: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x401b160>) [p0, p1]
debug_merge_point(0, 0, '(- n 2.0) from (+ AppRand1 AppRand3)')
+415: f29 = getfield_gc_f(p21, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+421: f31 = float_sub(f29, 2.000000)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+436: jump(f31, p27, p24, f17, p22, descr=TargetToken(67694688))
+480: --end of the loop--
[3e4c03f8b5d30db] jit-log-opt-bridge}
[3e4c03f8b691974] {jit-backend
[3e4c03f8b6bc8ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee
[3e4c03f8b6c20a6] jit-backend-dump}
[3e4c03f8b6cb342] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee71c4 +0  1E000000
[3e4c03f8b6cc467] jit-backend-dump}
[3e4c03f8b6cfc84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee72d5 +0  1E000000
[3e4c03f8b6d0a63] jit-backend-dump}
[3e4c03f8b6d3c8f] {jit-backend-addr
bridge out of Guard 0x40b5cd0 has address 0x7f4590ee71c0 to 0x7f4590ee72d0
       gc table: 0x7f4590ee7160
    jump target: 0x7f4590ee71c0
         resops: 0x7f4590ee71ce
       failures: 0x7f4590ee72d0
            end: 0x7f4590ee740e
[3e4c03f8b6d5e59] jit-backend-addr}
[3e4c03f8b6d9360] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee71de +0  30010000
[3e4c03f8b6da1b7] jit-backend-dump}
[3e4c03f8b6dd41d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee71ef +0  3B010000
[3e4c03f8b6de142] jit-backend-dump}
[3e4c03f8b6e11d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7206 +0  40010000
[3e4c03f8b6e1ebb] jit-backend-dump}
[3e4c03f8b6e4ef2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7223 +0  3F010000
[3e4c03f8b6e5bd9] jit-backend-dump}
[3e4c03f8b6e8bae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7237 +0  47010000
[3e4c03f8b6e988c] jit-backend-dump}
[3e4c03f8b6ec8f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee724c +0  4E010000
[3e4c03f8b6ed5cf] jit-backend-dump}
[3e4c03f8b6f058b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee725e +0  58010000
[3e4c03f8b6f1269] jit-backend-dump}
[3e4c03f8b6f4250] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee726b +0  67010000
[3e4c03f8b6f4f2e] jit-backend-dump}
[3e4c03f8b6f7eea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7283 +0  6B010000
[3e4c03f8b6f8be7] jit-backend-dump}
[3e4c03f8b6fbd99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee588b +0  31190000
[3e4c03f8b6fcad0] jit-backend-dump}
[3e4c03f8b7009dd] jit-backend}
[3e4c03f8b7042e5] {jit-log-opt-bridge
# bridge out of Guard 0x40b5cd0 with 27 ops
[p0, p1]
+118: guard_not_invalidated(descr=<Guard0x401b1c0>) [p0, p1]
+118: guard_class(p1, 16504592, descr=<Guard0x40ee8d8>) [p0, p1]
+130: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+134: guard_class(p3, 16500016, descr=<Guard0x40ee920>) [p0, p1]
+147: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+151: guard_nonnull_class(p5, ConstClass(W_Flonum), descr=<Guard0x401b220>) [p0, p1]
+170: f7 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+176: f8 = getfield_gc_f(p5, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+182: f9 = float_add(f8, f7)
+187: guard_class(p0, 16435920, descr=<Guard0x40ee968>) [p0, p1]
+199: p11 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+210: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x40ee9b0>) [p0, p1]
+219: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+223: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+227: guard_class(p13, 16504592, descr=<Guard0x40ee9f8>) [p0, p1]
+240: p16 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+244: guard_class(p16, 16505296, descr=<Guard0x40eea40>) [p0, p1]
+258: guard_class(p14, 16435920, descr=<Guard0x40eea88>) [p0, p1]
+271: p19 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+275: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x401b280>) [p0, p1]
debug_merge_point(0, 0, '(- n 2.0) from (+ AppRand1 AppRand3)')
+295: f21 = getfield_gc_f(p13, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+301: f23 = float_sub(f21, 2.000000)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+316: jump(f23, p19, p16, f9, p14, descr=TargetToken(67694688))
+368: --end of the loop--
[3e4c03f8b71edaf] jit-log-opt-bridge}
[3e4c03f8b803c35] {jit-backend
[3e4c03f8b83d536] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee
[3e4c03f8b841b22] jit-backend-dump}
[3e4c03f8b84adca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7494 +0  1E000000
[3e4c03f8b84be85] jit-backend-dump}
[3e4c03f8b84f648] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee75a5 +0  1E000000
[3e4c03f8b8503c6] jit-backend-dump}
[3e4c03f8b85355f] {jit-backend-addr
bridge out of Guard 0x40ee0f8 has address 0x7f4590ee7490 to 0x7f4590ee75a0
       gc table: 0x7f4590ee7470
    jump target: 0x7f4590ee7490
         resops: 0x7f4590ee749e
       failures: 0x7f4590ee75a0
            end: 0x7f4590ee761f
[3e4c03f8b8555e2] jit-backend-addr}
[3e4c03f8b8589f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee74bd +0  42010000
[3e4c03f8b8597e3] jit-backend-dump}
[3e4c03f8b85cb50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee600f +0  7D140000
[3e4c03f8b85d884] jit-backend-dump}
[3e4c03f8b861782] jit-backend}
[3e4c03f8b8651b6] {jit-log-opt-bridge
# bridge out of Guard 0x40ee0f8 with 27 ops
[f0, p1, p2, f3, p4]
+54: guard_not_invalidated(descr=<Guard0x401b2e0>) [f0, p1, p2, f3, p4]
+54: i6 = float_lt(f3, 2.000000)
+75: guard_false(i6, descr=<Guard0x40eead0>) [f0, p1, p2, f3, p4]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1.0)')
+81: f8 = float_sub(f3, 1.000000)
debug_merge_point(0, 0, '(let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fibfp AppRand0)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)')
+101: p9 = new_with_vtable(descr=<SizeDescr 24>)
+145: p10 = new_with_vtable(descr=<SizeDescr 40>)
+156: p11 = new_with_vtable(descr=<SizeDescr 32>)
+167: setfield_gc(p11, p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+178: p12 = new_with_vtable(descr=<SizeDescr 16>)
+189: setfield_gc(p12, f0, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+195: setfield_gc(p11, p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+199: p13 = new_with_vtable(descr=<SizeDescr 16>)
+211: setfield_gc(p13, f3, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+217: setfield_gc(p11, p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+228: setfield_gc(p9, ConstPtr(ptr14), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+232: setfield_gc(p9, f3, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+238: setfield_gc(p10, p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+249: setfield_gc(p10, p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+253: setfield_gc(p10, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+264: setfield_gc(p10, ConstPtr(ptr15), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+268: jump(ConstPtr(ptr16), f8, p4, p9, p10, descr=TargetToken(67164608))
+304: --end of the loop--
[3e4c03f8b87ed3e] jit-log-opt-bridge}
[3e4c03f8b9877cd] {jit-backend
[3e4c03f8b9b3e02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee76c
[3e4c03f8b9b8fd5] jit-backend-dump}
[3e4c03f8b9c2ace] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7704 +0  1E000000
[3e4c03f8b9c3e63] jit-backend-dump}
[3e4c03f8b9c77c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee77d5 +0  1E000000
[3e4c03f8b9c85bc] jit-backend-dump}
[3e4c03f8b9cb654] {jit-backend-addr
bridge out of Guard 0x40ee140 has address 0x7f4590ee7700 to 0x7f4590ee77d0
       gc table: 0x7f4590ee76c0
    jump target: 0x7f4590ee7700
         resops: 0x7f4590ee770e
       failures: 0x7f4590ee77d0
            end: 0x7f4590ee78ba
[3e4c03f8b9cd889] jit-backend-addr}
[3e4c03f8b9d0fc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee772d +0  E1000000
[3e4c03f8b9d1dd0] jit-backend-dump}
[3e4c03f8b9d4e72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee774a +0  E0000000
[3e4c03f8b9d5b6c] jit-backend-dump}
[3e4c03f8b9d8bd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee775f +0  E7000000
[3e4c03f8b9d993b] jit-backend-dump}
[3e4c03f8b9dc993] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7771 +0  F1000000
[3e4c03f8b9dd690] jit-backend-dump}
[3e4c03f8b9e06e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee777e +0  00010000
[3e4c03f8b9e1425] jit-backend-dump}
[3e4c03f8b9e44a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7796 +0  04010000
[3e4c03f8b9e517d] jit-backend-dump}
[3e4c03f8b9e8420] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee602b +0  D1160000
[3e4c03f8b9e9136] jit-backend-dump}
[3e4c03f8b9ecef9] jit-backend}
[3e4c03f8b9f07f4] {jit-log-opt-bridge
# bridge out of Guard 0x40ee140 with 24 ops
[f0, p1, p2, f3, p4]
+86: guard_not_invalidated(descr=<Guard0x401b340>) [f0, p1, p2, f3, p4]
+86: i6 = float_lt(f3, 2.000000)
+107: guard_true(i6, descr=<Guard0x40eeb18>) [f0, p1, p2, f3, p4]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2.0)')
+113: f7 = float_add(f0, f3)
+122: p8 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+133: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x40eeb60>) [f0, p1, p2, f3, p4]
+142: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+146: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+150: guard_class(p10, 16504592, descr=<Guard0x40eeba8>) [f0, p1, p2, f3, p4]
+163: p13 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+167: guard_class(p13, 16505296, descr=<Guard0x40eebf0>) [f0, p1, p2, f3, p4]
+181: guard_class(p11, 16435920, descr=<Guard0x40eec38>) [f0, p1, p2, f3, p4]
+194: p16 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+198: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x401b3a0>) [f0, p1, p2, f3, p4]
debug_merge_point(0, 0, '(- n 2.0) from (+ AppRand1 AppRand3)')
+218: f18 = getfield_gc_f(p10, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+224: f20 = float_sub(f18, 2.000000)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+239: jump(f20, p16, p13, f7, p11, descr=TargetToken(67694688))
+272: --end of the loop--
[3e4c03f8ba0b256] jit-log-opt-bridge}
[3e4c03f8bac57cb] {jit-backend
[3e4c03f8bafb723] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee
[3e4c03f8bb018f5] jit-backend-dump}
[3e4c03f8bb0abc2] {jit-backend-addr
Loop 13 ((+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)) has address 0x7f4590ee7a7d to 0x7f4590ee7b80 (bootstrap 0x7f4590ee79f0)
       gc table: 0x7f4590ee7990
       function: 0x7f4590ee79f0
         resops: 0x7f4590ee7a7d
       failures: 0x7f4590ee7b80
            end: 0x7f4590ee7cc6
[3e4c03f8bb0d56c] jit-backend-addr}
[3e4c03f8bb11213] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7aa7 +0  03010000
[3e4c03f8bb122ec] jit-backend-dump}
[3e4c03f8bb155db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7ab7 +0  0F010000
[3e4c03f8bb16331] jit-backend-dump}
[3e4c03f8bb1946b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7acd +0  15010000
[3e4c03f8bb1a14d] jit-backend-dump}
[3e4c03f8bb1d2c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7aee +0  10010000
[3e4c03f8bb1df8d] jit-backend-dump}
[3e4c03f8bb2101c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7b02 +0  18010000
[3e4c03f8bb21cca] jit-backend-dump}
[3e4c03f8bb24d9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7b20 +0  32010000
[3e4c03f8bb25a99] jit-backend-dump}
[3e4c03f8bb28b00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7b36 +0  38010000
[3e4c03f8bb297ab] jit-backend-dump}
[3e4c03f8bb2c7d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7b4b +0  3F010000
[3e4c03f8bb2d479] jit-backend-dump}
[3e4c03f8bb30478] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7b5f +0  47010000
[3e4c03f8bb3115a] jit-backend-dump}
[3e4c03f8bb34c5d] jit-backend}
[3e4c03f8bb386d1] {jit-log-opt-loop
# Loop 13 ((+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)) : loop with 32 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(67694768))
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+264: guard_not_invalidated(descr=<Guard0x401b400>) [p1, p0]
+264: guard_class(p0, 16504592, descr=<Guard0x40eec80>) [p1, p0]
+283: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+287: guard_class(p3, 16500016, descr=<Guard0x40eecc8>) [p1, p0]
+299: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+303: guard_nonnull_class(p5, ConstClass(W_Flonum), descr=<Guard0x401b460>) [p1, p0]
+321: f7 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+326: f8 = getfield_gc_f(p5, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+331: f9 = float_add(f8, f7)
+335: guard_class(p1, 16435920, descr=<Guard0x40eed10>) [p1, p0]
+354: p11 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+365: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x40eed58>) [p1, p0]
+374: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+378: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+382: label(p13, f9, p14, descr=TargetToken(67694848))
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+392: guard_not_invalidated(descr=<Guard0x401b4c0>) [p14, f9, p13]
+392: guard_class(p13, 16500016, descr=<Guard0x40eeda0>) [p14, f9, p13]
+404: p16 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+408: guard_nonnull_class(p16, ConstClass(W_Flonum), descr=<Guard0x401b520>) [p14, f9, p13]
+426: f18 = getfield_gc_f(p16, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+431: f19 = float_add(f18, f9)
+435: guard_class(p14, 16435920, descr=<Guard0x40eede8>) [p14, f9, p13]
+447: p21 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+458: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x40eee30>) [p14, f9, p13]
+467: p23 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+471: p24 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+475: jump(p23, f19, p24, descr=TargetToken(67694848))
+496: --end of the loop--
[3e4c03f8bb5707b] jit-log-opt-loop}
[3e4c03f8bc07c0d] {jit-backend
[3e4c03f8bc2d095] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7d40 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C9200000048FF0425E0E44C038139501D01000F85000000004C8B790841813F700B01000F85000000004D8B77104983FE01720741813E201200000F8500000000F2440F107110F2450F106E08F2450F58EE813A101100000F85000000004C8B72204C8B3D76FFFFFF4D39FE0F85000000004C8B7A104C8B72184C89FB4C89F066410F28CD49BB107BEE90457F000041FFE30F1F44000048C7442408FFFFFF0049BBD07CEE90457F00004C895D204D8D9B20B6FFFF41FFD3E948FFFFFFFF35F4FEFFFF49BBE07CEE90457F000041534D8D9B20B3FFFF41FFE3FF35E0FEFFFF49BBF07CEE90457F000041534D8D9B10B3FFFF41FFE3FF35CCFEFFFF49BB007DEE90457F000041534D8D9B00B3FFFF41FFE3FF35B8FEFFFF49BB107DEE90457F000041534D8D9BF0B2FFFF41FFE3FF35A4FEFFFF49BB207DEE90457F000041534D8D9BE0B2FFFF41FFE3FF3598FEFFFF49BB307DEE90457F000041534D8D9BD0B2FFFF41FFE3
[3e4c03f8bc31111] jit-backend-dump}
[3e4c03f8bc3a24a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7d84 +0  1E000000
[3e4c03f8bc3b4bd] jit-backend-dump}
[3e4c03f8bc3ecbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7e25 +0  1E000000
[3e4c03f8bc3fa72] jit-backend-dump}
[3e4c03f8bc42cd8] {jit-backend-addr
bridge out of Guard 0x40b5bb0 has address 0x7f4590ee7d80 to 0x7f4590ee7e20
       gc table: 0x7f4590ee7d40
    jump target: 0x7f4590ee7d80
         resops: 0x7f4590ee7d8e
       failures: 0x7f4590ee7e20
            end: 0x7f4590ee7eee
[3e4c03f8bc44d83] jit-backend-addr}
[3e4c03f8bc4820d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7d9e +0  C0000000
[3e4c03f8bc48f87] jit-backend-dump}
[3e4c03f8bc4c0e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7daf +0  CB000000
[3e4c03f8bc4cdef] jit-backend-dump}
[3e4c03f8bc4fef6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7dc6 +0  D0000000
[3e4c03f8bc50bff] jit-backend-dump}
[3e4c03f8bc53df4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7de3 +0  CF000000
[3e4c03f8bc54ac6] jit-backend-dump}
[3e4c03f8bc57b95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7df7 +0  D7000000
[3e4c03f8bc588b4] jit-backend-dump}
[3e4c03f8bc5bc18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee581f +0  5D250000
[3e4c03f8bc5c958] jit-backend-dump}
[3e4c03f8bc60a12] jit-backend}
[3e4c03f8bc642ab] {jit-log-opt-bridge
# bridge out of Guard 0x40b5bb0 with 16 ops
[p0, p1]
+86: guard_not_invalidated(descr=<Guard0x401b580>) [p0, p1]
+86: guard_class(p1, 16504592, descr=<Guard0x40eee78>) [p0, p1]
+98: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+102: guard_class(p3, 16500016, descr=<Guard0x40eeec0>) [p0, p1]
+115: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+119: guard_nonnull_class(p5, ConstClass(W_Flonum), descr=<Guard0x401b5e0>) [p0, p1]
+138: f7 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+144: f8 = getfield_gc_f(p5, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+150: f9 = float_add(f8, f7)
+155: guard_class(p0, 16435920, descr=<Guard0x40eef08>) [p0, p1]
+167: p11 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+178: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x40eef50>) [p0, p1]
+187: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+191: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+195: jump(p13, f9, p14, descr=TargetToken(67694848))
+224: --end of the loop--
[3e4c03f8bc75b73] jit-log-opt-bridge}
[3e4c03f8bd53b54] {jit-backend
[3e4c03f8bd78117] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7f
[3e4c03f8bd7b905] jit-backend-dump}
[3e4c03f8bd85170] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7f74 +0  1E000000
[3e4c03f8bd86135] jit-backend-dump}
[3e4c03f8bd89b94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7fe5 +0  1E000000
[3e4c03f8bd8a933] jit-backend-dump}
[3e4c03f8bd8d9ff] {jit-backend-addr
bridge out of Guard 0x40ee218 has address 0x7f4590ee7f70 to 0x7f4590ee7fe0
       gc table: 0x7f4590ee7f50
    jump target: 0x7f4590ee7f70
         resops: 0x7f4590ee7f7e
       failures: 0x7f4590ee7fe0
            end: 0x7f4590ee805a
[3e4c03f8bd8fae7] jit-backend-addr}
[3e4c03f8bd9307e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7f9d +0  81000000
[3e4c03f8bd93e20] jit-backend-dump}
[3e4c03f8bd96ef2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7fba +0  80000000
[3e4c03f8bd97bf8] jit-backend-dump}
[3e4c03f8bd9aec3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee607e +0  EE1E0000
[3e4c03f8bd9bc0a] jit-backend-dump}
[3e4c03f8bd9f9e2] jit-backend}
[3e4c03f8bda338c] {jit-log-opt-bridge
# bridge out of Guard 0x40ee218 with 13 ops
[f0, p1, p2, f3, p4]
+54: guard_not_invalidated(descr=<Guard0x401b640>) [f0, p1, p2, f3, p4]
+54: i6 = float_lt(f3, 2.000000)
+75: guard_true(i6, descr=<Guard0x40eef98>) [f0, p1, p2, f3, p4]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2.0)')
+81: f7 = float_add(f0, f3)
+90: p8 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+101: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x40eefe0>) [f0, p1, p2, f3, p4]
+110: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+114: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+118: jump(p10, f7, p11, descr=TargetToken(67694848))
+144: --end of the loop--
[3e4c03f8bdb33f6] jit-log-opt-bridge}
[3e4c03f8bed5aa6] {jit-backend
[3e4c03f8bef6e3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee80f
[3e4c03f8befb44e] jit-backend-dump}
[3e4c03f8bf049f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee8134 +0  1E000000
[3e4c03f8bf05cf6] jit-backend-dump}
[3e4c03f8bf09555] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee81e5 +0  1E000000
[3e4c03f8bf0a31f] jit-backend-dump}
[3e4c03f8bf0d44d] {jit-backend-addr
bridge out of Guard 0x40b5da8 has address 0x7f4590ee8130 to 0x7f4590ee81e0
       gc table: 0x7f4590ee80f0
    jump target: 0x7f4590ee8130
         resops: 0x7f4590ee813e
       failures: 0x7f4590ee81e0
            end: 0x7f4590ee82a8
[3e4c03f8bf0f566] jit-backend-addr}
[3e4c03f8bf1285c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee814e +0  B4000000
[3e4c03f8bf13632] jit-backend-dump}
[3e4c03f8bf16684] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee8165 +0  B9000000
[3e4c03f8bf173b2] jit-backend-dump}
[3e4c03f8bf1a43e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee8171 +0  E5000000
[3e4c03f8bf1b163] jit-backend-dump}
[3e4c03f8bf1e174] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee8192 +0  E0000000
[3e4c03f8bf1ee96] jit-backend-dump}
[3e4c03f8bf21e83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee81b5 +0  D9000000
[3e4c03f8bf22bab] jit-backend-dump}
[3e4c03f8bf25d6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee5ed0 +0  5C220000
[3e4c03f8bf26ae9] jit-backend-dump}
[3e4c03f8bf2a970] jit-backend}
[3e4c03f8bf2e2ec] {jit-log-opt-bridge
# bridge out of Guard 0x40b5da8 with 20 ops
[p0, p1]
+86: guard_class(p1, 16435920, descr=<Guard0x401b6a0>) [p0, p1]
+98: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+102: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x401b700>) [p0, p1]
debug_merge_point(0, 0, '(< n 2.0)')
+121: guard_not_invalidated(descr=<Guard0x40ef028>) [p0, p1]
+121: guard_class(p0, 16504592, descr=<Guard0x40ef070>) [p0, p1]
+133: f6 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+139: i8 = float_lt(f6, 2.000000)
+160: guard_false(i8, descr=<Guard0x40ef0b8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1.0)')
+166: f10 = float_sub(f6, 1.000000)
debug_merge_point(0, 0, '(let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fibfp AppRand0)')
+181: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+192: i13 = instance_ptr_eq(p11, ConstPtr(ptr12))
+195: guard_true(i13, descr=<Guard0x40ef100>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand0)')
+201: jump(p11, f10, p3, p0, p1, descr=TargetToken(67164608))
+240: --end of the loop--
[3e4c03f8bf46098] jit-log-opt-bridge}
[3e4c03f8c0051b8] {jit-backend
[3e4c03f8c03043a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee
[3e4c03f8c035886] jit-backend-dump}
[3e4c03f8c03eae7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee83b4 +0  1E000000
[3e4c03f8c03fc19] jit-backend-dump}
[3e4c03f8c0433e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee84a5 +0  1E000000
[3e4c03f8c04415d] jit-backend-dump}
[3e4c03f8c04724b] {jit-backend-addr
bridge out of Guard 0x40eee30 has address 0x7f4590ee83b0 to 0x7f4590ee84a0
       gc table: 0x7f4590ee8360
    jump target: 0x7f4590ee83b0
         resops: 0x7f4590ee83be
       failures: 0x7f4590ee84a0
            end: 0x7f4590ee85c2
[3e4c03f8c049679] jit-backend-addr}
[3e4c03f8c04ca64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee83ce +0  10010000
[3e4c03f8c04d7bc] jit-backend-dump}
[3e4c03f8c05088f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee83e5 +0  15010000
[3e4c03f8c051542] jit-backend-dump}
[3e4c03f8c05455d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee83fc +0  1A010000
[3e4c03f8c0551ec] jit-backend-dump}
[3e4c03f8c0582a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee8410 +0  22010000
[3e4c03f8c058f62] jit-backend-dump}
[3e4c03f8c05f8bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee8425 +0  29010000
[3e4c03f8c060706] jit-backend-dump}
[3e4c03f8c063838] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee8437 +0  33010000
[3e4c03f8c06457b] jit-backend-dump}
[3e4c03f8c067562] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee8444 +0  42010000
[3e4c03f8c068290] jit-backend-dump}
[3e4c03f8c06b29e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee845c +0  46010000
[3e4c03f8c06bfbd] jit-backend-dump}
[3e4c03f8c06f1fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4590ee7b5f +0  4D080000
[3e4c03f8c06ff72] jit-backend-dump}
[3e4c03f8c07404e] jit-backend}
[3e4c03f8c077990] {jit-log-opt-bridge
# bridge out of Guard 0x40eee30 with 24 ops
[p0, f1, p2]
+102: guard_not_invalidated(descr=<Guard0x401b760>) [p0, f1, p2]
+102: guard_class(p2, 16500016, descr=<Guard0x40ef148>) [p0, f1, p2]
+114: p4 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+118: guard_nonnull_class(p4, ConstClass(W_Flonum), descr=<Guard0x401b7c0>) [p0, f1, p2]
+137: f6 = getfield_gc_f(p4, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+143: f7 = float_add(f6, f1)
+148: guard_class(p0, 16435920, descr=<Guard0x40ef190>) [p0, f1, p2]
+160: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+171: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x40ef1d8>) [p0, f1, p2]
+180: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+184: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+188: guard_class(p11, 16504592, descr=<Guard0x40ef220>) [p0, f1, p2]
+201: p14 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+205: guard_class(p14, 16505296, descr=<Guard0x40ef268>) [p0, f1, p2]
+219: guard_class(p12, 16435920, descr=<Guard0x40ef2b0>) [p0, f1, p2]
+232: p17 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+236: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x401b820>) [p0, f1, p2]
debug_merge_point(0, 0, '(- n 2.0) from (+ AppRand1 AppRand3)')
+256: f19 = getfield_gc_f(p11, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+262: f21 = float_sub(f19, 2.000000)
debug_merge_point(0, 0, '(let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fibfp AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2.0)]) (if if0 n (let ([AppRand0 (- n 1.0)]) (let ([AppRand1 (fibfp AppRand0)][AppRand2 (- n 2.0)]) (let ([AppRand3 (fibfp AppRand2)]) (+ AppRand1 AppRand3)))))) from (fibfp AppRand2)')
+277: jump(f21, p17, p14, f7, p12, descr=TargetToken(67694688))
+320: --end of the loop--
[3e4c03f8c09361b] jit-log-opt-bridge}
[3e4c055c2cac990] {jit-summary
Tracing:      	17	0.009521
Backend:      	17	0.003633
TOTAL:      		36.798788
ops:             	6513
recorded ops:    	1562
  calls:         	0
guards:          	392
opt ops:         	580
opt guards:      	188
opt guards shared:	137
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	38
nvholes:         	0
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	7
Total # of bridges:	10
Freed # of loops:	0
Freed # of bridges:	0
[3e4c055c2cbbe33] jit-summary}
[3e4c055c2cc6243] {jit-backend-counts
entry 1:321
TargetToken(67164528):321
TargetToken(67164608):2986069742
entry 2:109
bridge 67523968:25
entry 4:183
entry 5:345
TargetToken(67694608):345
TargetToken(67694688):2986069551
entry 6:35
entry 7:11
bridge 67523752:1140577245
bridge 67854024:0
bridge 67853520:21
bridge 68083960:1140576748
bridge 68084032:1140577196
entry 13:13
TargetToken(67694768):13
TargetToken(67694848):704915219
bridge 67853232:14
bridge 68084248:269253713
bridge 67853736:208
bridge 68087344:269253482
[3e4c055c2cccd99] jit-backend-counts}
