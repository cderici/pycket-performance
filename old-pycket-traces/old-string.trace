[3e4c283c8c56c09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c283c8c730ec] jit-backend-dump}
[3e4c283c8ccb47f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e0b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c283c8cce961] jit-backend-dump}
[3e4c283c8cdb264] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c283c8cdcd5f] jit-backend-dump}
[3e4c283c8ce33d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e1f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c283c8ce4bd8] jit-backend-dump}
[3e4c283c8cecda1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c283c8ceea42] jit-backend-dump}
[3e4c283c8cf7563] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e2f
[3e4c283c8cfb4b1] jit-backend-dump}
[3e4c283c8d00a13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e
[3e4c283c8d0332a] jit-backend-dump}
[3e4c283c8d08030] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e
[3e4c283c8d0a64a] jit-backend-dump}
[3e4c283c8d9d2eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e
[3e4c283c8da0753] jit-backend-dump}
[3e4c283c8da9583] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9e8f
[3e4c283c8dac3dc] jit-backend-dump}
[3e4c283c8db1806] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9ea70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c283c8db377f] jit-backend-dump}
[3e4c283c8dc64d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9eaf
[3e4c283c8dca140] jit-backend-dump}
[3e4c283c8dd19dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9ece
[3e4c283c8dd4f29] jit-backend-dump}
[3e4c283c8ddc95c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9eee0 +0  4889455848895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC084889D741BB80D2720041FFD3488B0C258893F900488B69F8F64504010F85EA0000004883C4084885C00F84CC0000004889C1488B4558488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B52801000048C7452000000000C34883C40849BB70EAA99EAE7F000041FFE349BB70E2A99EAE7F000041FFD3E904FFFFFF
[3e4c283c8de0113] jit-backend-dump}
[3e4c283c8de62af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9f0d
[3e4c283c8de9cb1] jit-backend-dump}
[3e4c283c8df3724] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9f2c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70E2A99EAE7F000041FFD3E99CFFFFFF
[3e4c283c8df599f] jit-backend-dump}
[3e4c283c8dfab63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9f380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70E2A99EAE7F000041FFD3E9BCFFFFFF
[3e4c283c8dfc330] jit-backend-dump}
[3e4c283c8e0187a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9f
[3e4c283c8e04720] jit-backend-dump}
[3e4c283c8e09b7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9f5c0 +0  4C8985800000004C898D880000004C899590000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC08FFD0488B0C258893F900488B69F8F64504010F85B10000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B528010000C349BB70E2A99EAE7F000041FFD3E93DFFFFFF
[3e4c283c8e0c853] jit-backend-dump}
[3e4c283c8e1cb55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9f750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB70EAA99EAE7F000041FFE3
[3e4c283c8e1e699] jit-backend-dump}
[3e4c283c96b3108] {jit-backend
[3e4c283c9871d89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fa
[3e4c283c988b1f8] jit-backend-dump}
[3e4c283c989b320] {jit-backend-addr
Loop 1 ((let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop AppRand3)) has address 0x7fae9ea9fc1d to 0x7fae9eaa03a0 (bootstrap 0x7fae9ea9fb90)
       gc table: 0x7fae9ea9fa90
       function: 0x7fae9ea9fb90
         resops: 0x7fae9ea9fc1d
       failures: 0x7fae9eaa03a0
            end: 0x7fae9eaa082c
[3e4c283c989f9a2] jit-backend-addr}
[3e4c283c98a4ccf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fc47 +0  D1080000
[3e4c283c98a6184] jit-backend-dump}
[3e4c283c98a974f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fc5d +0  D7080000
[3e4c283c98aa6f0] jit-backend-dump}
[3e4c283c98adb67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fc7a +0  F2080000
[3e4c283c98ae993] jit-backend-dump}
[3e4c283c98b1998] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fc8a +0  FE080000
[3e4c283c98b2725] jit-backend-dump}
[3e4c283c98b5648] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fca5 +0  FF080000
[3e4c283c98b63aa] jit-backend-dump}
[3e4c283c98b92b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fcb6 +0  0A090000
[3e4c283c98ba001] jit-backend-dump}
[3e4c283c98bcf42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fcca +0  12090000
[3e4c283c98bdd12] jit-backend-dump}
[3e4c283c98c0bda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fcd7 +0  21090000
[3e4c283c98c1917] jit-backend-dump}
[3e4c283c98c47d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fce6 +0  2E090000
[3e4c283c98c551b] jit-backend-dump}
[3e4c283c98c83fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fcf3 +0  3D090000
[3e4c283c98c913e] jit-backend-dump}
[3e4c283c98cbf8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fcfc +0  50090000
[3e4c283c98cccde] jit-backend-dump}
[3e4c283c98cfbae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fd06 +0  62090000
[3e4c283c98d08ec] jit-backend-dump}
[3e4c283c98d37a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fe32 +0  52080000
[3e4c283c98d4634] jit-backend-dump}
[3e4c283c98d74fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fe51 +0  4F080000
[3e4c283c98d824e] jit-backend-dump}
[3e4c283c98db0eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fe5d +0  5F080000
[3e4c283c98dbe31] jit-backend-dump}
[3e4c283c98ded48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9ea9fff2 +0  E6060000
[3e4c283c98dfa7c] jit-backend-dump}
[3e4c283c98e29d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0055 +0  BB060000
[3e4c283c98e3735] jit-backend-dump}
[3e4c283c98e6658] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa006a +0  C2060000
[3e4c283c98e738c] jit-backend-dump}
[3e4c283c98ea22e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0079 +0  CF060000
[3e4c283c98eafaf] jit-backend-dump}
[3e4c283c98edede] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0086 +0  DE060000
[3e4c283c98eec3a] jit-backend-dump}
[3e4c283c98f1ac4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa008f +0  F1060000
[3e4c283c98f2832] jit-backend-dump}
[3e4c283c98f5985] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0099 +0  03070000
[3e4c283c98f6749] jit-backend-dump}
[3e4c283c98f96ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa018e +0  2A060000
[3e4c283c98fa40e] jit-backend-dump}
[3e4c283c98fd2c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa01a6 +0  2E060000
[3e4c283c98fdfeb] jit-backend-dump}
[3e4c283c9900e84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa01b2 +0  3E060000
[3e4c283c9901bbe] jit-backend-dump}
[3e4c283c9904ac9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa033a +0  D2040000
[3e4c283c990585c] jit-backend-dump}
[3e4c283c990959b] jit-backend}
[3e4c283c990d3e5] {jit-log-opt-loop
# Loop 1 ((let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop AppRand3)) : loop with 180 ops
[p0, p1]
+405: label(p0, p1, descr=TargetToken(51533072))
debug_merge_point(0, 0, '(let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop AppRand3)')
+424: guard_class(p1, 16435208, descr=<Guard0x30e2500>) [p0, p1]
+443: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+447: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x30e2560>) [p0, p1]
debug_merge_point(0, 0, '(> (string-length s) n)')
+465: guard_not_invalidated(descr=<Guard0x3169850>) [p0, p1]
+472: p6 = getfield_gc_r(ConstPtr(ptr5), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+476: guard_nonnull_class(p6, 16440888, descr=<Guard0x30e25c0>) [p0, p1]
+494: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values_string.W_MutableString.inst_strategy 16>)
+498: guard_class(p8, 16605144, descr=<Guard0x3169898>) [p0, p1]
+510: p10 = getfield_gc_r(p6, descr=<FieldP pycket.values_string.W_MutableString.inst_storage 8>)
+514: i11 = strlen(p10)
+518: guard_class(p0, 16504944, descr=<Guard0x31698e0>) [p0, p1]
+537: p13 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+541: guard_class(p13, 16482960, descr=<Guard0x3169928>) [p0, p1]
+554: p15 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+565: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x3169970>) [p0, p1]
+574: i17 = getfield_gc_i(p13, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+578: i18 = int_gt(i11, i17)
+581: guard_false(i18, descr=<Guard0x31699b8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))')
debug_merge_point(0, 0, '(begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3)))')
debug_merge_point(0, 0, '(grow)')
+587: p19 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([SetBang0 (string-append 123 s 456 s 789)]) (set! s SetBang0))')
debug_merge_point(0, 0, '(string-append 123 s 456 s 789)')
+587: i21 = int_add_ovf(3, i11)
+596: guard_no_overflow(descr=<Guard0x3169a00>) [p0, p1]
+602: i23 = int_add_ovf(i21, 3)
+609: guard_no_overflow(descr=<Guard0x3169a48>) [p0, p1]
+615: i24 = int_add_ovf(i23, i11)
+618: guard_no_overflow(descr=<Guard0x3169a90>) [p0, p1]
+624: i26 = int_add_ovf(i24, 3)
+628: guard_no_overflow(descr=<Guard0x3169ad8>) [p0, p1]
+634: p27 = newstr(i26)
+707: strsetitem(p27, 0, 49)
+712: strsetitem(p27, 1, 50)
+717: strsetitem(p27, 2, 51)
+722: copystrcontent(p10, p27, 0, 3, i11)
+790: strsetitem(p27, i21, 52)
+803: i38 = int_add(i21, 1)
+808: strsetitem(p27, i38, 53)
+814: i40 = int_add(i38, 1)
+818: strsetitem(p27, i40, 54)
+824: i42 = int_add(i40, 1)
+824: i44 = int_add(i21, 3)
+829: copystrcontent(p10, p27, 0, i44, i11)
+871: i46 = int_add(i44, i11)
+878: strsetitem(p27, i46, 55)
+891: i48 = int_add(i46, 1)
+895: strsetitem(p27, i48, 56)
+901: i50 = int_add(i48, 1)
+905: strsetitem(p27, i50, 57)
+911: i52 = int_add(i50, 1)
+911: i54 = int_add(i46, 3)
debug_merge_point(0, 0, '(set! s SetBang0)')
debug_merge_point(0, 0, '(let ([AppRand0 (substring s (quotient (string-length s) 2) (string-length s))][AppRand1 (+ 1 (quotient (string-length s) 2))]) (let ([AppRand2 (substring s 0 AppRand1)]) (let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1))))')
debug_merge_point(0, 0, '(substring s (quotient (string-length s) 2) (string-length s))')
+911: i56 = int_rshift(i26, 1)
+921: i58 = int_lshift(i56, 1)
+921: i60 = int_xor(i26, 2)
+921: i61 = int_ne(i58, i26)
+921: i62 = int_gt(i56, i26)
+928: guard_false(i62, descr=<Guard0x30e2620>) [i26, i56, p27, p1, p0, p3]
+934: i63 = int_sub(i26, i56)
debug_merge_point(0, 0, '(+ 1 (quotient (string-length s) 2))')
+944: i65 = int_add(1, i56)
debug_merge_point(0, 0, '(let ([AppRand2 (substring s 0 AppRand1)]) (let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1)))')
debug_merge_point(0, 0, '(substring s 0 AppRand1)')
+952: i66 = int_gt(i65, i26)
+959: guard_false(i66, descr=<Guard0x3169b20>) [i26, i56, p27, p1, p0, p3]
debug_merge_point(0, 0, '(let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1))')
debug_merge_point(0, 0, '(string-append AppRand0 AppRand2)')
+965: i67 = int_add_ovf(i63, i65)
+971: guard_no_overflow(descr=<Guard0x3169b68>) [i26, i56, p27, p1, p0, p3]
+977: p68 = newstr(i67)
+1044: p69 = newstr(i63)
+1114: copystrcontent(p27, p69, i56, 0, i63)
+1162: copystrcontent(p69, p68, 0, 0, i63)
+1199: p73 = newstr(i65)
+1280: copystrcontent(p27, p73, 0, 0, i65)
+1311: copystrcontent(p73, p68, 0, i63, i65)
debug_merge_point(0, 0, '(set! s SetBang1)')
debug_merge_point(0, 0, 's')
debug_merge_point(0, 0, '(let ([AppRand3 (+ i 1)]) (doloop AppRand3)) from (string-append AppRand0 AppRand2)')
debug_merge_point(0, 0, '(+ i 1)')
+1357: i76 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1369: i78 = int_add_ovf(i76, 1)
+1376: guard_no_overflow(descr=<Guard0x30e2680>) [p0, i76, p68, p13, None, p1, None, p3]
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop AppRand3)')
+1382: p80 = new_with_vtable(descr=<SizeDescr 24>)
+1423: setfield_gc(p80, p68, descr=<FieldP pycket.values_string.W_MutableString.inst_storage 8>)
+1434: setfield_gc(p80, ConstPtr(ptr81), descr=<FieldP pycket.values_string.W_MutableString.inst_strategy 16>)
+1449: setfield_gc(ConstPtr(ptr82), p80, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1453: label(p13, i78, p1, p3, p80, i17, descr=TargetToken(51533152))
debug_merge_point(0, 0, '(let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop AppRand3)')
debug_merge_point(0, 0, '(> (string-length s) n)')
+1464: guard_not_invalidated(descr=<Guard0x30e26e0>) [i78, p13, p1, p3]
+1464: p83 = getfield_gc_r(p80, descr=<FieldP pycket.values_string.W_MutableString.inst_strategy 16>)
+1468: guard_class(p83, 16605144, descr=<Guard0x3169bb0>) [i78, p13, p1, p3]
+1481: p85 = getfield_gc_r(p80, descr=<FieldP pycket.values_string.W_MutableString.inst_storage 8>)
+1485: i86 = strlen(p85)
+1489: i87 = int_gt(i86, i17)
+1496: guard_false(i87, descr=<Guard0x3169bf8>) [i78, p13, p1, p3]
debug_merge_point(0, 0, '(if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))')
debug_merge_point(0, 0, '(begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3)))')
debug_merge_point(0, 0, '(grow)')
debug_merge_point(0, 0, '(let ([SetBang0 (string-append 123 s 456 s 789)]) (set! s SetBang0))')
debug_merge_point(0, 0, '(string-append 123 s 456 s 789)')
+1502: i89 = int_add_ovf(3, i86)
+1511: guard_no_overflow(descr=<Guard0x3169c40>) [i78, p13, p1, p3]
+1517: i91 = int_add_ovf(i89, 3)
+1524: guard_no_overflow(descr=<Guard0x3169c88>) [i78, p13, p1, p3]
+1530: i92 = int_add_ovf(i91, i86)
+1533: guard_no_overflow(descr=<Guard0x3169cd0>) [i78, p13, p1, p3]
+1539: i94 = int_add_ovf(i92, 3)
+1543: guard_no_overflow(descr=<Guard0x3169d18>) [i78, p13, p1, p3]
+1549: p95 = newstr(i94)
+1619: strsetitem(p95, 0, 49)
+1624: strsetitem(p95, 1, 50)
+1629: strsetitem(p95, 2, 51)
+1634: copystrcontent(p85, p95, 0, 3, i86)
+1667: strsetitem(p95, i89, 52)
+1680: i105 = int_add(i89, 1)
+1684: strsetitem(p95, i105, 53)
+1690: i107 = int_add(i105, 1)
+1694: strsetitem(p95, i107, 54)
+1700: i109 = int_add(i107, 1)
+1700: i111 = int_add(i89, 3)
+1704: copystrcontent(p85, p95, 0, i111, i86)
+1738: i113 = int_add(i111, i86)
+1745: strsetitem(p95, i113, 55)
+1758: i115 = int_add(i113, 1)
+1763: strsetitem(p95, i115, 56)
+1769: i117 = int_add(i115, 1)
+1773: strsetitem(p95, i117, 57)
+1779: i119 = int_add(i117, 1)
+1779: i121 = int_add(i113, 3)
debug_merge_point(0, 0, '(set! s SetBang0)')
debug_merge_point(0, 0, '(let ([AppRand0 (substring s (quotient (string-length s) 2) (string-length s))][AppRand1 (+ 1 (quotient (string-length s) 2))]) (let ([AppRand2 (substring s 0 AppRand1)]) (let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1))))')
debug_merge_point(0, 0, '(substring s (quotient (string-length s) 2) (string-length s))')
+1779: i123 = int_rshift(i94, 1)
+1785: i125 = int_lshift(i123, 1)
+1785: i127 = int_xor(i94, 2)
+1785: i128 = int_ne(i125, i94)
+1785: i129 = int_gt(i123, i94)
+1788: guard_false(i129, descr=<Guard0x30e2740>) [i94, i123, p95, i78, p13, p1, p3]
+1794: i130 = int_sub(i94, i123)
debug_merge_point(0, 0, '(+ 1 (quotient (string-length s) 2))')
+1800: i132 = int_add(1, i123)
debug_merge_point(0, 0, '(let ([AppRand2 (substring s 0 AppRand1)]) (let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1)))')
debug_merge_point(0, 0, '(substring s 0 AppRand1)')
+1809: i133 = int_gt(i132, i94)
+1812: guard_false(i133, descr=<Guard0x3169d60>) [i94, i123, p95, i78, p13, p1, p3]
debug_merge_point(0, 0, '(let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1))')
debug_merge_point(0, 0, '(string-append AppRand0 AppRand2)')
+1818: i134 = int_add_ovf(i130, i132)
+1824: guard_no_overflow(descr=<Guard0x3169da8>) [i94, i123, p95, i78, p13, p1, p3]
+1830: p135 = newstr(i134)
+1897: p136 = newstr(i130)
+1967: copystrcontent(p95, p136, i123, 0, i130)
+2015: copystrcontent(p136, p135, 0, 0, i130)
+2053: p139 = newstr(i132)
+2134: copystrcontent(p95, p139, 0, 0, i132)
+2164: copystrcontent(p139, p135, 0, i130, i132)
debug_merge_point(0, 0, '(set! s SetBang1)')
debug_merge_point(0, 0, 's')
debug_merge_point(0, 0, '(let ([AppRand3 (+ i 1)]) (doloop AppRand3)) from (string-append AppRand0 AppRand2)')
debug_merge_point(0, 0, '(+ i 1)')
+2209: i143 = int_add_ovf(i78, 1)
+2216: guard_no_overflow(descr=<Guard0x30e27a0>) [i78, p135, None, None, p13, p1, p3]
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop AppRand3)')
+2222: p144 = new_with_vtable(descr=<SizeDescr 24>)
+2263: setfield_gc(p144, p135, descr=<FieldP pycket.values_string.W_MutableString.inst_storage 8>)
+2274: setfield_gc(p144, ConstPtr(ptr145), descr=<FieldP pycket.values_string.W_MutableString.inst_strategy 16>)
+2297: setfield_gc(ConstPtr(ptr146), p144, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2302: jump(p13, i143, p1, p3, p144, i17, descr=TargetToken(51533152))
+2320: --end of the loop--
[3e4c283c99c76b3] jit-log-opt-loop}
[3e4c283ca36fcbb] {jit-backend
[3e4c283ca3b06fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa08e
[3e4c283ca3b7cd2] jit-backend-dump}
[3e4c283ca3cb057] {jit-backend-addr
Loop 2 ((let ([AppRand3 (+ i 1)]) (doloop AppRand3)) from (string-append AppRand0 AppRand2)) has address 0x7fae9eaa09cd to 0x7fae9eaa0aa0 (bootstrap 0x7fae9eaa0940)
       gc table: 0x7fae9eaa08e0
       function: 0x7fae9eaa0940
         resops: 0x7fae9eaa09cd
       failures: 0x7fae9eaa0aa0
            end: 0x7fae9eaa0bae
[3e4c283ca3ce3cd] jit-backend-addr}
[3e4c283ca3d271e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa09e4 +0  CA000000
[3e4c283ca3d3a1b] jit-backend-dump}
[3e4c283ca3d6ecc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa09fb +0  CF000000
[3e4c283ca3d7cfb] jit-backend-dump}
[3e4c283ca3db025] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0a11 +0  D5000000
[3e4c283ca3dbdfb] jit-backend-dump}
[3e4c283ca3defe1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0a1f +0  FF000000
[3e4c283ca3dfcf3] jit-backend-dump}
[3e4c283ca3e2d48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0a2b +0  0F010000
[3e4c283ca3e3a36] jit-backend-dump}
[3e4c283ca3e6a66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0a3f +0  17010000
[3e4c283ca3e775d] jit-backend-dump}
[3e4c283ca3edc32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0a5c +0  16010000
[3e4c283ca3eeaf1] jit-backend-dump}
[3e4c283ca3f20e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0a6a +0  24010000
[3e4c283ca3f2e2a] jit-backend-dump}
[3e4c283ca3f6b91] jit-backend}
[3e4c283ca3fa783] {jit-log-opt-loop
# Loop 2 ((let ([AppRand3 (+ i 1)]) (doloop AppRand3)) from (string-append AppRand0 AppRand2)) : entry bridge with 23 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (+ i 1)]) (doloop AppRand3)) from (string-append AppRand0 AppRand2)')
+245: guard_class(p0, 16504944, descr=<Guard0x30e28c0>) [p1, p0]
+264: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+268: guard_class(p1, 16435208, descr=<Guard0x3169e80>) [p1, p0]
+287: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+291: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x30e2920>) [p1, p0]
debug_merge_point(0, 0, '(+ i 1)')
+309: guard_not_invalidated(descr=<Guard0x3169ec8>) [p1, p0]
+309: i7 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+313: i9 = int_add_ovf(i7, 1)
+317: guard_no_overflow(descr=<Guard0x3169f10>) [p1, p0]
debug_merge_point(0, 0, '(doloop AppRand3)')
+323: guard_class(p3, 16482960, descr=<Guard0x3169f58>) [p1, p0]
+335: p11 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+346: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3169fa0>) [p1, p0]
debug_merge_point(0, 0, '(let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop AppRand3)')
+362: p14 = getfield_gc_r(ConstPtr(ptr13), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+366: guard_nonnull_class(p14, 16440888, descr=<Guard0x30e2980>) [p1, i9, p3]
+384: i16 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+388: i18 = int_ge(i16, 0)
+392: guard_true(i18, descr=<Guard0x30e29e0>) [p1, i9, p3]
+398: p19 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+398: jump(p3, i9, p1, p5, p14, i16, descr=TargetToken(51533152))
+448: --end of the loop--
[3e4c283ca41870e] jit-log-opt-loop}
[3e4c283cd98a92d] {jit-backend
[3e4c283cda40fa7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0cd
[3e4c283cda4d8e4] jit-backend-dump}
[3e4c283cda6740d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0d84 +0  25000000
[3e4c283cda68a9f] jit-backend-dump}
[3e4c283cda6d1e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1025 +0  25000000
[3e4c283cda6e1b4] jit-backend-dump}
[3e4c283cda7155e] {jit-backend-addr
bridge out of Guard 0x3169bf8 has address 0x7fae9eaa0d80 to 0x7fae9eaa1020
       gc table: 0x7fae9eaa0cd0
    jump target: 0x7fae9eaa0d80
         resops: 0x7fae9eaa0d8e
       failures: 0x7fae9eaa1020
            end: 0x7fae9eaa122f
[3e4c283cda73ff4] jit-backend-addr}
[3e4c283cda77960] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0db0 +0  F3020000
[3e4c283cda787d2] jit-backend-dump}
[3e4c283cda7bb98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0dc2 +0  FD020000
[3e4c283cda7ca0a] jit-backend-dump}
[3e4c283cda7fafe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0de5 +0  F6020000
[3e4c283cda80820] jit-backend-dump}
[3e4c283cda83860] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0df2 +0  05030000
[3e4c283cda8460b] jit-backend-dump}
[3e4c283cda87654] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e11 +0  02030000
[3e4c283cda88388] jit-backend-dump}
[3e4c283cda8b29b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e26 +0  09030000
[3e4c283cda8bfc6] jit-backend-dump}
[3e4c283cda8ef8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e3d +0  0E030000
[3e4c283cda8fd21] jit-backend-dump}
[3e4c283cda92cf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e4e +0  19030000
[3e4c283cda93a3f] jit-backend-dump}
[3e4c283cda96a32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e64 +0  1F030000
[3e4c283cda97772] jit-backend-dump}
[3e4c283cda9a6c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e72 +0  2D030000
[3e4c283cda9b3e5] jit-backend-dump}
[3e4c283cda9e46b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e7e +0  3D030000
[3e4c283cda9f247] jit-backend-dump}
[3e4c283cdaa21e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e92 +0  45030000
[3e4c283cdaa2efa] jit-backend-dump}
[3e4c283cdaa5de3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e9c +0  57030000
[3e4c283cdaa6aef] jit-backend-dump}
[3e4c283cdaa99fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0ec6 +0  49030000
[3e4c283cdaaa706] jit-backend-dump}
[3e4c283cdaaf4aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa006a +0  120D0000
[3e4c283cdab031f] jit-backend-dump}
[3e4c283cdab7453] jit-backend}
[3e4c283cdabb22b] {jit-log-opt-bridge
# bridge out of Guard 0x3169bf8 with 114 ops
[i0, p1, p2, p3]
+198: guard_not_invalidated(descr=<Guard0x30e2a40>) [i0, p1, p2, p3]
+205: p5 = getfield_gc_r(ConstPtr(ptr4), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+209: guard_nonnull_class(p5, 16440888, descr=<Guard0x30e2aa0>) [i0, p1, p2, p3]
+228: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values_string.W_MutableString.inst_strategy 16>)
+232: guard_class(p7, 16605144, descr=<Guard0x3222020>) [i0, p1, p2, p3]
+246: p9 = getfield_gc_r(p5, descr=<FieldP pycket.values_string.W_MutableString.inst_storage 8>)
+250: i10 = strlen(p9)
+254: p11 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+272: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3222068>) [i0, p1, p2, p3]
+281: i13 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+285: i14 = int_gt(i10, i13)
+288: guard_true(i14, descr=<Guard0x32220b0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))')
debug_merge_point(0, 0, '(begin (void) (string-length s))')
+294: p15 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+294: p16 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+306: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x30e2b00>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(string-length s)')
+325: p18 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+337: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x32220f8>) [i0, p1, p2, p3]
+346: p20 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+351: p21 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4)) from (string-length s)')
+356: guard_class(p20, 16504944, descr=<Guard0x3222140>) [i0, p1, p2, p3]
+369: p23 = getfield_gc_r(p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+373: guard_class(p21, 16435208, descr=<Guard0x3222188>) [i0, p1, p2, p3]
+386: p25 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+390: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x30e2b60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i4838 1)')
+408: i27 = getfield_gc_i(p20, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+412: i29 = int_add_ovf(i27, 1)
+416: guard_no_overflow(descr=<Guard0x32221d0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop4836 AppRand4)')
+422: guard_class(p23, 16482960, descr=<Guard0x3222218>) [i0, p1, p2, p3]
+434: p31 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+445: guard_value(p31, ConstPtr(ptr32), descr=<Guard0x3222260>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (>= i4838 10)]) (if if1 (begin (void) (string-length s)) (begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4))))) from (doloop4836 AppRand4)')
debug_merge_point(0, 0, '(>= i4838 10)')
+454: i34 = int_ge(i29, 10)
+458: guard_false(i34, descr=<Guard0x32222a8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 (begin (void) (string-length s)) (begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4))))')
debug_merge_point(0, 0, '(begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4)))')
debug_merge_point(0, 0, '(set! s abcdef)')
debug_merge_point(0, 0, '(trial n4834)')
+464: i35 = getfield_gc_i(p23, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+468: p36 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([doloop (lambda (i) (let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))))]) (doloop 0))')
debug_merge_point(0, 0, '(lambda (i) (let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))))')
debug_merge_point(0, 0, '(doloop 0)')
debug_merge_point(0, 0, '(let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop 0)')
debug_merge_point(0, 0, '(> (string-length s) n)')
+486: setfield_gc(ConstPtr(ptr37), ConstPtr(ptr38), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+496: i40 = int_gt(6, i35)
guard_false(i40, descr=<Guard0x30e2bc0>) [i40, i29, p23, p21, i35, p25, None, None, None, None]
debug_merge_point(0, 0, '(if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))')
debug_merge_point(0, 0, '(begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3)))')
debug_merge_point(0, 0, '(grow)')
debug_merge_point(0, 0, '(let ([SetBang0 (string-append 123 s 456 s 789)]) (set! s SetBang0))')
debug_merge_point(0, 0, '(string-append 123 s 456 s 789)')
debug_merge_point(0, 0, '(set! s SetBang0)')
debug_merge_point(0, 0, '(let ([AppRand0 (substring s (quotient (string-length s) 2) (string-length s))][AppRand1 (+ 1 (quotient (string-length s) 2))]) (let ([AppRand2 (substring s 0 AppRand1)]) (let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1))))')
debug_merge_point(0, 0, '(substring s (quotient (string-length s) 2) (string-length s))')
debug_merge_point(0, 0, '(+ 1 (quotient (string-length s) 2))')
debug_merge_point(0, 0, '(let ([AppRand2 (substring s 0 AppRand1)]) (let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1)))')
debug_merge_point(0, 0, '(substring s 0 AppRand1)')
debug_merge_point(0, 0, '(let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1))')
debug_merge_point(0, 0, '(string-append AppRand0 AppRand2)')
debug_merge_point(0, 0, '(set! s SetBang1)')
debug_merge_point(0, 0, 's')
debug_merge_point(0, 0, '(let ([AppRand3 (+ i 1)]) (doloop AppRand3)) from (string-append AppRand0 AppRand2)')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop AppRand3)')
+506: p42 = new_with_vtable(descr=<SizeDescr 24>)
+553: p44 = newstr(22)
+580: strsetitem(p44, 0, 53)
+585: strsetitem(p44, 1, 54)
+590: strsetitem(p44, 2, 97)
+595: strsetitem(p44, 3, 98)
+600: strsetitem(p44, 4, 99)
+605: strsetitem(p44, 5, 100)
+610: strsetitem(p44, 6, 101)
+615: strsetitem(p44, 7, 102)
+620: strsetitem(p44, 8, 55)
+625: strsetitem(p44, 9, 56)
+630: strsetitem(p44, 10, 57)
+635: strsetitem(p44, 11, 49)
+640: strsetitem(p44, 12, 50)
+645: strsetitem(p44, 13, 51)
+650: strsetitem(p44, 14, 97)
+655: strsetitem(p44, 15, 98)
+660: strsetitem(p44, 16, 99)
+665: strsetitem(p44, 17, 100)
+670: strsetitem(p44, 18, 101)
+675: strsetitem(p44, 19, 102)
+680: strsetitem(p44, 20, 52)
+685: strsetitem(p44, 21, 53)
+690: setfield_gc(p42, p44, descr=<FieldP pycket.values_string.W_MutableString.inst_storage 8>)
+701: setfield_gc(p42, ConstPtr(ptr88), descr=<FieldP pycket.values_string.W_MutableString.inst_strategy 16>)
+716: setfield_gc(ConstPtr(ptr89), p42, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+720: p90 = new_with_vtable(descr=<SizeDescr 32>)
+731: p91 = new_with_vtable(descr=<SizeDescr 40>)
+742: p92 = new_with_vtable(descr=<SizeDescr 24>)
+753: setfield_gc(p92, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+757: setfield_gc(p92, i29, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+761: setfield_gc(p90, ConstPtr(ptr93), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: setfield_gc(p90, i35, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+776: setfield_gc(p90, ConstPtr(ptr94), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+780: setfield_gc(p91, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+784: setfield_gc(p91, ConstPtr(ptr95), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+788: setfield_gc(p91, p92, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+792: setfield_gc(p91, p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+796: jump(p90, 1, p91, p25, p42, i35, descr=TargetToken(51533152))
+848: --end of the loop--
[3e4c283cdb2a6c6] jit-log-opt-bridge}
[3e4c283f0046792] {jit-backend
[3e4c283f010b1d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa13e
[3e4c283f011a0da] jit-backend-dump}
[3e4c283f01385c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa14f4 +0  25000000
[3e4c283f0139c95] jit-backend-dump}
[3e4c283f013dda1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1815 +0  25000000
[3e4c283f013ecff] jit-backend-dump}
[3e4c283f0142252] {jit-backend-addr
bridge out of Guard 0x32222a8 has address 0x7fae9eaa14f0 to 0x7fae9eaa1810
       gc table: 0x7fae9eaa13e0
    jump target: 0x7fae9eaa14f0
         resops: 0x7fae9eaa14fe
       failures: 0x7fae9eaa1810
            end: 0x7fae9eaa1b07
[3e4c283f0144dbe] jit-backend-addr}
[3e4c283f0148618] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1520 +0  5F030000
[3e4c283f0149428] jit-backend-dump}
[3e4c283f014c513] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1531 +0  6A030000
[3e4c283f014d25f] jit-backend-dump}
[3e4c283f01502ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa154d +0  6A030000
[3e4c283f015104a] jit-backend-dump}
[3e4c283f01541af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa155a +0  79030000
[3e4c283f0154eac] jit-backend-dump}
[3e4c283f0157f38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1572 +0  7D030000
[3e4c283f0158bd9] jit-backend-dump}
[3e4c283f015bab9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1587 +0  84030000
[3e4c283f015c773] jit-backend-dump}
[3e4c283f015f7af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa159e +0  89030000
[3e4c283f0160456] jit-backend-dump}
[3e4c283f0163440] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa15af +0  94030000
[3e4c283f0164103] jit-backend-dump}
[3e4c283f0167032] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa15c5 +0  9A030000
[3e4c283f0167cec] jit-backend-dump}
[3e4c283f016ade9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa15d3 +0  A8030000
[3e4c283f016bac8] jit-backend-dump}
[3e4c283f016e9c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa15e0 +0  B7030000
[3e4c283f016f689] jit-backend-dump}
[3e4c283f0172596] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa15f4 +0  BF030000
[3e4c283f0173250] jit-backend-dump}
[3e4c283f0176192] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa15fe +0  D1030000
[3e4c283f0176e58] jit-backend-dump}
[3e4c283f0179d50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1612 +0  D9030000
[3e4c283f017aa00] jit-backend-dump}
[3e4c283f017d911] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1626 +0  E1030000
[3e4c283f017e5cb] jit-backend-dump}
[3e4c283f01814c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1637 +0  EC030000
[3e4c283f01821d2] jit-backend-dump}
[3e4c283f01850af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa164d +0  F2030000
[3e4c283f0185d5f] jit-backend-dump}
[3e4c283f0188c5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa165b +0  00040000
[3e4c283f0189902] jit-backend-dump}
[3e4c283f018c822] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa166f +0  08040000
[3e4c283f018d4cf] jit-backend-dump}
[3e4c283f01903be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa167c +0  17040000
[3e4c283f0191066] jit-backend-dump}
[3e4c283f0193f0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa1689 +0  26040000
[3e4c283f0194bc2] jit-backend-dump}
[3e4c283f0197ab4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa169f +0  2C040000
[3e4c283f01987f7] jit-backend-dump}
[3e4c283f019b73c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa16ac +0  3B040000
[3e4c283f019c3f3] jit-backend-dump}
[3e4c283f019f6cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fae9eaa0e9c +0  50060000
[3e4c283f01a0423] jit-backend-dump}
[3e4c283f01a4f35] jit-backend}
[3e4c283f01a8a7c] {jit-log-opt-bridge
# bridge out of Guard 0x32222a8 with 149 ops
[i0, p1, p2, p3]
+294: guard_not_invalidated(descr=<Guard0x30e2c20>) [i0, p1, p2, p3]
+301: p5 = getfield_gc_r(ConstPtr(ptr4), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+305: guard_nonnull_class(p5, 16440888, descr=<Guard0x30e2c80>) [i0, p1, p2, p3]
+324: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values_string.W_MutableString.inst_strategy 16>)
+328: guard_class(p7, 16605144, descr=<Guard0x32222f0>) [i0, p1, p2, p3]
+341: p9 = getfield_gc_r(p5, descr=<FieldP pycket.values_string.W_MutableString.inst_storage 8>)
+345: i10 = strlen(p9)
+349: p11 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+360: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3222338>) [i0, p1, p2, p3]
+369: i13 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+373: i14 = int_gt(i10, i13)
+376: guard_true(i14, descr=<Guard0x3222380>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))')
debug_merge_point(0, 0, '(begin (void) (string-length s))')
+382: p15 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+382: p16 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+387: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x30e2ce0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(string-length s)')
+406: p18 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+418: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x32223c8>) [i0, p1, p2, p3]
+427: p20 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+432: p21 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4)) from (string-length s)')
+437: guard_class(p20, 16504944, descr=<Guard0x3222410>) [i0, p1, p2, p3]
+450: p23 = getfield_gc_r(p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+454: guard_class(p21, 16435208, descr=<Guard0x3222458>) [i0, p1, p2, p3]
+467: p25 = getfield_gc_r(p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+471: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x30e2d40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i4838 1)')
+489: i27 = getfield_gc_i(p20, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+493: i29 = int_add_ovf(i27, 1)
+497: guard_no_overflow(descr=<Guard0x32224a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop4836 AppRand4)')
+503: guard_class(p23, 16482960, descr=<Guard0x32224e8>) [i0, p1, p2, p3]
+516: p31 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+527: guard_value(p31, ConstPtr(ptr32), descr=<Guard0x3222530>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (>= i4838 10)]) (if if1 (begin (void) (string-length s)) (begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4))))) from (doloop4836 AppRand4)')
debug_merge_point(0, 0, '(>= i4838 10)')
+536: i34 = int_ge(i29, 10)
+540: guard_true(i34, descr=<Guard0x3222578>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 (begin (void) (string-length s)) (begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4))))')
debug_merge_point(0, 0, '(begin (void) (string-length s))')
+546: p35 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(string-length s)')
+546: p36 = getfield_gc_r(p21, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+557: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x32225c0>) [i0, p1, p2, p3]
+566: p38 = getfield_gc_r(p21, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+570: p39 = getfield_gc_r(p21, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4854 (add1 i4856)) from (string-length s)')
+574: guard_class(p38, 16504944, descr=<Guard0x3222608>) [i0, p1, p2, p3]
+586: p41 = getfield_gc_r(p38, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+590: guard_class(p41, 16499664, descr=<Guard0x3222650>) [i0, p1, p2, p3]
+603: p43 = getfield_gc_r(p41, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+607: guard_nonnull_class(p43, 16510992, descr=<Guard0x30e2da0>) [i0, p1, p2, p3]
+625: i45 = getfield_gc_i(p38, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+629: i47 = int_add_ovf(i45, 1)
+633: guard_no_overflow(descr=<Guard0x3222698>) [i0, p1, p2, p3]
+639: p48 = getfield_gc_r(p43, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+650: guard_value(p48, ConstPtr(ptr49), descr=<Guard0x32226e0>) [i0, p1, p2, p3]
+659: p50 = getfield_gc_r(p43, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+663: i51 = instance_ptr_eq(p41, p50)
+666: guard_true(i51, descr=<Guard0x3222728>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if3 (> i4856 string-iters)]) (if if3 (begin (void) (void)) (begin (my-try 500000) (doloop4854 (add1 i4856))))) from (doloop4854 (add1 i4856))')
+672: guard_class(p39, 16528368, descr=<Guard0x3222770>) [i0, p1, p2, p3]
+685: p53 = getfield_gc_r(p39, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+689: guard_nonnull_class(p53, ConstClass(ForwardLink), descr=<Guard0x30e2e00>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(> i4856 string-iters)')
+707: i56 = int_gt(i47, 600)
+714: guard_false(i56, descr=<Guard0x32227b8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (begin (void) (void)) (begin (my-try 500000) (doloop4854 (add1 i4856))))')
debug_merge_point(0, 0, '(begin (my-try 500000) (doloop4854 (add1 i4856)))')
debug_merge_point(0, 0, '(my-try 500000)')
+720: p57 = getfield_gc_r(p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([doloop4836 (lambda (i4838) (let ([if1 (>= i4838 10)]) (if if1 (begin (void) (string-length s)) (begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4))))))]) (doloop4836 0))')
debug_merge_point(0, 0, '(lambda (i4838) (let ([if1 (>= i4838 10)]) (if if1 (begin (void) (string-length s)) (begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4))))))')
debug_merge_point(0, 0, '(doloop4836 0)')
debug_merge_point(0, 0, '(let ([if1 (>= i4838 10)]) (if if1 (begin (void) (string-length s)) (begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4))))) from (doloop4836 0)')
debug_merge_point(0, 0, '(>= i4838 10)')
debug_merge_point(0, 0, '(if if1 (begin (void) (string-length s)) (begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4))))')
debug_merge_point(0, 0, '(begin (set! s abcdef) (trial n4834) (let ([AppRand4 (+ i4838 1)]) (doloop4836 AppRand4)))')
debug_merge_point(0, 0, '(set! s abcdef)')
debug_merge_point(0, 0, '(trial n4834)')
debug_merge_point(0, 0, '(let ([doloop (lambda (i) (let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))))]) (doloop 0))')
debug_merge_point(0, 0, '(lambda (i) (let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))))')
debug_merge_point(0, 0, '(doloop 0)')
debug_merge_point(0, 0, '(let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop 0)')
debug_merge_point(0, 0, '(> (string-length s) n)')
debug_merge_point(0, 0, '(if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))')
debug_merge_point(0, 0, '(begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3)))')
debug_merge_point(0, 0, '(grow)')
debug_merge_point(0, 0, '(let ([SetBang0 (string-append 123 s 456 s 789)]) (set! s SetBang0))')
debug_merge_point(0, 0, '(string-append 123 s 456 s 789)')
debug_merge_point(0, 0, '(set! s SetBang0)')
debug_merge_point(0, 0, '(let ([AppRand0 (substring s (quotient (string-length s) 2) (string-length s))][AppRand1 (+ 1 (quotient (string-length s) 2))]) (let ([AppRand2 (substring s 0 AppRand1)]) (let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1))))')
debug_merge_point(0, 0, '(substring s (quotient (string-length s) 2) (string-length s))')
debug_merge_point(0, 0, '(+ 1 (quotient (string-length s) 2))')
debug_merge_point(0, 0, '(let ([AppRand2 (substring s 0 AppRand1)]) (let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1)))')
debug_merge_point(0, 0, '(substring s 0 AppRand1)')
debug_merge_point(0, 0, '(let ([SetBang1 (string-append AppRand0 AppRand2)]) (set! s SetBang1))')
debug_merge_point(0, 0, '(string-append AppRand0 AppRand2)')
debug_merge_point(0, 0, '(set! s SetBang1)')
debug_merge_point(0, 0, 's')
debug_merge_point(0, 0, '(let ([AppRand3 (+ i 1)]) (doloop AppRand3)) from (string-append AppRand0 AppRand2)')
debug_merge_point(0, 0, '(+ i 1)')
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(let ([if0 (> (string-length s) n)]) (if if0 (begin (void) (string-length s)) (begin (grow) (let ([AppRand3 (+ i 1)]) (doloop AppRand3))))) from (doloop AppRand3)')
+720: p58 = new_with_vtable(descr=<SizeDescr 24>)
+767: p60 = newstr(22)
+794: strsetitem(p60, 0, 53)
+799: strsetitem(p60, 1, 54)
+804: strsetitem(p60, 2, 97)
+809: strsetitem(p60, 3, 98)
+814: strsetitem(p60, 4, 99)
+819: strsetitem(p60, 5, 100)
+824: strsetitem(p60, 6, 101)
+829: strsetitem(p60, 7, 102)
+834: strsetitem(p60, 8, 55)
+839: strsetitem(p60, 9, 56)
+844: strsetitem(p60, 10, 57)
+849: strsetitem(p60, 11, 49)
+854: strsetitem(p60, 12, 50)
+859: strsetitem(p60, 13, 51)
+864: strsetitem(p60, 14, 97)
+869: strsetitem(p60, 15, 98)
+874: strsetitem(p60, 16, 99)
+879: strsetitem(p60, 17, 100)
+884: strsetitem(p60, 18, 101)
+889: strsetitem(p60, 19, 102)
+894: strsetitem(p60, 20, 52)
+899: strsetitem(p60, 21, 53)
+904: setfield_gc(p58, p60, descr=<FieldP pycket.values_string.W_MutableString.inst_storage 8>)
+915: setfield_gc(p58, ConstPtr(ptr104), descr=<FieldP pycket.values_string.W_MutableString.inst_strategy 16>)
+930: setfield_gc(ConstPtr(ptr105), p58, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+934: p106 = new_with_vtable(descr=<SizeDescr 40>)
+945: p107 = new_with_vtable(descr=<SizeDescr 40>)
+956: setfield_gc(p107, p53, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+960: p108 = new_with_vtable(descr=<SizeDescr 24>)
+972: setfield_gc(p108, p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+976: setfield_gc(p108, i47, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+980: setfield_gc(p107, p108, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+984: setfield_gc(p107, p39, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+988: setfield_gc(p107, ConstPtr(ptr109), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+992: setfield_gc(p106, p53, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+996: setfield_gc(p106, ConstPtr(ptr110), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1007: setfield_gc(p106, ConstPtr(ptr111), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1011: setfield_gc(p106, p107, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1022: jump(ConstPtr(ptr112), 1, p106, p53, p58, 500000, descr=TargetToken(51533152))
+1072: --end of the loop--
[3e4c283f022b675] jit-log-opt-bridge}
[3e4c29258dff24e] {jit-summary
Tracing:      	4	0.008219
Backend:      	4	0.002211
TOTAL:      		24.113999
ops:             	6812
recorded ops:    	1587
  calls:         	20
guards:          	411
opt ops:         	475
opt guards:      	87
opt guards shared:	64
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	37
nvholes:         	5
nvreused:        	1
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	2
Total # of bridges:	2
Freed # of loops:	0
Freed # of bridges:	0
[3e4c29258e151fc] jit-summary}
[3e4c29258e1fbcf] {jit-backend-counts
entry 1:6
TargetToken(51533072):6
TargetToken(51533152):899859
entry 2:108
bridge 51813368:59941
bridge 52568744:5942
[3e4c29258e22f9b] jit-backend-counts}
