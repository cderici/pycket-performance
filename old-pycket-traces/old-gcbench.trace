[3e4c02e860bbe0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c02e860cf74f] jit-backend-dump}
[3e4c02e8610e985] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e0b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c02e86111c6c] jit-backend-dump}
[3e4c02e8611d70c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c02e8611f904] jit-backend-dump}
[3e4c02e86125ca7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e1f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c02e86127d40] jit-backend-dump}
[3e4c02e8612ff83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c02e861319df] jit-backend-dump}
[3e4c02e8613b016] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e2f
[3e4c02e8613f13b] jit-backend-dump}
[3e4c02e861448f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e
[3e4c02e86146c62] jit-backend-dump}
[3e4c02e8614b820] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e
[3e4c02e8614db5d] jit-backend-dump}
[3e4c02e861e77a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e
[3e4c02e861ea4cd] jit-backend-dump}
[3e4c02e861f018f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139e8f
[3e4c02e861f284f] jit-backend-dump}
[3e4c02e861f7801] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139ea70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c02e861f918d] jit-backend-dump}
[3e4c02e8620a0da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139eaf
[3e4c02e8620d42f] jit-backend-dump}
[3e4c02e86214e83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139ece
[3e4c02e8621861c] jit-backend-dump}
[3e4c02e86220204] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139eee
[3e4c02e86223136] jit-backend-dump}
[3e4c02e86229071] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139f0d
[3e4c02e8622c1d6] jit-backend-dump}
[3e4c02e8623569f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139f2c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70E239B1AC7F000041FFD3E99CFFFFFF
[3e4c02e862373a2] jit-backend-dump}
[3e4c02e8623c308] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139f380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70E239B1AC7F000041FFD3E9BCFFFFFF
[3e4c02e8623da64] jit-backend-dump}
[3e4c02e862430d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139f
[3e4c02e86245b60] jit-backend-dump}
[3e4c02e8624af9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139f5c
[3e4c02e8624d5b4] jit-backend-dump}
[3e4c02e8625ddef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139f750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB70EA39B1AC7F000041FFE3
[3e4c02e8625f6a1] jit-backend-dump}
[3e4c02e86cefb66] {jit-backend
[3e4c02e86df89e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139f9e0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F879302000048FF042560ADE10266662E0F1F84000000000048FF0425F0B6E302488B8D300100008139100A01000F8500000000488B41088138301901000F8500000000488B5008813AB8B500000F8500000000488B5A10488B3522FEFFFF4839F30F8500000000488B72184883FE017206813E40B400000F8500000000488B50184883FA017206813AF08C00000F8500000000488B41104883F80172068138F08C00000F8500000000488B5E10488B3DF4FDFFFF4839FB0F8500000000488BBD38010000813F101100000F8500000000488B5F084883FB017206813B900F00000F8500000000488B5E084C8B4618488B35D3FDFFFF4939F00F8500000000488B35DBFDFFFF4839DE0F8500000000488B5F20488B35D7FDFFFF4839F30F8500000000488B7710488B5F1866666666662E0F1F84000000000048FF04250029BC03813E301901000F8500000000488B7E08813FB8B500000F8500000000488B4F104C8B0519FDFFFF4C39C10F85000000004C8B47184983F801720741813840B400000F8500000000488B7E184883FF017206813FF08C00000F8500000000498B48104C8B0D00FDFFFF4C39C90F8500000000813B101100000F85000000004C8B4B084983F9017207418139900F00000F85000000004D8B4808498B48184C8B05E5FCFFFF4C39C10F85000000004C8B05EDFCFFFF4D39C80F85000000004C8B4B204C8B05E9FCFFFF4D39C10F85000000004C8B43104C8B4B184889D3488B0C25F091F900488D5150483B14251092F9000F877500000048891425F091F90048C701F08C0000488D512048C702080E000048C742080400000048895A1048894218488B05FAFCFFFF488942204889422848C741080400000048895110488B15E7FCFFFF488951184C89C64889FA4889C84C89CBE9A2FEFFFF669049BB50F739B1AC7F000041FFD3E95BFDFFFF49BBD0F939B1AC7F00004C895D204D8D9B20F1FFFF41FFD3E976FFFFFFFF359BFBFFFF49BB30F839B1AC7F000041534D8D9BD0E7FFFF41FFE3FF3587FBFFFF49BB40F839B1AC7F000041534D8D9BC0E7FFFF41FFE3FF3573FBFFFF49BB50F839B1AC7F000041534D8D9BB0E7FFFF41FFE3FF3567FBFFFF49BB60F839B1AC7F000041534D8D9BA0E7FFFF41FFE3FF3553FBFFFF49BB70F839B1AC7F000041534D8D9B90E7FFFF41FFE3FF353FFBFFFF49BB80F839B1AC7F000041534D8D9B80E7FFFF41FFE3FF352BFBFFFF49BB90F839B1AC7F000041534D8D9B70E7FFFF41FFE3FF351FFBFFFF49BBA0F839B1AC7F000041534D8D9B60E7FFFF41FFE3FF350BFBFFFF49BBB0F839B1AC7F000041534D8D9B50E7FFFF41FFE3FF35F7FAFFFF49BBC0F839B1AC7F000041534D8D9B40E7FFFF41FFE3FF35EBFAFFFF49BBD0F839B1AC7F000041534D8D9B30E7FFFF41FFE3FF35D7FAFFFF49BBE0F839B1AC7F000041534D8D9B20E7FFFF41FFE3FF35CBFAFFFF49BBF0F839B1AC7F000041534D8D9B10E7FFFF41FFE3FF35BFFAFFFF49BB00F939B1AC7F000041534D8D9B00E7FFFF41FFE3FF35ABFAFFFF49BB10F939B1AC7F000041534D8D9BF0E6FFFF41FFE3FF3597FAFFFF49BB20F939B1AC7F000041534D8D9BE0E6FFFF41FFE3FF3583FAFFFF49BB30F939B1AC7F000041534D8D9BD0E6FFFF41FFE3FF356FFAFFFF49BB40F939B1AC7F000041534D8D9BC0E6FFFF41FFE3FF355BFAFFFF49BB50F939B1AC7F000041534D8D9BB0E6FFFF41FFE3FF3547FAFFFF49BB60F939B1AC7F000041534D8D9BA0E6FFFF41FFE3FF3533FAFFFF49BB70F939B1AC7F000041534D8D9B90E6FFFF41FFE3FF351FFAFFFF49BB80F939B1AC7F000041534D8D9B80E6FFFF41FFE3FF350BFAFFFF49BB90F939B1AC7F000041534D8D9B70E6FFFF41FFE3FF35F7F9FFFF49BBA0F939B1AC7F000041534D8D9B60E6FFFF41FFE3FF35E3F9FFFF49BBB0F939B1AC7F000041534D8D9B50E6FFFF41FFE3FF35CFF9FFFF49BBC0F939B1AC7F000041534D8D9B40E6FFFF41FFE3
[3e4c02e86e026db] jit-backend-dump}
[3e4c02e86e1109b] {jit-backend-addr
Loop 1 ((make-node AppRand10 AppRand12) from (vector-set! v 1 r)) has address 0x7facb139fb7d to 0x7facb139fe10 (bootstrap 0x7facb139faf0)
       gc table: 0x7facb139f9e0
       function: 0x7facb139faf0
         resops: 0x7facb139fb7d
       failures: 0x7facb139fe10
            end: 0x7facb13a0117
[3e4c02e86e15687] jit-backend-addr}
[3e4c02e86e1a434] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fba7 +0  94020000
[3e4c02e86e1b6aa] jit-backend-dump}
[3e4c02e86e1ecfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fbb7 +0  A0020000
[3e4c02e86e1fb71] jit-backend-dump}
[3e4c02e86e22e05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fbc7 +0  AC020000
[3e4c02e86e23b6d] jit-backend-dump}
[3e4c02e86e26de8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fbdb +0  B4020000
[3e4c02e86e27b13] jit-backend-dump}
[3e4c02e86e2ac88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fbf1 +0  BA020000
[3e4c02e86e2b960] jit-backend-dump}
[3e4c02e86e2e99f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fc07 +0  C0020000
[3e4c02e86e2f63a] jit-backend-dump}
[3e4c02e86e32728] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fc1d +0  C6020000
[3e4c02e86e333b1] jit-backend-dump}
[3e4c02e86e36415] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fc31 +0  CE020000
[3e4c02e86e370e7] jit-backend-dump}
[3e4c02e86e3a173] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fc44 +0  D7020000
[3e4c02e86e3adf0] jit-backend-dump}
[3e4c02e86e3deaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fc5a +0  DD020000
[3e4c02e86e3eb66] jit-backend-dump}
[3e4c02e86e41be6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fc72 +0  E1020000
[3e4c02e86e42863] jit-backend-dump}
[3e4c02e86e45ab3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fc82 +0  09030000
[3e4c02e86e46733] jit-backend-dump}
[3e4c02e86e49827] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fc96 +0  11030000
[3e4c02e86e4a49a] jit-backend-dump}
[3e4c02e86e4d548] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fcc0 +0  03030000
[3e4c02e86e4e1dd] jit-backend-dump}
[3e4c02e86e51238] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fcd0 +0  0F030000
[3e4c02e86e51eae] jit-backend-dump}
[3e4c02e86e54f3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fce4 +0  17030000
[3e4c02e86e55ba4] jit-backend-dump}
[3e4c02e86e58d47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fcfb +0  1C030000
[3e4c02e86e59986] jit-backend-dump}
[3e4c02e86e5c9e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fd11 +0  22030000
[3e4c02e86e5d63c] jit-backend-dump}
[3e4c02e86e606fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fd25 +0  2A030000
[3e4c02e86e61347] jit-backend-dump}
[3e4c02e86e643be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fd31 +0  3A030000
[3e4c02e86e65016] jit-backend-dump}
[3e4c02e86e6807d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fd48 +0  3F030000
[3e4c02e86e68ccf] jit-backend-dump}
[3e4c02e86e6bd08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fd60 +0  43030000
[3e4c02e86e6c963] jit-backend-dump}
[3e4c02e86e6fa63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fd70 +0  6B030000
[3e4c02e86e70696] jit-backend-dump}
[3e4c02e86e7368f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fd84 +0  73030000
[3e4c02e86e742f3] jit-backend-dump}
[3e4c02e86e77fcb] jit-backend}
[3e4c02e86e7bc06] {jit-log-opt-loop
# Loop 1 ((make-node AppRand10 AppRand12) from (vector-set! v 1 r)) : loop with 84 ops
[p0, p1]
+421: label(p0, p1, descr=TargetToken(76382320))
+440: guard_class(p0, 16499664, descr=<Guard0x479a380>) [p1, p0]
+459: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+463: guard_class(p3, 16503536, descr=<Guard0x48a00f8>) [p1, p0]
+475: p5 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+479: guard_class(p5, 16478072, descr=<Guard0x48a0140>) [p1, p0]
+491: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+502: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x48a0188>) [p1, p0]
+511: p9 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+515: guard_nonnull_class(p9, 16477696, descr=<Guard0x479a3e0>) [p1, p0]
+533: p11 = getfield_gc_r(p3, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+537: guard_nonnull_class(p11, ConstClass(W_Vector), descr=<Guard0x479a440>) [p1, p0]
+555: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+559: guard_nonnull_class(p13, ConstClass(W_Vector), descr=<Guard0x479a4a0>) [p1, p0]
+577: p15 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+588: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x48a01d0>) [p1, p0]
+597: p17 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([r r][l l][v (make-empty-node)]) (vector-set! v 0 l) (vector-set! v 1 r) v)')
+597: guard_class(p1, 16435920, descr=<Guard0x48a0218>) [p1, p0]
+616: p19 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+620: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x479a500>) [p1, p0]
debug_merge_point(0, 0, 'r')
debug_merge_point(0, 0, 'l')
+638: p21 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-empty-node)')
+642: p22 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+653: guard_value(p22, ConstPtr(ptr23), descr=<Guard0x479a560>) [p1, p0]
debug_merge_point(0, 0, '(make-vector 4 0)')
+662: guard_not_invalidated(descr=<Guard0x48a0260>) [p1, p0]
+669: i25 = instance_ptr_eq(ConstPtr(ptr24), p21)
+672: guard_true(i25, descr=<Guard0x48a02a8>) [p1, p0]
debug_merge_point(0, 0, '(vector-set! v 0 l)')
debug_merge_point(0, 0, '(vector-set! v 1 r)')
debug_merge_point(0, 0, 'v')
+678: p26 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+689: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x48a02f0>) [p1, p0]
+698: p28 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+702: p29 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(make-node AppRand10 AppRand12) from (vector-set! v 1 r)')
+706: label(p28, p11, p13, p29, descr=TargetToken(76382400))
+728: guard_class(p28, 16503536, descr=<Guard0x479a5c0>) [p29, p28, p13, p11]
+740: p31 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+744: guard_class(p31, 16478072, descr=<Guard0x48a0338>) [p29, p28, p13, p11]
+756: p33 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+767: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x48a0380>) [p29, p28, p13, p11]
+776: p35 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+780: guard_nonnull_class(p35, 16477696, descr=<Guard0x479a620>) [p29, p28, p13, p11]
+799: p37 = getfield_gc_r(p28, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+803: guard_nonnull_class(p37, ConstClass(W_Vector), descr=<Guard0x479a680>) [p29, p28, p13, p11]
+821: p39 = getfield_gc_r(p35, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+832: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x48a03c8>) [p29, p28, p13, p11]
+841: p41 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([r r][l l][v (make-empty-node)]) (vector-set! v 0 l) (vector-set! v 1 r) v)')
+841: guard_class(p29, 16435920, descr=<Guard0x48a0410>) [p29, p28, p13, p11]
+853: p43 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+857: guard_nonnull_class(p43, ConstClass(ForwardLink), descr=<Guard0x479a6e0>) [p29, p28, p13, p11]
debug_merge_point(0, 0, 'r')
debug_merge_point(0, 0, 'l')
+876: p45 = getfield_gc_r(p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-empty-node)')
+880: p46 = getfield_gc_r(p35, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+891: guard_value(p46, ConstPtr(ptr47), descr=<Guard0x479a740>) [p29, p28, p13, p11]
debug_merge_point(0, 0, '(make-vector 4 0)')
+900: guard_not_invalidated(descr=<Guard0x48a0458>) [p29, p28, p13, p11]
+907: i49 = instance_ptr_eq(ConstPtr(ptr48), p45)
+910: guard_true(i49, descr=<Guard0x48a04a0>) [p29, p28, p13, p11]
debug_merge_point(0, 0, '(vector-set! v 0 l)')
debug_merge_point(0, 0, '(vector-set! v 1 r)')
debug_merge_point(0, 0, 'v')
+916: p50 = getfield_gc_r(p29, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+927: guard_value(p50, ConstPtr(ptr51), descr=<Guard0x48a04e8>) [p29, p28, p13, p11]
+936: p52 = getfield_gc_r(p29, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+940: p53 = getfield_gc_r(p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(make-node AppRand10 AppRand12) from (vector-set! v 1 r)')
+944: p54 = new_with_vtable(descr=<SizeDescr 32>)
+988: p56 = new_array_clear(4, descr=<ArrayP 8>)
+1007: setarrayitem_gc(p56, 0, p11, descr=<ArrayP 8>)
+1011: setarrayitem_gc(p56, 1, p13, descr=<ArrayP 8>)
+1022: setarrayitem_gc(p56, 2, ConstPtr(ptr60), descr=<ArrayP 8>)
+1026: setarrayitem_gc(p56, 3, ConstPtr(ptr62), descr=<ArrayP 8>)
+1030: setfield_gc(p54, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1038: setfield_gc(p54, p56, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1049: setfield_gc(p54, ConstPtr(ptr64), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1053: jump(p52, p37, p54, p53, descr=TargetToken(76382400))
+1072: --end of the loop--
[3e4c02e86ef5aec] jit-log-opt-loop}
[3e4c02e871e49a8] {jit-backend
[3e4c02e8728f4a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a03d
[3e4c02e872a0799] jit-backend-dump}
[3e4c02e872ab573] {jit-backend-addr
Loop 2 ((let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)) has address 0x7facb13a05ed to 0x7facb13a0990 (bootstrap 0x7facb13a0560)
       gc table: 0x7facb13a03d0
       function: 0x7facb13a0560
         resops: 0x7facb13a05ed
       failures: 0x7facb13a0990
            end: 0x7facb13a0e1f
[3e4c02e872ae6c2] jit-backend-addr}
[3e4c02e872b2a63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0617 +0  A4030000
[3e4c02e872b3d66] jit-backend-dump}
[3e4c02e872b71d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a062d +0  AA030000
[3e4c02e872b7f7f] jit-backend-dump}
[3e4c02e872bb26c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0640 +0  CF030000
[3e4c02e872bbf35] jit-backend-dump}
[3e4c02e872bf032] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a064e +0  DD030000
[3e4c02e872bfdbc] jit-backend-dump}
[3e4c02e872c3028] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a065e +0  E9030000
[3e4c02e872c3ceb] jit-backend-dump}
[3e4c02e872c6d49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0672 +0  F1030000
[3e4c02e872c79bf] jit-backend-dump}
[3e4c02e872caa95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0686 +0  F9030000
[3e4c02e872cb70e] jit-backend-dump}
[3e4c02e872ce757] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a069a +0  01040000
[3e4c02e872cf3ef] jit-backend-dump}
[3e4c02e872d2416] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a06ae +0  09040000
[3e4c02e872d308c] jit-backend-dump}
[3e4c02e872d6131] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a06bf +0  14040000
[3e4c02e872d6e09] jit-backend-dump}
[3e4c02e872d9e42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a06cc +0  23040000
[3e4c02e872daac5] jit-backend-dump}
[3e4c02e872ddb11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a06e3 +0  28040000
[3e4c02e872de77e] jit-backend-dump}
[3e4c02e872e17f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a06fa +0  2D040000
[3e4c02e872e246e] jit-backend-dump}
[3e4c02e872e54d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a070e +0  35040000
[3e4c02e872e613f] jit-backend-dump}
[3e4c02e872e9160] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a071a +0  45040000
[3e4c02e872e9dd7] jit-backend-dump}
[3e4c02e872ece07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0731 +0  4A040000
[3e4c02e872eda77] jit-backend-dump}
[3e4c02e872f0ae8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0742 +0  55040000
[3e4c02e872f1761] jit-backend-dump}
[3e4c02e872f47c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0752 +0  61040000
[3e4c02e872f543c] jit-backend-dump}
[3e4c02e872f8432] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0766 +0  69040000
[3e4c02e872f90ab] jit-backend-dump}
[3e4c02e872fc2ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a077a +0  71040000
[3e4c02e872fcf75] jit-backend-dump}
[3e4c02e873000a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a078b +0  7C040000
[3e4c02e87300d7f] jit-backend-dump}
[3e4c02e87303f21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a07a1 +0  82040000
[3e4c02e87304be1] jit-backend-dump}
[3e4c02e87307c79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a07af +0  90040000
[3e4c02e8730891d] jit-backend-dump}
[3e4c02e8730b81f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a07bb +0  A0040000
[3e4c02e8730c4eb] jit-backend-dump}
[3e4c02e8730f3f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a07c8 +0  AF040000
[3e4c02e873100b2] jit-backend-dump}
[3e4c02e873130e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a07ee +0  C1040000
[3e4c02e87313d90] jit-backend-dump}
[3e4c02e87316d1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0802 +0  C9040000
[3e4c02e873179b0] jit-backend-dump}
[3e4c02e8731a855] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0818 +0  CF040000
[3e4c02e8731b4e7] jit-backend-dump}
[3e4c02e8731e600] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a082c +0  D7040000
[3e4c02e8731f39c] jit-backend-dump}
[3e4c02e8732257b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a083d +0  E2040000
[3e4c02e87323226] jit-backend-dump}
[3e4c02e873262d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a084d +0  EE040000
[3e4c02e87326f7e] jit-backend-dump}
[3e4c02e87329f77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0861 +0  F6040000
[3e4c02e8732ac0c] jit-backend-dump}
[3e4c02e8732dc24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0875 +0  FE040000
[3e4c02e8732e8c2] jit-backend-dump}
[3e4c02e873318c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0885 +0  0A050000
[3e4c02e87332568] jit-backend-dump}
[3e4c02e8733554f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a089b +0  10050000
[3e4c02e87336215] jit-backend-dump}
[3e4c02e873391e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a08a9 +0  1E050000
[3e4c02e87339e63] jit-backend-dump}
[3e4c02e8733ce37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a08b5 +0  2E050000
[3e4c02e8733dac3] jit-backend-dump}
[3e4c02e87340ade] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a08c9 +0  36050000
[3e4c02e8734174e] jit-backend-dump}
[3e4c02e87345270] jit-backend}
[3e4c02e87348d68] {jit-log-opt-loop
# Loop 2 ((let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)) : loop with 138 ops
[p0, p1]
+549: label(p0, p1, descr=TargetToken(76382480))
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
+568: guard_class(p1, 16435920, descr=<Guard0x479a7a0>) [p0, p1]
+587: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+591: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x479a800>) [p0, p1]
debug_merge_point(0, 0, '(<= iDepth4987 0)')
+609: guard_not_invalidated(descr=<Guard0x48a0650>) [p0, p1]
+609: guard_class(p0, 16504944, descr=<Guard0x48a0698>) [p0, p1]
+628: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+632: i8 = int_le(i6, 0)
+636: guard_true(i8, descr=<Guard0x48a06e0>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(make-empty-node)')
+642: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+646: guard_class(p9, 16478072, descr=<Guard0x48a0728>) [p0, p1]
+658: p11 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+669: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x48a0770>) [p0, p1]
+678: p13 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+689: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x479a860>) [p0, p1]
+698: p15 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
+698: p16 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+709: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x48a07b8>) [p0, p1]
+718: p18 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+722: p19 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(make-node AppRand10 AppRand12) from (make-vector 4 0)')
+726: guard_class(p18, 16503536, descr=<Guard0x48a0800>) [p0, p1]
+738: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+742: guard_class(p21, 16478072, descr=<Guard0x48a0848>) [p0, p1]
+755: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+759: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x48a0890>) [p0, p1]
+768: p25 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+772: guard_nonnull_class(p25, 16477696, descr=<Guard0x479a8c0>) [p0, p1]
+791: p27 = getfield_gc_r(p18, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+795: guard_nonnull_class(p27, ConstClass(W_Vector), descr=<Guard0x479a920>) [p0, p1]
+814: p29 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+825: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x48a08d8>) [p0, p1]
+834: p31 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([r r][l l][v (make-empty-node)]) (vector-set! v 0 l) (vector-set! v 1 r) v)')
+834: guard_class(p19, 16435920, descr=<Guard0x48a0920>) [p0, p1]
+846: p33 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+850: guard_nonnull_class(p33, ConstClass(ForwardLink), descr=<Guard0x479a980>) [p0, p1]
debug_merge_point(0, 0, 'r')
debug_merge_point(0, 0, 'l')
+869: p35 = getfield_gc_r(p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-empty-node)')
+873: p36 = getfield_gc_r(p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+877: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x479a9e0>) [p0, p1]
debug_merge_point(0, 0, '(make-vector 4 0)')
+893: i39 = instance_ptr_eq(ConstPtr(ptr38), p35)
+896: guard_true(i39, descr=<Guard0x48a0968>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! v 0 l)')
debug_merge_point(0, 0, '(vector-set! v 1 r)')
debug_merge_point(0, 0, 'v')
+902: p40 = getfield_gc_r(p19, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+913: guard_value(p40, ConstPtr(ptr41), descr=<Guard0x48a09b0>) [p0, p1]
+922: p42 = getfield_gc_r(p19, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+926: p43 = getfield_gc_r(p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+930: guard_class(p42, 16504944, descr=<Guard0x48a09f8>) [p0, p1]
+942: p45 = getfield_gc_r(p42, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+946: guard_class(p43, 16435920, descr=<Guard0x48a0a40>) [p0, p1]
+959: p47 = getfield_gc_r(p43, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+963: guard_nonnull_class(p47, ConstClass(ForwardLink), descr=<Guard0x479aa40>) [p0, p1]
debug_merge_point(0, 0, '(- iDepth4987 1) from (vector-set! v 1 r)')
+981: i49 = getfield_gc_i(p42, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+985: i51 = int_sub_ovf(i49, 1)
+989: guard_no_overflow(descr=<Guard0x48a0a88>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))')
debug_merge_point(0, 0, '(MakeTree AppRand11)')
+995: guard_class(p45, 16478072, descr=<Guard0x48a0ad0>) [p0, p1]
+1007: p53 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1011: guard_value(p53, ConstPtr(ptr54), descr=<Guard0x48a0b18>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
+1020: label(p45, i51, p47, p27, p43, descr=TargetToken(76382560))
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
debug_merge_point(0, 0, '(<= iDepth4987 0)')
+1048: guard_not_invalidated(descr=<Guard0x479aaa0>) [p27, p43, i51, p45, p47]
+1048: i56 = int_le(i51, 0)
+1052: guard_true(i56, descr=<Guard0x48a0b60>) [p27, p43, i51, p45, p47]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(make-empty-node)')
+1058: p57 = getfield_gc_r(p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1069: guard_value(p57, ConstPtr(ptr58), descr=<Guard0x479ab00>) [p27, p43, i51, p45, p47]
+1078: p59 = getfield_gc_r(p45, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(make-node AppRand10 AppRand12) from (make-vector 4 0)')
+1078: p60 = getfield_gc_r(p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1082: guard_nonnull_class(p60, 16477696, descr=<Guard0x479ab60>) [p27, p43, i51, p45, p47]
+1100: p62 = getfield_gc_r(p60, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1111: guard_value(p62, ConstPtr(ptr63), descr=<Guard0x48a0ba8>) [p27, p43, i51, p45, p47]
debug_merge_point(0, 0, '(let ([r r][l l][v (make-empty-node)]) (vector-set! v 0 l) (vector-set! v 1 r) v)')
debug_merge_point(0, 0, 'r')
debug_merge_point(0, 0, 'l')
+1120: p64 = getfield_gc_r(p60, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-empty-node)')
+1124: p65 = getfield_gc_r(p60, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1128: guard_value(p65, ConstPtr(ptr66), descr=<Guard0x479abc0>) [p27, p43, i51, p45, p47]
debug_merge_point(0, 0, '(make-vector 4 0)')
+1144: i68 = instance_ptr_eq(ConstPtr(ptr67), p64)
+1147: guard_true(i68, descr=<Guard0x48a0bf0>) [p27, p43, i51, p45, p47]
debug_merge_point(0, 0, '(vector-set! v 0 l)')
debug_merge_point(0, 0, '(vector-set! v 1 r)')
debug_merge_point(0, 0, 'v')
+1153: p69 = getfield_gc_r(p43, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1164: guard_value(p69, ConstPtr(ptr70), descr=<Guard0x48a0c38>) [p27, p43, i51, p45, p47]
+1173: p71 = getfield_gc_r(p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1177: p72 = getfield_gc_r(p43, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1181: guard_class(p71, 16504944, descr=<Guard0x48a0c80>) [p27, p43, i51, p45, p47]
+1193: p74 = getfield_gc_r(p71, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1197: guard_class(p72, 16435920, descr=<Guard0x48a0cc8>) [p27, p43, i51, p45, p47]
+1209: p76 = getfield_gc_r(p72, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1213: guard_nonnull_class(p76, ConstClass(ForwardLink), descr=<Guard0x479ac20>) [p27, p43, i51, p45, p47]
debug_merge_point(0, 0, '(- iDepth4987 1) from (vector-set! v 1 r)')
+1231: i78 = getfield_gc_i(p71, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1235: i80 = int_sub_ovf(i78, 1)
+1239: guard_no_overflow(descr=<Guard0x48a0d10>) [p27, p43, i51, p45, p47]
debug_merge_point(0, 0, '(let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))')
debug_merge_point(0, 0, '(MakeTree AppRand11)')
+1245: guard_class(p74, 16478072, descr=<Guard0x48a0d58>) [p27, p43, i51, p45, p47]
+1257: p82 = getfield_gc_r(p74, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1268: guard_value(p82, ConstPtr(ptr83), descr=<Guard0x48a0da0>) [p27, p43, i51, p45, p47]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
+1277: p84 = new_with_vtable(descr=<SizeDescr 32>)
+1327: p86 = new_array_clear(4, descr=<ArrayP 8>)
+1346: setarrayitem_gc(p86, 0, p27, descr=<ArrayP 8>)
+1350: p88 = new_with_vtable(descr=<SizeDescr 32>)
+1361: setfield_gc(p88, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1369: p91 = new_array_clear(1, descr=<ArrayP 8>)
+1395: setarrayitem_gc(p91, 0, ConstPtr(ptr93), descr=<ArrayP 8>)
+1399: setfield_gc(p88, p91, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1410: setfield_gc(p88, ConstPtr(ptr94), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1414: setarrayitem_gc(p86, 1, p88, descr=<ArrayP 8>)
+1418: setarrayitem_gc(p86, 2, ConstPtr(ptr97), descr=<ArrayP 8>)
+1422: setarrayitem_gc(p86, 3, ConstPtr(ptr99), descr=<ArrayP 8>)
+1426: setfield_gc(p84, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1434: setfield_gc(p84, p86, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1445: setfield_gc(p84, ConstPtr(ptr101), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1449: jump(p74, i80, p76, p84, p72, descr=TargetToken(76382560))
+1472: --end of the loop--
[3e4c02e873b9170] jit-log-opt-loop}
[3e4c02e8763fdf3] {jit-backend
[3e4c02e87699932] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0f
[3e4c02e876a22ff] jit-backend-dump}
[3e4c02e876ac6ee] {jit-backend-addr
Loop 3 ((let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)) has address 0x7facb13a107d to 0x7facb13a1250 (bootstrap 0x7facb13a0ff0)
       gc table: 0x7facb13a0f40
       function: 0x7facb13a0ff0
         resops: 0x7facb13a107d
       failures: 0x7facb13a1250
            end: 0x7facb13a1423
[3e4c02e876af2cb] jit-backend-addr}
[3e4c02e876b32b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1094 +0  E7010000
[3e4c02e876b4565] jit-backend-dump}
[3e4c02e876b79ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a10aa +0  ED010000
[3e4c02e876b87a3] jit-backend-dump}
[3e4c02e876bbb44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a10bd +0  12020000
[3e4c02e876bc7d9] jit-backend-dump}
[3e4c02e876bf9d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a10cb +0  20020000
[3e4c02e876c063b] jit-backend-dump}
[3e4c02e876c3840] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a10db +0  2C020000
[3e4c02e876c44bc] jit-backend-dump}
[3e4c02e876c761b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a10ef +0  34020000
[3e4c02e876c8285] jit-backend-dump}
[3e4c02e876cb3c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1103 +0  3C020000
[3e4c02e876cc014] jit-backend-dump}
[3e4c02e876cf0ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1117 +0  44020000
[3e4c02e876cfd35] jit-backend-dump}
[3e4c02e876d2def] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a112b +0  4C020000
[3e4c02e876d3a3b] jit-backend-dump}
[3e4c02e876d6a99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a113b +0  58020000
[3e4c02e876d76c3] jit-backend-dump}
[3e4c02e876da70b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1152 +0  5D020000
[3e4c02e876db33e] jit-backend-dump}
[3e4c02e876de3d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1160 +0  6B020000
[3e4c02e876df004] jit-backend-dump}
[3e4c02e876e20a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a116c +0  7B020000
[3e4c02e876e2cd2] jit-backend-dump}
[3e4c02e876e5dcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1179 +0  8A020000
[3e4c02e876e69ff] jit-backend-dump}
[3e4c02e876ea4cf] jit-backend}
[3e4c02e876edf3f] {jit-log-opt-loop
# Loop 3 ((let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)) : entry bridge with 58 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)')
+325: guard_class(p1, 16435920, descr=<Guard0x479ac80>) [p0, p1]
+344: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+348: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x479ace0>) [p0, p1]
debug_merge_point(0, 0, '(<= iDepth4987 0)')
+366: guard_not_invalidated(descr=<Guard0x48a0e30>) [p0, p1]
+366: guard_class(p0, 16504944, descr=<Guard0x48a0e78>) [p0, p1]
+385: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+389: i8 = int_le(i6, 0)
+393: guard_true(i8, descr=<Guard0x48a0ec0>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(make-empty-node)')
+399: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+403: guard_class(p9, 16478072, descr=<Guard0x48a0f08>) [p0, p1]
+415: p11 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+426: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x48a0f50>) [p0, p1]
+435: p13 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+446: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x479ad40>) [p0, p1]
+455: p15 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
+455: p16 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+466: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x48a0f98>) [p0, p1]
+475: p18 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+479: p19 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+483: guard_class(p18, 16504944, descr=<Guard0x48a0fe0>) [p0, p1]
+495: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+499: guard_class(p19, 16435920, descr=<Guard0x48a1028>) [p0, p1]
+511: p23 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+515: guard_nonnull_class(p23, ConstClass(ForwardLink), descr=<Guard0x479ada0>) [p0, p1]
debug_merge_point(0, 0, '(- iDepth4987 1) from (make-vector 4 0)')
+534: i25 = getfield_gc_i(p18, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+538: i27 = int_sub_ovf(i25, 1)
+542: guard_no_overflow(descr=<Guard0x48a1070>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))')
debug_merge_point(0, 0, '(MakeTree AppRand11)')
+548: guard_class(p21, 16478072, descr=<Guard0x48a10b8>) [p0, p1]
+560: p29 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+564: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x48a1100>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
+573: p31 = new_with_vtable(descr=<SizeDescr 24>)
+620: p32 = new_with_vtable(descr=<SizeDescr 40>)
+631: p33 = new_with_vtable(descr=<SizeDescr 32>)
+642: setfield_gc(p33, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+646: setfield_gc(p33, i27, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+650: p34 = new_with_vtable(descr=<SizeDescr 32>)
+661: setfield_gc(p34, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+669: p37 = new_array_clear(1, descr=<ArrayP 8>)
+695: setarrayitem_gc(p37, 0, ConstPtr(ptr39), descr=<ArrayP 8>)
+699: setfield_gc(p34, p37, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+710: setfield_gc(p34, ConstPtr(ptr40), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+714: setfield_gc(p33, p34, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+718: setfield_gc(p32, p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+722: setfield_gc(p31, i27, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+726: setfield_gc(p31, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+737: setfield_gc(p32, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+741: setfield_gc(p32, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+745: setfield_gc(p32, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+749: jump(p31, p32, descr=TargetToken(76382480))
+784: --end of the loop--
[3e4c02e87723f8e] jit-log-opt-loop}
[3e4c02e8797c1a5] {jit-backend
[3e4c02e879c31c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a14e
[3e4c02e879ca06d] jit-backend-dump}
[3e4c02e879d3ce8] {jit-backend-addr
Loop 4 ((let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)) has address 0x7facb13a15cd to 0x7facb13a16e0 (bootstrap 0x7facb13a1540)
       gc table: 0x7facb13a14e0
       function: 0x7facb13a1540
         resops: 0x7facb13a15cd
       failures: 0x7facb13a16e0
            end: 0x7facb13a180b
[3e4c02e879d68e9] jit-backend-addr}
[3e4c02e879da8ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a15f7 +0  14010000
[3e4c02e879dbb83] jit-backend-dump}
[3e4c02e879deff4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a160d +0  1A010000
[3e4c02e879dfe35] jit-backend-dump}
[3e4c02e879e32c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1620 +0  3F010000
[3e4c02e879e3fb0] jit-backend-dump}
[3e4c02e879e70aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a162e +0  4D010000
[3e4c02e879e7d2c] jit-backend-dump}
[3e4c02e879eae6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1642 +0  55010000
[3e4c02e879ebaa3] jit-backend-dump}
[3e4c02e879eeb16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1656 +0  5D010000
[3e4c02e879ef753] jit-backend-dump}
[3e4c02e879f2914] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a166e +0  7D010000
[3e4c02e879f3553] jit-backend-dump}
[3e4c02e879f7084] jit-backend}
[3e4c02e879fab29] {jit-log-opt-loop
# Loop 4 ((let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)) : loop with 42 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(76382640))
+264: guard_class(p1, 16435920, descr=<Guard0x479ae00>) [p0, p1]
+283: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+287: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x479ae60>) [p0, p1]
debug_merge_point(0, 0, '(<= iDepth4987 0)')
+305: guard_not_invalidated(descr=<Guard0x48a1148>) [p0, p1]
+305: guard_class(p0, 16504944, descr=<Guard0x48a1190>) [p0, p1]
+324: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+328: i8 = int_le(i6, 0)
+332: guard_false(i8, descr=<Guard0x48a11d8>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))))')
debug_merge_point(0, 0, '(- iDepth4987 1)')
+338: i10 = int_sub(i6, 1)
debug_merge_point(0, 0, '(let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))')
debug_merge_point(0, 0, '(MakeTree AppRand9)')
+342: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+346: guard_class(p11, 16478072, descr=<Guard0x48a1220>) [p0, p1]
+358: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+369: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x48a1268>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)')
+378: label(p11, i10, p3, p0, p1, descr=TargetToken(76382720))
debug_merge_point(0, 0, '(<= iDepth4987 0)')
+392: guard_not_invalidated(descr=<Guard0x479aec0>) [p1, p0, i10, p11, p3]
+392: i16 = int_le(i10, 0)
+396: guard_false(i16, descr=<Guard0x48a12b0>) [p1, p0, i10, p11, p3]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))))')
debug_merge_point(0, 0, '(- iDepth4987 1)')
+402: i18 = int_sub(i10, 1)
debug_merge_point(0, 0, '(let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))')
debug_merge_point(0, 0, '(MakeTree AppRand9)')
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)')
+406: p19 = new_with_vtable(descr=<SizeDescr 24>)
+453: p20 = new_with_vtable(descr=<SizeDescr 40>)
+464: setfield_gc(p19, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+468: setfield_gc(p19, i10, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+472: setfield_gc(p20, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+476: setfield_gc(p20, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+480: setfield_gc(p20, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+491: setfield_gc(p20, ConstPtr(ptr21), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+495: jump(p11, i18, p3, p19, p20, descr=TargetToken(76382720))
+512: --end of the loop--
[3e4c02e87a21ec5] jit-log-opt-loop}
[3e4c02e87a2b51b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0ff0 +0  49BB40153AB1AC7F000041FFE3
[3e4c02e87a2cd8d] jit-backend-dump}
[3e4c02e87bb95a9] {jit-backend
[3e4c02e87c27738] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1980 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CE201000048FF04258089BB038139101100000F85000000004C8B79084983FF01720741813F900F00000F85000000008138B01E01000F85000000004C8B78104983FF000F8F000000004C8B780841813FB8B500000F85000000004D8B77104C8B2DE1FEFFFF4D39EE0F85000000004D8B77204C8B3DDDFEFFFF4D39FE0F85000000004C8B71204C8B25D9FEFFFF4D39E60F85000000004C8B71104C8B511841813E301901000F85000000004D8B4E08418139B8B500000F85000000004D8B41104D39E80F85000000004D8B69184983FD01720841817D0040B400000F85000000004D8B4E184983F9017207418139F08C00000F85000000004D8B75104C8B059BFEFFFF4D39C60F850000000041813A101100000F85000000004D8B42084983F8017207418138900F00000F85000000004D8B45084D8B75184D39FE0F85000000004C8B3D7EFEFFFF4D39C70F85000000004D8B42204D39E00F85000000004D8B62104D8B4218488B0C25F091F900488D5138483B14251092F9000F878C00000048891425F091F90048C701F08C0000488D512048C702080E000048C74208010000004C8B1535FEFFFF4C89521048C741080400000048895110488B1526FEFFFF488951184C89E64C89CA4889C84C89C349BBB0FC39B1AC7F000041FFE3660F1F84000000000048C7442408FFFFFF0049BB20183AB1AC7F00004C895D204D8D9BD0CAFFFF41FFD3E9F8FDFFFF49BB70193AB1AC7F00004C895D204D8D9B80D1FFFF41FFD3E95FFFFFFFFF35E7FCFFFF49BB30183AB1AC7F000041534D8D9BD0C7FFFF41FFE3FF35D3FCFFFF49BB40183AB1AC7F000041534D8D9BC0C7FFFF41FFE3FF35BFFCFFFF49BB50183AB1AC7F000041534D8D9BB0C7FFFF41FFE3FF35ABFCFFFF49BB60183AB1AC7F000041534D8D9BA0C7FFFF41FFE3FF3597FCFFFF49BB70183AB1AC7F000041534D8D9B90C7FFFF41FFE3FF3583FCFFFF49BB80183AB1AC7F000041534D8D9B80C7FFFF41FFE3FF3577FCFFFF49BB90183AB1AC7F000041534D8D9B70C7FFFF41FFE3FF356BFCFFFF49BBA0183AB1AC7F000041534D8D9B60C7FFFF41FFE3FF355FFCFFFF49BBB0183AB1AC7F000041534D8D9B50C7FFFF41FFE3FF354BFCFFFF49BBC0183AB1AC7F000041534D8D9B40C7FFFF41FFE3FF3537FCFFFF49BBD0183AB1AC7F000041534D8D9B30C7FFFF41FFE3FF3523FCFFFF49BBE0183AB1AC7F000041534D8D9B20C7FFFF41FFE3FF350FFCFFFF49BBF0183AB1AC7F000041534D8D9B10C7FFFF41FFE3FF35FBFBFFFF49BB00193AB1AC7F000041534D8D9B00C7FFFF41FFE3FF35EFFBFFFF49BB10193AB1AC7F000041534D8D9BF0C6FFFF41FFE3FF35DBFBFFFF49BB20193AB1AC7F000041534D8D9BE0C6FFFF41FFE3FF35C7FBFFFF49BB30193AB1AC7F000041534D8D9BD0C6FFFF41FFE3FF35B3FBFFFF49BB40193AB1AC7F000041534D8D9BC0C6FFFF41FFE3FF35A7FBFFFF49BB50193AB1AC7F000041534D8D9BB0C6FFFF41FFE3FF3593FBFFFF49BB60193AB1AC7F000041534D8D9BA0C6FFFF41FFE3
[3e4c02e87c31947] jit-backend-dump}
[3e4c02e87c3f0f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1a64 +0  1E000000
[3e4c02e87c403f8] jit-backend-dump}
[3e4c02e87c43f8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1c55 +0  1E000000
[3e4c02e87c44d7d] jit-backend-dump}
[3e4c02e87c47fc8] {jit-backend-addr
bridge out of Guard 0x48a09b0 has address 0x7facb13a1a60 to 0x7facb13a1c50
       gc table: 0x7facb13a1980
    jump target: 0x7facb13a1a60
         resops: 0x7facb13a1a6e
       failures: 0x7facb13a1c50
            end: 0x7facb13a1ec3
[3e4c02e87c4a442] jit-backend-addr}
[3e4c02e87c4d7f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1a7e +0  11020000
[3e4c02e87c4e5cf] jit-backend-dump}
[3e4c02e87c51747] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1a95 +0  16020000
[3e4c02e87c5244d] jit-backend-dump}
[3e4c02e87c558d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1aa1 +0  42020000
[3e4c02e87c565b2] jit-backend-dump}
[3e4c02e87c59827] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1aaf +0  50020000
[3e4c02e87c5a4e1] jit-backend-dump}
[3e4c02e87c5d719] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1ac0 +0  5B020000
[3e4c02e87c5e3e2] jit-backend-dump}
[3e4c02e87c6141e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1ad4 +0  63020000
[3e4c02e87c620ea] jit-backend-dump}
[3e4c02e87c6529f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1ae8 +0  6B020000
[3e4c02e87c65f12] jit-backend-dump}
[3e4c02e87c69000] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1afc +0  73020000
[3e4c02e87c69c9b] jit-backend-dump}
[3e4c02e87c6d033] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1b11 +0  7A020000
[3e4c02e87c6dcb0] jit-backend-dump}
[3e4c02e87c70d39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1b22 +0  85020000
[3e4c02e87c719b2] jit-backend-dump}
[3e4c02e87c74a7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1b2f +0  94020000
[3e4c02e87c75732] jit-backend-dump}
[3e4c02e87c788d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1b47 +0  98020000
[3e4c02e87c7957f] jit-backend-dump}
[3e4c02e87c7c6a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1b5e +0  9D020000
[3e4c02e87c7d354] jit-backend-dump}
[3e4c02e87c803be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1b72 +0  A5020000
[3e4c02e87c81069] jit-backend-dump}
[3e4c02e87c8412c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1b7f +0  B4020000
[3e4c02e87c84dca] jit-backend-dump}
[3e4c02e87c87ddc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1b96 +0  B9020000
[3e4c02e87c88a98] jit-backend-dump}
[3e4c02e87c8ba7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1ba7 +0  C4020000
[3e4c02e87c8c71a] jit-backend-dump}
[3e4c02e87c8f6df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1bb7 +0  D0020000
[3e4c02e87c9038d] jit-backend-dump}
[3e4c02e87c9335e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1bc4 +0  DF020000
[3e4c02e87c93ff6] jit-backend-dump}
[3e4c02e87c972a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a0766 +0  F6120000
[3e4c02e87c97f44] jit-backend-dump}
[3e4c02e87c9ebb3] jit-backend}
[3e4c02e87ca2911] {jit-log-opt-bridge
# bridge out of Guard 0x48a09b0 with 64 ops
[p0, p1]
+246: guard_class(p1, 16435920, descr=<Guard0x479af20>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+262: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x479af80>) [p0, p1]
debug_merge_point(0, 0, '(<= iDepth4987 0)')
+281: guard_not_invalidated(descr=<Guard0x48a1388>) [p0, p1]
+281: guard_class(p0, 16504944, descr=<Guard0x48a13d0>) [p0, p1]
+293: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+297: i8 = int_le(i6, 0)
+301: guard_true(i8, descr=<Guard0x48a1418>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(make-empty-node)')
+307: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+311: guard_class(p9, 16478072, descr=<Guard0x48a1460>) [p0, p1]
+324: p11 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+335: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x48a14a8>) [p0, p1]
+344: p13 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+355: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x479afe0>) [p0, p1]
+364: p15 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
+364: p16 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+375: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x48a14f0>) [p0, p1]
+384: p18 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+388: p19 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(make-node AppRand10 AppRand12) from (make-vector 4 0)')
+392: guard_class(p18, 16503536, descr=<Guard0x48a1538>) [p0, p1]
+405: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+409: guard_class(p21, 16478072, descr=<Guard0x48a1580>) [p0, p1]
+422: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+426: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x48a15c8>) [p0, p1]
+435: p25 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+439: guard_nonnull_class(p25, 16477696, descr=<Guard0x479b040>) [p0, p1]
+459: p27 = getfield_gc_r(p18, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+463: guard_nonnull_class(p27, ConstClass(W_Vector), descr=<Guard0x479b0a0>) [p0, p1]
+482: p29 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+493: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x48a1610>) [p0, p1]
+502: p31 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([r r][l l][v (make-empty-node)]) (vector-set! v 0 l) (vector-set! v 1 r) v)')
+502: guard_class(p19, 16435920, descr=<Guard0x48a1658>) [p0, p1]
+515: p33 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+519: guard_nonnull_class(p33, ConstClass(ForwardLink), descr=<Guard0x479b100>) [p0, p1]
debug_merge_point(0, 0, 'r')
debug_merge_point(0, 0, 'l')
+538: p35 = getfield_gc_r(p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-empty-node)')
+542: p36 = getfield_gc_r(p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+546: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x479b160>) [p0, p1]
debug_merge_point(0, 0, '(make-vector 4 0)')
+562: i39 = instance_ptr_eq(ConstPtr(ptr38), p35)
+565: guard_true(i39, descr=<Guard0x48a16a0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! v 0 l)')
debug_merge_point(0, 0, '(vector-set! v 1 r)')
debug_merge_point(0, 0, 'v')
+571: p40 = getfield_gc_r(p19, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+575: guard_value(p40, ConstPtr(ptr41), descr=<Guard0x48a16e8>) [p0, p1]
+584: p42 = getfield_gc_r(p19, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+588: p43 = getfield_gc_r(p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(make-node AppRand10 AppRand12) from (vector-set! v 1 r)')
+592: p44 = new_with_vtable(descr=<SizeDescr 32>)
+633: p46 = new_array_clear(1, descr=<ArrayP 8>)
+659: setarrayitem_gc(p46, 0, ConstPtr(ptr48), descr=<ArrayP 8>)
+663: setfield_gc(p44, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+671: setfield_gc(p44, p46, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+682: setfield_gc(p44, ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+686: jump(p42, p27, p44, p43, descr=TargetToken(76382400))
+720: --end of the loop--
[3e4c02e87cddf5e] jit-log-opt-bridge}
[3e4c02e87dd98b5] {jit-backend
[3e4c02e87e28201] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1f
[3e4c02e87e2dd66] jit-backend-dump}
[3e4c02e87e377c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1f74 +0  1E000000
[3e4c02e87e38947] jit-backend-dump}
[3e4c02e87e3c1de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a20d5 +0  1E000000
[3e4c02e87e3cfb7] jit-backend-dump}
[3e4c02e87e3ffde] {jit-backend-addr
bridge out of Guard 0x48a0b60 has address 0x7facb13a1f70 to 0x7facb13a20d0
       gc table: 0x7facb13a1f30
    jump target: 0x7facb13a1f70
         resops: 0x7facb13a1f7e
       failures: 0x7facb13a20d0
            end: 0x7facb13a2167
[3e4c02e87e4273d] jit-backend-addr}
[3e4c02e87e45c8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1f8c +0  9F010000
[3e4c02e87e46a29] jit-backend-dump}
[3e4c02e87e49c40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a1fa4 +0  A3010000
[3e4c02e87e4a8b6] jit-backend-dump}
[3e4c02e87e4dbda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a07ee +0  7E170000
[3e4c02e87e4e801] jit-backend-dump}
[3e4c02e87e527db] jit-backend}
[3e4c02e87e56081] {jit-log-opt-bridge
# bridge out of Guard 0x48a0b60 with 40 ops
[p0, p1, i2, p3, p4]
+86: guard_not_invalidated(descr=<Guard0x479b1c0>) [p0, p1, i2, p3, p4]
+86: i6 = int_le(i2, 0)
+90: guard_false(i6, descr=<Guard0x48a17c0>) [p0, p1, i2, p3, p4]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))))')
debug_merge_point(0, 0, '(- iDepth4987 1)')
+96: i8 = int_sub(i2, 1)
debug_merge_point(0, 0, '(let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))')
debug_merge_point(0, 0, '(MakeTree AppRand9)')
+100: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+111: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x48a1808>) [p0, p1, i2, p3, p4]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)')
+120: p11 = new_with_vtable(descr=<SizeDescr 24>)
+164: p12 = new_with_vtable(descr=<SizeDescr 40>)
+175: p13 = new_with_vtable(descr=<SizeDescr 32>)
+187: setfield_gc(p13, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+191: setfield_gc(p13, i2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+195: p14 = new_with_vtable(descr=<SizeDescr 32>)
+206: setfield_gc(p14, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+214: p17 = new_array_clear(4, descr=<ArrayP 8>)
+235: setarrayitem_gc(p17, 0, p0, descr=<ArrayP 8>)
+240: p19 = new_with_vtable(descr=<SizeDescr 32>)
+252: setfield_gc(p19, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+260: p22 = new_array_clear(1, descr=<ArrayP 8>)
+286: setarrayitem_gc(p22, 0, ConstPtr(ptr24), descr=<ArrayP 8>)
+290: setfield_gc(p19, p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+301: setfield_gc(p19, ConstPtr(ptr25), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+305: setarrayitem_gc(p17, 1, p19, descr=<ArrayP 8>)
+310: setarrayitem_gc(p17, 2, ConstPtr(ptr28), descr=<ArrayP 8>)
+315: setarrayitem_gc(p17, 3, ConstPtr(ptr30), descr=<ArrayP 8>)
+320: setfield_gc(p14, p17, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+331: setfield_gc(p14, ConstPtr(ptr31), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+335: setfield_gc(p13, p14, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+339: setfield_gc(p11, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+343: setfield_gc(p11, i2, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+347: setfield_gc(p12, p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+358: setfield_gc(p12, p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+362: setfield_gc(p12, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+373: setfield_gc(p12, ConstPtr(ptr32), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+377: jump(p3, i8, p4, p11, p12, descr=TargetToken(76382720))
+416: --end of the loop--
[3e4c02e87e794a1] jit-log-opt-bridge}
[3e4c02e87f51c73] {jit-backend
[3e4c02e87f8cca5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a
[3e4c02e87f940fa] jit-backend-dump}
[3e4c02e87f9e288] {jit-backend-addr
Loop 7 ((- iDepth4987 1) from (make-vector 4 0)) has address 0x7facb13a232d to 0x7facb13a2470 (bootstrap 0x7facb13a22a0)
       gc table: 0x7facb13a2230
       function: 0x7facb13a22a0
         resops: 0x7facb13a232d
       failures: 0x7facb13a2470
            end: 0x7facb13a25b7
[3e4c02e87fa0c8e] jit-backend-addr}
[3e4c02e87fa49b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2344 +0  73010000
[3e4c02e87fa59fb] jit-backend-dump}
[3e4c02e87fa8da3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2352 +0  81010000
[3e4c02e87fa9b23] jit-backend-dump}
[3e4c02e87facd5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2365 +0  8A010000
[3e4c02e87fada5b] jit-backend-dump}
[3e4c02e87fb0bc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2379 +0  92010000
[3e4c02e87fb187a] jit-backend-dump}
[3e4c02e87fb4a7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2393 +0  94010000
[3e4c02e87fb56fb] jit-backend-dump}
[3e4c02e87fb8765] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a23a3 +0  A0010000
[3e4c02e87fb941c] jit-backend-dump}
[3e4c02e87fbc6f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a23ba +0  A5010000
[3e4c02e87fbd370] jit-backend-dump}
[3e4c02e87fc03ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a23c6 +0  B5010000
[3e4c02e87fc1182] jit-backend-dump}
[3e4c02e87fc41af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a23da +0  BD010000
[3e4c02e87fc4e5a] jit-backend-dump}
[3e4c02e87fc8804] jit-backend}
[3e4c02e87fcc29f] {jit-log-opt-loop
# Loop 7 ((- iDepth4987 1) from (make-vector 4 0)) : entry bridge with 35 ops
[p0, p1]
debug_merge_point(0, 0, '(- iDepth4987 1) from (make-vector 4 0)')
+261: guard_not_invalidated(descr=<Guard0x479b220>) [p1, p0]
+261: guard_class(p0, 16504944, descr=<Guard0x48a1850>) [p1, p0]
+280: i3 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+284: i5 = int_sub_ovf(i3, 1)
+288: guard_no_overflow(descr=<Guard0x48a1898>) [p1, p0]
+294: guard_class(p1, 16437352, descr=<Guard0x48a18e0>) [p1, p0]
+313: p7 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+324: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x48a1928>) [p1, p0]
+333: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+337: p10 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+341: guard_nonnull_class(p10, ConstClass(W_Vector), descr=<Guard0x479b280>) [p1, p0]
+359: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))')
+363: guard_class(p12, 16435920, descr=<Guard0x48a1970>) [p1, p0]
+375: p14 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+379: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x479b2e0>) [p1, p0]
debug_merge_point(0, 0, '(MakeTree AppRand11)')
+398: guard_class(p9, 16478072, descr=<Guard0x48a19b8>) [p1, p0]
+410: p17 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+421: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x48a1a00>) [p1, p0]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
+430: p19 = new_with_vtable(descr=<SizeDescr 24>)
+471: p20 = new_with_vtable(descr=<SizeDescr 40>)
+482: p21 = new_with_vtable(descr=<SizeDescr 32>)
+493: setfield_gc(p21, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+497: setfield_gc(p21, i5, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+501: setfield_gc(p21, p10, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+505: setfield_gc(p19, i5, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+516: setfield_gc(p20, ConstPtr(ptr22), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+520: setfield_gc(p20, p21, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+524: setfield_gc(p20, p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+528: setfield_gc(p20, p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+532: setfield_gc(p19, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+536: jump(p19, p20, descr=TargetToken(76382480))
+576: --end of the loop--
[3e4c02e87fed73a] jit-log-opt-loop}
[3e4c02e88132532] {jit-backend
[3e4c02e8816f9d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a
[3e4c02e88176ec4] jit-backend-dump}
[3e4c02e88180352] {jit-backend-addr
Loop 8 ((- iDepth4987 1) from (vector-set! v 1 r)) has address 0x7facb13a278d to 0x7facb13a28d0 (bootstrap 0x7facb13a2700)
       gc table: 0x7facb13a2690
       function: 0x7facb13a2700
         resops: 0x7facb13a278d
       failures: 0x7facb13a28d0
            end: 0x7facb13a2a17
[3e4c02e881831ae] jit-backend-addr}
[3e4c02e88186efa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a27a4 +0  73010000
[3e4c02e88187eea] jit-backend-dump}
[3e4c02e8818b3a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a27b2 +0  81010000
[3e4c02e8818c0d9] jit-backend-dump}
[3e4c02e8818f370] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a27c5 +0  8A010000
[3e4c02e8818ffff] jit-backend-dump}
[3e4c02e8819311b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a27d9 +0  92010000
[3e4c02e88193da3] jit-backend-dump}
[3e4c02e88196f4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a27f3 +0  94010000
[3e4c02e88197c58] jit-backend-dump}
[3e4c02e8819ad49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2803 +0  A0010000
[3e4c02e8819b9d2] jit-backend-dump}
[3e4c02e8819ead2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a281a +0  A5010000
[3e4c02e8819f776] jit-backend-dump}
[3e4c02e881a2802] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2826 +0  B5010000
[3e4c02e881a346c] jit-backend-dump}
[3e4c02e881a66d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a283a +0  BD010000
[3e4c02e881a7327] jit-backend-dump}
[3e4c02e881aad36] jit-backend}
[3e4c02e881ae815] {jit-log-opt-loop
# Loop 8 ((- iDepth4987 1) from (vector-set! v 1 r)) : entry bridge with 35 ops
[p0, p1]
debug_merge_point(0, 0, '(- iDepth4987 1) from (vector-set! v 1 r)')
+261: guard_not_invalidated(descr=<Guard0x479b340>) [p1, p0]
+261: guard_class(p0, 16504944, descr=<Guard0x48a1a48>) [p1, p0]
+280: i3 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+284: i5 = int_sub_ovf(i3, 1)
+288: guard_no_overflow(descr=<Guard0x48a1a90>) [p1, p0]
+294: guard_class(p1, 16437352, descr=<Guard0x48a1ad8>) [p1, p0]
+313: p7 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+324: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x48a1b20>) [p1, p0]
+333: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+337: p10 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+341: guard_nonnull_class(p10, ConstClass(W_Vector), descr=<Guard0x479b3a0>) [p1, p0]
+359: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))')
+363: guard_class(p12, 16435920, descr=<Guard0x48a1b68>) [p1, p0]
+375: p14 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+379: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x479b400>) [p1, p0]
debug_merge_point(0, 0, '(MakeTree AppRand11)')
+398: guard_class(p9, 16478072, descr=<Guard0x48a1bb0>) [p1, p0]
+410: p17 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+421: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x48a1bf8>) [p1, p0]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
+430: p19 = new_with_vtable(descr=<SizeDescr 24>)
+471: p20 = new_with_vtable(descr=<SizeDescr 40>)
+482: p21 = new_with_vtable(descr=<SizeDescr 32>)
+493: setfield_gc(p21, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+497: setfield_gc(p21, i5, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+501: setfield_gc(p21, p10, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+505: setfield_gc(p19, i5, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+516: setfield_gc(p20, ConstPtr(ptr22), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+520: setfield_gc(p20, p21, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+524: setfield_gc(p20, p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+528: setfield_gc(p20, p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+532: setfield_gc(p19, p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+536: jump(p19, p20, descr=TargetToken(76382480))
+576: --end of the loop--
[3e4c02e881cf232] jit-log-opt-loop}
[3e4c02e882e5338] {jit-backend
[3e4c02e8832fdaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2ac
[3e4c02e88336e8b] jit-backend-dump}
[3e4c02e88341cbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2b34 +0  1E000000
[3e4c02e88342e4b] jit-backend-dump}
[3e4c02e88346955] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2c95 +0  1E000000
[3e4c02e88347768] jit-backend-dump}
[3e4c02e8834a985] {jit-backend-addr
bridge out of Guard 0x48a12b0 has address 0x7facb13a2b30 to 0x7facb13a2c90
       gc table: 0x7facb13a2ac0
    jump target: 0x7facb13a2b30
         resops: 0x7facb13a2b3e
       failures: 0x7facb13a2c90
            end: 0x7facb13a2db3
[3e4c02e8834ca8e] jit-backend-addr}
[3e4c02e88350044] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2b4c +0  9F010000
[3e4c02e88350dfe] jit-backend-dump}
[3e4c02e88354009] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2b60 +0  A7010000
[3e4c02e88354cb3] jit-backend-dump}
[3e4c02e88357d73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2b74 +0  AF010000
[3e4c02e88358a45] jit-backend-dump}
[3e4c02e8835bb8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2b8f +0  B0010000
[3e4c02e8835c7f9] jit-backend-dump}
[3e4c02e8835f946] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2b9d +0  BE010000
[3e4c02e883605e1] jit-backend-dump}
[3e4c02e88363617] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2bab +0  CC010000
[3e4c02e8836428a] jit-backend-dump}
[3e4c02e88367344] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2bb8 +0  DB010000
[3e4c02e88367fca] jit-backend-dump}
[3e4c02e8836b21b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a166e +0  BE140000
[3e4c02e8836beb3] jit-backend-dump}
[3e4c02e8836fc2f] jit-backend}
[3e4c02e883735d9] {jit-log-opt-bridge
# bridge out of Guard 0x48a12b0 with 43 ops
[p0, p1, i2, p3, p4]
+134: guard_not_invalidated(descr=<Guard0x479b460>) [p0, p1, i2, p3, p4]
+134: i6 = int_le(i2, 0)
+138: guard_true(i6, descr=<Guard0x48a1c88>) [p0, p1, i2, p3, p4]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(make-empty-node)')
+144: p7 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+155: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x48a1cd0>) [p0, p1, i2, p3, p4]
+164: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+175: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x479b4c0>) [p0, p1, i2, p3, p4]
+184: p11 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
+184: p12 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+188: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+192: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x479b520>) [p0, p1, i2, p3, p4]
debug_merge_point(0, 0, '(- iDepth4987 1) from (make-vector 4 0)')
+211: i15 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+215: i17 = int_sub_ovf(i15, 1)
+219: guard_no_overflow(descr=<Guard0x48a1d18>) [p0, p1, i2, p3, p4]
debug_merge_point(0, 0, '(let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))')
debug_merge_point(0, 0, '(MakeTree AppRand11)')
+225: guard_class(p12, 16478072, descr=<Guard0x48a1d60>) [p0, p1, i2, p3, p4]
+239: p19 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+243: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x48a1da8>) [p0, p1, i2, p3, p4]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
+252: p21 = new_with_vtable(descr=<SizeDescr 24>)
+299: p22 = new_with_vtable(descr=<SizeDescr 40>)
+310: p23 = new_with_vtable(descr=<SizeDescr 32>)
+321: setfield_gc(p23, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+325: setfield_gc(p23, i17, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+329: p24 = new_with_vtable(descr=<SizeDescr 32>)
+340: setfield_gc(p24, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+348: p27 = new_array_clear(1, descr=<ArrayP 8>)
+374: setarrayitem_gc(p27, 0, ConstPtr(ptr29), descr=<ArrayP 8>)
+378: setfield_gc(p24, p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+389: setfield_gc(p24, ConstPtr(ptr30), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+393: setfield_gc(p23, p24, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+397: setfield_gc(p21, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+401: setfield_gc(p22, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+405: setfield_gc(p21, i17, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+409: setfield_gc(p22, p23, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+413: setfield_gc(p22, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+424: setfield_gc(p22, ConstPtr(ptr31), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+428: jump(p21, p22, descr=TargetToken(76382480))
+464: --end of the loop--
[3e4c02e8839b473] jit-log-opt-bridge}
[3e4c02e88524eb0] {jit-backend
[3e4c02e8859ce4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2f10 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C6202000048FF0425B08CBB03813E301901000F85000000004C8B7E0841813FB8B500000F85000000004D8B77104C8B2D02FFFFFF4D39EE0F85000000004D8B77184983FE01720741813E40B400000F85000000004C8B7E184983FF01720741813FF08C00000F85000000004D8B66104C8B15E0FEFFFF4D39D40F8500000000813B101100000F85000000004C8B53084983FA01720741813A900F00000F85000000004D8B56084D8B66184C8B35C5FEFFFF4D39F40F85000000004C8B35CDFEFFFF4D39D60F85000000004C8B53204C8B35C9FEFFFF4D39F20F85000000004C8B73104C8B531841813EB01E01000F85000000004D8B660841813A101100000F85000000004D8B4A084983F9017207418139900F00000F85000000004D8B46104983E8010F800000000041813C24B8B500000F85000000004D8B7424104D39EE0F85000000004989D5488B0C25F091F900488D9100010000483B14251092F9000F872701000048891425F091F90048C701B01E0100488D511848C702101100004C8D722849C706301901004D8966084D894610498D762048C706F08C000048C7460804000000488D5E2048C703080E000048C74308040000004C897B104C8D7B3049C707F08C000049C7470804000000498D7F2048C707080E000048C74708040000004C896F1048894718488B05EDFDFFFF488947204889472849897F10488B3DE2FDFFFF49897F184C897B18488943204889432848895E1048897E18498976184C8961084C894A084C8B0DBFFDFFFF4C894A204C8972104C8952184C89411048898D300100004889953801000049BB00063AB1AC7F000041FFE36666662E0F1F84000000000048C7442408FFFFFF0049BBC82D3AB1AC7F00004C895D204D8D9B28B5FFFF41FFD3E978FDFFFF49BBF82E3AB1AC7F00004C895D204D8D9BF8BBFFFF41FFD3E9C4FEFFFFFF3577FCFFFF49BBD82D3AB1AC7F000041534D8D9B28B2FFFF41FFE3FF3563FCFFFF49BBE82D3AB1AC7F000041534D8D9B18B2FFFF41FFE3FF3557FCFFFF49BBF82D3AB1AC7F000041534D8D9B08B2FFFF41FFE3FF3543FCFFFF49BB082E3AB1AC7F000041534D8D9BF8B1FFFF41FFE3FF352FFCFFFF49BB182E3AB1AC7F000041534D8D9BE8B1FFFF41FFE3FF3523FCFFFF49BB282E3AB1AC7F000041534D8D9BD8B1FFFF41FFE3FF350FFCFFFF49BB382E3AB1AC7F000041534D8D9BC8B1FFFF41FFE3FF35FBFBFFFF49BB482E3AB1AC7F000041534D8D9BB8B1FFFF41FFE3FF35EFFBFFFF49BB582E3AB1AC7F000041534D8D9BA8B1FFFF41FFE3FF35DBFBFFFF49BB682E3AB1AC7F000041534D8D9B98B1FFFF41FFE3FF35CFFBFFFF49BB782E3AB1AC7F000041534D8D9B88B1FFFF41FFE3FF35C3FBFFFF49BB882E3AB1AC7F000041534D8D9B78B1FFFF41FFE3FF35AFFBFFFF49BB982E3AB1AC7F000041534D8D9B68B1FFFF41FFE3FF359BFBFFFF49BBA82E3AB1AC7F000041534D8D9B58B1FFFF41FFE3FF3587FBFFFF49BBB82E3AB1AC7F000041534D8D9B48B1FFFF41FFE3FF3573FBFFFF49BBC82E3AB1AC7F000041534D8D9B38B1FFFF41FFE3FF355FFBFFFF49BBD82E3AB1AC7F000041534D8D9B28B1FFFF41FFE3FF354BFBFFFF49BBE82E3AB1AC7F000041534D8D9B18B1FFFF41FFE3
[3e4c02e885a65eb] jit-backend-dump}
[3e4c02e885b00e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2fe4 +0  1E000000
[3e4c02e885b1268] jit-backend-dump}
[3e4c02e885b4dc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3255 +0  1E000000
[3e4c02e885b5aac] jit-backend-dump}
[3e4c02e885b8cd8] {jit-backend-addr
bridge out of Guard 0x48a04e8 has address 0x7facb13a2fe0 to 0x7facb13a3250
       gc table: 0x7facb13a2f10
    jump target: 0x7facb13a2fe0
         resops: 0x7facb13a2fee
       failures: 0x7facb13a3250
            end: 0x7facb13a348b
[3e4c02e885bae3a] jit-backend-addr}
[3e4c02e885be2d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a2ffe +0  91020000
[3e4c02e885bf02f] jit-backend-dump}
[3e4c02e885c2267] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a300f +0  9C020000
[3e4c02e885c2ece] jit-backend-dump}
[3e4c02e885c6061] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3023 +0  A4020000
[3e4c02e885c6d4f] jit-backend-dump}
[3e4c02e885c9ee8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a303a +0  A9020000
[3e4c02e885cab80] jit-backend-dump}
[3e4c02e885cdcf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3051 +0  AE020000
[3e4c02e885ce974] jit-backend-dump}
[3e4c02e885d1a9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3065 +0  B6020000
[3e4c02e885d26fa] jit-backend-dump}
[3e4c02e885d5896] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3071 +0  C6020000
[3e4c02e885d64f1] jit-backend-dump}
[3e4c02e885d96ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3088 +0  CB020000
[3e4c02e885da33a] jit-backend-dump}
[3e4c02e885dd45f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a30a0 +0  CF020000
[3e4c02e885de0df] jit-backend-dump}
[3e4c02e885e1320] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a30b0 +0  F7020000
[3e4c02e885e1f56] jit-backend-dump}
[3e4c02e885e5007] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a30c4 +0  FF020000
[3e4c02e885e5c46] jit-backend-dump}
[3e4c02e885e8db8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a30d9 +0  06030000
[3e4c02e885e9a13] jit-backend-dump}
[3e4c02e885ecadf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a30ea +0  11030000
[3e4c02e885ed786] jit-backend-dump}
[3e4c02e885f0843] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3101 +0  16030000
[3e4c02e885f14cc] jit-backend-dump}
[3e4c02e885f4612] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a310f +0  24030000
[3e4c02e885f5276] jit-backend-dump}
[3e4c02e885f8386] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a311d +0  32030000
[3e4c02e885f912b] jit-backend-dump}
[3e4c02e885fc293] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a312b +0  40030000
[3e4c02e885fcf0a] jit-backend-dump}
[3e4c02e8860017f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fd84 +0  58320000
[3e4c02e88600de6] jit-backend-dump}
[3e4c02e88604cb3] jit-backend}
[3e4c02e886085c1] {jit-log-opt-bridge
# bridge out of Guard 0x48a04e8 with 79 ops
[p0, p1, p2, p3]
+230: guard_class(p1, 16503536, descr=<Guard0x479b580>) [p0, p1, p2, p3]
+242: p5 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+246: guard_class(p5, 16478072, descr=<Guard0x48a1e80>) [p0, p1, p2, p3]
+259: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+270: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x48a1ec8>) [p0, p1, p2, p3]
+279: p9 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+283: guard_nonnull_class(p9, 16477696, descr=<Guard0x479b5e0>) [p0, p1, p2, p3]
+302: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+306: guard_nonnull_class(p11, ConstClass(W_Vector), descr=<Guard0x479b640>) [p0, p1, p2, p3]
+325: p13 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+336: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x48a1f10>) [p0, p1, p2, p3]
+345: p15 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([r r][l l][v (make-empty-node)]) (vector-set! v 0 l) (vector-set! v 1 r) v)')
+345: guard_class(p0, 16435920, descr=<Guard0x48a1f58>) [p0, p1, p2, p3]
+357: p17 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+361: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x479b6a0>) [p0, p1, p2, p3]
debug_merge_point(0, 0, 'r')
debug_merge_point(0, 0, 'l')
+380: p19 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-empty-node)')
+384: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+395: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x479b700>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(make-vector 4 0)')
+404: guard_not_invalidated(descr=<Guard0x48a1fa0>) [p0, p1, p2, p3]
+411: i23 = instance_ptr_eq(ConstPtr(ptr22), p19)
+414: guard_true(i23, descr=<Guard0x4920020>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! v 0 l)')
debug_merge_point(0, 0, '(vector-set! v 1 r)')
debug_merge_point(0, 0, 'v')
+420: p24 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+431: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x4920068>) [p0, p1, p2, p3]
+440: p26 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+444: p27 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+448: guard_class(p26, 16504944, descr=<Guard0x49200b0>) [p0, p1, p2, p3]
+461: p29 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+465: guard_class(p27, 16435920, descr=<Guard0x49200f8>) [p0, p1, p2, p3]
+478: p31 = getfield_gc_r(p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+482: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x479b760>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(- iDepth4987 1) from (vector-set! v 1 r)')
+501: i33 = getfield_gc_i(p26, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+505: i35 = int_sub_ovf(i33, 1)
+509: guard_no_overflow(descr=<Guard0x4920140>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))')
debug_merge_point(0, 0, '(MakeTree AppRand11)')
+515: guard_class(p29, 16478072, descr=<Guard0x4920188>) [p0, p1, p2, p3]
+529: p37 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+534: guard_value(p37, ConstPtr(ptr38), descr=<Guard0x49201d0>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
+543: p39 = new_with_vtable(descr=<SizeDescr 24>)
+590: p40 = new_with_vtable(descr=<SizeDescr 40>)
+601: p41 = new_with_vtable(descr=<SizeDescr 32>)
+612: setfield_gc(p41, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+616: setfield_gc(p41, i35, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+620: p42 = new_with_vtable(descr=<SizeDescr 32>)
+631: setfield_gc(p42, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+639: p45 = new_array_clear(4, descr=<ArrayP 8>)
+658: setarrayitem_gc(p45, 0, p11, descr=<ArrayP 8>)
+662: p47 = new_with_vtable(descr=<SizeDescr 32>)
+673: setfield_gc(p47, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+681: p50 = new_array_clear(4, descr=<ArrayP 8>)
+700: setarrayitem_gc(p50, 0, p3, descr=<ArrayP 8>)
+704: setarrayitem_gc(p50, 1, p2, descr=<ArrayP 8>)
+715: setarrayitem_gc(p50, 2, ConstPtr(ptr54), descr=<ArrayP 8>)
+719: setarrayitem_gc(p50, 3, ConstPtr(ptr56), descr=<ArrayP 8>)
+723: setfield_gc(p47, p50, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+734: setfield_gc(p47, ConstPtr(ptr57), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+738: setarrayitem_gc(p45, 1, p47, descr=<ArrayP 8>)
+742: setarrayitem_gc(p45, 2, ConstPtr(ptr60), descr=<ArrayP 8>)
+746: setarrayitem_gc(p45, 3, ConstPtr(ptr62), descr=<ArrayP 8>)
+750: setfield_gc(p42, p45, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+754: setfield_gc(p42, ConstPtr(ptr63), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+758: setfield_gc(p41, p42, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+762: setfield_gc(p39, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+766: setfield_gc(p40, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+777: setfield_gc(p40, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+781: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+785: setfield_gc(p40, p27, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+789: setfield_gc(p39, i35, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+793: jump(p39, p40, descr=TargetToken(76382480))
+832: --end of the loop--
[3e4c02e886523ee] jit-log-opt-bridge}
[3e4c02e88725c1d] {jit-backend
[3e4c02e8874c718] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a
[3e4c02e88751111] jit-backend-dump}
[3e4c02e8875a660] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3564 +0  1E000000
[3e4c02e8875b6f6] jit-backend-dump}
[3e4c02e8875f050] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3605 +0  1E000000
[3e4c02e8875fda9] jit-backend-dump}
[3e4c02e88762def] {jit-backend-addr
bridge out of Guard 0x48a06e0 has address 0x7facb13a3560 to 0x7facb13a3600
       gc table: 0x7facb13a3520
    jump target: 0x7facb13a3560
         resops: 0x7facb13a356e
       failures: 0x7facb13a3600
            end: 0x7facb13a36ea
[3e4c02e88764fc5] jit-backend-addr}
[3e4c02e88768278] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a357e +0  A4000000
[3e4c02e88768fda] jit-backend-dump}
[3e4c02e8876c176] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3595 +0  A9000000
[3e4c02e8876ce0e] jit-backend-dump}
[3e4c02e8877050e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a35a1 +0  D5000000
[3e4c02e887711f8] jit-backend-dump}
[3e4c02e88774452] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a35af +0  E3000000
[3e4c02e88775152] jit-backend-dump}
[3e4c02e8877822e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a35c4 +0  EA000000
[3e4c02e88778f03] jit-backend-dump}
[3e4c02e8877c000] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a35d8 +0  F2000000
[3e4c02e8877cc73] jit-backend-dump}
[3e4c02e8877febb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a064e +0  0E2F0000
[3e4c02e88780b1c] jit-backend-dump}
[3e4c02e88784a1a] jit-backend}
[3e4c02e887882de] {jit-log-opt-bridge
# bridge out of Guard 0x48a06e0 with 21 ops
[p0, p1]
+86: guard_class(p1, 16435920, descr=<Guard0x479b7c0>) [p0, p1]
+98: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+102: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x479b820>) [p0, p1]
debug_merge_point(0, 0, '(<= iDepth4987 0)')
+121: guard_not_invalidated(descr=<Guard0x4920218>) [p0, p1]
+121: guard_class(p0, 16504944, descr=<Guard0x4920260>) [p0, p1]
+133: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+137: i8 = int_le(i6, 0)
+141: guard_false(i8, descr=<Guard0x49202a8>) [p0, p1]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))))')
debug_merge_point(0, 0, '(- iDepth4987 1)')
+147: i10 = int_sub(i6, 1)
debug_merge_point(0, 0, '(let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))')
debug_merge_point(0, 0, '(MakeTree AppRand9)')
+151: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+155: guard_class(p11, 16478072, descr=<Guard0x49202f0>) [p0, p1]
+168: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+179: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x4920338>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)')
+188: jump(p11, i10, p3, p0, p1, descr=TargetToken(76382720))
+224: --end of the loop--
[3e4c02e8879d834] jit-log-opt-bridge}
[3e4c02e91902e5b] {jit-backend
[3e4c02e91a2977a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a38d
[3e4c02e91a37e18] jit-backend-dump}
[3e4c02e91a44e7a] {jit-backend-addr
Loop 12 ((let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)) has address 0x7facb13a3a6d to 0x7facb13a3f00 (bootstrap 0x7facb13a39e0)
       gc table: 0x7facb13a38d0
       function: 0x7facb13a39e0
         resops: 0x7facb13a3a6d
       failures: 0x7facb13a3f00
            end: 0x7facb13a42a2
[3e4c02e91a486c4] jit-backend-addr}
[3e4c02e91a4cde8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3a97 +0  67050000
[3e4c02e91a4e08c] jit-backend-dump}
[3e4c02e91a5156e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3aad +0  6D050000
[3e4c02e91a522f5] jit-backend-dump}
[3e4c02e91a5556a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3ac0 +0  92050000
[3e4c02e91a56255] jit-backend-dump}
[3e4c02e91a597f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3ace +0  A0050000
[3e4c02e91a5a4cd] jit-backend-dump}
[3e4c02e91a5d5e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3ae2 +0  A8050000
[3e4c02e91a5e278] jit-backend-dump}
[3e4c02e91a6129c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3af6 +0  B0050000
[3e4c02e91a61fa5] jit-backend-dump}
[3e4c02e91a64f1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3b0a +0  B8050000
[3e4c02e91a65b9d] jit-backend-dump}
[3e4c02e91a68b10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3b1e +0  C0050000
[3e4c02e91a69786] jit-backend-dump}
[3e4c02e91a6c730] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3b35 +0  C5050000
[3e4c02e91a6d39d] jit-backend-dump}
[3e4c02e91a70350] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3b45 +0  D1050000
[3e4c02e91a70fc6] jit-backend-dump}
[3e4c02e91a73f88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3b53 +0  DF050000
[3e4c02e91a74bef] jit-backend-dump}
[3e4c02e91a77b9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3b6e +0  E0050000
[3e4c02e91a78800] jit-backend-dump}
[3e4c02e91a7b7c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3bd0 +0  9A050000
[3e4c02e91a7c42f] jit-backend-dump}
[3e4c02e91a7f39c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3c0b +0  7B050000
[3e4c02e91a7fffd] jit-backend-dump}
[3e4c02e91a86a0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3c15 +0  8D050000
[3e4c02e91a8784f] jit-backend-dump}
[3e4c02e91a8ad38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3c29 +0  95050000
[3e4c02e91a8b9ae] jit-backend-dump}
[3e4c02e91a8ec08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3cee +0  08050000
[3e4c02e91a8f872] jit-backend-dump}
[3e4c02e91a92a24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3d02 +0  10050000
[3e4c02e91a936c2] jit-backend-dump}
[3e4c02e91a9673e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3d10 +0  1E050000
[3e4c02e91a97401] jit-backend-dump}
[3e4c02e91a9a61b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3d2a +0  20050000
[3e4c02e91a9b2e1] jit-backend-dump}
[3e4c02e91a9e33c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3d88 +0  DE040000
[3e4c02e91a9efb2] jit-backend-dump}
[3e4c02e91aa20ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3db2 +0  D0040000
[3e4c02e91aa2d4a] jit-backend-dump}
[3e4c02e91aa6943] jit-backend}
[3e4c02e91aaa57b] {jit-log-opt-loop
# Loop 12 ((let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)) : loop with 138 ops
[p0, p1]
+421: label(p0, p1, descr=TargetToken(76385120))
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
+440: guard_class(p1, 16435208, descr=<Guard0x479b940>) [p0, p1]
+459: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+463: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x479b9a0>) [p0, p1]
debug_merge_point(0, 0, '(<= iDepth 0)')
+481: guard_not_invalidated(descr=<Guard0x49204a0>) [p0, p1]
+481: guard_class(p0, 16504240, descr=<Guard0x49204e8>) [p0, p1]
+500: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+504: i8 = int_le(i6, 0)
+508: guard_false(i8, descr=<Guard0x4920530>) [p0, p1]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '(let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)))')
debug_merge_point(0, 0, '(- iDepth 1)')
+514: i10 = int_sub(i6, 1)
debug_merge_point(0, 0, '(make-empty-node)')
+518: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+522: guard_class(p11, 16479200, descr=<Guard0x4920578>) [p0, p1]
+534: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+545: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x49205c0>) [p0, p1]
+554: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+565: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x479ba00>) [p0, p1]
+574: p17 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.left-set! thisNode AppRand5) from (make-vector 4 0)')
+574: p18 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+585: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x479ba60>) [p0, p1]
+594: p20 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+598: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x479bac0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! node4953 0 x)')
+617: p22 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+621: guard_class(p22, 16693360, descr=<Guard0x4920608>) [p0, p1]
+633: i24 = getfield_gc_i(p20, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+637: i26 = int_lt(0, i24)
+641: guard_true(i26, descr=<Guard0x4920650>) [p0, p1]
+647: p27 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+651: p29 = getarrayitem_gc_pure_r(p27, 0, descr=<ArrayP 8>)
+655: guard_nonnull_class(p29, ConstClass(W_Fixnum), descr=<Guard0x479bb20>) [p0, p1]
+674: p32 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), i24, p29, descr=<Callr 8 ir EF=5>)
+757: guard_no_exception(descr=<Guard0x479bb80>) [p20, p32, i10, p0, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) from (vector-set! node4953 0 x)')
debug_merge_point(0, 0, '(make-empty-node)')
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.right-set! thisNode AppRand6) from (make-vector 4 0)')
+772: p33 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+807: setfield_gc(p20, ConstPtr(ptr34), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+811: setfield_gc(p20, p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+822: guard_value(p33, ConstPtr(ptr35), descr=<Guard0x479bbe0>) [p33, p32, i10, p0, p1, p3]
debug_merge_point(0, 0, '(vector-set! node4959 1 x4961)')
+831: i37 = int_lt(1, i24)
+835: guard_true(i37, descr=<Guard0x4920698>) [p33, p32, i10, p0, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) from (vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(node.left thisNode)')
+841: p38 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+852: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x479bc40>) [p33, p32, i10, p0, p1, p3]
debug_merge_point(0, 0, '(vector-ref node 0)')
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand7) from (vector-ref node 0)')
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
+861: p40 = new_with_vtable(descr=<SizeDescr 32>)
+905: setfield_gc(p40, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+913: p43 = new_array_clear(1, descr=<ArrayP 8>)
+939: setarrayitem_gc(p43, 0, ConstPtr(ptr45), descr=<ArrayP 8>)
+943: setfield_gc(p40, p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+954: setfield_gc(p40, ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+968: setarrayitem_gc(p32, 0, p40, descr=<ArrayP 8>)
+972: p48 = new_with_vtable(descr=<SizeDescr 32>)
+983: setfield_gc(p48, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+991: p51 = new_array_clear(1, descr=<ArrayP 8>)
+1010: setarrayitem_gc(p51, 0, ConstPtr(ptr53), descr=<ArrayP 8>)
+1014: setfield_gc(p48, p51, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1018: setfield_gc(p48, ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1032: setarrayitem_gc(p32, 1, p48, descr=<ArrayP 8>)
+1036: label(p11, i10, p40, p3, p0, p1, descr=TargetToken(76385200))
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
debug_merge_point(0, 0, '(<= iDepth 0)')
+1048: guard_not_invalidated(descr=<Guard0x479bca0>) [p0, p1, p40, i10, p11, p3]
+1048: i57 = int_le(i10, 0)
+1052: guard_false(i57, descr=<Guard0x49206e0>) [p0, p1, p40, i10, p11, p3]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '(let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)))')
debug_merge_point(0, 0, '(- iDepth 1)')
+1058: i59 = int_sub(i10, 1)
debug_merge_point(0, 0, '(make-empty-node)')
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.left-set! thisNode AppRand5) from (make-vector 4 0)')
debug_merge_point(0, 0, '(vector-set! node4953 0 x)')
+1062: p60 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1066: guard_class(p60, 16693360, descr=<Guard0x4920728>) [p0, p1, p40, i10, p11, p3]
+1078: i62 = getfield_gc_i(p40, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1082: i64 = int_lt(0, i62)
+1086: guard_true(i64, descr=<Guard0x4920770>) [p0, p1, p40, i10, p11, p3]
+1092: p65 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1096: p67 = getarrayitem_gc_pure_r(p65, 0, descr=<ArrayP 8>)
+1100: guard_nonnull_class(p67, ConstClass(W_Fixnum), descr=<Guard0x479bd00>) [p0, p1, p40, i10, p11, p3]
+1118: p70 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), i62, p67, descr=<Callr 8 ir EF=5>)
+1197: guard_no_exception(descr=<Guard0x479bd60>) [p40, p70, i59, p0, p1, None, i10, p11, p3]
debug_merge_point(0, 0, '(let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) from (vector-set! node4953 0 x)')
debug_merge_point(0, 0, '(make-empty-node)')
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.right-set! thisNode AppRand6) from (make-vector 4 0)')
debug_merge_point(0, 0, '(vector-set! node4959 1 x4961)')
+1229: setfield_gc(p40, p70, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1240: setfield_gc(p40, ConstPtr(ptr72), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1244: i74 = int_lt(1, i62)
+1248: guard_true(i74, descr=<Guard0x479bdc0>) [i62, p40, p70, i59, p0, p1, None, i10, p11, p3]
debug_merge_point(0, 0, '(let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) from (vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(node.left thisNode)')
debug_merge_point(0, 0, '(vector-ref node 0)')
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand7) from (vector-ref node 0)')
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
+1254: p75 = new_with_vtable(descr=<SizeDescr 32>)
+1298: p77 = new_array_clear(1, descr=<ArrayP 8>)
+1324: setarrayitem_gc(p77, 0, ConstPtr(ptr79), descr=<ArrayP 8>)
+1328: p80 = new_with_vtable(descr=<SizeDescr 32>)
+1339: p81 = new_with_vtable(descr=<SizeDescr 40>)
+1350: p82 = new_with_vtable(descr=<SizeDescr 32>)
+1361: setfield_gc(p82, p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1372: setfield_gc(p82, i10, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+1376: setfield_gc(p82, p40, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+1380: setfield_gc(p80, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1391: setfield_gc(p80, i10, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+1395: setfield_gc(p80, p40, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+1399: setfield_gc(p75, p77, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1403: setfield_gc(p81, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1414: setfield_gc(p75, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1429: setfield_gc(p75, ConstPtr(ptr84), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1433: setfield_gc(p81, p82, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1437: setfield_gc(p81, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1455: setfield_gc(p81, ConstPtr(ptr85), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1469: setarrayitem_gc(p70, 0, p75, descr=<ArrayP 8>)
+1473: p87 = new_with_vtable(descr=<SizeDescr 32>)
+1485: setfield_gc(p87, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1493: p90 = new_array_clear(1, descr=<ArrayP 8>)
+1512: setarrayitem_gc(p90, 0, ConstPtr(ptr92), descr=<ArrayP 8>)
+1516: setfield_gc(p87, p90, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1520: setfield_gc(p87, ConstPtr(ptr93), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1534: setarrayitem_gc(p70, 1, p87, descr=<ArrayP 8>)
+1538: jump(p11, i59, p75, p3, p80, p81, descr=TargetToken(76385200))
+1584: --end of the loop--
[3e4c02e91b2c392] jit-log-opt-loop}
[3e4c02e91d1e243] {jit-backend
[3e4c02e91da63df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a44a
[3e4c02e91db1b26] jit-backend-dump}
[3e4c02e91dbc35c] {jit-backend-addr
Loop 13 ((node.left-set! thisNode AppRand5) from (make-vector 4 0)) has address 0x7facb13a465d to 0x7facb13a49b0 (bootstrap 0x7facb13a45d0)
       gc table: 0x7facb13a44a0
       function: 0x7facb13a45d0
         resops: 0x7facb13a465d
       failures: 0x7facb13a49b0
            end: 0x7facb13a4d4a
[3e4c02e91dbefb4] jit-backend-addr}
[3e4c02e91dc30e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a4674 +0  C2030000
[3e4c02e91dc42ec] jit-backend-dump}
[3e4c02e91dc778b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a4684 +0  CE030000
[3e4c02e91dc84ea] jit-backend-dump}
[3e4c02e91dcb72f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a4694 +0  DA030000
[3e4c02e91dcc3ca] jit-backend-dump}
[3e4c02e91dcf569] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a46a8 +0  E2030000
[3e4c02e91dd01c7] jit-backend-dump}
[3e4c02e91dd346a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a46bc +0  EA030000
[3e4c02e91dd40e7] jit-backend-dump}
[3e4c02e91dd72f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a46d2 +0  F0030000
[3e4c02e91dd7fae] jit-backend-dump}
[3e4c02e91ddb0a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a46e8 +0  F6030000
[3e4c02e91ddbd37] jit-backend-dump}
[3e4c02e91ddf054] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a46f8 +0  1E040000
[3e4c02e91ddfcfc] jit-backend-dump}
[3e4c02e91de2e45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a4706 +0  2C040000
[3e4c02e91de3abc] jit-backend-dump}
[3e4c02e91de6bbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a4717 +0  37040000
[3e4c02e91de783e] jit-backend-dump}
[3e4c02e91dea9f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a472a +0  40040000
[3e4c02e91deb64e] jit-backend-dump}
[3e4c02e91dee773] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a4789 +0  FD030000
[3e4c02e91def3d1] jit-backend-dump}
[3e4c02e91df2564] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a47d1 +0  D1030000
[3e4c02e91df31c2] jit-backend-dump}
[3e4c02e91df62d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a47e5 +0  D9030000
[3e4c02e91df6f3e] jit-backend-dump}
[3e4c02e91dfa066] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a47f9 +0  E1030000
[3e4c02e91dfacdd] jit-backend-dump}
[3e4c02e91dfdddd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a480f +0  E7030000
[3e4c02e91dfea35] jit-backend-dump}
[3e4c02e91e01b5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a481c +0  F6030000
[3e4c02e91e027ae] jit-backend-dump}
[3e4c02e91e058e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a482c +0  02040000
[3e4c02e91e06531] jit-backend-dump}
[3e4c02e91e09672] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a483d +0  0D040000
[3e4c02e91e0a2eb] jit-backend-dump}
[3e4c02e91e0d41f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a484e +0  18040000
[3e4c02e91e0e07d] jit-backend-dump}
[3e4c02e91e11199] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a4862 +0  20040000
[3e4c02e91e11df4] jit-backend-dump}
[3e4c02e91e14ec6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a4876 +0  28040000
[3e4c02e91e15b24] jit-backend-dump}
[3e4c02e91e18c71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a488d +0  2D040000
[3e4c02e91e198d2] jit-backend-dump}
[3e4c02e91e1c9c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a489d +0  39040000
[3e4c02e91e1d61a] jit-backend-dump}
[3e4c02e91e2072a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a48ab +0  47040000
[3e4c02e91e21385] jit-backend-dump}
[3e4c02e91e244bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a48c3 +0  4B040000
[3e4c02e91e2514b] jit-backend-dump}
[3e4c02e91e282d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a48d5 +0  55040000
[3e4c02e91e28f67] jit-backend-dump}
[3e4c02e91e2cbbb] jit-backend}
[3e4c02e91e30763] {jit-log-opt-loop
# Loop 13 ((node.left-set! thisNode AppRand5) from (make-vector 4 0)) : entry bridge with 92 ops
[p0, p1]
debug_merge_point(0, 0, '(node.left-set! thisNode AppRand5) from (make-vector 4 0)')
+453: guard_class(p0, 16504240, descr=<Guard0x479be20>) [p1, p0]
+472: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+476: guard_class(p3, 16504240, descr=<Guard0x49207b8>) [p1, p0]
+488: p5 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+492: guard_class(p5, 16479200, descr=<Guard0x4920800>) [p1, p0]
+504: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+515: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x4920848>) [p1, p0]
+524: p9 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+535: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x479be80>) [p1, p0]
+544: p11 = getfield_gc_r(p3, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+548: guard_nonnull_class(p11, ConstClass(W_Vector), descr=<Guard0x479bee0>) [p1, p0]
+566: p13 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+570: guard_nonnull_class(p13, ConstClass(W_Vector), descr=<Guard0x479bf40>) [p1, p0]
+588: p15 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(vector-set! node4953 0 x)')
+588: guard_not_invalidated(descr=<Guard0x4920890>) [p1, p0]
+588: p16 = getfield_gc_r(p11, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+592: guard_class(p16, 16693360, descr=<Guard0x49208d8>) [p1, p0]
+604: i18 = getfield_gc_i(p11, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+608: i20 = int_lt(0, i18)
+612: guard_true(i20, descr=<Guard0x4920920>) [p1, p0]
+618: p21 = getfield_gc_r(p11, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+622: p23 = getarrayitem_gc_pure_r(p21, 0, descr=<ArrayP 8>)
+626: i24 = instance_ptr_eq(p23, p13)
+629: guard_false(i24, descr=<Guard0x4920968>) [p1, p0]
+635: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x479bfa0>) [p1, p0]
+654: p27 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), i18, p23, descr=<Callr 8 ir EF=5>)
+734: guard_no_exception(descr=<Guard0x6a50020>) [p1, p13, p11, p27]
+773: setfield_gc(p11, ConstPtr(ptr28), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+777: setfield_gc(p11, p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+791: setarrayitem_gc(p27, 0, p13, descr=<ArrayP 8>)
+802: guard_class(p1, 16435208, descr=<Guard0x6a50080>) [p1, p13, p11]
+821: p31 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+832: guard_value(p31, ConstPtr(ptr32), descr=<Guard0x49209b0>) [p1, p13, p11]
+841: p33 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+845: p34 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+849: guard_class(p34, 16435208, descr=<Guard0x49209f8>) [p1, p13, p11]
+861: p36 = getfield_gc_r(p34, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+865: guard_nonnull_class(p36, ConstClass(ForwardLink), descr=<Guard0x6a500e0>) [p1, p13, p11]
debug_merge_point(0, 0, '(let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) from (vector-set! node4953 0 x)')
+883: guard_class(p33, 16504240, descr=<Guard0x4920a40>) [p1, p13, p11]
+896: p39 = getfield_gc_r(p33, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-empty-node)')
+900: guard_class(p39, 16504240, descr=<Guard0x4920a88>) [p1, p13, p11]
+912: p41 = getfield_gc_r(p39, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+916: guard_class(p41, 16479200, descr=<Guard0x4920ad0>) [p1, p13, p11]
+929: p43 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+933: guard_value(p43, ConstPtr(ptr44), descr=<Guard0x4920b18>) [p1, p13, p11]
+946: p45 = getfield_gc_r(p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+957: guard_value(p45, ConstPtr(ptr46), descr=<Guard0x6a50140>) [p1, p13, p11]
+966: p47 = getfield_gc_r(p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.right-set! thisNode AppRand6) from (make-vector 4 0)')
+966: p48 = getfield_gc_r(p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+977: guard_value(p48, ConstPtr(ptr49), descr=<Guard0x6a501a0>) [p1, p13, p11]
+986: p50 = getfield_gc_r(p39, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+990: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x6a50200>) [p1, p13, p11]
debug_merge_point(0, 0, '(vector-set! node4959 1 x4961)')
+1009: p52 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1013: guard_class(p52, 16622984, descr=<Guard0x4920b60>) [p1, p13, p11]
+1025: i54 = getfield_gc_i(p50, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1029: i56 = int_lt(1, i54)
+1033: guard_true(i56, descr=<Guard0x4920ba8>) [p1, p13, p11]
+1039: p57 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) from (vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(node.left thisNode)')
+1043: p58 = getfield_gc_r(p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1054: guard_value(p58, ConstPtr(ptr59), descr=<Guard0x6a50260>) [p1, p13, p11]
debug_merge_point(0, 0, '(vector-ref node 0)')
+1063: p61 = getarrayitem_gc_r(p57, 0, descr=<ArrayP 8>)
+1067: guard_class(p61, ConstClass(W_Vector), descr=<Guard0x4920bf0>) [p1, p13, p11]
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand7) from (vector-ref node 0)')
+1081: i63 = getfield_gc_i(p33, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
+1085: p64 = new_with_vtable(descr=<SizeDescr 32>)
+1132: setfield_gc(p64, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1140: p67 = new_array_clear(1, descr=<ArrayP 8>)
+1166: setarrayitem_gc(p67, 0, ConstPtr(ptr69), descr=<ArrayP 8>)
+1170: setfield_gc(p64, p67, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1181: setfield_gc(p64, ConstPtr(ptr70), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1195: setarrayitem_gc(p57, 1, p64, descr=<ArrayP 8>)
+1199: p72 = new_with_vtable(descr=<SizeDescr 32>)
+1210: p73 = new_with_vtable(descr=<SizeDescr 40>)
+1221: setfield_gc(p72, p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1225: setfield_gc(p72, p61, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+1236: setfield_gc(p73, ConstPtr(ptr74), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1240: setfield_gc(p73, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1244: setfield_gc(p73, p34, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1248: setfield_gc(p73, p36, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1252: setfield_gc(p72, i63, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+1256: jump(p72, p73, descr=TargetToken(76385120))
+1296: --end of the loop--
[3e4c02e91e8045d] jit-log-opt-loop}
[3e4c02e91fbf9ea] {jit-backend
[3e4c02e9202522f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a4f
[3e4c02e9202f6bd] jit-backend-dump}
[3e4c02e920396f2] {jit-backend-addr
Loop 14 ((let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)) from (<= iDepth 0)) has address 0x7facb13a50bd to 0x7facb13a52d0 (bootstrap 0x7facb13a5030)
       gc table: 0x7facb13a4f30
       function: 0x7facb13a5030
         resops: 0x7facb13a50bd
       failures: 0x7facb13a52d0
            end: 0x7facb13a55f2
[3e4c02e9203c046] jit-backend-addr}
[3e4c02e920400d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a50e7 +0  F7010000
[3e4c02e9204126c] jit-backend-dump}
[3e4c02e92044616] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a50fd +0  FD010000
[3e4c02e92045313] jit-backend-dump}
[3e4c02e920484e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5110 +0  06020000
[3e4c02e9204919a] jit-backend-dump}
[3e4c02e9204c3fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5120 +0  12020000
[3e4c02e9204d055] jit-backend-dump}
[3e4c02e920503c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5130 +0  1E020000
[3e4c02e92051032] jit-backend-dump}
[3e4c02e92054194] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5144 +0  26020000
[3e4c02e92054dfb] jit-backend-dump}
[3e4c02e92057f9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5158 +0  2E020000
[3e4c02e92058bbb] jit-backend-dump}
[3e4c02e9205bd3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a516e +0  34020000
[3e4c02e9205c98b] jit-backend-dump}
[3e4c02e9205fc8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a517c +0  5E020000
[3e4c02e920608b4] jit-backend-dump}
[3e4c02e92063a3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a518c +0  6A020000
[3e4c02e9206465e] jit-backend-dump}
[3e4c02e920677ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a51a0 +0  72020000
[3e4c02e920683e4] jit-backend-dump}
[3e4c02e9206b512] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a51ae +0  80020000
[3e4c02e9206c117] jit-backend-dump}
[3e4c02e9206f1fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a51c2 +0  88020000
[3e4c02e9206fe1d] jit-backend-dump}
[3e4c02e92072f91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a51e0 +0  86020000
[3e4c02e92073ba0] jit-backend-dump}
[3e4c02e92076ce9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a51f6 +0  8C020000
[3e4c02e92077913] jit-backend-dump}
[3e4c02e9207aa54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5202 +0  9C020000
[3e4c02e9207b65c] jit-backend-dump}
[3e4c02e9207e734] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5212 +0  A8020000
[3e4c02e9207f35e] jit-backend-dump}
[3e4c02e92082468] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5222 +0  B4020000
[3e4c02e92083067] jit-backend-dump}
[3e4c02e9208615b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5236 +0  BC020000
[3e4c02e92086d75] jit-backend-dump}
[3e4c02e92089ed7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a524a +0  C4020000
[3e4c02e9208aae0] jit-backend-dump}
[3e4c02e9208dba3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5260 +0  CA020000
[3e4c02e9208e7bd] jit-backend-dump}
[3e4c02e92091969] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a526e +0  F4020000
[3e4c02e9209255c] jit-backend-dump}
[3e4c02e92095603] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a527e +0  00030000
[3e4c02e9209622d] jit-backend-dump}
[3e4c02e9209930f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5292 +0  08030000
[3e4c02e92099f08] jit-backend-dump}
[3e4c02e9209cfd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a52a0 +0  16030000
[3e4c02e9209dbf8] jit-backend-dump}
[3e4c02e920a0d57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a52b4 +0  1E030000
[3e4c02e920a1953] jit-backend-dump}
[3e4c02e920a55b6] jit-backend}
[3e4c02e920a908f] {jit-log-opt-loop
# Loop 14 ((let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)) from (<= iDepth 0)) : loop with 83 ops
[p0, p1]
+405: label(p0, p1, descr=TargetToken(76385280))
debug_merge_point(0, 0, '(let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)) from (<= iDepth 0)')
+424: guard_class(p1, 16435208, descr=<Guard0x6a502c0>) [p0, p1]
+443: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+447: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x6a50320>) [p0, p1]
debug_merge_point(0, 0, '(node.right thisNode)')
+465: guard_class(p0, 16504240, descr=<Guard0x4920c38>) [p0, p1]
+484: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+488: guard_class(p6, 16504240, descr=<Guard0x4920c80>) [p0, p1]
+500: p8 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+504: guard_class(p8, 16479200, descr=<Guard0x4920cc8>) [p0, p1]
+516: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+527: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x4920d10>) [p0, p1]
+536: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+547: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x6a50380>) [p0, p1]
+556: p14 = getfield_gc_r(p6, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+560: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x6a503e0>) [p0, p1]
+578: p16 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(vector-ref node4949 1)')
+578: guard_not_invalidated(descr=<Guard0x4920d58>) [p0, p1]
+578: i17 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+582: i19 = int_lt(1, i17)
+586: guard_true(i19, descr=<Guard0x4920da0>) [p0, p1]
+592: p20 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+596: guard_class(p20, 16622984, descr=<Guard0x4920de8>) [p0, p1]
+608: p22 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+612: p24 = getarrayitem_gc_r(p22, 1, descr=<ArrayP 8>)
+616: guard_class(p24, ConstClass(W_Vector), descr=<Guard0x4920e30>) [p0, p1]
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand8) from (vector-ref node4949 1)')
+628: i26 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand8)')
debug_merge_point(0, 0, '(<= iDepth 0)')
+632: i28 = int_le(i26, 0)
+636: guard_true(i28, descr=<Guard0x4920e78>) [p0, p1]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '#f')
+642: p29 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+653: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x4920ec0>) [p0, p1]
+662: p31 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+666: p32 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)) from (<= iDepth 0)')
+670: label(p31, p32, descr=TargetToken(76385360))
debug_merge_point(0, 0, '(let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)) from (<= iDepth 0)')
+680: guard_class(p32, 16435208, descr=<Guard0x6a50440>) [p31, p32]
+692: p34 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+696: guard_nonnull_class(p34, ConstClass(ForwardLink), descr=<Guard0x6a504a0>) [p31, p32]
debug_merge_point(0, 0, '(node.right thisNode)')
+714: guard_class(p31, 16504240, descr=<Guard0x4920f08>) [p31, p32]
+726: p37 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+730: guard_class(p37, 16504240, descr=<Guard0x4920f50>) [p31, p32]
+742: p39 = getfield_gc_r(p37, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+746: guard_class(p39, 16479200, descr=<Guard0x4920f98>) [p31, p32]
+758: p41 = getfield_gc_r(p39, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+769: guard_value(p41, ConstPtr(ptr42), descr=<Guard0x4920fe0>) [p31, p32]
+778: p43 = getfield_gc_r(p39, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+789: guard_value(p43, ConstPtr(ptr44), descr=<Guard0x6a50500>) [p31, p32]
+798: p45 = getfield_gc_r(p37, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+802: guard_nonnull_class(p45, ConstClass(W_Vector), descr=<Guard0x6a50560>) [p31, p32]
+820: p47 = getfield_gc_r(p39, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(vector-ref node4949 1)')
+820: guard_not_invalidated(descr=<Guard0x4921028>) [p31, p32]
+820: i48 = getfield_gc_i(p45, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+824: i50 = int_lt(1, i48)
+828: guard_true(i50, descr=<Guard0x4921070>) [p31, p32]
+834: p51 = getfield_gc_r(p45, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+838: guard_class(p51, 16622984, descr=<Guard0x49210b8>) [p31, p32]
+850: p53 = getfield_gc_r(p45, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+854: p55 = getarrayitem_gc_r(p53, 1, descr=<ArrayP 8>)
+858: guard_class(p55, ConstClass(W_Vector), descr=<Guard0x4921100>) [p31, p32]
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand8) from (vector-ref node4949 1)')
+870: i57 = getfield_gc_i(p31, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand8)')
debug_merge_point(0, 0, '(<= iDepth 0)')
+874: i59 = int_le(i57, 0)
+878: guard_true(i59, descr=<Guard0x4921148>) [p31, p32]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '#f')
+884: p60 = getfield_gc_r(p32, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+895: guard_value(p60, ConstPtr(ptr61), descr=<Guard0x4921190>) [p31, p32]
+904: p62 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+908: p63 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)) from (<= iDepth 0)')
+912: jump(p62, p63, descr=TargetToken(76385360))
+928: --end of the loop--
[3e4c02e920edd23] jit-log-opt-loop}
[3e4c02e92335e21] {jit-backend
[3e4c02e923a9f56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a
[3e4c02e923b316b] jit-backend-dump}
[3e4c02e923bdcfa] {jit-backend-addr
Loop 15 ((let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand8)) has address 0x7facb13a58ad to 0x7facb13a5b20 (bootstrap 0x7facb13a5820)
       gc table: 0x7facb13a5750
       function: 0x7facb13a5820
         resops: 0x7facb13a58ad
       failures: 0x7facb13a5b20
            end: 0x7facb13a5d86
[3e4c02e923c0ce7] jit-backend-addr}
[3e4c02e923c4f2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a58c4 +0  E2020000
[3e4c02e923c6280] jit-backend-dump}
[3e4c02e923c9713] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a58da +0  E8020000
[3e4c02e923ca53c] jit-backend-dump}
[3e4c02e923cd9d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a58ed +0  0D030000
[3e4c02e923ce749] jit-backend-dump}
[3e4c02e923d1953] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a58fb +0  1B030000
[3e4c02e923d25f8] jit-backend-dump}
[3e4c02e923d5867] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a590f +0  23030000
[3e4c02e923d6505] jit-backend-dump}
[3e4c02e923d966d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5923 +0  2B030000
[3e4c02e923da32a] jit-backend-dump}
[3e4c02e923dd3c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5937 +0  33030000
[3e4c02e923de07f] jit-backend-dump}
[3e4c02e923e10fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a594b +0  3B030000
[3e4c02e923e1da3] jit-backend-dump}
[3e4c02e923e4e5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5962 +0  40030000
[3e4c02e923e5af5] jit-backend-dump}
[3e4c02e923e8ca3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5972 +0  4C030000
[3e4c02e923e9951] jit-backend-dump}
[3e4c02e923ec9c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5980 +0  5A030000
[3e4c02e923ed681] jit-backend-dump}
[3e4c02e923f06d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a599b +0  5B030000
[3e4c02e923f136b] jit-backend-dump}
[3e4c02e923f43fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a59fd +0  15030000
[3e4c02e923f50c9] jit-backend-dump}
[3e4c02e923f8167] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5a38 +0  F6020000
[3e4c02e923f8e30] jit-backend-dump}
[3e4c02e923fbeb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5a42 +0  08030000
[3e4c02e923fcb51] jit-backend-dump}
[3e4c02e923ffb91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5a56 +0  10030000
[3e4c02e92400829] jit-backend-dump}
[3e4c02e924042e0] jit-backend}
[3e4c02e92407e3f] {jit-log-opt-loop
# Loop 15 ((let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand8)) : entry bridge with 72 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand8)')
+357: guard_class(p1, 16435208, descr=<Guard0x6a505c0>) [p0, p1]
+376: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+380: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x6a50620>) [p0, p1]
debug_merge_point(0, 0, '(<= iDepth 0)')
+398: guard_not_invalidated(descr=<Guard0x49211d8>) [p0, p1]
+398: guard_class(p0, 16504240, descr=<Guard0x4921220>) [p0, p1]
+417: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+421: i8 = int_le(i6, 0)
+425: guard_false(i8, descr=<Guard0x4921268>) [p0, p1]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '(let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)))')
debug_merge_point(0, 0, '(- iDepth 1)')
+431: i10 = int_sub(i6, 1)
debug_merge_point(0, 0, '(make-empty-node)')
+435: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+439: guard_class(p11, 16479200, descr=<Guard0x49212b0>) [p0, p1]
+451: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+462: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x49212f8>) [p0, p1]
+471: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+482: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x6a50680>) [p0, p1]
+491: p17 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.left-set! thisNode AppRand5) from (make-vector 4 0)')
+491: p18 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+502: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x6a506e0>) [p0, p1]
+511: p20 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+515: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x6a50740>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! node4953 0 x)')
+534: p22 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+538: guard_class(p22, 16693360, descr=<Guard0x4921340>) [p0, p1]
+550: i24 = getfield_gc_i(p20, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+554: i26 = int_lt(0, i24)
+558: guard_true(i26, descr=<Guard0x4921388>) [p0, p1]
+564: p27 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+568: p29 = getarrayitem_gc_pure_r(p27, 0, descr=<ArrayP 8>)
+572: guard_nonnull_class(p29, ConstClass(W_Fixnum), descr=<Guard0x6a507a0>) [p0, p1]
+591: p32 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), i24, p29, descr=<Callr 8 ir EF=5>)
+674: guard_no_exception(descr=<Guard0x6a50800>) [p20, p32, i10, p0, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) from (vector-set! node4953 0 x)')
debug_merge_point(0, 0, '(make-empty-node)')
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.right-set! thisNode AppRand6) from (make-vector 4 0)')
+689: p33 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+724: setfield_gc(p20, ConstPtr(ptr34), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+728: setfield_gc(p20, p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+739: guard_value(p33, ConstPtr(ptr35), descr=<Guard0x6a50860>) [p33, p32, i10, p0, p1, p3]
debug_merge_point(0, 0, '(vector-set! node4959 1 x4961)')
+748: i37 = int_lt(1, i24)
+752: guard_true(i37, descr=<Guard0x49213d0>) [p33, p32, i10, p0, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) from (vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(node.left thisNode)')
+758: p38 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+769: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x6a508c0>) [p33, p32, i10, p0, p1, p3]
debug_merge_point(0, 0, '(vector-ref node 0)')
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand7) from (vector-ref node 0)')
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
+778: p40 = new_with_vtable(descr=<SizeDescr 32>)
+822: setfield_gc(p40, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+830: p43 = new_array_clear(1, descr=<ArrayP 8>)
+856: setarrayitem_gc(p43, 0, ConstPtr(ptr45), descr=<ArrayP 8>)
+860: setfield_gc(p40, p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+871: setfield_gc(p40, ConstPtr(ptr46), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+885: setarrayitem_gc(p32, 0, p40, descr=<ArrayP 8>)
+889: p48 = new_with_vtable(descr=<SizeDescr 32>)
+900: setfield_gc(p48, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+908: p51 = new_array_clear(1, descr=<ArrayP 8>)
+927: setarrayitem_gc(p51, 0, ConstPtr(ptr53), descr=<ArrayP 8>)
+931: setfield_gc(p48, p51, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+935: setfield_gc(p48, ConstPtr(ptr54), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+949: setarrayitem_gc(p32, 1, p48, descr=<ArrayP 8>)
+953: jump(p11, i10, p40, p3, p0, p1, descr=TargetToken(76385200))
+976: --end of the loop--
[3e4c02e92444c47] jit-log-opt-loop}
[3e4c02e926c462f] {jit-backend
[3e4c02e92744e1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a5ef0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87C302000048FF0425102F2C04488B8D300100008139100A01000F8500000000488B41088138F01B01000F8500000000488B5008813AF01B01000F8500000000488B5A08813B20BA00000F8500000000488B5310488B355DFEFFFF4839F20F8500000000488B7010488B41104883F80172068138F08C00000F8500000000488B9538010000813A480E00000F8500000000488B7A084883FF017206813F900F00000F85000000004883FE000F8E000000004C8D46FF4C8B4B384C8B1530FEFFFF4D39D10F85000000004C8B53284C8B0D2CFEFFFF4D39CA0F85000000004C8B4818418139B0FE03000F85000000004C8B48084983F9000F8E000000004C8B50104D8B62104983FC01720841813C24601400000F850000000048899D30010000488985400100004889BD480100004D89CD4989F64D89C74C89CF4C89E649BB905E3AB1AC7F00004C895D2041BB20FE410041FFD3488B0C258893F900488B69F8F64504010F857101000048C745200000000048833C2540B35F01000F8500000000488B9D30010000488B5330488BBD40010000F64704010F85500100004C8B258DFDFFFF4C896718488947104C8B2586FDFFFF4C39E20F85000000004983FD010F8E000000004C8B6B204C8B2580FDFFFF4D39E50F8500000000488B0C25F091F900488D9190000000483B14251092F9000F870901000048891425F091F90048C701F08C000048C7410804000000488D512048C702080E000048C74208010000004C8B2539FDFFFF4C896210488951104C8B2D32FDFFFF4C896918F64004810F85D8000000488948104C8D521849C702F08C000049C7420804000000498D522048C702080E000048C74208010000004C896210498952104D896A18F64004810F85B30000004C8950184C8D521849C702F01B010049895A084D89721049897A184D89FD4C8B9D480100004C899D400100004C89953001000049BBE03C3AB1AC7F000041FFE30F1F400049BB50F739B1AC7F000041FFD3E92BFDFFFF49BB70E239B1AC7F000041FFD3E97DFEFFFF5749BB80E139B1AC7F000041FFD3E99DFEFFFF49BBE05E3AB1AC7F00004C895D204D8D9B108CFFFF41FFD3E9E2FEFFFF78105049BBF0E139B1AC7F000041FFD379048048FF01E90DFFFFFF78105049BBF0E139B1AC7F000041FFD379048048FF01E932FFFFFFFF3540FBFFFF49BBA05D3AB1AC7F000041534D8D9B6082FFFF41FFE3FF352CFBFFFF49BBB05D3AB1AC7F000041534D8D9B5082FFFF41FFE3FF3518FBFFFF49BBC05D3AB1AC7F000041534D8D9B4082FFFF41FFE3FF3504FBFFFF49BBD05D3AB1AC7F000041534D8D9B3082FFFF41FFE3FF35F8FAFFFF49BBE05D3AB1AC7F000041534D8D9B2082FFFF41FFE3FF35E4FAFFFF49BBF05D3AB1AC7F000041534D8D9B1082FFFF41FFE3FF35D0FAFFFF49BB005E3AB1AC7F000041534D8D9B0082FFFF41FFE3FF35BCFAFFFF49BB105E3AB1AC7F000041534D8D9BF081FFFF41FFE3FF35A8FAFFFF49BB205E3AB1AC7F000041534D8D9BE081FFFF41FFE3FF3594FAFFFF49BB305E3AB1AC7F000041534D8D9BD081FFFF41FFE3FF3588FAFFFF49BB405E3AB1AC7F000041534D8D9BC081FFFF41FFE3FF357CFAFFFF49BB505E3AB1AC7F000041534D8D9BB081FFFF41FFE3FF3568FAFFFF49BB605E3AB1AC7F000041534D8D9BA081FFFF41FFE3FF3554FAFFFF49BB705E3AB1AC7F000041534D8D9B9081FFFF41FFE3FF3540FAFFFF49BB805E3AB1AC7F000041534D8D9B8081FFFF41FFE3FF352CFAFFFF49BBA05E3AB1AC7F000041534D8D9B1082FFFF41FFE3FF3528FAFFFF49BBB05E3AB1AC7F000041534D8D9B5081FFFF41FFE3FF3514FAFFFF49BBC05E3AB1AC7F000041534D8D9B4081FFFF41FFE3FF3508FAFFFF49BBD05E3AB1AC7F000041534D8D9B3081FFFF41FFE3
[3e4c02e9274facf] jit-backend-dump}
[3e4c02e9275a2c8] {jit-backend-addr
Loop 16 ((Populate iDepth4969 AppRand8) from (vector-ref node4949 1)) has address 0x7facb13a605d to 0x7facb13a6320 (bootstrap 0x7facb13a5fd0)
       gc table: 0x7facb13a5ef0
       function: 0x7facb13a5fd0
         resops: 0x7facb13a605d
       failures: 0x7facb13a6320
            end: 0x7facb13a65be
[3e4c02e9275cd08] jit-backend-addr}
[3e4c02e92760ec9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6074 +0  32030000
[3e4c02e927620a6] jit-backend-dump}
[3e4c02e9276566b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6084 +0  3E030000
[3e4c02e9276643b] jit-backend-dump}
[3e4c02e92769b16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6094 +0  4A030000
[3e4c02e9276a81f] jit-backend-dump}
[3e4c02e9276dcd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a60a4 +0  56030000
[3e4c02e9276ea29] jit-backend-dump}
[3e4c02e92771c74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a60b8 +0  5E030000
[3e4c02e927729bd] jit-backend-dump}
[3e4c02e92775bac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a60d2 +0  60030000
[3e4c02e92776838] jit-backend-dump}
[3e4c02e92779972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a60e5 +0  69030000
[3e4c02e9277a5d9] jit-backend-dump}
[3e4c02e9277d77b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a60fb +0  6F030000
[3e4c02e9277e404] jit-backend-dump}
[3e4c02e92781737] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6105 +0  9D030000
[3e4c02e927823a7] jit-backend-dump}
[3e4c02e9278551c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a611d +0  A1030000
[3e4c02e92786186] jit-backend-dump}
[3e4c02e92789316] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6131 +0  A9030000
[3e4c02e92789f77] jit-backend-dump}
[3e4c02e9278d0c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6142 +0  B4030000
[3e4c02e9278dd18] jit-backend-dump}
[3e4c02e92790e46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6150 +0  C2030000
[3e4c02e92791a9e] jit-backend-dump}
[3e4c02e92794bdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a616c +0  C2030000
[3e4c02e92795821] jit-backend-dump}
[3e4c02e9279897a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a61d4 +0  76030000
[3e4c02e927995d5] jit-backend-dump}
[3e4c02e9279c70f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a620f +0  57030000
[3e4c02e9279d35b] jit-backend-dump}
[3e4c02e927a0452] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6219 +0  69030000
[3e4c02e927a1094] jit-backend-dump}
[3e4c02e927a43af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a622d +0  71030000
[3e4c02e927a4ff4] jit-backend-dump}
[3e4c02e927a8b35] jit-backend}
[3e4c02e927ac7fa] {jit-log-opt-loop
# Loop 16 ((Populate iDepth4969 AppRand8) from (vector-ref node4949 1)) : entry bridge with 81 ops
[p0, p1]
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand8) from (vector-ref node4949 1)')
+373: guard_class(p0, 16499664, descr=<Guard0x6a50920>) [p1, p0]
+392: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+396: guard_class(p3, 16504240, descr=<Guard0x4921418>) [p1, p0]
+408: p5 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+412: guard_class(p5, 16504240, descr=<Guard0x4921460>) [p1, p0]
+424: p7 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+428: guard_class(p7, 16479200, descr=<Guard0x49214a8>) [p1, p0]
+440: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+451: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x49214f0>) [p1, p0]
+460: i11 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+464: p12 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+468: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x6a50980>) [p1, p0]
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand8)')
+486: guard_class(p1, 16435208, descr=<Guard0x4921538>) [p1, p0]
+505: p15 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+509: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x6a509e0>) [p1, p0]
debug_merge_point(0, 0, '(<= iDepth 0)')
+527: guard_not_invalidated(descr=<Guard0x4921580>) [p1, p0]
+527: i18 = int_le(i11, 0)
+531: guard_false(i18, descr=<Guard0x49215c8>) [p1, p0]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '(let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)))')
debug_merge_point(0, 0, '(- iDepth 1)')
+537: i20 = int_sub(i11, 1)
debug_merge_point(0, 0, '(make-empty-node)')
+541: p21 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+552: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x6a50a40>) [p1, p0]
+561: p23 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.left-set! thisNode AppRand5) from (make-vector 4 0)')
+561: p24 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+572: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x6a50aa0>) [p1, p0]
debug_merge_point(0, 0, '(vector-set! node4953 0 x)')
+581: p26 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+585: guard_class(p26, 16693360, descr=<Guard0x4921610>) [p1, p0]
+598: i28 = getfield_gc_i(p12, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+602: i30 = int_lt(0, i28)
+606: guard_true(i30, descr=<Guard0x4921658>) [p1, p0]
+612: p31 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+616: p33 = getarrayitem_gc_pure_r(p31, 0, descr=<ArrayP 8>)
+620: guard_nonnull_class(p33, ConstClass(W_Fixnum), descr=<Guard0x6a50b00>) [p1, p0]
+640: p36 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), i28, p33, descr=<Callr 8 ir EF=5>)
+729: guard_no_exception(descr=<Guard0x6a50b60>) [p12, p36, i11, p7, i20, p1, p15]
debug_merge_point(0, 0, '(let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) from (vector-set! node4953 0 x)')
debug_merge_point(0, 0, '(make-empty-node)')
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.right-set! thisNode AppRand6) from (make-vector 4 0)')
+744: p37 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+779: setfield_gc(p12, ConstPtr(ptr38), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+783: setfield_gc(p12, p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+794: guard_value(p37, ConstPtr(ptr39), descr=<Guard0x6a50bc0>) [p37, p36, p12, i11, p7, i20, p1, p15]
debug_merge_point(0, 0, '(vector-set! node4959 1 x4961)')
+803: i41 = int_lt(1, i28)
+807: guard_true(i41, descr=<Guard0x49216a0>) [p37, p36, p12, i11, p7, i20, p1, p15]
debug_merge_point(0, 0, '(let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) from (vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(node.left thisNode)')
+813: p42 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+824: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x6a50c20>) [p37, p36, p12, i11, p7, i20, p1, p15]
debug_merge_point(0, 0, '(vector-ref node 0)')
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand7) from (vector-ref node 0)')
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
+833: p44 = new_with_vtable(descr=<SizeDescr 32>)
+877: setfield_gc(p44, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+885: p47 = new_array_clear(1, descr=<ArrayP 8>)
+911: setarrayitem_gc(p47, 0, ConstPtr(ptr49), descr=<ArrayP 8>)
+915: setfield_gc(p44, p47, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+926: setfield_gc(p44, ConstPtr(ptr50), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+940: setarrayitem_gc(p36, 0, p44, descr=<ArrayP 8>)
+944: p52 = new_with_vtable(descr=<SizeDescr 32>)
+955: setfield_gc(p52, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+963: p55 = new_array_clear(1, descr=<ArrayP 8>)
+982: setarrayitem_gc(p55, 0, ConstPtr(ptr57), descr=<ArrayP 8>)
+986: setfield_gc(p52, p55, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+990: setfield_gc(p52, ConstPtr(ptr58), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1004: setarrayitem_gc(p36, 1, p52, descr=<ArrayP 8>)
+1008: p60 = new_with_vtable(descr=<SizeDescr 32>)
+1019: setfield_gc(p60, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1023: setfield_gc(p60, i11, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+1027: setfield_gc(p60, p12, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+1031: jump(p7, i20, p44, p15, p60, p1, descr=TargetToken(76385200))
+1072: --end of the loop--
[3e4c02e927f13b5] jit-log-opt-loop}
[3e4c02e92aecc38] {jit-backend
[3e4c02e92b73c03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6760 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C2203000048FF0425302F2C04813B480E00000F85000000004C8B7B084983FF01720741813F900F00000F8500000000813AF01B01000F85000000004C8B720841813EF01B01000F85000000004D8B6E0841817D0020BA00000F85000000004D8B65104C8B15B5FEFFFF4D39D40F85000000004D8B55184C8B25B1FEFFFF4D39E20F85000000004D8B66184983FC01720841813C24F08C00000F85000000004D8B7424084983FE010F8E000000004D8B74241841813EC8EB02000F85000000004D8B7424104D8B661841813C24F08C00000F85000000004C8B72104983FE000F8E000000004D8D56FF4D8B4D384C8B057BFEFFFF4D39C10F85000000004D8B45284C8B0D77FEFFFF4D39C80F85000000004D8B4C2418418139B0FE03000F85000000004D8B4C24084983F9000F8E000000004D8B442410498B78104883FF017206813F601400000F850000000048899D300100004C89BD380100004C89AD400100004C89A5480100004C8995500100004C898D580100004889FE4C89CF49BB00673AB1AC7F00004C895D2041BB20FE410041FFD3488B0C258893F900488B69F8F64504010F85A301000048C745200000000048833C2540B35F01000F8500000000488B9D400100004C8B7B304C8BAD4801000041F64504010F85810100004C8B25CAFDFFFF4D896518498945104C8B25C3FDFFFF4D39E70F85000000004883BD58010000010F8E000000004C8B6320488B3DB9FDFFFF4939FC0F8500000000488B0C25F091F900488D9190000000483B14251092F9000F873701000048891425F091F90048C701F08C000048C7410804000000488D512048C702080E000048C7420801000000488B3D72FDFFFF48897A10488951104C8B256BFDFFFF4C896118F64004810F850601000048894818488D4A1848C701F08C000048C7410804000000488D512048C702080E000048C742080100000048897A10488951104C896118F64004810F85E100000048894810488D421848C700F01B0100488958084C8968184C8970104C8BAD500100004C8B9D380100004C899D400100004C8B9D300100004C899D380100004889853001000049BBE03C3AB1AC7F000041FFE366662E0F1F84000000000048C7442408FFFFFF0049BBD0653AB1AC7F00004C895D204D8D9B207DFFFF41FFD3E9B8FCFFFF49BB70E239B1AC7F000041FFD3E94BFEFFFF415549BB80E139B1AC7F000041FFD3E96BFEFFFF49BB50673AB1AC7F00004C895D204D8D9BA083FFFF41FFD3E9B4FEFFFF78105049BBF0E139B1AC7F000041FFD379048048FF01E9DFFEFFFF78105049BBF0E139B1AC7F000041FFD379048048FF01E904FFFFFFFF352BFBFFFF49BBE0653AB1AC7F000041534D8D9B207AFFFF41FFE3FF3517FBFFFF49BBF0653AB1AC7F000041534D8D9B107AFFFF41FFE3FF3503FBFFFF49BB00663AB1AC7F000041534D8D9B007AFFFF41FFE3FF35EFFAFFFF49BB10663AB1AC7F000041534D8D9BF079FFFF41FFE3FF35DBFAFFFF49BB20663AB1AC7F000041534D8D9BE079FFFF41FFE3FF35CFFAFFFF49BB30663AB1AC7F000041534D8D9BD079FFFF41FFE3FF35C3FAFFFF49BB40663AB1AC7F000041534D8D9BC079FFFF41FFE3FF35AFFAFFFF49BB50663AB1AC7F000041534D8D9BB079FFFF41FFE3FF359BFAFFFF49BB60663AB1AC7F000041534D8D9BA079FFFF41FFE3FF3587FAFFFF49BB70663AB1AC7F000041534D8D9B9079FFFF41FFE3FF3573FAFFFF49BB80663AB1AC7F000041534D8D9B8079FFFF41FFE3FF355FFAFFFF49BB90663AB1AC7F000041534D8D9B7079FFFF41FFE3FF354BFAFFFF49BBA0663AB1AC7F000041534D8D9B6079FFFF41FFE3FF353FFAFFFF49BBB0663AB1AC7F000041534D8D9B5079FFFF41FFE3FF3533FAFFFF49BBC0663AB1AC7F000041534D8D9B4079FFFF41FFE3FF351FFAFFFF49BBD0663AB1AC7F000041534D8D9B3079FFFF41FFE3FF350BFAFFFF49BBE0663AB1AC7F000041534D8D9B2079FFFF41FFE3FF35F7F9FFFF49BBF0663AB1AC7F000041534D8D9B1079FFFF41FFE3FF35E3F9FFFF49BB10673AB1AC7F000041534D8D9BA079FFFF41FFE3FF35DFF9FFFF49BB20673AB1AC7F000041534D8D9BE078FFFF41FFE3FF35CBF9FFFF49BB30673AB1AC7F000041534D8D9BD078FFFF41FFE3FF35BFF9FFFF49BB40673AB1AC7F000041534D8D9BC078FFFF41FFE3
[3e4c02e92b7e788] jit-backend-dump}
[3e4c02e92b89b5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6864 +0  22000000
[3e4c02e92b8af43] jit-backend-dump}
[3e4c02e92b8edb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6b95 +0  22000000
[3e4c02e92b8fb97] jit-backend-dump}
[3e4c02e92b92e28] {jit-backend-addr
bridge out of Guard 0x4921148 has address 0x7facb13a6860 to 0x7facb13a6b90
       gc table: 0x7facb13a6760
    jump target: 0x7facb13a6860
         resops: 0x7facb13a686e
       failures: 0x7facb13a6b90
            end: 0x7facb13a6e97
[3e4c02e92b953ce] jit-backend-addr}
[3e4c02e92b98a97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a687e +0  AD030000
[3e4c02e92b998d5] jit-backend-dump}
[3e4c02e92b9cc36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6895 +0  B2030000
[3e4c02e92b9d8e7] jit-backend-dump}
[3e4c02e92ba0ac0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a68a1 +0  C2030000
[3e4c02e92ba17e2] jit-backend-dump}
[3e4c02e92ba4ad8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a68b2 +0  CD030000
[3e4c02e92ba5766] jit-backend-dump}
[3e4c02e92ba88de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a68c4 +0  D7030000
[3e4c02e92ba956d] jit-backend-dump}
[3e4c02e92bac841] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a68d8 +0  DF030000
[3e4c02e92bad4ca] jit-backend-dump}
[3e4c02e92bb05fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a68ec +0  E7030000
[3e4c02e92bb1287] jit-backend-dump}
[3e4c02e92bb441a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6904 +0  EB030000
[3e4c02e92bb508d] jit-backend-dump}
[3e4c02e92bb827c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6913 +0  14040000
[3e4c02e92bb8ee3] jit-backend-dump}
[3e4c02e92bbc01d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6925 +0  1E040000
[3e4c02e92bbccb5] jit-backend-dump}
[3e4c02e92bbfdf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a693c +0  23040000
[3e4c02e92bc0a6c] jit-backend-dump}
[3e4c02e92bc3bb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a694a +0  31040000
[3e4c02e92bc4860] jit-backend-dump}
[3e4c02e92bc7948] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6962 +0  35040000
[3e4c02e92bc85c1] jit-backend-dump}
[3e4c02e92bcb6be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6976 +0  3D040000
[3e4c02e92bcc34d] jit-backend-dump}
[3e4c02e92bcf488] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6988 +0  47040000
[3e4c02e92bd0107] jit-backend-dump}
[3e4c02e92bd6ac3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6997 +0  54040000
[3e4c02e92bd7893] jit-backend-dump}
[3e4c02e92bdb02e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a69b2 +0  55040000
[3e4c02e92bdbd19] jit-backend-dump}
[3e4c02e92bdf034] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6a26 +0  FD030000
[3e4c02e92bdfd4f] jit-backend-dump}
[3e4c02e92be2f35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6a62 +0  DD030000
[3e4c02e92be3ba5] jit-backend-dump}
[3e4c02e92be6c12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6a70 +0  EB030000
[3e4c02e92be7898] jit-backend-dump}
[3e4c02e92bea90f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6a84 +0  F3030000
[3e4c02e92beb585] jit-backend-dump}
[3e4c02e92beeb13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a52a0 +0  BC150000
[3e4c02e92bef7a8] jit-backend-dump}
[3e4c02e92bf3d20] jit-backend}
[3e4c02e92bf78c5] {jit-log-opt-bridge
# bridge out of Guard 0x4921148 with 91 ops
[p0, p1]
+278: guard_class(p1, 16435208, descr=<Guard0x6a50c80>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+294: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x6a50ce0>) [p0, p1]
debug_merge_point(0, 0, '(node.right thisNode)')
+313: guard_class(p0, 16504240, descr=<Guard0x49216e8>) [p0, p1]
+325: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+329: guard_class(p6, 16504240, descr=<Guard0x4921730>) [p0, p1]
+342: p8 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+346: guard_class(p8, 16479200, descr=<Guard0x4921778>) [p0, p1]
+360: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+371: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x49217c0>) [p0, p1]
+380: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+391: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x6a50d40>) [p0, p1]
+400: p14 = getfield_gc_r(p6, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+404: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x6a50da0>) [p0, p1]
+424: p16 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(vector-ref node4949 1)')
+424: guard_not_invalidated(descr=<Guard0x4921808>) [p0, p1]
+424: i17 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+429: i19 = int_lt(1, i17)
+433: guard_true(i19, descr=<Guard0x4921850>) [p0, p1]
+439: p20 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+444: guard_class(p20, 16622984, descr=<Guard0x4921898>) [p0, p1]
+457: p22 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+462: p24 = getarrayitem_gc_r(p22, 1, descr=<ArrayP 8>)
+466: guard_class(p24, ConstClass(W_Vector), descr=<Guard0x49218e0>) [p0, p1]
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand8) from (vector-ref node4949 1)')
+480: i26 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand8)')
debug_merge_point(0, 0, '(<= iDepth 0)')
+484: i28 = int_le(i26, 0)
+488: guard_false(i28, descr=<Guard0x4921928>) [p0, p1]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '(let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)))')
debug_merge_point(0, 0, '(- iDepth 1)')
+494: i30 = int_sub(i26, 1)
debug_merge_point(0, 0, '(make-empty-node)')
+498: p31 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+509: guard_value(p31, ConstPtr(ptr32), descr=<Guard0x6a50e00>) [p0, p1]
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.left-set! thisNode AppRand5) from (make-vector 4 0)')
+518: p33 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+529: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x6a50e60>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! node4953 0 x)')
+538: p35 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+543: guard_class(p35, 16693360, descr=<Guard0x4921970>) [p0, p1]
+556: i37 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+561: i39 = int_lt(0, i37)
+565: guard_true(i39, descr=<Guard0x49219b8>) [p0, p1]
+571: p40 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+576: p42 = getarrayitem_gc_pure_r(p40, 0, descr=<ArrayP 8>)
+580: guard_nonnull_class(p42, ConstClass(W_Fixnum), descr=<Guard0x6a50ec0>) [p0, p1]
+598: p45 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), i37, p42, descr=<Callr 8 ir EF=5>)
+699: guard_no_exception(descr=<Guard0x6a50f20>) [p24, p45, i26, p8, i30, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) from (vector-set! node4953 0 x)')
debug_merge_point(0, 0, '(make-empty-node)')
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.right-set! thisNode AppRand6) from (make-vector 4 0)')
+714: p46 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+750: setfield_gc(p24, ConstPtr(ptr47), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+754: setfield_gc(p24, p45, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+765: guard_value(p46, ConstPtr(ptr48), descr=<Guard0x6a50f80>) [p46, p45, p24, i26, p8, i30, p1, p3]
debug_merge_point(0, 0, '(vector-set! node4959 1 x4961)')
+774: i50 = int_lt(1, i37)
+782: guard_true(i50, descr=<Guard0x4921a00>) [p46, p45, p24, i26, p8, i30, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) from (vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(node.left thisNode)')
+788: p51 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+799: guard_value(p51, ConstPtr(ptr52), descr=<Guard0x6a50fe0>) [p46, p45, p24, i26, p8, i30, p1, p3]
debug_merge_point(0, 0, '(vector-ref node 0)')
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand7) from (vector-ref node 0)')
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
+808: p53 = new_with_vtable(descr=<SizeDescr 32>)
+852: setfield_gc(p53, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+860: p56 = new_array_clear(1, descr=<ArrayP 8>)
+886: setarrayitem_gc(p56, 0, ConstPtr(ptr58), descr=<ArrayP 8>)
+890: setfield_gc(p53, p56, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+901: setfield_gc(p53, ConstPtr(ptr59), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+915: setarrayitem_gc(p45, 1, p53, descr=<ArrayP 8>)
+919: p61 = new_with_vtable(descr=<SizeDescr 32>)
+930: setfield_gc(p61, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+938: p64 = new_array_clear(1, descr=<ArrayP 8>)
+957: setarrayitem_gc(p64, 0, ConstPtr(ptr66), descr=<ArrayP 8>)
+961: setfield_gc(p61, p64, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+965: setfield_gc(p61, ConstPtr(ptr67), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+979: setarrayitem_gc(p45, 0, p61, descr=<ArrayP 8>)
+983: p69 = new_with_vtable(descr=<SizeDescr 32>)
+994: setfield_gc(p69, p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+998: setfield_gc(p69, p24, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+1002: setfield_gc(p69, i26, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+1006: jump(p8, i30, p61, p3, p69, p1, descr=TargetToken(76385200))
+1072: --end of the loop--
[3e4c02e92c3ffef] jit-log-opt-bridge}
[3e4c02e92cb717c] {jit-backend
[3e4c02e92cd62b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6ef0 +0  0000000000000000000000000000000048817D48FFFFFF000F8C7200000048FF0425D0302C044983FD000F8F000000004889CB488B0C25F091F900488D5120483B14251092F9000F876900000048891425F091F90048C701F01B0100488B9530010000488951084C896910488959184889CA488B9D3801000049BBD0513AB1AC7F000041FFE3662E0F1F84000000000048C7442408FFFFFF0049BBA86E3AB1AC7F00004C895D204D8D9B4874FFFF41FFD3E968FFFFFF49BBD86E3AB1AC7F00004C895D204D8D9B187CFFFF41FFD3E982FFFFFFFF3527FFFFFF49BBB86E3AB1AC7F000041534D8D9B4871FFFF41FFE3FF3513FFFFFF49BBC86E3AB1AC7F000041534D8D9B3871FFFF41FFE3
[3e4c02e92cd9c5d] jit-backend-dump}
[3e4c02e92ce3312] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6f04 +0  22000000
[3e4c02e92ce4664] jit-backend-dump}
[3e4c02e92ce7ec0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6f85 +0  22000000
[3e4c02e92ce8bba] jit-backend-dump}
[3e4c02e92cebdd1] {jit-backend-addr
bridge out of Guard 0x49206e0 has address 0x7facb13a6f00 to 0x7facb13a6f80
       gc table: 0x7facb13a6ef0
    jump target: 0x7facb13a6f00
         resops: 0x7facb13a6f0e
       failures: 0x7facb13a6f80
            end: 0x7facb13a6ffb
[3e4c02e92cee046] jit-backend-addr}
[3e4c02e92cf1670] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6f1c +0  BF000000
[3e4c02e92cf23f7] jit-backend-dump}
[3e4c02e92cf5987] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a3cee +0  0E320000
[3e4c02e92cf65e2] jit-backend-dump}
[3e4c02e92cfa4dd] jit-backend}
[3e4c02e92cfdedd] {jit-log-opt-bridge
# bridge out of Guard 0x49206e0 with 11 ops
[p0, p1, p2, i3, p4, p5]
+38: guard_not_invalidated(descr=<Guard0x6a51040>) [p0, p1, p2, i3, p4, p5]
+38: i7 = int_le(i3, 0)
+42: guard_true(i7, descr=<Guard0x4921a48>) [p0, p1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)) from (<= iDepth 0)')
+48: p8 = new_with_vtable(descr=<SizeDescr 32>)
+92: setfield_gc(p8, p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+103: setfield_gc(p8, i3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+107: setfield_gc(p8, p2, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+111: jump(p8, p1, descr=TargetToken(76385360))
+144: --end of the loop--
[3e4c02e92d0de0f] jit-log-opt-bridge}
[3e4c02e9585fea5] {jit-backend
[3e4c02e958fb394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a
[3e4c02e95904891] jit-backend-dump}
[3e4c02e95912762] {jit-backend-addr
Loop 19 ((let ([if4 (>= i5040 (quotient kArraySize 2))]) (if if4 (void) (let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))))) from (doloop5038 AppRand27)) has address 0x7facb13a725d to 0x7facb13a7410 (bootstrap 0x7facb13a71d0)
       gc table: 0x7facb13a7140
       function: 0x7facb13a71d0
         resops: 0x7facb13a725d
       failures: 0x7facb13a7410
            end: 0x7facb13a75dc
[3e4c02e95915b99] jit-backend-addr}
[3e4c02e9591a407] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7287 +0  97010000
[3e4c02e9591b693] jit-backend-dump}
[3e4c02e9591ef79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a729d +0  9D010000
[3e4c02e9591fd61] jit-backend-dump}
[3e4c02e9592341e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a72b0 +0  C2010000
[3e4c02e95924102] jit-backend-dump}
[3e4c02e9592742c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a72c4 +0  CA010000
[3e4c02e95928123] jit-backend-dump}
[3e4c02e9592b392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a72d8 +0  D2010000
[3e4c02e9592c027] jit-backend-dump}
[3e4c02e9592f272] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a730f +0  B7010000
[3e4c02e9592fedc] jit-backend-dump}
[3e4c02e959330d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7333 +0  AF010000
[3e4c02e95933d1c] jit-backend-dump}
[3e4c02e95936e75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a735c +0  A2010000
[3e4c02e95937ad0] jit-backend-dump}
[3e4c02e9593abfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a736d +0  AD010000
[3e4c02e9593b85c] jit-backend-dump}
[3e4c02e9593ee1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7377 +0  BF010000
[3e4c02e9593fa82] jit-backend-dump}
[3e4c02e95942cc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7384 +0  CE010000
[3e4c02e95943958] jit-backend-dump}
[3e4c02e95946b07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a73bd +0  CD010000
[3e4c02e9594777a] jit-backend-dump}
[3e4c02e9594a862] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a73e1 +0  C5010000
[3e4c02e9594b4c9] jit-backend-dump}
[3e4c02e9594e589] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a73fd +0  C5010000
[3e4c02e9594f1e7] jit-backend-dump}
[3e4c02e95952e6c] jit-backend}
[3e4c02e95956b1b] {jit-log-opt-loop
# Loop 19 ((let ([if4 (>= i5040 (quotient kArraySize 2))]) (if if4 (void) (let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))))) from (doloop5038 AppRand27)) : loop with 75 ops
[p0, p1]
+293: label(p0, p1, descr=TargetToken(76387040))
debug_merge_point(0, 0, '(let ([if4 (>= i5040 (quotient kArraySize 2))]) (if if4 (void) (let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))))) from (doloop5038 AppRand27)')
+312: guard_class(p1, 16435208, descr=<Guard0x6a51340>) [p0, p1]
+331: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+335: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x6a513a0>) [p0, p1]
debug_merge_point(0, 0, '(>= i5040 (quotient kArraySize 2))')
+353: guard_not_invalidated(descr=<Guard0x4921d18>) [p0, p1]
+353: guard_class(p0, 16504944, descr=<Guard0x4921d60>) [p0, p1]
+372: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+376: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+380: guard_class(p7, 16482208, descr=<Guard0x4921da8>) [p0, p1]
+392: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+403: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x4921df0>) [p0, p1]
+412: i11 = getfield_gc_i(p7, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_vals_fixed_0 24 pure>)
+416: i13 = int_eq(i11, -9223372036854775808)
+416: i15 = int_rshift(i11, 1)
+422: i17 = int_lshift(i15, 1)
+428: i19 = int_xor(i11, 2)
+435: i21 = int_rshift(i19, 63)
+439: i22 = int_ne(i17, i11)
+452: i23 = int_and(i21, i22)
+455: i24 = int_add(i15, i23)
+458: i25 = int_ge(i6, i24)
+461: guard_false(i25, descr=<Guard0x4921e38>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (void) (let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))))')
debug_merge_point(0, 0, '(let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27)))')
debug_merge_point(0, 0, '(+ i5040 1)')
+467: i27 = int_add(i6, 1)
debug_merge_point(0, 0, '(let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26))')
debug_merge_point(0, 0, '(/ 1.0 (exact->inexact AppRand25))')
+471: f28 = cast_int_to_float(i27)
+476: i30 = float_eq(f28, 0.000000)
+497: guard_false(i30, descr=<Guard0x4921e80>) [p0, p1]
+503: f32 = float_truediv(1.000000, f28)
debug_merge_point(0, 0, '(vector-set! array i5040 AppRand26)')
+522: p33 = getfield_gc_r(p7, descr=<FieldP pycket.small_list.W_Closure1AsEnvSize2Fixed10.inst_w_val1 32 pure>)
+526: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x6a51400>) [p0, p1]
+544: p35 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+548: guard_class(p35, 16612728, descr=<Guard0x4921ec8>) [p0, p1]
+561: i38 = int_ge(i6, 0)
+565: guard_true(i38, descr=<Guard0x4921f10>) [p0, p1]
+571: i39 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+575: i40 = int_lt(i6, i39)
+578: guard_true(i40, descr=<Guard0x4921f58>) [p0, p1]
+584: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+588: setarrayitem_gc(p41, i6, f32, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))')
debug_merge_point(0, 0, '(+ i5040 1)')
debug_merge_point(0, 0, '(doloop5038 AppRand27)')
debug_merge_point(0, 0, '(let ([if4 (>= i5040 (quotient kArraySize 2))]) (if if4 (void) (let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))))) from (doloop5038 AppRand27)')
+594: label(p7, i27, p1, p3, i24, p33, i39, p41, descr=TargetToken(76387120))
debug_merge_point(0, 0, '(let ([if4 (>= i5040 (quotient kArraySize 2))]) (if if4 (void) (let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))))) from (doloop5038 AppRand27)')
debug_merge_point(0, 0, '(>= i5040 (quotient kArraySize 2))')
+632: guard_not_invalidated(descr=<Guard0x6a51460>) [i27, p7, p1, p3]
+632: i42 = int_ge(i27, i24)
+635: guard_false(i42, descr=<Guard0x4921fa0>) [i27, p7, p1, p3]
debug_merge_point(0, 0, '(if if4 (void) (let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))))')
debug_merge_point(0, 0, '(let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27)))')
debug_merge_point(0, 0, '(+ i5040 1)')
+641: i44 = int_add(i27, 1)
debug_merge_point(0, 0, '(let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26))')
debug_merge_point(0, 0, '(/ 1.0 (exact->inexact AppRand25))')
+645: f45 = cast_int_to_float(i44)
+650: i47 = float_eq(f45, 0.000000)
+671: guard_false(i47, descr=<Guard0x726e020>) [i27, p7, p1, p3]
+677: f49 = float_truediv(1.000000, f45)
debug_merge_point(0, 0, '(vector-set! array i5040 AppRand26)')
+696: i50 = int_lt(i27, i39)
+699: guard_true(i50, descr=<Guard0x726e068>) [i27, p7, p1, p3]
+705: setarrayitem_gc(p41, i27, f49, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))')
debug_merge_point(0, 0, '(+ i5040 1)')
debug_merge_point(0, 0, '(doloop5038 AppRand27)')
debug_merge_point(0, 0, '(let ([if4 (>= i5040 (quotient kArraySize 2))]) (if if4 (void) (let ([AppRand25 (+ i5040 1)]) (let ([AppRand26 (/ 1.0 (exact->inexact AppRand25))]) (vector-set! array i5040 AppRand26)) (let ([AppRand27 (+ i5040 1)]) (doloop5038 AppRand27))))) from (doloop5038 AppRand27)')
+712: jump(p7, i44, p1, p3, i24, p33, i39, p41, descr=TargetToken(76387120))
+720: --end of the loop--
[3e4c02e9599de01] jit-log-opt-loop}
[3e4c02e96138ccd] {jit-backend
[3e4c02e961e7872] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a77f
[3e4c02e961f7da1] jit-backend-dump}
[3e4c02e9620313d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7934 +0  24000000
[3e4c02e96204590] jit-backend-dump}
[3e4c02e962086a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7d35 +0  24000000
[3e4c02e96209530] jit-backend-dump}
[3e4c02e9620c902] {jit-backend-addr
bridge out of Guard 0x49215c8 has address 0x7facb13a7930 to 0x7facb13a7d30
       gc table: 0x7facb13a77f0
    jump target: 0x7facb13a7930
         resops: 0x7facb13a793e
       failures: 0x7facb13a7d30
            end: 0x7facb13a80e7
[3e4c02e9620ed0c] jit-backend-addr}
[3e4c02e96212604] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a794e +0  69040000
[3e4c02e96213483] jit-backend-dump}
[3e4c02e9621690c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a795f +0  74040000
[3e4c02e962175d5] jit-backend-dump}
[3e4c02e9621a829] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7970 +0  7F040000
[3e4c02e9621b4cd] jit-backend-dump}
[3e4c02e9621e61a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7982 +0  89040000
[3e4c02e9621f2ec] jit-backend-dump}
[3e4c02e96222552] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7996 +0  91040000
[3e4c02e962232d6] jit-backend-dump}
[3e4c02e96226438] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a79b1 +0  92040000
[3e4c02e962270e8] jit-backend-dump}
[3e4c02e9622a24a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a79bd +0  A2040000
[3e4c02e9622aebb] jit-backend-dump}
[3e4c02e9622df9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a79d4 +0  A7040000
[3e4c02e9622ec5f] jit-backend-dump}
[3e4c02e9623208a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a79de +0  D5040000
[3e4c02e96232ce2] jit-backend-dump}
[3e4c02e96235df7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a79f2 +0  DD040000
[3e4c02e96236a80] jit-backend-dump}
[3e4c02e96239c3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7a07 +0  E4040000
[3e4c02e9623a8c4] jit-backend-dump}
[3e4c02e96240e13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7a19 +0  EE040000
[3e4c02e96241bb2] jit-backend-dump}
[3e4c02e9624542a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7a31 +0  F2040000
[3e4c02e9624620d] jit-backend-dump}
[3e4c02e96249506] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7a3f +0  00050000
[3e4c02e9624a1ea] jit-backend-dump}
[3e4c02e9624d484] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7a4c +0  0F050000
[3e4c02e9624e110] jit-backend-dump}
[3e4c02e962513b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7a60 +0  17050000
[3e4c02e96252033] jit-backend-dump}
[3e4c02e96255250] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7a76 +0  1D050000
[3e4c02e96255ed2] jit-backend-dump}
[3e4c02e9625926a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7a83 +0  2C050000
[3e4c02e96259eb9] jit-backend-dump}
[3e4c02e9625d098] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7a97 +0  34050000
[3e4c02e9625dcff] jit-backend-dump}
[3e4c02e96260ee5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7aae +0  39050000
[3e4c02e96261b3d] jit-backend-dump}
[3e4c02e96264daf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7ac4 +0  3F050000
[3e4c02e96265a1f] jit-backend-dump}
[3e4c02e96268bd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7ad1 +0  4E050000
[3e4c02e96269829] jit-backend-dump}
[3e4c02e9626c9bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7adf +0  5C050000
[3e4c02e9626d648] jit-backend-dump}
[3e4c02e962707de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7af0 +0  67050000
[3e4c02e9627142c] jit-backend-dump}
[3e4c02e962745e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7b04 +0  6F050000
[3e4c02e96275251] jit-backend-dump}
[3e4c02e9627842e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7b8f +0  00050000
[3e4c02e96279073] jit-backend-dump}
[3e4c02e9627c1fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7baa +0  01050000
[3e4c02e9627ce83] jit-backend-dump}
[3e4c02e9627fff4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a7bbe +0  09050000
[3e4c02e96280c4c] jit-backend-dump}
[3e4c02e962842d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a6105 +0  27180000
[3e4c02e96284f32] jit-backend-dump}
[3e4c02e962893a6] jit-backend}
[3e4c02e9628ce08] {jit-log-opt-bridge
# bridge out of Guard 0x49215c8 with 126 ops
[p0, p1]
+342: guard_class(p1, 16499664, descr=<Guard0x6a514c0>) [p0, p1]
+354: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+358: guard_class(p3, 16504240, descr=<Guard0x726e0b0>) [p0, p1]
+371: p5 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+375: guard_class(p5, 16504240, descr=<Guard0x726e0f8>) [p0, p1]
+388: p7 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+392: guard_class(p7, 16479200, descr=<Guard0x726e140>) [p0, p1]
+406: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+417: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x726e188>) [p0, p1]
+426: i11 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+430: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+434: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x6a51520>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand8)')
+453: guard_class(p0, 16435208, descr=<Guard0x726e1d0>) [p0, p1]
+465: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+469: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x6a51580>) [p0, p1]
debug_merge_point(0, 0, '(<= iDepth 0)')
+488: guard_not_invalidated(descr=<Guard0x726e218>) [p0, p1]
+488: i18 = int_le(i11, 0)
+492: guard_true(i18, descr=<Guard0x726e260>) [p0, p1]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '#f')
+498: p19 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+509: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x726e2a8>) [p0, p1]
+518: p21 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+522: p22 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand17 (+ i5004 1)]) (doloop AppRand17)) from (<= iDepth 0)')
+526: guard_class(p21, 16504944, descr=<Guard0x726e2f0>) [p0, p1]
+539: p24 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+543: guard_class(p22, 16435208, descr=<Guard0x726e338>) [p0, p1]
+557: p26 = getfield_gc_r(p22, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+562: guard_nonnull_class(p26, ConstClass(ForwardLink), descr=<Guard0x6a515e0>) [p0, p1]
debug_merge_point(0, 0, '(+ i5004 1)')
+581: i28 = getfield_gc_i(p21, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+585: i30 = int_add_ovf(i28, 1)
+589: guard_no_overflow(descr=<Guard0x726e380>) [p0, p1]
debug_merge_point(0, 0, '(doloop AppRand17)')
+595: guard_class(p24, 16478824, descr=<Guard0x726e3c8>) [p0, p1]
+608: p32 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+619: guard_value(p32, ConstPtr(ptr33), descr=<Guard0x726e410>) [p0, p1]
debug_merge_point(0, 0, '(let ([if2 (>= i5004 iNumIters)]) (if if2 (void) (let ([AppRand16 (make-empty-node)]) (Populate depth AppRand16) (let ([AppRand17 (+ i5004 1)]) (doloop AppRand17))))) from (doloop AppRand17)')
debug_merge_point(0, 0, '(>= i5004 iNumIters)')
+628: p34 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+632: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x6a51640>) [p0, p1]
+650: i36 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+654: i37 = int_ge(i30, i36)
+657: guard_false(i37, descr=<Guard0x726e458>) [p0, p1]
debug_merge_point(0, 0, '(if if2 (void) (let ([AppRand16 (make-empty-node)]) (Populate depth AppRand16) (let ([AppRand17 (+ i5004 1)]) (doloop AppRand17))))')
debug_merge_point(0, 0, '(let ([AppRand16 (make-empty-node)]) (Populate depth AppRand16) (let ([AppRand17 (+ i5004 1)]) (doloop AppRand17)))')
debug_merge_point(0, 0, '(make-empty-node)')
+663: p38 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+674: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x6a516a0>) [p0, p1]
+683: p40 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(Populate depth AppRand16) from (make-vector 4 0)')
+683: p41 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+687: guard_nonnull_class(p41, 16479200, descr=<Guard0x6a51700>) [p0, p1]
+706: p43 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+710: guard_nonnull_class(p43, ConstClass(W_Fixnum), descr=<Guard0x6a51760>) [p0, p1]
+728: p45 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+732: guard_value(p45, ConstPtr(ptr46), descr=<Guard0x726e4a0>) [p0, p1]
+741: i47 = getfield_gc_i(p43, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate depth AppRand16)')
debug_merge_point(0, 0, '(<= iDepth 0)')
+745: i49 = int_le(i47, 0)
+749: guard_false(i49, descr=<Guard0x726e4e8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '(let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)))')
debug_merge_point(0, 0, '(- iDepth 1)')
+755: i51 = int_sub(i47, 1)
debug_merge_point(0, 0, '(make-empty-node)')
+759: p52 = getfield_gc_r(p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+763: guard_value(p52, ConstPtr(ptr53), descr=<Guard0x6a517c0>) [p0, p1]
+772: p54 = getfield_gc_r(p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.left-set! thisNode AppRand5) from (make-vector 4 0)')
+772: p55 = getfield_gc_r(p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+783: guard_value(p55, ConstPtr(ptr56), descr=<Guard0x6a51820>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! node4953 0 x)')
+799: p60 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), 4, ConstPtr(ptr59), descr=<Callr 8 ir EF=5>)
+916: guard_no_exception(descr=<Guard0x6a51880>) [p60, i30, p24, p22, i47, p41, i51, p26]
debug_merge_point(0, 0, '(let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) from (vector-set! node4953 0 x)')
debug_merge_point(0, 0, '(make-empty-node)')
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.right-set! thisNode AppRand6) from (make-vector 4 0)')
+931: p61 = getfield_gc_r(p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+949: guard_value(p61, ConstPtr(ptr62), descr=<Guard0x6a518e0>) [p60, i30, p24, p22, i47, p41, i51, p26]
debug_merge_point(0, 0, '(vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) from (vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(node.left thisNode)')
+958: p63 = getfield_gc_r(p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+969: guard_value(p63, ConstPtr(ptr64), descr=<Guard0x6a51940>) [p60, i30, p24, p22, i47, p41, i51, p26]
debug_merge_point(0, 0, '(vector-ref node 0)')
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand7) from (vector-ref node 0)')
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
+978: p65 = new_with_vtable(descr=<SizeDescr 32>)
+1022: setfield_gc(p65, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1030: p68 = new_array_clear(1, descr=<ArrayP 8>)
+1049: setarrayitem_gc(p68, 0, ConstPtr(ptr70), descr=<ArrayP 8>)
+1060: setfield_gc(p65, p68, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1071: setfield_gc(p65, ConstPtr(ptr71), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1085: setarrayitem_gc(p60, 0, p65, descr=<ArrayP 8>)
+1089: p73 = new_with_vtable(descr=<SizeDescr 32>)
+1100: setfield_gc(p73, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1108: p76 = new_array_clear(1, descr=<ArrayP 8>)
+1127: setarrayitem_gc(p76, 0, ConstPtr(ptr78), descr=<ArrayP 8>)
+1131: setfield_gc(p73, p76, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1135: setfield_gc(p73, ConstPtr(ptr79), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1149: setarrayitem_gc(p60, 1, p73, descr=<ArrayP 8>)
+1153: p81 = new_with_vtable(descr=<SizeDescr 32>)
+1164: p82 = new_with_vtable(descr=<SizeDescr 32>)
+1175: setfield_gc(p82, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1183: setfield_gc(p82, p60, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1194: setfield_gc(p82, ConstPtr(ptr83), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1198: p84 = new_with_vtable(descr=<SizeDescr 40>)
+1209: p85 = new_with_vtable(descr=<SizeDescr 24>)
+1220: setfield_gc(p85, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1231: setfield_gc(p85, i30, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1242: setfield_gc(p81, p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1246: setfield_gc(p81, i47, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+1250: setfield_gc(p84, p26, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1261: setfield_gc(p84, ConstPtr(ptr86), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1272: setfield_gc(p84, p85, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1276: setfield_gc(p84, p22, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1287: setfield_gc(p81, p82, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+1291: jump(p41, i51, p65, p26, p81, p84, descr=TargetToken(76385200))
+1344: --end of the loop--
[3e4c02e962f96c6] jit-log-opt-bridge}
[3e4c02e96699694] {jit-backend
[3e4c02e9674d9d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a
[3e4c02e9675f252] jit-backend-dump}
[3e4c02e9676a6ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8484 +0  23000000
[3e4c02e9676bb0b] jit-backend-dump}
[3e4c02e9676f96d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a88b5 +0  23000000
[3e4c02e96770712] jit-backend-dump}
[3e4c02e96773ab4] {jit-backend-addr
bridge out of Guard 0x4921190 has address 0x7facb13a8480 to 0x7facb13a88b0
       gc table: 0x7facb13a8320
    jump target: 0x7facb13a8480
         resops: 0x7facb13a848e
       failures: 0x7facb13a88b0
            end: 0x7facb13a8cbb
[3e4c02e96775fbb] jit-backend-addr}
[3e4c02e9677966e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a849e +0  99040000
[3e4c02e9677a40a] jit-backend-dump}
[3e4c02e9677d7ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a84b5 +0  9E040000
[3e4c02e9677e43a] jit-backend-dump}
[3e4c02e96781617] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a84c1 +0  AE040000
[3e4c02e96782290] jit-backend-dump}
[3e4c02e967854cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a84d2 +0  B9040000
[3e4c02e96786160] jit-backend-dump}
[3e4c02e967892ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a84e3 +0  C4040000
[3e4c02e96789f57] jit-backend-dump}
[3e4c02e9678d092] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a84f7 +0  CC040000
[3e4c02e9678dd2a] jit-backend-dump}
[3e4c02e96790ee8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a850b +0  D4040000
[3e4c02e96791b3c] jit-backend-dump}
[3e4c02e96794cb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8522 +0  D9040000
[3e4c02e96795915] jit-backend-dump}
[3e4c02e96798c4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8530 +0  03050000
[3e4c02e967998ac] jit-backend-dump}
[3e4c02e9679ca51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8541 +0  0E050000
[3e4c02e9679d6af] jit-backend-dump}
[3e4c02e967a077e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8556 +0  15050000
[3e4c02e967a13fb] jit-backend-dump}
[3e4c02e967a4560] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8564 +0  23050000
[3e4c02e967a51e3] jit-backend-dump}
[3e4c02e967a82b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8578 +0  2B050000
[3e4c02e967a8f28] jit-backend-dump}
[3e4c02e967ac02f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a858d +0  32050000
[3e4c02e967accba] jit-backend-dump}
[3e4c02e967afd6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a859f +0  3C050000
[3e4c02e967b09d8] jit-backend-dump}
[3e4c02e967b3abd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a85b6 +0  41050000
[3e4c02e967b4755] jit-backend-dump}
[3e4c02e967b7886] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a85c4 +0  4F050000
[3e4c02e967b84cf] jit-backend-dump}
[3e4c02e967bb6d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a85d1 +0  5E050000
[3e4c02e967bc343] jit-backend-dump}
[3e4c02e967bf406] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a85e5 +0  66050000
[3e4c02e967c005e] jit-backend-dump}
[3e4c02e967c3198] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a85fb +0  6C050000
[3e4c02e967c3e0f] jit-backend-dump}
[3e4c02e967c7010] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8608 +0  7B050000
[3e4c02e967c7c68] jit-backend-dump}
[3e4c02e967cadca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a861c +0  83050000
[3e4c02e967cba65] jit-backend-dump}
[3e4c02e967ceb62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8633 +0  88050000
[3e4c02e967cf7aa] jit-backend-dump}
[3e4c02e967d2812] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8649 +0  8E050000
[3e4c02e967d3482] jit-backend-dump}
[3e4c02e967d65a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8656 +0  9D050000
[3e4c02e967d71da] jit-backend-dump}
[3e4c02e967da294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8664 +0  AB050000
[3e4c02e967daefe] jit-backend-dump}
[3e4c02e967de01d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8676 +0  B5050000
[3e4c02e967dec62] jit-backend-dump}
[3e4c02e967e1cd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a868a +0  BD050000
[3e4c02e967e2921] jit-backend-dump}
[3e4c02e967e5a46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8711 +0  52050000
[3e4c02e967e6676] jit-backend-dump}
[3e4c02e967e96b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a872c +0  53050000
[3e4c02e967ea301] jit-backend-dump}
[3e4c02e967ed3f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8740 +0  5B050000
[3e4c02e967ee03e] jit-backend-dump}
[3e4c02e967f133d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a52b4 +0  C8310000
[3e4c02e967f1fb0] jit-backend-dump}
[3e4c02e967f5eeb] jit-backend}
[3e4c02e967f99f8] {jit-log-opt-bridge
# bridge out of Guard 0x4921190 with 138 ops
[p0, p1]
+374: guard_class(p1, 16435208, descr=<Guard0x6a519a0>) [p0, p1]
+386: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+390: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x6a51a00>) [p0, p1]
debug_merge_point(0, 0, '(node.right thisNode)')
+409: guard_class(p0, 16504240, descr=<Guard0x726e530>) [p0, p1]
+421: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+425: guard_class(p6, 16504240, descr=<Guard0x726e578>) [p0, p1]
+438: p8 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+442: guard_class(p8, 16479200, descr=<Guard0x726e5c0>) [p0, p1]
+455: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+466: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x726e608>) [p0, p1]
+475: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+486: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x6a51a60>) [p0, p1]
+495: p14 = getfield_gc_r(p6, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+499: guard_nonnull_class(p14, ConstClass(W_Vector), descr=<Guard0x6a51ac0>) [p0, p1]
+518: p16 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(vector-ref node4949 1)')
+518: guard_not_invalidated(descr=<Guard0x726e650>) [p0, p1]
+518: i17 = getfield_gc_i(p14, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+522: i19 = int_lt(1, i17)
+526: guard_true(i19, descr=<Guard0x726e698>) [p0, p1]
+532: p20 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+536: guard_class(p20, 16622984, descr=<Guard0x726e6e0>) [p0, p1]
+549: p22 = getfield_gc_r(p14, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+553: p24 = getarrayitem_gc_r(p22, 1, descr=<ArrayP 8>)
+557: guard_class(p24, ConstClass(W_Vector), descr=<Guard0x726e728>) [p0, p1]
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand8) from (vector-ref node4949 1)')
+570: i26 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand8)')
debug_merge_point(0, 0, '(<= iDepth 0)')
+574: i28 = int_le(i26, 0)
+578: guard_true(i28, descr=<Guard0x726e770>) [p0, p1]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '#f')
+584: p29 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+595: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x726e7b8>) [p0, p1]
+604: p31 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+608: p32 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand17 (+ i5004 1)]) (doloop AppRand17)) from (<= iDepth 0)')
+612: guard_class(p31, 16504944, descr=<Guard0x726e800>) [p0, p1]
+625: p34 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+629: guard_class(p32, 16435208, descr=<Guard0x726e848>) [p0, p1]
+643: p36 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+647: guard_nonnull_class(p36, ConstClass(ForwardLink), descr=<Guard0x6a51b20>) [p0, p1]
debug_merge_point(0, 0, '(+ i5004 1)')
+666: i38 = getfield_gc_i(p31, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+670: i40 = int_add_ovf(i38, 1)
+674: guard_no_overflow(descr=<Guard0x726e890>) [p0, p1]
debug_merge_point(0, 0, '(doloop AppRand17)')
+680: guard_class(p34, 16478824, descr=<Guard0x726e8d8>) [p0, p1]
+693: p42 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+704: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x726e920>) [p0, p1]
debug_merge_point(0, 0, '(let ([if2 (>= i5004 iNumIters)]) (if if2 (void) (let ([AppRand16 (make-empty-node)]) (Populate depth AppRand16) (let ([AppRand17 (+ i5004 1)]) (doloop AppRand17))))) from (doloop AppRand17)')
debug_merge_point(0, 0, '(>= i5004 iNumIters)')
+713: p44 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+717: guard_nonnull_class(p44, ConstClass(W_Fixnum), descr=<Guard0x6a51b80>) [p0, p1]
+735: i46 = getfield_gc_i(p44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+739: i47 = int_ge(i40, i46)
+742: guard_false(i47, descr=<Guard0x726e968>) [p0, p1]
debug_merge_point(0, 0, '(if if2 (void) (let ([AppRand16 (make-empty-node)]) (Populate depth AppRand16) (let ([AppRand17 (+ i5004 1)]) (doloop AppRand17))))')
debug_merge_point(0, 0, '(let ([AppRand16 (make-empty-node)]) (Populate depth AppRand16) (let ([AppRand17 (+ i5004 1)]) (doloop AppRand17)))')
debug_merge_point(0, 0, '(make-empty-node)')
+748: p48 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+759: guard_value(p48, ConstPtr(ptr49), descr=<Guard0x6a51be0>) [p0, p1]
+768: p50 = getfield_gc_r(p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(Populate depth AppRand16) from (make-vector 4 0)')
+768: p51 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+772: guard_nonnull_class(p51, 16479200, descr=<Guard0x6a51c40>) [p0, p1]
+791: p53 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+795: guard_nonnull_class(p53, ConstClass(W_Fixnum), descr=<Guard0x6a51ca0>) [p0, p1]
+813: p55 = getfield_gc_r(p51, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+817: guard_value(p55, ConstPtr(ptr56), descr=<Guard0x726e9b0>) [p0, p1]
+826: i57 = getfield_gc_i(p53, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate depth AppRand16)')
debug_merge_point(0, 0, '(<= iDepth 0)')
+830: i59 = int_le(i57, 0)
+834: guard_false(i59, descr=<Guard0x726e9f8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))')
debug_merge_point(0, 0, '(let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8)))')
debug_merge_point(0, 0, '(- iDepth 1)')
+840: i61 = int_sub(i57, 1)
debug_merge_point(0, 0, '(make-empty-node)')
+845: p62 = getfield_gc_r(p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+849: guard_value(p62, ConstPtr(ptr63), descr=<Guard0x6a51d00>) [p0, p1]
+858: p64 = getfield_gc_r(p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.left-set! thisNode AppRand5) from (make-vector 4 0)')
+858: p65 = getfield_gc_r(p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+869: guard_value(p65, ConstPtr(ptr66), descr=<Guard0x6a51d60>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! node4953 0 x)')
+885: p70 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), 4, ConstPtr(ptr69), descr=<Callr 8 ir EF=5>)
+998: guard_no_exception(descr=<Guard0x6a51dc0>) [p70, i40, p34, p32, i57, p51, i61, p36]
debug_merge_point(0, 0, '(let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) from (vector-set! node4953 0 x)')
debug_merge_point(0, 0, '(make-empty-node)')
debug_merge_point(0, 0, '(make-vector 4 0)')
debug_merge_point(0, 0, '(node.right-set! thisNode AppRand6) from (make-vector 4 0)')
+1013: p71 = getfield_gc_r(p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1031: guard_value(p71, ConstPtr(ptr72), descr=<Guard0x6a51e20>) [p70, i40, p34, p32, i57, p51, i61, p36]
debug_merge_point(0, 0, '(vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) from (vector-set! node4959 1 x4961)')
debug_merge_point(0, 0, '(node.left thisNode)')
+1040: p73 = getfield_gc_r(p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1051: guard_value(p73, ConstPtr(ptr74), descr=<Guard0x6a51e80>) [p70, i40, p34, p32, i57, p51, i61, p36]
debug_merge_point(0, 0, '(vector-ref node 0)')
debug_merge_point(0, 0, '(Populate iDepth4969 AppRand7) from (vector-ref node 0)')
debug_merge_point(0, 0, '(let ([if0 (<= iDepth 0)]) (if if0 #f (let ([iDepth4969 (- iDepth 1)][AppRand5 (make-empty-node)]) (node.left-set! thisNode AppRand5) (let ([AppRand6 (make-empty-node)]) (node.right-set! thisNode AppRand6)) (let ([AppRand7 (node.left thisNode)]) (Populate iDepth4969 AppRand7)) (let ([AppRand8 (node.right thisNode)]) (Populate iDepth4969 AppRand8))))) from (Populate iDepth4969 AppRand7)')
+1060: p75 = new_with_vtable(descr=<SizeDescr 32>)
+1104: setfield_gc(p75, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1112: p78 = new_array_clear(1, descr=<ArrayP 8>)
+1131: setarrayitem_gc(p78, 0, ConstPtr(ptr80), descr=<ArrayP 8>)
+1142: setfield_gc(p75, p78, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1153: setfield_gc(p75, ConstPtr(ptr81), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1167: setarrayitem_gc(p70, 1, p75, descr=<ArrayP 8>)
+1171: p83 = new_with_vtable(descr=<SizeDescr 32>)
+1182: setfield_gc(p83, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1190: p86 = new_array_clear(1, descr=<ArrayP 8>)
+1209: setarrayitem_gc(p86, 0, ConstPtr(ptr88), descr=<ArrayP 8>)
+1213: setfield_gc(p83, p86, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1217: setfield_gc(p83, ConstPtr(ptr89), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1231: setarrayitem_gc(p70, 0, p83, descr=<ArrayP 8>)
+1235: p91 = new_with_vtable(descr=<SizeDescr 32>)
+1246: p92 = new_with_vtable(descr=<SizeDescr 32>)
+1257: setfield_gc(p92, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1265: setfield_gc(p92, p70, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1276: setfield_gc(p92, ConstPtr(ptr93), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1280: p94 = new_with_vtable(descr=<SizeDescr 40>)
+1291: p95 = new_with_vtable(descr=<SizeDescr 24>)
+1303: setfield_gc(p95, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1314: setfield_gc(p95, i40, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1318: setfield_gc(p91, p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1322: setfield_gc(p94, p36, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1333: setfield_gc(p91, p92, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+1337: setfield_gc(p91, i57, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+1341: setfield_gc(p94, ConstPtr(ptr96), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1352: setfield_gc(p94, p95, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1356: setfield_gc(p94, p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1367: jump(p51, i61, p83, p36, p91, p94, descr=TargetToken(76385200))
+1424: --end of the loop--
[3e4c02e96869d0e] jit-log-opt-bridge}
[3e4c02e9a687bb7] {jit-backend
[3e4c02e9a702cd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8e10 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C6202000048FF042570D08303813E301901000F85000000004C8B7E0841813FB8B500000F85000000004D8B77104C8B2D02FFFFFF4D39EE0F85000000004D8B77184983FE01720741813E40B400000F85000000004C8B7E184983FF01720741813FF08C00000F85000000004D8B66104C8B15E0FEFFFF4D39D40F8500000000813B101100000F85000000004C8B53084983FA01720741813A900F00000F85000000004D8B56084D8B66184C8B35C5FEFFFF4D39F40F85000000004C8B35CDFEFFFF4D39D60F85000000004C8B53204C8B35C9FEFFFF4D39F20F85000000004C8B73104C8B531841813EB01E01000F85000000004D8B660841813A480E00000F85000000004D8B4A084983F9017207418139900F00000F85000000004D8B46104983E8010F800000000041813C24B8B500000F85000000004D8B7424104D39EE0F85000000004989D5488B0C25F091F900488D9100010000483B14251092F9000F872701000048891425F091F90048C701B01E0100488D511848C702101100004C8D722849C706301901004D8966084D894610498D762048C706F08C000048C7460804000000488D5E2048C703080E000048C74308040000004C897B104C8D7B3049C707F08C000049C7470804000000498D7F2048C707080E000048C74708040000004C896F1048894718488B05EDFDFFFF488947204889472849897F10488B3DE2FDFFFF49897F184C897B18488943204889432848895E1048897E18498976184C8961084C894A084C8B0DBFFDFFFF4C894A204C8972104C8952184C89411048898D300100004889953801000049BB00063AB1AC7F000041FFE36666662E0F1F84000000000048C7442408FFFFFF0049BBD08C3AB1AC7F00004C895D204D8D9B2056FFFF41FFD3E978FDFFFF49BB008E3AB1AC7F00004C895D204D8D9BF05CFFFF41FFD3E9C4FEFFFFFF3577FCFFFF49BBE08C3AB1AC7F000041534D8D9B2053FFFF41FFE3FF3563FCFFFF49BBF08C3AB1AC7F000041534D8D9B1053FFFF41FFE3FF3557FCFFFF49BB008D3AB1AC7F000041534D8D9B0053FFFF41FFE3FF3543FCFFFF49BB108D3AB1AC7F000041534D8D9BF052FFFF41FFE3FF352FFCFFFF49BB208D3AB1AC7F000041534D8D9BE052FFFF41FFE3FF3523FCFFFF49BB308D3AB1AC7F000041534D8D9BD052FFFF41FFE3FF350FFCFFFF49BB408D3AB1AC7F000041534D8D9BC052FFFF41FFE3FF35FBFBFFFF49BB508D3AB1AC7F000041534D8D9BB052FFFF41FFE3FF35EFFBFFFF49BB608D3AB1AC7F000041534D8D9BA052FFFF41FFE3FF35DBFBFFFF49BB708D3AB1AC7F000041534D8D9B9052FFFF41FFE3FF35CFFBFFFF49BB808D3AB1AC7F000041534D8D9B8052FFFF41FFE3FF35C3FBFFFF49BB908D3AB1AC7F000041534D8D9B7052FFFF41FFE3FF35AFFBFFFF49BBA08D3AB1AC7F000041534D8D9B6052FFFF41FFE3FF359BFBFFFF49BBB08D3AB1AC7F000041534D8D9B5052FFFF41FFE3FF3587FBFFFF49BBC08D3AB1AC7F000041534D8D9B4052FFFF41FFE3FF3573FBFFFF49BBD08D3AB1AC7F000041534D8D9B3052FFFF41FFE3FF355FFBFFFF49BBE08D3AB1AC7F000041534D8D9B2052FFFF41FFE3FF354BFBFFFF49BBF08D3AB1AC7F000041534D8D9B1052FFFF41FFE3
[3e4c02e9a70b7e1] jit-backend-dump}
[3e4c02e9a716932] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8ee4 +0  1E000000
[3e4c02e9a717e9b] jit-backend-dump}
[3e4c02e9a71bd96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9155 +0  1E000000
[3e4c02e9a71cb91] jit-backend-dump}
[3e4c02e9a7201d3] {jit-backend-addr
bridge out of Guard 0x49200f8 has address 0x7facb13a8ee0 to 0x7facb13a9150
       gc table: 0x7facb13a8e10
    jump target: 0x7facb13a8ee0
         resops: 0x7facb13a8eee
       failures: 0x7facb13a9150
            end: 0x7facb13a938b
[3e4c02e9a722727] jit-backend-addr}
[3e4c02e9a726053] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8efe +0  91020000
[3e4c02e9a726ebc] jit-backend-dump}
[3e4c02e9a72a43b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8f0f +0  9C020000
[3e4c02e9a72b0ba] jit-backend-dump}
[3e4c02e9a72e3c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8f23 +0  A4020000
[3e4c02e9a72f067] jit-backend-dump}
[3e4c02e9a7323b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8f3a +0  A9020000
[3e4c02e9a733044] jit-backend-dump}
[3e4c02e9a736282] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8f51 +0  AE020000
[3e4c02e9a736f42] jit-backend-dump}
[3e4c02e9a73a23e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8f65 +0  B6020000
[3e4c02e9a73aeae] jit-backend-dump}
[3e4c02e9a73e0fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8f71 +0  C6020000
[3e4c02e9a73ed5d] jit-backend-dump}
[3e4c02e9a741fe2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8f88 +0  CB020000
[3e4c02e9a742c4f] jit-backend-dump}
[3e4c02e9a745eac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8fa0 +0  CF020000
[3e4c02e9a746b13] jit-backend-dump}
[3e4c02e9a74a029] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8fb0 +0  F7020000
[3e4c02e9a74ac62] jit-backend-dump}
[3e4c02e9a74debf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8fc4 +0  FF020000
[3e4c02e9a74eb26] jit-backend-dump}
[3e4c02e9a751e0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8fd9 +0  06030000
[3e4c02e9a752a83] jit-backend-dump}
[3e4c02e9a755cc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a8fea +0  11030000
[3e4c02e9a756907] jit-backend-dump}
[3e4c02e9a759b5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9001 +0  16030000
[3e4c02e9a75a7c2] jit-backend-dump}
[3e4c02e9a75d9d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a900f +0  24030000
[3e4c02e9a75e61b] jit-backend-dump}
[3e4c02e9a761908] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a901d +0  32030000
[3e4c02e9a76255f] jit-backend-dump}
[3e4c02e9a7657b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a902b +0  40030000
[3e4c02e9a766402] jit-backend-dump}
[3e4c02e9a769a07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a30ea +0  F25D0000
[3e4c02e9a76a64f] jit-backend-dump}
[3e4c02e9a76e7ae] jit-backend}
[3e4c02e9a7723af] {jit-log-opt-bridge
# bridge out of Guard 0x49200f8 with 79 ops
[p0, p1, p2, p3]
+230: guard_class(p1, 16503536, descr=<Guard0x6a51fa0>) [p0, p1, p2, p3]
+242: p5 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+246: guard_class(p5, 16478072, descr=<Guard0x726eb60>) [p0, p1, p2, p3]
+259: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+270: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x726eba8>) [p0, p1, p2, p3]
+279: p9 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+283: guard_nonnull_class(p9, 16477696, descr=<Guard0x74b8020>) [p0, p1, p2, p3]
+302: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+306: guard_nonnull_class(p11, ConstClass(W_Vector), descr=<Guard0x74b8080>) [p0, p1, p2, p3]
+325: p13 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+336: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x726ebf0>) [p0, p1, p2, p3]
+345: p15 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([r r][l l][v (make-empty-node)]) (vector-set! v 0 l) (vector-set! v 1 r) v)')
+345: guard_class(p0, 16435920, descr=<Guard0x726ec38>) [p0, p1, p2, p3]
+357: p17 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+361: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x74b80e0>) [p0, p1, p2, p3]
debug_merge_point(0, 0, 'r')
debug_merge_point(0, 0, 'l')
+380: p19 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-empty-node)')
+384: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+395: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x74b8140>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(make-vector 4 0)')
+404: guard_not_invalidated(descr=<Guard0x726ec80>) [p0, p1, p2, p3]
+411: i23 = instance_ptr_eq(ConstPtr(ptr22), p19)
+414: guard_true(i23, descr=<Guard0x726ecc8>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! v 0 l)')
debug_merge_point(0, 0, '(vector-set! v 1 r)')
debug_merge_point(0, 0, 'v')
+420: p24 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+431: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x726ed10>) [p0, p1, p2, p3]
+440: p26 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+444: p27 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+448: guard_class(p26, 16504944, descr=<Guard0x726ed58>) [p0, p1, p2, p3]
+461: p29 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+465: guard_class(p27, 16435208, descr=<Guard0x726eda0>) [p0, p1, p2, p3]
+478: p31 = getfield_gc_r(p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+482: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x74b81a0>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(- iDepth4987 1) from (vector-set! v 1 r)')
+501: i33 = getfield_gc_i(p26, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+505: i35 = int_sub_ovf(i33, 1)
+509: guard_no_overflow(descr=<Guard0x726ede8>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))')
debug_merge_point(0, 0, '(MakeTree AppRand11)')
+515: guard_class(p29, 16478072, descr=<Guard0x726ee30>) [p0, p1, p2, p3]
+529: p37 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+534: guard_value(p37, ConstPtr(ptr38), descr=<Guard0x726ee78>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand11)')
+543: p39 = new_with_vtable(descr=<SizeDescr 24>)
+590: p40 = new_with_vtable(descr=<SizeDescr 40>)
+601: p41 = new_with_vtable(descr=<SizeDescr 32>)
+612: setfield_gc(p41, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+616: setfield_gc(p41, i35, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+620: p42 = new_with_vtable(descr=<SizeDescr 32>)
+631: setfield_gc(p42, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+639: p45 = new_array_clear(4, descr=<ArrayP 8>)
+658: setarrayitem_gc(p45, 0, p11, descr=<ArrayP 8>)
+662: p47 = new_with_vtable(descr=<SizeDescr 32>)
+673: setfield_gc(p47, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+681: p50 = new_array_clear(4, descr=<ArrayP 8>)
+700: setarrayitem_gc(p50, 0, p3, descr=<ArrayP 8>)
+704: setarrayitem_gc(p50, 1, p2, descr=<ArrayP 8>)
+715: setarrayitem_gc(p50, 2, ConstPtr(ptr54), descr=<ArrayP 8>)
+719: setarrayitem_gc(p50, 3, ConstPtr(ptr56), descr=<ArrayP 8>)
+723: setfield_gc(p47, p50, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+734: setfield_gc(p47, ConstPtr(ptr57), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+738: setarrayitem_gc(p45, 1, p47, descr=<ArrayP 8>)
+742: setarrayitem_gc(p45, 2, ConstPtr(ptr60), descr=<ArrayP 8>)
+746: setarrayitem_gc(p45, 3, ConstPtr(ptr62), descr=<ArrayP 8>)
+750: setfield_gc(p42, p45, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+754: setfield_gc(p42, ConstPtr(ptr63), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+758: setfield_gc(p41, p42, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+762: setfield_gc(p39, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+766: setfield_gc(p40, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+777: setfield_gc(p40, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+781: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+785: setfield_gc(p40, p27, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+789: setfield_gc(p39, i35, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+793: jump(p39, p40, descr=TargetToken(76382480))
+832: --end of the loop--
[3e4c02e9a7bd070] jit-log-opt-bridge}
[3e4c02e9a9b68be] {jit-backend
[3e4c02e9aa2f99d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a
[3e4c02e9aa388f2] jit-backend-dump}
[3e4c02e9aa435de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9644 +0  1E000000
[3e4c02e9aa449fa] jit-backend-dump}
[3e4c02e9aa489f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a98c5 +0  1E000000
[3e4c02e9aa4986b] jit-backend-dump}
[3e4c02e9aa4ccdf] {jit-backend-addr
bridge out of Guard 0x48a0410 has address 0x7facb13a9640 to 0x7facb13a98c0
       gc table: 0x7facb13a9540
    jump target: 0x7facb13a9640
         resops: 0x7facb13a964e
       failures: 0x7facb13a98c0
            end: 0x7facb13a9ba3
[3e4c02e9aa4f334] jit-backend-addr}
[3e4c02e9aa52a3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a965e +0  A1020000
[3e4c02e9aa53847] jit-backend-dump}
[3e4c02e9aa56cc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a966f +0  AC020000
[3e4c02e9aa579d7] jit-backend-dump}
[3e4c02e9aa5ace8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9683 +0  B4020000
[3e4c02e9aa5ba0d] jit-backend-dump}
[3e4c02e9aa5ebec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a969a +0  B9020000
[3e4c02e9aa5f8b8] jit-backend-dump}
[3e4c02e9aa62b3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a96b1 +0  BE020000
[3e4c02e9aa637c3] jit-backend-dump}
[3e4c02e9aa66950] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a96c5 +0  C6020000
[3e4c02e9aa67622] jit-backend-dump}
[3e4c02e9aa6a8b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a96d1 +0  D6020000
[3e4c02e9aa6b54e] jit-backend-dump}
[3e4c02e9aa6e6c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a96e9 +0  DA020000
[3e4c02e9aa6f366] jit-backend-dump}
[3e4c02e9aa725a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9701 +0  DE020000
[3e4c02e9aa7323a] jit-backend-dump}
[3e4c02e9aa768a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9711 +0  06030000
[3e4c02e9aa7751d] jit-backend-dump}
[3e4c02e9aa7a872] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9725 +0  0E030000
[3e4c02e9aa7b513] jit-backend-dump}
[3e4c02e9aa7e697] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a973b +0  14030000
[3e4c02e9aa7f344] jit-backend-dump}
[3e4c02e9aa8250e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a974d +0  1E030000
[3e4c02e9aa83188] jit-backend-dump}
[3e4c02e9aa862f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9764 +0  23030000
[3e4c02e9aa86f8e] jit-backend-dump}
[3e4c02e9aa8a256] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9773 +0  30030000
[3e4c02e9aa8aee8] jit-backend-dump}
[3e4c02e9aa8e050] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9780 +0  3F030000
[3e4c02e9aa8ece8] jit-backend-dump}
[3e4c02e9aa91ff0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9794 +0  47030000
[3e4c02e9aa92c8b] jit-backend-dump}
[3e4c02e9aa95ed6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a97aa +0  4D030000
[3e4c02e9aa96b4f] jit-backend-dump}
[3e4c02e9aa99e30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a97b7 +0  5C030000
[3e4c02e9aa9aaac] jit-backend-dump}
[3e4c02e9aa9dc2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a97cf +0  60030000
[3e4c02e9aa9e8b6] jit-backend-dump}
[3e4c02e9aaa1aee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a97e5 +0  66030000
[3e4c02e9aaa278f] jit-backend-dump}
[3e4c02e9aaa5916] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a97f3 +0  74030000
[3e4c02e9aaa65bd] jit-backend-dump}
[3e4c02e9aaa97cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb13a9801 +0  82030000
[3e4c02e9aaaa447] jit-backend-dump}
[3e4c02e9aaad838] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7facb139fd31 +0  0B990000
[3e4c02e9aaae4c4] jit-backend-dump}
[3e4c02e9aab2436] jit-backend}
[3e4c02e9aab5eb3] {jit-log-opt-bridge
# bridge out of Guard 0x48a0410 with 96 ops
[p0, p1, p2, p3]
+278: guard_class(p1, 16503536, descr=<Guard0x74b8200>) [p0, p1, p2, p3]
+290: p5 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+294: guard_class(p5, 16478072, descr=<Guard0x726eec0>) [p0, p1, p2, p3]
+307: p7 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+318: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x726ef08>) [p0, p1, p2, p3]
+327: p9 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+331: guard_nonnull_class(p9, 16477696, descr=<Guard0x74b8260>) [p0, p1, p2, p3]
+350: p11 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+354: guard_nonnull_class(p11, ConstClass(W_Vector), descr=<Guard0x74b82c0>) [p0, p1, p2, p3]
+373: p13 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+384: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x726ef50>) [p0, p1, p2, p3]
+393: p15 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([r r][l l][v (make-empty-node)]) (vector-set! v 0 l) (vector-set! v 1 r) v)')
+393: guard_class(p0, 16435208, descr=<Guard0x726ef98>) [p0, p1, p2, p3]
+405: p17 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+409: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x74b8320>) [p0, p1, p2, p3]
debug_merge_point(0, 0, 'r')
debug_merge_point(0, 0, 'l')
+429: p19 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(make-empty-node)')
+433: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+444: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x74b8380>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(make-vector 4 0)')
+453: guard_not_invalidated(descr=<Guard0x726efe0>) [p0, p1, p2, p3]
+460: i23 = instance_ptr_eq(ConstPtr(ptr22), p19)
+463: guard_true(i23, descr=<Guard0x726f028>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! v 0 l)')
debug_merge_point(0, 0, '(vector-set! v 1 r)')
debug_merge_point(0, 0, 'v')
+469: p24 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+480: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x726f070>) [p0, p1, p2, p3]
+489: p26 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+493: p27 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand18 (+ i5016 1)]) (doloop5014 AppRand18)) from (vector-set! v 1 r)')
+497: guard_class(p26, 16504944, descr=<Guard0x726f0b8>) [p0, p1, p2, p3]
+511: p29 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+516: guard_class(p27, 16435208, descr=<Guard0x726f100>) [p0, p1, p2, p3]
+529: p31 = getfield_gc_r(p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+533: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x74b83e0>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(+ i5016 1)')
+552: i33 = getfield_gc_i(p26, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+557: i35 = int_add_ovf(i33, 1)
+561: guard_no_overflow(descr=<Guard0x726f148>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5014 AppRand18)')
+567: guard_class(p29, 16478448, descr=<Guard0x726f190>) [p0, p1, p2, p3]
+580: p37 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+591: guard_value(p37, ConstPtr(ptr38), descr=<Guard0x726f1d8>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if3 (>= i5016 iNumIters)]) (if if3 (void) (begin (MakeTree depth) (let ([AppRand18 (+ i5016 1)]) (doloop5014 AppRand18))))) from (doloop5014 AppRand18)')
debug_merge_point(0, 0, '(>= i5016 iNumIters)')
+600: p39 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+604: guard_nonnull_class(p39, ConstClass(W_Fixnum), descr=<Guard0x74b8440>) [p0, p1, p2, p3]
+622: i41 = getfield_gc_i(p39, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+626: i42 = int_ge(i35, i41)
+629: guard_false(i42, descr=<Guard0x726f220>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (void) (begin (MakeTree depth) (let ([AppRand18 (+ i5016 1)]) (doloop5014 AppRand18))))')
debug_merge_point(0, 0, '(begin (MakeTree depth) (let ([AppRand18 (+ i5016 1)]) (doloop5014 AppRand18)))')
debug_merge_point(0, 0, '(MakeTree depth)')
+635: p43 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+639: guard_nonnull_class(p43, 16478072, descr=<Guard0x74b84a0>) [p0, p1, p2, p3]
+659: p45 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+663: guard_nonnull_class(p45, ConstClass(W_Fixnum), descr=<Guard0x74b8500>) [p0, p1, p2, p3]
+681: p47 = getfield_gc_r(p43, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+686: guard_value(p47, ConstPtr(ptr48), descr=<Guard0x726f268>) [p0, p1, p2, p3]
+695: p49 = getfield_gc_r(p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+695: i50 = getfield_gc_i(p45, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree depth)')
debug_merge_point(0, 0, '(<= iDepth4987 0)')
+699: i52 = int_le(i50, 0)
+703: guard_false(i52, descr=<Guard0x726f2b0>) [p0, p1, p2, p3]
debug_merge_point(0, 0, '(if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))')
debug_merge_point(0, 0, '(let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12))))')
debug_merge_point(0, 0, '(- iDepth4987 1)')
+709: i54 = int_sub(i50, 1)
debug_merge_point(0, 0, '(let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))')
debug_merge_point(0, 0, '(MakeTree AppRand9)')
debug_merge_point(0, 0, '(let ([if1 (<= iDepth4987 0)]) (if if1 (make-empty-node) (let ([AppRand9 (- iDepth4987 1)]) (let ([AppRand10 (MakeTree AppRand9)][AppRand11 (- iDepth4987 1)]) (let ([AppRand12 (MakeTree AppRand11)]) (make-node AppRand10 AppRand12)))))) from (MakeTree AppRand9)')
+713: p55 = new_with_vtable(descr=<SizeDescr 24>)
+760: p56 = new_with_vtable(descr=<SizeDescr 40>)
+771: p57 = new_with_vtable(descr=<SizeDescr 24>)
+782: setfield_gc(p57, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+786: setfield_gc(p57, i50, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+790: p58 = new_with_vtable(descr=<SizeDescr 40>)
+802: setfield_gc(p58, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+806: p59 = new_with_vtable(descr=<SizeDescr 24>)
+817: setfield_gc(p59, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+821: setfield_gc(p59, i35, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+825: setfield_gc(p58, p59, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+829: setfield_gc(p58, p27, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+833: setfield_gc(p58, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+837: setfield_gc(p55, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+841: setfield_gc(p56, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+845: setfield_gc(p56, p57, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+849: setfield_gc(p56, p58, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+853: setfield_gc(p55, i54, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+864: setfield_gc(p56, ConstPtr(ptr61), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+868: jump(p55, p56, descr=TargetToken(76382640))
+896: --end of the loop--
[3e4c02e9ab0789a] jit-log-opt-bridge}
[3e4c04123bed2fd] {jit-summary
Tracing:      	23	0.022156
Backend:      	23	0.008317
TOTAL:      		30.825439
ops:             	25286
recorded ops:    	4721
  calls:         	8
guards:          	1534
opt ops:         	1881
opt guards:      	597
opt guards shared:	382
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	148
nvholes:         	0
nvreused:        	12
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	12
Total # of bridges:	11
Freed # of loops:	0
Freed # of bridges:	0
[3e4c04123bfd814] jit-summary}
[3e4c04123c0908d] {jit-backend-counts
entry 1:57
TargetToken(76382320):57
TargetToken(76382400):96613636
entry 2:198
TargetToken(76382480):146040843
TargetToken(76382560):49427163
entry 3:88
entry 4:506
TargetToken(76382640):2240706
TargetToken(76382720):193227087
bridge 76155312:49427113
bridge 76155744:49427111
entry 7:41
entry 8:54
bridge 76157616:98854172
bridge 76154088:47186436
bridge 76154592:47186411
entry 12:6
TargetToken(76385120):465
TargetToken(76385200):185637147
entry 13:459
entry 14:53
TargetToken(76385280):53
TargetToken(76385360):185637554
entry 15:5
entry 16:489
bridge 76681544:91698427
bridge 76678880:93939076
entry 19:50
TargetToken(76387040):50
TargetToken(76387120):13106918
bridge 76682696:399
bridge 76681616:2240599
bridge 76677368:2240599
bridge 76153872:2240599
[3e4c04123c12583] jit-backend-counts}
