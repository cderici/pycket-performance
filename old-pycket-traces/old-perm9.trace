[3e4c079da9d7df0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c079da9ede00] jit-backend-dump}
[3e4c079daa34974] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec0b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c079daa3794c] jit-backend-dump}
[3e4c079daa441af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c079daa45df8] jit-backend-dump}
[3e4c079daa4c461] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec1f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c079daa4dd2c] jit-backend-dump}
[3e4c079daa55dde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c079daa5778c] jit-backend-dump}
[3e4c079daa60661] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec2f
[3e4c079daa63ff2] jit-backend-dump}
[3e4c079daa69316] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec
[3e4c079daa6b710] jit-backend-dump}
[3e4c079daa701fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec
[3e4c079daa72577] jit-backend-dump}
[3e4c079dab1786f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec
[3e4c079dab1a69a] jit-backend-dump}
[3e4c079dab20511] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ec8f
[3e4c079dab22bc5] jit-backend-dump}
[3e4c079dab278ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320eca70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c079dab29032] jit-backend-dump}
[3e4c079dab3b466] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ecaf
[3e4c079dab3e636] jit-backend-dump}
[3e4c079dab45fd9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ecce0 +0  4889455848895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC084889CE488B7C241841BB50D3720041FFD3488B0C258893F900488B69F8F64504010F85EA0000004883C4084885C00F84CC0000004889C1488B4558488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B52801000048C7452000000000C34883C40849BB70CA0E32B77F000041FFE349BB70C20E32B77F000041FFD3E904FFFFFF
[3e4c079dab4914a] jit-backend-dump}
[3e4c079dab50ab0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ecee
[3e4c079dab53dc7] jit-backend-dump}
[3e4c079dab5971e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ed0d
[3e4c079dab5c473] jit-backend-dump}
[3e4c079dab656fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ed2c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70C20E32B77F000041FFD3E99CFFFFFF
[3e4c079dab67834] jit-backend-dump}
[3e4c079dab6c7fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ed380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70C20E32B77F000041FFD3E9BCFFFFFF
[3e4c079dab6e129] jit-backend-dump}
[3e4c079dab7331a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ed
[3e4c079dab75eb1] jit-backend-dump}
[3e4c079dab7b16f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ed5c
[3e4c079dab7d80a] jit-backend-dump}
[3e4c079dab8d83e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ed750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB70CA0E32B77F000041FFE3
[3e4c079dab8f244] jit-backend-dump}
[3e4c079dafe43dd] {jit-backend
[3e4c079db08fe20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ed
[3e4c079db097094] jit-backend-dump}
[3e4c079db0a573c] {jit-backend-addr
Loop 1 ((if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)) has address 0x7fb7320eda4d to 0x7fb7320edb90 (bootstrap 0x7fb7320ed9c0)
       gc table: 0x7fb7320ed930
       function: 0x7fb7320ed9c0
         resops: 0x7fb7320eda4d
       failures: 0x7fb7320edb90
            end: 0x7fb7320edd62
[3e4c079db0a994c] jit-backend-addr}
[3e4c079db0ae131] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320eda77 +0  27010000
[3e4c079db0af31a] jit-backend-dump}
[3e4c079db0b2733] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320eda84 +0  36010000
[3e4c079db0b3482] jit-backend-dump}
[3e4c079db0b6564] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320eda97 +0  3F010000
[3e4c079db0b720b] jit-backend-dump}
[3e4c079db0ba254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edaad +0  45010000
[3e4c079db0baf0a] jit-backend-dump}
[3e4c079db0be124] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edab7 +0  73010000
[3e4c079db0bedff] jit-backend-dump}
[3e4c079db0c1eaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edac7 +0  7F010000
[3e4c079db0c2b11] jit-backend-dump}
[3e4c079db0c5b63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edae1 +0  81010000
[3e4c079db0c6793] jit-backend-dump}
[3e4c079db0c9740] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edaf8 +0  86010000
[3e4c079db0ca397] jit-backend-dump}
[3e4c079db0cd372] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edb0f +0  8B010000
[3e4c079db0cdfa8] jit-backend-dump}
[3e4c079db0d0fa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edb23 +0  93010000
[3e4c079db0d1bff] jit-backend-dump}
[3e4c079db0d4bbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edb2c +0  A6010000
[3e4c079db0d5810] jit-backend-dump}
[3e4c079db0d8840] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edb5d +0  91010000
[3e4c079db0d9495] jit-backend-dump}
[3e4c079db0dc54c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edb6a +0  BC010000
[3e4c079db0dd1a6] jit-backend-dump}
[3e4c079db0e01b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edb80 +0  C2010000
[3e4c079db0e0e1f] jit-backend-dump}
[3e4c079db0e48ca] jit-backend}
[3e4c079db0e83c1] {jit-log-opt-loop
# Loop 1 ((if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)) : loop with 43 ops
[p0, p1]
+293: label(p0, p1, descr=TargetToken(76829168))
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+312: guard_class(p0, 16503536, descr=<Guard0x491c4a0>) [p1, p0]
+331: i3 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+335: i4 = int_is_zero(i3)
+338: guard_false(i4, descr=<Guard0x4980218>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))')
+344: guard_class(p1, 16435920, descr=<Guard0x4980260>) [p1, p0]
+363: p6 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+367: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x491c500>) [p1, p0]
debug_merge_point(0, 0, '(- n4926 1)')
+385: guard_not_invalidated(descr=<Guard0x49802a8>) [p1, p0]
+385: i9 = int_sub_ovf(i3, 1)
+389: guard_no_overflow(descr=<Guard0x49802f0>) [p1, p0]
debug_merge_point(0, 0, '(CellRef(list-tail) (cdr x4924) AppRand6)')
+395: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+399: guard_class(p10, 16477696, descr=<Guard0x4980338>) [p1, p0]
+411: p12 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+415: p13 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+419: guard_nonnull_class(p13, 16477696, descr=<Guard0x491c560>) [p1, p0]
+437: p15 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+441: guard_nonnull_class(p15, 16471056, descr=<Guard0x491c5c0>) [p1, p0]
+460: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+464: guard_nonnull_class(p17, 16471056, descr=<Guard0x491c620>) [p1, p0]
+483: p19 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+494: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x4980380>) [p1, p0]
+503: i21 = instance_ptr_eq(p10, p13)
+506: guard_true(i21, descr=<Guard0x49803c8>) [p1, p0]
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+512: label(p10, i9, p17, p1, p12, p13, descr=TargetToken(76829248))
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+552: i22 = int_is_zero(i9)
+555: guard_false(i22, descr=<Guard0x491c680>) [p1, i9, p17, p10]
debug_merge_point(0, 0, '(let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))')
debug_merge_point(0, 0, '(- n4926 1)')
+561: guard_not_invalidated(descr=<Guard0x4980410>) [p1, i9, p17, p10]
+561: i24 = int_sub_ovf(i9, 1)
+568: guard_no_overflow(descr=<Guard0x4980458>) [p1, i9, p17, p10]
debug_merge_point(0, 0, '(CellRef(list-tail) (cdr x4924) AppRand6)')
+574: p25 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+578: guard_nonnull_class(p25, 16471056, descr=<Guard0x491c6e0>) [p1, i9, p17, p10]
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+596: jump(p10, i24, p25, p1, p12, p13, descr=TargetToken(76829248))
+608: --end of the loop--
[3e4c079db141268] jit-log-opt-loop}
[3e4c079db6c1879] {jit-backend
[3e4c079db7a3be9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee
[3e4c079db7b903d] jit-backend-dump}
[3e4c079db7c3b02] {jit-backend-addr
Loop 2 ((if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))) has address 0x7fb7320ee2ad to 0x7fb7320ee750 (bootstrap 0x7fb7320ee220)
       gc table: 0x7fb7320ee070
       function: 0x7fb7320ee220
         resops: 0x7fb7320ee2ad
       failures: 0x7fb7320ee750
            end: 0x7fb7320eec92
[3e4c079db7c68ad] jit-backend-addr}
[3e4c079db7cacea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee2c4 +0  DE040000
[3e4c079db7cbf50] jit-backend-dump}
[3e4c079db7cf430] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee2da +0  E4040000
[3e4c079db7d02b7] jit-backend-dump}
[3e4c079db7d3551] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee2e7 +0  F3040000
[3e4c079db7d42ad] jit-backend-dump}
[3e4c079db7d730e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee2fd +0  F9040000
[3e4c079db7d8005] jit-backend-dump}
[3e4c079db7db091] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee310 +0  02050000
[3e4c079db7dbd8b] jit-backend-dump}
[3e4c079db7deecb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee324 +0  0A050000
[3e4c079db7dfbcb] jit-backend-dump}
[3e4c079db7e2e1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee338 +0  2E050000
[3e4c079db7e3ad9] jit-backend-dump}
[3e4c079db7e6ab0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee356 +0  2C050000
[3e4c079db7e77c9] jit-backend-dump}
[3e4c079db7ea8d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee36a +0  34050000
[3e4c079db7eb5db] jit-backend-dump}
[3e4c079db7ee65e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee37e +0  3C050000
[3e4c079db7ef330] jit-backend-dump}
[3e4c079db7f23bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee399 +0  3D050000
[3e4c079db7f307c] jit-backend-dump}
[3e4c079db7f6075] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee3b3 +0  3F050000
[3e4c079db7f6d35] jit-backend-dump}
[3e4c079db7f9dfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee3bf +0  4F050000
[3e4c079db7faac7] jit-backend-dump}
[3e4c079db7fdae8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee3d3 +0  57050000
[3e4c079db7fe7a2] jit-backend-dump}
[3e4c079db8017f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee3e8 +0  5E050000
[3e4c079db8024d5] jit-backend-dump}
[3e4c079db8056c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee3fa +0  68050000
[3e4c079db80639f] jit-backend-dump}
[3e4c079db809456] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee411 +0  6D050000
[3e4c079db80a125] jit-backend-dump}
[3e4c079db80d1d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee41f +0  7B050000
[3e4c079db80de9c] jit-backend-dump}
[3e4c079db810e9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee42b +0  8B050000
[3e4c079db811b45] jit-backend-dump}
[3e4c079db814bbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee43f +0  93050000
[3e4c079db815854] jit-backend-dump}
[3e4c079db8188b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee448 +0  A6050000
[3e4c079db819541] jit-backend-dump}
[3e4c079db81c52e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee45f +0  AB050000
[3e4c079db81d1cc] jit-backend-dump}
[3e4c079db820205] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee46d +0  B9050000
[3e4c079db820eb3] jit-backend-dump}
[3e4c079db823e50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee4ce +0  74050000
[3e4c079db824af1] jit-backend-dump}
[3e4c079db828085] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee4e2 +0  7C050000
[3e4c079db828d3f] jit-backend-dump}
[3e4c079db82be4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee4ec +0  8E050000
[3e4c079db82cafc] jit-backend-dump}
[3e4c079db82fbc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee500 +0  96050000
[3e4c079db83086f] jit-backend-dump}
[3e4c079db8337eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee514 +0  9E050000
[3e4c079db83449b] jit-backend-dump}
[3e4c079db8375bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee52b +0  A3050000
[3e4c079db83829f] jit-backend-dump}
[3e4c079db83b328] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee537 +0  B3050000
[3e4c079db83c009] jit-backend-dump}
[3e4c079db83f09e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee547 +0  BF050000
[3e4c079db83fd6d] jit-backend-dump}
[3e4c079db842e27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee554 +0  CE050000
[3e4c079db843b1e] jit-backend-dump}
[3e4c079db846c3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee56f +0  CF050000
[3e4c079db8478f3] jit-backend-dump}
[3e4c079db84a8d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee586 +0  D4050000
[3e4c079db84b5a3] jit-backend-dump}
[3e4c079db84e64e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee5a1 +0  D5050000
[3e4c079db84f329] jit-backend-dump}
[3e4c079db8523e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee5bf +0  D3050000
[3e4c079db8530c7] jit-backend-dump}
[3e4c079db856175] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee5e0 +0  CE050000
[3e4c079db856e69] jit-backend-dump}
[3e4c079db859e12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee602 +0  C8050000
[3e4c079db85aaf1] jit-backend-dump}
[3e4c079db85dbe8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee60b +0  DB050000
[3e4c079db85e8b4] jit-backend-dump}
[3e4c079db8618a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee618 +0  EA050000
[3e4c079db86256d] jit-backend-dump}
[3e4c079db865636] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee648 +0  D6050000
[3e4c079db8662ff] jit-backend-dump}
[3e4c079db8693f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee666 +0  D4050000
[3e4c079db86a0cb] jit-backend-dump}
[3e4c079db86d11d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee681 +0  D5050000
[3e4c079db86de1a] jit-backend-dump}
[3e4c079db870edd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee68e +0  E4050000
[3e4c079db871bd1] jit-backend-dump}
[3e4c079db8756c5] jit-backend}
[3e4c079db8791ed] {jit-log-opt-loop
# Loop 2 ((if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))) : entry bridge with 151 ops
[p0, p1]
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+581: guard_class(p0, 16500368, descr=<Guard0x491c980>) [p1, p0]
+600: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+604: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x491c9e0>) [p1, p0]
+622: i5 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+626: i6 = int_is_zero(i5)
+629: guard_true(i6, descr=<Guard0x49d8578>) [p1, p0]
debug_merge_point(0, 0, 'y')
+635: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+639: guard_nonnull_class(p7, 16471056, descr=<Guard0x491ca40>) [p1, p0]
+657: guard_class(p1, 16435920, descr=<Guard0x49d85c0>) [p1, p0]
+676: p10 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+687: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x49d8608>) [p1, p0]
+696: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+700: guard_not_invalidated(descr=<Guard0x49d8650>) [p1, p0]
+700: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! x4876 SetBang0)')
+704: guard_class(p12, 16478824, descr=<Guard0x49d8698>) [p1, p0]
+716: p15 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+730: setfield_gc(p15, p7, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+734: guard_class(p13, 16435208, descr=<Guard0x491caa0>) [p13, p7, p12]
+746: p17 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+757: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x49d86e0>) [p13, p7, p12]
+766: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+770: p20 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! perms (cons CellRef(x4876) CellRef(perms)))')
+774: guard_class(p19, 16478824, descr=<Guard0x49d8728>) [p13, p7, p12]
+786: p22 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+790: p23 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+794: guard_nonnull_class(p23, 16471056, descr=<Guard0x491cb00>) [p13, p7, p12]
+813: p25 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+817: p26 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+821: guard_nonnull_class(p26, 16470384, descr=<Guard0x491cb60>) [p13, p7, p12]
+839: guard_class(p20, 16435208, descr=<Guard0x49d8770>) [p13, p7, p12]
+851: p29 = getfield_gc_r(p20, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+862: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x49d87b8>) [p13, p7, p12]
+871: p31 = getfield_gc_r(p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+875: p32 = getfield_gc_r(p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- j 1)]) (doloop AppRand2)) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+879: guard_class(p31, 16504944, descr=<Guard0x49d8800>) [p13, p7, p12]
+892: p34 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+896: guard_class(p32, 16435208, descr=<Guard0x49d8848>) [p13, p7, p12]
+910: p36 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+914: guard_nonnull_class(p36, ConstClass(ForwardLink), descr=<Guard0x491cbc0>) [p13, p7, p12]
debug_merge_point(0, 0, '(- j 1)')
+933: i38 = getfield_gc_i(p31, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+937: i40 = int_sub_ovf(i38, 1)
+941: guard_no_overflow(descr=<Guard0x49d8890>) [p13, p7, p12]
debug_merge_point(0, 0, '(doloop AppRand2)')
+947: guard_class(p34, 16478448, descr=<Guard0x49d88d8>) [p13, p7, p12]
+959: p42 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+970: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x49d8920>) [p13, p7, p12]
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)')
+979: i44 = int_is_zero(i40)
+982: guard_true(i44, descr=<Guard0x49d8968>) [p13, p7, p12]
debug_merge_point(0, 0, '(begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))')
debug_merge_point(0, 0, '(- n 1)')
+988: p45 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+992: guard_nonnull_class(p45, ConstClass(W_Fixnum), descr=<Guard0x491cc20>) [p13, p7, p12]
+1011: i47 = getfield_gc_i(p45, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1015: i49 = int_sub_ovf(i47, 1)
+1019: guard_no_overflow(descr=<Guard0x49d89b0>) [p13, p7, p12]
debug_merge_point(0, 0, '(CellRef(P) AppRand0)')
+1025: p50 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1029: p51 = new_with_vtable(descr=<SizeDescr 24>)
+1076: setfield_gc(p51, p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1080: setfield_gc(p51, p26, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1095: setfield_gc(p25, p51, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1099: p52 = getfield_gc_r(p50, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1103: guard_nonnull_class(p52, 16478072, descr=<Guard0x491cc80>) [p32, p52, i49, p34, None, None]
+1122: p55 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1133: guard_value(p55, ConstPtr(ptr56), descr=<Guard0x49d89f8>) [p32, p52, i49, p34, None, None]
+1142: p57 = getfield_gc_r(p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+1142: i59 = int_gt(i49, 1)
+1146: guard_false(i59, descr=<Guard0x49d8a40>) [p32, p52, i49, p34, None, None]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(void)')
+1152: p60 = getfield_gc_r(p32, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1163: guard_value(p60, ConstPtr(ptr61), descr=<Guard0x49d8a88>) [p32, p52, i49, p34, None, None]
+1172: p62 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1176: p63 = getfield_gc_r(p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1180: guard_class(p63, 16435208, descr=<Guard0x49d8ad0>) [p32, p52, i49, p34, None, None]
+1192: p65 = getfield_gc_r(p63, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1196: guard_nonnull_class(p65, ConstClass(ForwardLink), descr=<Guard0x491cce0>) [p32, p52, i49, p34, None, None]
debug_merge_point(0, 0, '(CellRef(F) n) from (void)')
+1215: guard_class(p62, 16504944, descr=<Guard0x49d8b18>) [p32, p52, i49, p34, None, None]
+1227: p68 = getfield_gc_r(p62, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1231: guard_class(p68, 16478448, descr=<Guard0x49d8b60>) [p32, p52, i49, p34, None, None]
+1243: p70 = getfield_gc_r(p68, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1247: guard_value(p70, ConstPtr(ptr71), descr=<Guard0x49d8ba8>) [p32, p52, i49, p34, None, None]
+1256: p72 = getfield_gc_r(p68, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1260: p73 = getfield_gc_r(p72, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1264: guard_nonnull_class(p73, 16478824, descr=<Guard0x491cd40>) [p32, p52, i49, p34, None, None]
+1283: p75 = getfield_gc_r(p68, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1287: guard_nonnull_class(p75, ConstClass(W_Fixnum), descr=<Guard0x491cda0>) [p32, p52, i49, p34, None, None]
+1306: p77 = getfield_gc_r(p73, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1324: guard_value(p77, ConstPtr(ptr78), descr=<Guard0x49d8bf0>) [p32, p52, i49, p34, None, None]
+1333: p79 = getfield_gc_r(p68, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1333: i80 = getfield_gc_i(p75, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand4 (CellRef(list-tail) CellRef(x4876) n4898)]) (let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0)))')
debug_merge_point(0, 0, '(CellRef(list-tail) CellRef(x4876) n4898)')
+1337: p81 = getfield_gc_r(p73, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1341: p82 = getfield_gc_r(p81, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1345: guard_nonnull_class(p82, 16477696, descr=<Guard0x491ce00>) [p32, p52, i49, p34, None, None]
+1363: p84 = getfield_gc_r(p73, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1367: p85 = getfield_gc_r(p84, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1378: guard_nonnull_class(p85, 16471056, descr=<Guard0x491ce60>) [p32, p52, i49, p34, None, None]
+1396: p87 = getfield_gc_r(p82, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1421: guard_value(p87, ConstPtr(ptr88), descr=<Guard0x49d8c38>) [p32, p52, i49, p34, None, None]
+1430: p89 = getfield_gc_r(p73, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) CellRef(x4876) n4898)')
+1430: i90 = int_is_zero(i80)
+1433: guard_false(i90, descr=<Guard0x49d8c80>) [p32, p52, i49, p34, None, None]
debug_merge_point(0, 0, '(let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))')
debug_merge_point(0, 0, '(- n4926 1)')
+1439: i92 = int_sub_ovf(i80, 1)
+1446: guard_no_overflow(descr=<Guard0x49d8cc8>) [p32, p52, i49, p34, None, None]
debug_merge_point(0, 0, '(CellRef(list-tail) (cdr x4924) AppRand6)')
+1452: p93 = getfield_gc_r(p82, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1470: p94 = getfield_gc_r(p93, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1481: guard_nonnull_class(p94, 16477696, descr=<Guard0x491cec0>) [p32, p52, i49, p34, None, None]
+1500: p96 = getfield_gc_r(p85, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+1511: guard_nonnull_class(p96, 16471056, descr=<Guard0x491cf20>) [p32, p52, i49, p34, None, None]
+1530: p98 = getfield_gc_r(p94, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1548: guard_value(p98, ConstPtr(ptr99), descr=<Guard0x49d8d10>) [p32, p52, i49, p34, None, None]
+1557: i100 = instance_ptr_eq(p82, p94)
+1564: guard_true(i100, descr=<Guard0x49d8d58>) [p32, p52, i49, p34, None, None]
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+1570: p101 = new_with_vtable(descr=<SizeDescr 40>)
+1581: p102 = new_with_vtable(descr=<SizeDescr 24>)
+1592: setfield_gc(p102, p73, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1596: setfield_gc(p102, i80, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1600: p103 = new_with_vtable(descr=<SizeDescr 40>)
+1611: setfield_gc(p103, p65, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1622: setfield_gc(p103, p73, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1626: p104 = new_with_vtable(descr=<SizeDescr 40>)
+1637: setfield_gc(p104, p65, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1641: setfield_gc(p104, p62, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1645: setfield_gc(p104, p63, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1649: setfield_gc(p104, ConstPtr(ptr105), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1653: setfield_gc(p103, p104, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1657: setfield_gc(p103, ConstPtr(ptr106), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1675: setfield_gc(p101, ConstPtr(ptr107), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1679: setfield_gc(p101, p102, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1683: setfield_gc(p101, p103, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1687: setfield_gc(p101, p65, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1691: jump(p82, i92, p96, p101, p93, p94, descr=TargetToken(76829248))
+1760: --end of the loop--
[3e4c079db902597] jit-log-opt-loop}
[3e4c079dbd37807] {jit-backend
[3e4c079dbe2e6d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320eefd
[3e4c079dbe3ef47] jit-backend-dump}
[3e4c079dbe49d2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef1b4 +0  24000000
[3e4c079dbe4b2a3] jit-backend-dump}
[3e4c079dbe4f13c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef765 +0  24000000
[3e4c079dbe5004a] jit-backend-dump}
[3e4c079dbe531f6] {jit-backend-addr
bridge out of Guard 0x49d8578 has address 0x7fb7320ef1b0 to 0x7fb7320ef760
       gc table: 0x7fb7320eefd0
    jump target: 0x7fb7320ef1b0
         resops: 0x7fb7320ef1be
       failures: 0x7fb7320ef760
            end: 0x7fb7320efd27
[3e4c079dbe556de] jit-backend-addr}
[3e4c079dbe5898e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef1ce +0  F9050000
[3e4c079dbe597de] jit-backend-dump}
[3e4c079dbe5c96b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef1e5 +0  FE050000
[3e4c079dbe5d66b] jit-backend-dump}
[3e4c079dbe606f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef1f2 +0  0D060000
[3e4c079dbe613d6] jit-backend-dump}
[3e4c079dbe6452c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef206 +0  15060000
[3e4c079dbe652ac] jit-backend-dump}
[3e4c079dbe68562] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef21e +0  19060000
[3e4c079dbe69240] jit-backend-dump}
[3e4c079dbe6c42c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef228 +0  47060000
[3e4c079dbe6d116] jit-backend-dump}
[3e4c079dbe70254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef23a +0  51060000
[3e4c079dbe70f35] jit-backend-dump}
[3e4c079dbe74045] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef256 +0  51060000
[3e4c079dbe74d20] jit-backend-dump}
[3e4c079dbe77ef0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef26e +0  55060000
[3e4c079dbe78b73] jit-backend-dump}
[3e4c079dbe7bbff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef286 +0  59060000
[3e4c079dbe7c8d7] jit-backend-dump}
[3e4c079dbe7fa27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef2a3 +0  58060000
[3e4c079dbe808d3] jit-backend-dump}
[3e4c079dbe8397e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef2b7 +0  60060000
[3e4c079dbe84644] jit-backend-dump}
[3e4c079dbe875f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef2c0 +0  73060000
[3e4c079dbe882a4] jit-backend-dump}
[3e4c079dbe8b27e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef2c9 +0  86060000
[3e4c079dbe8bf6c] jit-backend-dump}
[3e4c079dbe8f0ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef2dd +0  8E060000
[3e4c079dbe8fd63] jit-backend-dump}
[3e4c079dbe92dd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef2f2 +0  95060000
[3e4c079dbe93a75] jit-backend-dump}
[3e4c079dbe96cb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef303 +0  A0060000
[3e4c079dbe9795a] jit-backend-dump}
[3e4c079dbe9a97e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef317 +0  A8060000
[3e4c079dbe9b635] jit-backend-dump}
[3e4c079dbe9e7cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef32c +0  AF060000
[3e4c079dbe9f466] jit-backend-dump}
[3e4c079dbea2490] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef38e +0  69060000
[3e4c079dbea317e] jit-backend-dump}
[3e4c079dbea631a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef3aa +0  69060000
[3e4c079dbea6fc8] jit-backend-dump}
[3e4c079dbea9fef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef3b7 +0  78060000
[3e4c079dbeaac6e] jit-backend-dump}
[3e4c079dbeadc77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef3cb +0  80060000
[3e4c079dbeae924] jit-backend-dump}
[3e4c079dbeb1a5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef3e0 +0  87060000
[3e4c079dbeb26f0] jit-backend-dump}
[3e4c079dbeb566f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef3f1 +0  92060000
[3e4c079dbeb6316] jit-backend-dump}
[3e4c079dbeb93fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef407 +0  98060000
[3e4c079dbeba0c4] jit-backend-dump}
[3e4c079dbebd0c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef415 +0  A6060000
[3e4c079dbebdd4c] jit-backend-dump}
[3e4c079dbec0e3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef421 +0  B6060000
[3e4c079dbec1acf] jit-backend-dump}
[3e4c079dbec4b70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef43c +0  B7060000
[3e4c079dbec5a3b] jit-backend-dump}
[3e4c079dbec8bb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef445 +0  CA060000
[3e4c079dbec986f] jit-backend-dump}
[3e4c079dbecc88a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef45c +0  CF060000
[3e4c079dbecd556] jit-backend-dump}
[3e4c079dbed0669] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef471 +0  D6060000
[3e4c079dbed1322] jit-backend-dump}
[3e4c079dbed432b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef4ae +0  B5060000
[3e4c079dbed4fdb] jit-backend-dump}
[3e4c079dbed80ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef4c2 +0  BD060000
[3e4c079dbed8d7d] jit-backend-dump}
[3e4c079dbedbd51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef4cc +0  CF060000
[3e4c079dbedca0e] jit-backend-dump}
[3e4c079dbedfa47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef4e4 +0  D3060000
[3e4c079dbee0726] jit-backend-dump}
[3e4c079dbee36b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef505 +0  CE060000
[3e4c079dbee4352] jit-backend-dump}
[3e4c079dbee72fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef519 +0  D6060000
[3e4c079dbee7f9d] jit-backend-dump}
[3e4c079dbeeaeb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef523 +0  E8060000
[3e4c079dbeebb36] jit-backend-dump}
[3e4c079dbeeeafe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef53a +0  ED060000
[3e4c079dbeef7da] jit-backend-dump}
[3e4c079dbef26f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef54e +0  F5060000
[3e4c079dbef337f] jit-backend-dump}
[3e4c079dbef632f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef56a +0  F5060000
[3e4c079dbef6ffe] jit-backend-dump}
[3e4c079dbef9f83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef584 +0  F7060000
[3e4c079dbefac4c] jit-backend-dump}
[3e4c079dbefdc8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef5a0 +0  F7060000
[3e4c079dbefe95b] jit-backend-dump}
[3e4c079dbf018d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef5c9 +0  EA060000
[3e4c079dbf02562] jit-backend-dump}
[3e4c079dbf054f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef5e7 +0  E8060000
[3e4c079dbf0619b] jit-backend-dump}
[3e4c079dbf090f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef602 +0  E9060000
[3e4c079dbf09d71] jit-backend-dump}
[3e4c079dbf0cd74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ef60f +0  F8060000
[3e4c079dbf0d9f9] jit-backend-dump}
[3e4c079dbf125ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee2e7 +0  C50E0000
[3e4c079dbf132f4] jit-backend-dump}
[3e4c079dbf19a5e] jit-backend}
[3e4c079dbf1d7cc] {jit-log-opt-bridge
# bridge out of Guard 0x49d8578 with 193 ops
[p0, p1]
+502: guard_class(p1, 16500368, descr=<Guard0x491cf80>) [p0, p1]
+514: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+518: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x491cfe0>) [p0, p1]
+537: i5 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+541: i6 = int_is_zero(i5)
+544: guard_false(i6, descr=<Guard0x49d8da0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))')
+550: guard_class(p0, 16435920, descr=<Guard0x49d8de8>) [p0, p1]
+570: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+574: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x491d040>) [p0, p1]
debug_merge_point(0, 0, '(- n4913 1)')
+594: guard_not_invalidated(descr=<Guard0x49d8e30>) [p0, p1]
+594: i11 = int_sub_ovf(i5, 1)
+598: guard_no_overflow(descr=<Guard0x49d8e78>) [p0, p1]
debug_merge_point(0, 0, '(CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+604: p12 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+608: guard_class(p12, 16477696, descr=<Guard0x49d8ec0>) [p0, p1]
+622: p14 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+626: p15 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+631: guard_nonnull_class(p15, 16477696, descr=<Guard0x491d0a0>) [p0, p1]
+650: p17 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+654: guard_nonnull_class(p17, 16471056, descr=<Guard0x491d100>) [p0, p1]
+674: p19 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+679: guard_nonnull_class(p19, 16471056, descr=<Guard0x491d160>) [p0, p1]
+698: i21 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+703: p22 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+707: guard_nonnull_class(p22, 16471056, descr=<Guard0x491d1c0>) [p0, p1]
+727: p24 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+738: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x49d8f08>) [p0, p1]
+747: i26 = instance_ptr_eq(p12, p15)
+750: guard_true(i26, descr=<Guard0x49d8f50>) [p0, p1]
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+756: i27 = int_is_zero(i11)
+759: guard_true(i27, descr=<Guard0x49d8f98>) [p0, p1]
debug_merge_point(0, 0, 'y')
+765: p28 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+776: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x49d8fe0>) [p0, p1]
+785: p30 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+789: p31 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! x4876 SetBang0)')
+793: guard_class(p30, 16478824, descr=<Guard0x49d9028>) [p0, p1]
+806: p33 = getfield_gc_r(p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+810: guard_class(p31, 16435208, descr=<Guard0x49d9070>) [p0, p1]
+823: p35 = getfield_gc_r(p31, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+834: guard_value(p35, ConstPtr(ptr36), descr=<Guard0x49d90b8>) [p0, p1]
+843: p37 = getfield_gc_r(p31, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+847: p38 = getfield_gc_r(p31, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! perms (cons CellRef(x4876) CellRef(perms)))')
+851: guard_class(p37, 16478824, descr=<Guard0x49d9100>) [p0, p1]
+864: p40 = getfield_gc_r(p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+868: p41 = new_with_vtable(descr=<SizeDescr 24>)
+915: setfield_gc(p41, i21, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+919: setfield_gc(p41, p22, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+934: setfield_gc(p33, p41, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+938: p42 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+942: guard_nonnull_class(p42, 16471056, descr=<Guard0x491d220>) [p38, p37, p42]
+962: p44 = getfield_gc_r(p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+966: p45 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+970: guard_nonnull_class(p45, 16470384, descr=<Guard0x491d280>) [p38, p37, p42]
+990: guard_class(p38, 16435208, descr=<Guard0x49d9148>) [p38, p37, p42]
+1003: p48 = getfield_gc_r(p38, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1014: guard_value(p48, ConstPtr(ptr49), descr=<Guard0x49d9190>) [p38, p37, p42]
+1023: p50 = getfield_gc_r(p38, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1027: p51 = getfield_gc_r(p38, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- j 1)]) (doloop AppRand2)) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+1031: guard_class(p50, 16504944, descr=<Guard0x49d91d8>) [p38, p37, p42]
+1044: p53 = getfield_gc_r(p50, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1048: guard_class(p51, 16435208, descr=<Guard0x49d9220>) [p38, p37, p42]
+1061: p55 = getfield_gc_r(p51, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1065: guard_nonnull_class(p55, ConstClass(ForwardLink), descr=<Guard0x491d2e0>) [p38, p37, p42]
debug_merge_point(0, 0, '(- j 1)')
+1083: i57 = getfield_gc_i(p50, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1087: i59 = int_sub_ovf(i57, 1)
+1091: guard_no_overflow(descr=<Guard0x49d9268>) [p38, p37, p42]
debug_merge_point(0, 0, '(doloop AppRand2)')
+1097: guard_class(p53, 16478448, descr=<Guard0x49d92b0>) [p38, p37, p42]
+1109: p61 = getfield_gc_r(p53, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1127: guard_value(p61, ConstPtr(ptr62), descr=<Guard0x49d92f8>) [p38, p37, p42]
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)')
+1136: i63 = int_is_zero(i59)
+1139: guard_false(i63, descr=<Guard0x49d9340>) [p38, p37, p42]
debug_merge_point(0, 0, '(let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))')
debug_merge_point(0, 0, '(- n 1)')
+1145: p64 = getfield_gc_r(p53, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1149: guard_nonnull_class(p64, ConstClass(W_Fixnum), descr=<Guard0x491d340>) [p38, p37, p42]
+1168: i66 = getfield_gc_i(p64, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1179: i68 = int_sub_ovf(i66, 1)
+1183: guard_no_overflow(descr=<Guard0x49d9388>) [p38, p37, p42]
debug_merge_point(0, 0, '(CellRef(P) AppRand1)')
+1189: p69 = getfield_gc_r(p53, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1193: p70 = new_with_vtable(descr=<SizeDescr 24>)
+1204: setfield_gc(p70, p42, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+1208: setfield_gc(p70, p45, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+1223: setfield_gc(p44, p70, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1227: p71 = getfield_gc_r(p69, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1231: guard_nonnull_class(p71, 16478072, descr=<Guard0x491d3a0>) [p71, i68, i59, p53, p51, p55]
+1250: p73 = getfield_gc_r(p71, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1261: guard_value(p73, ConstPtr(ptr74), descr=<Guard0x49d93d0>) [p71, i68, i59, p53, p51, p55]
+1270: p75 = getfield_gc_r(p53, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+1270: i77 = int_gt(i68, 1)
+1274: guard_true(i77, descr=<Guard0x49d9418>) [p71, i68, i59, p53, p51, p55]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
+1280: p78 = getfield_gc_r(p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+1284: p79 = getfield_gc_r(p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+1288: p80 = getfield_gc_r(p71, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1292: guard_class(p80, 16505296, descr=<Guard0x49d9460>) [p71, i68, i59, p53, p51, p55]
debug_merge_point(0, 0, '(- n 1)')
+1304: i83 = int_sub(i68, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
debug_merge_point(0, 0, '(let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))')
debug_merge_point(0, 0, '(- n 1)')
debug_merge_point(0, 0, '(CellRef(P) AppRand1)')
+1308: p84 = getfield_gc_r(p79, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1319: guard_nonnull_class(p84, 16478072, descr=<Guard0x491d400>) [p71, i68, i59, p53, p51, p55]
+1337: p86 = getfield_gc_r(p84, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1348: guard_value(p86, ConstPtr(ptr87), descr=<Guard0x49d94a8>) [p71, i68, i59, p53, p51, p55]
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+1357: i89 = int_gt(i83, 1)
+1361: guard_false(i89, descr=<Guard0x49d94f0>) [p71, i68, i59, p53, p51, p55]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(CellRef(F) n) from (void)')
+1367: p90 = getfield_gc_r(p78, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1371: guard_nonnull_class(p90, 16478824, descr=<Guard0x491d460>) [p71, i68, i59, p53, p51, p55]
+1390: p92 = getfield_gc_r(p90, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1401: guard_value(p92, ConstPtr(ptr93), descr=<Guard0x49d9538>) [p71, i68, i59, p53, p51, p55]
debug_merge_point(0, 0, '(let ([AppRand4 (CellRef(list-tail) CellRef(x4876) n4898)]) (let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0)))')
debug_merge_point(0, 0, '(CellRef(list-tail) CellRef(x4876) n4898)')
+1410: p94 = getfield_gc_r(p90, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1414: p95 = getfield_gc_r(p94, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1418: guard_nonnull_class(p95, 16477696, descr=<Guard0x491d4c0>) [p71, i68, i59, p53, p51, p55]
+1438: p97 = getfield_gc_r(p90, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1442: p98 = getfield_gc_r(p97, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1446: guard_nonnull_class(p98, 16471056, descr=<Guard0x491d520>) [p71, i68, i59, p53, p51, p55]
+1464: p100 = getfield_gc_r(p95, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1483: guard_value(p100, ConstPtr(ptr101), descr=<Guard0x49d9580>) [p71, i68, i59, p53, p51, p55]
+1492: p102 = getfield_gc_r(p90, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) CellRef(x4876) n4898)')
debug_merge_point(0, 0, '(let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))')
debug_merge_point(0, 0, '(- n4926 1)')
debug_merge_point(0, 0, '(CellRef(list-tail) (cdr x4924) AppRand6)')
+1492: p103 = getfield_gc_r(p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1503: p104 = getfield_gc_r(p103, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1514: guard_nonnull_class(p104, 16477696, descr=<Guard0x491d580>) [p71, i68, i59, p53, p51, p55]
+1533: p106 = getfield_gc_r(p98, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+1544: guard_nonnull_class(p106, 16471056, descr=<Guard0x491d5e0>) [p71, i68, i59, p53, p51, p55]
+1563: p108 = getfield_gc_r(p104, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1581: guard_value(p108, ConstPtr(ptr109), descr=<Guard0x49d95c8>) [p71, i68, i59, p53, p51, p55]
+1590: i110 = instance_ptr_eq(p95, p104)
+1597: guard_true(i110, descr=<Guard0x49d9610>) [p71, i68, i59, p53, p51, p55]
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+1603: p111 = new_with_vtable(descr=<SizeDescr 40>)
+1614: p112 = new_with_vtable(descr=<SizeDescr 24>)
+1625: setfield_gc(p112, p90, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1629: setfield_gc(p112, 2, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1637: p114 = new_with_vtable(descr=<SizeDescr 40>)
+1648: setfield_gc(p114, p55, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1659: setfield_gc(p114, p90, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1663: p115 = new_with_vtable(descr=<SizeDescr 40>)
+1674: setfield_gc(p115, p55, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1678: p116 = new_with_vtable(descr=<SizeDescr 24>)
+1689: p117 = new_with_vtable(descr=<SizeDescr 48>)
+1700: setfield_gc(p117, p80, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1704: setfield_gc(p117, ConstPtr(ptr118), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1708: setfield_gc(p117, p78, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1719: setfield_gc(p117, ConstPtr(ptr119), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1723: setfield_gc(p117, p79, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1727: setfield_gc(p116, p117, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1731: setfield_gc(p116, 1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1739: setfield_gc(p115, p116, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1743: p121 = new_with_vtable(descr=<SizeDescr 40>)
+1754: setfield_gc(p121, p55, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1758: p122 = new_with_vtable(descr=<SizeDescr 24>)
+1769: setfield_gc(p122, p53, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1773: setfield_gc(p122, i59, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1777: setfield_gc(p121, p122, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1781: setfield_gc(p121, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1799: setfield_gc(p121, ConstPtr(ptr123), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1803: setfield_gc(p115, p121, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1807: setfield_gc(p115, ConstPtr(ptr124), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1818: setfield_gc(p114, p115, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1822: setfield_gc(p114, ConstPtr(ptr125), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1833: setfield_gc(p111, p55, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1844: setfield_gc(p111, ConstPtr(ptr126), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1848: setfield_gc(p111, p112, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1852: setfield_gc(p111, p114, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1856: jump(p95, 1, p106, p111, p103, p104, descr=TargetToken(76829248))
+1936: --end of the loop--
[3e4c079dbfadb43] jit-log-opt-bridge}
[3e4c079dc1cf4e4] {jit-backend
[3e4c079dc222f3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320efe
[3e4c079dc22c246] jit-backend-dump}
[3e4c079dc236402] {jit-backend-addr
Loop 4 ((if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))) has address 0x7fb7320effad to 0x7fb7320f0160 (bootstrap 0x7fb7320eff20)
       gc table: 0x7fb7320efe80
       function: 0x7fb7320eff20
         resops: 0x7fb7320effad
       failures: 0x7fb7320f0160
            end: 0x7fb7320f0387
[3e4c079dc2391cf] jit-backend-addr}
[3e4c079dc23cf8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320effd7 +0  B4010000
[3e4c079dc23e220] jit-backend-dump}
[3e4c079dc241654] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320effed +0  BA010000
[3e4c079dc24244f] jit-backend-dump}
[3e4c079dc2456f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320efffa +0  C9010000
[3e4c079dc24640b] jit-backend-dump}
[3e4c079dc2495e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f000d +0  D2010000
[3e4c079dc24a2e4] jit-backend-dump}
[3e4c079dc24d431] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0023 +0  D8010000
[3e4c079dc24e143] jit-backend-dump}
[3e4c079dc251417] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f002d +0  06020000
[3e4c079dc252130] jit-backend-dump}
[3e4c079dc255289] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f003d +0  12020000
[3e4c079dc255f55] jit-backend-dump}
[3e4c079dc259018] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0057 +0  14020000
[3e4c079dc259ce7] jit-backend-dump}
[3e4c079dc25ce2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f006e +0  19020000
[3e4c079dc25dadb] jit-backend-dump}
[3e4c079dc260b5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0085 +0  1E020000
[3e4c079dc26182a] jit-backend-dump}
[3e4c079dc2648f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f00a0 +0  1F020000
[3e4c079dc2655d7] jit-backend-dump}
[3e4c079dc268654] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f00b4 +0  27020000
[3e4c079dc269326] jit-backend-dump}
[3e4c079dc26c470] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f00bd +0  3A020000
[3e4c079dc26d123] jit-backend-dump}
[3e4c079dc270178] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f00ed +0  26020000
[3e4c079dc270e2f] jit-backend-dump}
[3e4c079dc273fc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f00fa +0  51020000
[3e4c079dc274c72] jit-backend-dump}
[3e4c079dc277dea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0110 +0  57020000
[3e4c079dc278aa7] jit-backend-dump}
[3e4c079dc27c567] jit-backend}
[3e4c079dc280095] {jit-log-opt-loop
# Loop 4 ((if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))) : loop with 50 ops
[p0, p1]
+309: label(p0, p1, descr=TargetToken(77301984))
+328: guard_class(p0, 16500368, descr=<Guard0x491d640>) [p1, p0]
+347: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+351: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x491d6a0>) [p1, p0]
+369: i5 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+373: i6 = int_is_zero(i5)
+376: guard_false(i6, descr=<Guard0x49d9658>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))')
+382: guard_class(p1, 16435920, descr=<Guard0x49d96a0>) [p1, p0]
+401: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+405: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x491d700>) [p1, p0]
debug_merge_point(0, 0, '(- n4913 1)')
+423: guard_not_invalidated(descr=<Guard0x49d96e8>) [p1, p0]
+423: i11 = int_sub_ovf(i5, 1)
+427: guard_no_overflow(descr=<Guard0x49d9730>) [p1, p0]
debug_merge_point(0, 0, '(CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+433: p12 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+437: guard_class(p12, 16477696, descr=<Guard0x49d9778>) [p1, p0]
+449: p14 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+453: p15 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+457: guard_nonnull_class(p15, 16477696, descr=<Guard0x491d760>) [p1, p0]
+475: p17 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+479: guard_nonnull_class(p17, 16471056, descr=<Guard0x491d7c0>) [p1, p0]
+498: p19 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+502: guard_nonnull_class(p19, 16471056, descr=<Guard0x491d820>) [p1, p0]
+521: i21 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+525: p22 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+529: guard_nonnull_class(p22, 16471056, descr=<Guard0x491d880>) [p1, p0]
+548: p24 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+559: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x49d97c0>) [p1, p0]
+568: i26 = instance_ptr_eq(p12, p15)
+571: guard_true(i26, descr=<Guard0x49d9808>) [p1, p0]
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+577: label(p12, p19, i11, i21, p22, p1, p14, p15, descr=TargetToken(77302064))
+616: i27 = int_is_zero(i11)
+619: guard_false(i27, descr=<Guard0x491d8e0>) [p1, i11, p22, i21, p19, p12]
debug_merge_point(0, 0, '(let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))')
debug_merge_point(0, 0, '(- n4913 1)')
+625: guard_not_invalidated(descr=<Guard0x49d9850>) [p1, i11, p22, i21, p19, p12]
+625: i29 = int_sub_ovf(i11, 1)
+632: guard_no_overflow(descr=<Guard0x49d9898>) [p1, i11, p22, i21, p19, p12]
debug_merge_point(0, 0, '(CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+638: p30 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+642: guard_nonnull_class(p30, 16471056, descr=<Guard0x491d940>) [p1, i11, p22, i21, p19, p12]
+660: i32 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+664: p33 = new_with_vtable(descr=<SizeDescr 24>)
+708: setfield_gc(p33, p22, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+712: setfield_gc(p33, i21, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+716: jump(p12, p30, i29, i32, p33, p1, p14, p15, descr=TargetToken(77302064))
+736: --end of the loop--
[3e4c079dc2aeb92] jit-log-opt-loop}
[3e4c079dc2b75c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320ee220 +0  49BB20FF0E32B77F000041FFE3
[3e4c079dc2b8da4] jit-backend-dump}
[3e4c079dc44881f] {jit-backend
[3e4c079dc4809b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f
[3e4c079dc48736a] jit-backend-dump}
[3e4c079dc4910ca] {jit-backend-addr
Loop 5 ((if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) CellRef(x4876) n4898 AppRand4)) has address 0x7fb7320f058d to 0x7fb7320f06c0 (bootstrap 0x7fb7320f0500)
       gc table: 0x7fb7320f0480
       function: 0x7fb7320f0500
         resops: 0x7fb7320f058d
       failures: 0x7fb7320f06c0
            end: 0x7fb7320f085a
[3e4c079dc493ba6] jit-backend-addr}
[3e4c079dc4979ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f05a4 +0  2A010000
[3e4c079dc498a4b] jit-backend-dump}
[3e4c079dc49bee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f05ba +0  30010000
[3e4c079dc49cde3] jit-backend-dump}
[3e4c079dc4a034f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f05c7 +0  3F010000
[3e4c079dc4a10b7] jit-backend-dump}
[3e4c079dc4a41fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f05da +0  48010000
[3e4c079dc4a4f19] jit-backend-dump}
[3e4c079dc4a8035] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f05f0 +0  4E010000
[3e4c079dc4a8d13] jit-backend-dump}
[3e4c079dc4abf2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f05fa +0  7C010000
[3e4c079dc4acbf6] jit-backend-dump}
[3e4c079dc4afc97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f060a +0  88010000
[3e4c079dc4b0988] jit-backend-dump}
[3e4c079dc4b3a39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0624 +0  8A010000
[3e4c079dc4b470b] jit-backend-dump}
[3e4c079dc4b7778] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f063b +0  8F010000
[3e4c079dc4b8441] jit-backend-dump}
[3e4c079dc4bb53b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0652 +0  94010000
[3e4c079dc4bc223] jit-backend-dump}
[3e4c079dc4bf2ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f066d +0  95010000
[3e4c079dc4bff47] jit-backend-dump}
[3e4c079dc4c2f74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0681 +0  9D010000
[3e4c079dc4c3c52] jit-backend-dump}
[3e4c079dc4c6c8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f068a +0  B0010000
[3e4c079dc4c7952] jit-backend-dump}
[3e4c079dc4cb3ad] jit-backend}
[3e4c079dc4cef96] {jit-log-opt-loop
# Loop 5 ((if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) CellRef(x4876) n4898 AppRand4)) : entry bridge with 34 ops
[p0, p1]
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) CellRef(x4876) n4898 AppRand4)')
+277: guard_class(p0, 16500368, descr=<Guard0x491d9a0>) [p1, p0]
+296: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+300: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x491da00>) [p1, p0]
+318: i5 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+322: i6 = int_is_zero(i5)
+325: guard_false(i6, descr=<Guard0x49d98e0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))')
+331: guard_class(p1, 16435920, descr=<Guard0x49d9928>) [p1, p0]
+350: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+354: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x491da60>) [p1, p0]
debug_merge_point(0, 0, '(- n4913 1)')
+372: guard_not_invalidated(descr=<Guard0x49d9970>) [p1, p0]
+372: i11 = int_sub_ovf(i5, 1)
+376: guard_no_overflow(descr=<Guard0x49d99b8>) [p1, p0]
debug_merge_point(0, 0, '(CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+382: p12 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+386: guard_class(p12, 16477696, descr=<Guard0x49d9a00>) [p1, p0]
+398: p14 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+402: p15 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+406: guard_nonnull_class(p15, 16477696, descr=<Guard0x491dac0>) [p1, p0]
+424: p17 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+428: guard_nonnull_class(p17, 16471056, descr=<Guard0x491db20>) [p1, p0]
+447: p19 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+451: guard_nonnull_class(p19, 16471056, descr=<Guard0x491db80>) [p1, p0]
+470: i21 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+474: p22 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+478: guard_nonnull_class(p22, 16471056, descr=<Guard0x491dbe0>) [p1, p0]
+497: p24 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+508: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x49d9a48>) [p1, p0]
+517: i26 = instance_ptr_eq(p12, p15)
+520: guard_true(i26, descr=<Guard0x49d9a90>) [p1, p0]
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+526: jump(p12, p19, i11, i21, p22, p1, p14, p15, descr=TargetToken(77302064))
+576: --end of the loop--
[3e4c079dc4f09b3] jit-log-opt-loop}
[3e4c079dc653cc1] {jit-backend
[3e4c079dc6b10f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0990 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB201000048FF0425507541044885C00F85000000004C8BBD380100004D8B77204C8B2D37FFFFFF4D39EE0F85000000004D8B6F104D8B771841817D00B01E01000F85000000004D8B650841813E480E00000F85000000004D8B56084983FA01720741813A900F00000F850000000041813C24A8B800000F85000000004D8B442418498B78084883FF017206813F40B400000F85000000004D8B442420498B70084883FE017206813E509A00000F85000000004D8B45104C8B6F10488B1DE5FEFFFF4939DD0F85000000004D85C00F84000000004983E8010F80000000004C8B6F18498B55084883FA017206813A40B400000F8500000000488B4E104883F90172068139509A00000F85000000004C898D400100004C8B4E08488B72104839DE0F85000000004839D70F85000000004989D74889CB488B0C25F091F900488D5128483B14251092F9000F878E00000048891425F091F90048C70110110000488B1582FEFFFF488951204C8961104C8971184C8951084889BD300100004C89C24D89CA4C8B854001000048898D380100004C89AD400100004C89BD480100004989D949BBE0000F32B77F000041FFE3660F1F84000000000048C7442408FFFFFF0049BB70080F32B77F00004C895D204D8D9B80BAFFFF41FFD3E928FEFFFF49BB80090F32B77F00004C895D204D8D9B70C1FFFF41FFD3E95DFFFFFFFF3557FDFFFF49BB80080F32B77F000041534D8D9B80B7FFFF41FFE3FF354BFDFFFF49BB90080F32B77F000041534D8D9B70B7FFFF41FFE3FF3537FDFFFF49BBA0080F32B77F000041534D8D9B60B7FFFF41FFE3FF3523FDFFFF49BBB0080F32B77F000041534D8D9B50B7FFFF41FFE3FF350FFDFFFF49BBC0080F32B77F000041534D8D9B40B7FFFF41FFE3FF35FBFCFFFF49BBD0080F32B77F000041534D8D9B30B7FFFF41FFE3FF35E7FCFFFF49BBE0080F32B77F000041534D8D9B20B7FFFF41FFE3FF35D3FCFFFF49BBF0080F32B77F000041534D8D9B10B7FFFF41FFE3FF35BFFCFFFF49BB00090F32B77F000041534D8D9B00B7FFFF41FFE3FF35B3FCFFFF49BB10090F32B77F000041534D8D9BF0B6FFFF41FFE3FF359FFCFFFF49BB20090F32B77F000041534D8D9BE0B6FFFF41FFE3FF358BFCFFFF49BB30090F32B77F000041534D8D9BD0B6FFFF41FFE3FF3577FCFFFF49BB40090F32B77F000041534D8D9BC0B6FFFF41FFE3FF3563FCFFFF49BB50090F32B77F000041534D8D9BB0B6FFFF41FFE3FF354FFCFFFF49BB60090F32B77F000041534D8D9BA0B6FFFF41FFE3FF353BFCFFFF49BB70090F32B77F000041534D8D9B90B6FFFF41FFE3
[3e4c079dc6b915c] jit-backend-dump}
[3e4c079dc6c2bd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0a34 +0  20000000
[3e4c079dc6c3e6f] jit-backend-dump}
[3e4c079dc6c7850] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0bf5 +0  20000000
[3e4c079dc6c8610] jit-backend-dump}
[3e4c079dc6cb842] {jit-backend-addr
bridge out of Guard 0x491c680 has address 0x7fb7320f0a30 to 0x7fb7320f0bf0
       gc table: 0x7fb7320f0990
    jump target: 0x7fb7320f0a30
         resops: 0x7fb7320f0a3e
       failures: 0x7fb7320f0bf0
            end: 0x7fb7320f0df3
[3e4c079dc6cda2e] jit-backend-addr}
[3e4c079dc6d0dee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0a4b +0  E4010000
[3e4c079dc6d1bc1] jit-backend-dump}
[3e4c079dc6d4d70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0a66 +0  E5010000
[3e4c079dc6d5a57] jit-backend-dump}
[3e4c079dc6d8ce5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0a7c +0  07020000
[3e4c079dc6d99b4] jit-backend-dump}
[3e4c079dc6dcbf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0a8d +0  12020000
[3e4c079dc6dd8d4] jit-backend-dump}
[3e4c079dc6e0991] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0aa4 +0  17020000
[3e4c079dc6e1660] jit-backend-dump}
[3e4c079dc6e463e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0ab2 +0  25020000
[3e4c079dc6e530a] jit-backend-dump}
[3e4c079dc6e839f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0acd +0  26020000
[3e4c079dc6e9062] jit-backend-dump}
[3e4c079dc6ec04c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0ae8 +0  27020000
[3e4c079dc6eccfc] jit-backend-dump}
[3e4c079dc6efd7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0b00 +0  2B020000
[3e4c079dc6f0a42] jit-backend-dump}
[3e4c079dc6f3a22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0b09 +0  3E020000
[3e4c079dc6f46fb] jit-backend-dump}
[3e4c079dc6f7765] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0b13 +0  50020000
[3e4c079dc6f8425] jit-backend-dump}
[3e4c079dc6fb3de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0b2d +0  52020000
[3e4c079dc6fc091] jit-backend-dump}
[3e4c079dc6ff10b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0b43 +0  58020000
[3e4c079dc6ffdc8] jit-backend-dump}
[3e4c079dc702da8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0b5b +0  5C020000
[3e4c079dc703a62] jit-backend-dump}
[3e4c079dc706a8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0b64 +0  6F020000
[3e4c079dc707777] jit-backend-dump}
[3e4c079dc70ab89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edb5d +0  CF2E0000
[3e4c079dc70b843] jit-backend-dump}
[3e4c079dc70f704] jit-backend}
[3e4c079dc713302] {jit-log-opt-bridge
# bridge out of Guard 0x491c680 with 51 ops
[p0, i1, p2, p3]
+182: i4 = int_is_zero(i1)
+185: guard_true(i4, descr=<Guard0x491dc40>) [p0, i1, p2, p3]
debug_merge_point(0, 0, 'x4924')
+191: p5 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+209: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x49d9ad8>) [p0, i1, p2, p3]
+218: p7 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+222: guard_not_invalidated(descr=<Guard0x49d9b20>) [p0, i1, p2, p3]
+222: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0))')
+226: guard_class(p7, 16504944, descr=<Guard0x49d9b68>) [p0, i1, p2, p3]
+240: p10 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+244: guard_class(p8, 16435208, descr=<Guard0x49d9bb0>) [p0, i1, p2, p3]
+257: p12 = getfield_gc_r(p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+261: guard_nonnull_class(p12, ConstClass(ForwardLink), descr=<Guard0x491dca0>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(CellRef(revloop) CellRef(x4876) n4898 AppRand4)')
+280: guard_class(p10, 16478824, descr=<Guard0x49d9bf8>) [p0, i1, p2, p3]
+294: p15 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+299: p16 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+303: guard_nonnull_class(p16, 16477696, descr=<Guard0x491dd00>) [p0, i1, p2, p3]
+321: p18 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+326: p19 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+330: guard_nonnull_class(p19, 16471056, descr=<Guard0x491dd60>) [p0, i1, p2, p3]
+348: i21 = getfield_gc_i(p7, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+352: p22 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+363: guard_value(p22, ConstPtr(ptr23), descr=<Guard0x49d9c40>) [p0, i1, p2, p3]
+372: p24 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) CellRef(x4876) n4898 AppRand4)')
+372: i25 = int_is_zero(i21)
+375: guard_false(i25, descr=<Guard0x49d9c88>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))')
debug_merge_point(0, 0, '(- n4913 1)')
+381: i27 = int_sub_ovf(i21, 1)
+385: guard_no_overflow(descr=<Guard0x49d9cd0>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+391: p28 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+395: p29 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+399: guard_nonnull_class(p29, 16477696, descr=<Guard0x491ddc0>) [p0, i1, p2, p3]
+417: p31 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+421: guard_nonnull_class(p31, 16471056, descr=<Guard0x491de20>) [p0, i1, p2, p3]
+439: i33 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+450: p34 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+454: guard_value(p34, ConstPtr(ptr35), descr=<Guard0x49d9d18>) [p0, i1, p2, p3]
+463: i36 = instance_ptr_eq(p16, p29)
+466: guard_true(i36, descr=<Guard0x49d9d60>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+472: p37 = new_with_vtable(descr=<SizeDescr 40>)
+526: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+530: setfield_gc(p37, p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+534: setfield_gc(p37, p8, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+538: setfield_gc(p37, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+542: jump(p16, p31, i27, i33, p2, p37, p28, p29, descr=TargetToken(77302064))
+608: --end of the loop--
[3e4c079dc7771da] jit-log-opt-bridge}
[3e4c079dc9a710d] {jit-backend
[3e4c079dca6ca12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f10c
[3e4c079dca7ca64] jit-backend-dump}
[3e4c079dca870cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1254 +0  23000000
[3e4c079dca88398] jit-backend-dump}
[3e4c079dca8bffb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f16d5 +0  23000000
[3e4c079dca8cec6] jit-backend-dump}
[3e4c079dca9028f] {jit-backend-addr
bridge out of Guard 0x491d8e0 has address 0x7fb7320f1250 to 0x7fb7320f16d0
       gc table: 0x7fb7320f10c0
    jump target: 0x7fb7320f1250
         resops: 0x7fb7320f125e
       failures: 0x7fb7320f16d0
            end: 0x7fb7320f1bb7
[3e4c079dca9254e] jit-backend-addr}
[3e4c079dca9587e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f126b +0  CC040000
[3e4c079dca9668b] jit-backend-dump}
[3e4c079dca99821] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1286 +0  CD040000
[3e4c079dca9a4f6] jit-backend-dump}
[3e4c079dca9d747] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f129c +0  EF040000
[3e4c079dca9e481] jit-backend-dump}
[3e4c079dcaa160e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f12ad +0  FA040000
[3e4c079dcaa22d1] jit-backend-dump}
[3e4c079dcaa53a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f12c1 +0  02050000
[3e4c079dcaa6044] jit-backend-dump}
[3e4c079dcaa8ff7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f12d7 +0  08050000
[3e4c079dcaa9c86] jit-backend-dump}
[3e4c079dcaaccb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1338 +0  C3040000
[3e4c079dcaad94e] jit-backend-dump}
[3e4c079dcab0926] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1353 +0  C4040000
[3e4c079dcab159c] jit-backend-dump}
[3e4c079dcab45ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f135f +0  D4040000
[3e4c079dcab525e] jit-backend-dump}
[3e4c079dcab81fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1373 +0  DC040000
[3e4c079dcab8e84] jit-backend-dump}
[3e4c079dcabbe84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1388 +0  E3040000
[3e4c079dcabcafd] jit-backend-dump}
[3e4c079dcabfaf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1399 +0  EE040000
[3e4c079dcac077f] jit-backend-dump}
[3e4c079dcac3775] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f13af +0  F4040000
[3e4c079dcac43e8] jit-backend-dump}
[3e4c079dcac73aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f13bd +0  02050000
[3e4c079dcac8024] jit-backend-dump}
[3e4c079dcacb05d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f13ca +0  11050000
[3e4c079dcacbcef] jit-backend-dump}
[3e4c079dcaced01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f13de +0  19050000
[3e4c079dcacf97d] jit-backend-dump}
[3e4c079dcad2964] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f13e7 +0  2C050000
[3e4c079dcad35da] jit-backend-dump}
[3e4c079dcad6556] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f13fd +0  32050000
[3e4c079dcad71d3] jit-backend-dump}
[3e4c079dcada203] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f140b +0  40050000
[3e4c079dcadae79] jit-backend-dump}
[3e4c079dcadde48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1448 +0  1F050000
[3e4c079dcadeab5] jit-backend-dump}
[3e4c079dcae1b04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f145c +0  27050000
[3e4c079dcae276e] jit-backend-dump}
[3e4c079dcae5724] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1466 +0  39050000
[3e4c079dcae6495] jit-backend-dump}
[3e4c079dcae94cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f147a +0  41050000
[3e4c079dcaea13e] jit-backend-dump}
[3e4c079dcaed14d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f148f +0  48050000
[3e4c079dcaeddc3] jit-backend-dump}
[3e4c079dcaf0de4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f14a7 +0  4C050000
[3e4c079dcaf1a6a] jit-backend-dump}
[3e4c079dcaf4a1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f14b5 +0  5A050000
[3e4c079dcaf568a] jit-backend-dump}
[3e4c079dcaf874a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f14c5 +0  66050000
[3e4c079dcaf93b7] jit-backend-dump}
[3e4c079dcafc3a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f14d2 +0  75050000
[3e4c079dcafd036] jit-backend-dump}
[3e4c079dcb0003b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f14ec +0  77050000
[3e4c079dcb00cbe] jit-backend-dump}
[3e4c079dcb03c80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1502 +0  7D050000
[3e4c079dcb048f6] jit-backend-dump}
[3e4c079dcb07942] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f151d +0  7E050000
[3e4c079dcb085bf] jit-backend-dump}
[3e4c079dcb0b5c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f153b +0  7C050000
[3e4c079dcb0c244] jit-backend-dump}
[3e4c079dcb0f271] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f155c +0  77050000
[3e4c079dcb0feea] jit-backend-dump}
[3e4c079dcb12e97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f157e +0  71050000
[3e4c079dcb13b32] jit-backend-dump}
[3e4c079dcb16be9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1587 +0  84050000
[3e4c079dcb17862] jit-backend-dump}
[3e4c079dcb1a84c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1594 +0  93050000
[3e4c079dcb1b4bf] jit-backend-dump}
[3e4c079dcb1e530] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f15c7 +0  7C050000
[3e4c079dcb1f1af] jit-backend-dump}
[3e4c079dcb2211f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f15e6 +0  79050000
[3e4c079dcb22d95] jit-backend-dump}
[3e4c079dcb25d82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1601 +0  7A050000
[3e4c079dcb269f2] jit-backend-dump}
[3e4c079dcb29a54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f160e +0  89050000
[3e4c079dcb2a6fb] jit-backend-dump}
[3e4c079dcb2d9fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f00ed +0  5F110000
[3e4c079dcb2e670] jit-backend-dump}
[3e4c079dcb32623] jit-backend}
[3e4c079dcb360da] {jit-log-opt-bridge
# bridge out of Guard 0x491d8e0 with 146 ops
[p0, i1, p2, i3, p4, p5]
+422: i6 = int_is_zero(i1)
+425: guard_true(i6, descr=<Guard0x491de80>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, 'y')
+431: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+449: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x49d9da8>) [p0, i1, p2, i3, p4, p5]
+458: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+462: guard_not_invalidated(descr=<Guard0x49d9df0>) [p0, i1, p2, i3, p4, p5]
+462: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! x4876 SetBang0)')
+466: guard_class(p9, 16478824, descr=<Guard0x49d9e38>) [p0, i1, p2, i3, p4, p5]
+480: p12 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+484: guard_class(p10, 16435208, descr=<Guard0x49d9e80>) [p0, i1, p2, i3, p4, p5]
+497: p14 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+508: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x49d9ec8>) [p0, i1, p2, i3, p4, p5]
+517: p16 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+521: p17 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! perms (cons CellRef(x4876) CellRef(perms)))')
+525: guard_class(p16, 16478824, descr=<Guard0x49d9f10>) [p0, i1, p2, i3, p4, p5]
+539: p19 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+543: p20 = new_with_vtable(descr=<SizeDescr 24>)
+587: setfield_gc(p20, i3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+591: setfield_gc(p20, p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+607: setfield_gc(p12, p20, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+612: p21 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+616: guard_nonnull_class(p21, 16471056, descr=<Guard0x491dee0>) [p17, p16, p21, None, None, None, None]
+636: p24 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+640: p25 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+644: guard_nonnull_class(p25, 16470384, descr=<Guard0x491df40>) [p17, p16, p21, None, None, None, None]
+663: guard_class(p17, 16435208, descr=<Guard0x49d9f58>) [p17, p16, p21, None, None, None, None]
+675: p28 = getfield_gc_r(p17, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+686: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x49d9fa0>) [p17, p16, p21, None, None, None, None]
+695: p30 = getfield_gc_r(p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+699: p31 = getfield_gc_r(p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- j 1)]) (doloop AppRand2)) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+703: guard_class(p30, 16504944, descr=<Guard0x4a38020>) [p17, p16, p21, None, None, None, None]
+716: p33 = getfield_gc_r(p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+720: guard_class(p31, 16435208, descr=<Guard0x4a38068>) [p17, p16, p21, None, None, None, None]
+733: p35 = getfield_gc_r(p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+737: guard_nonnull_class(p35, ConstClass(ForwardLink), descr=<Guard0x491dfa0>) [p17, p16, p21, None, None, None, None]
debug_merge_point(0, 0, '(- j 1)')
+755: i37 = getfield_gc_i(p30, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+759: i39 = int_sub_ovf(i37, 1)
+763: guard_no_overflow(descr=<Guard0x4a380b0>) [p17, p16, p21, None, None, None, None]
debug_merge_point(0, 0, '(doloop AppRand2)')
+769: guard_class(p33, 16478448, descr=<Guard0x4a380f8>) [p17, p16, p21, None, None, None, None]
+782: p41 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+793: guard_value(p41, ConstPtr(ptr42), descr=<Guard0x4a38140>) [p17, p16, p21, None, None, None, None]
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)')
+802: i43 = int_is_zero(i39)
+805: guard_true(i43, descr=<Guard0x4a38188>) [p17, p16, p21, None, None, None, None]
debug_merge_point(0, 0, '(begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))')
debug_merge_point(0, 0, '(- n 1)')
+811: p44 = getfield_gc_r(p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+815: guard_nonnull_class(p44, ConstClass(W_Fixnum), descr=<Guard0x4a3a020>) [p17, p16, p21, None, None, None, None]
+833: i46 = getfield_gc_i(p44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+837: i48 = int_sub_ovf(i46, 1)
+841: guard_no_overflow(descr=<Guard0x4a381d0>) [p17, p16, p21, None, None, None, None]
debug_merge_point(0, 0, '(CellRef(P) AppRand0)')
+847: p49 = getfield_gc_r(p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+851: p50 = new_with_vtable(descr=<SizeDescr 24>)
+862: setfield_gc(p50, p21, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+866: setfield_gc(p50, p25, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+881: setfield_gc(p24, p50, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+885: p51 = getfield_gc_r(p49, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+889: guard_nonnull_class(p51, 16478072, descr=<Guard0x4a3a080>) [p31, p51, i48, p33, None, None, None, None]
+908: p53 = getfield_gc_r(p51, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+919: guard_value(p53, ConstPtr(ptr54), descr=<Guard0x4a38218>) [p31, p51, i48, p33, None, None, None, None]
+928: p55 = getfield_gc_r(p33, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+928: i57 = int_gt(i48, 1)
+932: guard_false(i57, descr=<Guard0x4a38260>) [p31, p51, i48, p33, None, None, None, None]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(void)')
+938: p58 = getfield_gc_r(p31, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+949: guard_value(p58, ConstPtr(ptr59), descr=<Guard0x4a382a8>) [p31, p51, i48, p33, None, None, None, None]
+958: p60 = getfield_gc_r(p31, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+962: p61 = getfield_gc_r(p31, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+966: guard_class(p61, 16435208, descr=<Guard0x4a382f0>) [p31, p51, i48, p33, None, None, None, None]
+979: p63 = getfield_gc_r(p61, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+983: guard_nonnull_class(p63, ConstClass(ForwardLink), descr=<Guard0x4a3a0e0>) [p31, p51, i48, p33, None, None, None, None]
debug_merge_point(0, 0, '(CellRef(F) n) from (void)')
+1003: guard_class(p60, 16504944, descr=<Guard0x4a38338>) [p31, p51, i48, p33, None, None, None, None]
+1017: p66 = getfield_gc_r(p60, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1021: guard_class(p66, 16478448, descr=<Guard0x4a38380>) [p31, p51, i48, p33, None, None, None, None]
+1033: p68 = getfield_gc_r(p66, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1037: guard_value(p68, ConstPtr(ptr69), descr=<Guard0x4a383c8>) [p31, p51, i48, p33, None, None, None, None]
+1046: p70 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1050: p71 = getfield_gc_r(p70, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1054: guard_nonnull_class(p71, 16478824, descr=<Guard0x4a3a140>) [p31, p51, i48, p33, None, None, None, None]
+1072: p73 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1076: guard_nonnull_class(p73, ConstClass(W_Fixnum), descr=<Guard0x4a3a1a0>) [p31, p51, i48, p33, None, None, None, None]
+1094: p75 = getfield_gc_r(p71, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1112: guard_value(p75, ConstPtr(ptr76), descr=<Guard0x4a38410>) [p31, p51, i48, p33, None, None, None, None]
+1121: p77 = getfield_gc_r(p66, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1121: i78 = getfield_gc_i(p73, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand4 (CellRef(list-tail) CellRef(x4876) n4898)]) (let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0)))')
debug_merge_point(0, 0, '(CellRef(list-tail) CellRef(x4876) n4898)')
+1125: p79 = getfield_gc_r(p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1129: p80 = getfield_gc_r(p79, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1133: guard_nonnull_class(p80, 16477696, descr=<Guard0x4a3a200>) [p31, p51, i48, p33, None, None, None, None]
+1151: p82 = getfield_gc_r(p71, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1155: p83 = getfield_gc_r(p82, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1166: guard_nonnull_class(p83, 16471056, descr=<Guard0x4a3a260>) [p31, p51, i48, p33, None, None, None, None]
+1184: p85 = getfield_gc_r(p80, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1209: guard_value(p85, ConstPtr(ptr86), descr=<Guard0x4a38458>) [p31, p51, i48, p33, None, None, None, None]
+1218: p87 = getfield_gc_r(p71, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) CellRef(x4876) n4898)')
+1218: i88 = int_is_zero(i78)
+1221: guard_false(i88, descr=<Guard0x4a384a0>) [p31, p51, i48, p33, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))')
debug_merge_point(0, 0, '(- n4926 1)')
+1227: i90 = int_sub_ovf(i78, 1)
+1234: guard_no_overflow(descr=<Guard0x4a384e8>) [p31, p51, i48, p33, None, None, None, None]
debug_merge_point(0, 0, '(CellRef(list-tail) (cdr x4924) AppRand6)')
+1240: p91 = getfield_gc_r(p80, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+1259: p92 = getfield_gc_r(p91, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1271: guard_nonnull_class(p92, 16477696, descr=<Guard0x4a3a2c0>) [p31, p51, i48, p33, None, None, None, None]
+1291: p94 = getfield_gc_r(p83, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+1302: guard_nonnull_class(p94, 16471056, descr=<Guard0x4a3a320>) [p31, p51, i48, p33, None, None, None, None]
+1322: p96 = getfield_gc_r(p92, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1340: guard_value(p96, ConstPtr(ptr97), descr=<Guard0x4a38530>) [p31, p51, i48, p33, None, None, None, None]
+1349: i98 = instance_ptr_eq(p80, p92)
+1356: guard_true(i98, descr=<Guard0x4a38578>) [p31, p51, i48, p33, None, None, None, None]
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+1362: p99 = new_with_vtable(descr=<SizeDescr 40>)
+1373: p100 = new_with_vtable(descr=<SizeDescr 24>)
+1384: setfield_gc(p100, p71, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1388: setfield_gc(p100, i78, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1392: p101 = new_with_vtable(descr=<SizeDescr 40>)
+1403: setfield_gc(p101, p63, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1414: setfield_gc(p101, p71, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1418: p102 = new_with_vtable(descr=<SizeDescr 40>)
+1429: setfield_gc(p102, p63, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1433: setfield_gc(p102, p60, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1437: setfield_gc(p102, p61, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1441: setfield_gc(p102, ConstPtr(ptr103), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1445: setfield_gc(p101, p102, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1449: setfield_gc(p101, ConstPtr(ptr104), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1467: setfield_gc(p99, ConstPtr(ptr105), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1471: setfield_gc(p99, p100, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1475: setfield_gc(p99, p101, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1479: setfield_gc(p99, p63, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1483: jump(p80, i90, p94, p99, p91, p92, descr=TargetToken(76829248))
+1552: --end of the loop--
[3e4c079dcbb4941] jit-log-opt-bridge}
[3e4c079dccd5402] {jit-backend
[3e4c079dcd34ab2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1d00 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F870302000048FF0425103C7903488B8D300100008139B01E01000F8500000000488B4108813830B700000F8500000000488B5010488B1D8DFEFFFF4839DA0F8500000000488B5818488B53084883FA017206813AA8B800000F8500000000488B58204883FB017206813B601400000F8500000000488B4210488B3569FEFFFF4839F00F8500000000488B7308488B9D38010000813B480E00000F8500000000488B43084883F80172068138900F00000F8500000000488B7A304C8B47084983F801720741813840B400000F8500000000488B7A204C8B4F084983F9017207418139509A00000F8500000000498B78104C8B1522FEFFFF4C39D70F85000000004885F60F84000000004889F74883EE010F80000000004D8B60184D8B6C24084983FD01720841817D0040B400000F85000000004D8B71104983FE01720741813E509A00000F85000000004D8B4D104D39D10F85000000004D39E80F85000000004989D7488B0C25F091F900488D5168483B14251092F9000F879E00000048891425F091F90048C70110110000488D512848C702B01E01004C897A0848897A10488D7A1848C707480E0000488947084C897F1048895F18488B1DA4FDFFFF48895F20488941084889511048897918488B3D95FDFFFF488979204C8985300100004889F04D89F148898D380100004C89A5400100004C89AD4801000049BB50DB0E32B77F000041FFE3669049BB50D70E32B77F000041FFD3E9EBFDFFFF49BBF01C0F32B77F00004C895D204D8D9B00AEFFFF41FFD3E94DFFFFFFFF357BFCFFFF49BBD01B0F32B77F000041534D8D9B30A4FFFF41FFE3FF3567FCFFFF49BBE01B0F32B77F000041534D8D9B20A4FFFF41FFE3FF355BFCFFFF49BBF01B0F32B77F000041534D8D9B10A4FFFF41FFE3FF3547FCFFFF49BB001C0F32B77F000041534D8D9B00A4FFFF41FFE3FF3533FCFFFF49BB101C0F32B77F000041534D8D9BF0A3FFFF41FFE3FF3527FCFFFF49BB201C0F32B77F000041534D8D9BE0A3FFFF41FFE3FF3513FCFFFF49BB301C0F32B77F000041534D8D9BD0A3FFFF41FFE3FF35FFFBFFFF49BB401C0F32B77F000041534D8D9BC0A3FFFF41FFE3FF35EBFBFFFF49BB501C0F32B77F000041534D8D9BB0A3FFFF41FFE3FF35D7FBFFFF49BB601C0F32B77F000041534D8D9BA0A3FFFF41FFE3FF35CBFBFFFF49BB701C0F32B77F000041534D8D9B90A3FFFF41FFE3FF35B7FBFFFF49BB801C0F32B77F000041534D8D9B80A3FFFF41FFE3FF35A3FBFFFF49BB901C0F32B77F000041534D8D9B70A3FFFF41FFE3FF358FFBFFFF49BBA01C0F32B77F000041534D8D9B60A3FFFF41FFE3FF357BFBFFFF49BBB01C0F32B77F000041534D8D9B50A3FFFF41FFE3FF3567FBFFFF49BBC01C0F32B77F000041534D8D9B40A3FFFF41FFE3FF3553FBFFFF49BBD01C0F32B77F000041534D8D9B30A3FFFF41FFE3FF353FFBFFFF49BBE01C0F32B77F000041534D8D9B20A3FFFF41FFE3
[3e4c079dcd3d903] jit-backend-dump}
[3e4c079dcd47859] {jit-backend-addr
Loop 8 ((CellRef(F) n) from (void)) has address 0x7fb7320f1e4d to 0x7fb7320f2050 (bootstrap 0x7fb7320f1dc0)
       gc table: 0x7fb7320f1d00
       function: 0x7fb7320f1dc0
         resops: 0x7fb7320f1e4d
       failures: 0x7fb7320f2050
            end: 0x7fb7320f2277
[3e4c079dcd4a25f] jit-backend-addr}
[3e4c079dcd4df30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1e64 +0  17020000
[3e4c079dcd4f065] jit-backend-dump}
[3e4c079dcd523fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1e74 +0  23020000
[3e4c079dcd5319f] jit-backend-dump}
[3e4c079dcd56366] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1e88 +0  2B020000
[3e4c079dcd57038] jit-backend-dump}
[3e4c079dcd5a19d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1ea2 +0  2D020000
[3e4c079dcd5ae23] jit-backend-dump}
[3e4c079dcd5debe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1eb8 +0  33020000
[3e4c079dcd5eb13] jit-backend-dump}
[3e4c079dcd61b34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1ecc +0  3B020000
[3e4c079dcd62837] jit-backend-dump}
[3e4c079dcd65a23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1ee3 +0  40020000
[3e4c079dcd6670a] jit-backend-dump}
[3e4c079dcd6978d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1ef9 +0  46020000
[3e4c079dcd6a3e2] jit-backend-dump}
[3e4c079dcd6d41b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1f14 +0  47020000
[3e4c079dcd6e073] jit-backend-dump}
[3e4c079dcd7105a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1f2f +0  48020000
[3e4c079dcd71cae] jit-backend-dump}
[3e4c079dcd74d16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1f43 +0  50020000
[3e4c079dcd75989] jit-backend-dump}
[3e4c079dcd78b28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1f4c +0  63020000
[3e4c079dcd797c3] jit-backend-dump}
[3e4c079dcd7ca33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1f59 +0  8E020000
[3e4c079dcd7d6c8] jit-backend-dump}
[3e4c079dcd807d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1f76 +0  8D020000
[3e4c079dcd81438] jit-backend-dump}
[3e4c079dcd8448d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1f8d +0  92020000
[3e4c079dcd850d2] jit-backend-dump}
[3e4c079dcd8817a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1f9a +0  A1020000
[3e4c079dcd88dbc] jit-backend-dump}
[3e4c079dcd8bdd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1fa3 +0  B4020000
[3e4c079dcd8ca44] jit-backend-dump}
[3e4c079dcd9041f] jit-backend}
[3e4c079dcd93f20] {jit-log-opt-loop
# Loop 8 ((CellRef(F) n) from (void)) : entry bridge with 62 ops
[p0, p1]
debug_merge_point(0, 0, '(CellRef(F) n) from (void)')
+341: guard_class(p0, 16504944, descr=<Guard0x4a3a380>) [p1, p0]
+360: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+364: guard_class(p3, 16478448, descr=<Guard0x4a385c0>) [p1, p0]
+376: p5 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+387: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x4a38608>) [p1, p0]
+396: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+400: p8 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+404: guard_nonnull_class(p8, 16478824, descr=<Guard0x4a3a3e0>) [p1, p0]
+422: p10 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+426: guard_nonnull_class(p10, ConstClass(W_Fixnum), descr=<Guard0x4a3a440>) [p1, p0]
+444: p12 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+455: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x4a38650>) [p1, p0]
+464: p14 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+464: i15 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+468: guard_class(p1, 16435208, descr=<Guard0x4a38698>) [p1, p0]
+487: p17 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+491: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x4a3a4a0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand4 (CellRef(list-tail) CellRef(x4876) n4898)]) (let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0)))')
debug_merge_point(0, 0, '(CellRef(list-tail) CellRef(x4876) n4898)')
+509: p19 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+513: p20 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+517: guard_nonnull_class(p20, 16477696, descr=<Guard0x4a3a500>) [p1, p0]
+536: p22 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+540: p23 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+544: guard_nonnull_class(p23, 16471056, descr=<Guard0x4a3a560>) [p1, p0]
+563: p25 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+574: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x4a386e0>) [p1, p0]
+583: p27 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) CellRef(x4876) n4898)')
+583: i28 = int_is_zero(i15)
+586: guard_false(i28, descr=<Guard0x4a38728>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))')
debug_merge_point(0, 0, '(- n4926 1)')
+592: guard_not_invalidated(descr=<Guard0x4a38770>) [p1, p0]
+592: i30 = int_sub_ovf(i15, 1)
+599: guard_no_overflow(descr=<Guard0x4a387b8>) [p1, p0]
debug_merge_point(0, 0, '(CellRef(list-tail) (cdr x4924) AppRand6)')
+605: p31 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+609: p32 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+614: guard_nonnull_class(p32, 16477696, descr=<Guard0x4a3a5c0>) [p1, p0]
+634: p34 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+638: guard_nonnull_class(p34, 16471056, descr=<Guard0x4a3a620>) [p1, p0]
+657: p36 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+661: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x4a38800>) [p1, p0]
+670: i38 = instance_ptr_eq(p20, p32)
+673: guard_true(i38, descr=<Guard0x4a38848>) [p1, p0]
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+679: p39 = new_with_vtable(descr=<SizeDescr 40>)
+723: p40 = new_with_vtable(descr=<SizeDescr 24>)
+734: setfield_gc(p40, p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+738: setfield_gc(p40, i15, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+742: p41 = new_with_vtable(descr=<SizeDescr 40>)
+753: setfield_gc(p41, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+757: setfield_gc(p41, p8, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+761: setfield_gc(p41, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+772: setfield_gc(p41, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+776: setfield_gc(p39, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+780: setfield_gc(p39, p40, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+784: setfield_gc(p39, p41, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+795: setfield_gc(p39, ConstPtr(ptr43), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+799: jump(p20, i30, p34, p39, p31, p32, descr=TargetToken(76829248))
+848: --end of the loop--
[3e4c079dcdc68d7] jit-log-opt-loop}
[3e4c079dcf96dc7] {jit-backend
[3e4c079dd00843f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f23d
[3e4c079dd011593] jit-backend-dump}
[3e4c079dd01b6c6] {jit-backend-addr
Loop 9 ((if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)) has address 0x7fb7320f250d to 0x7fb7320f2740 (bootstrap 0x7fb7320f2480)
       gc table: 0x7fb7320f23d0
       function: 0x7fb7320f2480
         resops: 0x7fb7320f250d
       failures: 0x7fb7320f2740
            end: 0x7fb7320f2967
[3e4c079dd01e1fe] jit-backend-addr}
[3e4c079dd021fc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2537 +0  34020000
[3e4c079dd023182] jit-backend-dump}
[3e4c079dd026526] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2544 +0  43020000
[3e4c079dd0272cc] jit-backend-dump}
[3e4c079dd02a4d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2557 +0  4C020000
[3e4c079dd02b201] jit-backend-dump}
[3e4c079dd02e265] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f256d +0  52020000
[3e4c079dd02ef06] jit-backend-dump}
[3e4c079dd0320ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f257d +0  7A020000
[3e4c079dd032dac] jit-backend-dump}
[3e4c079dd035fe4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2591 +0  82020000
[3e4c079dd036cb0] jit-backend-dump}
[3e4c079dd039ca6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f25a7 +0  88020000
[3e4c079dd03a94a] jit-backend-dump}
[3e4c079dd03d91c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f25b5 +0  96020000
[3e4c079dd03e5a4] jit-backend-dump}
[3e4c079dd04167d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f25cf +0  98020000
[3e4c079dd042315] jit-backend-dump}
[3e4c079dd04536a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f25e3 +0  A0020000
[3e4c079dd046020] jit-backend-dump}
[3e4c079dd049010] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f25ed +0  B2020000
[3e4c079dd049c9f] jit-backend-dump}
[3e4c079dd04cbb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2606 +0  B5020000
[3e4c079dd04d866] jit-backend-dump}
[3e4c079dd0508ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f263c +0  B7020000
[3e4c079dd051563] jit-backend-dump}
[3e4c079dd054568] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2651 +0  BE020000
[3e4c079dd055206] jit-backend-dump}
[3e4c079dd0581b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f265b +0  D0020000
[3e4c079dd058e66] jit-backend-dump}
[3e4c079dd05be7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2677 +0  D0020000
[3e4c079dd05cb04] jit-backend-dump}
[3e4c079dd060593] jit-backend}
[3e4c079dd0641b9] {jit-log-opt-loop
# Loop 9 ((if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)) : loop with 86 ops
[p0, p1]
+325: label(p0, p1, descr=TargetToken(77302144))
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+344: guard_class(p0, 16504944, descr=<Guard0x4a3a680>) [p1, p0]
+363: i3 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+367: i4 = int_is_zero(i3)
+370: guard_false(i4, descr=<Guard0x4a38890>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))')
+376: guard_class(p1, 16435208, descr=<Guard0x4a388d8>) [p1, p0]
+395: p6 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+399: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x4a3a6e0>) [p1, p0]
debug_merge_point(0, 0, '(- n 1)')
+417: guard_not_invalidated(descr=<Guard0x4a38920>) [p1, p0]
+417: p8 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+421: guard_class(p8, 16478448, descr=<Guard0x4a38968>) [p1, p0]
+433: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+444: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x4a389b0>) [p1, p0]
+453: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+457: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x4a3a740>) [p1, p0]
+475: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+479: i16 = int_sub_ovf(i14, 1)
+483: guard_no_overflow(descr=<Guard0x4a389f8>) [p1, p0]
debug_merge_point(0, 0, '(CellRef(P) AppRand1)')
+489: p17 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+493: p18 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+497: guard_nonnull_class(p18, 16478072, descr=<Guard0x4a3a7a0>) [p1, p0]
+515: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+526: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x4a38a40>) [p1, p0]
+535: p22 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+535: i24 = int_gt(i16, 1)
+539: guard_true(i24, descr=<Guard0x4a38a88>) [p1, p0]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
+545: p25 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+549: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+553: p27 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+557: guard_class(p27, 16505296, descr=<Guard0x4a38ad0>) [p1, p0]
debug_merge_point(0, 0, '(- n 1)')
+570: i30 = int_sub(i16, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+574: i31 = same_as_i(i30)
+577: label(p27, p25, i16, p26, i30, p6, p0, p1, i31, descr=TargetToken(77302224))
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
debug_merge_point(0, 0, '(let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))')
debug_merge_point(0, 0, '(- n 1)')
+600: guard_not_invalidated(descr=<Guard0x4a3a800>) [p1, p0, i16, p26, p25, p27, i30, p6]
debug_merge_point(0, 0, '(CellRef(P) AppRand1)')
+600: p32 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+604: guard_nonnull_class(p32, 16478072, descr=<Guard0x4a3a860>) [p1, p0, i16, p26, p25, p27, i30, p6]
+624: p34 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+636: guard_value(p34, ConstPtr(ptr35), descr=<Guard0x4a38b18>) [p1, p0, i16, p26, p25, p27, i30, p6]
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+645: i37 = int_gt(i31, 1)
+649: guard_true(i37, descr=<Guard0x4a38b60>) [p1, p0, i16, p26, p25, p27, i30, p6]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
+655: p38 = getfield_gc_r(p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+660: p39 = getfield_gc_r(p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+665: p40 = getfield_gc_r(p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+670: guard_class(p40, 16505296, descr=<Guard0x4a38ba8>) [p1, p0, i16, p26, p25, p27, i30, p6]
debug_merge_point(0, 0, '(- n 1)')
+683: i43 = int_sub(i31, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+687: p44 = new_with_vtable(descr=<SizeDescr 24>)
+745: p45 = new_with_vtable(descr=<SizeDescr 48>)
+756: setfield_gc(p45, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+767: setfield_gc(p45, ConstPtr(ptr46), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+771: setfield_gc(p45, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+775: p47 = new_with_vtable(descr=<SizeDescr 16>)
+786: setfield_gc(p47, i16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+790: setfield_gc(p45, p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+794: setfield_gc(p45, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+798: p48 = new_with_vtable(descr=<SizeDescr 40>)
+809: setfield_gc(p44, p45, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+813: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+824: setfield_gc(p44, i30, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+828: setfield_gc(p48, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+839: setfield_gc(p48, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+850: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+854: jump(p40, p38, i31, p39, i43, p6, p44, p48, i43, descr=TargetToken(77302224))
+880: --end of the loop--
[3e4c079dd0a7cba] jit-log-opt-loop}
[3e4c079dd217df1] {jit-backend
[3e4c079dd24f6c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2a
[3e4c079dd25605c] jit-backend-dump}
[3e4c079dd25f9ec] {jit-backend-addr
Loop 10 ((if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)) has address 0x7fb7320f2b5d to 0x7fb7320f2c60 (bootstrap 0x7fb7320f2ad0)
       gc table: 0x7fb7320f2a50
       function: 0x7fb7320f2ad0
         resops: 0x7fb7320f2b5d
       failures: 0x7fb7320f2c60
            end: 0x7fb7320f2dde
[3e4c079dd2623b1] jit-backend-addr}
[3e4c079dd265fb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2b74 +0  FA000000
[3e4c079dd26710c] jit-backend-dump}
[3e4c079dd26a574] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2b81 +0  09010000
[3e4c079dd26b2ee] jit-backend-dump}
[3e4c079dd26e5cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2b94 +0  12010000
[3e4c079dd26f33d] jit-backend-dump}
[3e4c079dd2725f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2baa +0  18010000
[3e4c079dd2732d1] jit-backend-dump}
[3e4c079dd276546] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2bba +0  40010000
[3e4c079dd2771ee] jit-backend-dump}
[3e4c079dd27a362] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2bce +0  48010000
[3e4c079dd27afc9] jit-backend-dump}
[3e4c079dd27e11f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2be4 +0  4E010000
[3e4c079dd27edb7] jit-backend-dump}
[3e4c079dd2822c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2bf2 +0  5C010000
[3e4c079dd282f4a] jit-backend-dump}
[3e4c079dd2860cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2c0c +0  5E010000
[3e4c079dd286d2f] jit-backend-dump}
[3e4c079dd289e69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2c20 +0  66010000
[3e4c079dd28aaec] jit-backend-dump}
[3e4c079dd28dbf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2c2a +0  78010000
[3e4c079dd28e88d] jit-backend-dump}
[3e4c079dd291990] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2c43 +0  7B010000
[3e4c079dd292613] jit-backend-dump}
[3e4c079dd296077] jit-backend}
[3e4c079dd299b38] {jit-log-opt-loop
# Loop 10 ((if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)) : entry bridge with 43 ops
[p0, p1]
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)')
+277: guard_class(p0, 16504944, descr=<Guard0x4a3a8c0>) [p1, p0]
+296: i3 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+300: i4 = int_is_zero(i3)
+303: guard_false(i4, descr=<Guard0x4a38bf0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))')
+309: guard_class(p1, 16435208, descr=<Guard0x4a38c38>) [p1, p0]
+328: p6 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+332: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x4a3a920>) [p1, p0]
debug_merge_point(0, 0, '(- n 1)')
+350: guard_not_invalidated(descr=<Guard0x4a38c80>) [p1, p0]
+350: p8 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+354: guard_class(p8, 16478448, descr=<Guard0x4a38cc8>) [p1, p0]
+366: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+377: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x4a38d10>) [p1, p0]
+386: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+390: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x4a3a980>) [p1, p0]
+408: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+412: i16 = int_sub_ovf(i14, 1)
+416: guard_no_overflow(descr=<Guard0x4a38d58>) [p1, p0]
debug_merge_point(0, 0, '(CellRef(P) AppRand1)')
+422: p17 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+426: p18 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+430: guard_nonnull_class(p18, 16478072, descr=<Guard0x4a3a9e0>) [p1, p0]
+448: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+459: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x4a38da0>) [p1, p0]
+468: p22 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+468: i24 = int_gt(i16, 1)
+472: guard_true(i24, descr=<Guard0x4a38de8>) [p1, p0]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
+478: p25 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+482: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+486: p27 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+490: guard_class(p27, 16505296, descr=<Guard0x4a38e30>) [p1, p0]
debug_merge_point(0, 0, '(- n 1)')
+503: i30 = int_sub(i16, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+507: jump(p27, p25, i16, p26, i30, p6, p0, p1, i30, descr=TargetToken(77302224))
+528: --end of the loop--
[3e4c079dd2c1d89] jit-log-opt-loop}
[3e4c079dd52625c] {jit-backend
[3e4c079dd58322e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2f30 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CC201000048FF0425C061E5034983FC01720841813C24509A00000F85000000004D8B7D284D8B77084983FE01720741813EB09700000F8500000000813E480E00000F85000000004C8B56204C8B0D0CFFFFFF4D39CA0F85000000004C8B4E104C8B5618418139B01E01000F85000000004D8B410841813A480E00000F8500000000498B7A084883FF017206813F900F00000F8500000000498B59104883EB010F800000000041813830B700000F85000000004D8B4810488B15E1FEFFFF4939D10F85000000004885DB0F8400000000498B50204883FA017206813A601400000F85000000004C8B4A084983E9010F80000000004D8B6828488B0C25F091F900488D5130483B14251092F9000F87DB00000048891425F091F90048C701B09700004C8961084C89711041F64704010F85D600000049894F084D8B7D084983FF01720741813FB8B500000F85000000004D8B6F104C8B3575FEFFFF4D39F50F85000000004983F9010F8E000000004D8B77184D8B6F204D8B670841813C24102001000F85000000004D8D79FF488D511848C702B01E01004C89420848895A104D89F04C89CE4C89FB4889D14C89D04D89FA4D89E14889FA4C89EF49BB20260F32B77F000041FFE39048C7442408FFFFFF0049BBF02D0F32B77F00004C895D204D8D9B0095FFFF41FFD3E918FEFFFF49BBE02E0F32B77F00004C895D204D8D9B109CFFFF41FFD3E910FFFFFF415749BB80C10E32B77F000041FFD3E916FFFFFFFF3523FDFFFF49BB002E0F32B77F000041534D8D9B0092FFFF41FFE3FF350FFDFFFF49BB102E0F32B77F000041534D8D9BF091FFFF41FFE3FF35FBFCFFFF49BB202E0F32B77F000041534D8D9BE091FFFF41FFE3FF35EFFCFFFF49BB302E0F32B77F000041534D8D9BD091FFFF41FFE3FF35DBFCFFFF49BB402E0F32B77F000041534D8D9BC091FFFF41FFE3FF35C7FCFFFF49BB502E0F32B77F000041534D8D9BB091FFFF41FFE3FF35B3FCFFFF49BB602E0F32B77F000041534D8D9BA091FFFF41FFE3FF359FFCFFFF49BB702E0F32B77F000041534D8D9B9091FFFF41FFE3FF358BFCFFFF49BB802E0F32B77F000041534D8D9B8091FFFF41FFE3FF3577FCFFFF49BB902E0F32B77F000041534D8D9B7091FFFF41FFE3FF356BFCFFFF49BBA02E0F32B77F000041534D8D9B6091FFFF41FFE3FF3557FCFFFF49BBB02E0F32B77F000041534D8D9B5091FFFF41FFE3FF3543FCFFFF49BBC02E0F32B77F000041534D8D9B4091FFFF41FFE3FF352FFCFFFF49BBD02E0F32B77F000041534D8D9B3091FFFF41FFE3FF351BFCFFFF49BBF02E0F32B77F000041534D8D9B1091FFFF41FFE3FF350FFCFFFF49BB002F0F32B77F000041534D8D9B0091FFFF41FFE3FF35FBFBFFFF49BB102F0F32B77F000041534D8D9BF090FFFF41FFE3FF35E7FBFFFF49BB202F0F32B77F000041534D8D9BE090FFFF41FFE3
[3e4c079dd58ae25] jit-backend-dump}
[3e4c079dd595612] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f2fe4 +0  1E000000
[3e4c079dd5969cc] jit-backend-dump}
[3e4c079dd59a7f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f31b5 +0  1E000000
[3e4c079dd59b65d] jit-backend-dump}
[3e4c079dd59ebeb] {jit-backend-addr
bridge out of Guard 0x4a38188 has address 0x7fb7320f2fe0 to 0x7fb7320f31b0
       gc table: 0x7fb7320f2f30
    jump target: 0x7fb7320f2fe0
         resops: 0x7fb7320f2fee
       failures: 0x7fb7320f31b0
            end: 0x7fb7320f33ff
[3e4c079dd5a0f80] jit-backend-addr}
[3e4c079dd5a43b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3006 +0  FD010000
[3e4c079dd5a51f2] jit-backend-dump}
[3e4c079dd5a8477] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3021 +0  FE010000
[3e4c079dd5a9158] jit-backend-dump}
[3e4c079dd5ac2e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f302d +0  0E020000
[3e4c079dd5acf80] jit-backend-dump}
[3e4c079dd5affdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3041 +0  16020000
[3e4c079dd5b0ce4] jit-backend-dump}
[3e4c079dd5b3df4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3056 +0  1D020000
[3e4c079dd5b4aa7] jit-backend-dump}
[3e4c079dd5b7c62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3067 +0  28020000
[3e4c079dd5b88fd] jit-backend-dump}
[3e4c079dd5bba96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f307d +0  2E020000
[3e4c079dd5bc71f] jit-backend-dump}
[3e4c079dd5bf8d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f308b +0  58020000
[3e4c079dd5c057e] jit-backend-dump}
[3e4c079dd5c35ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3098 +0  67020000
[3e4c079dd5c428d] jit-backend-dump}
[3e4c079dd5c72b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f30ac +0  6F020000
[3e4c079dd5c7f52] jit-backend-dump}
[3e4c079dd5caf23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f30b5 +0  82020000
[3e4c079dd5cbbd1] jit-backend-dump}
[3e4c079dd5ceb59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f30cb +0  88020000
[3e4c079dd5cf843] jit-backend-dump}
[3e4c079dd5d2802] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f30d9 +0  96020000
[3e4c079dd5d34aa] jit-backend-dump}
[3e4c079dd5d64f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3134 +0  57020000
[3e4c079dd5d71a9] jit-backend-dump}
[3e4c079dd5da1a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3148 +0  5F020000
[3e4c079dd5dae3d] jit-backend-dump}
[3e4c079dd5dddf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3152 +0  71020000
[3e4c079dd5deaa4] jit-backend-dump}
[3e4c079dd5e1a81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f316c +0  73020000
[3e4c079dd5e2716] jit-backend-dump}
[3e4c079dd5e595e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f13e7 +0  F51B0000
[3e4c079dd5e663c] jit-backend-dump}
[3e4c079dd5ea7f4] jit-backend}
[3e4c079dd5ee255] {jit-log-opt-bridge
# bridge out of Guard 0x4a38188 with 64 ops
[p0, p1, p2]
+198: guard_nonnull_class(p2, 16471056, descr=<Guard0x4a3aa40>) [p0, p1, p2]
+218: p4 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+222: p5 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+226: guard_nonnull_class(p5, 16470384, descr=<Guard0x4a3aaa0>) [p0, p1, p2]
+245: guard_class(p0, 16435208, descr=<Guard0x4a38e78>) [p0, p1, p2]
+257: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+268: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x4a38ec0>) [p0, p1, p2]
+277: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+281: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- j 1)]) (doloop AppRand2)) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+285: guard_class(p10, 16504944, descr=<Guard0x4a38f08>) [p0, p1, p2]
+298: p13 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+302: guard_class(p11, 16435208, descr=<Guard0x4a38f50>) [p0, p1, p2]
+315: p15 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+319: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x4a3ab00>) [p0, p1, p2]
debug_merge_point(0, 0, '(- j 1)')
+337: guard_not_invalidated(descr=<Guard0x4a38f98>) [p0, p1, p2]
+337: i17 = getfield_gc_i(p10, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+341: i19 = int_sub_ovf(i17, 1)
+345: guard_no_overflow(descr=<Guard0x4a38fe0>) [p0, p1, p2]
debug_merge_point(0, 0, '(doloop AppRand2)')
+351: guard_class(p13, 16478448, descr=<Guard0x4a39028>) [p0, p1, p2]
+364: p21 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+375: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x4a39070>) [p0, p1, p2]
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)')
+384: i23 = int_is_zero(i19)
+387: guard_false(i23, descr=<Guard0x4a390b8>) [p0, p1, p2]
debug_merge_point(0, 0, '(let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))')
debug_merge_point(0, 0, '(- n 1)')
+393: p24 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+397: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x4a3ab60>) [p0, p1, p2]
+415: i26 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+419: i28 = int_sub_ovf(i26, 1)
+423: guard_no_overflow(descr=<Guard0x4a39100>) [p0, p1, p2]
debug_merge_point(0, 0, '(CellRef(P) AppRand1)')
+429: p29 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+433: p30 = new_with_vtable(descr=<SizeDescr 24>)
+474: setfield_gc(p30, p2, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+478: setfield_gc(p30, p5, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+493: setfield_gc(p4, p30, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+497: p31 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+501: guard_nonnull_class(p31, 16478072, descr=<Guard0x4a3abc0>) [p31, i28, i19, p13, p11, p15]
+520: p33 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+531: guard_value(p33, ConstPtr(ptr34), descr=<Guard0x4a39148>) [p31, i28, i19, p13, p11, p15]
+540: p35 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+540: i37 = int_gt(i28, 1)
+544: guard_true(i37, descr=<Guard0x4a39190>) [p31, i28, i19, p13, p11, p15]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
+550: p38 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+554: p39 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+558: p40 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+562: guard_class(p40, 16505296, descr=<Guard0x4a391d8>) [p31, i28, i19, p13, p11, p15]
debug_merge_point(0, 0, '(- n 1)')
+576: i43 = int_sub(i28, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+580: p44 = new_with_vtable(descr=<SizeDescr 24>)
+591: setfield_gc(p44, p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+595: setfield_gc(p44, i19, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+599: jump(p40, p38, i28, p39, i43, p15, p44, p11, i43, descr=TargetToken(77302224))
+640: --end of the loop--
[3e4c079dd62de08] jit-log-opt-bridge}
[3e4c079dd7cdaa3] {jit-backend
[3e4c079dd8497b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f
[3e4c079dd852e91] jit-backend-dump}
[3e4c079dd85d454] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f35e4 +0  23000000
[3e4c079dd85e7f0] jit-backend-dump}
[3e4c079dd862330] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f38a5 +0  23000000
[3e4c079dd863122] jit-backend-dump}
[3e4c079dd8664ae] {jit-backend-addr
bridge out of Guard 0x4a38b60 has address 0x7fb7320f35e0 to 0x7fb7320f38a0
       gc table: 0x7fb7320f3520
    jump target: 0x7fb7320f35e0
         resops: 0x7fb7320f35ee
       failures: 0x7fb7320f38a0
            end: 0x7fb7320f3a87
[3e4c079dd868877] jit-backend-addr}
[3e4c079dd86bce5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f35ff +0  FC020000
[3e4c079dd86cb17] jit-backend-dump}
[3e4c079dd86fdf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3616 +0  01030000
[3e4c079dd870adf] jit-backend-dump}
[3e4c079dd873c1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f362a +0  09030000
[3e4c079dd874886] jit-backend-dump}
[3e4c079dd877940] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3634 +0  1B030000
[3e4c079dd8785b7] jit-backend-dump}
[3e4c079dd87b750] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f364b +0  20030000
[3e4c079dd87c3e8] jit-backend-dump}
[3e4c079dd87f42a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f365f +0  28030000
[3e4c079dd880100] jit-backend-dump}
[3e4c079dd88310e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f367c +0  27030000
[3e4c079dd883dbf] jit-backend-dump}
[3e4c079dd886e63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3698 +0  27030000
[3e4c079dd887af8] jit-backend-dump}
[3e4c079dd88aafa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f36b3 +0  28030000
[3e4c079dd88b792] jit-backend-dump}
[3e4c079dd88e7c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f36bc +0  3B030000
[3e4c079dd88f436] jit-backend-dump}
[3e4c079dd89242f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f36e0 +0  33030000
[3e4c079dd893096] jit-backend-dump}
[3e4c079dd896058] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f36ff +0  30030000
[3e4c079dd896ce7] jit-backend-dump}
[3e4c079dd899cf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f370c +0  3F030000
[3e4c079dd89a960] jit-backend-dump}
[3e4c079dd89d99c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3719 +0  4E030000
[3e4c079dd89e613] jit-backend-dump}
[3e4c079dd8a1891] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f265b +0  810F0000
[3e4c079dd8a2511] jit-backend-dump}
[3e4c079dd8a6424] jit-backend}
[3e4c079dd8a9ec3] {jit-log-opt-bridge
# bridge out of Guard 0x4a38b60 with 81 ops
[p0, p1, i2, p3, p4, p5, i6, p7]
+214: guard_not_invalidated(descr=<Guard0x4a3ac20>) [p0, p1, i2, p3, p4, p5, i6, p7]
+214: i9 = int_sub_ovf(i2, 1)
+221: guard_no_overflow(descr=<Guard0x4a39220>) [p0, p1, i2, p3, p4, p5, i6, p7]
debug_merge_point(0, 0, '(CellRef(P) AppRand1)')
+227: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+231: guard_nonnull_class(p10, 16478072, descr=<Guard0x4a3ac80>) [p0, p1, i2, p3, p4, p5, i6, p7]
+250: p12 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+261: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x4a39268>) [p0, p1, i2, p3, p4, p5, i6, p7]
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+270: i15 = int_gt(i9, 1)
+274: guard_false(i15, descr=<Guard0x4a392b0>) [p0, p1, i2, p3, p4, p5, i6, p7]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(CellRef(F) n) from (void)')
+280: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+284: guard_nonnull_class(p16, 16478824, descr=<Guard0x4a3ace0>) [p0, p1, i2, p3, p4, p5, i6, p7]
+303: p18 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+314: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x4a392f8>) [p0, p1, i2, p3, p4, p5, i6, p7]
debug_merge_point(0, 0, '(let ([AppRand4 (CellRef(list-tail) CellRef(x4876) n4898)]) (let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0)))')
debug_merge_point(0, 0, '(CellRef(list-tail) CellRef(x4876) n4898)')
+323: p20 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+327: p21 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+332: guard_nonnull_class(p21, 16477696, descr=<Guard0x4a3ad40>) [p0, p1, i2, p3, p4, p5, i6, p7]
+352: p23 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+356: p24 = getfield_gc_r(p23, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+361: guard_nonnull_class(p24, 16471056, descr=<Guard0x4a3ada0>) [p0, p1, i2, p3, p4, p5, i6, p7]
+380: p26 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+398: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x4a39340>) [p0, p1, i2, p3, p4, p5, i6, p7]
+407: p28 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) CellRef(x4876) n4898)')
+407: i29 = int_is_zero(i2)
+410: guard_false(i29, descr=<Guard0x4a39388>) [p0, p1, i2, p3, p4, p5, i6, p7]
debug_merge_point(0, 0, '(let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))')
debug_merge_point(0, 0, '(- n4926 1)')
debug_merge_point(0, 0, '(CellRef(list-tail) (cdr x4924) AppRand6)')
+416: p30 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+420: p31 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+432: guard_nonnull_class(p31, 16477696, descr=<Guard0x4a3ae00>) [p0, p1, i2, p3, p4, p5, i6, p7]
+452: p33 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+463: guard_nonnull_class(p33, 16471056, descr=<Guard0x4a3ae60>) [p0, p1, i2, p3, p4, p5, i6, p7]
+483: p35 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+487: guard_value(p35, ConstPtr(ptr36), descr=<Guard0x4a393d0>) [p0, p1, i2, p3, p4, p5, i6, p7]
+496: i37 = instance_ptr_eq(p21, p31)
+503: guard_true(i37, descr=<Guard0x4a39418>) [p0, p1, i2, p3, p4, p5, i6, p7]
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+509: p38 = new_with_vtable(descr=<SizeDescr 40>)
+567: p39 = new_with_vtable(descr=<SizeDescr 24>)
+578: setfield_gc(p39, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+582: setfield_gc(p39, i2, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+586: p40 = new_with_vtable(descr=<SizeDescr 40>)
+597: setfield_gc(p40, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+608: setfield_gc(p40, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+612: p41 = new_with_vtable(descr=<SizeDescr 40>)
+623: setfield_gc(p41, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+627: p42 = new_with_vtable(descr=<SizeDescr 24>)
+646: p43 = new_with_vtable(descr=<SizeDescr 48>)
+665: setfield_gc(p43, p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+677: setfield_gc(p43, ConstPtr(ptr44), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+682: setfield_gc(p43, p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+687: p45 = new_with_vtable(descr=<SizeDescr 16>)
+699: setfield_gc(p45, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+703: setfield_gc(p43, p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+708: setfield_gc(p43, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+713: setfield_gc(p42, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+717: setfield_gc(p42, i6, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+721: setfield_gc(p41, p42, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+725: p46 = new_with_vtable(descr=<SizeDescr 40>)
+737: setfield_gc(p46, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+741: setfield_gc(p46, p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+752: setfield_gc(p46, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+763: setfield_gc(p46, ConstPtr(ptr47), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+767: setfield_gc(p41, p46, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+778: setfield_gc(p41, ConstPtr(ptr48), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+782: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+793: setfield_gc(p40, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+797: setfield_gc(p38, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+801: setfield_gc(p38, p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+805: setfield_gc(p38, p40, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+816: setfield_gc(p38, ConstPtr(ptr50), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+820: jump(p21, i9, p33, p38, p30, p31, descr=TargetToken(76829248))
+896: --end of the loop--
[3e4c079dd8ec592] jit-log-opt-bridge}
[3e4c079dd9e3069] {jit-backend
[3e4c079dda1a4a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3b20 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CF200000048FF0425C062E5034983F9017207418139B8B500000F85000000004D8B69104C8B2594FFFFFF4D39E50F85000000004D8B67084983FC01720841813C24900F00000F85000000004983FA010F8E000000004D8B61184D8B69204D8B4108418138102001000F85000000004D8D72FF488B0C25F091F900488D5158483B14251092F9000F879000000048891425F091F90048C701B01E0100488D511848C70230B700004C8942084C8B053DFFFFFF4C8942104C8962184C8D623049C70424601400004D895424084C8962204C896A28488951084C89711048898D300100004C89BD3801000049BB20250F32B77F000041FFE39048C7442408FFFFFF0049BB983A0F32B77F00004C895D204D8D9B5888FFFF41FFD3E9E8FEFFFF49BB083B0F32B77F00004C895D204D8D9BE88FFFFF41FFD3E95BFFFFFFFF3577FEFFFF49BBA83A0F32B77F000041534D8D9B5885FFFF41FFE3FF356BFEFFFF49BBB83A0F32B77F000041534D8D9B4885FFFF41FFE3FF3557FEFFFF49BBC83A0F32B77F000041534D8D9B3885FFFF41FFE3FF3543FEFFFF49BBD83A0F32B77F000041534D8D9B2885FFFF41FFE3FF352FFEFFFF49BBE83A0F32B77F000041534D8D9B1885FFFF41FFE3FF351BFEFFFF49BBF83A0F32B77F000041534D8D9B0885FFFF41FFE3
[3e4c079dda1fa05] jit-backend-dump}
[3e4c079dda2964c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3b64 +0  23000000
[3e4c079dda2a91a] jit-backend-dump}
[3e4c079dda2e3a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3c65 +0  23000000
[3e4c079dda2f14f] jit-backend-dump}
[3e4c079dda322e8] {jit-backend-addr
bridge out of Guard 0x4a38260 has address 0x7fb7320f3b60 to 0x7fb7320f3c60
       gc table: 0x7fb7320f3b20
    jump target: 0x7fb7320f3b60
         resops: 0x7fb7320f3b6e
       failures: 0x7fb7320f3c60
            end: 0x7fb7320f3d4b
[3e4c079dda34520] jit-backend-addr}
[3e4c079dda377ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3b85 +0  1A010000
[3e4c079dda38566] jit-backend-dump}
[3e4c079dda3b6a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3b99 +0  22010000
[3e4c079dda3c2d3] jit-backend-dump}
[3e4c079dda3f3ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3bb1 +0  26010000
[3e4c079dda3ffc6] jit-backend-dump}
[3e4c079dda43465] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3bbb +0  54010000
[3e4c079dda440a8] jit-backend-dump}
[3e4c079dda4772a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3bd4 +0  57010000
[3e4c079dda483b3] jit-backend-dump}
[3e4c079dda4b7ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f1466 +0  F6260000
[3e4c079dda4c41d] jit-backend-dump}
[3e4c079dda5030c] jit-backend}
[3e4c079dda53ea2] {jit-log-opt-bridge
# bridge out of Guard 0x4a38260 with 34 ops
[p0, p1, i2, p3]
+86: guard_nonnull_class(p1, 16478072, descr=<Guard0x4a3aec0>) [p0, p1, i2, p3]
+105: p5 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+116: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x4a39460>) [p0, p1, i2, p3]
+125: p7 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
+125: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+129: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x4a3af20>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(> n 1)')
+149: guard_not_invalidated(descr=<Guard0x4a394a8>) [p0, p1, i2, p3]
+149: i11 = int_gt(i2, 1)
+153: guard_true(i11, descr=<Guard0x4a394f0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
+159: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+163: p13 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+167: p14 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+171: guard_class(p14, 16505296, descr=<Guard0x4a39538>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(- n 1)')
+184: i17 = int_sub(i2, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+188: p18 = new_with_vtable(descr=<SizeDescr 24>)
+229: p19 = new_with_vtable(descr=<SizeDescr 48>)
+240: setfield_gc(p19, p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+251: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+255: setfield_gc(p19, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+259: p21 = new_with_vtable(descr=<SizeDescr 16>)
+271: setfield_gc(p21, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+276: setfield_gc(p19, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+280: setfield_gc(p19, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+284: setfield_gc(p18, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: setfield_gc(p18, i17, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+292: jump(p18, p0, descr=TargetToken(77302144))
+320: --end of the loop--
[3e4c079dda748b0] jit-log-opt-bridge}
[3e4c079ddc0847b] {jit-backend
[3e4c079ddc7c4da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3ee
[3e4c079ddc84b55] jit-backend-dump}
[3e4c079ddc8e75b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3fd4 +0  23000000
[3e4c079ddc8f96f] jit-backend-dump}
[3e4c079ddc9349e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4255 +0  23000000
[3e4c079ddc94252] jit-backend-dump}
[3e4c079ddc97588] {jit-backend-addr
bridge out of Guard 0x4a38a88 has address 0x7fb7320f3fd0 to 0x7fb7320f4250
       gc table: 0x7fb7320f3ee0
    jump target: 0x7fb7320f3fd0
         resops: 0x7fb7320f3fde
       failures: 0x7fb7320f4250
            end: 0x7fb7320f44fb
[3e4c079ddc9979c] jit-backend-addr}
[3e4c079ddc9cc16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3fee +0  A1020000
[3e4c079ddc9d9f3] jit-backend-dump}
[3e4c079ddca0df0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f3ffb +0  B0020000
[3e4c079ddca1aaf] jit-backend-dump}
[3e4c079ddca4f39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4007 +0  C0020000
[3e4c079ddca5be3] jit-backend-dump}
[3e4c079ddca8e40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f401e +0  C5020000
[3e4c079ddca9aee] jit-backend-dump}
[3e4c079ddcacdf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f402f +0  EC020000
[3e4c079ddcadaa6] jit-backend-dump}
[3e4c079ddcb0c95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4043 +0  F4020000
[3e4c079ddcb1940] jit-backend-dump}
[3e4c079ddcb4a9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f405b +0  F8020000
[3e4c079ddcb573d] jit-backend-dump}
[3e4c079ddcb88a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f406d +0  02030000
[3e4c079ddcb9549] jit-backend-dump}
[3e4c079ddcbc6fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4088 +0  03030000
[3e4c079ddcbd39f] jit-backend-dump}
[3e4c079ddcc056c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f409c +0  0B030000
[3e4c079ddcc120a] jit-backend-dump}
[3e4c079ddcc4385] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f40a6 +0  1D030000
[3e4c079ddcc5026] jit-backend-dump}
[3e4c079ddcc81ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f40c1 +0  1E030000
[3e4c079ddcc8ea1] jit-backend-dump}
[3e4c079ddccc031] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f40d5 +0  26030000
[3e4c079ddccccde] jit-backend-dump}
[3e4c079ddccfed9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f40f0 +0  27030000
[3e4c079ddcd0b96] jit-backend-dump}
[3e4c079ddcd3d29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f410b +0  28030000
[3e4c079ddcd49ca] jit-backend-dump}
[3e4c079ddcd7bc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f411f +0  30030000
[3e4c079ddcd8879] jit-backend-dump}
[3e4c079ddcdb9de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4128 +0  43030000
[3e4c079ddcdc68b] jit-backend-dump}
[3e4c079ddcdf840] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4142 +0  45030000
[3e4c079ddce04e7] jit-backend-dump}
[3e4c079ddce3637] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4158 +0  4B030000
[3e4c079ddce42d2] jit-backend-dump}
[3e4c079ddce746b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4165 +0  5A030000
[3e4c079ddce8131] jit-backend-dump}
[3e4c079ddceb30b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f416e +0  6D030000
[3e4c079ddcebfbe] jit-backend-dump}
[3e4c079ddcef3e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f25ed +0  DF190000
[3e4c079ddcf0093] jit-backend-dump}
[3e4c079ddcf4208] jit-backend}
[3e4c079ddcf7d11] {jit-log-opt-bridge
# bridge out of Guard 0x4a38a88 with 84 ops
[p0, p1]
+262: guard_class(p1, 16504944, descr=<Guard0x4a3af80>) [p0, p1]
+274: i3 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+278: i4 = int_is_zero(i3)
+281: guard_false(i4, descr=<Guard0x4a39580>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))')
+287: guard_class(p0, 16435208, descr=<Guard0x4a395c8>) [p0, p1]
+299: p6 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+303: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x4a3afe0>) [p0, p1]
debug_merge_point(0, 0, '(- n 1)')
+322: guard_not_invalidated(descr=<Guard0x4a39610>) [p0, p1]
+322: p8 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+326: guard_class(p8, 16478448, descr=<Guard0x4a39658>) [p0, p1]
+339: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+350: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x4a396a0>) [p0, p1]
+359: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+363: guard_nonnull_class(p12, ConstClass(W_Fixnum), descr=<Guard0x4a3b040>) [p0, p1]
+383: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+388: i16 = int_sub_ovf(i14, 1)
+395: guard_no_overflow(descr=<Guard0x4a396e8>) [p0, p1]
debug_merge_point(0, 0, '(CellRef(P) AppRand1)')
+401: p17 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+405: p18 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+409: guard_nonnull_class(p18, 16478072, descr=<Guard0x4a3b0a0>) [p0, p1]
+428: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+439: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x4a39730>) [p0, p1]
+448: p22 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+448: i24 = int_gt(i16, 1)
+452: guard_false(i24, descr=<Guard0x4a39778>) [p0, p1]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(CellRef(F) n) from (void)')
+458: p25 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+462: p26 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+466: guard_nonnull_class(p26, 16478824, descr=<Guard0x4a3b100>) [p0, p1]
+485: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+496: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x4a397c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand4 (CellRef(list-tail) CellRef(x4876) n4898)]) (let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0)))')
debug_merge_point(0, 0, '(CellRef(list-tail) CellRef(x4876) n4898)')
+505: p30 = getfield_gc_r(p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+509: p31 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+513: guard_nonnull_class(p31, 16477696, descr=<Guard0x4a3b160>) [p0, p1]
+532: p33 = getfield_gc_r(p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+536: p34 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+540: guard_nonnull_class(p34, 16471056, descr=<Guard0x4a3b1c0>) [p0, p1]
+559: p36 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+570: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x4a39808>) [p0, p1]
+579: p38 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) CellRef(x4876) n4898)')
+579: i39 = int_is_zero(i14)
+582: guard_false(i39, descr=<Guard0x4a39850>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))')
debug_merge_point(0, 0, '(- n4926 1)')
debug_merge_point(0, 0, '(CellRef(list-tail) (cdr x4924) AppRand6)')
+588: p40 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+592: p41 = getfield_gc_r(p40, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+596: guard_nonnull_class(p41, 16477696, descr=<Guard0x4a3b220>) [p0, p1]
+614: p43 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+618: guard_nonnull_class(p43, 16471056, descr=<Guard0x4a3b280>) [p0, p1]
+636: p45 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+640: guard_value(p45, ConstPtr(ptr46), descr=<Guard0x4a39898>) [p0, p1]
+649: i47 = instance_ptr_eq(p31, p41)
+652: guard_true(i47, descr=<Guard0x4a398e0>) [p0, p1]
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+658: p48 = new_with_vtable(descr=<SizeDescr 40>)
+709: p49 = new_with_vtable(descr=<SizeDescr 24>)
+720: setfield_gc(p49, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+724: setfield_gc(p49, i14, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+728: p50 = new_with_vtable(descr=<SizeDescr 40>)
+740: setfield_gc(p50, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+745: setfield_gc(p50, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+750: p51 = new_with_vtable(descr=<SizeDescr 40>)
+762: setfield_gc(p51, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+766: setfield_gc(p51, p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+777: setfield_gc(p51, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+788: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+792: setfield_gc(p50, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+804: setfield_gc(p50, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+809: setfield_gc(p48, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+813: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+817: setfield_gc(p48, p50, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+828: setfield_gc(p48, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+832: jump(p31, i16, p43, p48, p40, p41, descr=TargetToken(76829248))
+880: --end of the loop--
[3e4c079ddd3e600] jit-log-opt-bridge}
[3e4c079fc0bb35c] {jit-backend
[3e4c079fc128ebb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f45b
[3e4c079fc131025] jit-backend-dump}
[3e4c079fc150f3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4604 +0  23000000
[3e4c079fc15262f] jit-backend-dump}
[3e4c079fc1565e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4735 +0  23000000
[3e4c079fc15747c] jit-backend-dump}
[3e4c079fc15aa68] {jit-backend-addr
bridge out of Guard 0x491d940 has address 0x7fb7320f4600 to 0x7fb7320f4730
       gc table: 0x7fb7320f45b0
    jump target: 0x7fb7320f4600
         resops: 0x7fb7320f460e
       failures: 0x7fb7320f4730
            end: 0x7fb7320f4853
[3e4c079fc15d25a] jit-backend-addr}
[3e4c079fc160bae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f461b +0  54010000
[3e4c079fc1619e6] jit-backend-dump}
[3e4c079fc164cfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4639 +0  52010000
[3e4c079fc1659f7] jit-backend-dump}
[3e4c079fc168f3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4646 +0  7D010000
[3e4c079fc169c11] jit-backend-dump}
[3e4c079fc16cdcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4668 +0  77010000
[3e4c079fc16dabf] jit-backend-dump}
[3e4c079fc170c15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4680 +0  7B010000
[3e4c079fc1718b6] jit-backend-dump}
[3e4c079fc1749c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4698 +0  7F010000
[3e4c079fc1756b4] jit-backend-dump}
[3e4c079fc1788d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f46a1 +0  92010000
[3e4c079fc179562] jit-backend-dump}
[3e4c079fc17ca69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f0110 +0  EC440000
[3e4c079fc17d75d] jit-backend-dump}
[3e4c079fc181b94] jit-backend}
[3e4c079fc185752] {jit-log-opt-bridge
# bridge out of Guard 0x491d940 with 35 ops
[p0, i1, p2, i3, p4, p5]
+102: i6 = int_is_zero(i1)
+105: guard_false(i6, descr=<Guard0x4a3b640>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))')
+111: p7 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+122: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x4a3b6a0>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(- n4913 1)')
+141: guard_not_invalidated(descr=<Guard0x4a39b20>) [p0, i1, p2, i3, p4, p5]
+141: i10 = int_sub_ovf(i1, 1)
+148: guard_no_overflow(descr=<Guard0x4a39b68>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+154: p11 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+165: p12 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+170: guard_nonnull_class(p12, 16477696, descr=<Guard0x4a3b700>) [p0, i1, p2, i3, p4, p5]
+188: p14 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+192: guard_nonnull_class(p14, 16616448, descr=<Guard0x4a3b760>) [p0, i1, p2, i3, p4, p5]
+212: i16 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+216: p17 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+227: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x4a39bb0>) [p0, i1, p2, i3, p4, p5]
+236: i19 = instance_ptr_eq(p5, p12)
+239: guard_true(i19, descr=<Guard0x4a39bf8>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+245: p20 = new_with_vtable(descr=<SizeDescr 40>)
+286: p21 = new_with_vtable(descr=<SizeDescr 16>)
+297: setfield_gc(p21, i10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+301: p22 = new_with_vtable(descr=<SizeDescr 24>)
+312: setfield_gc(p22, i16, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+316: p23 = new_with_vtable(descr=<SizeDescr 24>)
+327: setfield_gc(p23, i3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+331: setfield_gc(p23, p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+335: setfield_gc(p22, p23, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+339: setfield_gc(p20, p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+343: setfield_gc(p20, p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+347: setfield_gc(p20, p21, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+351: setfield_gc(p20, p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+355: jump(p20, p0, descr=TargetToken(77301984))
+384: --end of the loop--
[3e4c079fc1b20a3] jit-log-opt-bridge}
[3e4c07a27b2abcc] {jit-backend
[3e4c07a27b8197c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f
[3e4c07a27b87d84] jit-backend-dump}
[3e4c07a27ba78a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4954 +0  23000000
[3e4c07a27ba8bd0] jit-backend-dump}
[3e4c07a27bacab9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4a55 +0  23000000
[3e4c07a27bad8fa] jit-backend-dump}
[3e4c07a27bb0e7c] {jit-backend-addr
bridge out of Guard 0x491c6e0 has address 0x7fb7320f4950 to 0x7fb7320f4a50
       gc table: 0x7fb7320f4900
    jump target: 0x7fb7320f4950
         resops: 0x7fb7320f495e
       failures: 0x7fb7320f4a50
            end: 0x7fb7320f4b73
[3e4c07a27bb3756] jit-backend-addr}
[3e4c07a27bb70a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f496b +0  24010000
[3e4c07a27bb7ebd] jit-backend-dump}
[3e4c07a27bbb209] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4989 +0  22010000
[3e4c07a27bbbe54] jit-backend-dump}
[3e4c07a27bbf306] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4996 +0  4D010000
[3e4c07a27bbffb9] jit-backend-dump}
[3e4c07a27bc31ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f49b9 +0  46010000
[3e4c07a27bc3e09] jit-backend-dump}
[3e4c07a27bc7066] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f49d1 +0  4A010000
[3e4c07a27bc7cca] jit-backend-dump}
[3e4c07a27bcaf05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f49e5 +0  52010000
[3e4c07a27bcbb5a] jit-backend-dump}
[3e4c07a27bced30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f49ee +0  65010000
[3e4c07a27bcf976] jit-backend-dump}
[3e4c07a27bd32ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320edb80 +0  CC6D0000
[3e4c07a27bd3fa2] jit-backend-dump}
[3e4c07a27bd8407] jit-backend}
[3e4c07a27bdc089] {jit-log-opt-bridge
# bridge out of Guard 0x491c6e0 with 25 ops
[p0, i1, p2, p3]
+102: i4 = int_is_zero(i1)
+105: guard_false(i4, descr=<Guard0x491c1a0>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))')
+111: p5 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+122: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x491c200>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(- n4926 1)')
+141: guard_not_invalidated(descr=<Guard0x4980020>) [p0, i1, p2, p3]
+141: i8 = int_sub_ovf(i1, 1)
+148: guard_no_overflow(descr=<Guard0x4980068>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(CellRef(list-tail) (cdr x4924) AppRand6)')
+154: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+165: p10 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+170: guard_nonnull_class(p10, 16477696, descr=<Guard0x491c260>) [p0, i1, p2, p3]
+189: p12 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+193: guard_nonnull_class(p12, 16616448, descr=<Guard0x491c2c0>) [p0, i1, p2, p3]
+213: p14 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+224: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x49800b0>) [p0, i1, p2, p3]
+233: i16 = instance_ptr_eq(p3, p10)
+236: guard_true(i16, descr=<Guard0x49800f8>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))) from (CellRef(list-tail) (cdr x4924) AppRand6)')
+242: p17 = new_with_vtable(descr=<SizeDescr 32>)
+283: setfield_gc(p17, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+287: setfield_gc(p17, i8, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+291: setfield_gc(p17, p12, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+295: jump(p17, p0, descr=TargetToken(76829168))
+336: --end of the loop--
[3e4c07a27bfd3fe] jit-log-opt-bridge}
[3e4c07a35a185d0] {jit-backend
[3e4c07a35a9be17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4ce
[3e4c07a35aa5216] jit-backend-dump}
[3e4c07a35ac451e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4d94 +0  23000000
[3e4c07a35ac58a7] jit-backend-dump}
[3e4c07a35ac9d98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4f95 +0  23000000
[3e4c07a35acac3e] jit-backend-dump}
[3e4c07a35ace1bd] {jit-backend-addr
bridge out of Guard 0x4980218 has address 0x7fb7320f4d90 to 0x7fb7320f4f90
       gc table: 0x7fb7320f4ce0
    jump target: 0x7fb7320f4d90
         resops: 0x7fb7320f4d9e
       failures: 0x7fb7320f4f90
            end: 0x7fb7320f51e7
[3e4c07a35ad0b27] jit-backend-addr}
[3e4c07a35ad42b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4dae +0  21020000
[3e4c07a35ad50df] jit-backend-dump}
[3e4c07a35ad83c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4dbb +0  30020000
[3e4c07a35ad908b] jit-backend-dump}
[3e4c07a35adc350] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4dd2 +0  35020000
[3e4c07a35add03e] jit-backend-dump}
[3e4c07a35ae030c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4de6 +0  3D020000
[3e4c07a35ae0fd2] jit-backend-dump}
[3e4c07a35ae41c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4dfa +0  45020000
[3e4c07a35ae4e74] jit-backend-dump}
[3e4c07a35ae8748] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4e10 +0  67020000
[3e4c07a35ae948e] jit-backend-dump}
[3e4c07a35aec8ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4e23 +0  70020000
[3e4c07a35aed57c] jit-backend-dump}
[3e4c07a35af0639] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4e3a +0  75020000
[3e4c07a35af1305] jit-backend-dump}
[3e4c07a35af444f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4e47 +0  84020000
[3e4c07a35af514c] jit-backend-dump}
[3e4c07a35af82b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4e61 +0  86020000
[3e4c07a35af8f8f] jit-backend-dump}
[3e4c07a35afc0e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4e7b +0  88020000
[3e4c07a35afcdd3] jit-backend-dump}
[3e4c07a35affe96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4e94 +0  8B020000
[3e4c07a35b00b4c] jit-backend-dump}
[3e4c07a35b03d3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4e9d +0  9E020000
[3e4c07a35b04a2c] jit-backend-dump}
[3e4c07a35b07bed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4ea7 +0  B0020000
[3e4c07a35b088b0] jit-backend-dump}
[3e4c07a35b0ba8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4ec2 +0  B1020000
[3e4c07a35b0c780] jit-backend-dump}
[3e4c07a35b0f8d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4eda +0  B5020000
[3e4c07a35b1057d] jit-backend-dump}
[3e4c07a35b13637] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4eeb +0  C0020000
[3e4c07a35b14312] jit-backend-dump}
[3e4c07a35b173f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f4ef4 +0  D3020000
[3e4c07a35b18098] jit-backend-dump}
[3e4c07a35b1b52e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320eda84 +0  08730000
[3e4c07a35b1c1d8] jit-backend-dump}
[3e4c07a35b23f97] jit-backend}
[3e4c07a35b283b3] {jit-log-opt-bridge
# bridge out of Guard 0x4980218 with 66 ops
[p0, p1]
+198: guard_class(p1, 16503536, descr=<Guard0x4a3b7c0>) [p0, p1]
+210: i3 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed01.inst_vals_fixed_1 16 pure>)
+214: i4 = int_is_zero(i3)
+217: guard_true(i4, descr=<Guard0x4a39c40>) [p0, p1]
debug_merge_point(0, 0, 'x4924')
+223: p5 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+227: guard_nonnull_class(p5, 16616448, descr=<Guard0x4a3b820>) [p0, p1]
+246: guard_class(p0, 16435920, descr=<Guard0x4a39c88>) [p0, p1]
+266: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+277: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x4a39cd0>) [p0, p1]
+286: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+290: guard_not_invalidated(descr=<Guard0x4a39d18>) [p0, p1]
+290: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0))')
+294: guard_class(p10, 16504944, descr=<Guard0x4a39d60>) [p0, p1]
+308: p13 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+313: guard_class(p11, 16435208, descr=<Guard0x4a39da8>) [p0, p1]
+327: p15 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+331: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x4a3b880>) [p0, p1]
debug_merge_point(0, 0, '(CellRef(revloop) CellRef(x4876) n4898 AppRand4)')
+350: guard_class(p13, 16478824, descr=<Guard0x4a39df0>) [p0, p1]
+363: p18 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+367: p19 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+371: guard_nonnull_class(p19, 16477696, descr=<Guard0x4a3b8e0>) [p0, p1]
+389: p21 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+393: p22 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+397: guard_nonnull_class(p22, 16471056, descr=<Guard0x4a3b940>) [p0, p1]
+415: i24 = getfield_gc_i(p10, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+420: p25 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+431: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x4a39e38>) [p0, p1]
+440: p27 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) CellRef(x4876) n4898 AppRand4)')
+440: i28 = int_is_zero(i24)
+443: guard_false(i28, descr=<Guard0x4a39e80>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))')
debug_merge_point(0, 0, '(- n4913 1)')
+449: i30 = int_sub_ovf(i24, 1)
+453: guard_no_overflow(descr=<Guard0x4a39ec8>) [p0, p1]
debug_merge_point(0, 0, '(CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+459: p31 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+463: p32 = getfield_gc_r(p31, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+468: guard_nonnull_class(p32, 16477696, descr=<Guard0x4a3b9a0>) [p0, p1]
+486: p34 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+490: guard_nonnull_class(p34, 16471056, descr=<Guard0x4a3ba00>) [p0, p1]
+510: i36 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+514: p37 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+518: guard_value(p37, ConstPtr(ptr38), descr=<Guard0x4a39f10>) [p0, p1]
+527: i39 = instance_ptr_eq(p19, p32)
+530: guard_true(i39, descr=<Guard0x4a39f58>) [p0, p1]
debug_merge_point(0, 0, '(if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+536: p40 = new_with_vtable(descr=<SizeDescr 40>)
+577: p41 = new_with_vtable(descr=<SizeDescr 16>)
+588: setfield_gc(p41, i30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+592: p42 = new_with_vtable(descr=<SizeDescr 24>)
+603: setfield_gc(p42, i36, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+607: setfield_gc(p42, p5, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+611: p43 = new_with_vtable(descr=<SizeDescr 40>)
+629: setfield_gc(p43, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+633: setfield_gc(p43, p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+637: setfield_gc(p43, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+641: setfield_gc(p40, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+645: setfield_gc(p43, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+649: setfield_gc(p40, p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+653: setfield_gc(p40, p41, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+657: setfield_gc(p40, p42, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+661: jump(p40, p43, descr=TargetToken(77301984))
+688: --end of the loop--
[3e4c07a35b68cff] jit-log-opt-bridge}
[3e4c07a38def8fb] {jit-backend
[3e4c07a38e7f86e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f53d
[3e4c07a38e89f4a] jit-backend-dump}
[3e4c07a38e9fd8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f54e4 +0  23000000
[3e4c07a38ea1312] jit-backend-dump}
[3e4c07a38ea51dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5785 +0  23000000
[3e4c07a38ea60aa] jit-backend-dump}
[3e4c07a38ea951e] {jit-backend-addr
bridge out of Guard 0x49d9658 has address 0x7fb7320f54e0 to 0x7fb7320f5780
       gc table: 0x7fb7320f53d0
    jump target: 0x7fb7320f54e0
         resops: 0x7fb7320f54ee
       failures: 0x7fb7320f5780
            end: 0x7fb7320f5afa
[3e4c07a38eabf52] jit-backend-addr}
[3e4c07a38eaf73a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f54fe +0  E8020000
[3e4c07a38eb0578] jit-backend-dump}
[3e4c07a38eb397e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5515 +0  ED020000
[3e4c07a38eb46a0] jit-backend-dump}
[3e4c07a38eb7b3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5522 +0  FC020000
[3e4c07a38eb8817] jit-backend-dump}
[3e4c07a38ebb9e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5539 +0  01030000
[3e4c07a38ebc6cf] jit-backend-dump}
[3e4c07a38ebf8dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f554d +0  09030000
[3e4c07a38ec0593] jit-backend-dump}
[3e4c07a38ec3701] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5561 +0  11030000
[3e4c07a38ec43e9] jit-backend-dump}
[3e4c07a38ec7832] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5577 +0  33030000
[3e4c07a38ec84d3] jit-backend-dump}
[3e4c07a38ecb64e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5598 +0  2E030000
[3e4c07a38ecc314] jit-backend-dump}
[3e4c07a38ecf4b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f55ac +0  36030000
[3e4c07a38ed0173] jit-backend-dump}
[3e4c07a38ed3230] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f55c1 +0  3D030000
[3e4c07a38ed3f02] jit-backend-dump}
[3e4c07a38ed7076] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f55dc +0  3E030000
[3e4c07a38ed7d21] jit-backend-dump}
[3e4c07a38edae2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f55f7 +0  3F030000
[3e4c07a38edbae4] jit-backend-dump}
[3e4c07a38edec2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5603 +0  4F030000
[3e4c07a38edf8ea] jit-backend-dump}
[3e4c07a38ee29b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5617 +0  57030000
[3e4c07a38ee367c] jit-backend-dump}
[3e4c07a38ee67de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f562b +0  5F030000
[3e4c07a38ee7480] jit-backend-dump}
[3e4c07a38eea592] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f563c +0  6A030000
[3e4c07a38eeb25e] jit-backend-dump}
[3e4c07a38eee41c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5652 +0  70030000
[3e4c07a38eef0f1] jit-backend-dump}
[3e4c07a38ef223e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5660 +0  7E030000
[3e4c07a38ef2f01] jit-backend-dump}
[3e4c07a38ef6054] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f566c +0  8E030000
[3e4c07a38ef6d2c] jit-backend-dump}
[3e4c07a38ef9ef6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5680 +0  96030000
[3e4c07a38efabf6] jit-backend-dump}
[3e4c07a38efdd36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5689 +0  A9030000
[3e4c07a38efe9f9] jit-backend-dump}
[3e4c07a38f01b1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f569f +0  AF030000
[3e4c07a38f027f3] jit-backend-dump}
[3e4c07a38f059a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f56ad +0  BD030000
[3e4c07a38f06665] jit-backend-dump}
[3e4c07a38f0987e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f570c +0  7A030000
[3e4c07a38f0a569] jit-backend-dump}
[3e4c07a38f0d69a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5720 +0  82030000
[3e4c07a38f0e34b] jit-backend-dump}
[3e4c07a38f11414] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f572a +0  94030000
[3e4c07a38f120ec] jit-backend-dump}
[3e4c07a38f19033] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5743 +0  97030000
[3e4c07a38f19dcf] jit-backend-dump}
[3e4c07a38f1d46d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320efffa +0  E2540000
[3e4c07a38f1e176] jit-backend-dump}
[3e4c07a38f2253f] jit-backend}
[3e4c07a38f26241] {jit-log-opt-bridge
# bridge out of Guard 0x49d9658 with 91 ops
[p0, p1]
+294: guard_class(p1, 16500368, descr=<Guard0x4a3ba60>) [p0, p1]
+306: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+310: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x4a3bac0>) [p0, p1]
+329: i5 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+333: i6 = int_is_zero(i5)
+336: guard_true(i6, descr=<Guard0x4a39fa0>) [p0, p1]
debug_merge_point(0, 0, 'y')
+342: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+346: guard_nonnull_class(p7, 16471056, descr=<Guard0x4a3bb20>) [p0, p1]
+365: guard_class(p0, 16435920, descr=<Guard0x7fb733cc4020>) [p0, p1]
+385: p10 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+396: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x7fb733cc4068>) [p0, p1]
+405: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+409: guard_not_invalidated(descr=<Guard0x7fb733cc40b0>) [p0, p1]
+409: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! x4876 SetBang0)')
+413: guard_class(p12, 16478824, descr=<Guard0x7fb733cc40f8>) [p0, p1]
+427: p15 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+442: setfield_gc(p15, p7, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+446: guard_class(p13, 16435208, descr=<Guard0x4a3bb80>) [p13, p7, p12]
+460: p17 = getfield_gc_r(p13, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+471: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x7fb733cc4140>) [p13, p7, p12]
+480: p19 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+484: p20 = getfield_gc_r(p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! perms (cons CellRef(x4876) CellRef(perms)))')
+488: guard_class(p19, 16478824, descr=<Guard0x7fb733cc4188>) [p13, p7, p12]
+501: p22 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+505: p23 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+509: guard_nonnull_class(p23, 16471056, descr=<Guard0x4a3bbe0>) [p13, p7, p12]
+528: p25 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+532: p26 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+536: guard_nonnull_class(p26, 16470384, descr=<Guard0x4a3bc40>) [p13, p7, p12]
+555: guard_class(p20, 16435208, descr=<Guard0x7fb733cc41d0>) [p13, p7, p12]
+567: p29 = getfield_gc_r(p20, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+578: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x7fb733cc4218>) [p13, p7, p12]
+587: p31 = getfield_gc_r(p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+591: p32 = getfield_gc_r(p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- j 1)]) (doloop AppRand2)) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+595: guard_class(p31, 16504944, descr=<Guard0x7fb733cc4260>) [p13, p7, p12]
+607: p34 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+611: guard_class(p32, 16435208, descr=<Guard0x7fb733cc42a8>) [p13, p7, p12]
+624: p36 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+628: guard_nonnull_class(p36, ConstClass(ForwardLink), descr=<Guard0x4a3bca0>) [p13, p7, p12]
debug_merge_point(0, 0, '(- j 1)')
+646: i38 = getfield_gc_i(p31, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+650: i40 = int_sub_ovf(i38, 1)
+654: guard_no_overflow(descr=<Guard0x7fb733cc42f0>) [p13, p7, p12]
debug_merge_point(0, 0, '(doloop AppRand2)')
+660: guard_class(p34, 16478448, descr=<Guard0x7fb733cc4338>) [p13, p7, p12]
+672: p42 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+683: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x7fb733cc4380>) [p13, p7, p12]
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)')
+692: i44 = int_is_zero(i40)
+695: guard_false(i44, descr=<Guard0x7fb733cc43c8>) [p13, p7, p12]
debug_merge_point(0, 0, '(let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))')
debug_merge_point(0, 0, '(- n 1)')
+701: p45 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+705: guard_nonnull_class(p45, ConstClass(W_Fixnum), descr=<Guard0x4a3bd00>) [p13, p7, p12]
+723: i47 = getfield_gc_i(p45, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+727: i49 = int_sub_ovf(i47, 1)
+731: guard_no_overflow(descr=<Guard0x7fb733cc4410>) [p13, p7, p12]
debug_merge_point(0, 0, '(CellRef(P) AppRand1)')
+737: p50 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+741: p51 = new_with_vtable(descr=<SizeDescr 24>)
+785: setfield_gc(p51, p23, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+789: setfield_gc(p51, p26, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+804: setfield_gc(p25, p51, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+808: p52 = getfield_gc_r(p50, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+813: guard_nonnull_class(p52, 16478072, descr=<Guard0x4a3bd60>) [p52, i49, i40, p34, p32, p36, None, None]
+832: p55 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+843: guard_value(p55, ConstPtr(ptr56), descr=<Guard0x7fb733cc4458>) [p52, i49, i40, p34, p32, p36, None, None]
+852: p57 = getfield_gc_r(p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+852: i59 = int_gt(i49, 1)
+856: guard_true(i59, descr=<Guard0x7fb733cc44a0>) [p52, i49, i40, p34, p32, p36, None, None]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
+862: p60 = getfield_gc_r(p52, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+866: p61 = getfield_gc_r(p52, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+870: p62 = getfield_gc_r(p52, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+874: guard_class(p62, 16505296, descr=<Guard0x7fb733cc44e8>) [p52, i49, i40, p34, p32, p36, None, None]
debug_merge_point(0, 0, '(- n 1)')
+887: i65 = int_sub(i49, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+891: p66 = new_with_vtable(descr=<SizeDescr 24>)
+902: setfield_gc(p66, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+906: setfield_gc(p66, i40, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+910: jump(p62, p60, i49, p61, i65, p36, p66, p32, i65, descr=TargetToken(77302224))
+944: --end of the loop--
[3e4c07a38f79842] jit-log-opt-bridge}
[3e4c07a3d095d8a] {jit-backend
[3e4c07a3d1010e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5c
[3e4c07a3d109331] jit-backend-dump}
[3e4c07a3d122def] {jit-backend-addr
Loop 19 ((let ([AppRand2 (- j 1)]) (doloop AppRand2)) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))) has address 0x7fb7320f5d1d to 0x7fb7320f5ea0 (bootstrap 0x7fb7320f5c90)
       gc table: 0x7fb7320f5c10
       function: 0x7fb7320f5c90
         resops: 0x7fb7320f5d1d
       failures: 0x7fb7320f5ea0
            end: 0x7fb7320f6057
[3e4c07a3d1261a6] jit-backend-addr}
[3e4c07a3d12aaba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5d34 +0  97010000
[3e4c07a3d12bc94] jit-backend-dump}
[3e4c07a3d12f448] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5d4b +0  9C010000
[3e4c07a3d130264] jit-backend-dump}
[3e4c07a3d13385a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5d61 +0  A2010000
[3e4c07a3d13460b] jit-backend-dump}
[3e4c07a3d137d45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5d6f +0  CC010000
[3e4c07a3d138a39] jit-backend-dump}
[3e4c07a3d13bc90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5d7b +0  DC010000
[3e4c07a3d13c946] jit-backend-dump}
[3e4c07a3d13fba3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5d8f +0  E4010000
[3e4c07a3d140829] jit-backend-dump}
[3e4c07a3d143991] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5d98 +0  F7010000
[3e4c07a3d144645] jit-backend-dump}
[3e4c07a3d14774e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5dae +0  FD010000
[3e4c07a3d1483ef] jit-backend-dump}
[3e4c07a3d14b4ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5dbc +0  0B020000
[3e4c07a3d14c1a0] jit-backend-dump}
[3e4c07a3d14f23e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5dd6 +0  0D020000
[3e4c07a3d14feef] jit-backend-dump}
[3e4c07a3d152fb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5dea +0  15020000
[3e4c07a3d153c28] jit-backend-dump}
[3e4c07a3d156c5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5df4 +0  27020000
[3e4c07a3d157900] jit-backend-dump}
[3e4c07a3d15a9a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5e0d +0  2A020000
[3e4c07a3d15b621] jit-backend-dump}
[3e4c07a3d15f3ad] jit-backend}
[3e4c07a3d162f68] {jit-log-opt-loop
# Loop 19 ((let ([AppRand2 (- j 1)]) (doloop AppRand2)) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))) : entry bridge with 61 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (- j 1)]) (doloop AppRand2)) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+277: guard_class(p0, 16504944, descr=<Guard0x4a3be20>) [p1, p0]
+296: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+300: guard_class(p1, 16435208, descr=<Guard0x7fb733cc4530>) [p1, p0]
+319: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+323: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x4a3be80>) [p1, p0]
debug_merge_point(0, 0, '(- j 1)')
+341: guard_not_invalidated(descr=<Guard0x7fb733cc4578>) [p1, p0]
+341: i7 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+345: i9 = int_sub_ovf(i7, 1)
+349: guard_no_overflow(descr=<Guard0x7fb733cc45c0>) [p1, p0]
debug_merge_point(0, 0, '(doloop AppRand2)')
+355: guard_class(p3, 16478448, descr=<Guard0x7fb733cc4608>) [p1, p0]
+367: p11 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+378: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x7fb733cc4650>) [p1, p0]
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)')
+387: i13 = int_is_zero(i9)
+390: guard_true(i13, descr=<Guard0x7fb733cc4698>) [p1, p0]
debug_merge_point(0, 0, '(begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))')
debug_merge_point(0, 0, '(- n 1)')
+396: p14 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+400: guard_nonnull_class(p14, ConstClass(W_Fixnum), descr=<Guard0x4a3bee0>) [p1, p0]
+418: i16 = getfield_gc_i(p14, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+422: i18 = int_sub_ovf(i16, 1)
+426: guard_no_overflow(descr=<Guard0x7fb733cc46e0>) [p1, p0]
debug_merge_point(0, 0, '(CellRef(P) AppRand0)')
+432: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+436: p20 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+440: guard_nonnull_class(p20, 16478072, descr=<Guard0x4a3bf40>) [p1, p0]
+458: p22 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+469: guard_value(p22, ConstPtr(ptr23), descr=<Guard0x7fb733cc4728>) [p1, p0]
+478: p24 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+478: i26 = int_gt(i18, 1)
+482: guard_true(i26, descr=<Guard0x7fb733cc4770>) [p1, p0]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
+488: p27 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+492: p28 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+496: p29 = getfield_gc_r(p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+500: guard_class(p29, 16505296, descr=<Guard0x7fb733cc47b8>) [p1, p0]
debug_merge_point(0, 0, '(- n 1)')
+513: i32 = int_sub(i18, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+517: p33 = new_with_vtable(descr=<SizeDescr 24>)
+564: p34 = new_with_vtable(descr=<SizeDescr 48>)
+575: setfield_gc(p34, p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+579: setfield_gc(p34, ConstPtr(ptr35), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+583: setfield_gc(p34, p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+587: p36 = new_with_vtable(descr=<SizeDescr 16>)
+598: setfield_gc(p36, i18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+602: setfield_gc(p34, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+606: setfield_gc(p34, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+610: setfield_gc(p33, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+614: setfield_gc(p33, i32, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+618: jump(p33, p1, descr=TargetToken(77302144))
+656: --end of the loop--
[3e4c07a3d19cf4b] jit-log-opt-loop}
[3e4c07ac8664227] {jit-backend
[3e4c07ac86d6cdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f
[3e4c07ac86deb5f] jit-backend-dump}
[3e4c07ac86fd1d2] {jit-backend-addr
Loop 20 ((if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))) from (doloop4966 AppRand9 (cons n4968 p))) has address 0x7fb7320f627d to 0x7fb7320f63c0 (bootstrap 0x7fb7320f61f0)
       gc table: 0x7fb7320f6170
       function: 0x7fb7320f61f0
         resops: 0x7fb7320f627d
       failures: 0x7fb7320f63c0
            end: 0x7fb7320f6577
[3e4c07ac8700542] jit-backend-addr}
[3e4c07ac8704b99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f62a7 +0  44010000
[3e4c07ac8705e5c] jit-backend-dump}
[3e4c07ac8709485] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f62b4 +0  53010000
[3e4c07ac870a29f] jit-backend-dump}
[3e4c07ac870d781] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f62c7 +0  5C010000
[3e4c07ac870e48d] jit-backend-dump}
[3e4c07ac871174c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f62dd +0  62010000
[3e4c07ac871241e] jit-backend-dump}
[3e4c07ac87157e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f62ea +0  8D010000
[3e4c07ac871648b] jit-backend-dump}
[3e4c07ac871963d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f62fa +0  99010000
[3e4c07ac871a300] jit-backend-dump}
[3e4c07ac871d40c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6310 +0  9F010000
[3e4c07ac871e0b4] jit-backend-dump}
[3e4c07ac87210f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6327 +0  A4010000
[3e4c07ac8721d88] jit-backend-dump}
[3e4c07ac8724de9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f633b +0  AC010000
[3e4c07ac8725a78] jit-backend-dump}
[3e4c07ac8728af5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6348 +0  BB010000
[3e4c07ac8729777] jit-backend-dump}
[3e4c07ac872c7cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f636d +0  B2010000
[3e4c07ac872d45e] jit-backend-dump}
[3e4c07ac8730607] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f637a +0  DD010000
[3e4c07ac87312b1] jit-backend-dump}
[3e4c07ac8735074] jit-backend}
[3e4c07ac8738d73] {jit-log-opt-loop
# Loop 20 ((if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))) from (doloop4966 AppRand9 (cons n4968 p))) : loop with 42 ops
[p0, p1]
+277: label(p0, p1, descr=TargetToken(76824688))
debug_merge_point(0, 0, '(if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))) from (doloop4966 AppRand9 (cons n4968 p))')
+296: guard_class(p0, 16504240, descr=<Guard0x491c320>) [p1, p0]
+315: i3 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+319: i4 = int_is_zero(i3)
+322: guard_false(i4, descr=<Guard0x4980140>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))')
+328: guard_class(p1, 16435920, descr=<Guard0x4980188>) [p1, p0]
+347: p6 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+351: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x491c380>) [p1, p0]
debug_merge_point(0, 0, '(- n4968 1)')
+369: guard_not_invalidated(descr=<Guard0x49801d0>) [p1, p0]
+369: i9 = int_sub_ovf(i3, 1)
+376: guard_no_overflow(descr=<Guard0x4903e38>) [p1, p0]
debug_merge_point(0, 0, '(doloop4966 AppRand9 (cons n4968 p))')
+382: p10 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+386: guard_class(p10, 16499664, descr=<Guard0x4903e80>) [p1, p0]
+398: p12 = getfield_gc_r(p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+402: guard_nonnull_class(p12, 16510992, descr=<Guard0x491c3e0>) [p1, p0]
+420: p14 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+424: guard_nonnull_class(p14, 16471056, descr=<Guard0x491c440>) [p1, p0]
+443: p16 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+454: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x4903ec8>) [p1, p0]
+463: p18 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+467: i19 = instance_ptr_eq(p10, p18)
+470: guard_true(i19, descr=<Guard0x4903f10>) [p1, p0]
debug_merge_point(0, 0, '(if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))) from (doloop4966 AppRand9 (cons n4968 p))')
+476: label(p10, i9, i3, p14, p1, p12, descr=TargetToken(76824768))
debug_merge_point(0, 0, '(if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))) from (doloop4966 AppRand9 (cons n4968 p))')
+504: i20 = int_is_zero(i9)
+507: guard_false(i20, descr=<Guard0x491c740>) [p1, i9, p14, i3, p10]
debug_merge_point(0, 0, '(let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))')
debug_merge_point(0, 0, '(- n4968 1)')
+513: guard_not_invalidated(descr=<Guard0x4903f58>) [p1, i9, p14, i3, p10]
+513: i22 = int_sub_ovf(i9, 1)
+520: guard_no_overflow(descr=<Guard0x4903fa0>) [p1, i9, p14, i3, p10]
debug_merge_point(0, 0, '(doloop4966 AppRand9 (cons n4968 p))')
debug_merge_point(0, 0, '(if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))) from (doloop4966 AppRand9 (cons n4968 p))')
+526: p23 = new_with_vtable(descr=<SizeDescr 24>)
+567: setfield_gc(p23, i3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+571: setfield_gc(p23, p14, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+575: jump(p10, i22, i9, p23, p1, p12, descr=TargetToken(76824768))
+592: --end of the loop--
[3e4c07ac87658cf] jit-log-opt-loop}
[3e4c0825bb7fac0] {jit-backend
[3e4c0825bc1616a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f66f0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C2202000048FF0425A077E50341817D00480E00000F85000000004D8B7D204C8B1509FFFFFF4D39D70F85000000004D8B55104D8B7D1841813AA8B800000F85000000004D8B4A204D8B41084983F8017207418138509A00000F85000000004D8B4A284D8B51084983FA01720741813AB09700000F850000000041813F480E00000F8500000000498B7F20488B35CDFEFFFF4839F70F8500000000498B7710498B7F18813EB01E01000F85000000004C8B7E08813F480E00000F8500000000488B5F084883FB017206813B900F00000F8500000000488B5E104883EB010F800000000041813F30B700000F8500000000498B7710488B15A4FEFFFF4839D60F85000000004885DB0F8500000000498B5F204883FB017206813B601400000F8500000000488B73084883EE010F80000000004D8B67284989D6488B0C25F091F900488D5170483B14251092F9000F87FB00000048891425F091F90048C701B09700004C8941084C89511041F64104010F85F6000000498949084D8B4C24084983F9017207418139B8B500000F85000000004D8B61104C8B1534FEFFFF4D39D40F85000000004883FE010F8E000000004D8B51184D8B61204D8B4108418138102001000F85000000004C8D7EFF4C8D491849C701B01E0100498D491848C70130B700004C8941084C8971104C8951184C8D513049C70260140000498972084C8951204C896128498949084D8979104C898D300100004889BD3801000049BB20250F32B77F000041FFE348C7442408FFFFFF0049BB80650F32B77F00004C895D204D8D9B705DFFFF41FFD3E9B8FDFFFF49BBA0660F32B77F00004C895D204D8D9B5064FFFF41FFD3E9F0FEFFFF415149BB80C10E32B77F000041FFD3E9F6FEFFFFFF35A3FCFFFF49BB90650F32B77F000041534D8D9B705AFFFF41FFE3FF3597FCFFFF49BBA0650F32B77F000041534D8D9B605AFFFF41FFE3FF3583FCFFFF49BBB0650F32B77F000041534D8D9B505AFFFF41FFE3FF356FFCFFFF49BBC0650F32B77F000041534D8D9B405AFFFF41FFE3FF355BFCFFFF49BBD0650F32B77F000041534D8D9B305AFFFF41FFE3FF3547FCFFFF49BBE0650F32B77F000041534D8D9B205AFFFF41FFE3FF353BFCFFFF49BBF0650F32B77F000041534D8D9B105AFFFF41FFE3FF3527FCFFFF49BB00660F32B77F000041534D8D9B005AFFFF41FFE3FF3513FCFFFF49BB10660F32B77F000041534D8D9BF059FFFF41FFE3FF35FFFBFFFF49BB20660F32B77F000041534D8D9BE059FFFF41FFE3FF35EBFBFFFF49BB30660F32B77F000041534D8D9BD059FFFF41FFE3FF35D7FBFFFF49BB40660F32B77F000041534D8D9BC059FFFF41FFE3FF35C3FBFFFF49BB50660F32B77F000041534D8D9BB059FFFF41FFE3FF35B7FBFFFF49BB60660F32B77F000041534D8D9BA059FFFF41FFE3FF35A3FBFFFF49BB70660F32B77F000041534D8D9B9059FFFF41FFE3FF358FFBFFFF49BB80660F32B77F000041534D8D9B8059FFFF41FFE3FF357BFBFFFF49BB90660F32B77F000041534D8D9B7059FFFF41FFE3FF3567FBFFFF49BBB0660F32B77F000041534D8D9B5059FFFF41FFE3FF355BFBFFFF49BBC0660F32B77F000041534D8D9B4059FFFF41FFE3FF3547FBFFFF49BBD0660F32B77F000041534D8D9B3059FFFF41FFE3FF3533FBFFFF49BBE0660F32B77F000041534D8D9B2059FFFF41FFE3
[3e4c0825bc22c6b] jit-backend-dump}
[3e4c0825bc447c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f67c4 +0  23000000
[3e4c0825bc45c13] jit-backend-dump}
[3e4c0825bc4a0ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f69f5 +0  23000000
[3e4c0825bc4affd] jit-backend-dump}
[3e4c0825bc4e4ec] {jit-backend-addr
bridge out of Guard 0x7fb733cc43c8 has address 0x7fb7320f67c0 to 0x7fb7320f69f0
       gc table: 0x7fb7320f66f0
    jump target: 0x7fb7320f67c0
         resops: 0x7fb7320f67ce
       failures: 0x7fb7320f69f0
            end: 0x7fb7320f6c93
[3e4c0825bc50f54] jit-backend-addr}
[3e4c0825bc54874] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f67e0 +0  63020000
[3e4c0825bc556e9] jit-backend-dump}
[3e4c0825bc58a1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f67f4 +0  6B020000
[3e4c0825bc59741] jit-backend-dump}
[3e4c0825bc5ca55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6809 +0  72020000
[3e4c0825bc5d6d8] jit-backend-dump}
[3e4c0825bc607db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6824 +0  73020000
[3e4c0825bc61430] jit-backend-dump}
[3e4c0825bc645cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f683f +0  74020000
[3e4c0825bc6521e] jit-backend-dump}
[3e4c0825bc6838f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f684c +0  83020000
[3e4c0825bc68fb0] jit-backend-dump}
[3e4c0825bc6c051] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6860 +0  8B020000
[3e4c0825bc6cc78] jit-backend-dump}
[3e4c0825bc6fe95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6874 +0  93020000
[3e4c0825bc70abf] jit-backend-dump}
[3e4c0825bc73b48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6884 +0  9F020000
[3e4c0825bc74784] jit-backend-dump}
[3e4c0825bc77887] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f689a +0  A5020000
[3e4c0825bc784a8] jit-backend-dump}
[3e4c0825bc7b8e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f68a8 +0  CF020000
[3e4c0825bc7c51e] jit-backend-dump}
[3e4c0825bc7f628] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f68b5 +0  DE020000
[3e4c0825bc802a1] jit-backend-dump}
[3e4c0825bc832fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f68c9 +0  E6020000
[3e4c0825bc83f23] jit-backend-dump}
[3e4c0825bc87042] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f68d2 +0  F9020000
[3e4c0825bc87c72] jit-backend-dump}
[3e4c0825bc8ad04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f68e8 +0  FF020000
[3e4c0825bc8b93d] jit-backend-dump}
[3e4c0825bc8ea74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f68f6 +0  0D030000
[3e4c0825bc8f6a4] jit-backend-dump}
[3e4c0825bc926f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6955 +0  CA020000
[3e4c0825bc9331d] jit-backend-dump}
[3e4c0825bc963f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6969 +0  D2020000
[3e4c0825bc97004] jit-backend-dump}
[3e4c0825bc9a0e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6973 +0  E4020000
[3e4c0825bc9acf1] jit-backend-dump}
[3e4c0825bc9dd89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f698c +0  E7020000
[3e4c0825bc9e9c5] jit-backend-dump}
[3e4c0825bca1e5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f5689 +0  33110000
[3e4c0825bca2a7c] jit-backend-dump}
[3e4c0825bca722a] jit-backend}
[3e4c0825bcaaefe] {jit-log-opt-bridge
# bridge out of Guard 0x7fb733cc43c8 with 83 ops
[p0, p1, p2]
+230: guard_class(p0, 16435208, descr=<Guard0x4a3bfa0>) [p0, p1, p2]
+244: p4 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+255: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x7fb733cc4800>) [p0, p1, p2]
+264: p6 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+268: p7 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(set! perms (cons CellRef(x4876) CellRef(perms)))')
+272: guard_class(p6, 16478824, descr=<Guard0x7fb733cc4848>) [p0, p1, p2]
+285: p9 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+289: p10 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+293: guard_nonnull_class(p10, 16471056, descr=<Guard0x7fb733cb0020>) [p0, p1, p2]
+312: p12 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+316: p13 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+320: guard_nonnull_class(p13, 16470384, descr=<Guard0x7fb733cb0080>) [p0, p1, p2]
+339: guard_class(p7, 16435208, descr=<Guard0x7fb733cc4890>) [p0, p1, p2]
+352: p16 = getfield_gc_r(p7, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+363: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x7fb733cc48d8>) [p0, p1, p2]
+372: p18 = getfield_gc_r(p7, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+376: p19 = getfield_gc_r(p7, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- j 1)]) (doloop AppRand2)) from (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y))')
+380: guard_class(p18, 16504944, descr=<Guard0x7fb733cc4920>) [p0, p1, p2]
+392: p21 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+396: guard_class(p19, 16435208, descr=<Guard0x7fb733cc4968>) [p0, p1, p2]
+408: p23 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+412: guard_nonnull_class(p23, ConstClass(ForwardLink), descr=<Guard0x7fb733cb00e0>) [p0, p1, p2]
debug_merge_point(0, 0, '(- j 1)')
+430: guard_not_invalidated(descr=<Guard0x7fb733cc49b0>) [p0, p1, p2]
+430: i25 = getfield_gc_i(p18, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+434: i27 = int_sub_ovf(i25, 1)
+438: guard_no_overflow(descr=<Guard0x7fb733cc49f8>) [p0, p1, p2]
debug_merge_point(0, 0, '(doloop AppRand2)')
+444: guard_class(p21, 16478448, descr=<Guard0x7fb733cc4a40>) [p0, p1, p2]
+457: p29 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+468: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x7fb733cc4a88>) [p0, p1, p2]
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand2)')
+477: i31 = int_is_zero(i27)
+480: guard_true(i31, descr=<Guard0x7fb733cc4ad0>) [p0, p1, p2]
debug_merge_point(0, 0, '(begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0)))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))')
debug_merge_point(0, 0, '(- n 1)')
+486: p32 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+490: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x7fb733cb0620>) [p0, p1, p2]
+508: i34 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+512: i36 = int_sub_ovf(i34, 1)
+516: guard_no_overflow(descr=<Guard0x7fb733cc4b18>) [p0, p1, p2]
debug_merge_point(0, 0, '(CellRef(P) AppRand0)')
+522: p37 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+526: p38 = new_with_vtable(descr=<SizeDescr 24>)
+570: setfield_gc(p38, p10, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+574: setfield_gc(p38, p13, descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+589: setfield_gc(p12, p38, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+593: p39 = getfield_gc_r(p37, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+598: guard_nonnull_class(p39, 16478072, descr=<Guard0x7fb733cb0680>) [p19, p39, i36, p21, None, None]
+617: p42 = getfield_gc_r(p39, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+628: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x7fb733cc4b60>) [p19, p39, i36, p21, None, None]
+637: p44 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+637: i46 = int_gt(i36, 1)
+641: guard_true(i46, descr=<Guard0x7fb733cc4ba8>) [p19, p39, i36, p21, None, None]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
+647: p47 = getfield_gc_r(p39, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+651: p48 = getfield_gc_r(p39, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+655: p49 = getfield_gc_r(p39, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+659: guard_class(p49, 16505296, descr=<Guard0x7fb733cc4bf0>) [p19, p39, i36, p21, None, None]
debug_merge_point(0, 0, '(- n 1)')
+672: i52 = int_sub(i36, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+676: p53 = new_with_vtable(descr=<SizeDescr 24>)
+687: p54 = new_with_vtable(descr=<SizeDescr 48>)
+698: setfield_gc(p54, p49, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+702: setfield_gc(p54, ConstPtr(ptr55), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+706: setfield_gc(p54, p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+710: p56 = new_with_vtable(descr=<SizeDescr 16>)
+721: setfield_gc(p56, i36, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+725: setfield_gc(p54, p56, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+729: setfield_gc(p54, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+733: setfield_gc(p53, p54, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+737: setfield_gc(p53, i52, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+741: jump(p53, p19, descr=TargetToken(77302144))
+768: --end of the loop--
[3e4c0825bcfe316] jit-log-opt-bridge}
[3e4c08278922255] {jit-backend
[3e4c082789ad45b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6e00 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C0202000048FF0425301341044983F9017207418139B8B500000F85000000004D8B69104C8B2504FFFFFF4D39E50F85000000004D8B67084983FC01720841813C24900F00000F85000000004983FA010F8F000000004D8B67204C8B2DF6FEFFFF4D39EC0F85000000004D8B6F104D8B671841817D00700B01000F85000000004D8B45184D8B68084983FD01720841817D00B09700000F850000000041813C24480E00000F85000000004D8B6C24204C8B05C9FEFFFF4D39C50F85000000004D8B4424104D8B6C2418418138B01E01000F85000000004D8B600841813C24D0C800000F8500000000498B7C2410488B35ABFEFFFF4839F70F8500000000498B70104883C6010F800000000041817D00307A01000F85000000004D8B45084983F8017207418138900F00000F85000000004883FE320F8F00000000498B7C24184885FF0F84000000004889FB4883EF010F8000000000488B0C25F091F900488D5178483B14251092F9000F87BE00000048891425F091F90048C701F01B0100488D512048C702509A000048895A08488B1D4BFEFFFF48895A10488D5A1848C703101100004C8D732849C706B01E01004D89660849897610488B352AFEFFFF488971084C8943084C8973104C896B184889791048895118488B1513FEFFFF4889532048898D3001000048899D3801000049BB90620F32B77F000041FFE36666662E0F1F84000000000048C7442408FFFFFF0049BBA86C0F32B77F00004C895D204D8D9B4856FFFF41FFD3E9D8FDFFFF49BBE86D0F32B77F00004C895D204D8D9B085DFFFF41FFD3E92DFFFFFFFF35D7FCFFFF49BBB86C0F32B77F000041534D8D9B4853FFFF41FFE3FF35CBFCFFFF49BBC86C0F32B77F000041534D8D9B3853FFFF41FFE3FF35B7FCFFFF49BBD86C0F32B77F000041534D8D9B2853FFFF41FFE3FF35A3FCFFFF49BBE86C0F32B77F000041534D8D9B1853FFFF41FFE3FF358FFCFFFF49BBF86C0F32B77F000041534D8D9B0853FFFF41FFE3FF3583FCFFFF49BB086D0F32B77F000041534D8D9BF852FFFF41FFE3FF356FFCFFFF49BB186D0F32B77F000041534D8D9BE852FFFF41FFE3FF355BFCFFFF49BB286D0F32B77F000041534D8D9BD852FFFF41FFE3FF3547FCFFFF49BB386D0F32B77F000041534D8D9BC852FFFF41FFE3FF353BFCFFFF49BB486D0F32B77F000041534D8D9BB852FFFF41FFE3FF3527FCFFFF49BB586D0F32B77F000041534D8D9BA852FFFF41FFE3FF3513FCFFFF49BB686D0F32B77F000041534D8D9B9852FFFF41FFE3FF3507FCFFFF49BB786D0F32B77F000041534D8D9B8852FFFF41FFE3FF35F3FBFFFF49BB886D0F32B77F000041534D8D9B7852FFFF41FFE3FF35DFFBFFFF49BB986D0F32B77F000041534D8D9B6852FFFF41FFE3FF35CBFBFFFF49BBA86D0F32B77F000041534D8D9B5852FFFF41FFE3FF35B7FBFFFF49BBB86D0F32B77F000041534D8D9B4852FFFF41FFE3FF35A3FBFFFF49BBC86D0F32B77F000041534D8D9B3852FFFF41FFE3FF358FFBFFFF49BBD86D0F32B77F000041534D8D9B2852FFFF41FFE3
[3e4c082789b6e7e] jit-backend-dump}
[3e4c082789d6479] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6ed4 +0  1F000000
[3e4c082789d7a84] jit-backend-dump}
[3e4c082789dbdd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f70e5 +0  1F000000
[3e4c082789dcd2a] jit-backend-dump}
[3e4c082789e04ee] {jit-backend-addr
bridge out of Guard 0x4a382a8 has address 0x7fb7320f6ed0 to 0x7fb7320f70e0
       gc table: 0x7fb7320f6e00
    jump target: 0x7fb7320f6ed0
         resops: 0x7fb7320f6ede
       failures: 0x7fb7320f70e0
            end: 0x7fb7320f7337
[3e4c082789e3161] jit-backend-addr}
[3e4c082789e6acd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6ef5 +0  2A020000
[3e4c082789e795b] jit-backend-dump}
[3e4c082789eae4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6f09 +0  32020000
[3e4c082789ebb81] jit-backend-dump}
[3e4c082789eee86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6f21 +0  36020000
[3e4c082789efb92] jit-backend-dump}
[3e4c082789f3551] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6f2b +0  64020000
[3e4c082789f4288] jit-backend-dump}
[3e4c082789f752c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6f3f +0  6C020000
[3e4c082789f8199] jit-backend-dump}
[3e4c082789fb25f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6f55 +0  72020000
[3e4c082789fbe9b] jit-backend-dump}
[3e4c082789fefc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6f71 +0  72020000
[3e4c082789ffc40] jit-backend-dump}
[3e4c08278a02d77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6f7f +0  80020000
[3e4c08278a039a4] jit-backend-dump}
[3e4c08278a0a4a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6f94 +0  87020000
[3e4c08278a0b2b7] jit-backend-dump}
[3e4c08278a0e6ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6fab +0  8C020000
[3e4c08278a0f389] jit-backend-dump}
[3e4c08278a12614] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6fbd +0  96020000
[3e4c08278a132a6] jit-backend-dump}
[3e4c08278a16546] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6fd2 +0  9D020000
[3e4c08278a171fd] jit-backend-dump}
[3e4c08278a1a4f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6fe0 +0  AB020000
[3e4c08278a1b166] jit-backend-dump}
[3e4c08278a1e2ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f6fee +0  B9020000
[3e4c08278a1ef5d] jit-backend-dump}
[3e4c08278a22063] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f7005 +0  BE020000
[3e4c08278a22cc7] jit-backend-dump}
[3e4c08278a25e60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f700f +0  D0020000
[3e4c08278a26aef] jit-backend-dump}
[3e4c08278a29cb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f701d +0  DE020000
[3e4c08278a2a905] jit-backend-dump}
[3e4c08278a2da86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f702a +0  ED020000
[3e4c08278a2e6d7] jit-backend-dump}
[3e4c08278a31c12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f147a +0  525A0000
[3e4c08278a328b0] jit-backend-dump}
[3e4c08278a37061] jit-backend}
[3e4c08278a3ab8a] {jit-log-opt-bridge
# bridge out of Guard 0x4a382a8 with 76 ops
[p0, p1, i2, p3]
+230: guard_nonnull_class(p1, 16478072, descr=<Guard0x4242080>) [p0, p1, i2, p3]
+249: p5 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+260: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x480a020>) [p0, p1, i2, p3]
+269: p7 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
+269: p8 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+273: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x42420e0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(> n 1)')
+293: guard_not_invalidated(descr=<Guard0x480a068>) [p0, p1, i2, p3]
+293: i11 = int_gt(i2, 1)
+297: guard_false(i11, descr=<Guard0x480a0b0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(void)')
+303: p12 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+314: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x480a0f8>) [p0, p1, i2, p3]
+323: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+327: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, 'CellRef(perms)')
+331: guard_class(p14, 16500016, descr=<Guard0x480a140>) [p0, p1, i2, p3]
+345: p17 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+349: p18 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+353: guard_nonnull_class(p18, 16470384, descr=<Guard0x4242140>) [p0, p1, i2, p3]
+373: guard_class(p15, 16435208, descr=<Guard0x480a188>) [p0, p1, i2, p3]
+387: p21 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+399: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x480a1d0>) [p0, p1, i2, p3]
+408: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+413: p24 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4996 (add1 i4998)) from (void)')
+418: guard_class(p23, 16504944, descr=<Guard0x480a218>) [p0, p1, i2, p3]
+431: p26 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+435: guard_class(p26, 16482960, descr=<Guard0x480a260>) [p0, p1, i2, p3]
+449: p28 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+461: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x480a2a8>) [p0, p1, i2, p3]
+470: i30 = getfield_gc_i(p23, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+474: i32 = int_add_ovf(i30, 1)
+478: guard_no_overflow(descr=<Guard0x480a2f0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([if2 (> i4998 perm9-iters)]) (if if2 (begin (void) (void)) (let ([AppRand12 (one..n n4979)]) (permutations AppRand12) (doloop4996 (add1 i4998))))) from (doloop4996 (add1 i4998))')
+484: guard_class(p24, 16528368, descr=<Guard0x480a338>) [p0, p1, i2, p3]
+498: p34 = getfield_gc_r(p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+502: guard_nonnull_class(p34, ConstClass(ForwardLink), descr=<Guard0x42421a0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(> i4998 perm9-iters)')
+521: i37 = int_gt(i32, 50)
+525: guard_false(i37, descr=<Guard0x480a380>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if if2 (begin (void) (void)) (let ([AppRand12 (one..n n4979)]) (permutations AppRand12) (doloop4996 (add1 i4998))))')
debug_merge_point(0, 0, '(let ([AppRand12 (one..n n4979)]) (permutations AppRand12) (doloop4996 (add1 i4998)))')
debug_merge_point(0, 0, '(one..n n4979)')
+531: i38 = getfield_gc_i(p26, descr=<FieldS pycket.small_list.W_Closure1AsEnvSize1Fixed.inst_vals_fixed_0 24 pure>)
+536: p39 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([doloop4966 (lambda (n4968 p) (if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))))]) (doloop4966 n4964 '()))')
debug_merge_point(0, 0, '(lambda (n4968 p) (if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))))')
debug_merge_point(0, 0, '(doloop4966 n4964 '())')
debug_merge_point(0, 0, '(if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))) from (doloop4966 n4964 '())')
+536: i40 = int_is_zero(i38)
+539: guard_false(i40, descr=<Guard0x480a3c8>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))')
debug_merge_point(0, 0, '(- n4968 1)')
+545: i42 = int_sub_ovf(i38, 1)
+552: guard_no_overflow(descr=<Guard0x480a410>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(doloop4966 AppRand9 (cons n4968 p))')
debug_merge_point(0, 0, '(if (zero? n4968) (begin (void) p) (let ([AppRand9 (- n4968 1)]) (doloop4966 AppRand9 (cons n4968 p)))) from (doloop4966 AppRand9 (cons n4968 p))')
+558: p43 = new_with_vtable(descr=<SizeDescr 32>)
+599: p44 = new_with_vtable(descr=<SizeDescr 24>)
+610: setfield_gc(p44, i38, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+621: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+625: p46 = new_with_vtable(descr=<SizeDescr 40>)
+636: p47 = new_with_vtable(descr=<SizeDescr 24>)
+647: setfield_gc(p47, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+651: setfield_gc(p47, i32, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+662: setfield_gc(p43, ConstPtr(ptr48), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+666: setfield_gc(p46, p34, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+670: setfield_gc(p46, p47, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+674: setfield_gc(p46, p24, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+678: setfield_gc(p43, i42, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+682: setfield_gc(p43, p44, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+693: setfield_gc(p46, ConstPtr(ptr49), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+697: jump(p43, p46, descr=TargetToken(76824688))
+736: --end of the loop--
[3e4c08278a8c170] jit-log-opt-bridge}
[3e4c083b1ae528a] {jit-backend
[3e4c083b1ba80fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f
[3e4c083b1bb23e1] jit-backend-dump}
[3e4c083b1bc9535] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f74f4 +0  23000000
[3e4c083b1bca942] jit-backend-dump}
[3e4c083b1bceac5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f7815 +0  23000000
[3e4c083b1bcfa5a] jit-backend-dump}
[3e4c083b1bd2fb7] {jit-backend-addr
bridge out of Guard 0x491c740 has address 0x7fb7320f74f0 to 0x7fb7320f7810
       gc table: 0x7fb7320f7430
    jump target: 0x7fb7320f74f0
         resops: 0x7fb7320f74fe
       failures: 0x7fb7320f7810
            end: 0x7fb7320f79bf
[3e4c083b1bd5844] jit-backend-addr}
[3e4c083b1bd8f66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f750b +0  44030000
[3e4c083b1bd9d95] jit-backend-dump}
[3e4c083b1bdd0d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f7529 +0  42030000
[3e4c083b1bdde0b] jit-backend-dump}
[3e4c083b1be1267] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f753d +0  66030000
[3e4c083b1be1f20] jit-backend-dump}
[3e4c083b1be5146] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f7552 +0  6D030000
[3e4c083b1be5d6d] jit-backend-dump}
[3e4c083b1be8ec0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f756a +0  71030000
[3e4c083b1be9ae1] jit-backend-dump}
[3e4c083b1becc8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f7578 +0  7F030000
[3e4c083b1bed8b9] jit-backend-dump}
[3e4c083b1bf0a77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f7589 +0  8A030000
[3e4c083b1bf169b] jit-backend-dump}
[3e4c083b1bf4871] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f759c +0  93030000
[3e4c083b1bf548c] jit-backend-dump}
[3e4c083b1bf85f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f75b3 +0  98030000
[3e4c083b1bf9205] jit-backend-dump}
[3e4c083b1bfc330] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f75ca +0  9D030000
[3e4c083b1bfcf7c] jit-backend-dump}
[3e4c083b1c000db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f75e8 +0  9B030000
[3e4c083b1c00d02] jit-backend-dump}
[3e4c083b1c03e76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f75f6 +0  A9030000
[3e4c083b1c04aa0] jit-backend-dump}
[3e4c083b1c08009] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fb7320f636d +0  7F110000
[3e4c083b1c08c98] jit-backend-dump}
[3e4c083b1c0d7cc] jit-backend}
[3e4c083b1c1145d] {jit-log-opt-bridge
# bridge out of Guard 0x491c740 with 112 ops
[p0, i1, p2, i3, p4]
+214: i5 = int_is_zero(i1)
+217: guard_true(i5, descr=<Guard0x7fb733cb0740>) [p0, i1, p2, i3, p4]
debug_merge_point(0, 0, '(begin (void) p)')
+223: p6 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+234: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x7fb733cb07a0>) [p0, i1, p2, i3, p4]
debug_merge_point(0, 0, '(void)')
+253: guard_not_invalidated(descr=<Guard0x7fb733cc4c38>) [p0, i1, p2, i3, p4]
debug_merge_point(0, 0, 'p')
+253: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+264: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x7fb733cc4c80>) [p0, i1, p2, i3, p4]
+273: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+277: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+281: guard_class(p11, 16528368, descr=<Guard0x7fb733cc4cc8>) [p0, i1, p2, i3, p4]
+294: p13 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+298: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x7fb733cb0800>) [p0, i1, p2, i3, p4]
debug_merge_point(0, 0, '(permutations AppRand12) from (void)')
+318: guard_class(p10, 16504944, descr=<Guard0x7fb733cc4d10>) [p0, i1, p2, i3, p4]
+332: p16 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+336: guard_class(p16, 16482960, descr=<Guard0x7fb733cc4d58>) [p0, i1, p2, i3, p4]
+349: p18 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([x4876 x][perms (list x)]) (letrec ([(P) (lambda (n) (let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))))] [(F) (lambda (n4898) (let ([AppRand4 (CellRef(list-tail) CellRef(x4876) n4898)]) (let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0))) (set! perms (cons CellRef(x4876) CellRef(perms))))] [(revloop) (lambda (x4911 n4913 y) (if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))))] [(list-tail) (lambda (x4924 n4926) (if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))))]) (CellRef(P) (length CellRef(x4876))) CellRef(perms)))')
debug_merge_point(0, 0, 'x')
debug_merge_point(0, 0, '(list x)')
debug_merge_point(0, 0, '(letrec ([(P) (lambda (n) (let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))))] [(F) (lambda (n4898) (let ([AppRand4 (CellRef(list-tail) CellRef(x4876) n4898)]) (let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0))) (set! perms (cons CellRef(x4876) CellRef(perms))))] [(revloop) (lambda (x4911 n4913 y) (if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))))] [(list-tail) (lambda (x4924 n4926) (if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))))]) (CellRef(P) (length CellRef(x4876))) CellRef(perms))')
debug_merge_point(0, 0, '(lambda (n) (let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))))')
debug_merge_point(0, 0, '(lambda (n4898) (let ([AppRand4 (CellRef(list-tail) CellRef(x4876) n4898)]) (let ([SetBang0 (CellRef(revloop) CellRef(x4876) n4898 AppRand4)]) (set! x4876 SetBang0))) (set! perms (cons CellRef(x4876) CellRef(perms))))')
debug_merge_point(0, 0, '(lambda (x4911 n4913 y) (if (zero? n4913) y (let ([AppRand5 (- n4913 1)]) (CellRef(revloop) (cdr x4911) AppRand5 (cons (car x4911) y)))))')
debug_merge_point(0, 0, '(lambda (x4924 n4926) (if (zero? n4926) x4924 (let ([AppRand6 (- n4926 1)]) (CellRef(list-tail) (cdr x4924) AppRand6))))')
debug_merge_point(0, 0, '(CellRef(P) (length CellRef(x4876)))')
+349: guard_nonnull_class(p2, 16471056, descr=<Guard0x7fb733cb0860>) [p0, i1, p2, i3, p4]
+368: p20 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+372: guard_nonnull_class(p20, 16471056, descr=<Guard0x7fb733cb08c0>) [p0, i1, p2, i3, p4]
+391: p22 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+395: guard_nonnull_class(p22, 16471056, descr=<Guard0x7fb733cb0920>) [p0, i1, p2, i3, p4]
+414: i25 = call_i(ConstClass(elidable_length), p22, descr=<Calli 8 r EF=4>)
+429: guard_no_exception(descr=<Guard0x7fb733cb0980>) [i25, p11, p10, p13, p2, i3, None]
+444: i28 = int_add(i25, 3)
debug_merge_point(0, 0, '(let ([if0 (> n 1)]) (if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void)))')
debug_merge_point(0, 0, '(> n 1)')
+448: i30 = int_gt(i28, 1)
+452: guard_true(i30, descr=<Guard0x7fb733cc4da0>) [i25, p11, p10, p13, p2, i3, None]
debug_merge_point(0, 0, '(if if0 (let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3)) (void))')
debug_merge_point(0, 0, '(let ([doloop (lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))][AppRand3 (- n 1)]) (doloop AppRand3))')
debug_merge_point(0, 0, '(lambda (j) (if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))))')
debug_merge_point(0, 0, '(- n 1)')
+458: i32 = int_sub(i28, 1)
debug_merge_point(0, 0, '(doloop AppRand3)')
debug_merge_point(0, 0, '(if (zero? j) (begin (void) (let ([AppRand0 (- n 1)]) (CellRef(P) AppRand0))) (let ([AppRand1 (- n 1)]) (CellRef(P) AppRand1) (CellRef(F) n) (let ([AppRand2 (- j 1)]) (doloop AppRand2)))) from (doloop AppRand3)')
+462: p33 = new_with_vtable(descr=<SizeDescr 24>)
+506: p34 = new_with_vtable(descr=<SizeDescr 48>)
+524: setfield_gc(p34, ConstPtr(ptr35), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+535: setfield_gc(p34, ConstPtr(ptr36), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+539: p37 = new_with_vtable(descr=<SizeDescr 16>)
+550: p38 = new_with_vtable(descr=<SizeDescr 56>)
+561: setfield_gc(p38, ConstPtr(ptr39), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+572: setfield_gc(p38, ConstPtr(ptr40), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+576: p41 = new_with_vtable(descr=<SizeDescr 16>)
+587: p42 = new_with_vtable(descr=<SizeDescr 32>)
+605: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+623: setfield_gc(p42, ConstPtr(ptr44), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+627: setfield_gc(p42, p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+631: setfield_gc(p41, p42, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+635: setfield_gc(p38, p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+639: p45 = new_with_vtable(descr=<SizeDescr 16>)
+650: p46 = new_with_vtable(descr=<SizeDescr 24>)
+661: setfield_gc(p46, i3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+665: setfield_gc(p46, p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+669: setfield_gc(p45, p46, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+673: setfield_gc(p38, p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+677: p47 = new_with_vtable(descr=<SizeDescr 16>)
+688: p48 = new_with_vtable(descr=<SizeDescr 24>)
+699: setfield_gc(p48, p46, descr=<FieldP pycket.values.W_WrappedCons.inst__car 8 pure>)
+710: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.values.W_WrappedCons.inst__cdr 16 pure>)
+714: setfield_gc(p47, p48, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+718: setfield_gc(p38, p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+722: p50 = new_with_vtable(descr=<SizeDescr 16>)
+733: p51 = new_with_vtable(descr=<SizeDescr 32>)
+744: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+755: setfield_gc(p51, ConstPtr(ptr53), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+759: setfield_gc(p51, p50, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize1.inst__vals_0 24 pure>)
+763: setfield_gc(p50, p51, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+767: setfield_gc(p38, p50, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+771: setfield_gc(p37, p38, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+775: setfield_gc(p34, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+779: p54 = new_with_vtable(descr=<SizeDescr 16>)
+790: setfield_gc(p54, i28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+794: setfield_gc(p34, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+798: p55 = new_with_vtable(descr=<SizeDescr 16>)
+809: p56 = new_with_vtable(descr=<SizeDescr 40>)
+820: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+831: setfield_gc(p56, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+835: setfield_gc(p56, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_0 24 pure>)
+839: setfield_gc(p56, p55, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize2.inst__vals_1 32 pure>)
+843: setfield_gc(p55, p56, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+847: setfield_gc(p34, p55, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+851: p59 = new_with_vtable(descr=<SizeDescr 40>)
+862: p60 = new_with_vtable(descr=<SizeDescr 32>)
+873: setfield_gc(p60, ConstPtr(ptr61), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+877: setfield_gc(p60, p45, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+881: setfield_gc(p60, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+885: p62 = new_with_vtable(descr=<SizeDescr 40>)
+896: setfield_gc(p62, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+900: setfield_gc(p62, p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+904: setfield_gc(p62, p11, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+915: setfield_gc(p62, ConstPtr(ptr63), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+919: setfield_gc(p59, p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+923: setfield_gc(p59, p60, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+927: setfield_gc(p59, p62, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+931: setfield_gc(p33, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+942: setfield_gc(p33, i32, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+960: setfield_gc(p59, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+964: jump(p33, p59, descr=TargetToken(77302144))
+992: --end of the loop--
[3e4c083b1c7c93d] jit-log-opt-bridge}
[3e4c094bc05357c] {jit-summary
Tracing:      	23	0.019855
Backend:      	23	0.008916
TOTAL:      		44.510446
ops:             	20502
recorded ops:    	3705
  calls:         	1
guards:          	1069
opt ops:         	1844
opt guards:      	593
opt guards shared:	415
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	62
nvholes:         	2
nvreused:        	1
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	9
Total # of bridges:	14
Freed # of loops:	0
Freed # of bridges:	0
[3e4c094bc0697e0] jit-summary}
[3e4c094bc075353] {jit-backend-counts
entry 1:139
TargetToken(76829168):4095
TargetToken(76829248):493195766
entry 2:112
bridge 77432184:34
entry 4:104
TargetToken(77301984):8036
TargetToken(77302064):493191688
entry 5:68
bridge 76662400:181435344
bridge 76667104:181435345
entry 8:121
entry 9:242
TargetToken(77302144):39605465
TargetToken(77302224):90719379
entry 10:81
bridge 77824392:51110904
bridge 77826912:60479875
bridge 77824608:39604415
bridge 77826696:30239920
bridge 76667200:3983
bridge 76662496:3956
bridge 77070872:3949
bridge 77436504:3947
entry 19:150
entry 20:150
TargetToken(76824688):483
TargetToken(76824768):3857
bridge 140424824767432:342
bridge 77824680:340
bridge 76662592:316
[3e4c094bc07d32a] jit-backend-counts}
