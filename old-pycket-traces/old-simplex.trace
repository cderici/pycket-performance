[3e4c0a45cbb9909] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c0a45cbcf721] jit-backend-dump}
[3e4c0a45cc0956d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb0b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c0a45cc0c6d8] jit-backend-dump}
[3e4c0a45cc1a3fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c0a45cc1c357] jit-backend-dump}
[3e4c0a45cc23567] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb1f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c0a45cc25040] jit-backend-dump}
[3e4c0a45cc2e99f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c0a45cc30343] jit-backend-dump}
[3e4c0a45cc3a812] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb2f
[3e4c0a45cc3edfb] jit-backend-dump}
[3e4c0a45cc444b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb510 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c0a45cc46956] jit-backend-dump}
[3e4c0a45cc4b71c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb
[3e4c0a45cc4db0d] jit-backend-dump}
[3e4c0a45cceddde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb
[3e4c0a45ccf0d91] jit-backend-dump}
[3e4c0a45ccf79f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceb8f
[3e4c0a45ccfa5d6] jit-backend-dump}
[3e4c0a45ccff518] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceba70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c0a45cd01154] jit-backend-dump}
[3e4c0a45cd14e74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cebaf
[3e4c0a45cd1819e] jit-backend-dump}
[3e4c0a45cd20364] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cebce
[3e4c0a45cd23506] jit-backend-dump}
[3e4c0a45cd2b6c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cebee
[3e4c0a45cd2eb9c] jit-backend-dump}
[3e4c0a45cd34f4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cec0d
[3e4c0a45cd37f88] jit-backend-dump}
[3e4c0a45cd420a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cec2c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70B2CE136E7F000041FFD3E99CFFFFFF
[3e4c0a45cd43f64] jit-backend-dump}
[3e4c0a45cd49593] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cec380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70B2CE136E7F000041FFD3E9BCFFFFFF
[3e4c0a45cd4ad29] jit-backend-dump}
[3e4c0a45cd500e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cec
[3e4c0a45cd52afa] jit-backend-dump}
[3e4c0a45cd57ea4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cec5c
[3e4c0a45cd5a4e7] jit-backend-dump}
[3e4c0a45cd6ed70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cec750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB70BACE136E7F000041FFE3
[3e4c0a45cd708dc] jit-backend-dump}
[3e4c0a45d63aaf9] {jit-backend
[3e4c0a45d7a8e73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecb
[3e4c0a45d7bd477] jit-backend-dump}
[3e4c0a45d7cd6ff] {jit-backend-addr
Loop 1 ((let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)) has address 0x7f6e13cecd4d to 0x7f6e13ced130 (bootstrap 0x7f6e13ceccc0)
       gc table: 0x7f6e13cecb30
       function: 0x7f6e13ceccc0
         resops: 0x7f6e13cecd4d
       failures: 0x7f6e13ced130
            end: 0x7f6e13ced682
[3e4c0a45d7d2160] jit-backend-addr}
[3e4c0a45d7d72da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecd77 +0  C7030000
[3e4c0a45d7d8584] jit-backend-dump}
[3e4c0a45d7db9bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecd8d +0  CD030000
[3e4c0a45d7dc821] jit-backend-dump}
[3e4c0a45d7dfa53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecda0 +0  F2030000
[3e4c0a45d7e07b5] jit-backend-dump}
[3e4c0a45d7e38fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecdb0 +0  FE030000
[3e4c0a45d7e460e] jit-backend-dump}
[3e4c0a45d7e75eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecdc4 +0  06040000
[3e4c0a45d7e82d0] jit-backend-dump}
[3e4c0a45d7eb1c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecdda +0  0C040000
[3e4c0a45d7ebe91] jit-backend-dump}
[3e4c0a45d7eed89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecde8 +0  1A040000
[3e4c0a45d7efa49] jit-backend-dump}
[3e4c0a45d7f28ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecdf5 +0  29040000
[3e4c0a45d7f35a8] jit-backend-dump}
[3e4c0a45d7f64d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cece10 +0  2A040000
[3e4c0a45d7f71a7] jit-backend-dump}
[3e4c0a45d7fa074] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cece1d +0  39040000
[3e4c0a45d7fad34] jit-backend-dump}
[3e4c0a45d7fdbc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cece35 +0  3D040000
[3e4c0a45d7fe887] jit-backend-dump}
[3e4c0a45d801726] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cece4c +0  42040000
[3e4c0a45d8023e9] jit-backend-dump}
[3e4c0a45d8052d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cece5a +0  50040000
[3e4c0a45d805fc0] jit-backend-dump}
[3e4c0a45d808ea9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cece67 +0  5F040000
[3e4c0a45d809b6f] jit-backend-dump}
[3e4c0a45d80ca9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cece7e +0  64040000
[3e4c0a45d80d75b] jit-backend-dump}
[3e4c0a45d810684] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cece9a +0  64040000
[3e4c0a45d81134d] jit-backend-dump}
[3e4c0a45d814214] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecea4 +0  76040000
[3e4c0a45d814ee3] jit-backend-dump}
[3e4c0a45d817d9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceceb8 +0  7E040000
[3e4c0a45d818a61] jit-backend-dump}
[3e4c0a45d81b93e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecec8 +0  8A040000
[3e4c0a45d81c60d] jit-backend-dump}
[3e4c0a45d81f4cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecefb +0  73040000
[3e4c0a45d82018e] jit-backend-dump}
[3e4c0a45d8230e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecf10 +0  7A040000
[3e4c0a45d823de5] jit-backend-dump}
[3e4c0a45d826cb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecf19 +0  8D040000
[3e4c0a45d82797e] jit-backend-dump}
[3e4c0a45d82a842] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecf2a +0  98040000
[3e4c0a45d82b508] jit-backend-dump}
[3e4c0a45d82e3f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecf3e +0  A0040000
[3e4c0a45d82f0c0] jit-backend-dump}
[3e4c0a45d831f54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecf4f +0  AB040000
[3e4c0a45d832c16] jit-backend-dump}
[3e4c0a45d835af6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecf6c +0  AA040000
[3e4c0a45d8367b9] jit-backend-dump}
[3e4c0a45d839649] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecf76 +0  BC040000
[3e4c0a45d83a368] jit-backend-dump}
[3e4c0a45d83d2ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecf83 +0  CB040000
[3e4c0a45d83df94] jit-backend-dump}
[3e4c0a45d840e21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecf93 +0  D7040000
[3e4c0a45d841ae7] jit-backend-dump}
[3e4c0a45d8449ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecfb7 +0  CF040000
[3e4c0a45d8456ab] jit-backend-dump}
[3e4c0a45d8485b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecfc8 +0  DA040000
[3e4c0a45d849291] jit-backend-dump}
[3e4c0a45d84c1e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cecfd5 +0  E9040000
[3e4c0a45d84cea5] jit-backend-dump}
[3e4c0a45d84fded] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced021 +0  D5040000
[3e4c0a45d850a9a] jit-backend-dump}
[3e4c0a45d853a5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced02a +0  E8040000
[3e4c0a45d854747] jit-backend-dump}
[3e4c0a45d85768f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced03b +0  F3040000
[3e4c0a45d85834b] jit-backend-dump}
[3e4c0a45d85b284] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced048 +0  02050000
[3e4c0a45d85bf47] jit-backend-dump}
[3e4c0a45d85ee8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced058 +0  0E050000
[3e4c0a45d85fb4b] jit-backend-dump}
[3e4c0a45d862a37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced073 +0  0F050000
[3e4c0a45d8636f1] jit-backend-dump}
[3e4c0a45d866670] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced080 +0  1E050000
[3e4c0a45d86731d] jit-backend-dump}
[3e4c0a45d86a22b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced090 +0  2A050000
[3e4c0a45d86aeea] jit-backend-dump}
[3e4c0a45d86de3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced0ab +0  2B050000
[3e4c0a45d86eaf8] jit-backend-dump}
[3e4c0a45d8719d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced0b8 +0  3A050000
[3e4c0a45d87268b] jit-backend-dump}
[3e4c0a45d8755cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced0c8 +0  46050000
[3e4c0a45d8762b8] jit-backend-dump}
[3e4c0a45d8791fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced0ec +0  3E050000
[3e4c0a45d879eb9] jit-backend-dump}
[3e4c0a45d87cdca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced0fc +0  4A050000
[3e4c0a45d87da7a] jit-backend-dump}
[3e4c0a45d8809ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced109 +0  59050000
[3e4c0a45d8816a0] jit-backend-dump}
[3e4c0a45d8851c2] jit-backend}
[3e4c0a45d888e8e] {jit-log-opt-loop
# Loop 1 ((let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)) : loop with 202 ops
[p0, p1]
+549: label(p0, p1, descr=TargetToken(47968032))
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+568: guard_class(p1, 16435208, descr=<Guard0x2dae740>) [p0, p1]
+587: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+591: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2dae7a0>) [p0, p1]
debug_merge_point(0, 0, '(+ n 1)')
+609: guard_not_invalidated(descr=<Guard0x2e54d10>) [p0, p1]
+609: guard_class(p0, 16504944, descr=<Guard0x2e54d58>) [p0, p1]
+628: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+632: guard_class(p6, 16479200, descr=<Guard0x2e54da0>) [p0, p1]
+644: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+655: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x2e54de8>) [p0, p1]
+664: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+668: guard_nonnull_class(p10, ConstClass(W_Fixnum), descr=<Guard0x2dae800>) [p0, p1]
+686: i12 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+690: i14 = int_add_ovf(i12, 1)
+694: guard_no_overflow(descr=<Guard0x2e54e30>) [p0, p1]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+700: i15 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+704: i16 = int_eq(i15, i14)
+707: guard_false(i16, descr=<Guard0x2e54e78>) [p0, p1]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+713: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+717: p18 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+721: guard_nonnull_class(p18, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2dae860>) [p0, p1]
+740: i20 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+744: i21 = int_eq(i15, i20)
+747: guard_false(i21, descr=<Guard0x2e54ec0>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
+753: p22 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+757: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x2dae8c0>) [p0, p1]
+777: p24 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+781: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x2dae920>) [p0, p1]
+800: p26 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+800: i27 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+804: i29 = int_ge(i27, 0)
+808: guard_true(i29, descr=<Guard0x2e54f08>) [p0, p1]
+814: i30 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+818: i31 = int_lt(i27, i30)
+821: guard_true(i31, descr=<Guard0x2e54f50>) [p0, p1]
+827: p32 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+838: guard_class(p32, 16622984, descr=<Guard0x2e54f98>) [p0, p1]
+850: p34 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+854: p35 = getarrayitem_gc_r(p34, i27, descr=<ArrayP 8>)
+866: guard_class(p35, ConstClass(W_Vector), descr=<Guard0x2e54fe0>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+878: i38 = int_ge(i15, 0)
+882: guard_true(i38, descr=<Guard0x2e55028>) [p0, p1]
+888: i39 = getfield_gc_i(p35, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+899: i40 = int_lt(i15, i39)
+902: guard_true(i40, descr=<Guard0x2e55070>) [p0, p1]
+908: p41 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+912: guard_class(p41, 16612728, descr=<Guard0x2e550b8>) [p0, p1]
+924: p43 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+928: f44 = getarrayitem_gc_f(p43, i15, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
+935: p45 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+946: p46 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+957: guard_nonnull_class(p46, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2dae980>) [p0, p1]
+975: i48 = getfield_gc_i(p46, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+986: i50 = int_ge(i48, 0)
+990: guard_true(i50, descr=<Guard0x2e55100>) [p0, p1]
+996: i51 = int_lt(i48, i30)
+999: guard_true(i51, descr=<Guard0x2e55148>) [p0, p1]
+1005: p52 = getarrayitem_gc_r(p34, i48, descr=<ArrayP 8>)
+1010: guard_class(p52, ConstClass(W_Vector), descr=<Guard0x2e55190>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1022: i54 = getfield_gc_i(p52, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1033: i55 = int_lt(i15, i54)
+1036: guard_true(i55, descr=<Guard0x2e551d8>) [p0, p1]
+1042: p56 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1046: guard_class(p56, 16612728, descr=<Guard0x2e55220>) [p0, p1]
+1059: p58 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1063: f59 = getarrayitem_gc_f(p58, i15, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1070: p60 = getarrayitem_gc_r(p34, i27, descr=<ArrayP 8>)
+1075: guard_class(p60, ConstClass(W_Vector), descr=<Guard0x2e55268>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1088: i63 = int_ge(i20, 0)
+1092: guard_true(i63, descr=<Guard0x2e552b0>) [p0, p1]
+1098: i64 = getfield_gc_i(p60, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1102: i65 = int_lt(i20, i64)
+1105: guard_true(i65, descr=<Guard0x2e552f8>) [p0, p1]
+1111: p66 = getfield_gc_r(p60, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1115: guard_class(p66, 16612728, descr=<Guard0x2e55340>) [p0, p1]
+1127: p68 = getfield_gc_r(p60, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1131: f69 = getarrayitem_gc_f(p68, i20, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+1138: f70 = float_mul(f59, f69)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+1142: f71 = float_sub(f44, f70)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1146: p72 = getarrayitem_gc_r(p34, i27, descr=<ArrayP 8>)
+1151: guard_class(p72, ConstClass(W_Vector), descr=<Guard0x2e55388>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1163: p74 = getfield_gc_r(p72, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1167: guard_class(p74, 16612728, descr=<Guard0x2e553d0>) [p0, p1]
+1180: i76 = getfield_gc_i(p72, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1184: i77 = int_lt(i15, i76)
+1187: guard_true(i77, descr=<Guard0x2e55418>) [p0, p1]
+1193: p78 = getfield_gc_r(p72, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1197: setarrayitem_gc(p78, i15, f71, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
+1204: i80 = int_add(i15, 1)
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+1208: label(p6, i80, p1, p3, p10, i14, p17, p18, i20, p24, p22, p34, i27, p45, p46, i48, descr=TargetToken(47968112))
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
debug_merge_point(0, 0, '(+ n 1)')
+1256: guard_not_invalidated(descr=<Guard0x2dae9e0>) [i80, p6, p1, p3]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+1256: i81 = int_eq(i80, i14)
+1263: guard_false(i81, descr=<Guard0x2e55460>) [i80, p6, p1, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+1269: i82 = int_eq(i80, i20)
+1272: guard_false(i82, descr=<Guard0x2e554a8>) [i80, p6, p1, p3]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1278: p83 = getarrayitem_gc_r(p34, i27, descr=<ArrayP 8>)
+1283: guard_class(p83, ConstClass(W_Vector), descr=<Guard0x2e554f0>) [i80, p6, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1295: i85 = getfield_gc_i(p83, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1299: i86 = int_lt(i80, i85)
+1302: guard_true(i86, descr=<Guard0x2e55538>) [i80, p6, p1, p3]
+1308: p87 = getfield_gc_r(p83, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1312: guard_class(p87, 16612728, descr=<Guard0x2e55580>) [i80, p6, p1, p3]
+1324: p89 = getfield_gc_r(p83, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1328: f90 = getarrayitem_gc_f(p89, i80, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1334: p91 = getarrayitem_gc_r(p34, i48, descr=<ArrayP 8>)
+1339: guard_class(p91, ConstClass(W_Vector), descr=<Guard0x2e555c8>) [i80, p6, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1351: i93 = getfield_gc_i(p91, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1355: i94 = int_lt(i80, i93)
+1358: guard_true(i94, descr=<Guard0x2e55610>) [i80, p6, p1, p3]
+1364: p95 = getfield_gc_r(p91, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1368: guard_class(p95, 16612728, descr=<Guard0x2e55658>) [i80, p6, p1, p3]
+1380: p97 = getfield_gc_r(p91, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1384: f98 = getarrayitem_gc_f(p97, i80, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1390: p99 = getarrayitem_gc_r(p34, i27, descr=<ArrayP 8>)
+1395: guard_class(p99, ConstClass(W_Vector), descr=<Guard0x2e556a0>) [i80, p6, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1407: i101 = getfield_gc_i(p99, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1411: i102 = int_lt(i20, i101)
+1414: guard_true(i102, descr=<Guard0x2e556e8>) [i80, p6, p1, p3]
+1420: p103 = getfield_gc_r(p99, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1424: guard_class(p103, 16612728, descr=<Guard0x2e55730>) [i80, p6, p1, p3]
+1436: p105 = getfield_gc_r(p99, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1440: f106 = getarrayitem_gc_f(p105, i20, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+1447: f107 = float_mul(f98, f106)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+1451: f108 = float_sub(f90, f107)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1455: p109 = getarrayitem_gc_r(p34, i27, descr=<ArrayP 8>)
+1460: guard_class(p109, ConstClass(W_Vector), descr=<Guard0x2e55778>) [i80, p6, p1, p3]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1472: p111 = getfield_gc_r(p109, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1476: guard_class(p111, 16612728, descr=<Guard0x2e557c0>) [i80, p6, p1, p3]
+1488: i113 = getfield_gc_i(p109, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1492: i114 = int_lt(i80, i113)
+1495: guard_true(i114, descr=<Guard0x2e55808>) [i80, p6, p1, p3]
+1501: p115 = getfield_gc_r(p109, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1505: setarrayitem_gc(p115, i80, f108, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
+1511: i117 = int_add(i80, 1)
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+1515: i118 = arraylen_gc(p34, descr=<ArrayP 8>)
+1515: jump(p6, i117, p1, p3, p10, i14, p17, p18, i20, p24, p22, p34, i27, p45, p46, i48, descr=TargetToken(47968112))
+1536: --end of the loop--
[3e4c0a45d95e57b] jit-log-opt-loop}
[3e4c0a45e1ed27f] {jit-backend
[3e4c0a45e2c472a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedac
[3e4c0a45e2d7be7] jit-backend-dump}
[3e4c0a45e2e2833] {jit-backend-addr
Loop 2 ((matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)) has address 0x7f6e13cedd6d to 0x7f6e13cee280 (bootstrap 0x7f6e13cedce0)
       gc table: 0x7f6e13cedac0
       function: 0x7f6e13cedce0
         resops: 0x7f6e13cedd6d
       failures: 0x7f6e13cee280
            end: 0x7f6e13cee9ae
[3e4c0a45e2e58b0] jit-backend-addr}
[3e4c0a45e2e9ec4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedd84 +0  26050000
[3e4c0a45e2eb1ee] jit-backend-dump}
[3e4c0a45e2ee6e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedd94 +0  32050000
[3e4c0a45e2ef527] jit-backend-dump}
[3e4c0a45e2f26df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedda8 +0  3A050000
[3e4c0a45e2f344a] jit-backend-dump}
[3e4c0a45e2f6575] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceddbe +0  40050000
[3e4c0a45e2f72ac] jit-backend-dump}
[3e4c0a45e2fa577] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceddd8 +0  42050000
[3e4c0a45e2fb240] jit-backend-dump}
[3e4c0a45e2fe3b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceddf3 +0  43050000
[3e4c0a45e2ff093] jit-backend-dump}
[3e4c0a45e3020c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cede0a +0  48050000
[3e4c0a45e302dc3] jit-backend-dump}
[3e4c0a45e305eab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cede14 +0  5A050000
[3e4c0a45e306b7a] jit-backend-dump}
[3e4c0a45e309baa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cede21 +0  69050000
[3e4c0a45e30a873] jit-backend-dump}
[3e4c0a45e30d8e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cede32 +0  74050000
[3e4c0a45e30e5c8] jit-backend-dump}
[3e4c0a45e3115e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cede47 +0  7B050000
[3e4c0a45e312284] jit-backend-dump}
[3e4c0a45e315316] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cede51 +0  8D050000
[3e4c0a45e315fd9] jit-backend-dump}
[3e4c0a45e319065] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cede5e +0  9C050000
[3e4c0a45e319d09] jit-backend-dump}
[3e4c0a45e31ce34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cede6e +0  A8050000
[3e4c0a45e31db09] jit-backend-dump}
[3e4c0a45e320b74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cede8c +0  A6050000
[3e4c0a45e32181e] jit-backend-dump}
[3e4c0a45e32493d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedea5 +0  A9050000
[3e4c0a45e3255f3] jit-backend-dump}
[3e4c0a45e32869e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedebb +0  AF050000
[3e4c0a45e32934e] jit-backend-dump}
[3e4c0a45e32c3b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedec7 +0  BF050000
[3e4c0a45e32d088] jit-backend-dump}
[3e4c0a45e330188] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceded7 +0  CB050000
[3e4c0a45e330e2f] jit-backend-dump}
[3e4c0a45e333f02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedee4 +0  DA050000
[3e4c0a45e334be6] jit-backend-dump}
[3e4c0a45e337c44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedefb +0  DF050000
[3e4c0a45e338910] jit-backend-dump}
[3e4c0a45e33b9ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedf12 +0  E4050000
[3e4c0a45e33c69c] jit-backend-dump}
[3e4c0a45e33f6e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedf2c +0  E6050000
[3e4c0a45e34039f] jit-backend-dump}
[3e4c0a45e343409] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedf3e +0  F0050000
[3e4c0a45e3440c0] jit-backend-dump}
[3e4c0a45e3470ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedf4b +0  FF050000
[3e4c0a45e347d94] jit-backend-dump}
[3e4c0a45e34aeb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedf5c +0  0A060000
[3e4c0a45e34bb60] jit-backend-dump}
[3e4c0a45e34eb66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedf72 +0  10060000
[3e4c0a45e34f813] jit-backend-dump}
[3e4c0a45e3528e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedf7c +0  22060000
[3e4c0a45e3535be] jit-backend-dump}
[3e4c0a45e3565cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedf89 +0  31060000
[3e4c0a45e357274] jit-backend-dump}
[3e4c0a45e35a389] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedf9b +0  3B060000
[3e4c0a45e35b040] jit-backend-dump}
[3e4c0a45e35e011] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedfc3 +0  2F060000
[3e4c0a45e35ecc5] jit-backend-dump}
[3e4c0a45e361d66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedfd3 +0  3B060000
[3e4c0a45e362a26] jit-backend-dump}
[3e4c0a45e365a4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedfdd +0  4D060000
[3e4c0a45e3666ee] jit-backend-dump}
[3e4c0a45e36977d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cedfea +0  5C060000
[3e4c0a45e36a45f] jit-backend-dump}
[3e4c0a45e36d43c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee009 +0  59060000
[3e4c0a45e36e0da] jit-backend-dump}
[3e4c0a45e3711b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee01d +0  61060000
[3e4c0a45e371e73] jit-backend-dump}
[3e4c0a45e374e56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee02d +0  6D060000
[3e4c0a45e375b47] jit-backend-dump}
[3e4c0a45e378c9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee043 +0  73060000
[3e4c0a45e379988] jit-backend-dump}
[3e4c0a45e37c978] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee051 +0  81060000
[3e4c0a45e37d61c] jit-backend-dump}
[3e4c0a45e3806ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee05d +0  91060000
[3e4c0a45e38137a] jit-backend-dump}
[3e4c0a45e38434b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee06a +0  A0060000
[3e4c0a45e384ff3] jit-backend-dump}
[3e4c0a45e3880f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee074 +0  B2060000
[3e4c0a45e388db6] jit-backend-dump}
[3e4c0a45e38bdd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee08a +0  B8060000
[3e4c0a45e38ca78] jit-backend-dump}
[3e4c0a45e38fb87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee098 +0  C6060000
[3e4c0a45e39086f] jit-backend-dump}
[3e4c0a45e393846] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee0a5 +0  D5060000
[3e4c0a45e3944ee] jit-backend-dump}
[3e4c0a45e3975cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee0c1 +0  D5060000
[3e4c0a45e39828c] jit-backend-dump}
[3e4c0a45e39b321] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee0d8 +0  DA060000
[3e4c0a45e39bfbc] jit-backend-dump}
[3e4c0a45e39f08c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee0e6 +0  E8060000
[3e4c0a45e39fd3c] jit-backend-dump}
[3e4c0a45e3a2d48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee0f9 +0  F1060000
[3e4c0a45e3a39e9] jit-backend-dump}
[3e4c0a45e3aa2da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee110 +0  F6060000
[3e4c0a45e3ab11c] jit-backend-dump}
[3e4c0a45e3ae53d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee128 +0  FA060000
[3e4c0a45e3af225] jit-backend-dump}
[3e4c0a45e3b2277] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee136 +0  08070000
[3e4c0a45e3b2fb1] jit-backend-dump}
[3e4c0a45e3b6153] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee149 +0  11070000
[3e4c0a45e3b6e56] jit-backend-dump}
[3e4c0a45e3b9f10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee157 +0  1F070000
[3e4c0a45e3bac16] jit-backend-dump}
[3e4c0a45e3bdcca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee160 +0  32070000
[3e4c0a45e3be9c7] jit-backend-dump}
[3e4c0a45e3c1a34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee17d +0  31070000
[3e4c0a45e3c2744] jit-backend-dump}
[3e4c0a45e3c57dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee18a +0  40070000
[3e4c0a45e3c64df] jit-backend-dump}
[3e4c0a45e3c956b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee196 +0  50070000
[3e4c0a45e3ca265] jit-backend-dump}
[3e4c0a45e3cd346] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee1aa +0  58070000
[3e4c0a45e3ce037] jit-backend-dump}
[3e4c0a45e3d1116] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee1cc +0  52070000
[3e4c0a45e3d1e19] jit-backend-dump}
[3e4c0a45e3d4ee2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee1e2 +0  58070000
[3e4c0a45e3d5bd9] jit-backend-dump}
[3e4c0a45e3d8cfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee1f7 +0  5F070000
[3e4c0a45e3d9a01] jit-backend-dump}
[3e4c0a45e3dcb57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee20a +0  68070000
[3e4c0a45e3dd875] jit-backend-dump}
[3e4c0a45e3e09b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cee213 +0  7B070000
[3e4c0a45e3e16ed] jit-backend-dump}
[3e4c0a45e3e52a8] jit-backend}
[3e4c0a45e3e907a] {jit-log-opt-loop
# Loop 2 ((matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)) : entry bridge with 178 ops
[p0, p1]
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
+693: guard_not_invalidated(descr=<Guard0x2daec20>) [p1, p0]
+693: guard_class(p0, 16504944, descr=<Guard0x2e9b8e0>) [p1, p0]
+712: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+716: guard_class(p3, 16479200, descr=<Guard0x2e9b928>) [p1, p0]
+728: p5 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+739: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x2e9b970>) [p1, p0]
+748: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+752: guard_nonnull_class(p7, ConstClass(W_Vector), descr=<Guard0x2daec80>) [p1, p0]
+770: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+774: p10 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+778: guard_nonnull_class(p10, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2daece0>) [p1, p0]
+796: i12 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+800: i13 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+804: p14 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
+804: guard_class(p1, 16436632, descr=<Guard0x2e9b9b8>) [p1, p0]
+823: p16 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+827: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x2daed40>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+846: i19 = int_ge(i12, 0)
+850: guard_true(i19, descr=<Guard0x2e9ba00>) [p1, p0]
+856: i20 = getfield_gc_i(p7, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+860: i21 = int_lt(i12, i20)
+863: guard_true(i21, descr=<Guard0x2e9ba48>) [p1, p0]
+869: p22 = getfield_gc_r(p7, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+873: guard_class(p22, 16622984, descr=<Guard0x2e9ba90>) [p1, p0]
+886: p24 = getfield_gc_r(p7, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+890: p25 = getarrayitem_gc_r(p24, i12, descr=<ArrayP 8>)
+895: guard_class(p25, ConstClass(W_Vector), descr=<Guard0x2e9bad8>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+907: i28 = int_ge(i13, 0)
+911: guard_true(i28, descr=<Guard0x2e9bb20>) [p1, p0]
+917: i29 = getfield_gc_i(p25, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+921: i30 = int_lt(i13, i29)
+924: guard_true(i30, descr=<Guard0x2e9bb68>) [p1, p0]
+930: p31 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+934: guard_class(p31, 16612728, descr=<Guard0x2e9bbb0>) [p1, p0]
+946: p33 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+950: f34 = getarrayitem_gc_f(p33, i13, descr=<ArrayF 8>)
+956: p35 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+967: guard_value(p35, ConstPtr(ptr36), descr=<Guard0x2e9bbf8>) [p1, p0]
+976: f37 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.LetContSize1Flo.inst_vals_flo_0 40 pure>)
+981: p38 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+985: p39 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+989: guard_class(p39, 16435208, descr=<Guard0x2e9bc40>) [p1, p0]
+1001: p41 = getfield_gc_r(p39, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1005: guard_nonnull_class(p41, ConstClass(ForwardLink), descr=<Guard0x2daeda0>) [p1, p0]
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
+1023: guard_class(p38, 16504944, descr=<Guard0x2e9bc88>) [p1, p0]
+1035: p44 = getfield_gc_r(p38, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1039: guard_class(p44, 16479200, descr=<Guard0x2e9bcd0>) [p1, p0]
+1051: p46 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1055: guard_value(p46, ConstPtr(ptr47), descr=<Guard0x2e9bd18>) [p1, p0]
+1064: p48 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1068: guard_nonnull_class(p48, ConstClass(W_Vector), descr=<Guard0x2daee00>) [p1, p0]
+1087: p50 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1091: guard_nonnull_class(p50, ConstClass(W_Fixnum), descr=<Guard0x2daee60>) [p1, p0]
+1110: p52 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1114: p53 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1118: guard_nonnull_class(p53, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2daeec0>) [p1, p0]
+1136: i55 = getfield_gc_i(p53, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1140: p56 = getfield_gc_r(p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1140: i57 = getfield_gc_i(p50, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1144: i59 = int_ge(i57, 0)
+1148: guard_true(i59, descr=<Guard0x2e9bd60>) [p1, p0]
+1154: i60 = getfield_gc_i(p48, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1158: i61 = int_lt(i57, i60)
+1161: guard_true(i61, descr=<Guard0x2e9bda8>) [p1, p0]
+1167: p62 = getfield_gc_r(p48, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1171: guard_class(p62, 16622984, descr=<Guard0x2e9bdf0>) [p1, p0]
+1184: p64 = getfield_gc_r(p48, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1188: p65 = getarrayitem_gc_r(p64, i57, descr=<ArrayP 8>)
+1193: guard_class(p65, ConstClass(W_Vector), descr=<Guard0x2e9be38>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1206: i68 = int_ge(i55, 0)
+1210: guard_true(i68, descr=<Guard0x2e9be80>) [p1, p0]
+1216: i69 = getfield_gc_i(p65, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1220: i70 = int_lt(i55, i69)
+1223: guard_true(i70, descr=<Guard0x2e9bec8>) [p1, p0]
+1229: p71 = getfield_gc_r(p65, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1233: guard_class(p71, 16612728, descr=<Guard0x2e9bf10>) [p1, p0]
+1247: p73 = getfield_gc_r(p65, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1251: f74 = getarrayitem_gc_f(p73, i55, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+1258: f75 = float_mul(f34, f74)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+1262: f76 = float_sub(f37, f75)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
+1266: i77 = getfield_gc_i(p38, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1270: p78 = getarrayitem_gc_r(p64, i57, descr=<ArrayP 8>)
+1275: guard_class(p78, ConstClass(W_Vector), descr=<Guard0x2e9bf58>) [p1, p0]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1287: p80 = getfield_gc_r(p78, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1291: guard_class(p80, 16612728, descr=<Guard0x2e9bfa0>) [p1, p0]
+1303: i83 = int_ge(i77, 0)
+1307: guard_true(i83, descr=<Guard0x2ec6020>) [p1, p0]
+1313: i84 = getfield_gc_i(p78, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1317: i85 = int_lt(i77, i84)
+1320: guard_true(i85, descr=<Guard0x2ec6068>) [p1, p0]
+1326: p86 = getfield_gc_r(p78, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1330: setarrayitem_gc(p86, i77, f76, descr=<ArrayF 8>)
+1337: p87 = getfield_gc_r(p39, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1348: guard_value(p87, ConstPtr(ptr88), descr=<Guard0x2daef20>) [p87, p39]
+1357: p89 = getfield_gc_r(p39, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1361: p90 = getfield_gc_r(p39, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
+1365: guard_class(p89, 16504944, descr=<Guard0x2ec60b0>) [p87, p39]
+1377: p92 = getfield_gc_r(p89, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1381: guard_class(p90, 16435208, descr=<Guard0x2ec60f8>) [p87, p39]
+1393: p94 = getfield_gc_r(p90, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1397: guard_nonnull_class(p94, ConstClass(ForwardLink), descr=<Guard0x2daef80>) [p87, p39]
debug_merge_point(0, 0, '(+ kk 1)')
+1415: i96 = getfield_gc_i(p89, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1419: i98 = int_add_ovf(i96, 1)
+1423: guard_no_overflow(descr=<Guard0x2ec6140>) [p87, p39]
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
+1429: guard_class(p92, 16479200, descr=<Guard0x2ec6188>) [p87, p39]
+1441: p100 = getfield_gc_r(p92, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1445: guard_value(p100, ConstPtr(ptr101), descr=<Guard0x2ec61d0>) [p87, p39]
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+1454: i103 = int_ge(i98, 1)
+1458: guard_true(i103, descr=<Guard0x2daefe0>) [p90, i98, p92]
+1464: p104 = getfield_gc_r(p92, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1468: guard_nonnull_class(p104, ConstClass(W_Fixnum), descr=<Guard0x2daf040>) [p90, i98, p92]
+1486: i106 = getfield_gc_i(p104, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1490: i108 = int_add_ovf(i106, 1)
+1494: guard_no_overflow(descr=<Guard0x2daf0a0>) [p90, i98, p92]
+1500: p109 = getfield_gc_r(p92, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1504: guard_nonnull(p109, descr=<Guard0x2daf100>) [p90, i98, p92]
+1513: guard_subclass(p109, ConstClass(W_Cell), descr=<Guard0x2daf160>) [p90, i98, p92]
+1541: p111 = getfield_gc_r(p109, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1545: guard_nonnull_class(p111, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2daf1c0>) [p90, i98, p92]
+1564: i113 = getfield_gc_i(p111, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1568: i115 = int_ge(i113, 0)
+1572: guard_true(i115, descr=<Guard0x2daf220>) [p90, i98, p92]
+1578: i117 = int_le(i113, 9223372036854775806)
+1591: guard_true(i117, descr=<Guard0x2daf280>) [p90, i98, p92]
+1597: p118 = getfield_gc_r(p92, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1601: guard_nonnull_class(p118, ConstClass(W_Vector), descr=<Guard0x2daf2e0>) [p90, i98, p92]
+1620: p120 = getfield_gc_r(p92, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1624: guard_nonnull_class(p120, ConstClass(W_Fixnum), descr=<Guard0x2daf340>) [p90, i98, p92]
+1644: p122 = getfield_gc_r(p92, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1644: i123 = getfield_gc_i(p120, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1648: i125 = int_ge(i123, 0)
+1652: guard_true(i125, descr=<Guard0x2daf3a0>) [p90, i98, p92]
+1658: i127 = int_le(i123, 9223372036854775806)
+1671: guard_true(i127, descr=<Guard0x2daf400>) [p90, i98, p92]
+1677: i128 = getfield_gc_i(p118, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1681: i130 = int_ge(i128, 1)
+1685: guard_true(i130, descr=<Guard0x2daf460>) [p90, i98, p92]
+1691: i131 = int_lt(i123, i128)
+1694: guard_true(i131, descr=<Guard0x2daf4c0>) [p90, i98, p92]
+1700: p132 = getfield_gc_r(p118, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1711: guard_nonnull_class(p132, 16622984, descr=<Guard0x2daf520>) [p90, i98, p92]
+1729: p134 = getfield_gc_r(p118, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1733: guard_nonnull(p134, descr=<Guard0x2daf580>) [p90, i98, p92]
+1742: guard_gc_type(p134, 3592, descr=<Guard0x2daf5e0>) [p90, i98, p92]
+1754: i136 = arraylen_gc(p134, descr=<ArrayP 8>)
+1754: p137 = getfield_gc_r(p92, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1765: guard_nonnull(p137, descr=<Guard0x2daf640>) [p90, i98, p92]
+1774: guard_subclass(p137, ConstClass(W_Cell), descr=<Guard0x2daf6a0>) [p90, i98, p92]
+1808: p139 = getfield_gc_r(p137, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1812: guard_nonnull_class(p139, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2daf700>) [p90, i98, p92]
+1830: i141 = getfield_gc_i(p139, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1841: i143 = int_ge(i141, 0)
+1845: guard_true(i143, descr=<Guard0x2daf760>) [p90, i98, p92]
+1851: i145 = int_le(i141, 9223372036854775806)
+1864: guard_true(i145, descr=<Guard0x2daf7c0>) [p90, i98, p92]
+1870: i146 = int_lt(i141, i128)
+1873: guard_true(i146, descr=<Guard0x2daf820>) [p90, i98, p92]
+1879: jump(p92, i98, p90, p94, p104, i108, p109, p111, i113, p120, p118, p134, i123, p137, p139, i141, descr=TargetToken(47968112))
+1984: --end of the loop--
[3e4c0a45e479dd0] jit-log-opt-loop}
[3e4c0a45e79b977] {jit-backend
[3e4c0a45e81b58f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceeb80 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C6202000048FF0425E0DA2B024C8BBD480100004D8B77104C8B2D00FFFFFF4D39EE0F85000000004D8B6F204983FD01720841817D00601400000F85000000004D8B75084983C6010F80000000004C8BA5380100004D8B5424084983FA01720741813A900F00000F85000000004C39F20F84000000004D8B4F284D8B41084983F8017207418138F08900000F8500000000498B78084839FA0F85000000004889D64883C2010F80000000004883FA010F8C000000004883FF000F8C0000000049BBFEFFFFFFFFFFFF7F4C39DF0F8F00000000498B77384883FE017206813EF08C00000F8500000000498B5F184883FB017206813B601400000F8500000000488B43084883F8000F8C0000000049BBFEFFFFFFFFFFFF7F4C39D80F8F00000000488B4E084883F9010F8C000000004839C80F8D000000004C8B7E184983FF01720741813FC8EB02000F85000000004C8B7E104D85FF0F840000000041813F080E00000F85000000004C89AD300100004C8BAD480100004C89B5400100004D8B75304D85F60F8400000000458B264E8B2425C0B9FA004981EC2C0300004983FC010F83000000004D8B66084983FC01720841813C24F08900000F85000000004C8995500100004D8B5424084983FA000F8C0000000049BBFEFFFFFFFFFFFF7F4D39DA0F8F000000004939CA0F8D000000004C89AD480100004C8B9D400100004C899D580100004C898D600100004C8985680100004889B5700100004C89B5780100004C89A5800100004D89D14C8B9D500100004C899D400100004C8B9D300100004C899D500100004989FC48899D30010000504C89F8415F49BB10D0CE136E7F000041FFE30F1F400048C7442408FFFFFF0049BBB8E9CE136E7F00004C895D204D8D9B38C9FFFF41FFD3E978FDFFFFFF3584FCFFFF49BBC8E9CE136E7F000041534D8D9B38C6FFFF41FFE3FF3578FCFFFF49BBD8E9CE136E7F000041534D8D9B28C6FFFF41FFE3FF3564FCFFFF49BBE8E9CE136E7F000041534D8D9B18C6FFFF41FFE3FF3550FCFFFF49BBF8E9CE136E7F000041534D8D9B08C6FFFF41FFE3FF353CFCFFFF49BB08EACE136E7F000041534D8D9BF8C5FFFF41FFE3FF3528FCFFFF49BB18EACE136E7F000041534D8D9BE8C5FFFF41FFE3FF3514FCFFFF49BB28EACE136E7F000041534D8D9BD8C5FFFF41FFE3FF3500FCFFFF49BB38EACE136E7F000041534D8D9BC8C5FFFF41FFE3FF35ECFBFFFF49BB48EACE136E7F000041534D8D9BB8C5FFFF41FFE3FF35D8FBFFFF49BB58EACE136E7F000041534D8D9BA8C5FFFF41FFE3FF35C4FBFFFF49BB68EACE136E7F000041534D8D9B98C5FFFF41FFE3FF35B0FBFFFF49BB78EACE136E7F000041534D8D9B88C5FFFF41FFE3FF359CFBFFFF49BB88EACE136E7F000041534D8D9B78C5FFFF41FFE3FF3588FBFFFF49BB98EACE136E7F000041534D8D9B68C5FFFF41FFE3FF3574FBFFFF49BBA8EACE136E7F000041534D8D9B58C5FFFF41FFE3FF3560FBFFFF49BBB8EACE136E7F000041534D8D9B48C5FFFF41FFE3FF354CFBFFFF49BBC8EACE136E7F000041534D8D9B38C5FFFF41FFE3FF3538FBFFFF49BBD8EACE136E7F000041534D8D9B28C5FFFF41FFE3FF3524FBFFFF49BBE8EACE136E7F000041534D8D9B18C5FFFF41FFE3FF3510FBFFFF49BBF8EACE136E7F000041534D8D9B08C5FFFF41FFE3FF35FCFAFFFF49BB08EBCE136E7F000041534D8D9BF8C4FFFF41FFE3FF35E8FAFFFF49BB18EBCE136E7F000041534D8D9BE8C4FFFF41FFE3FF35D4FAFFFF49BB28EBCE136E7F000041534D8D9BD8C4FFFF41FFE3FF35C0FAFFFF49BB38EBCE136E7F000041534D8D9BC8C4FFFF41FFE3FF35ACFAFFFF49BB48EBCE136E7F000041534D8D9BB8C4FFFF41FFE3FF3598FAFFFF49BB58EBCE136E7F000041534D8D9BA8C4FFFF41FFE3FF3584FAFFFF49BB68EBCE136E7F000041534D8D9B98C4FFFF41FFE3
[3e4c0a45e82547d] jit-backend-dump}
[3e4c0a45e8301f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceec64 +0  27000000
[3e4c0a45e8315b2] jit-backend-dump}
[3e4c0a45e8352ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceeed5 +0  27000000
[3e4c0a45e836277] jit-backend-dump}
[3e4c0a45e8395ad] {jit-backend-addr
bridge out of Guard 0x2e554a8 has address 0x7f6e13ceec60 to 0x7f6e13ceeed0
       gc table: 0x7f6e13ceeb80
    jump target: 0x7f6e13ceec60
         resops: 0x7f6e13ceec6e
       failures: 0x7f6e13ceeed0
            end: 0x7f6e13cef1ea
[3e4c0a45e83bbec] jit-backend-addr}
[3e4c0a45e83f241] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceec8d +0  81020000
[3e4c0a45e84007c] jit-backend-dump}
[3e4c0a45e8434a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceeca5 +0  85020000
[3e4c0a45e84421e] jit-backend-dump}
[3e4c0a45e847410] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceecb3 +0  93020000
[3e4c0a45e848150] jit-backend-dump}
[3e4c0a45e84b190] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceecd2 +0  90020000
[3e4c0a45e84bec4] jit-backend-dump}
[3e4c0a45e84eef4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceecdb +0  A3020000
[3e4c0a45e84fbdb] jit-backend-dump}
[3e4c0a45e852b8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceecf6 +0  A4020000
[3e4c0a45e853888] jit-backend-dump}
[3e4c0a45e85681c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed03 +0  B3020000
[3e4c0a45e857522] jit-backend-dump}
[3e4c0a45e85a48f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed10 +0  C2020000
[3e4c0a45e85b18c] jit-backend-dump}
[3e4c0a45e85e126] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed1a +0  D4020000
[3e4c0a45e85ee42] jit-backend-dump}
[3e4c0a45e861da2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed24 +0  E6020000
[3e4c0a45e862ab4] jit-backend-dump}
[3e4c0a45e865a3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed37 +0  EF020000
[3e4c0a45e866730] jit-backend-dump}
[3e4c0a45e86975d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed4d +0  F5020000
[3e4c0a45e86a479] jit-backend-dump}
[3e4c0a45e86d3fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed63 +0  FB020000
[3e4c0a45e86e104] jit-backend-dump}
[3e4c0a45e8710ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed71 +0  09030000
[3e4c0a45e871deb] jit-backend-dump}
[3e4c0a45e874dea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed84 +0  12030000
[3e4c0a45e875adb] jit-backend-dump}
[3e4c0a45e878aaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed92 +0  20030000
[3e4c0a45e8797a6] jit-backend-dump}
[3e4c0a45e87c743] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceed9b +0  33030000
[3e4c0a45e87d465] jit-backend-dump}
[3e4c0a45e8803f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceedb2 +0  38030000
[3e4c0a45e8810f3] jit-backend-dump}
[3e4c0a45e88407e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceedbf +0  47030000
[3e4c0a45e884d75] jit-backend-dump}
[3e4c0a45e887ceb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceedcc +0  56030000
[3e4c0a45e8889db] jit-backend-dump}
[3e4c0a45e88b966] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceedee +0  50030000
[3e4c0a45e88c663] jit-backend-dump}
[3e4c0a45e88f5ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceee0a +0  50030000
[3e4c0a45e8902ae] jit-backend-dump}
[3e4c0a45e89321e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceee22 +0  54030000
[3e4c0a45e893f27] jit-backend-dump}
[3e4c0a45e896e96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceee38 +0  5A030000
[3e4c0a45e89b0c2] jit-backend-dump}
[3e4c0a45e89ec7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceee4b +0  63030000
[3e4c0a45e89f9fe] jit-backend-dump}
[3e4c0a45e8a2b78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ceee54 +0  76030000
[3e4c0a45e8a38bf] jit-backend-dump}
[3e4c0a45e8a8852] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced02a +0  321C0000
[3e4c0a45e8a9666] jit-backend-dump}
[3e4c0a45e8b082c] jit-backend}
[3e4c0a45e8b4528] {jit-log-opt-bridge
# bridge out of Guard 0x2e554a8 with 71 ops
[i0, p1, p2, p3]
+246: guard_not_invalidated(descr=<Guard0x2daf880>) [i0, p1, p2, p3]
+246: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+264: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x2ec6218>) [i0, p1, p2, p3]
+273: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+277: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x2daf8e0>) [i0, p1, p2, p3]
+297: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+301: i10 = int_add_ovf(i8, 1)
+305: guard_no_overflow(descr=<Guard0x2ec6260>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
+311: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+323: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x2daf940>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(= kk AppRand47)')
+342: i13 = int_eq(i0, i10)
+345: guard_false(i13, descr=<Guard0x2ec62a8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+351: p14 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+355: p15 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+359: guard_nonnull_class(p15, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2daf9a0>) [i0, p1, p2, p3]
+378: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+382: i18 = int_eq(i0, i17)
+385: guard_true(i18, descr=<Guard0x2ec62f0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (void)')
debug_merge_point(0, 0, '(+ kk 1)')
+391: i20 = int_add_ovf(i0, 1)
+398: guard_no_overflow(descr=<Guard0x2ec6338>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+404: i22 = int_ge(i20, 1)
+408: guard_true(i22, descr=<Guard0x2dafa00>) [p2, i20, None, p1, None, None]
+414: i25 = int_ge(i17, 0)
+418: guard_true(i25, descr=<Guard0x2dafa60>) [p2, i20, None, p1, None, None]
+424: i27 = int_le(i17, 9223372036854775806)
+437: guard_true(i27, descr=<Guard0x2dafac0>) [p2, i20, None, p1, None, None]
+443: p28 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+447: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x2dafb20>) [p2, i20, None, p1, None, None]
+465: p30 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+469: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x2dafb80>) [p2, i20, None, p1, None, None]
+487: p32 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+487: i33 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+491: i35 = int_ge(i33, 0)
+495: guard_true(i35, descr=<Guard0x2dafbe0>) [p2, i20, None, p1, None, None]
+501: i37 = int_le(i33, 9223372036854775806)
+514: guard_true(i37, descr=<Guard0x2dafc40>) [p2, i20, None, p1, None, None]
+520: i38 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+524: i40 = int_ge(i38, 1)
+528: guard_true(i40, descr=<Guard0x2dafca0>) [p2, i20, None, p1, None, None]
+534: i41 = int_lt(i33, i38)
+537: guard_true(i41, descr=<Guard0x2dafd00>) [p2, i20, None, p1, None, None]
+543: p42 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+547: guard_nonnull_class(p42, 16622984, descr=<Guard0x2dafd60>) [p2, i20, None, p1, None, None]
+566: p44 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+570: guard_nonnull(p44, descr=<Guard0x2dafdc0>) [p2, i20, None, p1, None, None]
+579: guard_gc_type(p44, 3592, descr=<Guard0x2dafe20>) [p2, i20, None, p1, None, None]
+592: i46 = arraylen_gc(p44, descr=<ArrayP 8>)
+592: p47 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+617: guard_nonnull(p47, descr=<Guard0x2dafe80>) [p2, i20, None, p1, None, None]
+626: guard_subclass(p47, ConstClass(W_Cell), descr=<Guard0x2dafee0>) [p2, i20, None, p1, None, None]
+654: p49 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+658: guard_nonnull_class(p49, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2daff40>) [p2, i20, None, p1, None, None]
+678: i51 = getfield_gc_i(p49, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+690: i53 = int_ge(i51, 0)
+694: guard_true(i53, descr=<Guard0x2daffa0>) [p2, i20, None, p1, None, None]
+700: i55 = int_le(i51, 9223372036854775806)
+713: guard_true(i55, descr=<Guard0x2eca020>) [p2, i20, None, p1, None, None]
+719: i56 = int_lt(i51, i38)
+722: guard_true(i56, descr=<Guard0x2eca080>) [p2, i20, None, p1, None, None]
+728: jump(p1, i20, p2, p11, p6, i10, p14, p15, i17, p30, p28, p44, i33, p47, p49, i51, descr=TargetToken(47968112))
+848: --end of the loop--
[3e4c0a45e8f8b18] jit-log-opt-bridge}
[3e4c0a45f0408fc] {jit-backend
[3e4c0a45f17bb81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef
[3e4c0a45f18dc46] jit-backend-dump}
[3e4c0a45f1995d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef774 +0  28000000
[3e4c0a45f19ab0b] jit-backend-dump}
[3e4c0a45f19ec0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefd75 +0  28000000
[3e4c0a45f19fb13] jit-backend-dump}
[3e4c0a45f1a2e43] {jit-backend-addr
bridge out of Guard 0x2e55460 has address 0x7f6e13cef770 to 0x7f6e13cefd70
       gc table: 0x7f6e13cef590
    jump target: 0x7f6e13cef770
         resops: 0x7f6e13cef77e
       failures: 0x7f6e13cefd70
            end: 0x7f6e13cf03b7
[3e4c0a45f1a546d] jit-backend-addr}
[3e4c0a45f1a8906] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef79d +0  2E060000
[3e4c0a45f1a9778] jit-backend-dump}
[3e4c0a45f1ac952] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef7b4 +0  33060000
[3e4c0a45f1ad698] jit-backend-dump}
[3e4c0a45f1b0740] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef7c2 +0  41060000
[3e4c0a45f1b145b] jit-backend-dump}
[3e4c0a45f1b455b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef7e0 +0  3F060000
[3e4c0a45f1b52c3] jit-backend-dump}
[3e4c0a45f1b8453] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef7e9 +0  52060000
[3e4c0a45f1b91a9] jit-backend-dump}
[3e4c0a45f1bc2f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef7fd +0  5A060000
[3e4c0a45f1bd027] jit-backend-dump}
[3e4c0a45f1c00ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef813 +0  60060000
[3e4c0a45f1c0e27] jit-backend-dump}
[3e4c0a45f1c3e76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef825 +0  6A060000
[3e4c0a45f1c4bad] jit-backend-dump}
[3e4c0a45f1c7c9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef83b +0  70060000
[3e4c0a45f1c89cc] jit-backend-dump}
[3e4c0a45f1cb991] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef84a +0  7D060000
[3e4c0a45f1cc6bf] jit-backend-dump}
[3e4c0a45f1cf6fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef857 +0  8C060000
[3e4c0a45f1d0426] jit-backend-dump}
[3e4c0a45f1d343b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef86b +0  94060000
[3e4c0a45f1d4327] jit-backend-dump}
[3e4c0a45f1d76cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef878 +0  A3060000
[3e4c0a45f1d83de] jit-backend-dump}
[3e4c0a45f1db4b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef888 +0  AF060000
[3e4c0a45f1dc1de] jit-backend-dump}
[3e4c0a45f1df29e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef8a0 +0  B3060000
[3e4c0a45f1dffd2] jit-backend-dump}
[3e4c0a45f1e3030] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef8af +0  C0060000
[3e4c0a45f1e3d2a] jit-backend-dump}
[3e4c0a45f1e6cf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef8b8 +0  D3060000
[3e4c0a45f1e79fb] jit-backend-dump}
[3e4c0a45f1eaa94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef8d4 +0  D3060000
[3e4c0a45f1eb781] jit-backend-dump}
[3e4c0a45f1ee7d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef8e2 +0  E1060000
[3e4c0a45f1ef4f5] jit-backend-dump}
[3e4c0a45f1f258a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef8f8 +0  E7060000
[3e4c0a45f1f3284] jit-backend-dump}
[3e4c0a45f1f6322] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef920 +0  DB060000
[3e4c0a45f1f7044] jit-backend-dump}
[3e4c0a45f1fa0e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef940 +0  D7060000
[3e4c0a45f1fade5] jit-backend-dump}
[3e4c0a45f1fddfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef954 +0  DF060000
[3e4c0a45f1feb0c] jit-backend-dump}
[3e4c0a45f201b58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef979 +0  D6060000
[3e4c0a45f202892] jit-backend-dump}
[3e4c0a45f2058bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef997 +0  D4060000
[3e4c0a45f2065e1] jit-backend-dump}
[3e4c0a45f2096d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef9a5 +0  E2060000
[3e4c0a45f20a3c9] jit-backend-dump}
[3e4c0a45f20d3f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef9b7 +0  EC060000
[3e4c0a45f20e118] jit-backend-dump}
[3e4c0a45f2111bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef9c8 +0  F7060000
[3e4c0a45f211eb9] jit-backend-dump}
[3e4c0a45f214eec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef9f1 +0  EA060000
[3e4c0a45f215bf2] jit-backend-dump}
[3e4c0a45f218c5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefa0d +0  EA060000
[3e4c0a45f2199a0] jit-backend-dump}
[3e4c0a45f21c9d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefa24 +0  EF060000
[3e4c0a45f21d6d6] jit-backend-dump}
[3e4c0a45f2207b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefa31 +0  FE060000
[3e4c0a45f2214bb] jit-backend-dump}
[3e4c0a45f22456c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefa4c +0  FF060000
[3e4c0a45f22527b] jit-backend-dump}
[3e4c0a45f228366] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefa5f +0  08070000
[3e4c0a45f22907b] jit-backend-dump}
[3e4c0a45f22c0c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefa6d +0  16070000
[3e4c0a45f22cde3] jit-backend-dump}
[3e4c0a45f22feac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefa77 +0  28070000
[3e4c0a45f230b87] jit-backend-dump}
[3e4c0a45f233c2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefa81 +0  3A070000
[3e4c0a45f234919] jit-backend-dump}
[3e4c0a45f2379c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefa99 +0  3E070000
[3e4c0a45f2386c4] jit-backend-dump}
[3e4c0a45f23b6e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefaa7 +0  4C070000
[3e4c0a45f23c3e8] jit-backend-dump}
[3e4c0a45f23f48c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefab7 +0  58070000
[3e4c0a45f240183] jit-backend-dump}
[3e4c0a45f24323d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefacf +0  5C070000
[3e4c0a45f243f37] jit-backend-dump}
[3e4c0a45f247006] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefadc +0  6B070000
[3e4c0a45f247d06] jit-backend-dump}
[3e4c0a45f24ad1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefaf4 +0  6F070000
[3e4c0a45f24ba33] jit-backend-dump}
[3e4c0a45f24eaad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefb02 +0  7D070000
[3e4c0a45f24f79b] jit-backend-dump}
[3e4c0a45f252906] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefb14 +0  87070000
[3e4c0a45f253600] jit-backend-dump}
[3e4c0a45f2567df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefb32 +0  85070000
[3e4c0a45f2574f8] jit-backend-dump}
[3e4c0a45f25a4fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefb44 +0  8F070000
[3e4c0a45f25b200] jit-backend-dump}
[3e4c0a45f25e289] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefb55 +0  9A070000
[3e4c0a45f25ef7d] jit-backend-dump}
[3e4c0a45f261fcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefb83 +0  88070000
[3e4c0a45f262d3d] jit-backend-dump}
[3e4c0a45f265d86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefb9b +0  8C070000
[3e4c0a45f266a9e] jit-backend-dump}
[3e4c0a45f269ac5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefba9 +0  9A070000
[3e4c0a45f26a7d8] jit-backend-dump}
[3e4c0a45f26d864] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefccb +0  94060000
[3e4c0a45f26e554] jit-backend-dump}
[3e4c0a45f2715a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefcde +0  9D060000
[3e4c0a45f27229a] jit-backend-dump}
[3e4c0a45f2752ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cefce7 +0  B0060000
[3e4c0a45f27601d] jit-backend-dump}
[3e4c0a45f279368] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13ced021 +0  4B270000
[3e4c0a45f27a093] jit-backend-dump}
[3e4c0a45f281415] jit-backend}
[3e4c0a45f285647] {jit-log-opt-bridge
# bridge out of Guard 0x2e55460 with 227 ops
[i0, p1, p2, p3]
+502: guard_not_invalidated(descr=<Guard0x2eca0e0>) [i0, p1, p2, p3]
+502: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+520: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x2ec6380>) [i0, p1, p2, p3]
+529: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+533: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x2eca140>) [i0, p1, p2, p3]
+552: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+556: i10 = int_add_ovf(i8, 1)
+560: guard_no_overflow(descr=<Guard0x2ec63c8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
+566: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+577: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x2eca1a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(= kk AppRand47)')
+596: i13 = int_eq(i0, i10)
+599: guard_true(i13, descr=<Guard0x2ec6410>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(void)')
+605: p14 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+616: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x2ec6458>) [i0, p1, p2, p3]
+625: p16 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+629: p17 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)')
+633: guard_class(p16, 16504944, descr=<Guard0x2ec64a0>) [i0, p1, p2, p3]
+647: p19 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+652: guard_class(p17, 16435208, descr=<Guard0x2ec64e8>) [i0, p1, p2, p3]
+665: p21 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+669: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x2eca200>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ ii 1)')
+687: i23 = getfield_gc_i(p16, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+692: i25 = int_add_ovf(i23, 1)
+696: guard_no_overflow(descr=<Guard0x2ec6530>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5167 AppRand55)')
+702: guard_class(p19, 16479952, descr=<Guard0x2ec6578>) [i0, p1, p2, p3]
+715: p27 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+726: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x2ec65c0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
debug_merge_point(0, 0, '(if one?5161 2 1)')
+735: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+739: guard_nonnull(p29, descr=<Guard0x2ec6608>) [i0, p1, p2, p3]
+755: i31 = instance_ptr_eq(p29, ConstPtr(ptr30))
+758: guard_true(i31, descr=<Guard0x2ec6650>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '1')
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+764: p32 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+768: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x2eca260>) [i0, p1, p2, p3]
+788: i34 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+793: i36 = int_add_ovf(i34, 1)
+797: guard_no_overflow(descr=<Guard0x2ec6698>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+803: i37 = int_eq(i25, i36)
+806: guard_false(i37, descr=<Guard0x2ec66e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+812: p38 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+816: p39 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+820: guard_nonnull_class(p39, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2eca2c0>) [i0, p1, p2, p3]
+840: i41 = getfield_gc_i(p39, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+845: i42 = int_eq(i25, i41)
+848: guard_false(i42, descr=<Guard0x2ec6728>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
+854: p43 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+858: guard_nonnull_class(p43, ConstClass(W_Vector), descr=<Guard0x2eca320>) [i0, p1, p2, p3]
+876: p45 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+887: p46 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+898: guard_nonnull_class(p46, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2eca380>) [i0, p1, p2, p3]
+916: i48 = getfield_gc_i(p46, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+927: p49 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+938: i51 = int_ge(i25, 0)
+942: guard_true(i51, descr=<Guard0x2ec6770>) [i0, p1, p2, p3]
+948: i52 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+959: i53 = int_lt(i25, i52)
+962: guard_true(i53, descr=<Guard0x2ec67b8>) [i0, p1, p2, p3]
+968: p54 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+993: guard_class(p54, 16622984, descr=<Guard0x2ec6800>) [i0, p1, p2, p3]
+1005: p56 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1009: p57 = getarrayitem_gc_r(p56, i25, descr=<ArrayP 8>)
+1021: guard_class(p57, ConstClass(W_Vector), descr=<Guard0x2ec6848>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1035: i60 = int_ge(i48, 0)
+1043: guard_true(i60, descr=<Guard0x2ec6890>) [i0, p1, p2, p3]
+1049: i61 = getfield_gc_i(p57, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1054: i62 = int_lt(i48, i61)
+1061: guard_true(i62, descr=<Guard0x2ec68d8>) [i0, p1, p2, p3]
+1067: p63 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1072: guard_class(p63, 16612728, descr=<Guard0x2ec6920>) [i0, p1, p2, p3]
+1084: p65 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1089: f66 = getarrayitem_gc_f(p65, i48, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+1103: p67 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+1107: guard_nonnull_class(p67, ConstClass(W_Flonum), descr=<Guard0x2eca3e0>) [i0, p1, p2, p3]
+1125: f69 = getfield_gc_f(p67, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1131: f70 = float_mul(f69, f66)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1136: p71 = getarrayitem_gc_r(p56, i25, descr=<ArrayP 8>)
+1141: guard_class(p71, ConstClass(W_Vector), descr=<Guard0x2ec6968>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1153: p73 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1164: guard_class(p73, 16612728, descr=<Guard0x2ec69b0>) [i0, p1, p2, p3]
+1176: i75 = getfield_gc_i(p71, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1180: i76 = int_lt(i48, i75)
+1183: guard_true(i76, descr=<Guard0x2ec69f8>) [i0, p1, p2, p3]
+1189: p77 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1193: setarrayitem_gc(p77, i48, f70, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
+1200: p78 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+1204: guard_class(p49, 16505296, descr=<Guard0x2eca440>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+1216: guard_nonnull_class(p78, ConstClass(W_Fixnum), descr=<Guard0x2eca4a0>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1235: i82 = getfield_gc_i(p78, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1239: i84 = int_add_ovf(i82, 1)
+1243: guard_no_overflow(descr=<Guard0x2ec6a40>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+1249: i86 = int_eq(0, i84)
+1253: guard_false(i86, descr=<Guard0x2ec6a88>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+1259: i87 = int_eq(0, i48)
+1263: guard_false(i87, descr=<Guard0x2ec6ad0>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1269: p88 = getarrayitem_gc_r(p56, i25, descr=<ArrayP 8>)
+1281: guard_class(p88, ConstClass(W_Vector), descr=<Guard0x2ec6b18>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1293: i90 = getfield_gc_i(p88, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1297: i91 = int_lt(0, i90)
+1301: guard_true(i91, descr=<Guard0x2ec6b60>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1307: p92 = getfield_gc_r(p88, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1311: guard_class(p92, 16612728, descr=<Guard0x2ec6ba8>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1323: p94 = getfield_gc_r(p88, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1327: f95 = getarrayitem_gc_f(p94, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1333: i97 = int_ge(i41, 0)
+1341: guard_true(i97, descr=<Guard0x2ec6bf0>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1347: i98 = int_lt(i41, i52)
+1354: guard_true(i98, descr=<Guard0x2ec6c38>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1360: p99 = getarrayitem_gc_r(p56, i41, descr=<ArrayP 8>)
+1372: guard_class(p99, ConstClass(W_Vector), descr=<Guard0x2ec6c80>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1384: i101 = getfield_gc_i(p99, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1388: i102 = int_lt(0, i101)
+1392: guard_true(i102, descr=<Guard0x2ec6cc8>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1398: p103 = getfield_gc_r(p99, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1402: guard_class(p103, 16612728, descr=<Guard0x2ec6d10>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1416: p105 = getfield_gc_r(p99, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1420: f106 = getarrayitem_gc_f(p105, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1427: p107 = getarrayitem_gc_r(p56, i25, descr=<ArrayP 8>)
+1432: guard_class(p107, ConstClass(W_Vector), descr=<Guard0x2ec6d58>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1446: i109 = getfield_gc_i(p107, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1451: i110 = int_lt(i48, i109)
+1458: guard_true(i110, descr=<Guard0x2ec6da0>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1464: p111 = getfield_gc_r(p107, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1469: guard_class(p111, 16612728, descr=<Guard0x2ec6de8>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1481: p113 = getfield_gc_r(p107, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1486: f114 = getarrayitem_gc_f(p113, i48, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+1500: f115 = float_mul(f106, f114)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+1505: f116 = float_sub(f95, f115)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1510: p117 = getarrayitem_gc_r(p56, i25, descr=<ArrayP 8>)
+1515: guard_class(p117, ConstClass(W_Vector), descr=<Guard0x2ec6e30>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1527: p119 = getfield_gc_r(p117, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1538: guard_class(p119, 16612728, descr=<Guard0x2ec6e78>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1551: i121 = getfield_gc_i(p117, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1555: i122 = int_lt(0, i121)
+1559: guard_true(i122, descr=<Guard0x2ec6ec0>) [p49, p43, p38, p45, p78, i25, p19, p17, p21, None, None, None, None]
+1565: p123 = getfield_gc_r(p117, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+1569: setarrayitem_gc(p123, 0, f116, descr=<ArrayF 8>)
+1575: p124 = new_with_vtable(descr=<SizeDescr 64>)
+1622: p125 = new_with_vtable(descr=<SizeDescr 16>)
+1633: setfield_gc(p125, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1637: p126 = new_with_vtable(descr=<SizeDescr 40>)
+1655: p127 = new_with_vtable(descr=<SizeDescr 24>)
+1666: setfield_gc(p127, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1670: setfield_gc(p127, i25, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1762: i128 = getfield_gc_i(p125, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1766: setfield_gc(p124, ConstPtr(ptr129), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1770: setfield_gc(p124, p78, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1781: setfield_gc(p126, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1792: setfield_gc(p126, ConstPtr(ptr130), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1796: setfield_gc(p126, p127, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1800: setfield_gc(p126, p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1804: setfield_gc(p124, p49, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1808: setfield_gc(p124, p125, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1812: setfield_gc(p124, p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1823: setfield_gc(p124, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1834: setfield_gc(p124, p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1845: i132 = int_ge(i128, 0)
+1849: guard_true(i132, descr=<Guard0x2eca500>) [p126, p124, None, None, None, None, None, None, None, None, None, None, None, None]
+1855: i134 = int_le(i128, 9223372036854775806)
+1868: guard_true(i134, descr=<Guard0x2eca560>) [p126, p124, None, None, None, None, None, None, None, None, None, None, None, None]
+1874: i135 = int_lt(i128, i52)
+1877: guard_true(i135, descr=<Guard0x2eca5c0>) [p126, p124, None, None, None, None, None, None, None, None, None, None, None, None]
+1883: i136 = arraylen_gc(p56, descr=<ArrayP 8>)
+1883: jump(p124, 1, p126, p21, p78, i84, p45, p46, i48, p125, p43, p56, i128, p38, p39, i41, descr=TargetToken(47968112))
+2016: --end of the loop--
[3e4c0a45f3507c0] jit-log-opt-bridge}
[3e4c0a45f67840b] {jit-backend
[3e4c0a45f6c067d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf04f
[3e4c0a45f6c8a6f] jit-backend-dump}
[3e4c0a45f6d339a] {jit-backend-addr
Loop 5 ((let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)) has address 0x7f6e13cf061d to 0x7f6e13cf0770 (bootstrap 0x7f6e13cf0590)
       gc table: 0x7f6e13cf04f0
       function: 0x7f6e13cf0590
         resops: 0x7f6e13cf061d
       failures: 0x7f6e13cf0770
            end: 0x7f6e13cf097a
[3e4c0a45f6d6a01] jit-backend-addr}
[3e4c0a45f6daddc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0647 +0  37010000
[3e4c0a45f6dc0dc] jit-backend-dump}
[3e4c0a45f6df71b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf065d +0  3D010000
[3e4c0a45f6e0601] jit-backend-dump}
[3e4c0a45f6e3c40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0670 +0  46010000
[3e4c0a45f6e4a1c] jit-backend-dump}
[3e4c0a45f6e7c8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0680 +0  52010000
[3e4c0a45f6e89fa] jit-backend-dump}
[3e4c0a45f6ebb28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0694 +0  5A010000
[3e4c0a45f6ec868] jit-backend-dump}
[3e4c0a45f6ef984] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf06a1 +0  69010000
[3e4c0a45f6f06c4] jit-backend-dump}
[3e4c0a45f6f3756] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf06b1 +0  75010000
[3e4c0a45f6f446f] jit-backend-dump}
[3e4c0a45f6f7698] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf06c7 +0  97010000
[3e4c0a45f6f83b0] jit-backend-dump}
[3e4c0a45f6fb476] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf06d5 +0  A5010000
[3e4c0a45f6fc1a7] jit-backend-dump}
[3e4c0a45f6ff1ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf06e2 +0  B4010000
[3e4c0a45f6fff05] jit-backend-dump}
[3e4c0a45f702ef5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf06fd +0  B5010000
[3e4c0a45f703bf8] jit-backend-dump}
[3e4c0a45f706beb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf070a +0  C4010000
[3e4c0a45f7078ee] jit-backend-dump}
[3e4c0a45f70a909] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0714 +0  D6010000
[3e4c0a45f70b60f] jit-backend-dump}
[3e4c0a45f70e710] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf074d +0  D5010000
[3e4c0a45f70f413] jit-backend-dump}
[3e4c0a45f71246b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0756 +0  E8010000
[3e4c0a45f713174] jit-backend-dump}
[3e4c0a45f716209] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0763 +0  F7010000
[3e4c0a45f716f09] jit-backend-dump}
[3e4c0a45f71aa96] jit-backend}
[3e4c0a45f71e64b] {jit-log-opt-loop
# Loop 5 ((let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)) : loop with 71 ops
[p0, p1]
+309: label(p0, p1, descr=TargetToken(48737040))
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+328: guard_class(p1, 16435208, descr=<Guard0x2eca620>) [p0, p1]
+347: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+351: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2eca680>) [p0, p1]
debug_merge_point(0, 0, '(if one?5161 2 1)')
+369: guard_class(p0, 16504944, descr=<Guard0x2ec6f08>) [p0, p1]
+388: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+392: guard_class(p6, 16479952, descr=<Guard0x2ec6f50>) [p0, p1]
+404: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+415: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x2ec6f98>) [p0, p1]
+424: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+428: guard_nonnull(p10, descr=<Guard0x2ec6fe0>) [p0, p1]
+444: i12 = instance_ptr_eq(p10, ConstPtr(ptr11))
+447: guard_false(i12, descr=<Guard0x2ec7028>) [p0, p1]
debug_merge_point(0, 0, '2')
+453: guard_not_invalidated(descr=<Guard0x2ec7070>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+453: p13 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+457: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x2eca6e0>) [p0, p1]
+475: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+479: i17 = int_add_ovf(i15, 2)
+483: guard_no_overflow(descr=<Guard0x2ec70b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+489: i18 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+493: i19 = int_eq(i18, i17)
+496: guard_false(i19, descr=<Guard0x2ec7100>) [p0, p1]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+502: p20 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+506: p21 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+510: guard_nonnull_class(p21, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2eca740>) [p0, p1]
+529: i23 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+533: i24 = int_eq(i18, i23)
+536: guard_true(i24, descr=<Guard0x2ec7148>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)')
debug_merge_point(0, 0, '(+ ii 1)')
+542: i26 = int_add_ovf(i18, 1)
+546: guard_no_overflow(descr=<Guard0x2ec7190>) [p0, p1]
debug_merge_point(0, 0, '(doloop5167 AppRand55)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+552: label(p6, i26, p1, p3, p13, i17, p20, p21, i23, descr=TargetToken(48737120))
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
debug_merge_point(0, 0, '(if one?5161 2 1)')
debug_merge_point(0, 0, '2')
+600: guard_not_invalidated(descr=<Guard0x2eca7a0>) [p1, p3, i26, p6]
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+600: i27 = int_eq(i26, i17)
+603: guard_false(i27, descr=<Guard0x2ec71d8>) [p1, p3, i26, p6]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+609: i28 = int_eq(i26, i23)
+612: guard_true(i28, descr=<Guard0x2ec7220>) [p1, p3, i26, p6]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)')
debug_merge_point(0, 0, '(+ ii 1)')
+618: i30 = int_add_ovf(i26, 1)
+625: guard_no_overflow(descr=<Guard0x2ec7268>) [p1, p3, i26, p6]
debug_merge_point(0, 0, '(doloop5167 AppRand55)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+631: jump(p6, i30, p1, p3, p13, i17, p20, p21, i23, descr=TargetToken(48737120))
+640: --end of the loop--
[3e4c0a45f75d08c] jit-log-opt-loop}
[3e4c0a45ffd839b] {jit-backend
[3e4c0a4600900a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0c
[3e4c0a46009d0db] jit-backend-dump}
[3e4c0a4600a7b5d] {jit-backend-addr
Loop 6 ((let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) from (vector-ref AppRand1 j)) has address 0x7f6e13cf0e6d to 0x7f6e13cf1220 (bootstrap 0x7f6e13cf0de0)
       gc table: 0x7f6e13cf0c70
       function: 0x7f6e13cf0de0
         resops: 0x7f6e13cf0e6d
       failures: 0x7f6e13cf1220
            end: 0x7f6e13cf16c0
[3e4c0a4600aa9e4] jit-backend-addr}
[3e4c0a4600aec1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0e97 +0  97030000
[3e4c0a4600aff74] jit-backend-dump}
[3e4c0a4600b332e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0eae +0  9C030000
[3e4c0a4600b412c] jit-backend-dump}
[3e4c0a4600b76b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0ec4 +0  A2030000
[3e4c0a4600b8480] jit-backend-dump}
[3e4c0a4600bb8e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0ee8 +0  B6030000
[3e4c0a4600bc5fa] jit-backend-dump}
[3e4c0a4600bf7b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0ef8 +0  BC030000
[3e4c0a4600c04dd] jit-backend-dump}
[3e4c0a4600c35a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0f0c +0  BE030000
[3e4c0a4600c42bc] jit-backend-dump}
[3e4c0a4600c746d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0f22 +0  BE030000
[3e4c0a4600c816a] jit-backend-dump}
[3e4c0a4600cb1d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0f40 +0  BC030000
[3e4c0a4600cbec5] jit-backend-dump}
[3e4c0a4600cf06e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0f4e +0  CA030000
[3e4c0a4600cfd80] jit-backend-dump}
[3e4c0a4600d2e74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0f5b +0  D9030000
[3e4c0a4600d3b71] jit-backend-dump}
[3e4c0a4600d6cc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0f6b +0  E5030000
[3e4c0a4600d79c1] jit-backend-dump}
[3e4c0a4600daaaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0f80 +0  EC030000
[3e4c0a4600db7af] jit-backend-dump}
[3e4c0a4600de90e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0f91 +0  F7030000
[3e4c0a4600df61d] jit-backend-dump}
[3e4c0a4600e2708] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0f9b +0  09040000
[3e4c0a4600e3405] jit-backend-dump}
[3e4c0a4600e655b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0fa8 +0  18040000
[3e4c0a4600e7273] jit-backend-dump}
[3e4c0a4600ea370] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0fc6 +0  16040000
[3e4c0a4600eb070] jit-backend-dump}
[3e4c0a4600ee1b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0fda +0  1E040000
[3e4c0a4600eeec6] jit-backend-dump}
[3e4c0a4600f1fb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0fea +0  2A040000
[3e4c0a4600f2cab] jit-backend-dump}
[3e4c0a4600f5ddf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1000 +0  30040000
[3e4c0a4600f6afe] jit-backend-dump}
[3e4c0a4600f9bc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf100e +0  3E040000
[3e4c0a4600fa90a] jit-backend-dump}
[3e4c0a4600fdab3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf101b +0  4D040000
[3e4c0a4600fe7ea] jit-backend-dump}
[3e4c0a46010192d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1028 +0  5C040000
[3e4c0a460102624] jit-backend-dump}
[3e4c0a460105786] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf103e +0  62040000
[3e4c0a4601064ab] jit-backend-dump}
[3e4c0a4601095d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf104c +0  70040000
[3e4c0a46010a2c4] jit-backend-dump}
[3e4c0a46010d438] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1055 +0  83040000
[3e4c0a46010e157] jit-backend-dump}
[3e4c0a460111263] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf106c +0  88040000
[3e4c0a460111f6f] jit-backend-dump}
[3e4c0a4601150e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1089 +0  87040000
[3e4c0a460115df9] jit-backend-dump}
[3e4c0a460118f06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1097 +0  95040000
[3e4c0a460119c00] jit-backend-dump}
[3e4c0a46011cd9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf10a4 +0  A4040000
[3e4c0a46011dab1] jit-backend-dump}
[3e4c0a460120bdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf10bb +0  A9040000
[3e4c0a4601218ca] jit-backend-dump}
[3e4c0a460124a35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf10d8 +0  A8040000
[3e4c0a460125751] jit-backend-dump}
[3e4c0a46012890c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf10e2 +0  BA040000
[3e4c0a46012961b] jit-backend-dump}
[3e4c0a46012c79c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf10f6 +0  C2040000
[3e4c0a46012d4ee] jit-backend-dump}
[3e4c0a46013060a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1106 +0  CE040000
[3e4c0a460131313] jit-backend-dump}
[3e4c0a460134576] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1168 +0  A4040000
[3e4c0a460135279] jit-backend-dump}
[3e4c0a460138425] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1179 +0  A9040000
[3e4c0a46013915c] jit-backend-dump}
[3e4c0a46013c265] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1186 +0  B2040000
[3e4c0a46013cf81] jit-backend-dump}
[3e4c0a4601400f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf11b0 +0  9E040000
[3e4c0a460140def] jit-backend-dump}
[3e4c0a460143e7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf11b9 +0  AB040000
[3e4c0a460144b63] jit-backend-dump}
[3e4c0a460147cf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf11cb +0  AF040000
[3e4c0a4601489f9] jit-backend-dump}
[3e4c0a46014bab0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf11d8 +0  B8040000
[3e4c0a46014c79d] jit-backend-dump}
[3e4c0a46014f8ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf11ea +0  BC040000
[3e4c0a4601505ed] jit-backend-dump}
[3e4c0a46015747c] jit-backend}
[3e4c0a46015bb8e] {jit-log-opt-loop
# Loop 6 ((let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) from (vector-ref AppRand1 j)) : loop with 156 ops
[p0, p1]
+517: label(p0, p1, descr=TargetToken(48737200))
+536: guard_class(p0, 16504592, descr=<Guard0x2eca800>) [p1, p0]
+555: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+559: guard_class(p1, 16435208, descr=<Guard0x2ec72b0>) [p1, p0]
+578: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+582: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x2eca860>) [p1, p0]
debug_merge_point(0, 0, '(- AppRand131)')
+600: guard_not_invalidated(descr=<Guard0x2ec72f8>) [p1, p0]
+600: f7 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+605: f9 = float_sub(0.000000, f7)
debug_merge_point(0, 0, '(matrix-set! a5002 i5450 CellRef(kp) AppRand132)')
+624: guard_class(p3, 16504944, descr=<Guard0x2ec7340>) [p1, p0]
+636: p11 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+640: guard_class(p11, 16478448, descr=<Guard0x2ec7388>) [p1, p0]
+652: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+663: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x2ec73d0>) [p1, p0]
+672: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+676: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x2eca8c0>) [p1, p0]
+694: i17 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+698: p18 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+702: p19 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+706: guard_nonnull_class(p19, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2eca920>) [p1, p0]
+724: i21 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+728: p22 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+728: i24 = int_ge(i17, 0)
+732: guard_true(i24, descr=<Guard0x2ec7418>) [p1, p0]
+738: i25 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+742: i26 = int_lt(i17, i25)
+745: guard_true(i26, descr=<Guard0x2ec7460>) [p1, p0]
+751: p27 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+755: guard_class(p27, 16622984, descr=<Guard0x2ec74a8>) [p1, p0]
+767: p29 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+771: p30 = getarrayitem_gc_r(p29, i17, descr=<ArrayP 8>)
+776: guard_class(p30, ConstClass(W_Vector), descr=<Guard0x2ec74f0>) [p1, p0]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+788: p32 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+792: guard_class(p32, 16612728, descr=<Guard0x2ec7538>) [p1, p0]
+805: i35 = int_ge(i21, 0)
+809: guard_true(i35, descr=<Guard0x2ec7580>) [p1, p0]
+815: i36 = getfield_gc_i(p30, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+819: i37 = int_lt(i21, i36)
+822: guard_true(i37, descr=<Guard0x2ec75c8>) [p1, p0]
+828: p38 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+832: setarrayitem_gc(p38, i21, f9, descr=<ArrayF 8>)
+838: p39 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+849: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x2eca980>) [p39, p1]
+858: p41 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+862: p42 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)) from (vector-set! AppRand2 j4995 x)')
+866: guard_class(p41, 16504944, descr=<Guard0x2ec7610>) [p39, p1]
+878: p44 = getfield_gc_r(p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+882: guard_class(p42, 16435208, descr=<Guard0x2ec7658>) [p39, p1]
+894: p46 = getfield_gc_r(p42, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+898: guard_nonnull_class(p46, ConstClass(ForwardLink), descr=<Guard0x2eca9e0>) [p39, p1]
debug_merge_point(0, 0, '(+ i5450 1)')
+916: i48 = getfield_gc_i(p41, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+920: i50 = int_add_ovf(i48, 1)
+924: guard_no_overflow(descr=<Guard0x2ec76a0>) [p39, p1]
debug_merge_point(0, 0, '(doloop5448 AppRand133)')
+930: guard_class(p44, 16478448, descr=<Guard0x2ec76e8>) [p39, p1]
+943: p52 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+947: guard_value(p52, ConstPtr(ptr53), descr=<Guard0x2ec7730>) [p39, p1]
debug_merge_point(0, 0, '(let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))) from (doloop5448 AppRand133)')
debug_merge_point(0, 0, '(+ m 2)')
+956: p54 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+960: guard_nonnull_class(p54, ConstClass(W_Fixnum), descr=<Guard0x2ecaa40>) [p39, p1]
+978: i56 = getfield_gc_i(p54, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+982: i58 = int_add_ovf(i56, 2)
+986: guard_no_overflow(descr=<Guard0x2ec7778>) [p39, p1]
debug_merge_point(0, 0, '(let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))')
debug_merge_point(0, 0, '(= i5450 AppRand130)')
+992: i59 = int_eq(i50, i58)
+995: guard_false(i59, descr=<Guard0x2ec77c0>) [p39, p1]
debug_merge_point(0, 0, '(if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133))))')
debug_merge_point(0, 0, '(let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))')
debug_merge_point(0, 0, '(matrix-ref a5002 i5450 CellRef(kp))')
+1001: p60 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1005: guard_nonnull_class(p60, ConstClass(W_Vector), descr=<Guard0x2ecaaa0>) [p39, p1]
+1024: p62 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1028: p63 = getfield_gc_r(p62, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1033: guard_nonnull_class(p63, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecab00>) [p39, p1]
+1053: i65 = getfield_gc_i(p63, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1057: p66 = getfield_gc_r(p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1057: i68 = int_ge(i50, 0)
+1061: guard_true(i68, descr=<Guard0x2ec7808>) [p39, p1]
+1067: i69 = getfield_gc_i(p60, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1071: i70 = int_lt(i50, i69)
+1074: guard_true(i70, descr=<Guard0x2ec7850>) [p39, p1]
+1080: p71 = getfield_gc_r(p60, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1091: guard_class(p71, 16622984, descr=<Guard0x2ec7898>) [p39, p1]
+1103: p73 = getfield_gc_r(p60, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1107: p74 = getarrayitem_gc_r(p73, i50, descr=<ArrayP 8>)
+1119: guard_class(p74, ConstClass(W_Vector), descr=<Guard0x2ec78e0>) [p39, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1132: i77 = int_ge(i65, 0)
+1136: guard_true(i77, descr=<Guard0x2ec7928>) [p39, p1]
+1142: i78 = getfield_gc_i(p74, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1153: i79 = int_lt(i65, i78)
+1156: guard_true(i79, descr=<Guard0x2ec7970>) [p39, p1]
+1162: p80 = getfield_gc_r(p74, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1166: guard_class(p80, 16612728, descr=<Guard0x2ec79b8>) [p39, p1]
+1178: p82 = getfield_gc_r(p74, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1182: f83 = getarrayitem_gc_f(p82, i65, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) from (vector-ref AppRand1 j)')
+1189: p84 = same_as_r(p46)
+1192: label(p44, i50, f83, p46, p42, p62, p63, p60, p73, i65, p54, i58, p84, i69, descr=TargetToken(48737280))
debug_merge_point(0, 0, '(- AppRand131)')
+1240: guard_not_invalidated(descr=<Guard0x2ecab60>) [f83, p42, i50, p44, p46]
+1240: f86 = float_sub(0.000000, f83)
debug_merge_point(0, 0, '(matrix-set! a5002 i5450 CellRef(kp) AppRand132)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1259: p87 = getarrayitem_gc_r(p73, i50, descr=<ArrayP 8>)
+1264: guard_class(p87, ConstClass(W_Vector), descr=<Guard0x2ec7a00>) [f83, p42, i50, p44, p46]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1276: p89 = getfield_gc_r(p87, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1280: guard_class(p89, 16612728, descr=<Guard0x2ec7a48>) [f83, p42, i50, p44, p46]
+1293: i91 = getfield_gc_i(p87, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1297: i92 = int_lt(i65, i91)
+1300: guard_true(i92, descr=<Guard0x2ec7a90>) [f83, p42, i50, p44, p46]
+1306: p93 = getfield_gc_r(p87, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1310: setarrayitem_gc(p93, i65, f86, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ i5450 1)')
+1317: i95 = int_add(i50, 1)
debug_merge_point(0, 0, '(doloop5448 AppRand133)')
debug_merge_point(0, 0, '(let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))) from (doloop5448 AppRand133)')
debug_merge_point(0, 0, '(+ m 2)')
debug_merge_point(0, 0, '(let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))')
debug_merge_point(0, 0, '(= i5450 AppRand130)')
+1327: i96 = int_eq(i95, i58)
guard_false(i96, descr=<Guard0x2ecabc0>) [i96, i58, i95, p84, None, p42, None, p44, None]
debug_merge_point(0, 0, '(if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133))))')
debug_merge_point(0, 0, '(let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))')
debug_merge_point(0, 0, '(matrix-ref a5002 i5450 CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1348: i98 = int_lt(i95, i69)
+1351: guard_true(i98, descr=<Guard0x2ec7ad8>) [i96, i58, i95, p84, None, p42, None, p44, None]
+1357: p99 = getarrayitem_gc_r(p73, i95, descr=<ArrayP 8>)
+1362: guard_class(p99, ConstClass(W_Vector), descr=<Guard0x2ec7b20>) [i96, i58, i95, p84, None, p42, None, p44, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1375: i101 = getfield_gc_i(p99, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1379: i102 = int_lt(i65, i101)
+1382: guard_true(i102, descr=<Guard0x2ec7b68>) [i96, i58, i95, p84, None, p42, None, p44, None]
+1388: p103 = getfield_gc_r(p99, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1392: guard_class(p103, 16612728, descr=<Guard0x2ec7bb0>) [i96, i58, i95, p84, None, p42, None, p44, None]
+1406: p105 = getfield_gc_r(p99, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1410: f106 = getarrayitem_gc_f(p105, i65, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) from (vector-ref AppRand1 j)')
+1417: i107 = arraylen_gc(p73, descr=<ArrayP 8>)
+1417: jump(p44, i95, f106, p84, p42, p62, p63, p60, p73, i65, p54, i58, p84, i69, descr=TargetToken(48737280))
+1456: --end of the loop--
[3e4c0a4601de523] jit-log-opt-loop}
[3e4c0a4607a746f] {jit-backend
[3e4c0a4608838a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1a
[3e4c0a4608936c0] jit-backend-dump}
[3e4c0a46089e66e] {jit-backend-addr
Loop 7 ((let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)) has address 0x7f6e13cf1c7d to 0x7f6e13cf2190 (bootstrap 0x7f6e13cf1bf0)
       gc table: 0x7f6e13cf1a30
       function: 0x7f6e13cf1bf0
         resops: 0x7f6e13cf1c7d
       failures: 0x7f6e13cf2190
            end: 0x7f6e13cf276f
[3e4c0a4608a1336] jit-backend-addr}
[3e4c0a4608a5780] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1c94 +0  27050000
[3e4c0a4608a6a08] jit-backend-dump}
[3e4c0a4608a9f80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1cab +0  2C050000
[3e4c0a4608aae48] jit-backend-dump}
[3e4c0a4608ae122] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1cc1 +0  32050000
[3e4c0a4608aeeaf] jit-backend-dump}
[3e4c0a4608b221c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1ccd +0  5E050000
[3e4c0a4608b2f5f] jit-backend-dump}
[3e4c0a4608b6182] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1cdd +0  6A050000
[3e4c0a4608b6e9e] jit-backend-dump}
[3e4c0a4608ba0a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1cf1 +0  72050000
[3e4c0a4608bad83] jit-backend-dump}
[3e4c0a4608bde50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1d07 +0  78050000
[3e4c0a4608beb34] jit-backend-dump}
[3e4c0a4608c5466] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1d2b +0  70050000
[3e4c0a4608c629e] jit-backend-dump}
[3e4c0a4608c96d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1d49 +0  6E050000
[3e4c0a4608ca42e] jit-backend-dump}
[3e4c0a4608cd58d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1d57 +0  7C050000
[3e4c0a4608ce296] jit-backend-dump}
[3e4c0a4608d13d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1d64 +0  8B050000
[3e4c0a4608d20f5] jit-backend-dump}
[3e4c0a4608d520e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1d74 +0  97050000
[3e4c0a4608d5f1a] jit-backend-dump}
[3e4c0a4608d91f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1d89 +0  9E050000
[3e4c0a4608d9f07] jit-backend-dump}
[3e4c0a4608dd11a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1d9a +0  A9050000
[3e4c0a4608dde1d] jit-backend-dump}
[3e4c0a4608e1018] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1da4 +0  BB050000
[3e4c0a4608e1d34] jit-backend-dump}
[3e4c0a4608e4e90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1db1 +0  CA050000
[3e4c0a4608e5bcd] jit-backend-dump}
[3e4c0a4608e8d38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1dcf +0  C8050000
[3e4c0a4608e9a14] jit-backend-dump}
[3e4c0a4608ecb51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1de3 +0  D0050000
[3e4c0a4608ed870] jit-backend-dump}
[3e4c0a4608f0a55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1df4 +0  DB050000
[3e4c0a4608f1758] jit-backend-dump}
[3e4c0a4608f48d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1e04 +0  E7050000
[3e4c0a4608f55d3] jit-backend-dump}
[3e4c0a4608f8701] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1e1b +0  EC050000
[3e4c0a4608f9410] jit-backend-dump}
[3e4c0a4608fc5f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1e2c +0  F7050000
[3e4c0a4608fd2ed] jit-backend-dump}
[3e4c0a460900477] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1e48 +0  F7050000
[3e4c0a460901195] jit-backend-dump}
[3e4c0a46090423d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1e5a +0  01060000
[3e4c0a460904fa2] jit-backend-dump}
[3e4c0a4609080a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1e68 +0  0F060000
[3e4c0a460908d99] jit-backend-dump}
[3e4c0a46090be22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1e72 +0  21060000
[3e4c0a46090cb3a] jit-backend-dump}
[3e4c0a46090fbf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1e89 +0  26060000
[3e4c0a460910919] jit-backend-dump}
[3e4c0a4609139e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1e97 +0  34060000
[3e4c0a4609146dc] jit-backend-dump}
[3e4c0a4609177e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1eab +0  3C060000
[3e4c0a4609184e2] jit-backend-dump}
[3e4c0a46091b5a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1eb5 +0  4E060000
[3e4c0a46091c296] jit-backend-dump}
[3e4c0a46091f3a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1ec9 +0  56060000
[3e4c0a460920093] jit-backend-dump}
[3e4c0a46092311c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1ee1 +0  5A060000
[3e4c0a460923e1c] jit-backend-dump}
[3e4c0a460926f38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1efd +0  5A060000
[3e4c0a460927c2f] jit-backend-dump}
[3e4c0a46092acd9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1f12 +0  61060000
[3e4c0a46092b9dc] jit-backend-dump}
[3e4c0a46092ea7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1f22 +0  6D060000
[3e4c0a46092f77b] jit-backend-dump}
[3e4c0a46093283e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1f42 +0  69060000
[3e4c0a460933550] jit-backend-dump}
[3e4c0a460936697] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1f50 +0  77060000
[3e4c0a460937384] jit-backend-dump}
[3e4c0a46093a40a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1f59 +0  8A060000
[3e4c0a46093b10d] jit-backend-dump}
[3e4c0a46093e19f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1f73 +0  8C060000
[3e4c0a46093ee9c] jit-backend-dump}
[3e4c0a460941f1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1f89 +0  92060000
[3e4c0a460942c1f] jit-backend-dump}
[3e4c0a460945c9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1f9c +0  9B060000
[3e4c0a46094699f] jit-backend-dump}
[3e4c0a460949a12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1fba +0  99060000
[3e4c0a46094a709] jit-backend-dump}
[3e4c0a46094d798] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1fc4 +0  AB060000
[3e4c0a46094e480] jit-backend-dump}
[3e4c0a46095153d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1fd1 +0  BA060000
[3e4c0a460952224] jit-backend-dump}
[3e4c0a4609552b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf1fe3 +0  C4060000
[3e4c0a460955fb6] jit-backend-dump}
[3e4c0a460959070] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2009 +0  BA060000
[3e4c0a460959d6d] jit-backend-dump}
[3e4c0a46095ce33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf201c +0  C3060000
[3e4c0a46095db2a] jit-backend-dump}
[3e4c0a460961019] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf202b +0  D0060000
[3e4c0a460961d68] jit-backend-dump}
[3e4c0a460964f0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf20fc +0  1B060000
[3e4c0a460965c91] jit-backend-dump}
[3e4c0a460968d76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf210f +0  24060000
[3e4c0a460969a6d] jit-backend-dump}
[3e4c0a46096cb5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2118 +0  37060000
[3e4c0a46096d867] jit-backend-dump}
[3e4c0a460971406] jit-backend}
[3e4c0a4609750cf] {jit-log-opt-loop
# Loop 7 ((let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)) : entry bridge with 190 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
+597: guard_class(p0, 16504592, descr=<Guard0x2ecac20>) [p1, p0]
+616: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+620: guard_class(p1, 16435208, descr=<Guard0x2ec7bf8>) [p1, p0]
+639: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+643: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x2ecac80>) [p1, p0]
debug_merge_point(0, 0, '(* piv AppRand45)')
+661: guard_not_invalidated(descr=<Guard0x2ec7c40>) [p1, p0]
+661: guard_class(p3, 16504944, descr=<Guard0x2ec7c88>) [p1, p0]
+673: p8 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+677: guard_class(p8, 16479952, descr=<Guard0x2ec7cd0>) [p1, p0]
+689: p10 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+700: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x2ec7d18>) [p1, p0]
+709: p12 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+713: guard_nonnull_class(p12, ConstClass(W_Flonum), descr=<Guard0x2ecace0>) [p1, p0]
+731: f14 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+736: f15 = getfield_gc_f(p12, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+741: f16 = float_mul(f15, f14)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
+745: p17 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+749: guard_nonnull_class(p17, ConstClass(W_Vector), descr=<Guard0x2ecad40>) [p1, p0]
+767: i19 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+771: p20 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+775: p21 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+779: guard_nonnull_class(p21, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecada0>) [p1, p0]
+797: i23 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+801: p24 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+801: i26 = int_ge(i19, 0)
+805: guard_true(i26, descr=<Guard0x2ec7d60>) [p1, p0]
+811: i27 = getfield_gc_i(p17, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+815: i28 = int_lt(i19, i27)
+818: guard_true(i28, descr=<Guard0x2ec7da8>) [p1, p0]
+824: p29 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+828: guard_class(p29, 16622984, descr=<Guard0x2ec7df0>) [p1, p0]
+840: p31 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+844: p32 = getarrayitem_gc_r(p31, i19, descr=<ArrayP 8>)
+849: guard_class(p32, ConstClass(W_Vector), descr=<Guard0x2ec7e38>) [p1, p0]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+861: p34 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+865: guard_class(p34, 16612728, descr=<Guard0x2ec7e80>) [p1, p0]
+878: i37 = int_ge(i23, 0)
+882: guard_true(i37, descr=<Guard0x2ec7ec8>) [p1, p0]
+888: i38 = getfield_gc_i(p32, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+892: i39 = int_lt(i23, i38)
+895: guard_true(i39, descr=<Guard0x2ec7f10>) [p1, p0]
+901: p40 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+905: setarrayitem_gc(p40, i23, f16, descr=<ArrayF 8>)
+911: p41 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+922: guard_value(p41, ConstPtr(ptr42), descr=<Guard0x2ecae00>) [p41, p1]
+931: p43 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+935: p44 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
+939: guard_class(p43, 16504944, descr=<Guard0x2ec7f58>) [p41, p1]
+951: p46 = getfield_gc_r(p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+955: guard_class(p46, 16479952, descr=<Guard0x2ec7fa0>) [p41, p1]
+968: p48 = getfield_gc_r(p46, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+972: guard_class(p44, 16435208, descr=<Guard0x2ee2020>) [p41, p1]
+984: p50 = getfield_gc_r(p44, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+988: guard_nonnull_class(p50, ConstClass(ForwardLink), descr=<Guard0x2ecae60>) [p41, p1]
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
+1007: i52 = getfield_gc_i(p43, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1011: p53 = getfield_gc_r(p46, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1015: guard_value(p53, ConstPtr(ptr54), descr=<Guard0x2ee2068>) [p41, p1]
+1024: p55 = getfield_gc_r(p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+1028: p56 = getfield_gc_r(p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+1032: p57 = getfield_gc_r(p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+1036: p58 = getfield_gc_r(p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+1040: guard_class(p48, 16505296, descr=<Guard0x2ee20b0>) [p41, p1]
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+1052: guard_nonnull_class(p55, ConstClass(W_Fixnum), descr=<Guard0x2ecaec0>) [p41, p1]
+1070: i61 = getfield_gc_i(p55, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1074: i63 = int_add_ovf(i61, 1)
+1078: guard_no_overflow(descr=<Guard0x2ee20f8>) [p41, p1]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+1084: i65 = int_eq(0, i63)
+1088: guard_false(i65, descr=<Guard0x2ee2140>) [p41, p1]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+1094: p66 = getfield_gc_r(p56, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1098: guard_nonnull_class(p66, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecaf20>) [p41, p1]
+1117: i68 = getfield_gc_i(p66, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1121: i69 = int_eq(0, i68)
+1125: guard_false(i69, descr=<Guard0x2ee2188>) [p41, p1]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
+1131: guard_nonnull_class(p58, ConstClass(W_Vector), descr=<Guard0x2ecaf80>) [p41, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1151: i72 = int_ge(i52, 0)
+1155: guard_true(i72, descr=<Guard0x2ee21d0>) [p41, p1]
+1161: i73 = getfield_gc_i(p58, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1172: i74 = int_lt(i52, i73)
+1175: guard_true(i74, descr=<Guard0x2ee2218>) [p41, p1]
+1181: p75 = getfield_gc_r(p58, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1192: guard_class(p75, 16622984, descr=<Guard0x2ee2260>) [p41, p1]
+1205: p77 = getfield_gc_r(p58, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1209: p78 = getarrayitem_gc_r(p77, i52, descr=<ArrayP 8>)
+1221: guard_class(p78, ConstClass(W_Vector), descr=<Guard0x2ee22a8>) [p41, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1233: i80 = getfield_gc_i(p78, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1244: i81 = int_lt(0, i80)
+1248: guard_true(i81, descr=<Guard0x2ee22f0>) [p41, p1]
+1254: p82 = getfield_gc_r(p78, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1258: guard_class(p82, 16612728, descr=<Guard0x2ee2338>) [p41, p1]
+1270: p84 = getfield_gc_r(p78, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1274: f85 = getarrayitem_gc_f(p84, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
+1279: p86 = getfield_gc_r(p57, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1284: guard_nonnull_class(p86, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecafe0>) [p41, p1]
+1302: i88 = getfield_gc_i(p86, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1306: i90 = int_ge(i88, 0)
+1310: guard_true(i90, descr=<Guard0x2ee2380>) [p41, p1]
+1316: i91 = int_lt(i88, i73)
+1319: guard_true(i91, descr=<Guard0x2ee23c8>) [p41, p1]
+1325: p92 = getarrayitem_gc_r(p77, i88, descr=<ArrayP 8>)
+1337: guard_class(p92, ConstClass(W_Vector), descr=<Guard0x2ee2410>) [p41, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1351: i94 = getfield_gc_i(p92, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1363: i95 = int_lt(0, i94)
+1367: guard_true(i95, descr=<Guard0x2ee2458>) [p41, p1]
+1373: p96 = getfield_gc_r(p92, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1378: guard_class(p96, 16612728, descr=<Guard0x2ee24a0>) [p41, p1]
+1392: p98 = getfield_gc_r(p92, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1397: f99 = getarrayitem_gc_f(p98, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1403: p100 = getarrayitem_gc_r(p77, i52, descr=<ArrayP 8>)
+1408: guard_class(p100, ConstClass(W_Vector), descr=<Guard0x2ee24e8>) [p41, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1422: i103 = int_ge(i68, 0)
+1426: guard_true(i103, descr=<Guard0x2ee2530>) [p41, p1]
+1432: i104 = getfield_gc_i(p100, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1436: i105 = int_lt(i68, i104)
+1439: guard_true(i105, descr=<Guard0x2ee2578>) [p41, p1]
+1445: p106 = getfield_gc_r(p100, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1449: guard_class(p106, 16612728, descr=<Guard0x2ee25c0>) [p41, p1]
+1463: p108 = getfield_gc_r(p100, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1467: f109 = getarrayitem_gc_f(p108, i68, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+1474: f110 = float_mul(f99, f109)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+1478: f111 = float_sub(f85, f110)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1482: p112 = getarrayitem_gc_r(p77, i52, descr=<ArrayP 8>)
+1487: guard_class(p112, ConstClass(W_Vector), descr=<Guard0x2ee2608>) [p41, p1]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1501: p114 = getfield_gc_r(p112, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1506: guard_class(p114, 16612728, descr=<Guard0x2ee2650>) [p41, p1]
+1520: i116 = getfield_gc_i(p112, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1525: i117 = int_lt(0, i116)
+1529: guard_true(i117, descr=<Guard0x2ee2698>) [p41, p1]
+1535: p118 = getfield_gc_r(p112, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+1540: setarrayitem_gc(p118, 0, f111, descr=<ArrayF 8>)
+1545: p119 = new_with_vtable(descr=<SizeDescr 64>)
+1589: p120 = new_with_vtable(descr=<SizeDescr 16>)
+1600: setfield_gc(p120, i52, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1660: i121 = getfield_gc_i(p120, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1664: setfield_gc(p119, p48, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1675: setfield_gc(p119, ConstPtr(ptr122), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1679: setfield_gc(p119, p120, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1683: setfield_gc(p119, p55, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1694: setfield_gc(p119, p56, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1705: setfield_gc(p119, p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1716: setfield_gc(p119, p58, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1734: i124 = int_ge(i121, 0)
+1738: guard_true(i124, descr=<Guard0x2ecb040>) [p44, p119]
+1744: i126 = int_le(i121, 9223372036854775806)
+1757: guard_true(i126, descr=<Guard0x2ecb0a0>) [p44, p119]
+1763: i127 = int_lt(i121, i73)
+1766: guard_true(i127, descr=<Guard0x2ecb100>) [p44, p119]
+1772: i128 = arraylen_gc(p77, descr=<ArrayP 8>)
+1772: jump(p119, 1, p44, p50, p55, i63, p56, p66, i68, p120, p58, p77, i121, p57, p86, i88, descr=TargetToken(47968112))
+1888: --end of the loop--
[3e4c0a460a08d50] jit-log-opt-loop}
[3e4c0a460b43e01] {jit-backend
[3e4c0a460b7fbcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf
[3e4c0a460b8777a] jit-backend-dump}
[3e4c0a460b918b6] {jit-backend-addr
Loop 8 ((let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)) has address 0x7f6e13cf297d to 0x7f6e13cf2ac0 (bootstrap 0x7f6e13cf28f0)
       gc table: 0x7f6e13cf2870
       function: 0x7f6e13cf28f0
         resops: 0x7f6e13cf297d
       failures: 0x7f6e13cf2ac0
            end: 0x7f6e13cf2c5a
[3e4c0a460b946c6] jit-backend-addr}
[3e4c0a460b9869d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2994 +0  3A010000
[3e4c0a460b998bd] jit-backend-dump}
[3e4c0a460b9ccab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf29ab +0  3F010000
[3e4c0a460b9daf5] jit-backend-dump}
[3e4c0a460ba0c4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf29c1 +0  45010000
[3e4c0a460ba19c2] jit-backend-dump}
[3e4c0a460ba4c53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf29cf +0  6F010000
[3e4c0a460ba5922] jit-backend-dump}
[3e4c0a460ba89fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf29db +0  7F010000
[3e4c0a460ba96c7] jit-backend-dump}
[3e4c0a460bac722] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf29ef +0  87010000
[3e4c0a460bad403] jit-backend-dump}
[3e4c0a460bb040c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf29fc +0  96010000
[3e4c0a460bb10f3] jit-backend-dump}
[3e4c0a460bb40ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2a0c +0  A2010000
[3e4c0a460bb4da6] jit-backend-dump}
[3e4c0a460bb7d8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2a22 +0  A8010000
[3e4c0a460bb8a78] jit-backend-dump}
[3e4c0a460bbba4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2a30 +0  B6010000
[3e4c0a460bbc727] jit-backend-dump}
[3e4c0a460bbf714] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2a3d +0  C5010000
[3e4c0a460bc03f3] jit-backend-dump}
[3e4c0a460bc33bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2a59 +0  C5010000
[3e4c0a460bc40a2] jit-backend-dump}
[3e4c0a460bc70a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2a70 +0  CA010000
[3e4c0a460bc7d89] jit-backend-dump}
[3e4c0a460bcb7e8] jit-backend}
[3e4c0a460bcf292] {jit-log-opt-loop
# Loop 8 ((let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)) : entry bridge with 32 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)')
+277: guard_class(p0, 16504944, descr=<Guard0x2ecb160>) [p1, p0]
+296: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+300: guard_class(p1, 16435208, descr=<Guard0x2ee26e0>) [p1, p0]
+319: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+323: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x2ecb1c0>) [p1, p0]
debug_merge_point(0, 0, '(+ ii 1)')
+341: guard_not_invalidated(descr=<Guard0x2ee2728>) [p1, p0]
+341: i7 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+345: i9 = int_add_ovf(i7, 1)
+349: guard_no_overflow(descr=<Guard0x2ee2770>) [p1, p0]
debug_merge_point(0, 0, '(doloop5167 AppRand55)')
+355: guard_class(p3, 16479952, descr=<Guard0x2ee27b8>) [p1, p0]
+367: p11 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+378: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x2ee2800>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+387: p13 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+391: guard_nonnull(p13, descr=<Guard0x2ecb220>) [p1, i9, p3]
+407: i15 = instance_ptr_eq(p13, ConstPtr(ptr14))
+410: guard_false(i15, descr=<Guard0x2ecb280>) [p1, i9, p3]
+416: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+420: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x2ecb2e0>) [p1, i9, p3]
+438: i18 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+442: i20 = int_add_ovf(i18, 2)
+446: guard_no_overflow(descr=<Guard0x2ecb340>) [p1, i9, p3]
+452: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+456: guard_nonnull(p21, descr=<Guard0x2ecb3a0>) [p1, i9, p3]
+465: guard_subclass(p21, ConstClass(W_Cell), descr=<Guard0x2ecb400>) [p1, i9, p3]
+493: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+497: guard_nonnull_class(p23, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecb460>) [p1, i9, p3]
+516: i25 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+520: jump(p3, i9, p1, p5, p16, i20, p21, p23, i25, descr=TargetToken(48737120))
+592: --end of the loop--
[3e4c0a460bf0783] jit-log-opt-loop}
[3e4c0a460eb0c63] {jit-backend
[3e4c0a460f01922] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2dc
[3e4c0a460f090d5] jit-backend-dump}
[3e4c0a460f13a28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2e84 +0  22000000
[3e4c0a460f14df1] jit-backend-dump}
[3e4c0a460f18cb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3045 +0  22000000
[3e4c0a460f19ce6] jit-backend-dump}
[3e4c0a460f1d215] {jit-backend-addr
bridge out of Guard 0x2ec6650 has address 0x7f6e13cf2e80 to 0x7f6e13cf3040
       gc table: 0x7f6e13cf2dc0
    jump target: 0x7f6e13cf2e80
         resops: 0x7f6e13cf2e8e
       failures: 0x7f6e13cf3040
            end: 0x7f6e13cf3296
[3e4c0a460f1f539] jit-backend-addr}
[3e4c0a460f23027] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2ea6 +0  D8010000
[3e4c0a460f23f2f] jit-backend-dump}
[3e4c0a460f2727a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2ebe +0  DC010000
[3e4c0a460f27fa8] jit-backend-dump}
[3e4c0a460f2b13b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2ecd +0  E9010000
[3e4c0a460f2be5d] jit-backend-dump}
[3e4c0a460f2ef08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2ee5 +0  ED010000
[3e4c0a460f2fc0e] jit-backend-dump}
[3e4c0a460f32cb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2eee +0  00020000
[3e4c0a460f339b2] jit-backend-dump}
[3e4c0a460f36a69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2f02 +0  08020000
[3e4c0a460f37757] jit-backend-dump}
[3e4c0a460f3a793] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2f18 +0  0E020000
[3e4c0a460f3b490] jit-backend-dump}
[3e4c0a460f3e4df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2f2b +0  17020000
[3e4c0a460f3f1c6] jit-backend-dump}
[3e4c0a460f4220f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2f42 +0  1C020000
[3e4c0a460f42efd] jit-backend-dump}
[3e4c0a460f45f39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2f51 +0  29020000
[3e4c0a460f46c1e] jit-backend-dump}
[3e4c0a460f49c3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2f5e +0  38020000
[3e4c0a460f4a929] jit-backend-dump}
[3e4c0a460f4d994] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2f72 +0  40020000
[3e4c0a460f4e67b] jit-backend-dump}
[3e4c0a460f51693] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2f7f +0  4F020000
[3e4c0a460f5237a] jit-backend-dump}
[3e4c0a460f55380] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2f8f +0  5B020000
[3e4c0a460f5607a] jit-backend-dump}
[3e4c0a460f5908b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2fa7 +0  5F020000
[3e4c0a460f59d82] jit-backend-dump}
[3e4c0a460f5cdd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2fb6 +0  6C020000
[3e4c0a460f5daaf] jit-backend-dump}
[3e4c0a460f60b1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2fc3 +0  7B020000
[3e4c0a460f61817] jit-backend-dump}
[3e4c0a460f648d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2fdf +0  7B020000
[3e4c0a460f655c7] jit-backend-dump}
[3e4c0a460f6861c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2ff6 +0  80020000
[3e4c0a460f6931c] jit-backend-dump}
[3e4c0a460f6c5b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef888 +0  F4350000
[3e4c0a460f6d2c3] jit-backend-dump}
[3e4c0a460f710d2] jit-backend}
[3e4c0a460f74c2b] {jit-log-opt-bridge
# bridge out of Guard 0x2ec6650 with 51 ops
[i0, p1, p2, p3]
+214: guard_not_invalidated(descr=<Guard0x2ecb580>) [i0, p1, p2, p3]
+214: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+225: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x2ee28d8>) [i0, p1, p2, p3]
+234: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+238: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x2ecb5e0>) [i0, p1, p2, p3]
+258: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+263: i10 = int_add_ovf(i8, 1)
+267: guard_no_overflow(descr=<Guard0x2ee2920>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
+273: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+277: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x2ecb640>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(= kk AppRand47)')
+297: i13 = int_eq(i0, i10)
+300: guard_true(i13, descr=<Guard0x2ee2968>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(void)')
+306: p14 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+317: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x2ee29b0>) [i0, p1, p2, p3]
+326: p16 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+330: p17 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)')
+334: guard_class(p16, 16504944, descr=<Guard0x2ee29f8>) [i0, p1, p2, p3]
+348: p19 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+353: guard_class(p17, 16435208, descr=<Guard0x2ee2a40>) [i0, p1, p2, p3]
+367: p21 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+371: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x2ecb6a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ ii 1)')
+390: i23 = getfield_gc_i(p16, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+395: i25 = int_add_ovf(i23, 1)
+399: guard_no_overflow(descr=<Guard0x2ee2a88>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5167 AppRand55)')
+405: guard_class(p19, 16479952, descr=<Guard0x2ee2ad0>) [i0, p1, p2, p3]
+418: p27 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+429: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x2ee2b18>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+438: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+442: guard_nonnull(p29, descr=<Guard0x2ecb700>) [p17, i25, p19, None, None, None, None]
+458: i32 = instance_ptr_eq(p29, ConstPtr(ptr31))
+461: guard_false(i32, descr=<Guard0x2ecb760>) [p17, i25, p19, None, None, None, None]
+467: p33 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+471: guard_nonnull_class(p33, ConstClass(W_Fixnum), descr=<Guard0x2ecb7c0>) [p17, i25, p19, None, None, None, None]
+491: i35 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+496: i37 = int_add_ovf(i35, 2)
+500: guard_no_overflow(descr=<Guard0x2ecb820>) [p17, i25, p19, None, None, None, None]
+506: p38 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+510: guard_nonnull(p38, descr=<Guard0x2ecb880>) [p17, i25, p19, None, None, None, None]
+519: guard_subclass(p38, ConstClass(W_Cell), descr=<Guard0x2ecb8e0>) [p17, i25, p19, None, None, None, None]
+547: p40 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+551: guard_nonnull_class(p40, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecb940>) [p17, i25, p19, None, None, None, None]
+570: i42 = getfield_gc_i(p40, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+574: jump(p19, i25, p17, p21, p33, i37, p38, p40, i42, descr=TargetToken(48737120))
+640: --end of the loop--
[3e4c0a460faa473] jit-log-opt-bridge}
[3e4c0a461681174] {jit-backend
[3e4c0a4617ca2b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf
[3e4c0a4617da699] jit-backend-dump}
[3e4c0a4617e561f] {jit-backend-addr
Loop 10 ((let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)) has address 0x7f6e13cf389d to 0x7f6e13cf3f20 (bootstrap 0x7f6e13cf3810)
       gc table: 0x7f6e13cf3610
       function: 0x7f6e13cf3810
         resops: 0x7f6e13cf389d
       failures: 0x7f6e13cf3f20
            end: 0x7f6e13cf4504
[3e4c0a4617e9588] jit-backend-addr}
[3e4c0a4617ededf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf38b4 +0  BE060000
[3e4c0a4617ef33e] jit-backend-dump}
[3e4c0a4617f29ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf38ca +0  C4060000
[3e4c0a4617f386d] jit-backend-dump}
[3e4c0a4617f6d71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf38dd +0  E9060000
[3e4c0a4617f7a9c] jit-backend-dump}
[3e4c0a4617facfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf38f1 +0  F1060000
[3e4c0a4617fb9c8] jit-backend-dump}
[3e4c0a4617feb1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3905 +0  F9060000
[3e4c0a4617ff839] jit-backend-dump}
[3e4c0a461802977] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf391b +0  FF060000
[3e4c0a461803677] jit-backend-dump}
[3e4c0a4618067c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3928 +0  0E070000
[3e4c0a461807492] jit-backend-dump}
[3e4c0a46180a5b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf393c +0  16070000
[3e4c0a46180b29c] jit-backend-dump}
[3e4c0a46180e3ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3950 +0  1E070000
[3e4c0a46180f0fb] jit-backend-dump}
[3e4c0a4618122c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3962 +0  28070000
[3e4c0a461812fa0] jit-backend-dump}
[3e4c0a4618160e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3976 +0  30070000
[3e4c0a461816de1] jit-backend-dump}
[3e4c0a461819f2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3991 +0  31070000
[3e4c0a46181ac27] jit-backend-dump}
[3e4c0a46181dd3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf399e +0  40070000
[3e4c0a46181ea40] jit-backend-dump}
[3e4c0a461821b46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf39c3 +0  37070000
[3e4c0a461822846] jit-backend-dump}
[3e4c0a46182594a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf39d7 +0  3F070000
[3e4c0a461826622] jit-backend-dump}
[3e4c0a4618296e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf39eb +0  47070000
[3e4c0a46182a3b7] jit-backend-dump}
[3e4c0a46182d483] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf39fd +0  51070000
[3e4c0a46182e183] jit-backend-dump}
[3e4c0a461831253] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3a0a +0  60070000
[3e4c0a461831f37] jit-backend-dump}
[3e4c0a461835037] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3a25 +0  61070000
[3e4c0a461835d19] jit-backend-dump}
[3e4c0a461838deb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3a35 +0  6D070000
[3e4c0a461839ac6] jit-backend-dump}
[3e4c0a46183cbe8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3a41 +0  7D070000
[3e4c0a46183d8dc] jit-backend-dump}
[3e4c0a4618409f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3a58 +0  82070000
[3e4c0a4618416fb] jit-backend-dump}
[3e4c0a4618447ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3a7d +0  79070000
[3e4c0a4618454f5] jit-backend-dump}
[3e4c0a4618485e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3a91 +0  81070000
[3e4c0a4618492e0] jit-backend-dump}
[3e4c0a46184c402] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3aa8 +0  86070000
[3e4c0a46184d102] jit-backend-dump}
[3e4c0a461850211] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3ac2 +0  88070000
[3e4c0a461850ef6] jit-backend-dump}
[3e4c0a461853ffc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3ae3 +0  83070000
[3e4c0a461854cd4] jit-backend-dump}
[3e4c0a461857e8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3af5 +0  8D070000
[3e4c0a461858b9b] jit-backend-dump}
[3e4c0a46185bcb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3b09 +0  95070000
[3e4c0a46185c9ba] jit-backend-dump}
[3e4c0a46185fb0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3b1a +0  A0070000
[3e4c0a4618607f8] jit-backend-dump}
[3e4c0a461863954] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3b37 +0  9F070000
[3e4c0a461864629] jit-backend-dump}
[3e4c0a46186775a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3b41 +0  B1070000
[3e4c0a46186847c] jit-backend-dump}
[3e4c0a46186b58b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3b55 +0  B9070000
[3e4c0a46186c273] jit-backend-dump}
[3e4c0a46186f38b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3b66 +0  C4070000
[3e4c0a461870082] jit-backend-dump}
[3e4c0a461873277] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3b8c +0  BA070000
[3e4c0a461873f40] jit-backend-dump}
[3e4c0a4618770a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3bb4 +0  AE070000
[3e4c0a461877d8d] jit-backend-dump}
[3e4c0a46187ae68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3bc7 +0  B1070000
[3e4c0a46187bb31] jit-backend-dump}
[3e4c0a46187ec5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3bdc +0  B8070000
[3e4c0a46187f92e] jit-backend-dump}
[3e4c0a461882ae9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3be6 +0  CA070000
[3e4c0a4618837b8] jit-backend-dump}
[3e4c0a461886894] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3bf0 +0  DC070000
[3e4c0a461887572] jit-backend-dump}
[3e4c0a46188a63b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3c00 +0  E8070000
[3e4c0a46188b30a] jit-backend-dump}
[3e4c0a46188e3e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3c14 +0  F0070000
[3e4c0a46188f0a9] jit-backend-dump}
[3e4c0a461892181] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3c24 +0  FC070000
[3e4c0a461892e56] jit-backend-dump}
[3e4c0a461895f16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3c51 +0  EB070000
[3e4c0a461896bfb] jit-backend-dump}
[3e4c0a461899ca2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3c5f +0  F9070000
[3e4c0a46189a987] jit-backend-dump}
[3e4c0a46189dab8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3c69 +0  0B080000
[3e4c0a46189e793] jit-backend-dump}
[3e4c0a4618a183e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3c73 +0  1D080000
[3e4c0a4618a251f] jit-backend-dump}
[3e4c0a4618a565d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3ca0 +0  0C080000
[3e4c0a4618a633b] jit-backend-dump}
[3e4c0a4618a93ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3cb5 +0  13080000
[3e4c0a4618aa0c4] jit-backend-dump}
[3e4c0a4618ad18a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3cc6 +0  1E080000
[3e4c0a4618ade5f] jit-backend-dump}
[3e4c0a4618b1c2c] jit-backend}
[3e4c0a4618b5c2e] {jit-log-opt-loop
# Loop 10 ((let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)) : entry bridge with 261 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
+661: guard_class(p1, 16435208, descr=<Guard0x2ecb9a0>) [p0, p1]
+680: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+684: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2ecba00>) [p0, p1]
debug_merge_point(0, 0, '(= i5080 m)')
+702: guard_not_invalidated(descr=<Guard0x2ee2b60>) [p0, p1]
+702: guard_class(p0, 16504944, descr=<Guard0x2ee2ba8>) [p0, p1]
+721: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+725: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+729: guard_class(p7, 16480704, descr=<Guard0x2ee2bf0>) [p0, p1]
+741: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+752: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2ee2c38>) [p0, p1]
+761: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+765: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x2ecba60>) [p0, p1]
+783: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+787: i14 = int_eq(i6, i13)
+790: guard_true(i14, descr=<Guard0x2ee2c80>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(void)')
+796: p15 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+807: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x2ee2cc8>) [p0, p1]
+816: p17 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+820: p18 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)) from (void)')
+824: guard_class(p17, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x2ee2d10>) [p0, p1]
+836: p20 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+840: i21 = arraylen_gc(p20, descr=<ArrayP 8>)
+844: i23 = int_eq(20, i21)
+848: guard_false(i23, descr=<Guard0x2ee2d58>) [p0, p1]
+854: p24 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+865: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x2ee2da0>) [p0, p1]
+874: p27 = getarrayitem_gc_pure_r(p20, 8, descr=<ArrayP 8>)
+878: p28 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+882: guard_nonnull_class(p28, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecbac0>) [p0, p1]
+901: i30 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+905: i31 = int_is_zero(i30)
+908: guard_false(i31, descr=<Guard0x2ee2de8>) [p0, p1]
debug_merge_point(0, 0, '(set! one? #t)')
+914: p33 = getarrayitem_gc_pure_r(p20, 0, descr=<ArrayP 8>)
+935: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+939: guard_class(p18, 16435208, descr=<Guard0x2ecbb20>) [p18, p17]
+951: p36 = getfield_gc_r(p18, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+962: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x2ee2e30>) [p18, p17]
+971: p38 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+975: p39 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)) from (void)')
+979: guard_class(p38, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x2ee2e78>) [p18, p17]
+991: p41 = getfield_gc_r(p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+995: i42 = arraylen_gc(p41, descr=<ArrayP 8>)
+999: i44 = int_eq(20, i42)
+1003: guard_false(i44, descr=<Guard0x2ee2ec0>) [p18, p17]
+1009: p45 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1013: guard_value(p45, ConstPtr(ptr46), descr=<Guard0x2ee2f08>) [p18, p17]
+1022: p48 = getarrayitem_gc_pure_r(p41, 0, descr=<ArrayP 8>)
+1026: p49 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1030: guard_nonnull_class(p49, ConstClass(W_Bool), descr=<Guard0x2ecbb80>) [p18, p17]
+1056: i52 = instance_ptr_eq(p49, ConstPtr(ptr51))
+1059: guard_false(i52, descr=<Guard0x2ee2f50>) [p18, p17]
debug_merge_point(0, 0, '(begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303))')
+1065: guard_class(p39, 16435208, descr=<Guard0x2ee2f98>) [p18, p17]
+1077: p54 = getfield_gc_r(p39, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1081: guard_nonnull_class(p54, ConstClass(ForwardLink), descr=<Guard0x2ecbbe0>) [p18, p17]
debug_merge_point(0, 0, '(set! one? #f)')
debug_merge_point(0, 0, '(simp3 #t)')
+1100: p57 = getarrayitem_gc_pure_r(p41, 9, descr=<ArrayP 8>)
+1115: setfield_gc(p48, ConstPtr(ptr58), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1119: guard_nonnull_class(p57, 16479200, descr=<Guard0x2ecbc40>) [p38, p57, p39, p54]
+1137: p60 = getfield_gc_r(p57, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1148: guard_value(p60, ConstPtr(ptr61), descr=<Guard0x2ee2fe0>) [p38, p57, p39, p54]
+1157: p62 = getfield_gc_r(p38, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))))')
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) CellRef(kp))')
+1157: p63 = getfield_gc_r(p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1161: guard_nonnull_class(p63, ConstClass(W_Vector), descr=<Guard0x2ecbca0>) [p38, p57, p39, p54]
+1180: p65 = getfield_gc_r(p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1184: p66 = getfield_gc_r(p65, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1188: guard_nonnull_class(p66, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecbd00>) [p38, p57, p39, p54]
+1206: i68 = getfield_gc_i(p66, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1210: p69 = getfield_gc_r(p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1214: p70 = getfield_gc_r(p69, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1219: guard_nonnull_class(p70, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecbd60>) [p38, p57, p39, p54]
+1239: i72 = getfield_gc_i(p70, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1243: p73 = getfield_gc_r(p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1247: i75 = int_ge(i68, 0)
+1251: guard_true(i75, descr=<Guard0x2ee3028>) [p38, p57, p39, p54]
+1257: i76 = getfield_gc_i(p63, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1268: i77 = int_lt(i68, i76)
+1271: guard_true(i77, descr=<Guard0x2ee3070>) [p38, p57, p39, p54]
+1277: p78 = getfield_gc_r(p63, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1281: guard_class(p78, 16622984, descr=<Guard0x2ee30b8>) [p38, p57, p39, p54]
+1294: p80 = getfield_gc_r(p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1298: p81 = getarrayitem_gc_r(p80, i68, descr=<ArrayP 8>)
+1310: guard_class(p81, ConstClass(W_Vector), descr=<Guard0x2ee3100>) [p38, p57, p39, p54]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1323: i84 = int_ge(i72, 0)
+1327: guard_true(i84, descr=<Guard0x2ee3148>) [p38, p57, p39, p54]
+1333: i85 = getfield_gc_i(p81, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1344: i86 = int_lt(i72, i85)
+1347: guard_true(i86, descr=<Guard0x2ee3190>) [p38, p57, p39, p54]
+1353: p87 = getfield_gc_r(p81, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1357: guard_class(p87, 16612728, descr=<Guard0x2ee31d8>) [p38, p57, p39, p54]
+1370: p89 = getfield_gc_r(p81, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1374: f90 = getarrayitem_gc_f(p89, i72, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))')
debug_merge_point(0, 0, '(/ AppRand41)')
+1381: i92 = float_eq(f90, 0.000000)
+1402: guard_false(i92, descr=<Guard0x2ee3220>) [p38, p57, p39, p54]
+1408: f94 = float_truediv(1.000000, f90)
debug_merge_point(0, 0, '(let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))')
debug_merge_point(0, 0, '(lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))')
+1427: p95 = getfield_gc_r(p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1431: p96 = getfield_gc_r(p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1435: guard_class(p73, 16505296, descr=<Guard0x2ee3268>) [p38, p57, p39, p54]
debug_merge_point(0, 0, '(doloop5167 0)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 0)')
debug_merge_point(0, 0, '(if one?5161 2 1)')
debug_merge_point(0, 0, '2')
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+1448: guard_nonnull_class(p96, ConstClass(W_Fixnum), descr=<Guard0x2ecbdc0>) [p38, p57, p39, p54]
+1467: i99 = getfield_gc_i(p96, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1478: i101 = int_add_ovf(i99, 2)
+1482: guard_no_overflow(descr=<Guard0x2ee32b0>) [p38, p57, p39, p54]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+1488: i103 = int_eq(0, i101)
+1492: guard_false(i103, descr=<Guard0x2ee32f8>) [p38, p57, p39, p54]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+1498: i104 = int_eq(0, i68)
+1502: guard_false(i104, descr=<Guard0x2ee3340>) [p38, p57, p39, p54]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1508: p105 = getarrayitem_gc_r(p80, 0, descr=<ArrayP 8>)
+1512: guard_class(p105, ConstClass(W_Vector), descr=<Guard0x2ee3388>) [p38, p57, p39, p54]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1524: i107 = getfield_gc_i(p105, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1535: i108 = int_lt(i72, i107)
+1538: guard_true(i108, descr=<Guard0x2ee33d0>) [p38, p57, p39, p54]
+1544: p109 = getfield_gc_r(p105, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1548: guard_class(p109, 16612728, descr=<Guard0x2ee3418>) [p38, p57, p39, p54]
+1560: p111 = getfield_gc_r(p105, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1564: f112 = getarrayitem_gc_f(p111, i72, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+1571: f113 = float_mul(f94, f112)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1579: setarrayitem_gc(p111, i72, f113, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+1586: guard_nonnull_class(p95, ConstClass(W_Fixnum), descr=<Guard0x2ecbe20>) [p95, p38, p57, f94, p96, p63, p65, p69, p73, p39, p54]
+1605: i115 = getfield_gc_i(p95, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1609: i117 = int_add_ovf(i115, 1)
+1613: guard_no_overflow(descr=<Guard0x2ee3460>) [p95, p38, p57, f94, p96, p63, p65, p69, p73, p39, p54]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+1619: i119 = int_eq(0, i117)
+1623: guard_false(i119, descr=<Guard0x2ee34a8>) [p95, p38, p57, f94, p96, p63, p65, p69, p73, p39, p54]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+1629: i120 = int_eq(0, i72)
+1633: guard_false(i120, descr=<Guard0x2ee34f0>) [p95, p38, p57, f94, p96, p63, p65, p69, p73, p39, p54]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1639: f121 = getarrayitem_gc_f(p111, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1644: p122 = getarrayitem_gc_r(p80, i68, descr=<ArrayP 8>)
+1670: guard_class(p122, ConstClass(W_Vector), descr=<Guard0x2ee3538>) [p95, p38, p57, f94, p96, p63, p65, p69, p73, p39, p54]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1684: i124 = getfield_gc_i(p122, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1695: i125 = int_lt(0, i124)
+1699: guard_true(i125, descr=<Guard0x2ee3580>) [p95, p38, p57, f94, p96, p63, p65, p69, p73, p39, p54]
+1705: p126 = getfield_gc_r(p122, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1709: guard_class(p126, 16612728, descr=<Guard0x2ee35c8>) [p95, p38, p57, f94, p96, p63, p65, p69, p73, p39, p54]
+1722: p128 = getfield_gc_r(p122, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1726: f129 = getarrayitem_gc_f(p128, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1732: f130 = getarrayitem_gc_f(p111, i72, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+1746: f131 = float_mul(f129, f130)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+1750: f132 = float_sub(f121, f131)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+1754: setarrayitem_gc(p111, 0, f132, descr=<ArrayF 8>)
+1759: p133 = new_with_vtable(descr=<SizeDescr 64>)
+1809: p134 = new_with_vtable(descr=<SizeDescr 40>)
+1820: p135 = new_with_vtable(descr=<SizeDescr 24>)
+1838: p136 = new_with_vtable(descr=<SizeDescr 80>)
+1856: setfield_gc(p136, p73, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1874: setfield_gc(p136, ConstPtr(ptr137), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1878: setfield_gc(p136, p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+1889: setfield_gc(p136, p69, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+1900: setfield_gc(p136, p65, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+1911: setfield_gc(p136, p96, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+1915: setfield_gc(p136, p63, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+1926: setfield_gc(p136, ConstPtr(ptr138), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+1930: p139 = new_with_vtable(descr=<SizeDescr 16>)
+1948: setfield_gc(p139, f94, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1953: setfield_gc(p136, p139, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+1957: setfield_gc(p135, p136, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1961: setfield_gc(p135, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1969: p140 = new_with_vtable(descr=<SizeDescr 40>)
+1980: setfield_gc(p140, p54, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1991: p141 = new_with_vtable(descr=<SizeDescr 24>)
+2009: p142 = new_with_vtable(descr=<SizeDescr 24>)
+2020: setfield_gc(p142, p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2024: setfield_gc(p142, ConstPtr(ptr143), descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2028: setfield_gc(p141, p142, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2032: setfield_gc(p141, f94, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+2037: setfield_gc(p140, p141, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2041: p144 = new_with_vtable(descr=<SizeDescr 40>)
+2052: setfield_gc(p144, p54, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2056: setfield_gc(p144, p38, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2060: setfield_gc(p144, p39, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2071: setfield_gc(p144, ConstPtr(ptr145), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2075: setfield_gc(p140, p144, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2086: setfield_gc(p140, ConstPtr(ptr146), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2090: i147 = arraylen_gc(p80, descr=<ArrayP 8>)
+2090: setfield_gc(p134, p54, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2101: setfield_gc(p133, p73, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2119: setfield_gc(p133, ConstPtr(ptr148), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2130: setfield_gc(p134, ConstPtr(ptr149), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2134: setfield_gc(p134, p135, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2138: setfield_gc(p134, p140, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2142: setfield_gc(p133, p63, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2146: setfield_gc(p133, p69, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2150: setfield_gc(p133, p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2168: setfield_gc(p133, ConstPtr(ptr150), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2172: setfield_gc(p133, p65, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2176: jump(p133, 1, p134, p54, p95, i117, p69, p70, i72, ConstPtr(ptr150), p63, p80, 0, p65, p66, i68, descr=TargetToken(47968112))
+2320: --end of the loop--
[3e4c0a4619b15d4] jit-log-opt-loop}
[3e4c0a461d14879] {jit-backend
[3e4c0a461dbac8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf
[3e4c0a461dc5822] jit-backend-dump}
[3e4c0a461dd08c4] {jit-backend-addr
Loop 11 ((let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)) has address 0x7f6e13cf48ed to 0x7f6e13cf4bc0 (bootstrap 0x7f6e13cf4860)
       gc table: 0x7f6e13cf4740
       function: 0x7f6e13cf4860
         resops: 0x7f6e13cf48ed
       failures: 0x7f6e13cf4bc0
            end: 0x7f6e13cf4f62
[3e4c0a461dd3a4e] jit-backend-addr}
[3e4c0a461dd813e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4917 +0  B7020000
[3e4c0a461dd94af] jit-backend-dump}
[3e4c0a461ddcb96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf492d +0  BD020000
[3e4c0a461ddda86] jit-backend-dump}
[3e4c0a461de110e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4940 +0  E2020000
[3e4c0a461de1e4f] jit-backend-dump}
[3e4c0a461de51d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4954 +0  EA020000
[3e4c0a461de5f27] jit-backend-dump}
[3e4c0a461de939e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4968 +0  F2020000
[3e4c0a461dea0cf] jit-backend-dump}
[3e4c0a461ded2ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4982 +0  F4020000
[3e4c0a461dedf9c] jit-backend-dump}
[3e4c0a461df11bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf498f +0  03030000
[3e4c0a461df1e82] jit-backend-dump}
[3e4c0a461df4faa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf499c +0  12030000
[3e4c0a461df5c88] jit-backend-dump}
[3e4c0a461df8dcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf49ac +0  1E030000
[3e4c0a461df9a9e] jit-backend-dump}
[3e4c0a461dfcc03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf49c4 +0  22030000
[3e4c0a461dfd8d2] jit-backend-dump}
[3e4c0a461e00a34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf49ce +0  34030000
[3e4c0a461e016f7] jit-backend-dump}
[3e4c0a461e047df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf49dc +0  42030000
[3e4c0a461e054ab] jit-backend-dump}
[3e4c0a461e085df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf49ef +0  4B030000
[3e4c0a461e092ae] jit-backend-dump}
[3e4c0a461e0c43b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4a10 +0  46030000
[3e4c0a461e0d10a] jit-backend-dump}
[3e4c0a461e10257] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4a26 +0  4C030000
[3e4c0a461e10f29] jit-backend-dump}
[3e4c0a461e14026] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4a3b +0  53030000
[3e4c0a461e14ce9] jit-backend-dump}
[3e4c0a461e17e11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4a4f +0  5B030000
[3e4c0a461e18b26] jit-backend-dump}
[3e4c0a461e1bc0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4a5f +0  67030000
[3e4c0a461e1c8f9] jit-backend-dump}
[3e4c0a461e1fa0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4a7c +0  66030000
[3e4c0a461e206e7] jit-backend-dump}
[3e4c0a461e237b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4a86 +0  78030000
[3e4c0a461e24488] jit-backend-dump}
[3e4c0a461e275db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4a9a +0  80030000
[3e4c0a461e282ad] jit-backend-dump}
[3e4c0a461e2b3b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4aaa +0  8C030000
[3e4c0a461e2c076] jit-backend-dump}
[3e4c0a461e2f1bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4ad7 +0  7B030000
[3e4c0a461e2fea1] jit-backend-dump}
[3e4c0a461e32f74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4af6 +0  78030000
[3e4c0a461e33c40] jit-backend-dump}
[3e4c0a461e36e5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4b3d +0  63030000
[3e4c0a461e37b19] jit-backend-dump}
[3e4c0a461e3ac72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4b46 +0  76030000
[3e4c0a461e3b93e] jit-backend-dump}
[3e4c0a461e3ea0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4b5c +0  7C030000
[3e4c0a461e3f6ca] jit-backend-dump}
[3e4c0a461e427cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4b66 +0  8E030000
[3e4c0a461e43490] jit-backend-dump}
[3e4c0a461e46556] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4b73 +0  9D030000
[3e4c0a461e47216] jit-backend-dump}
[3e4c0a461e4a31c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4b84 +0  A8030000
[3e4c0a461e4afd3] jit-backend-dump}
[3e4c0a461e4e087] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4ba8 +0  A0030000
[3e4c0a461e4ed3a] jit-backend-dump}
[3e4c0a461e529bc] jit-backend}
[3e4c0a461e569ac] {jit-log-opt-loop
# Loop 11 ((let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)) : loop with 128 ops
[p0, p1]
+437: label(p0, p1, descr=TargetToken(48739440))
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+456: guard_class(p1, 16435208, descr=<Guard0x2ecbe80>) [p0, p1]
+475: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+479: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2ecbee0>) [p0, p1]
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+497: guard_not_invalidated(descr=<Guard0x2ee3610>) [p0, p1]
+497: guard_class(p0, 16504944, descr=<Guard0x2ee3658>) [p0, p1]
+516: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+520: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+524: guard_class(p7, 16479952, descr=<Guard0x2ee36a0>) [p0, p1]
+536: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+547: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2ee36e8>) [p0, p1]
+556: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+560: p12 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+564: guard_nonnull_class(p12, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2ecbf40>) [p0, p1]
+582: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+586: i15 = int_ge(i6, i14)
+589: guard_false(i15, descr=<Guard0x2ee3730>) [p0, p1]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
+595: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+599: guard_nonnull(p16, descr=<Guard0x2ee3778>) [p0, p1]
+615: i18 = instance_ptr_eq(p16, ConstPtr(ptr17))
+618: guard_true(i18, descr=<Guard0x2ee37c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+624: p19 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+628: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x2ecbfa0>) [p0, p1]
+648: i22 = int_ge(i6, 0)
+652: guard_true(i22, descr=<Guard0x2ee3808>) [p0, p1]
+658: i23 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+663: i24 = int_lt(i6, i23)
+666: guard_true(i24, descr=<Guard0x2ee3850>) [p0, p1]
+672: p25 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+677: guard_class(p25, 16623792, descr=<Guard0x2ee3898>) [p0, p1]
+691: p27 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+696: i28 = getarrayitem_gc_i(p27, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
+701: p29 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+705: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x2f3c020>) [p0, p1]
+724: p31 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+728: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x2f3c080>) [p0, p1]
+746: p33 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+746: i34 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+757: i36 = int_ge(i34, 0)
+761: guard_true(i36, descr=<Guard0x2ee38e0>) [p0, p1]
+767: i37 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+778: i38 = int_lt(i34, i37)
+781: guard_true(i38, descr=<Guard0x2ee3928>) [p0, p1]
+787: p39 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+791: guard_class(p39, 16622984, descr=<Guard0x2ee3970>) [p0, p1]
+803: p41 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+807: p42 = getarrayitem_gc_r(p41, i34, descr=<ArrayP 8>)
+819: guard_class(p42, ConstClass(W_Vector), descr=<Guard0x2ee39b8>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+832: i45 = int_ge(i28, 0)
+836: guard_true(i45, descr=<Guard0x2ee3a00>) [p0, p1]
+842: i46 = getfield_gc_i(p42, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+853: i47 = int_lt(i28, i46)
+856: guard_true(i47, descr=<Guard0x2ee3a48>) [p0, p1]
+862: p48 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+866: guard_class(p48, 16612728, descr=<Guard0x2ee3a90>) [p0, p1]
+878: p50 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+882: f51 = getarrayitem_gc_f(p50, i28, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+889: p52 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+900: p53 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+904: guard_nonnull_class(p53, ConstClass(W_CellFloatStrategy), descr=<Guard0x2f3c0e0>) [p0, p1]
+923: f55 = getfield_gc_f(p53, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+929: f56 = float_sub(f51, f55)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+933: i58 = float_gt(f56, 0.000000)
+948: guard_false(i58, descr=<Guard0x2ee3ad8>) [p0, p1]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
+954: i60 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+958: label(p7, i60, p1, p3, p11, p12, i14, p19, i23, p27, p31, p29, p41, i34, p52, p53, f55, descr=TargetToken(48739520))
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+1016: guard_not_invalidated(descr=<Guard0x2f3c140>) [i60, p7, p1, p3]
+1016: i61 = int_ge(i60, i14)
+1019: guard_false(i61, descr=<Guard0x2ee3b20>) [i60, p7, p1, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+1025: i62 = int_lt(i60, i23)
+1028: guard_true(i62, descr=<Guard0x2ee3b68>) [i60, p7, p1, p3]
+1034: i63 = getarrayitem_gc_i(p27, i60, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1039: p64 = getarrayitem_gc_r(p41, i34, descr=<ArrayP 8>)
+1044: guard_class(p64, ConstClass(W_Vector), descr=<Guard0x2ee3bb0>) [i60, p7, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1056: i67 = int_ge(i63, 0)
+1060: guard_true(i67, descr=<Guard0x2ee3bf8>) [i60, p7, p1, p3]
+1066: i68 = getfield_gc_i(p64, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1070: i69 = int_lt(i63, i68)
+1073: guard_true(i69, descr=<Guard0x2ee3c40>) [i60, p7, p1, p3]
+1079: p70 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1083: guard_class(p70, 16612728, descr=<Guard0x2ee3c88>) [i60, p7, p1, p3]
+1096: p72 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1100: f73 = getarrayitem_gc_f(p72, i63, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+1107: f74 = float_sub(f73, f55)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+1111: i76 = float_gt(f74, 0.000000)
+1126: guard_false(i76, descr=<Guard0x2ee3cd0>) [i60, p7, p1, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
+1132: i78 = int_add(i60, 1)
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+1136: i79 = arraylen_gc(p27, descr=<ArrayS 8>)
+1136: i80 = arraylen_gc(p41, descr=<ArrayP 8>)
+1136: jump(p7, i78, p1, p3, p11, p12, i14, p19, i23, p27, p31, p29, p41, i34, p52, p53, f55, descr=TargetToken(48739520))
+1152: --end of the loop--
[3e4c0a461ef182e] jit-log-opt-loop}
[3e4c0a462171aa3] {jit-backend
[3e4c0a4621ba651] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5090 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F873301000048FF0425201D750266662E0F1F84000000000048FF0425B0352902488B8D380100008139480E00000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813AB01E01000F8500000000488B5A08813B20BA00000F8500000000488B7310488B3D99FEFFFF4839FE0F8500000000488B7B184883FF017206813F601400000F8500000000488B77084883C6010F80000000004C8B42104939F00F84000000004C8B4B204D8B51084983FA01720741813AF08900000F85000000004D8B62084D39E00F85000000004983C0010F800000000048899D30010000488985400100004889BD480100004C898D500100004C899558010000669048FF0425D03529024939F00F84000000004D39E00F85000000004D89C24983C0010F8000000000E9D4FFFFFF0F1F400049BB50C7CE136E7F000041FFD3E9BBFEFFFFFF3598FDFFFF49BB884FCF136E7F000041534D8D9B7860FFFF41FFE3FF3584FDFFFF49BB984FCF136E7F000041534D8D9B6860FFFF41FFE3FF3570FDFFFF49BBA84FCF136E7F000041534D8D9B5860FFFF41FFE3FF355CFDFFFF49BBB84FCF136E7F000041534D8D9B4860FFFF41FFE3FF3548FDFFFF49BBC84FCF136E7F000041534D8D9B3860FFFF41FFE3FF353CFDFFFF49BBD84FCF136E7F000041534D8D9B2860FFFF41FFE3FF3528FDFFFF49BBE84FCF136E7F000041534D8D9B1860FFFF41FFE3FF3514FDFFFF49BBF84FCF136E7F000041534D8D9B0860FFFF41FFE3FF3500FDFFFF49BB0850CF136E7F000041534D8D9BF85FFFFF41FFE3FF35ECFCFFFF49BB1850CF136E7F000041534D8D9BE85FFFFF41FFE3FF35D8FCFFFF49BB2850CF136E7F000041534D8D9BD85FFFFF41FFE3FF35C4FCFFFF49BB3850CF136E7F000041534D8D9BC85FFFFF41FFE3FF35B0FCFFFF49BB4850CF136E7F000041534D8D9BB85FFFFF41FFE3FF359CFCFFFF49BB5850CF136E7F000041534D8D9BA85FFFFF41FFE3FF3588FCFFFF49BB6850CF136E7F000041534D8D9B985FFFFF41FFE3FF3574FCFFFF49BB7850CF136E7F000041534D8D9B885FFFFF41FFE3
[3e4c0a4621c15cf] jit-backend-dump}
[3e4c0a4621cbe0e] {jit-backend-addr
Loop 12 ((let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 AppRand61)) has address 0x7f6e13cf51ad to 0x7f6e13cf52e0 (bootstrap 0x7f6e13cf5120)
       gc table: 0x7f6e13cf5090
       function: 0x7f6e13cf5120
         resops: 0x7f6e13cf51ad
       failures: 0x7f6e13cf52e0
            end: 0x7f6e13cf54b2
[3e4c0a4621ced10] jit-backend-addr}
[3e4c0a4621d332d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf51d7 +0  17010000
[3e4c0a4621d4629] jit-backend-dump}
[3e4c0a4621d7b2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf51ed +0  1D010000
[3e4c0a4621d8a0a] jit-backend-dump}
[3e4c0a4621dbdd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5200 +0  42010000
[3e4c0a4621dcb54] jit-backend-dump}
[3e4c0a4621dfdeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5210 +0  4E010000
[3e4c0a4621e0b65] jit-backend-dump}
[3e4c0a4621e3d08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5224 +0  56010000
[3e4c0a4621e4a76] jit-backend-dump}
[3e4c0a4621e7baa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf523a +0  5C010000
[3e4c0a4621e88de] jit-backend-dump}
[3e4c0a4621eb9a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5248 +0  6A010000
[3e4c0a4621ec69e] jit-backend-dump}
[3e4c0a4621ef780] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5255 +0  79010000
[3e4c0a4621f0442] jit-backend-dump}
[3e4c0a4621f34f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5270 +0  7A010000
[3e4c0a4621f41cb] jit-backend-dump}
[3e4c0a4621f72bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf527d +0  89010000
[3e4c0a4621f7fa7] jit-backend-dump}
[3e4c0a4621fb045] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5287 +0  9B010000
[3e4c0a4621fbd42] jit-backend-dump}
[3e4c0a4621feecc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf52bd +0  9D010000
[3e4c0a4621ffb95] jit-backend-dump}
[3e4c0a462202ccc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf52c6 +0  B0010000
[3e4c0a4622039a8] jit-backend-dump}
[3e4c0a462206ad9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf52d3 +0  BF010000
[3e4c0a4622077ae] jit-backend-dump}
[3e4c0a46220b442] jit-backend}
[3e4c0a46220f0fe] {jit-log-opt-loop
# Loop 12 ((let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 AppRand61)) : loop with 59 ops
[p0, p1]
+293: label(p0, p1, descr=TargetToken(48739600))
+312: guard_class(p1, 16435208, descr=<Guard0x2f3c1a0>) [p0, p1]
+331: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+335: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2f3c200>) [p0, p1]
debug_merge_point(0, 0, '(+ n 1)')
+353: guard_not_invalidated(descr=<Guard0x2ee3d18>) [p0, p1]
+353: guard_class(p0, 16504944, descr=<Guard0x2ee3d60>) [p0, p1]
+372: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+376: guard_class(p6, 16479200, descr=<Guard0x2ee3da8>) [p0, p1]
+388: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+399: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x2ee3df0>) [p0, p1]
+408: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+412: guard_nonnull_class(p10, ConstClass(W_Fixnum), descr=<Guard0x2f3c260>) [p0, p1]
+430: i12 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+434: i14 = int_add_ovf(i12, 1)
+438: guard_no_overflow(descr=<Guard0x2ee3e38>) [p0, p1]
debug_merge_point(0, 0, '(let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))')
debug_merge_point(0, 0, '(= kk5209 AppRand56)')
+444: i15 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+448: i16 = int_eq(i15, i14)
+451: guard_false(i16, descr=<Guard0x2ee3e80>) [p0, p1]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61))))')
debug_merge_point(0, 0, '(let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))')
debug_merge_point(0, 0, '(= kk5209 CellRef(kp))')
+457: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+461: p18 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+465: guard_nonnull_class(p18, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f3c2c0>) [p0, p1]
+484: i20 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+488: i21 = int_eq(i15, i20)
+491: guard_true(i21, descr=<Guard0x2ee3ec8>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)) from (void)')
debug_merge_point(0, 0, '(+ kk5209 1)')
+497: i23 = int_add_ovf(i15, 1)
+501: guard_no_overflow(descr=<Guard0x2ee3f10>) [p0, p1]
debug_merge_point(0, 0, '(doloop5207 AppRand61)')
debug_merge_point(0, 0, '(let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 AppRand61)')
+507: label(p6, i23, p1, p3, p10, i14, p17, p18, i20, descr=TargetToken(48739680))
debug_merge_point(0, 0, '(+ n 1)')
+552: guard_not_invalidated(descr=<Guard0x2f3c320>) [i23, p6, p1, p3]
debug_merge_point(0, 0, '(let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))')
debug_merge_point(0, 0, '(= kk5209 AppRand56)')
+552: i24 = int_eq(i23, i14)
+555: guard_false(i24, descr=<Guard0x2ee3f58>) [i23, p6, p1, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61))))')
debug_merge_point(0, 0, '(let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))')
debug_merge_point(0, 0, '(= kk5209 CellRef(kp))')
+561: i25 = int_eq(i23, i20)
+564: guard_true(i25, descr=<Guard0x2ee3fa0>) [i23, p6, p1, p3]
debug_merge_point(0, 0, '(if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)) from (void)')
debug_merge_point(0, 0, '(+ kk5209 1)')
+570: i27 = int_add_ovf(i23, 1)
+577: guard_no_overflow(descr=<Guard0x2f40020>) [i23, p6, p1, p3]
debug_merge_point(0, 0, '(doloop5207 AppRand61)')
debug_merge_point(0, 0, '(let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 AppRand61)')
+583: jump(p6, i27, p1, p3, p10, i14, p17, p18, i20, descr=TargetToken(48739680))
+592: --end of the loop--
[3e4c0a46223f919] jit-log-opt-loop}
[3e4c0a4623ab408] {jit-backend
[3e4c0a4623ddb37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf
[3e4c0a4623e3f0b] jit-backend-dump}
[3e4c0a4623ee316] {jit-backend-addr
Loop 13 ((let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)) from (vector-set! AppRand2 j4995 x)) has address 0x7f6e13cf568d to 0x7f6e13cf57b0 (bootstrap 0x7f6e13cf5600)
       gc table: 0x7f6e13cf5590
       function: 0x7f6e13cf5600
         resops: 0x7f6e13cf568d
       failures: 0x7f6e13cf57b0
            end: 0x7f6e13cf5912
[3e4c0a4623f0f5e] jit-backend-addr}
[3e4c0a4623f7f4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf56a4 +0  1A010000
[3e4c0a4623f9405] jit-backend-dump}
[3e4c0a4623fcf7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf56bb +0  1F010000
[3e4c0a4623fddca] jit-backend-dump}
[3e4c0a462401043] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf56d1 +0  25010000
[3e4c0a462401d95] jit-backend-dump}
[3e4c0a46240518f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf56df +0  4F010000
[3e4c0a462405e8c] jit-backend-dump}
[3e4c0a4624091ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf56eb +0  5F010000
[3e4c0a462409f02] jit-backend-dump}
[3e4c0a46240d0e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf56ff +0  67010000
[3e4c0a46240ddf7] jit-backend-dump}
[3e4c0a462411174] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5716 +0  6C010000
[3e4c0a462411eab] jit-backend-dump}
[3e4c0a462415139] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5724 +0  7A010000
[3e4c0a462415e4b] jit-backend-dump}
[3e4c0a46241906e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5731 +0  89010000
[3e4c0a462419d80] jit-backend-dump}
[3e4c0a46241ceab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf574d +0  89010000
[3e4c0a46241dbd3] jit-backend-dump}
[3e4c0a462420da0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5764 +0  8E010000
[3e4c0a462421ad1] jit-backend-dump}
[3e4c0a462425713] jit-backend}
[3e4c0a4624292a9] {jit-log-opt-loop
# Loop 13 ((let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)) from (vector-set! AppRand2 j4995 x)) : entry bridge with 28 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)) from (vector-set! AppRand2 j4995 x)')
+261: guard_class(p0, 16504944, descr=<Guard0x2f3c380>) [p1, p0]
+280: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+284: guard_class(p1, 16435208, descr=<Guard0x2f40068>) [p1, p0]
+303: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+307: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x2f3c3e0>) [p1, p0]
debug_merge_point(0, 0, '(+ kk5209 1)')
+325: guard_not_invalidated(descr=<Guard0x2f400b0>) [p1, p0]
+325: i7 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+329: i9 = int_add_ovf(i7, 1)
+333: guard_no_overflow(descr=<Guard0x2f400f8>) [p1, p0]
debug_merge_point(0, 0, '(doloop5207 AppRand61)')
+339: guard_class(p3, 16479200, descr=<Guard0x2f40140>) [p1, p0]
+351: p11 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+362: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x2f40188>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 AppRand61)')
+371: p13 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+375: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x2f3c440>) [p1, i9, p3]
+394: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+398: i17 = int_add_ovf(i15, 1)
+402: guard_no_overflow(descr=<Guard0x2f3c4a0>) [p1, i9, p3]
+408: p18 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+412: guard_nonnull(p18, descr=<Guard0x2f3c500>) [p1, i9, p3]
+421: guard_subclass(p18, ConstClass(W_Cell), descr=<Guard0x2f3c560>) [p1, i9, p3]
+449: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+453: guard_nonnull_class(p20, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f3c5c0>) [p1, i9, p3]
+472: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+476: jump(p3, i9, p1, p5, p13, i17, p18, p20, i22, descr=TargetToken(48739680))
+544: --end of the loop--
[3e4c0a46244970a] jit-log-opt-loop}
[3e4c0a4626b2d40] {jit-backend
[3e4c0a46272e726] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5ba
[3e4c0a462739d2c] jit-backend-dump}
[3e4c0a46274503c] {jit-backend-addr
Loop 14 ((- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)) has address 0x7f6e13cf5d7d to 0x7f6e13cf60c0 (bootstrap 0x7f6e13cf5cf0)
       gc table: 0x7f6e13cf5ba0
       function: 0x7f6e13cf5cf0
         resops: 0x7f6e13cf5d7d
       failures: 0x7f6e13cf60c0
            end: 0x7f6e13cf64ca
[3e4c0a462747ec3] jit-backend-addr}
[3e4c0a46274c5ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5d94 +0  56030000
[3e4c0a46274da28] jit-backend-dump}
[3e4c0a462751008] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5da9 +0  5D030000
[3e4c0a462751ec3] jit-backend-dump}
[3e4c0a4627551f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5dbd +0  65030000
[3e4c0a462755f6b] jit-backend-dump}
[3e4c0a462759239] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5dd7 +0  67030000
[3e4c0a462759f05] jit-backend-dump}
[3e4c0a46275d100] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5df3 +0  67030000
[3e4c0a46275ddc3] jit-backend-dump}
[3e4c0a462760fdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e07 +0  6F030000
[3e4c0a462761ca5] jit-backend-dump}
[3e4c0a462764efc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e1b +0  77030000
[3e4c0a462765ba3] jit-backend-dump}
[3e4c0a462768e03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e31 +0  7D030000
[3e4c0a462769ab7] jit-backend-dump}
[3e4c0a46276cd08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e46 +0  84030000
[3e4c0a46276d9fe] jit-backend-dump}
[3e4c0a462770d04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e52 +0  8E030000
[3e4c0a4627719ae] jit-backend-dump}
[3e4c0a462774bd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e64 +0  92030000
[3e4c0a46277587b] jit-backend-dump}
[3e4c0a462778ac0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e71 +0  9B030000
[3e4c0a462779767] jit-backend-dump}
[3e4c0a46277c98d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e7e +0  A4030000
[3e4c0a46277d637] jit-backend-dump}
[3e4c0a462780888] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e88 +0  B0030000
[3e4c0a462781532] jit-backend-dump}
[3e4c0a4627847f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e95 +0  B9030000
[3e4c0a4627854dc] jit-backend-dump}
[3e4c0a4627887b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5eb0 +0  B4030000
[3e4c0a462789451] jit-backend-dump}
[3e4c0a46278c6d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5ec6 +0  B4030000
[3e4c0a46278d38c] jit-backend-dump}
[3e4c0a4627905d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5edd +0  B9030000
[3e4c0a46279127e] jit-backend-dump}
[3e4c0a4627944d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5eea +0  C8030000
[3e4c0a462795182] jit-backend-dump}
[3e4c0a462798399] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5efa +0  D4030000
[3e4c0a462799043] jit-backend-dump}
[3e4c0a46279c29d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5f11 +0  D9030000
[3e4c0a46279cf85] jit-backend-dump}
[3e4c0a4627a024d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5f1f +0  E7030000
[3e4c0a4627a0f1c] jit-backend-dump}
[3e4c0a4627a421e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5f37 +0  EB030000
[3e4c0a4627a4ee7] jit-backend-dump}
[3e4c0a4627a80f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5f44 +0  FA030000
[3e4c0a4627a8dc3] jit-backend-dump}
[3e4c0a4627ac014] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5f52 +0  08040000
[3e4c0a4627acd0b] jit-backend-dump}
[3e4c0a4627b0111] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5f6a +0  0C040000
[3e4c0a4627b0de6] jit-backend-dump}
[3e4c0a4627b4083] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5f81 +0  11040000
[3e4c0a4627b4d37] jit-backend-dump}
[3e4c0a4627b7f66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5f8f +0  1F040000
[3e4c0a4627b8c04] jit-backend-dump}
[3e4c0a4627bbe05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5fa2 +0  28040000
[3e4c0a4627bcab9] jit-backend-dump}
[3e4c0a4627bfcdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5fb7 +0  2F040000
[3e4c0a4627c0989] jit-backend-dump}
[3e4c0a4627c3bc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5fc0 +0  42040000
[3e4c0a4627c487b] jit-backend-dump}
[3e4c0a4627c7a70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5fd6 +0  48040000
[3e4c0a4627c8714] jit-backend-dump}
[3e4c0a4627cb91e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5fe3 +0  57040000
[3e4c0a4627cc5c9] jit-backend-dump}
[3e4c0a4627cf7a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5fef +0  67040000
[3e4c0a4627d0456] jit-backend-dump}
[3e4c0a4627d367c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6003 +0  6F040000
[3e4c0a4627d435d] jit-backend-dump}
[3e4c0a4627d7552] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6026 +0  68040000
[3e4c0a4627d81ff] jit-backend-dump}
[3e4c0a4627db416] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf603d +0  6D040000
[3e4c0a4627dc0bd] jit-backend-dump}
[3e4c0a4627dfce6] jit-backend}
[3e4c0a4627e3bd8] {jit-log-opt-loop
# Loop 14 ((- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)) : entry bridge with 90 ops
[p0, p1]
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+485: guard_not_invalidated(descr=<Guard0x2f3c620>) [p1, p0]
+485: guard_class(p0, 16504592, descr=<Guard0x2f401d0>) [p1, p0]
+504: f3 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+509: p4 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+513: guard_class(p4, 16479952, descr=<Guard0x2f40218>) [p1, p0]
+525: p6 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+536: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x2f40260>) [p1, p0]
+545: p8 = getfield_gc_r(p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+549: p9 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+553: guard_nonnull_class(p9, ConstClass(W_CellFloatStrategy), descr=<Guard0x2f3c680>) [p1, p0]
+571: f11 = getfield_gc_f(p9, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+576: f12 = float_sub(f3, f11)
+580: guard_class(p1, 16435920, descr=<Guard0x2f402a8>) [p1, p0]
+599: p14 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+610: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x2f402f0>) [p1, p0]
+619: p16 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+623: p17 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+627: guard_class(p17, 16435208, descr=<Guard0x2f40338>) [p1, p0]
+639: p19 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+643: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x2f3c6e0>) [p1, p0]
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+661: i22 = float_gt(f12, 0.000000)
+676: guard_false(i22, descr=<Guard0x2f40380>) [p1, p0]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
+682: guard_class(p16, 16504944, descr=<Guard0x2f403c8>) [p1, p0]
+694: p24 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(+ k 1)')
+698: i25 = getfield_gc_i(p16, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+702: i27 = int_add_ovf(i25, 1)
+706: guard_no_overflow(descr=<Guard0x2f40410>) [p1, p0]
debug_merge_point(0, 0, '(doloop AppRand14)')
+712: guard_class(p24, 16479952, descr=<Guard0x2f40458>) [p1, p0]
+725: p29 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+729: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x2f404a0>) [p1, p0]
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+738: i32 = int_ge(i27, 1)
+742: guard_true(i32, descr=<Guard0x2f3c740>) [p17, i27, p24]
+748: p33 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+752: guard_nonnull(p33, descr=<Guard0x2f3c7a0>) [p17, i27, p24]
+761: guard_subclass(p33, ConstClass(W_Cell), descr=<Guard0x2f3c800>) [p17, i27, p24]
+788: p35 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+792: guard_nonnull_class(p35, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f3c860>) [p17, i27, p24]
+810: i37 = getfield_gc_i(p35, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+814: i39 = int_ge(i37, -9223372036854775807)
+827: guard_true(i39, descr=<Guard0x2f3c8c0>) [p17, i27, p24]
+833: p40 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+837: guard_nonnull(p40, descr=<Guard0x2f3c920>) [p17, i27, p24]
+853: i42 = instance_ptr_eq(p40, ConstPtr(ptr41))
+856: guard_true(i42, descr=<Guard0x2f3c980>) [p17, i27, p24]
+862: p43 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+866: guard_nonnull_class(p43, ConstClass(W_Vector), descr=<Guard0x2f3c9e0>) [p17, i27, p24]
+885: i45 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+889: i47 = int_ge(i45, 1)
+893: guard_true(i47, descr=<Guard0x2f3ca40>) [p17, i27, p24]
+899: p48 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+903: guard_nonnull_class(p48, 16623792, descr=<Guard0x2f3caa0>) [p17, i27, p24]
+923: p50 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+927: guard_nonnull(p50, descr=<Guard0x2f3cb00>) [p17, i27, p24]
+936: guard_gc_type(p50, 520, descr=<Guard0x2f3cb60>) [p17, i27, p24]
+950: i52 = arraylen_gc(p50, descr=<ArrayS 8>)
+950: p53 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+954: guard_nonnull_class(p53, ConstClass(W_Vector), descr=<Guard0x2f3cbc0>) [p17, i27, p24]
+974: p55 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+978: guard_nonnull_class(p55, ConstClass(W_Fixnum), descr=<Guard0x2f3cc20>) [p17, i27, p24]
+997: p57 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+997: i58 = getfield_gc_i(p55, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1001: i60 = int_ge(i58, 0)
+1005: guard_true(i60, descr=<Guard0x2f3cc80>) [p17, i27, p24]
+1011: i62 = int_le(i58, 9223372036854775806)
+1024: guard_true(i62, descr=<Guard0x2f3cce0>) [p17, i27, p24]
+1030: i63 = getfield_gc_i(p53, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1041: i65 = int_ge(i63, 1)
+1045: guard_true(i65, descr=<Guard0x2f3cd40>) [p17, i27, p24]
+1051: i66 = int_lt(i58, i63)
+1054: guard_true(i66, descr=<Guard0x2f3cda0>) [p17, i27, p24]
+1060: p67 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1064: guard_nonnull_class(p67, 16622984, descr=<Guard0x2f3ce00>) [p17, i27, p24]
+1082: p69 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1086: guard_nonnull(p69, descr=<Guard0x2f3ce60>) [p17, i27, p24]
+1095: guard_gc_type(p69, 3592, descr=<Guard0x2f3cec0>) [p17, i27, p24]
+1107: i71 = arraylen_gc(p69, descr=<ArrayP 8>)
+1107: p72 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+1118: guard_nonnull(p72, descr=<Guard0x2f3cf20>) [p17, i27, p24]
+1127: guard_subclass(p72, ConstClass(W_Cell), descr=<Guard0x2f3cf80>) [p17, i27, p24]
+1162: p74 = getfield_gc_r(p72, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1166: guard_nonnull_class(p74, ConstClass(W_CellFloatStrategy), descr=<Guard0x2f3cfe0>) [p17, i27, p24]
+1185: f76 = getfield_gc_f(p74, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1191: jump(p24, i27, p17, p19, p33, p35, i37, p43, i45, p50, p55, p53, p69, i58, p72, p74, f76, descr=TargetToken(48739520))
+1312: --end of the loop--
[3e4c0a46283406b] jit-log-opt-loop}
[3e4c0a462bf77fe] {jit-backend
[3e4c0a462c782eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf66a0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F872302000048FF04252036290266662E0F1F84000000000048FF042590372902488B8D380100008139480E00000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813AF01B01000F8500000000488B5A10488B7208813E30B700000F8500000000488B7E104C8B0545FEFFFF4C39C70F85000000004C8B46184983F8017207418138601400000F8500000000498B78084839FB0F8F000000004989D94883C3010F80000000004C8B56284983FA01720741813AF08C00000F85000000004C8B66204983FC01720841813C24601400000F85000000004983F9000F8C000000004D8B6A084D39E90F8D000000004D8B721841813EC8EB02000F85000000004D8B72104F8B7CCE1041813FF08C00000F85000000004D8B4C24084983F9000F8C00000000498B4F084939C90F8D00000000498B4F188139B8C302000F8500000000498B4F10F2420F1044C910488B4A184883F90172068139201200000F8500000000F20F104908F20F58C84889B530010000488985400100004C8985480100004C8995500100004C89A558010000666666662E0F1F84000000000048FF0425B03729024839FB0F8F000000004989DC4883C3010F80000000004983FC000F8C000000004D39EC0F8D000000004F8B54E61041813AF08C00000F85000000004D8B42084D39C10F8D000000004D8B4218418138B8C302000F85000000004D8B4210F2430F1044C810F20F58C8E98BFFFFFF66662E0F1F84000000000049BB50C7CE136E7F000041FFD3E9CBFDFFFFFF3558FCFFFF49BBF064CF136E7F000041534D8D9B104BFFFF41FFE3FF3544FCFFFF49BB0065CF136E7F000041534D8D9B004BFFFF41FFE3FF3530FCFFFF49BB1065CF136E7F000041534D8D9BF04AFFFF41FFE3FF351CFCFFFF49BB2065CF136E7F000041534D8D9BE04AFFFF41FFE3FF3508FCFFFF49BB3065CF136E7F000041534D8D9BD04AFFFF41FFE3FF35FCFBFFFF49BB4065CF136E7F000041534D8D9BC04AFFFF41FFE3FF35E8FBFFFF49BB5065CF136E7F000041534D8D9BB04AFFFF41FFE3FF35D4FBFFFF49BB6065CF136E7F000041534D8D9BA04AFFFF41FFE3FF35C0FBFFFF49BB7065CF136E7F000041534D8D9B904AFFFF41FFE3FF35ACFBFFFF49BB8065CF136E7F000041534D8D9B804AFFFF41FFE3FF3598FBFFFF49BB9065CF136E7F000041534D8D9B704AFFFF41FFE3FF3584FBFFFF49BBA065CF136E7F000041534D8D9B604AFFFF41FFE3FF3570FBFFFF49BBB065CF136E7F000041534D8D9B504AFFFF41FFE3FF355CFBFFFF49BBC065CF136E7F000041534D8D9B404AFFFF41FFE3FF3548FBFFFF49BBD065CF136E7F000041534D8D9B304AFFFF41FFE3FF3534FBFFFF49BBE065CF136E7F000041534D8D9B204AFFFF41FFE3FF3520FBFFFF49BBF065CF136E7F000041534D8D9B104AFFFF41FFE3FF350CFBFFFF49BB0066CF136E7F000041534D8D9B004AFFFF41FFE3FF35F8FAFFFF49BB1066CF136E7F000041534D8D9BF049FFFF41FFE3FF35E4FAFFFF49BB2066CF136E7F000041534D8D9BF04EFFFF41FFE3FF35D0FAFFFF49BB3066CF136E7F000041534D8D9BE04EFFFF41FFE3FF35BCFAFFFF49BB4066CF136E7F000041534D8D9BD04EFFFF41FFE3FF35A8FAFFFF49BB5066CF136E7F000041534D8D9BC04EFFFF41FFE3FF3594FAFFFF49BB6066CF136E7F000041534D8D9BB04EFFFF41FFE3FF3580FAFFFF49BB7066CF136E7F000041534D8D9BA04EFFFF41FFE3FF356CFAFFFF49BB8066CF136E7F000041534D8D9B904EFFFF41FFE3FF3558FAFFFF49BB9066CF136E7F000041534D8D9B804EFFFF41FFE3
[3e4c0a462c81a26] jit-backend-dump}
[3e4c0a462c8cb15] {jit-backend-addr
Loop 15 ((let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)) has address 0x7f6e13cf680d to 0x7f6e13cf6a30 (bootstrap 0x7f6e13cf6780)
       gc table: 0x7f6e13cf66a0
       function: 0x7f6e13cf6780
         resops: 0x7f6e13cf680d
       failures: 0x7f6e13cf6a30
            end: 0x7f6e13cf6d36
[3e4c0a462c8fb1e] jit-backend-addr}
[3e4c0a462c943ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6837 +0  07020000
[3e4c0a462c957c4] jit-backend-dump}
[3e4c0a462c98e7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf684d +0  0D020000
[3e4c0a462c99db3] jit-backend-dump}
[3e4c0a462c9d4db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6860 +0  32020000
[3e4c0a462c9e2ee] jit-backend-dump}
[3e4c0a462ca1557] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6874 +0  3A020000
[3e4c0a462ca22c5] jit-backend-dump}
[3e4c0a462ca551f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6888 +0  42020000
[3e4c0a462ca6244] jit-backend-dump}
[3e4c0a462ca93b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf689f +0  47020000
[3e4c0a462caa0b8] jit-backend-dump}
[3e4c0a462cad1d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf68ac +0  56020000
[3e4c0a462cadec2] jit-backend-dump}
[3e4c0a462cb102d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf68b9 +0  65020000
[3e4c0a462cb1d21] jit-backend-dump}
[3e4c0a462cb4e52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf68d0 +0  6A020000
[3e4c0a462cb5b52] jit-backend-dump}
[3e4c0a462cb8d25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf68e8 +0  6E020000
[3e4c0a462cb9a1f] jit-backend-dump}
[3e4c0a462cbcb2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf68f2 +0  80020000
[3e4c0a462cbd81c] jit-backend-dump}
[3e4c0a462cc094a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf68ff +0  8F020000
[3e4c0a462cc1660] jit-backend-dump}
[3e4c0a462cc474e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6910 +0  9A020000
[3e4c0a462cc5448] jit-backend-dump}
[3e4c0a462cc857f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6926 +0  A0020000
[3e4c0a462cc9270] jit-backend-dump}
[3e4c0a462ccc3db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6935 +0  AD020000
[3e4c0a462ccd0bf] jit-backend-dump}
[3e4c0a462cd01c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6942 +0  BC020000
[3e4c0a462cd0eb6] jit-backend-dump}
[3e4c0a462cd3fcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6952 +0  C8020000
[3e4c0a462cd4cc9] jit-backend-dump}
[3e4c0a462cd7dfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6973 +0  C3020000
[3e4c0a462cd8ae2] jit-backend-dump}
[3e4c0a462cdbcbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf69bd +0  B1020000
[3e4c0a462cdc9a6] jit-backend-dump}
[3e4c0a462cdfae0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf69ca +0  C0020000
[3e4c0a462ce07dd] jit-backend-dump}
[3e4c0a462ce39ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf69d4 +0  D2020000
[3e4c0a462ce46de] jit-backend-dump}
[3e4c0a462ce782b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf69dd +0  E5020000
[3e4c0a462ce8522] jit-backend-dump}
[3e4c0a462ceb69c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf69ef +0  EF020000
[3e4c0a462cec37e] jit-backend-dump}
[3e4c0a462cef4da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf69fc +0  FE020000
[3e4c0a462cf01c4] jit-backend-dump}
[3e4c0a462cf32d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf6a0d +0  09030000
[3e4c0a462cf3fbe] jit-backend-dump}
[3e4c0a462cf7aff] jit-backend}
[3e4c0a462cfb707] {jit-log-opt-loop
# Loop 15 ((let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)) : loop with 95 ops
[p0, p1]
+373: label(p0, p1, descr=TargetToken(48739760))
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)')
+392: guard_class(p1, 16435208, descr=<Guard0x2f3d040>) [p0, p1]
+411: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+415: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2f3d0a0>) [p0, p1]
debug_merge_point(0, 0, '(> i5283 m)')
+433: guard_not_invalidated(descr=<Guard0x2f404e8>) [p0, p1]
+433: guard_class(p0, 16504240, descr=<Guard0x2f40530>) [p0, p1]
+452: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+456: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+460: guard_class(p7, 16478448, descr=<Guard0x2f40578>) [p0, p1]
+472: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+483: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2f405c0>) [p0, p1]
+492: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+496: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x2f3d100>) [p0, p1]
+515: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+519: i14 = int_gt(i6, i13)
+522: guard_false(i14, descr=<Guard0x2f40608>) [p0, p1]
debug_merge_point(0, 0, '(if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))')
debug_merge_point(0, 0, '(let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)))')
debug_merge_point(0, 0, '(+ i5283 1)')
+528: i16 = int_add_ovf(i6, 1)
+535: guard_no_overflow(descr=<Guard0x2f40650>) [p0, p1]
debug_merge_point(0, 0, '(matrix-ref a5002 i5283 k5277)')
+541: p17 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+545: guard_nonnull_class(p17, ConstClass(W_Vector), descr=<Guard0x2f3d160>) [p0, p1]
+564: p19 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+568: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x2f3d1c0>) [p0, p1]
+588: p21 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+588: i23 = int_ge(i6, 0)
+592: guard_true(i23, descr=<Guard0x2f40698>) [p0, p1]
+598: i24 = getfield_gc_i(p17, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+602: i25 = int_lt(i6, i24)
+605: guard_true(i25, descr=<Guard0x2f406e0>) [p0, p1]
+611: p26 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+615: guard_class(p26, 16622984, descr=<Guard0x2f40728>) [p0, p1]
+628: p28 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+632: p29 = getarrayitem_gc_r(p28, i6, descr=<ArrayP 8>)
+637: guard_class(p29, ConstClass(W_Vector), descr=<Guard0x2f40770>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+650: i31 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+655: i33 = int_ge(i31, 0)
+659: guard_true(i33, descr=<Guard0x2f407b8>) [p0, p1]
+665: i34 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+669: i35 = int_lt(i31, i34)
+672: guard_true(i35, descr=<Guard0x2f40800>) [p0, p1]
+678: p36 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+682: guard_class(p36, 16612728, descr=<Guard0x2f40848>) [p0, p1]
+694: p38 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+698: f39 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(+ sum AppRand75)')
+705: p40 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+709: guard_nonnull_class(p40, ConstClass(W_Flonum), descr=<Guard0x2f3d220>) [p0, p1]
+727: f42 = getfield_gc_f(p40, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+732: f43 = float_add(f42, f39)
debug_merge_point(0, 0, '(doloop5281 AppRand74 AppRand76)')
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)')
+736: label(p7, i16, f43, p1, p3, p11, i13, p17, i24, p28, p19, i31, descr=TargetToken(48739840))
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)')
debug_merge_point(0, 0, '(> i5283 m)')
+792: guard_not_invalidated(descr=<Guard0x2f3d280>) [f43, i16, p7, p1, p3]
+792: i44 = int_gt(i16, i13)
+795: guard_false(i44, descr=<Guard0x2f40890>) [f43, i16, p7, p1, p3]
debug_merge_point(0, 0, '(if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))')
debug_merge_point(0, 0, '(let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)))')
debug_merge_point(0, 0, '(+ i5283 1)')
+801: i46 = int_add_ovf(i16, 1)
+808: guard_no_overflow(descr=<Guard0x2f408d8>) [f43, i16, p7, p1, p3]
debug_merge_point(0, 0, '(matrix-ref a5002 i5283 k5277)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+814: i48 = int_ge(i16, 0)
+818: guard_true(i48, descr=<Guard0x2f40920>) [f43, i16, p7, p1, p3]
+824: i49 = int_lt(i16, i24)
+827: guard_true(i49, descr=<Guard0x2f40968>) [f43, i16, p7, p1, p3]
+833: p50 = getarrayitem_gc_r(p28, i16, descr=<ArrayP 8>)
+838: guard_class(p50, ConstClass(W_Vector), descr=<Guard0x2f409b0>) [f43, i16, p7, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+851: i52 = getfield_gc_i(p50, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+855: i53 = int_lt(i31, i52)
+858: guard_true(i53, descr=<Guard0x2f409f8>) [f43, i16, p7, p1, p3]
+864: p54 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+868: guard_class(p54, 16612728, descr=<Guard0x2f40a40>) [f43, i16, p7, p1, p3]
+881: p56 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+885: f57 = getarrayitem_gc_f(p56, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(+ sum AppRand75)')
+892: f58 = float_add(f43, f57)
debug_merge_point(0, 0, '(doloop5281 AppRand74 AppRand76)')
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)')
+896: i59 = arraylen_gc(p28, descr=<ArrayP 8>)
+896: jump(p7, i46, f58, p1, p3, p11, i13, p17, i24, p28, p19, i31, descr=TargetToken(48739840))
+912: --end of the loop--
[3e4c0a462d473ac] jit-log-opt-loop}
[3e4c0a4632c3414] {jit-backend
[3e4c0a4633b3c54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf
[3e4c0a4633c2ddb] jit-backend-dump}
[3e4c0a4633ce2b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7194 +0  28000000
[3e4c0a4633cf71e] jit-backend-dump}
[3e4c0a4633d37a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf76a5 +0  28000000
[3e4c0a4633d4735] jit-backend-dump}
[3e4c0a4633d79c0] {jit-backend-addr
bridge out of Guard 0x2ec7220 has address 0x7f6e13cf7190 to 0x7f6e13cf76a0
       gc table: 0x7f6e13cf7020
    jump target: 0x7f6e13cf7190
         resops: 0x7f6e13cf719e
       failures: 0x7f6e13cf76a0
            end: 0x7f6e13cf7b97
[3e4c0a4633da018] jit-backend-addr}
[3e4c0a4633dd6ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf71c0 +0  3B050000
[3e4c0a4633de54f] jit-backend-dump}
[3e4c0a4633e185e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf71db +0  3C050000
[3e4c0a4633e2592] jit-backend-dump}
[3e4c0a4633e576b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf71f2 +0  41050000
[3e4c0a4633e6496] jit-backend-dump}
[3e4c0a4633e973f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7200 +0  4F050000
[3e4c0a4633ea4a7] jit-backend-dump}
[3e4c0a4633ed6b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7209 +0  62050000
[3e4c0a4633ee404] jit-backend-dump}
[3e4c0a4633f1652] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7225 +0  62050000
[3e4c0a4633f2374] jit-backend-dump}
[3e4c0a4633f558d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7232 +0  71050000
[3e4c0a4633f62af] jit-backend-dump}
[3e4c0a4633f9485] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7248 +0  77050000
[3e4c0a4633fa19e] jit-backend-dump}
[3e4c0a4633fd346] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7262 +0  79050000
[3e4c0a4633fe09c] jit-backend-dump}
[3e4c0a463401324] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7274 +0  83050000
[3e4c0a463402024] jit-backend-dump}
[3e4c0a46340521c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7281 +0  92050000
[3e4c0a463405f3a] jit-backend-dump}
[3e4c0a46340910a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7299 +0  96050000
[3e4c0a463409e14] jit-backend-dump}
[3e4c0a46340cfe1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf72b7 +0  94050000
[3e4c0a46340dce1] jit-backend-dump}
[3e4c0a463410e92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf72c1 +0  A6050000
[3e4c0a463411ba2] jit-backend-dump}
[3e4c0a463414d75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf72d6 +0  AD050000
[3e4c0a463415a7b] jit-backend-dump}
[3e4c0a463418c92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf72e8 +0  B7050000
[3e4c0a4634199ad] jit-backend-dump}
[3e4c0a46341cb6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf730b +0  B0050000
[3e4c0a46341d88a] jit-backend-dump}
[3e4c0a463420a8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7328 +0  AF050000
[3e4c0a46342179d] jit-backend-dump}
[3e4c0a46342494f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf733a +0  B9050000
[3e4c0a463425686] jit-backend-dump}
[3e4c0a4634287d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7347 +0  C8050000
[3e4c0a4634294e8] jit-backend-dump}
[3e4c0a46342c6ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7362 +0  C9050000
[3e4c0a46342d417] jit-backend-dump}
[3e4c0a4634305c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7376 +0  D1050000
[3e4c0a463431300] jit-backend-dump}
[3e4c0a463434575] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7385 +0  DE050000
[3e4c0a463435297] jit-backend-dump}
[3e4c0a463438500] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf738f +0  F0050000
[3e4c0a463439212] jit-backend-dump}
[3e4c0a46343c45a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7399 +0  02060000
[3e4c0a46343d185] jit-backend-dump}
[3e4c0a463440343] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf73b2 +0  05060000
[3e4c0a46344105e] jit-backend-dump}
[3e4c0a463444216] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf73c7 +0  0C060000
[3e4c0a463444f41] jit-backend-dump}
[3e4c0a463448154] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf73d7 +0  18060000
[3e4c0a463448e73] jit-backend-dump}
[3e4c0a46344c090] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf73ef +0  1C060000
[3e4c0a46344cdd3] jit-backend-dump}
[3e4c0a46344ff6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf73fc +0  2B060000
[3e4c0a463450c9d] jit-backend-dump}
[3e4c0a463453e0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7415 +0  2E060000
[3e4c0a463454b30] jit-backend-dump}
[3e4c0a463457c95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf742a +0  35060000
[3e4c0a4634589d2] jit-backend-dump}
[3e4c0a46345bbf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf743a +0  41060000
[3e4c0a46345c93c] jit-backend-dump}
[3e4c0a46345fabf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7455 +0  42060000
[3e4c0a4634607db] jit-backend-dump}
[3e4c0a463463971] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7462 +0  51060000
[3e4c0a4634646ae] jit-backend-dump}
[3e4c0a4634677f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7473 +0  5C060000
[3e4c0a46346850d] jit-backend-dump}
[3e4c0a46346b6a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf749a +0  51060000
[3e4c0a46346c3ed] jit-backend-dump}
[3e4c0a46346f552] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf74aa +0  5D060000
[3e4c0a463470267] jit-backend-dump}
[3e4c0a4634733f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf74b8 +0  6B060000
[3e4c0a463474116] jit-backend-dump}
[3e4c0a4634772a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf75f3 +0  4C050000
[3e4c0a463477fa0] jit-backend-dump}
[3e4c0a46347b158] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7606 +0  55050000
[3e4c0a46347be64] jit-backend-dump}
[3e4c0a46347efb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7613 +0  64050000
[3e4c0a46347fccf] jit-backend-dump}
[3e4c0a4634830d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf0756 +0  366A0000
[3e4c0a463483e0c] jit-backend-dump}
[3e4c0a463487d48] jit-backend}
[3e4c0a46348b9b7] {jit-log-opt-bridge
# bridge out of Guard 0x2ec7220 with 191 ops
[p0, p1, i2, p3]
+390: guard_not_invalidated(descr=<Guard0x2f3d2e0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
+390: p4 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+401: guard_nonnull_class(p4, ConstClass(ForwardLink), descr=<Guard0x2f3d340>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(+ m AppRand42)')
+420: p6 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+438: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x2f40a88>) [p0, p1, i2, p3]
+447: p8 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+451: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x2f3d3a0>) [p0, p1, i2, p3]
+470: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+474: i12 = int_add_ovf(i10, 2)
+478: guard_no_overflow(descr=<Guard0x2f40ad0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+484: i13 = int_eq(i2, i12)
+487: guard_false(i13, descr=<Guard0x2f40b18>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+493: p14 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+497: p15 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+502: guard_nonnull_class(p15, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f3d400>) [p0, p1, i2, p3]
+521: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+525: i18 = int_eq(i2, i17)
+528: guard_false(i18, descr=<Guard0x2f40b60>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
+534: p19 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+538: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x2f3d460>) [p0, p1, i2, p3]
+556: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+560: p22 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+564: guard_nonnull_class(p22, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f3d4c0>) [p0, p1, i2, p3]
+582: i24 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+586: p25 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+590: i27 = int_ge(i2, 0)
+594: guard_true(i27, descr=<Guard0x2f40ba8>) [p0, p1, i2, p3]
+600: i28 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+604: i29 = int_lt(i2, i28)
+607: guard_true(i29, descr=<Guard0x2f40bf0>) [p0, p1, i2, p3]
+613: p30 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+624: guard_class(p30, 16622984, descr=<Guard0x2f40c38>) [p0, p1, i2, p3]
+637: p32 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+641: p33 = getarrayitem_gc_r(p32, i2, descr=<ArrayP 8>)
+653: guard_class(p33, ConstClass(W_Vector), descr=<Guard0x2f40c80>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+667: i36 = int_ge(i24, 0)
+671: guard_true(i36, descr=<Guard0x2f40cc8>) [p0, p1, i2, p3]
+677: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+689: i38 = int_lt(i24, i37)
+692: guard_true(i38, descr=<Guard0x2f40d10>) [p0, p1, i2, p3]
+698: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+703: guard_class(p39, 16612728, descr=<Guard0x2f40d58>) [p0, p1, i2, p3]
+716: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+721: f42 = getarrayitem_gc_f(p41, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+728: p43 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+732: guard_nonnull_class(p43, ConstClass(W_Flonum), descr=<Guard0x2f3d520>) [p0, p1, i2, p3]
+751: f45 = getfield_gc_f(p43, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+757: f46 = float_mul(f45, f42)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+762: p47 = getarrayitem_gc_r(p32, i2, descr=<ArrayP 8>)
+767: guard_class(p47, ConstClass(W_Vector), descr=<Guard0x2f40da0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+780: p49 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+784: guard_class(p49, 16612728, descr=<Guard0x2f40de8>) [p0, p1, i2, p3]
+798: i51 = getfield_gc_i(p47, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+802: i52 = int_lt(i24, i51)
+805: guard_true(i52, descr=<Guard0x2f40e30>) [p0, p1, i2, p3]
+811: p53 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+815: setarrayitem_gc(p53, i24, f46, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
+822: p54 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+826: guard_class(p25, 16505296, descr=<Guard0x2f3d580>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+838: guard_nonnull_class(p54, ConstClass(W_Fixnum), descr=<Guard0x2f3d5e0>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+858: i58 = getfield_gc_i(p54, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+863: i60 = int_add_ovf(i58, 1)
+867: guard_no_overflow(descr=<Guard0x2f40e78>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+873: i62 = int_eq(0, i60)
+877: guard_false(i62, descr=<Guard0x2f40ec0>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+883: i63 = int_eq(0, i24)
+887: guard_false(i63, descr=<Guard0x2f40f08>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+893: p64 = getarrayitem_gc_r(p32, i2, descr=<ArrayP 8>)
+905: guard_class(p64, ConstClass(W_Vector), descr=<Guard0x2f40f50>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+918: i66 = getfield_gc_i(p64, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+929: i67 = int_lt(0, i66)
+933: guard_true(i67, descr=<Guard0x2f40f98>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+939: p68 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+943: guard_class(p68, 16612728, descr=<Guard0x2f40fe0>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+955: p70 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+959: f71 = getarrayitem_gc_f(p70, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+965: i73 = int_ge(i17, 0)
+973: guard_true(i73, descr=<Guard0x2f41028>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+979: i74 = int_lt(i17, i28)
+986: guard_true(i74, descr=<Guard0x2f41070>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+992: p75 = getarrayitem_gc_r(p32, i17, descr=<ArrayP 8>)
+1004: guard_class(p75, ConstClass(W_Vector), descr=<Guard0x2f410b8>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1017: i77 = getfield_gc_i(p75, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1028: i78 = int_lt(0, i77)
+1032: guard_true(i78, descr=<Guard0x2f41100>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+1038: p79 = getfield_gc_r(p75, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1042: guard_class(p79, 16612728, descr=<Guard0x2f41148>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+1054: p81 = getfield_gc_r(p75, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1058: f82 = getarrayitem_gc_f(p81, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1064: p83 = getarrayitem_gc_r(p32, i2, descr=<ArrayP 8>)
+1069: guard_class(p83, ConstClass(W_Vector), descr=<Guard0x2f41190>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1081: i85 = getfield_gc_i(p83, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1085: i86 = int_lt(i24, i85)
+1088: guard_true(i86, descr=<Guard0x2f411d8>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+1094: p87 = getfield_gc_r(p83, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1098: guard_class(p87, 16612728, descr=<Guard0x2f41220>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+1111: p89 = getfield_gc_r(p83, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1115: f90 = getarrayitem_gc_f(p89, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+1122: f91 = float_mul(f82, f90)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+1127: f92 = float_sub(f71, f91)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1132: p93 = getarrayitem_gc_r(p32, i2, descr=<ArrayP 8>)
+1137: guard_class(p93, ConstClass(W_Vector), descr=<Guard0x2f41268>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1150: p95 = getfield_gc_r(p93, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1154: guard_class(p95, 16612728, descr=<Guard0x2f412b0>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+1166: i97 = getfield_gc_i(p93, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1170: i98 = int_lt(0, i97)
+1174: guard_true(i98, descr=<Guard0x2f412f8>) [p25, p19, p14, p21, p54, p4, p0, None, i2, p3]
+1180: p99 = getfield_gc_r(p93, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+1184: setarrayitem_gc(p99, 0, f92, descr=<ArrayF 8>)
+1190: p100 = new_with_vtable(descr=<SizeDescr 64>)
+1248: p101 = new_with_vtable(descr=<SizeDescr 16>)
+1259: setfield_gc(p101, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1263: p102 = new_with_vtable(descr=<SizeDescr 40>)
+1274: p103 = new_with_vtable(descr=<SizeDescr 24>)
+1285: setfield_gc(p103, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1289: setfield_gc(p103, i2, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1381: i104 = getfield_gc_i(p101, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1385: setfield_gc(p102, p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1410: setfield_gc(p100, ConstPtr(ptr105), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1414: setfield_gc(p100, p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1418: setfield_gc(p100, p101, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1422: setfield_gc(p100, p54, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1426: setfield_gc(p100, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1437: setfield_gc(p100, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1448: setfield_gc(p100, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1466: setfield_gc(p102, p103, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1470: setfield_gc(p102, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1481: setfield_gc(p102, ConstPtr(ptr106), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1485: i108 = int_ge(i104, 0)
+1489: guard_true(i108, descr=<Guard0x2f3d640>) [p102, p100, None, None, None, None, None, None, None, None, None]
+1495: i110 = int_le(i104, 9223372036854775806)
+1508: guard_true(i110, descr=<Guard0x2f3d6a0>) [p102, p100, None, None, None, None, None, None, None, None, None]
+1514: i111 = int_lt(i104, i28)
+1521: guard_true(i111, descr=<Guard0x2f3d700>) [p102, p100, None, None, None, None, None, None, None, None, None]
+1527: i112 = arraylen_gc(p32, descr=<ArrayP 8>)
+1527: jump(p100, 1, p102, p4, p54, i60, p21, p22, i24, p101, p19, p32, i104, p14, p15, i17, descr=TargetToken(47968112))
+1664: --end of the loop--
[3e4c0a463525a9a] jit-log-opt-bridge}
[3e4c0a4636b5076] {jit-backend
[3e4c0a4636ff474] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7cd
[3e4c0a463707b11] jit-backend-dump}
[3e4c0a463712234] {jit-backend-addr
Loop 17 ((let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)) from (vector-ref AppRand1 j)) has address 0x7f6e13cf7dfd to 0x7f6e13cf7fb0 (bootstrap 0x7f6e13cf7d70)
       gc table: 0x7f6e13cf7cd0
       function: 0x7f6e13cf7d70
         resops: 0x7f6e13cf7dfd
       failures: 0x7f6e13cf7fb0
            end: 0x7f6e13cf81ba
[3e4c0a463715202] jit-backend-addr}
[3e4c0a4637195da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7e14 +0  AA010000
[3e4c0a46371a914] jit-backend-dump}
[3e4c0a46371e00a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7e2a +0  B0010000
[3e4c0a46371ee8f] jit-backend-dump}
[3e4c0a46372236b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7e3d +0  D5010000
[3e4c0a463723129] jit-backend-dump}
[3e4c0a46372648a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7e4d +0  E1010000
[3e4c0a46372718a] jit-backend-dump}
[3e4c0a46372a360] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7e63 +0  E7010000
[3e4c0a46372b07c] jit-backend-dump}
[3e4c0a46372e35f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7e79 +0  ED010000
[3e4c0a46372f07b] jit-backend-dump}
[3e4c0a4637322b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7e97 +0  EB010000
[3e4c0a463732fad] jit-backend-dump}
[3e4c0a4637361ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7eab +0  F3010000
[3e4c0a463736eab] jit-backend-dump}
[3e4c0a46373a01c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7ec5 +0  F5010000
[3e4c0a46373ad50] jit-backend-dump}
[3e4c0a46373df3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7ee0 +0  F6010000
[3e4c0a46373ec48] jit-backend-dump}
[3e4c0a463741e28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7ef7 +0  FB010000
[3e4c0a463742b03] jit-backend-dump}
[3e4c0a463745cb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7f05 +0  09020000
[3e4c0a4637469a2] jit-backend-dump}
[3e4c0a463749b0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7f1d +0  0D020000
[3e4c0a46374a7fe] jit-backend-dump}
[3e4c0a46374da18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7f2a +0  1C020000
[3e4c0a46374e712] jit-backend-dump}
[3e4c0a463751975] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7f38 +0  2A020000
[3e4c0a463752669] jit-backend-dump}
[3e4c0a4637558aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7f46 +0  38020000
[3e4c0a4637565a7] jit-backend-dump}
[3e4c0a4637596fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf7f59 +0  41020000
[3e4c0a46375a3ee] jit-backend-dump}
[3e4c0a46375dffe] jit-backend}
[3e4c0a463761d66] {jit-log-opt-loop
# Loop 17 ((let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)) from (vector-ref AppRand1 j)) : entry bridge with 46 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)) from (vector-ref AppRand1 j)')
+309: guard_class(p1, 16435208, descr=<Guard0x2f3d760>) [p0, p1]
+328: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+332: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2f3d7c0>) [p0, p1]
debug_merge_point(0, 0, '(+ sum AppRand75)')
+350: guard_not_invalidated(descr=<Guard0x2f41340>) [p0, p1]
+350: guard_class(p0, 16504240, descr=<Guard0x2f41388>) [p0, p1]
+369: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+373: guard_class(p6, 16504240, descr=<Guard0x2f413d0>) [p0, p1]
+385: p8 = getfield_gc_r(p6, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+389: guard_nonnull_class(p8, ConstClass(W_Flonum), descr=<Guard0x2f3d820>) [p0, p1]
+407: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+411: guard_nonnull_class(p10, ConstClass(W_Flonum), descr=<Guard0x2f3d880>) [p0, p1]
+429: f12 = getfield_gc_f(p8, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+434: f13 = getfield_gc_f(p10, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+439: f14 = float_add(f12, f13)
debug_merge_point(0, 0, '(doloop5281 AppRand74 AppRand76)')
+443: p15 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+447: guard_class(p15, 16478448, descr=<Guard0x2f41418>) [p0, p1]
+459: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+470: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x2f41460>) [p0, p1]
+479: i19 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)')
+483: p20 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+487: guard_nonnull_class(p20, ConstClass(W_Fixnum), descr=<Guard0x2f3d8e0>) [p1, f14, i19, p15]
+505: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+509: p23 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+513: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x2f3d940>) [p1, f14, i19, p15]
+532: p25 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+536: guard_nonnull_class(p25, ConstClass(W_Fixnum), descr=<Guard0x2f3d9a0>) [p1, f14, i19, p15]
+555: p27 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+555: i28 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+559: i30 = int_ge(i28, 1)
+563: guard_true(i30, descr=<Guard0x2f3da00>) [p1, f14, i19, p15]
+569: p31 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+573: guard_nonnull_class(p31, 16622984, descr=<Guard0x2f3da60>) [p1, f14, i19, p15]
+593: p33 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+597: guard_nonnull(p33, descr=<Guard0x2f3dac0>) [p1, f14, i19, p15]
+606: guard_gc_type(p33, 3592, descr=<Guard0x2f3db20>) [p1, f14, i19, p15]
+620: i35 = arraylen_gc(p33, descr=<ArrayP 8>)
+620: i36 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+624: i38 = int_ge(i36, 0)
+628: guard_true(i38, descr=<Guard0x2f3db80>) [p1, f14, i19, p15]
+634: i40 = int_le(i36, 9223372036854775806)
+647: guard_true(i40, descr=<Guard0x2f3dbe0>) [p1, f14, i19, p15]
+653: jump(p15, i19, f14, p1, p3, p20, i22, p23, i28, p33, p25, i36, descr=TargetToken(48739840))
+736: --end of the loop--
[3e4c0a46378d7fb] jit-log-opt-loop}
[3e4c0a463e87cfe] {jit-backend
[3e4c0a463fbd388] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf
[3e4c0a463fd0735] jit-backend-dump}
[3e4c0a463fdc001] {jit-backend-addr
Loop 18 ((- *epsilon*) from (vector-ref AppRand1 j)) has address 0x7f6e13cf8a5d to 0x7f6e13cf90e0 (bootstrap 0x7f6e13cf89d0)
       gc table: 0x7f6e13cf8720
       function: 0x7f6e13cf89d0
         resops: 0x7f6e13cf8a5d
       failures: 0x7f6e13cf90e0
            end: 0x7f6e13cf9980
[3e4c0a463fdf06b] jit-backend-addr}
[3e4c0a463fe3a2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8a87 +0  83060000
[3e4c0a463fe4e52] jit-backend-dump}
[3e4c0a463fe86e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8a97 +0  8F060000
[3e4c0a463fe9625] jit-backend-dump}
[3e4c0a463feca28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8aab +0  97060000
[3e4c0a463fed7ec] jit-backend-dump}
[3e4c0a463ff0b59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8ac1 +0  9D060000
[3e4c0a463ff18bb] jit-backend-dump}
[3e4c0a463ff4b36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8aec +0  8E060000
[3e4c0a463ff587d] jit-backend-dump}
[3e4c0a463ff8a93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b00 +0  90060000
[3e4c0a463ff97d4] jit-backend-dump}
[3e4c0a463ffc9ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b0d +0  99060000
[3e4c0a463ffd737] jit-backend-dump}
[3e4c0a4640009af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b22 +0  9A060000
[3e4c0a464001705] jit-backend-dump}
[3e4c0a46400493a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b38 +0  9A060000
[3e4c0a46400565c] jit-backend-dump}
[3e4c0a46400887b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b42 +0  AC060000
[3e4c0a46400958e] jit-backend-dump}
[3e4c0a46400c78f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b58 +0  B2060000
[3e4c0a46400d48c] jit-backend-dump}
[3e4c0a4640106f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b66 +0  C0060000
[3e4c0a4640113f8] jit-backend-dump}
[3e4c0a46401465b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b73 +0  CF060000
[3e4c0a464015374] jit-backend-dump}
[3e4c0a4640185f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b84 +0  DA060000
[3e4c0a46401930b] jit-backend-dump}
[3e4c0a46401c56e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8ba4 +0  D6060000
[3e4c0a46401d274] jit-backend-dump}
[3e4c0a464020478] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8bae +0  E8060000
[3e4c0a4640211b5] jit-backend-dump}
[3e4c0a4640243e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8bbb +0  F7060000
[3e4c0a46402510f] jit-backend-dump}
[3e4c0a464028357] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8bcd +0  01070000
[3e4c0a464029072] jit-backend-dump}
[3e4c0a46402c298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8be3 +0  07070000
[3e4c0a46402cfba] jit-backend-dump}
[3e4c0a464030232] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8bf1 +0  15070000
[3e4c0a464030f4b] jit-backend-dump}
[3e4c0a4640341bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8c01 +0  21070000
[3e4c0a464034eba] jit-backend-dump}
[3e4c0a46403808d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8c3d +0  01070000
[3e4c0a464038da6] jit-backend-dump}
[3e4c0a46403bf7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8c4b +0  0F070000
[3e4c0a46403ccb6] jit-backend-dump}
[3e4c0a46403fefb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8c54 +0  22070000
[3e4c0a464040c2c] jit-backend-dump}
[3e4c0a464043e70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8c67 +0  2B070000
[3e4c0a464044bb6] jit-backend-dump}
[3e4c0a464047e7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8c71 +0  3D070000
[3e4c0a464048bac] jit-backend-dump}
[3e4c0a46404bdd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8c7f +0  4B070000
[3e4c0a46404cb06] jit-backend-dump}
[3e4c0a46404fd17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8c90 +0  56070000
[3e4c0a464050a51] jit-backend-dump}
[3e4c0a464053c86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8cb7 +0  4B070000
[3e4c0a4640549ae] jit-backend-dump}
[3e4c0a464057bda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8cd5 +0  49070000
[3e4c0a4640588e3] jit-backend-dump}
[3e4c0a46405ba9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8ce4 +0  56070000
[3e4c0a46405c7f0] jit-backend-dump}
[3e4c0a46405fa13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8cf4 +0  62070000
[3e4c0a46406071f] jit-backend-dump}
[3e4c0a464063891] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8d08 +0  6A070000
[3e4c0a46406457b] jit-backend-dump}
[3e4c0a46406770b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8d1d +0  71070000
[3e4c0a464068402] jit-backend-dump}
[3e4c0a46406b5eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8d2d +0  7D070000
[3e4c0a46406c2d2] jit-backend-dump}
[3e4c0a46406f7b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8d43 +0  83070000
[3e4c0a4640704fe] jit-backend-dump}
[3e4c0a464073963] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8d51 +0  91070000
[3e4c0a464074654] jit-backend-dump}
[3e4c0a46407795c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8d5d +0  A1070000
[3e4c0a464078631] jit-backend-dump}
[3e4c0a46407b8e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8d6a +0  B0070000
[3e4c0a46407c5ce] jit-backend-dump}
[3e4c0a46407f76e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8d80 +0  B6070000
[3e4c0a46408043d] jit-backend-dump}
[3e4c0a464083644] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8d8d +0  C5070000
[3e4c0a46408434a] jit-backend-dump}
[3e4c0a4640875c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8da8 +0  C6070000
[3e4c0a4640882c3] jit-backend-dump}
[3e4c0a46408b4cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8db8 +0  D2070000
[3e4c0a46408c1a2] jit-backend-dump}
[3e4c0a46408f33b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8dcf +0  D7070000
[3e4c0a464090026] jit-backend-dump}
[3e4c0a4640931e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8dd9 +0  E9070000
[3e4c0a464093ea4] jit-backend-dump}
[3e4c0a464097080] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8de6 +0  F8070000
[3e4c0a464097d6e] jit-backend-dump}
[3e4c0a46409af53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8df7 +0  03080000
[3e4c0a46409bc35] jit-backend-dump}
[3e4c0a46409ee0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8e1d +0  F9070000
[3e4c0a46409fb02] jit-backend-dump}
[3e4c0a4640a2d28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8e45 +0  ED070000
[3e4c0a4640a3a40] jit-backend-dump}
[3e4c0a4640a6bfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8e5a +0  F4070000
[3e4c0a4640a78f2] jit-backend-dump}
[3e4c0a4640aab30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8e6e +0  FC070000
[3e4c0a4640ab7ea] jit-backend-dump}
[3e4c0a4640ae980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8e86 +0  00080000
[3e4c0a4640af674] jit-backend-dump}
[3e4c0a4640b2878] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8ea3 +0  FF070000
[3e4c0a4640b3538] jit-backend-dump}
[3e4c0a4640b66c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8ead +0  11080000
[3e4c0a4640b73c8] jit-backend-dump}
[3e4c0a4640ba5d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8eba +0  20080000
[3e4c0a4640bb2a7] jit-backend-dump}
[3e4c0a4640be465] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8ecb +0  2B080000
[3e4c0a4640bf1ac] jit-backend-dump}
[3e4c0a4640c2489] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8f21 +0  0D080000
[3e4c0a4640c3174] jit-backend-dump}
[3e4c0a4640c63b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8f43 +0  07080000
[3e4c0a4640c707b] jit-backend-dump}
[3e4c0a4640ca245] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8f52 +0  0E080000
[3e4c0a4640caf36] jit-backend-dump}
[3e4c0a4640ce12b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8f5b +0  1B080000
[3e4c0a4640cedd8] jit-backend-dump}
[3e4c0a4640d1f56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8f6c +0  20080000
[3e4c0a4640d2c0f] jit-backend-dump}
[3e4c0a4640d5e01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8f7a +0  28080000
[3e4c0a4640d6ae6] jit-backend-dump}
[3e4c0a4640d9c70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8f8a +0  2E080000
[3e4c0a4640da926] jit-backend-dump}
[3e4c0a4640ddb1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8fac +0  22080000
[3e4c0a4640de7d5] jit-backend-dump}
[3e4c0a4640e194f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8fb5 +0  2F080000
[3e4c0a4640e2612] jit-backend-dump}
[3e4c0a4640e5801] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8fc6 +0  37080000
[3e4c0a4640e64ef] jit-backend-dump}
[3e4c0a4640e968b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8fd3 +0  43080000
[3e4c0a4640ea363] jit-backend-dump}
[3e4c0a4640ed54f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8fe3 +0  4C080000
[3e4c0a4640ee240] jit-backend-dump}
[3e4c0a4640f141f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9003 +0  45080000
[3e4c0a4640f2116] jit-backend-dump}
[3e4c0a4640f5317] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9021 +0  43080000
[3e4c0a4640f5fd7] jit-backend-dump}
[3e4c0a4640f92cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9030 +0  50080000
[3e4c0a4640f9f93] jit-backend-dump}
[3e4c0a4640fd126] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9040 +0  5C080000
[3e4c0a4640fde16] jit-backend-dump}
[3e4c0a464100fb9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9052 +0  66080000
[3e4c0a464101c91] jit-backend-dump}
[3e4c0a464104e4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf905f +0  75080000
[3e4c0a464105b0c] jit-backend-dump}
[3e4c0a464108cdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf906e +0  82080000
[3e4c0a464109986] jit-backend-dump}
[3e4c0a46410cb1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9077 +0  95080000
[3e4c0a46410d7dc] jit-backend-dump}
[3e4c0a464110963] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9088 +0  A0080000
[3e4c0a46411162c] jit-backend-dump}
[3e4c0a4641147ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9095 +0  AF080000
[3e4c0a4641154e7] jit-backend-dump}
[3e4c0a464118636] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf90a5 +0  BB080000
[3e4c0a464119324] jit-backend-dump}
[3e4c0a46411cfd7] jit-backend}
[3e4c0a464120f90] {jit-log-opt-loop
# Loop 18 ((- *epsilon*) from (vector-ref AppRand1 j)) : loop with 307 ops
[p0, p1]
+837: label(p0, p1, descr=TargetToken(49644112))
+856: guard_not_invalidated(descr=<Guard0x2f3dfa0>) [p1, p0]
+856: guard_class(p0, 16504944, descr=<Guard0x2f41850>) [p1, p0]
+875: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+879: guard_class(p3, 16480704, descr=<Guard0x2f41898>) [p1, p0]
+891: p5 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+902: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x2f418e0>) [p1, p0]
+911: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+915: guard_nonnull_class(p7, ConstClass(W_Flonum), descr=<Guard0x2f62020>) [p1, p0]
+933: f9 = getfield_gc_f(p7, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+938: f11 = float_sub(0.000000, f9)
+957: guard_class(p1, 16436632, descr=<Guard0x2f41928>) [p1, p0]
+976: p13 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+987: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x2f41970>) [p1, p0]
+996: p15 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1000: i16 = instance_ptr_eq(p0, p15)
+1003: guard_true(i16, descr=<Guard0x2f419b8>) [p1, p0]
+1009: f17 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.LetContSize1Flo.inst_vals_flo_0 40 pure>)
+1014: p18 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))')
+1018: guard_class(p18, 16435208, descr=<Guard0x2f41a00>) [p1, p0]
+1030: p20 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1034: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x2f62080>) [p1, p0]
debug_merge_point(0, 0, '(< AppRand16 AppRand17)')
+1052: i22 = float_lt(f17, f11)
+1056: guard_true(i22, descr=<Guard0x2f41a48>) [p1, p0]
debug_merge_point(0, 0, '(if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))')
debug_merge_point(0, 0, '(let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))))))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1062: p23 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+1066: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x2f620e0>) [p1, p0]
+1084: i25 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1088: i27 = int_ge(i25, 0)
+1092: guard_true(i27, descr=<Guard0x2f41a90>) [p1, p0]
+1098: i28 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1102: i29 = int_lt(i25, i28)
+1105: guard_true(i29, descr=<Guard0x2f41ad8>) [p1, p0]
+1111: p30 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1115: guard_class(p30, 16623792, descr=<Guard0x2f41b20>) [p1, p0]
+1128: p32 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1132: i33 = getarrayitem_gc_i(p32, i25, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand18 0)')
+1137: p34 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+1141: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x2f62140>) [p1, p0]
+1160: p36 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1160: i38 = int_ge(i33, 0)
+1164: guard_true(i38, descr=<Guard0x2f41b68>) [p1, p0]
+1170: i39 = getfield_gc_i(p34, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1174: i40 = int_lt(i33, i39)
+1177: guard_true(i40, descr=<Guard0x2f41bb0>) [p1, p0]
+1183: p41 = getfield_gc_r(p34, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1187: guard_class(p41, 16622984, descr=<Guard0x2f41bf8>) [p1, p0]
+1201: p43 = getfield_gc_r(p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1205: p44 = getarrayitem_gc_r(p43, i33, descr=<ArrayP 8>)
+1210: guard_class(p44, ConstClass(W_Vector), descr=<Guard0x2f41c40>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1223: i46 = getfield_gc_i(p44, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1227: i48 = int_lt(0, i46)
+1231: guard_true(i48, descr=<Guard0x2f41c88>) [p1, p0]
+1237: p49 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1241: guard_class(p49, 16612728, descr=<Guard0x2f41cd0>) [p1, p0]
+1253: p51 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1257: f53 = getarrayitem_gc_f(p51, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand19)')
+1262: f55 = float_sub(0.000000, f53)
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1281: i56 = getarrayitem_gc_i(p32, i25, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand21 CellRef(kp))')
+1286: p57 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+1290: p58 = getfield_gc_r(p57, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1294: guard_nonnull_class(p58, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f621a0>) [p1, p0]
+1313: i60 = getfield_gc_i(p58, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1317: i62 = int_ge(i56, 0)
+1321: guard_true(i62, descr=<Guard0x2f41d18>) [p1, p0]
+1327: i63 = int_lt(i56, i39)
+1330: guard_true(i63, descr=<Guard0x2f41d60>) [p1, p0]
+1336: p64 = getarrayitem_gc_r(p43, i56, descr=<ArrayP 8>)
+1341: guard_class(p64, ConstClass(W_Vector), descr=<Guard0x2f41da8>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1355: i67 = int_ge(i60, 0)
+1359: guard_true(i67, descr=<Guard0x2f41df0>) [p1, p0]
+1365: i68 = getfield_gc_i(p64, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1370: i69 = int_lt(i60, i68)
+1373: guard_true(i69, descr=<Guard0x2f41e38>) [p1, p0]
+1379: p70 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1384: guard_class(p70, 16612728, descr=<Guard0x2f41e80>) [p1, p0]
+1396: p72 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1401: f73 = getarrayitem_gc_f(p72, i60, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(/ AppRand20 AppRand22)')
+1408: i75 = float_eq(f73, 0.000000)
+1429: guard_false(i75, descr=<Guard0x2f41ec8>) [p1, p0]
+1435: f76 = float_truediv(f55, f73)
debug_merge_point(0, 0, '(let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))')
debug_merge_point(0, 0, '(< q CellRef(q1))')
+1439: p77 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1443: p78 = getfield_gc_r(p77, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1447: guard_nonnull_class(p78, ConstClass(W_CellFloatStrategy), descr=<Guard0x2f62200>) [p1, p0]
+1465: f80 = getfield_gc_f(p78, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1470: i81 = float_lt(f76, f80)
+1474: guard_false(i81, descr=<Guard0x2f41f10>) [p1, p0]
debug_merge_point(0, 0, '(if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))')
debug_merge_point(0, 0, '(let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))')
debug_merge_point(0, 0, '(= q CellRef(q1))')
+1480: i82 = float_eq(f76, f80)
+1490: guard_false(i82, descr=<Guard0x2f41f58>) [p1, p0]
debug_merge_point(0, 0, '(if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))')
debug_merge_point(0, 0, '(void)')
+1496: p83 = getfield_gc_r(p18, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1507: guard_value(p83, ConstPtr(ptr84), descr=<Guard0x2f41fa0>) [p1, p0]
+1516: p85 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1520: p86 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+1524: guard_class(p85, 16504944, descr=<Guard0x2f64020>) [p1, p0]
+1537: p88 = getfield_gc_r(p85, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1541: guard_class(p86, 16435208, descr=<Guard0x2f64068>) [p1, p0]
+1553: p90 = getfield_gc_r(p86, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1557: guard_nonnull_class(p90, ConstClass(ForwardLink), descr=<Guard0x2f62260>) [p1, p0]
debug_merge_point(0, 0, '(+ i5080 1)')
+1575: i92 = getfield_gc_i(p85, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1579: i94 = int_add_ovf(i92, 1)
+1583: guard_no_overflow(descr=<Guard0x2f640b0>) [p1, p0]
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
+1589: guard_class(p88, 16480704, descr=<Guard0x2f640f8>) [p1, p0]
+1601: p96 = getfield_gc_r(p88, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1605: guard_value(p96, ConstPtr(ptr97), descr=<Guard0x2f64140>) [p1, p0]
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+1614: p98 = getfield_gc_r(p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+1618: guard_nonnull_class(p98, ConstClass(W_Fixnum), descr=<Guard0x2f622c0>) [p1, p0]
+1636: i100 = getfield_gc_i(p98, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1640: i101 = int_eq(i94, i100)
+1643: guard_false(i101, descr=<Guard0x2f64188>) [p1, p0]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
+1649: p102 = getfield_gc_r(p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_0 24 pure>)
+1653: p103 = getfield_gc_r(p102, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1657: guard_nonnull_class(p103, ConstClass(W_Bool), descr=<Guard0x2f62320>) [p1, p0]
+1683: i106 = instance_ptr_eq(p103, ConstPtr(ptr105))
+1686: guard_false(i106, descr=<Guard0x2f641d0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1692: p107 = getfield_gc_r(p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+1696: guard_nonnull_class(p107, ConstClass(W_Vector), descr=<Guard0x2f62380>) [p1, p0]
+1715: i110 = int_ge(i94, 0)
+1719: guard_true(i110, descr=<Guard0x2f64218>) [p1, p0]
+1725: i111 = getfield_gc_i(p107, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1729: i112 = int_lt(i94, i111)
+1732: guard_true(i112, descr=<Guard0x2f64260>) [p1, p0]
+1738: p113 = getfield_gc_r(p107, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1742: guard_class(p113, 16623792, descr=<Guard0x2f642a8>) [p1, p0]
+1755: p115 = getfield_gc_r(p107, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1759: i116 = getarrayitem_gc_i(p115, i94, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand15 CellRef(kp))')
+1764: p117 = getfield_gc_r(p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+1775: guard_nonnull_class(p117, ConstClass(W_Vector), descr=<Guard0x2f623e0>) [p1, p0]
+1793: p119 = getfield_gc_r(p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+1804: p120 = getfield_gc_r(p119, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1815: guard_nonnull_class(p120, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f62440>) [p1, p0]
+1833: i122 = getfield_gc_i(p120, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1844: p123 = getfield_gc_r(p88, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1844: i125 = int_ge(i116, 0)
+1848: guard_true(i125, descr=<Guard0x2f642f0>) [p1, p0]
+1854: i126 = getfield_gc_i(p117, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1865: i127 = int_lt(i116, i126)
+1868: guard_true(i127, descr=<Guard0x2f64338>) [p1, p0]
+1874: p128 = getfield_gc_r(p117, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1885: guard_class(p128, 16622984, descr=<Guard0x2f64380>) [p1, p0]
+1898: p130 = getfield_gc_r(p117, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1902: p131 = getarrayitem_gc_r(p130, i116, descr=<ArrayP 8>)
+1914: guard_class(p131, ConstClass(W_Vector), descr=<Guard0x2f643c8>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1927: i134 = int_ge(i122, 0)
+1931: guard_true(i134, descr=<Guard0x2f64410>) [p1, p0]
+1937: i135 = getfield_gc_i(p131, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1941: i136 = int_lt(i122, i135)
+1944: guard_true(i136, descr=<Guard0x2f64458>) [p1, p0]
+1950: p137 = getfield_gc_r(p131, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1954: guard_class(p137, 16612728, descr=<Guard0x2f644a0>) [p1, p0]
+1967: p139 = getfield_gc_r(p131, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1971: f140 = getarrayitem_gc_f(p139, i122, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1978: p141 = same_as_r(p90)
+1981: label(p88, i94, p90, p86, f140, p107, p115, p117, i126, p130, p119, p120, i122, p98, i100, p102, i111, p141, descr=TargetToken(49644192))
+2024: guard_not_invalidated(descr=<Guard0x2f624a0>) [p86, i94, p88, f140, p90]
+2024: p142 = getfield_gc_r(p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+2035: guard_nonnull_class(p142, ConstClass(W_Flonum), descr=<Guard0x2f62500>) [p86, i94, p88, f140, p90]
+2053: f144 = getfield_gc_f(p142, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+2058: f146 = float_sub(0.000000, f144)
debug_merge_point(0, 0, '(let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))')
debug_merge_point(0, 0, '(< AppRand16 AppRand17)')
+2077: i147 = float_lt(f140, f146)
+2081: guard_true(i147, descr=<Guard0x2f644e8>) [p86, i94, p88, f140, p90]
debug_merge_point(0, 0, '(if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))')
debug_merge_point(0, 0, '(let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))))))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+2087: i148 = getarrayitem_gc_i(p115, i94, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand18 0)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2092: i150 = int_ge(i148, 0)
+2096: guard_true(i150, descr=<Guard0x2f64530>) [p86, i94, p88, f140, p90]
+2102: i151 = int_lt(i148, i126)
+2105: guard_true(i151, descr=<Guard0x2f64578>) [p86, i94, p88, f140, p90]
+2111: p152 = getarrayitem_gc_r(p130, i148, descr=<ArrayP 8>)
+2116: guard_class(p152, ConstClass(W_Vector), descr=<Guard0x2f645c0>) [p86, i94, p88, f140, p90]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2128: i154 = getfield_gc_i(p152, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2132: i156 = int_lt(0, i154)
+2136: guard_true(i156, descr=<Guard0x2f64608>) [p86, i94, p88, f140, p90]
+2142: p157 = getfield_gc_r(p152, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2146: guard_class(p157, 16612728, descr=<Guard0x2f64650>) [p86, i94, p88, f140, p90]
+2158: p159 = getfield_gc_r(p152, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2162: f161 = getarrayitem_gc_f(p159, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand19)')
+2167: f163 = float_sub(0.000000, f161)
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+2177: i164 = getarrayitem_gc_i(p115, i94, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand21 CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2182: i166 = int_ge(i164, 0)
+2186: guard_true(i166, descr=<Guard0x2f64698>) [p86, i94, p88, f140, p90]
+2192: i167 = int_lt(i164, i126)
+2195: guard_true(i167, descr=<Guard0x2f646e0>) [p86, i94, p88, f140, p90]
+2201: p168 = getarrayitem_gc_r(p130, i164, descr=<ArrayP 8>)
+2206: guard_class(p168, ConstClass(W_Vector), descr=<Guard0x2f64728>) [p86, i94, p88, f140, p90]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2218: i170 = getfield_gc_i(p168, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2222: i171 = int_lt(i122, i170)
+2225: guard_true(i171, descr=<Guard0x2f64770>) [p86, i94, p88, f140, p90]
+2231: p172 = getfield_gc_r(p168, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2235: guard_class(p172, 16612728, descr=<Guard0x2f647b8>) [p86, i94, p88, f140, p90]
+2247: p174 = getfield_gc_r(p168, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2251: f175 = getarrayitem_gc_f(p174, i122, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(/ AppRand20 AppRand22)')
+2258: i177 = float_eq(f175, 0.000000)
+2273: guard_false(i177, descr=<Guard0x2f64800>) [p86, i94, p88, f140, p90]
+2279: f178 = float_truediv(f163, f175)
debug_merge_point(0, 0, '(let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))')
debug_merge_point(0, 0, '(< q CellRef(q1))')
+2283: p179 = getfield_gc_r(p88, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+2287: p180 = getfield_gc_r(p179, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2291: guard_nonnull_class(p180, ConstClass(W_CellFloatStrategy), descr=<Guard0x2f62560>) [p86, i94, p88, f140, p90]
+2309: f182 = getfield_gc_f(p180, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+2314: i183 = float_lt(f178, f182)
+2318: guard_false(i183, descr=<Guard0x2f64848>) [p86, i94, p88, f140, p90]
debug_merge_point(0, 0, '(if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))')
debug_merge_point(0, 0, '(let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))')
debug_merge_point(0, 0, '(= q CellRef(q1))')
+2324: i184 = float_eq(f178, f182)
+2334: guard_false(i184, descr=<Guard0x2f64890>) [p86, i94, p88, f140, p90]
debug_merge_point(0, 0, '(if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
debug_merge_point(0, 0, '(+ i5080 1)')
+2340: i186 = int_add(i94, 1)
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+2345: i187 = int_eq(i186, i100)
+2352: guard_false(i187, descr=<Guard0x2f648d8>) [p86, i94, p88, f140, p90]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
debug_merge_point(0, 0, '(let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+2358: i188 = int_lt(i186, i111)
+2365: guard_true(i188, descr=<Guard0x2f64920>) [p86, i94, p88, f140, p90]
+2371: i189 = getarrayitem_gc_i(p115, i186, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand15 CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2376: i191 = int_ge(i189, 0)
+2380: guard_true(i191, descr=<Guard0x2f64968>) [p86, i94, p88, f140, p90]
+2386: i192 = int_lt(i189, i126)
+2389: guard_true(i192, descr=<Guard0x2f649b0>) [p86, i94, p88, f140, p90]
+2395: p193 = getarrayitem_gc_r(p130, i189, descr=<ArrayP 8>)
+2400: guard_class(p193, ConstClass(W_Vector), descr=<Guard0x2f649f8>) [p86, i94, p88, f140, p90]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2412: i195 = getfield_gc_i(p193, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2416: i196 = int_lt(i122, i195)
+2419: guard_true(i196, descr=<Guard0x2f64a40>) [p86, i94, p88, f140, p90]
+2425: p197 = getfield_gc_r(p193, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2429: guard_class(p197, 16612728, descr=<Guard0x2f64a88>) [p86, i94, p88, f140, p90]
+2441: p199 = getfield_gc_r(p193, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2445: f200 = getarrayitem_gc_f(p199, i122, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+2452: i201 = arraylen_gc(p115, descr=<ArrayS 8>)
+2452: i202 = arraylen_gc(p130, descr=<ArrayP 8>)
+2452: jump(p88, i186, p141, p86, f200, p107, p115, p117, i126, p130, p119, p120, i122, p98, i100, p102, i111, p141, descr=TargetToken(49644192))
+2496: --end of the loop--
[3e4c0a464224616] jit-log-opt-loop}
[3e4c0a46459592f] {jit-backend
[3e4c0a4646085f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9b
[3e4c0a464610aa6] jit-backend-dump}
[3e4c0a46461b7a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9bb4 +0  22000000
[3e4c0a46461cb7f] jit-backend-dump}
[3e4c0a464620e4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9db5 +0  22000000
[3e4c0a464621e78] jit-backend-dump}
[3e4c0a46462534b] {jit-backend-addr
bridge out of Guard 0x2ee3fa0 has address 0x7f6e13cf9bb0 to 0x7f6e13cf9db0
       gc table: 0x7f6e13cf9b00
    jump target: 0x7f6e13cf9bb0
         resops: 0x7f6e13cf9bbe
       failures: 0x7f6e13cf9db0
            end: 0x7f6e13cfa022
[3e4c0a4646279e3] jit-backend-addr}
[3e4c0a46462b053] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9bdd +0  11020000
[3e4c0a46462bf9e] jit-backend-dump}
[3e4c0a46462f46e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9bf5 +0  15020000
[3e4c0a4646301e5] jit-backend-dump}
[3e4c0a46463348c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9c03 +0  23020000
[3e4c0a4646341ea] jit-backend-dump}
[3e4c0a46463739c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9c22 +0  20020000
[3e4c0a4646380ec] jit-backend-dump}
[3e4c0a46463b389] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9c2b +0  33020000
[3e4c0a46463c0b7] jit-backend-dump}
[3e4c0a46463f287] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9c45 +0  35020000
[3e4c0a46463ffac] jit-backend-dump}
[3e4c0a464643173] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9c52 +0  44020000
[3e4c0a464643ebc] jit-backend-dump}
[3e4c0a46464702a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9c68 +0  4A020000
[3e4c0a464647d49] jit-backend-dump}
[3e4c0a46464af35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9c98 +0  36020000
[3e4c0a46464bc6f] jit-backend-dump}
[3e4c0a46464ecef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9cb2 +0  38020000
[3e4c0a46464fa0d] jit-backend-dump}
[3e4c0a464652b4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9cc0 +0  46020000
[3e4c0a46465388e] jit-backend-dump}
[3e4c0a4646568fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9ccd +0  55020000
[3e4c0a4646575fb] jit-backend-dump}
[3e4c0a46465a757] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9cdd +0  61020000
[3e4c0a46465b46a] jit-backend-dump}
[3e4c0a46465e4e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9cf2 +0  68020000
[3e4c0a46465f1fc] jit-backend-dump}
[3e4c0a464662367] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9cfc +0  7A020000
[3e4c0a46466309b] jit-backend-dump}
[3e4c0a464666112] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9d09 +0  89020000
[3e4c0a464666e18] jit-backend-dump}
[3e4c0a464669f6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9d19 +0  95020000
[3e4c0a46466ac89] jit-backend-dump}
[3e4c0a46466dd4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9d3a +0  90020000
[3e4c0a46466ea5c] jit-backend-dump}
[3e4c0a464671b9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9d4a +0  9C020000
[3e4c0a4646728be] jit-backend-dump}
[3e4c0a46467592e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9d57 +0  AB020000
[3e4c0a464676622] jit-backend-dump}
[3e4c0a464679a16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf52c6 +0  E6480000
[3e4c0a46467a72e] jit-backend-dump}
[3e4c0a46467e5ec] jit-backend}
[3e4c0a4646821b0] {jit-log-opt-bridge
# bridge out of Guard 0x2ee3fa0 with 82 ops
[i0, p1, p2, p3]
+198: guard_not_invalidated(descr=<Guard0x2f625c0>) [i0, p1, p2, p3]
+198: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+216: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x2f64ad0>) [i0, p1, p2, p3]
+225: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+229: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x2f62620>) [i0, p1, p2, p3]
+249: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+253: i10 = int_add_ovf(i8, 1)
+257: guard_no_overflow(descr=<Guard0x2f64b18>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))')
+263: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+275: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x2f62680>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(= kk5209 AppRand56)')
+294: i13 = int_eq(i0, i10)
+297: guard_false(i13, descr=<Guard0x2f64b60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61))))')
debug_merge_point(0, 0, '(let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))')
debug_merge_point(0, 0, '(= kk5209 CellRef(kp))')
+303: p14 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+307: p15 = getfield_gc_r(p14, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+311: guard_nonnull_class(p15, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f626e0>) [i0, p1, p2, p3]
+329: i17 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+333: i18 = int_eq(i0, i17)
+336: guard_false(i18, descr=<Guard0x2f64ba8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void))')
debug_merge_point(0, 0, '(let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60)))')
debug_merge_point(0, 0, '(- piv)')
+342: p19 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+346: guard_nonnull_class(p19, ConstClass(W_Flonum), descr=<Guard0x2f62740>) [i0, p1, p2, p3]
+364: f21 = getfield_gc_f(p19, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+370: f23 = float_sub(0.000000, f21)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk5209)')
+390: p24 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+394: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x2f627a0>) [i0, p1, p2, p3]
+412: p26 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+416: p27 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+420: guard_nonnull_class(p27, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f62800>) [i0, p1, p2, p3]
+438: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+442: p30 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+442: i32 = int_ge(i29, 0)
+446: guard_true(i32, descr=<Guard0x2f64bf0>) [i0, p1, p2, p3]
+452: i33 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+456: i34 = int_lt(i29, i33)
+459: guard_true(i34, descr=<Guard0x2f64c38>) [i0, p1, p2, p3]
+465: p35 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+469: guard_class(p35, 16622984, descr=<Guard0x2f64c80>) [i0, p1, p2, p3]
+481: p37 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+485: p38 = getarrayitem_gc_r(p37, i29, descr=<ArrayP 8>)
+490: guard_class(p38, ConstClass(W_Vector), descr=<Guard0x2f64cc8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+502: i41 = int_ge(i0, 0)
+506: guard_true(i41, descr=<Guard0x2f64d10>) [i0, p1, p2, p3]
+512: i42 = getfield_gc_i(p38, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+516: i43 = int_lt(i0, i42)
+519: guard_true(i43, descr=<Guard0x2f64d58>) [i0, p1, p2, p3]
+525: p44 = getfield_gc_r(p38, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+529: guard_class(p44, 16612728, descr=<Guard0x2f64da0>) [i0, p1, p2, p3]
+541: p46 = getfield_gc_r(p38, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+545: f47 = getarrayitem_gc_f(p46, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand58 AppRand59)')
+552: f48 = float_mul(f23, f47)
debug_merge_point(0, 0, '(matrix-set! a5002 CellRef(ip) kk5209 AppRand60)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+557: p49 = getarrayitem_gc_r(p37, i29, descr=<ArrayP 8>)
+562: guard_class(p49, ConstClass(W_Vector), descr=<Guard0x2f64de8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+574: p51 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+578: guard_class(p51, 16612728, descr=<Guard0x2f64e30>) [i0, p1, p2, p3]
+590: i53 = getfield_gc_i(p49, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+594: i54 = int_lt(i0, i53)
+597: guard_true(i54, descr=<Guard0x2f64e78>) [i0, p1, p2, p3]
+603: p55 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+607: setarrayitem_gc(p55, i0, f48, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk5209 1)')
+614: i57 = int_add(i0, 1)
debug_merge_point(0, 0, '(doloop5207 AppRand61)')
debug_merge_point(0, 0, '(let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 AppRand61)')
+618: jump(p1, i57, p2, p11, p6, i10, p14, p15, i17, descr=TargetToken(48739680))
+688: --end of the loop--
[3e4c0a4646caf14] jit-log-opt-bridge}
[3e4c0a46503e856] {jit-backend
[3e4c0a465101aeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa
[3e4c0a46510f25c] jit-backend-dump}
[3e4c0a46511a60b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa4e4 +0  28000000
[3e4c0a46511baa7] jit-backend-dump}
[3e4c0a46511feb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa995 +0  28000000
[3e4c0a465120d94] jit-backend-dump}
[3e4c0a46512428e] {jit-backend-addr
bridge out of Guard 0x2ee2c80 has address 0x7f6e13cfa4e0 to 0x7f6e13cfa990
       gc table: 0x7f6e13cfa350
    jump target: 0x7f6e13cfa4e0
         resops: 0x7f6e13cfa4ee
       failures: 0x7f6e13cfa990
            end: 0x7f6e13cfaeb8
[3e4c0a465126813] jit-backend-addr}
[3e4c0a465129d7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa4fe +0  C8040000
[3e4c0a46512abdf] jit-backend-dump}
[3e4c0a46512e148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa515 +0  CD040000
[3e4c0a46512ee94] jit-backend-dump}
[3e4c0a46513224b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa521 +0  F9040000
[3e4c0a465132f48] jit-backend-dump}
[3e4c0a4651361eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa537 +0  FF040000
[3e4c0a465136f16] jit-backend-dump}
[3e4c0a46513a1cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa54b +0  07050000
[3e4c0a46513aeed] jit-backend-dump}
[3e4c0a46513e0e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa562 +0  0C050000
[3e4c0a46513ede2] jit-backend-dump}
[3e4c0a465141f9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa56f +0  1B050000
[3e4c0a465142c75] jit-backend-dump}
[3e4c0a465145e52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa58a +0  1C050000
[3e4c0a465146b39] jit-backend-dump}
[3e4c0a465149cc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa59a +0  28050000
[3e4c0a46514a9d2] jit-backend-dump}
[3e4c0a46514db8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa5b0 +0  2E050000
[3e4c0a46514e88a] jit-backend-dump}
[3e4c0a465151a1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa5ba +0  40050000
[3e4c0a465152705] jit-backend-dump}
[3e4c0a4651558e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa5c7 +0  4F050000
[3e4c0a4651565d2] jit-backend-dump}
[3e4c0a46515975c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa5d7 +0  5B050000
[3e4c0a46515a453] jit-backend-dump}
[3e4c0a46515d632] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa5f6 +0  58050000
[3e4c0a46515e323] jit-backend-dump}
[3e4c0a4651614f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa61f +0  4B050000
[3e4c0a4651621f6] jit-backend-dump}
[3e4c0a46516538f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa634 +0  52050000
[3e4c0a465166080] jit-backend-dump}
[3e4c0a465169219] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa641 +0  61050000
[3e4c0a465169f22] jit-backend-dump}
[3e4c0a46516d0b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa659 +0  65050000
[3e4c0a46516ddc2] jit-backend-dump}
[3e4c0a465170ff7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa677 +0  63050000
[3e4c0a465171cfd] jit-backend-dump}
[3e4c0a465174e96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa681 +0  75050000
[3e4c0a465175b9f] jit-backend-dump}
[3e4c0a465178d0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa68f +0  83050000
[3e4c0a465179a0b] jit-backend-dump}
[3e4c0a46517cb9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa6a0 +0  8E050000
[3e4c0a46517d88e] jit-backend-dump}
[3e4c0a465180a15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa6cb +0  7F050000
[3e4c0a46518173a] jit-backend-dump}
[3e4c0a465184890] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa6f1 +0  75050000
[3e4c0a465185584] jit-backend-dump}
[3e4c0a4651886f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa700 +0  7C050000
[3e4c0a465189404] jit-backend-dump}
[3e4c0a46518c5a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa709 +0  89050000
[3e4c0a46518d28e] jit-backend-dump}
[3e4c0a465190403] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa722 +0  86050000
[3e4c0a4651910ea] jit-backend-dump}
[3e4c0a46519423a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa730 +0  8E050000
[3e4c0a465194f34] jit-backend-dump}
[3e4c0a46519807a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa742 +0  92050000
[3e4c0a465198d74] jit-backend-dump}
[3e4c0a46519bef2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa767 +0  83050000
[3e4c0a46519cbd0] jit-backend-dump}
[3e4c0a46519fd14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa770 +0  90050000
[3e4c0a4651a0a11] jit-backend-dump}
[3e4c0a4651a3b67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa782 +0  97050000
[3e4c0a4651a4873] jit-backend-dump}
[3e4c0a4651a7a12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa78f +0  A3050000
[3e4c0a4651a871e] jit-backend-dump}
[3e4c0a4651ab871] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa7a1 +0  AA050000
[3e4c0a4651ac568] jit-backend-dump}
[3e4c0a4651af6d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa7c1 +0  A3050000
[3e4c0a4651b03e0] jit-backend-dump}
[3e4c0a4651b3545] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa7e2 +0  9E050000
[3e4c0a4651b421d] jit-backend-dump}
[3e4c0a4651b7382] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa80f +0  8D050000
[3e4c0a4651b807c] jit-backend-dump}
[3e4c0a4651bb268] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa853 +0  65050000
[3e4c0a4651bbf52] jit-backend-dump}
[3e4c0a4651bf0c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa85c +0  78050000
[3e4c0a4651bfdc1] jit-backend-dump}
[3e4c0a4651c2f54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa878 +0  78050000
[3e4c0a4651c3c29] jit-backend-dump}
[3e4c0a4651c6d9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa886 +0  86050000
[3e4c0a4651c7a97] jit-backend-dump}
[3e4c0a4651cac21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa88f +0  99050000
[3e4c0a4651cb90f] jit-backend-dump}
[3e4c0a4651cea77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa8a8 +0  9C050000
[3e4c0a4651cf76b] jit-backend-dump}
[3e4c0a4651d28f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa8b2 +0  AE050000
[3e4c0a4651d35df] jit-backend-dump}
[3e4c0a4651d672c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa8bf +0  BD050000
[3e4c0a4651d7423] jit-backend-dump}
[3e4c0a4651da5c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa8d1 +0  C7050000
[3e4c0a4651db2b3] jit-backend-dump}
[3e4c0a4651de6bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf3928 +0  B46B0000
[3e4c0a4651df3a4] jit-backend-dump}
[3e4c0a4651e340b] jit-backend}
[3e4c0a4651e747e] {jit-log-opt-bridge
# bridge out of Guard 0x2ee2c80 with 185 ops
[p0, p1]
+422: guard_class(p1, 16435208, descr=<Guard0x2f62860>) [p0, p1]
+434: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+438: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2f628c0>) [p0, p1]
debug_merge_point(0, 0, '(= i5080 m)')
+457: guard_not_invalidated(descr=<Guard0x2f64ec0>) [p0, p1]
+457: guard_class(p0, 16504944, descr=<Guard0x2f64f08>) [p0, p1]
+469: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+473: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+477: guard_class(p7, 16480704, descr=<Guard0x2f64f50>) [p0, p1]
+491: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+502: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2f64f98>) [p0, p1]
+511: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+515: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x2f62920>) [p0, p1]
+534: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+538: i14 = int_eq(i6, i13)
+541: guard_false(i14, descr=<Guard0x2f64fe0>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
+547: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_0 24 pure>)
+551: p16 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+555: guard_nonnull_class(p16, ConstClass(W_Bool), descr=<Guard0x2f62980>) [p0, p1]
+581: i19 = instance_ptr_eq(p16, ConstPtr(ptr18))
+584: guard_true(i19, descr=<Guard0x2f65028>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+590: p20 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+594: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x2f629e0>) [p0, p1]
+612: i23 = int_ge(i6, 0)
+616: guard_true(i23, descr=<Guard0x2f65070>) [p0, p1]
+622: i24 = getfield_gc_i(p20, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+626: i25 = int_lt(i6, i24)
+629: guard_true(i25, descr=<Guard0x2f650b8>) [p0, p1]
+635: p26 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+639: guard_class(p26, 16623792, descr=<Guard0x2f65100>) [p0, p1]
+651: p28 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+655: i29 = getarrayitem_gc_i(p28, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand32 CellRef(kp))')
+660: p30 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+664: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x2f62a40>) [p0, p1]
+682: p32 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+693: p33 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+704: guard_nonnull_class(p33, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f62aa0>) [p0, p1]
+723: i35 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+734: p36 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+734: i38 = int_ge(i29, 0)
+738: guard_true(i38, descr=<Guard0x2f65148>) [p0, p1]
+744: i39 = getfield_gc_i(p30, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+748: i40 = int_lt(i29, i39)
+751: guard_true(i40, descr=<Guard0x2f65190>) [p0, p1]
+757: p41 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+768: guard_class(p41, 16622984, descr=<Guard0x2f651d8>) [p0, p1]
+781: p43 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+785: p44 = getarrayitem_gc_r(p43, i29, descr=<ArrayP 8>)
+797: guard_class(p44, ConstClass(W_Vector), descr=<Guard0x2f65220>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+811: i47 = int_ge(i35, 0)
+815: guard_true(i47, descr=<Guard0x2f65268>) [p0, p1]
+821: i48 = getfield_gc_i(p44, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+826: i49 = int_lt(i35, i48)
+829: guard_true(i49, descr=<Guard0x2f652b0>) [p0, p1]
+835: p50 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+840: guard_class(p50, 16612728, descr=<Guard0x2f652f8>) [p0, p1]
+852: p52 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+857: f53 = getarrayitem_gc_f(p52, i35, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+864: p54 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+875: guard_nonnull_class(p54, ConstClass(W_Flonum), descr=<Guard0x2f62b00>) [p0, p1]
+895: f56 = getfield_gc_f(p54, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+902: f58 = float_sub(0.000000, f56)
debug_merge_point(0, 0, '(let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))')
debug_merge_point(0, 0, '(< AppRand33 AppRand34)')
+922: i59 = float_lt(f53, f58)
+927: guard_true(i59, descr=<Guard0x2f65340>) [p0, p1]
debug_merge_point(0, 0, '(if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))')
debug_merge_point(0, 0, '(let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+933: i60 = getarrayitem_gc_i(p28, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8)))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand35 0)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+938: i62 = int_ge(i60, 0)
+942: guard_true(i62, descr=<Guard0x2f65388>) [p0, p1]
+948: i63 = int_lt(i60, i39)
+951: guard_true(i63, descr=<Guard0x2f653d0>) [p0, p1]
+957: p64 = getarrayitem_gc_r(p43, i60, descr=<ArrayP 8>)
+969: guard_class(p64, ConstClass(W_Vector), descr=<Guard0x2f65418>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+982: i66 = getfield_gc_i(p64, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+986: i68 = int_lt(0, i66)
+990: guard_true(i68, descr=<Guard0x2f65460>) [p0, p1]
+996: p69 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1000: guard_class(p69, 16612728, descr=<Guard0x2f654a8>) [p0, p1]
+1014: p71 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1018: f73 = getarrayitem_gc_f(p71, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8)))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand36)')
+1025: f75 = float_sub(0.000000, f73)
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1036: i76 = getarrayitem_gc_i(p28, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8)))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand38 CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1041: i78 = int_ge(i76, 0)
+1045: guard_true(i78, descr=<Guard0x2f654f0>) [p0, p1]
+1051: i79 = int_lt(i76, i39)
+1054: guard_true(i79, descr=<Guard0x2f65538>) [p0, p1]
+1060: p80 = getarrayitem_gc_r(p43, i76, descr=<ArrayP 8>)
+1065: guard_class(p80, ConstClass(W_Vector), descr=<Guard0x2f65580>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1078: i82 = getfield_gc_i(p80, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1082: i83 = int_lt(i35, i82)
+1085: guard_true(i83, descr=<Guard0x2f655c8>) [p0, p1]
+1091: p84 = getfield_gc_r(p80, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1095: guard_class(p84, 16612728, descr=<Guard0x2f65610>) [p0, p1]
+1109: p86 = getfield_gc_r(p80, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1113: f87 = getarrayitem_gc_f(p86, i35, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(/ AppRand37 AppRand39)')
+1120: i89 = float_eq(f87, 0.000000)
+1135: guard_false(i89, descr=<Guard0x2f65658>) [p0, p1]
+1141: f90 = float_truediv(f75, f87)
debug_merge_point(0, 0, '(set! q1 SetBang8)')
+1146: p91 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1150: p92 = getfield_gc_r(p91, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1154: guard_nonnull_class(p92, ConstClass(W_CellFloatStrategy), descr=<Guard0x2f62b60>) [p0, p1]
debug_merge_point(0, 0, '(let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1174: i94 = getarrayitem_gc_i(p28, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! ip SetBang9)')
+1179: p95 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_3 48 pure>)
+1183: p96 = getfield_gc_r(p95, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1194: setfield_gc(p92, f90, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1201: guard_nonnull_class(p96, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f62bc0>) [p96, p95, i94, p1, p0, p7, p3]
debug_merge_point(0, 0, '(set! flag? #t)')
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
debug_merge_point(0, 0, '(+ i5080 1)')
+1219: i99 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+1248: setfield_gc(p15, ConstPtr(ptr100), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1252: setfield_gc(p96, i94, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1262: i101 = int_eq(i99, i13)
guard_false(i101, descr=<Guard0x2f62c20>) [i101, i99, None, p1, None, p7, p3]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
debug_merge_point(0, 0, '(let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1287: i103 = int_lt(i99, i24)
+1290: guard_true(i103, descr=<Guard0x2f656a0>) [i101, i99, None, p1, None, p7, p3]
+1296: i104 = getarrayitem_gc_i(p28, i99, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand15 CellRef(kp))')
+1301: p105 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1305: guard_nonnull_class(p105, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f62c80>) [i101, i99, None, p1, None, p7, p3]
+1324: i107 = getfield_gc_i(p105, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1328: i109 = int_ge(i104, 0)
+1332: guard_true(i109, descr=<Guard0x2f656e8>) [i101, i99, None, p1, None, p7, p3]
+1338: i110 = int_lt(i104, i39)
+1341: guard_true(i110, descr=<Guard0x2f65730>) [i101, i99, None, p1, None, p7, p3]
+1347: p111 = getarrayitem_gc_r(p43, i104, descr=<ArrayP 8>)
+1359: guard_class(p111, ConstClass(W_Vector), descr=<Guard0x2f65778>) [i101, i99, None, p1, None, p7, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1372: i114 = int_ge(i107, 0)
+1376: guard_true(i114, descr=<Guard0x2f657c0>) [i101, i99, None, p1, None, p7, p3]
+1382: i115 = getfield_gc_i(p111, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1386: i116 = int_lt(i107, i115)
+1389: guard_true(i116, descr=<Guard0x2f65808>) [i101, i99, None, p1, None, p7, p3]
+1395: p117 = getfield_gc_r(p111, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1399: guard_class(p117, 16612728, descr=<Guard0x2f65850>) [i101, i99, None, p1, None, p7, p3]
+1413: p119 = getfield_gc_r(p111, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1417: f120 = getarrayitem_gc_f(p119, i107, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1424: i121 = arraylen_gc(p28, descr=<ArrayS 8>)
+1424: i122 = arraylen_gc(p43, descr=<ArrayP 8>)
+1424: jump(p7, i99, p3, p1, f120, p20, p28, p30, i39, p43, p32, p105, i107, p11, i13, p15, i24, p3, descr=TargetToken(49644192))
+1600: --end of the loop--
[3e4c0a4652776d2] jit-log-opt-bridge}
[3e4c0a46549b12e] {jit-backend
[3e4c0a46552c10f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb
[3e4c0a4655372dd] jit-backend-dump}
[3e4c0a46554283b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb234 +0  26000000
[3e4c0a465543cf0] jit-backend-dump}
[3e4c0a465547e5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb5a5 +0  26000000
[3e4c0a465548cd6] jit-backend-dump}
[3e4c0a46554c1f3] {jit-backend-addr
bridge out of Guard 0x2f40380 has address 0x7f6e13cfb230 to 0x7f6e13cfb5a0
       gc table: 0x7f6e13cfb100
    jump target: 0x7f6e13cfb230
         resops: 0x7f6e13cfb23e
       failures: 0x7f6e13cfb5a0
            end: 0x7f6e13cfb966
[3e4c0a46554e891] jit-backend-addr}
[3e4c0a4655520fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb24e +0  90030000
[3e4c0a465552f13] jit-backend-dump}
[3e4c0a465556322] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb265 +0  95030000
[3e4c0a465557075] jit-backend-dump}
[3e4c0a46555a298] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb279 +0  9D030000
[3e4c0a46555afe4] jit-backend-dump}
[3e4c0a46555e2ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb294 +0  9E030000
[3e4c0a46555efe3] jit-backend-dump}
[3e4c0a465562299] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb2ab +0  A3030000
[3e4c0a465562f9f] jit-backend-dump}
[3e4c0a4655661c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb2bf +0  AB030000
[3e4c0a465566eb9] jit-backend-dump}
[3e4c0a46556a07a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb2d4 +0  B2030000
[3e4c0a46556ad86] jit-backend-dump}
[3e4c0a46557127d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb2ec +0  B6030000
[3e4c0a4655720e6] jit-backend-dump}
[3e4c0a465575d40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb301 +0  BD030000
[3e4c0a465576aa5] jit-backend-dump}
[3e4c0a465579de7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb30e +0  C6030000
[3e4c0a46557aae7] jit-backend-dump}
[3e4c0a46557ddc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb31f +0  CB030000
[3e4c0a46557eada] jit-backend-dump}
[3e4c0a465581cc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb32c +0  D4030000
[3e4c0a4655829d8] jit-backend-dump}
[3e4c0a465585bd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb344 +0  D2030000
[3e4c0a4655868e3] jit-backend-dump}
[3e4c0a465589a66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb352 +0  E0030000
[3e4c0a46558a773] jit-backend-dump}
[3e4c0a46558d94c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb35f +0  EF030000
[3e4c0a46558e65e] jit-backend-dump}
[3e4c0a46559187b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb36f +0  FB030000
[3e4c0a46559257e] jit-backend-dump}
[3e4c0a46559577f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb392 +0  F4030000
[3e4c0a465596498] jit-backend-dump}
[3e4c0a46559963d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb3b1 +0  F1030000
[3e4c0a46559a368] jit-backend-dump}
[3e4c0a46559d51a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb3c7 +0  F7030000
[3e4c0a46559e226] jit-backend-dump}
[3e4c0a4655a13fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb3d5 +0  05040000
[3e4c0a4655a20f6] jit-backend-dump}
[3e4c0a4655a5289] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb3e2 +0  14040000
[3e4c0a4655a5f83] jit-backend-dump}
[3e4c0a4655a910a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb3f2 +0  20040000
[3e4c0a4655a9e13] jit-backend-dump}
[3e4c0a4655acff3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb40f +0  1F040000
[3e4c0a4655adcf6] jit-backend-dump}
[3e4c0a4655b0ecf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb419 +0  31040000
[3e4c0a4655b1bd2] jit-backend-dump}
[3e4c0a4655b4d5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb42d +0  39040000
[3e4c0a4655b5a62] jit-backend-dump}
[3e4c0a4655b8be6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb43f +0  43040000
[3e4c0a4655b98f5] jit-backend-dump}
[3e4c0a4655bcaa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb466 +0  38040000
[3e4c0a4655bd7a1] jit-backend-dump}
[3e4c0a4655c0a63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb47d +0  3D040000
[3e4c0a4655c1772] jit-backend-dump}
[3e4c0a4655c496d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb499 +0  3D040000
[3e4c0a4655c5676] jit-backend-dump}
[3e4c0a4655c888a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb4af +0  43040000
[3e4c0a4655c9590] jit-backend-dump}
[3e4c0a4655cc732] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb4cd +0  41040000
[3e4c0a4655cd438] jit-backend-dump}
[3e4c0a4655d0689] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb4ef +0  3B040000
[3e4c0a4655d13ab] jit-backend-dump}
[3e4c0a4655d457e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfb506 +0  40040000
[3e4c0a4655d528d] jit-backend-dump}
[3e4c0a4655d86c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf5e46 +0  E6530000
[3e4c0a4655d93e3] jit-backend-dump}
[3e4c0a4655dd3ae] jit-backend}
[3e4c0a4655e1017] {jit-log-opt-bridge
# bridge out of Guard 0x2f40380 with 105 ops
[p0, p1]
+326: guard_not_invalidated(descr=<Guard0x2f62ce0>) [p0, p1]
+326: guard_class(p1, 16504592, descr=<Guard0x2f65898>) [p0, p1]
+338: f3 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+344: p4 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+348: guard_class(p4, 16479952, descr=<Guard0x2f658e0>) [p0, p1]
+361: p6 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+372: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x2f65928>) [p0, p1]
+381: p8 = getfield_gc_r(p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+385: p9 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+389: guard_nonnull_class(p9, ConstClass(W_CellFloatStrategy), descr=<Guard0x2f62d40>) [p0, p1]
+408: f11 = getfield_gc_f(p9, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+414: f12 = float_sub(f3, f11)
+419: guard_class(p0, 16435920, descr=<Guard0x2f65970>) [p0, p1]
+431: p14 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+442: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x2f659b8>) [p0, p1]
+451: p16 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+455: p17 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+459: guard_class(p17, 16435208, descr=<Guard0x2f65a00>) [p0, p1]
+472: p19 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+476: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x2f62da0>) [p0, p1]
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+496: i22 = float_gt(f12, 0.000000)
+511: guard_true(i22, descr=<Guard0x2f65a48>) [p0, p1]
debug_merge_point(0, 0, '(let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+517: guard_class(p16, 16504944, descr=<Guard0x2f65a90>) [p0, p1]
+530: p24 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+534: guard_class(p24, 16479952, descr=<Guard0x2f65ad8>) [p0, p1]
+547: p26 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+551: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x2f65b20>) [p0, p1]
+560: p28 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+564: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x2f62e00>) [p0, p1]
+584: i30 = getfield_gc_i(p16, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+588: i32 = int_ge(i30, 0)
+592: guard_true(i32, descr=<Guard0x2f65b68>) [p0, p1]
+598: i33 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+602: i34 = int_lt(i30, i33)
+605: guard_true(i34, descr=<Guard0x2f65bb0>) [p0, p1]
+611: p35 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+615: guard_class(p35, 16623792, descr=<Guard0x2f65bf8>) [p0, p1]
+627: p37 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+631: i38 = getarrayitem_gc_i(p37, i30, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! kp SetBang2)')
+636: p39 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+640: p40 = getfield_gc_r(p39, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+644: guard_nonnull_class(p40, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f62e60>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+662: i42 = getarrayitem_gc_i(p37, i30, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand13)')
+667: p43 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+671: setfield_gc(p40, i38, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+675: guard_nonnull_class(p43, ConstClass(W_Vector), descr=<Guard0x2f62ec0>) [p43, i42, p17, p16, p24, p19]
+693: p45 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+697: guard_nonnull_class(p45, ConstClass(W_Fixnum), descr=<Guard0x2f62f20>) [p43, i42, p17, p16, p24, p19]
+715: p47 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+715: i48 = getfield_gc_i(p45, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+719: i50 = int_ge(i48, 0)
+723: guard_true(i50, descr=<Guard0x2f65c40>) [p43, i42, p17, p16, p24, p19]
+729: i51 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+733: i52 = int_lt(i48, i51)
+736: guard_true(i52, descr=<Guard0x2f65c88>) [p43, i42, p17, p16, p24, p19]
+742: p53 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+746: guard_class(p53, 16622984, descr=<Guard0x2f65cd0>) [p43, i42, p17, p16, p24, p19]
+758: p55 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+762: p56 = getarrayitem_gc_r(p55, i48, descr=<ArrayP 8>)
+774: guard_class(p56, ConstClass(W_Vector), descr=<Guard0x2f65d18>) [p43, i42, p17, p16, p24, p19]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+787: i59 = int_ge(i42, 0)
+791: guard_true(i59, descr=<Guard0x2f65d60>) [p43, i42, p17, p16, p24, p19]
+797: i60 = getfield_gc_i(p56, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+808: i61 = int_lt(i42, i60)
+811: guard_true(i61, descr=<Guard0x2f65da8>) [p43, i42, p17, p16, p24, p19]
+817: p62 = getfield_gc_r(p56, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+821: guard_class(p62, 16612728, descr=<Guard0x2f65df0>) [p43, i42, p17, p16, p24, p19]
+835: p64 = getfield_gc_r(p56, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+839: f65 = getarrayitem_gc_f(p64, i42, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang3) from (vector-ref AppRand1 j)')
+846: p66 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+850: p67 = getfield_gc_r(p66, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+855: guard_nonnull_class(p67, ConstClass(W_CellFloatStrategy), descr=<Guard0x2f62f80>) [p43, i42, p17, p16, p24, p19]
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
+874: i70 = int_add(i30, 1)
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+878: setfield_gc(p67, f65, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+884: p71 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+888: guard_nonnull(p71, descr=<Guard0x2f62fe0>) [p17, i70, None, None, None, p24, None]
+897: guard_subclass(p71, ConstClass(W_Cell), descr=<Guard0x2f63040>) [p17, i70, None, None, None, p24, None]
+925: p74 = getfield_gc_r(p71, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+929: guard_nonnull_class(p74, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f630a0>) [p17, i70, None, None, None, p24, None]
+947: i76 = getfield_gc_i(p74, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+958: i78 = int_ge(i76, -9223372036854775807)
+971: guard_true(i78, descr=<Guard0x2f63100>) [p17, i70, None, None, None, p24, None]
+977: p79 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+1002: guard_nonnull(p79, descr=<Guard0x2f63160>) [p17, i70, None, None, None, p24, None]
+1025: i81 = instance_ptr_eq(p79, ConstPtr(ptr80))
+1028: guard_true(i81, descr=<Guard0x2f631c0>) [p17, i70, None, None, None, p24, None]
+1034: i82 = arraylen_gc(p37, descr=<ArrayS 8>)
+1034: i83 = arraylen_gc(p55, descr=<ArrayP 8>)
+1034: jump(p24, i70, p17, p19, p71, p74, i76, p28, i33, p37, p45, p43, p55, i48, p66, p67, f65, descr=TargetToken(48739520))
+1184: --end of the loop--
[3e4c0a465642797] jit-log-opt-bridge}
[3e4c0a465e91057] {jit-backend
[3e4c0a465ef673d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbad
[3e4c0a465efe8c9] jit-backend-dump}
[3e4c0a465f09a38] {jit-backend-addr
Loop 23 ((let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))) from (doloop5229 AppRand63)) has address 0x7f6e13cfbc0d to 0x7f6e13cfbdb0 (bootstrap 0x7f6e13cfbb80)
       gc table: 0x7f6e13cfbad0
       function: 0x7f6e13cfbb80
         resops: 0x7f6e13cfbc0d
       failures: 0x7f6e13cfbdb0
            end: 0x7f6e13cfc00e
[3e4c0a465f0cccc] jit-backend-addr}
[3e4c0a465f1169e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbc37 +0  87010000
[3e4c0a465f129b0] jit-backend-dump}
[3e4c0a465f162a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbc4d +0  8D010000
[3e4c0a465f1725b] jit-backend-dump}
[3e4c0a465f1a91e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbc60 +0  B2010000
[3e4c0a465f1b74d] jit-backend-dump}
[3e4c0a465f1ebca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbc74 +0  BA010000
[3e4c0a465f1f96c] jit-backend-dump}
[3e4c0a465f22cd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbc88 +0  C2010000
[3e4c0a465f23a5a] jit-backend-dump}
[3e4c0a465f26dfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbc9f +0  C7010000
[3e4c0a465f27b32] jit-backend-dump}
[3e4c0a465f2ae10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbcac +0  D6010000
[3e4c0a465f2bb19] jit-backend-dump}
[3e4c0a465f2ee1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbcb9 +0  E5010000
[3e4c0a465f2fb12] jit-backend-dump}
[3e4c0a465f32e1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbcd0 +0  EA010000
[3e4c0a465f33b45] jit-backend-dump}
[3e4c0a465f36e8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbce2 +0  F4010000
[3e4c0a465f37b93] jit-backend-dump}
[3e4c0a465f3ae83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbcec +0  06020000
[3e4c0a465f3bb7a] jit-backend-dump}
[3e4c0a465f3eead] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbcf9 +0  15020000
[3e4c0a465f3fbb0] jit-backend-dump}
[3e4c0a465f42f02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbd19 +0  11020000
[3e4c0a465f43bef] jit-backend-dump}
[3e4c0a465f46eba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbd2a +0  1C020000
[3e4c0a465f47ba8] jit-backend-dump}
[3e4c0a465f4af34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbd37 +0  2B020000
[3e4c0a465f4bc2b] jit-backend-dump}
[3e4c0a465f4f0cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbd7d +0  1D020000
[3e4c0a465f4fde5] jit-backend-dump}
[3e4c0a465f563ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbd8a +0  2C020000
[3e4c0a465f5723a] jit-backend-dump}
[3e4c0a465f5adec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbd93 +0  3F020000
[3e4c0a465f5bb4b] jit-backend-dump}
[3e4c0a465f5ef91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbda1 +0  4D020000
[3e4c0a465f5fc8e] jit-backend-dump}
[3e4c0a465f63bdc] jit-backend}
[3e4c0a465f67a4d] {jit-log-opt-loop
# Loop 23 ((let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))) from (doloop5229 AppRand63)) : loop with 71 ops
[p0, p1]
+325: label(p0, p1, descr=TargetToken(49644272))
+344: guard_class(p1, 16435208, descr=<Guard0x2f63220>) [p0, p1]
+363: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+367: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2f63280>) [p0, p1]
debug_merge_point(0, 0, '(= k5231 n)')
+385: guard_not_invalidated(descr=<Guard0x2f65e38>) [p0, p1]
+385: guard_class(p0, 16504944, descr=<Guard0x2f65e80>) [p0, p1]
+404: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+408: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+412: guard_class(p7, 16478448, descr=<Guard0x2f65ec8>) [p0, p1]
+424: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+435: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2f65f10>) [p0, p1]
+444: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+448: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x2f632e0>) [p0, p1]
+467: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+471: i14 = int_eq(i6, i13)
+474: guard_false(i14, descr=<Guard0x2f65f58>) [p0, p1]
debug_merge_point(0, 0, '(if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))')
debug_merge_point(0, 0, '(let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63)))')
debug_merge_point(0, 0, '(+ k5231 1)')
+480: i16 = int_add_ovf(i6, 1)
+487: guard_no_overflow(descr=<Guard0x2f65fa0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! l1 k5231 AppRand62)')
+493: p17 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+497: guard_nonnull_class(p17, ConstClass(W_Vector), descr=<Guard0x2f63340>) [p0, p1]
+516: p19 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+520: guard_class(p19, 16623792, descr=<Guard0x2f74020>) [p0, p1]
+534: i22 = int_ge(i6, 0)
+538: guard_true(i22, descr=<Guard0x2f74068>) [p0, p1]
+544: i23 = getfield_gc_i(p17, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+548: i24 = int_lt(i6, i23)
+551: guard_true(i24, descr=<Guard0x2f740b0>) [p0, p1]
+557: p25 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+561: setarrayitem_gc(p25, i6, i16, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! izrov k5231 k5231)')
+566: p26 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+570: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x2f633a0>) [p0, p26, p1, p3]
+589: p28 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+593: guard_class(p28, 16623792, descr=<Guard0x2f740f8>) [p0, p26, p1, p3]
+606: i30 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+610: i31 = int_lt(i6, i30)
+613: guard_true(i31, descr=<Guard0x2f74140>) [p0, p26, p1, p3]
+619: p32 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+623: setarrayitem_gc(p32, i6, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))')
debug_merge_point(0, 0, '(+ k5231 1)')
debug_merge_point(0, 0, '(doloop5229 AppRand63)')
debug_merge_point(0, 0, '(let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))) from (doloop5229 AppRand63)')
+628: label(p7, i16, p1, p3, p11, i13, p17, i23, p25, p26, i30, p32, descr=TargetToken(49644352))
debug_merge_point(0, 0, '(= k5231 n)')
+680: guard_not_invalidated(descr=<Guard0x2f63400>) [i16, p7, p1, p3]
+680: i33 = int_eq(i16, i13)
+683: guard_false(i33, descr=<Guard0x2f74188>) [i16, p7, p1, p3]
debug_merge_point(0, 0, '(if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))')
debug_merge_point(0, 0, '(let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63)))')
debug_merge_point(0, 0, '(+ k5231 1)')
+689: i35 = int_add_ovf(i16, 1)
+696: guard_no_overflow(descr=<Guard0x2f741d0>) [i16, p7, p1, p3]
debug_merge_point(0, 0, '(vector-set! l1 k5231 AppRand62)')
+702: i36 = int_lt(i16, i23)
+705: guard_true(i36, descr=<Guard0x2f74218>) [i16, p7, p1, p3]
+711: setarrayitem_gc(p25, i16, i35, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! izrov k5231 k5231)')
+716: i37 = int_lt(i16, i30)
+719: guard_true(i37, descr=<Guard0x2f63460>) [i30, i16, p26, None, p7, p1, p3]
+725: setarrayitem_gc(p32, i16, i16, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))')
debug_merge_point(0, 0, '(+ k5231 1)')
debug_merge_point(0, 0, '(doloop5229 AppRand63)')
debug_merge_point(0, 0, '(let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))) from (doloop5229 AppRand63)')
+730: jump(p7, i35, p1, p3, p11, i13, p17, i23, p25, p26, i30, p32, descr=TargetToken(49644352))
+736: --end of the loop--
[3e4c0a465fa5fc4] jit-log-opt-loop}
[3e4c0a4662d0a93] {jit-backend
[3e4c0a46635dde0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc
[3e4c0a466367ecc] jit-backend-dump}
[3e4c0a466372f5c] {jit-backend-addr
Loop 24 ((let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))) from (doloop5412 AppRand114)) has address 0x7f6e13cfc3ad to 0x7f6e13cfc640 (bootstrap 0x7f6e13cfc320)
       gc table: 0x7f6e13cfc220
       function: 0x7f6e13cfc320
         resops: 0x7f6e13cfc3ad
       failures: 0x7f6e13cfc640
            end: 0x7f6e13cfc976
[3e4c0a466375f8c] jit-backend-addr}
[3e4c0a46637a970] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc3d7 +0  77020000
[3e4c0a46637bdb4] jit-backend-dump}
[3e4c0a46637f87d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc3ed +0  7D020000
[3e4c0a4663806ec] jit-backend-dump}
[3e4c0a466383dfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc400 +0  A2020000
[3e4c0a466384b51] jit-backend-dump}
[3e4c0a466388106] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc410 +0  AE020000
[3e4c0a466388e53] jit-backend-dump}
[3e4c0a46638c307] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc424 +0  B6020000
[3e4c0a46638d05a] jit-backend-dump}
[3e4c0a466390482] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc43a +0  BC020000
[3e4c0a46639116f] jit-backend-dump}
[3e4c0a4663944fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc448 +0  CA020000
[3e4c0a4663951fe] jit-backend-dump}
[3e4c0a4663984ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc455 +0  D9020000
[3e4c0a466399192] jit-backend-dump}
[3e4c0a46639c43c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc46c +0  DE020000
[3e4c0a46639d11d] jit-backend-dump}
[3e4c0a4663a0450] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc488 +0  DE020000
[3e4c0a4663a112e] jit-backend-dump}
[3e4c0a4663a450a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc497 +0  EB020000
[3e4c0a4663a51f1] jit-backend-dump}
[3e4c0a4663a84aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc4a4 +0  FA020000
[3e4c0a4663a91a4] jit-backend-dump}
[3e4c0a4663ac47e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc4b5 +0  05030000
[3e4c0a4663ad16c] jit-backend-dump}
[3e4c0a4663b043a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc4ca +0  0C030000
[3e4c0a4663b1162] jit-backend-dump}
[3e4c0a4663b4492] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc4d4 +0  1E030000
[3e4c0a4663b51b3] jit-backend-dump}
[3e4c0a4663b84ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc4e8 +0  26030000
[3e4c0a4663b9208] jit-backend-dump}
[3e4c0a4663bc57e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc4f8 +0  32030000
[3e4c0a4663bd28b] jit-backend-dump}
[3e4c0a4663c0599] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc527 +0  1F030000
[3e4c0a4663c128a] jit-backend-dump}
[3e4c0a4663c45c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc537 +0  25030000
[3e4c0a4663c529e] jit-backend-dump}
[3e4c0a4663c8557] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc544 +0  2E030000
[3e4c0a4663c925d] jit-backend-dump}
[3e4c0a4663cc5cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc58d +0  17030000
[3e4c0a4663cd2c1] jit-backend-dump}
[3e4c0a4663d0567] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc596 +0  2A030000
[3e4c0a4663d1274] jit-backend-dump}
[3e4c0a4663d4579] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc5a8 +0  34030000
[3e4c0a4663d5251] jit-backend-dump}
[3e4c0a4663d8581] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc5b5 +0  43030000
[3e4c0a4663d926c] jit-backend-dump}
[3e4c0a4663dc52a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc5c7 +0  4D030000
[3e4c0a4663dd215] jit-backend-dump}
[3e4c0a4663e04a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc5f8 +0  38030000
[3e4c0a4663e1184] jit-backend-dump}
[3e4c0a4663e4412] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc60a +0  3C030000
[3e4c0a4663e50fa] jit-backend-dump}
[3e4c0a4663e83af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc618 +0  44030000
[3e4c0a4663e9091] jit-backend-dump}
[3e4c0a4663ece63] jit-backend}
[3e4c0a4663f0df7] {jit-log-opt-loop
# Loop 24 ((let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))) from (doloop5412 AppRand114)) : loop with 123 ops
[p0, p1]
+405: label(p0, p1, descr=TargetToken(49644432))
debug_merge_point(0, 0, '(let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))) from (doloop5412 AppRand114)')
+424: guard_class(p1, 16435208, descr=<Guard0x2f634c0>) [p0, p1]
+443: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+447: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2f63520>) [p0, p1]
debug_merge_point(0, 0, '(+ m 2)')
+465: guard_not_invalidated(descr=<Guard0x2f74260>) [p0, p1]
+465: guard_class(p0, 16504944, descr=<Guard0x2f742a8>) [p0, p1]
+484: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+488: guard_class(p6, 16478448, descr=<Guard0x2f742f0>) [p0, p1]
+500: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+511: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x2f74338>) [p0, p1]
+520: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+524: guard_nonnull_class(p10, ConstClass(W_Fixnum), descr=<Guard0x2f63580>) [p0, p1]
+542: i12 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+546: i14 = int_add_ovf(i12, 2)
+550: guard_no_overflow(descr=<Guard0x2f74380>) [p0, p1]
debug_merge_point(0, 0, '(let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))')
debug_merge_point(0, 0, '(= i5414 AppRand111)')
+556: i15 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+560: i16 = int_eq(i15, i14)
+563: guard_false(i16, descr=<Guard0x2f743c8>) [p0, p1]
debug_merge_point(0, 0, '(if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114))))')
debug_merge_point(0, 0, '(let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))')
debug_merge_point(0, 0, '(matrix-ref a5002 i5414 CellRef(kp))')
+569: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+573: guard_nonnull_class(p17, ConstClass(W_Vector), descr=<Guard0x2f635e0>) [p0, p1]
+592: p19 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+596: p20 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+600: guard_nonnull_class(p20, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f63640>) [p0, p1]
+620: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+625: p23 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+625: i25 = int_ge(i15, 0)
+629: guard_true(i25, descr=<Guard0x2f74410>) [p0, p1]
+635: i26 = getfield_gc_i(p17, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+639: i27 = int_lt(i15, i26)
+642: guard_true(i27, descr=<Guard0x2f74458>) [p0, p1]
+648: p28 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+652: guard_class(p28, 16622984, descr=<Guard0x2f744a0>) [p0, p1]
+665: p30 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+669: p31 = getarrayitem_gc_r(p30, i15, descr=<ArrayP 8>)
+674: guard_class(p31, ConstClass(W_Vector), descr=<Guard0x2f744e8>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+686: i34 = int_ge(i22, 0)
+690: guard_true(i34, descr=<Guard0x2f74530>) [p0, p1]
+696: i35 = getfield_gc_i(p31, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+707: i36 = int_lt(i22, i35)
+710: guard_true(i36, descr=<Guard0x2f74578>) [p0, p1]
+716: p37 = getfield_gc_r(p31, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+720: guard_class(p37, 16612728, descr=<Guard0x2f745c0>) [p0, p1]
+732: p39 = getfield_gc_r(p31, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+736: f40 = getarrayitem_gc_f(p39, i22, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand112)')
+743: f42 = float_sub(0.000000, f40)
debug_merge_point(0, 0, '(matrix-set! a5002 i5414 CellRef(kp) AppRand113)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+762: p43 = getarrayitem_gc_r(p30, i15, descr=<ArrayP 8>)
+767: guard_class(p43, ConstClass(W_Vector), descr=<Guard0x2f74608>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+779: p45 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+783: guard_class(p45, 16612728, descr=<Guard0x2f74650>) [p0, p1]
+795: i47 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+799: i48 = int_lt(i22, i47)
+802: guard_true(i48, descr=<Guard0x2f74698>) [p0, p1]
+808: p49 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+812: setarrayitem_gc(p49, i22, f42, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ i5414 1)')
+819: i51 = int_add(i15, 1)
debug_merge_point(0, 0, '(doloop5412 AppRand114)')
debug_merge_point(0, 0, '(let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))) from (doloop5412 AppRand114)')
+823: label(p6, i51, p1, p3, p10, i14, p19, p20, p17, i26, p30, i22, descr=TargetToken(49644512))
debug_merge_point(0, 0, '(let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))) from (doloop5412 AppRand114)')
debug_merge_point(0, 0, '(+ m 2)')
+872: guard_not_invalidated(descr=<Guard0x2f636a0>) [i51, p6, p1, p3]
debug_merge_point(0, 0, '(let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))')
debug_merge_point(0, 0, '(= i5414 AppRand111)')
+872: i52 = int_eq(i51, i14)
+875: guard_false(i52, descr=<Guard0x2f746e0>) [i51, p6, p1, p3]
debug_merge_point(0, 0, '(if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114))))')
debug_merge_point(0, 0, '(let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))')
debug_merge_point(0, 0, '(matrix-ref a5002 i5414 CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+881: i53 = int_lt(i51, i26)
+884: guard_true(i53, descr=<Guard0x2f74728>) [i51, p6, p1, p3]
+890: p54 = getarrayitem_gc_r(p30, i51, descr=<ArrayP 8>)
+895: guard_class(p54, ConstClass(W_Vector), descr=<Guard0x2f74770>) [i51, p6, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+908: i56 = getfield_gc_i(p54, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+912: i57 = int_lt(i22, i56)
+915: guard_true(i57, descr=<Guard0x2f747b8>) [i51, p6, p1, p3]
+921: p58 = getfield_gc_r(p54, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+925: guard_class(p58, 16612728, descr=<Guard0x2f74800>) [i51, p6, p1, p3]
+939: p60 = getfield_gc_r(p54, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+943: f61 = getarrayitem_gc_f(p60, i22, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand112)')
+950: f63 = float_sub(0.000000, f61)
debug_merge_point(0, 0, '(matrix-set! a5002 i5414 CellRef(kp) AppRand113)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+969: p64 = getarrayitem_gc_r(p30, i51, descr=<ArrayP 8>)
+974: guard_class(p64, ConstClass(W_Vector), descr=<Guard0x2f74848>) [i51, p6, p1, p3]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+988: p66 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+993: guard_class(p66, 16612728, descr=<Guard0x2f74890>) [i51, p6, p1, p3]
+1006: i68 = getfield_gc_i(p64, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1011: i69 = int_lt(i22, i68)
+1014: guard_true(i69, descr=<Guard0x2f748d8>) [i51, p6, p1, p3]
+1020: p70 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1025: setarrayitem_gc(p70, i22, f63, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ i5414 1)')
+1032: i72 = int_add(i51, 1)
debug_merge_point(0, 0, '(doloop5412 AppRand114)')
debug_merge_point(0, 0, '(let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))) from (doloop5412 AppRand114)')
+1036: i73 = arraylen_gc(p30, descr=<ArrayP 8>)
+1036: jump(p6, i72, p1, p3, p10, i14, p19, p20, p17, i26, p30, i22, descr=TargetToken(49644512))
+1056: --end of the loop--
[3e4c0a4664528c6] jit-log-opt-loop}
[3e4c0a466c0b9d0] {jit-backend
[3e4c0a466d9a87d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfcdf
[3e4c0a466dade16] jit-backend-dump}
[3e4c0a466dba7ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd054 +0  36000000
[3e4c0a466dbbce1] jit-backend-dump}
[3e4c0a466dc0262] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd965 +0  36000000
[3e4c0a466dc1200] jit-backend-dump}
[3e4c0a466dc4738] {jit-backend-addr
bridge out of Guard 0x2f40890 has address 0x7f6e13cfd050 to 0x7f6e13cfd960
       gc table: 0x7f6e13cfcdf0
    jump target: 0x7f6e13cfd050
         resops: 0x7f6e13cfd05e
       failures: 0x7f6e13cfd960
            end: 0x7f6e13cfe0e3
[3e4c0a466dc6b17] jit-backend-addr}
[3e4c0a466dca38f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd07d +0  42090000
[3e4c0a466dcb168] jit-backend-dump}
[3e4c0a466dce65a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd095 +0  46090000
[3e4c0a466dcf3b2] jit-backend-dump}
[3e4c0a466dd276f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd0a2 +0  55090000
[3e4c0a466dd34bf] jit-backend-dump}
[3e4c0a466dd6a49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd0c1 +0  52090000
[3e4c0a466dd77df] jit-backend-dump}
[3e4c0a466ddac56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd0f0 +0  3F090000
[3e4c0a466ddb9e6] jit-backend-dump}
[3e4c0a466ddedce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd107 +0  44090000
[3e4c0a466ddfadd] jit-backend-dump}
[3e4c0a466de2d7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd111 +0  56090000
[3e4c0a466de3aae] jit-backend-dump}
[3e4c0a466de6f75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd11e +0  65090000
[3e4c0a466de7ca6] jit-backend-dump}
[3e4c0a466deaf90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd12f +0  70090000
[3e4c0a466debcc7] jit-backend-dump}
[3e4c0a466def01e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd145 +0  76090000
[3e4c0a466defd99] jit-backend-dump}
[3e4c0a466df3064] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd157 +0  80090000
[3e4c0a466df3da4] jit-backend-dump}
[3e4c0a466df7078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd165 +0  8E090000
[3e4c0a466df7d94] jit-backend-dump}
[3e4c0a466dfb050] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd172 +0  9D090000
[3e4c0a466dfbdbb] jit-backend-dump}
[3e4c0a466dff0f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd191 +0  9A090000
[3e4c0a466dffe1c] jit-backend-dump}
[3e4c0a466e03091] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd1a6 +0  A1090000
[3e4c0a466e03dd1] jit-backend-dump}
[3e4c0a466e07081] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd1b7 +0  AC090000
[3e4c0a466e07db8] jit-backend-dump}
[3e4c0a466e0b077] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd1ce +0  B1090000
[3e4c0a466e0bdab] jit-backend-dump}
[3e4c0a466e0f051] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd1dc +0  BF090000
[3e4c0a466e0fd85] jit-backend-dump}
[3e4c0a466e13075] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd1e8 +0  CF090000
[3e4c0a466e13d93] jit-backend-dump}
[3e4c0a466e1705e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd1fc +0  D7090000
[3e4c0a466e17d92] jit-backend-dump}
[3e4c0a466e1b08b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd213 +0  DC090000
[3e4c0a466e1bda7] jit-backend-dump}
[3e4c0a466e1f06c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd221 +0  EA090000
[3e4c0a466e1fdd1] jit-backend-dump}
[3e4c0a466e23093] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd22a +0  FD090000
[3e4c0a466e23dd6] jit-backend-dump}
[3e4c0a466e270fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd23e +0  050A0000
[3e4c0a466e27e96] jit-backend-dump}
[3e4c0a466e2e63d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd253 +0  0C0A0000
[3e4c0a466e2f4d4] jit-backend-dump}
[3e4c0a466e32ee0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd264 +0  170A0000
[3e4c0a466e33c6c] jit-backend-dump}
[3e4c0a466e3701d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd275 +0  220A0000
[3e4c0a466e37d97] jit-backend-dump}
[3e4c0a466e3b0d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd286 +0  2D0A0000
[3e4c0a466e3be3b] jit-backend-dump}
[3e4c0a466e3f0eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd297 +0  380A0000
[3e4c0a466e3fe2b] jit-backend-dump}
[3e4c0a466e430b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd2a7 +0  440A0000
[3e4c0a466e43de4] jit-backend-dump}
[3e4c0a466e4704a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd2b7 +0  500A0000
[3e4c0a466e47d8d] jit-backend-dump}
[3e4c0a466e4af9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd2c7 +0  5C0A0000
[3e4c0a466e4bccf] jit-backend-dump}
[3e4c0a466e4ef32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd2d3 +0  6C0A0000
[3e4c0a466e4fc66] jit-backend-dump}
[3e4c0a466e53038] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd2e9 +0  720A0000
[3e4c0a466e53d69] jit-backend-dump}
[3e4c0a466e56ffa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd396 +0  E1090000
[3e4c0a466e57d3a] jit-backend-dump}
[3e4c0a466e5af7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd3a9 +0  EA090000
[3e4c0a466e5bcb2] jit-backend-dump}
[3e4c0a466e5ef06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd3cb +0  E4090000
[3e4c0a466e5fc3d] jit-backend-dump}
[3e4c0a466e62ec5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd3e1 +0  EA090000
[3e4c0a466e63bea] jit-backend-dump}
[3e4c0a466e66ed0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd3ef +0  F8090000
[3e4c0a466e67c1a] jit-backend-dump}
[3e4c0a466e6ae9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd406 +0  FD090000
[3e4c0a466e6bbf7] jit-backend-dump}
[3e4c0a466e6ee73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd445 +0  DA090000
[3e4c0a466e6fbb3] jit-backend-dump}
[3e4c0a466e72e7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd461 +0  DA090000
[3e4c0a466e73bbb] jit-backend-dump}
[3e4c0a466e76e03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd46f +0  E8090000
[3e4c0a466e77b43] jit-backend-dump}
[3e4c0a466e7ada6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd483 +0  F0090000
[3e4c0a466e7bacb] jit-backend-dump}
[3e4c0a466e7ed43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd4a3 +0  EC090000
[3e4c0a466e7fa68] jit-backend-dump}
[3e4c0a466e82cbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd4c8 +0  E3090000
[3e4c0a466e839f3] jit-backend-dump}
[3e4c0a466e86c5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd4d2 +0  F5090000
[3e4c0a466e87993] jit-backend-dump}
[3e4c0a466e8ac1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd4e6 +0  FD090000
[3e4c0a466e8b955] jit-backend-dump}
[3e4c0a466e8ebe9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd4f8 +0  070A0000
[3e4c0a466e8f929] jit-backend-dump}
[3e4c0a466e92bb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd51f +0  FC090000
[3e4c0a466e938f4] jit-backend-dump}
[3e4c0a466e96b7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd544 +0  F3090000
[3e4c0a466e978a4] jit-backend-dump}
[3e4c0a466e9ab47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd563 +0  F0090000
[3e4c0a466e9b896] jit-backend-dump}
[3e4c0a466e9ebb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd579 +0  F6090000
[3e4c0a466e9f8f4] jit-backend-dump}
[3e4c0a466ea2bcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd587 +0  040A0000
[3e4c0a466ea3915] jit-backend-dump}
[3e4c0a466ea6b66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd5b3 +0  F4090000
[3e4c0a466ea7894] jit-backend-dump}
[3e4c0a466eaab90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd5bd +0  060A0000
[3e4c0a466eab8b4] jit-backend-dump}
[3e4c0a466eaeaf3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd5ca +0  150A0000
[3e4c0a466eaf833] jit-backend-dump}
[3e4c0a466eb2b13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd5da +0  210A0000
[3e4c0a466eb383e] jit-backend-dump}
[3e4c0a466eb6ad5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd5ff +0  180A0000
[3e4c0a466eb7803] jit-backend-dump}
[3e4c0a466ebaa8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd61d +0  100A0000
[3e4c0a466ebb7ce] jit-backend-dump}
[3e4c0a466ebea4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd62a +0  190A0000
[3e4c0a466ebf787] jit-backend-dump}
[3e4c0a466ec29f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd63b +0  1E0A0000
[3e4c0a466ec371b] jit-backend-dump}
[3e4c0a466ec69ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd8b8 +0  B7070000
[3e4c0a466ec76f8] jit-backend-dump}
[3e4c0a466eca9e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd8c6 +0  C5070000
[3e4c0a466ecb716] jit-backend-dump}
[3e4c0a466ece933] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd8d3 +0  D4070000
[3e4c0a466ecf670] jit-backend-dump}
[3e4c0a466ed28cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd8e0 +0  E3070000
[3e4c0a466ed35fe] jit-backend-dump}
[3e4c0a466ed6b70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf69bd +0  8F660000
[3e4c0a466ed787c] jit-backend-dump}
[3e4c0a466edb926] jit-backend}
[3e4c0a466edf890] {jit-log-opt-bridge
# bridge out of Guard 0x2f40890 with 305 ops
[f0, i1, p2, p3, p4]
+630: guard_not_invalidated(descr=<Guard0x2f63880>) [f0, i1, p2, p3, p4]
+630: p5 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+648: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x2f749b0>) [f0, i1, p2, p3, p4]
+657: p7 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+661: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x2f638e0>) [f0, i1, p2, p3, p4]
+681: i9 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+685: i10 = int_gt(i1, i9)
+688: guard_true(i10, descr=<Guard0x2f749f8>) [f0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))')
debug_merge_point(0, 0, '(begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73)))')
+694: p11 = getfield_gc_r(p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+705: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x2f63940>) [f0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))')
debug_merge_point(0, 0, '(+ m 1)')
+725: i14 = int_add(i9, 1)
debug_merge_point(0, 0, '(- sum)')
+729: f16 = float_sub(0.000000, f0)
debug_merge_point(0, 0, '(matrix-set! a5002 AppRand72 k5277 AppRand73)')
+749: p17 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+753: guard_nonnull_class(p17, ConstClass(W_Vector), descr=<Guard0x2f639a0>) [f0, i1, p2, p3, p4]
+772: p19 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+776: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x2f63a00>) [f0, i1, p2, p3, p4]
+795: p21 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+795: i23 = int_ge(i14, 0)
+799: guard_true(i23, descr=<Guard0x2f74a40>) [f0, i1, p2, p3, p4]
+805: i24 = getfield_gc_i(p17, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+809: i25 = int_lt(i14, i24)
+812: guard_true(i25, descr=<Guard0x2f74a88>) [f0, i1, p2, p3, p4]
+818: p26 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+822: guard_class(p26, 16622984, descr=<Guard0x2f74ad0>) [f0, i1, p2, p3, p4]
+835: p28 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+839: p29 = getarrayitem_gc_r(p28, i14, descr=<ArrayP 8>)
+844: guard_class(p29, ConstClass(W_Vector), descr=<Guard0x2f74b18>) [f0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+857: p31 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+861: guard_class(p31, 16612728, descr=<Guard0x2f74b60>) [f0, i1, p2, p3, p4]
+875: i33 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+879: i35 = int_ge(i33, 0)
+883: guard_true(i35, descr=<Guard0x2f74ba8>) [f0, i1, p2, p3, p4]
+889: i36 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+893: i37 = int_lt(i33, i36)
+896: guard_true(i37, descr=<Guard0x2f74bf0>) [f0, i1, p2, p3, p4]
+902: p38 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+906: setarrayitem_gc(p38, i33, f16, descr=<ArrayF 8>)
+913: p39 = getfield_gc_r(p3, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+924: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x2f63a60>) [p39, p3, None, None, None, None, None]
+933: p42 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+937: p43 = getfield_gc_r(p3, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)) from (vector-set! AppRand2 j4995 x)')
+941: guard_class(p42, 16504944, descr=<Guard0x2f74c38>) [p39, p3, None, None, None, None, None]
+954: p45 = getfield_gc_r(p42, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+958: guard_class(p43, 16435208, descr=<Guard0x2f74c80>) [p39, p3, None, None, None, None, None]
+971: p47 = getfield_gc_r(p43, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+975: guard_nonnull_class(p47, ConstClass(ForwardLink), descr=<Guard0x2f63ac0>) [p39, p3, None, None, None, None, None]
debug_merge_point(0, 0, '(+ k5277 1)')
+994: i49 = getfield_gc_i(p42, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+998: i51 = int_add_ovf(i49, 1)
+1002: guard_no_overflow(descr=<Guard0x2f74cc8>) [p39, p3, None, None, None, None, None]
debug_merge_point(0, 0, '(doloop5275 AppRand78)')
+1008: guard_class(p45, 16478824, descr=<Guard0x2f74d10>) [p39, p3, None, None, None, None, None]
+1020: p53 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1031: guard_value(p53, ConstPtr(ptr54), descr=<Guard0x2f74d58>) [p39, p3, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))) from (doloop5275 AppRand78)')
debug_merge_point(0, 0, '(+ n 1)')
+1040: p55 = getfield_gc_r(p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1044: guard_nonnull_class(p55, ConstClass(W_Fixnum), descr=<Guard0x2f63b20>) [p39, p3, None, None, None, None, None]
+1063: i57 = getfield_gc_i(p55, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1067: i59 = int_add_ovf(i57, 1)
+1071: guard_no_overflow(descr=<Guard0x2f74da0>) [p39, p3, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))')
debug_merge_point(0, 0, '(= k5277 AppRand71)')
+1077: i60 = int_eq(i51, i59)
+1080: guard_true(i60, descr=<Guard0x2f74de8>) [p39, p3, None, None, None, None, None]
debug_merge_point(0, 0, '(if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78))))')
debug_merge_point(0, 0, '(void)')
+1086: p61 = getfield_gc_r(p43, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1097: guard_value(p61, ConstPtr(ptr62), descr=<Guard0x2f74e30>) [p39, p3, None, None, None, None, None]
+1106: p63 = getfield_gc_r(p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1110: p64 = getfield_gc_r(p43, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303))')
+1114: guard_class(p63, 16501424, descr=<Guard0x2f74e78>) [p39, p3, None, None, None, None, None]
+1127: p66 = getfield_gc_r(p63, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1131: guard_class(p66, 16502480, descr=<Guard0x2f74ec0>) [p39, p3, None, None, None, None, None]
+1144: p68 = getfield_gc_r(p66, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1148: guard_class(p68, 16504944, descr=<Guard0x2f74f08>) [p39, p3, None, None, None, None, None]
+1161: p70 = getfield_gc_r(p68, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1165: guard_class(p70, 16503888, descr=<Guard0x2f74f50>) [p39, p3, None, None, None, None, None]
+1178: p72 = getfield_gc_r(p70, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1182: guard_class(p72, 16503888, descr=<Guard0x2f74f98>) [p39, p3, None, None, None, None, None]
+1195: p74 = getfield_gc_r(p72, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1199: guard_class(p74, 16500016, descr=<Guard0x2f74fe0>) [p39, p3, None, None, None, None, None]
+1211: p76 = getfield_gc_r(p74, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1215: guard_class(p76, 16500720, descr=<Guard0x2f75028>) [p39, p3, None, None, None, None, None]
+1227: p78 = getfield_gc_r(p76, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1231: guard_class(p78, 16505296, descr=<Guard0x2f75070>) [p39, p3, None, None, None, None, None]
+1243: guard_class(p64, 16435208, descr=<Guard0x2f750b8>) [p39, p3, None, None, None, None, None]
+1255: p81 = getfield_gc_r(p64, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1259: guard_nonnull_class(p81, ConstClass(ForwardLink), descr=<Guard0x2f63b80>) [p39, p3, None, None, None, None, None]
debug_merge_point(0, 0, '(lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))')
+1277: p83 = getfield_gc_r(p63, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_0 16 pure>)
+1281: i84 = getfield_gc_i(p72, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1292: p85 = getfield_gc_r(p63, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_1 24 pure>)
+1296: p86 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_8 80 pure>)
+1307: i87 = getfield_gc_i(p68, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1318: p88 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_5 56 pure>)
+1322: p89 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_7 72 pure>)
+1333: p90 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_3 40 pure>)
+1344: p91 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_6 64 pure>)
+1355: p92 = getfield_gc_r(p63, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_4 48 pure>)
+1366: p93 = getfield_gc_r(p63, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_3 40 pure>)
+1377: p94 = getfield_gc_r(p63, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_2 32 pure>)
+1388: p95 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_4 48 pure>)
+1392: i96 = getfield_gc_i(p70, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1403: p97 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_0 16 pure>)
+1407: p98 = getfield_gc_r(p74, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1418: p99 = getfield_gc_r(p66, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_2 32 pure>)
+1422: p100 = getfield_gc_r(p76, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1426: p101 = getfield_gc_r(p76, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
debug_merge_point(0, 0, '(loop5303)')
debug_merge_point(0, 0, '(let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) from (loop5303)')
debug_merge_point(0, 0, '(+ m 1)')
+1437: i103 = int_add_ovf(i96, 1)
+1444: guard_no_overflow(descr=<Guard0x2f75100>) [p39, p3, None, None, None, None, None]
debug_merge_point(0, 0, '(simp1 AppRand79 #f)')
+1450: guard_nonnull_class(p94, 16479200, descr=<Guard0x2f63be0>) [p39, p3, None, None, None, None, None]
+1469: p105 = getfield_gc_r(p94, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1494: guard_value(p105, ConstPtr(ptr106), descr=<Guard0x2f75148>) [p39, p3, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0))')
debug_merge_point(0, 0, '(vector-ref l1 0)')
+1503: p107 = getfield_gc_r(p94, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1507: guard_nonnull_class(p107, ConstClass(W_Vector), descr=<Guard0x2f63c40>) [p39, p3, None, None, None, None, None]
+1525: i109 = getfield_gc_i(p107, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1529: i111 = int_lt(0, i109)
+1533: guard_true(i111, descr=<Guard0x2f75190>) [p39, p3, None, None, None, None, None]
+1539: p112 = getfield_gc_r(p107, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1550: guard_class(p112, 16623792, descr=<Guard0x2f751d8>) [p39, p3, None, None, None, None, None]
+1562: p114 = getfield_gc_r(p107, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1580: i116 = getarrayitem_gc_i(p114, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! kp SetBang0)')
+1584: p117 = getfield_gc_r(p94, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1595: p118 = getfield_gc_r(p117, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1606: guard_nonnull_class(p118, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f63ca0>) [p39, p3, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm CellRef(kp))')
+1625: p120 = getfield_gc_r(p94, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1629: setfield_gc(p118, i116, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1633: guard_nonnull_class(p120, ConstClass(W_Vector), descr=<Guard0x2f63d00>) [p120, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+1653: p122 = getfield_gc_r(p94, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1657: i124 = int_ge(i103, 0)
+1661: guard_true(i124, descr=<Guard0x2f75220>) [p120, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+1667: i125 = getfield_gc_i(p120, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1678: i126 = int_lt(i103, i125)
+1681: guard_true(i126, descr=<Guard0x2f75268>) [p120, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+1687: p127 = getfield_gc_r(p120, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1705: guard_class(p127, 16622984, descr=<Guard0x2f752b0>) [p120, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+1719: p129 = getfield_gc_r(p120, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1730: p130 = getarrayitem_gc_r(p129, i103, descr=<ArrayP 8>)
+1742: guard_class(p130, ConstClass(W_Vector), descr=<Guard0x2f752f8>) [p120, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1756: i133 = int_ge(i116, 0)
+1760: guard_true(i133, descr=<Guard0x2f75340>) [p120, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+1766: i134 = getfield_gc_i(p130, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1777: i135 = int_lt(i116, i134)
+1780: guard_true(i135, descr=<Guard0x2f75388>) [p120, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+1786: p136 = getfield_gc_r(p130, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1790: guard_class(p136, 16612728, descr=<Guard0x2f753d0>) [p120, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+1804: p138 = getfield_gc_r(p130, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1808: f139 = getarrayitem_gc_f(p138, i116, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang1)')
+1815: p140 = getfield_gc_r(p94, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1819: p141 = getfield_gc_r(p140, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1823: guard_nonnull_class(p141, ConstClass(W_CellFloatStrategy), descr=<Guard0x2f63d60>) [p120, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1))')
debug_merge_point(0, 0, '(lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))')
+1843: p143 = getfield_gc_r(p94, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1847: setfield_gc(p141, f139, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1854: guard_class(p122, 16505296, descr=<Guard0x2f63dc0>) [p122, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
debug_merge_point(0, 0, '(doloop 1)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop 1)')
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+1880: p145 = getfield_gc_r(p143, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1891: guard_nonnull_class(p145, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2f63e20>) [p122, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+1911: i147 = getfield_gc_i(p145, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1923: i149 = int_ge(1, i147)
+1927: guard_false(i149, descr=<Guard0x2f75418>) [p122, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+1933: i150 = int_lt(1, i109)
+1941: guard_true(i150, descr=<Guard0x2f75460>) [p122, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+1947: i151 = getarrayitem_gc_i(p114, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1965: p152 = getarrayitem_gc_r(p129, i103, descr=<ArrayP 8>)
+1977: guard_class(p152, ConstClass(W_Vector), descr=<Guard0x2f754a8>) [p122, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1991: i155 = int_ge(i151, 0)
+1995: guard_true(i155, descr=<Guard0x2f754f0>) [p122, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+2001: i156 = getfield_gc_i(p152, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2005: i157 = int_lt(i151, i156)
+2008: guard_true(i157, descr=<Guard0x2f75538>) [p122, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+2014: p158 = getfield_gc_r(p152, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2018: guard_class(p158, 16612728, descr=<Guard0x2f75580>) [p122, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+2030: p160 = getfield_gc_r(p152, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2034: f161 = getarrayitem_gc_f(p160, i151, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+2041: f162 = float_sub(f161, f139)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+2046: i164 = float_gt(f162, 0.000000)
+2061: guard_true(i164, descr=<Guard0x2f755c8>) [p122, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
debug_merge_point(0, 0, '(set! kp SetBang2)')
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
debug_merge_point(0, 0, '(let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand13)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2067: p165 = getarrayitem_gc_r(p129, i103, descr=<ArrayP 8>)
+2079: setfield_gc(p118, i151, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2083: guard_class(p165, ConstClass(W_Vector), descr=<Guard0x2f63e80>) [p165, p122, i151, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2097: i167 = getfield_gc_i(p165, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2101: i168 = int_lt(i151, i167)
+2104: guard_true(i168, descr=<Guard0x2f75610>) [p165, p122, i151, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+2110: p169 = getfield_gc_r(p165, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2114: guard_class(p169, 16612728, descr=<Guard0x2f75658>) [p165, p122, i151, p120, p107, p143, p117, p140, i96, i87, i84, p101, p100, p99, p98, p97, p95, p93, p92, p91, p90, p89, p88, p86, p85, p83, p78, p64, i103, p94, p81, None, None, None, None, None]
+2127: p171 = getfield_gc_r(p165, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2131: f172 = getarrayitem_gc_f(p171, i151, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang3) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+2138: setfield_gc(p141, f172, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+2152: p173 = new_with_vtable(descr=<SizeDescr 80>)
+2202: p174 = new_with_vtable(descr=<SizeDescr 16>)
+2213: setfield_gc(p174, i103, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2217: p175 = new_with_vtable(descr=<SizeDescr 40>)
+2228: p176 = new_with_vtable(descr=<SizeDescr 32>)
+2239: setfield_gc(p176, p78, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2250: setfield_gc(p176, ConstPtr(ptr177), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2254: p179 = new_array_clear(19, descr=<ArrayP 8>)
+2273: setarrayitem_gc(p179, 0, p83, descr=<ArrayP 8>)
+2277: p181 = new_with_vtable(descr=<SizeDescr 16>)
+2292: setfield_gc(p181, i84, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2296: setarrayitem_gc(p179, 1, p181, descr=<ArrayP 8>)
+2300: setarrayitem_gc(p179, 2, p85, descr=<ArrayP 8>)
+2304: setarrayitem_gc(p179, 3, p86, descr=<ArrayP 8>)
+2315: p185 = new_with_vtable(descr=<SizeDescr 16>)
+2326: setfield_gc(p185, i87, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2330: setarrayitem_gc(p179, 4, p185, descr=<ArrayP 8>)
+2334: setarrayitem_gc(p179, 5, p88, descr=<ArrayP 8>)
+2345: setarrayitem_gc(p179, 6, p89, descr=<ArrayP 8>)
+2356: setarrayitem_gc(p179, 7, p90, descr=<ArrayP 8>)
+2367: setarrayitem_gc(p179, 8, p91, descr=<ArrayP 8>)
+2378: setarrayitem_gc(p179, 9, p92, descr=<ArrayP 8>)
+2389: setarrayitem_gc(p179, 10, p93, descr=<ArrayP 8>)
+2400: setarrayitem_gc(p179, 11, p94, descr=<ArrayP 8>)
+2404: setarrayitem_gc(p179, 12, p95, descr=<ArrayP 8>)
+2415: p195 = new_with_vtable(descr=<SizeDescr 16>)
+2426: setfield_gc(p195, i96, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2430: setarrayitem_gc(p179, 13, p195, descr=<ArrayP 8>)
+2434: setarrayitem_gc(p179, 14, p97, descr=<ArrayP 8>)
+2448: setarrayitem_gc(p179, 15, p98, descr=<ArrayP 8>)
+2455: setarrayitem_gc(p179, 16, p99, descr=<ArrayP 8>)
+2469: setarrayitem_gc(p179, 17, p100, descr=<ArrayP 8>)
+2483: setarrayitem_gc(p179, 18, p101, descr=<ArrayP 8>)
+2497: setfield_gc(p176, p179, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+2605: i202 = getfield_gc_i(p145, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2623: setfield_gc(p173, ConstPtr(ptr203), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2627: setfield_gc(p175, p81, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2638: setfield_gc(p173, p122, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2656: setfield_gc(p175, ConstPtr(ptr204), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2660: setfield_gc(p175, p176, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2664: setfield_gc(p175, p64, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2675: setfield_gc(p173, p140, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+2686: setfield_gc(p173, p117, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+2697: setfield_gc(p173, p143, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+2715: setfield_gc(p173, ConstPtr(ptr205), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+2719: setfield_gc(p173, p107, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+2730: setfield_gc(p173, p174, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+2734: setfield_gc(p173, p120, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+2745: i207 = int_ge(i202, -9223372036854775807)
+2758: guard_true(i207, descr=<Guard0x2f63ee0>) [p175, p173, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2764: i208 = arraylen_gc(p114, descr=<ArrayS 8>)
+2764: i209 = getfield_gc_i(p174, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2768: i211 = int_ge(i209, 0)
+2772: guard_true(i211, descr=<Guard0x2f63f40>) [p175, p173, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2778: i213 = int_le(i209, 9223372036854775806)
+2785: guard_true(i213, descr=<Guard0x2f63fa0>) [p175, p173, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2791: i214 = int_lt(i209, i125)
+2798: guard_true(i214, descr=<Guard0x2fa8020>) [p175, p173, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2804: i215 = arraylen_gc(p129, descr=<ArrayP 8>)
+2804: jump(p173, 2, p175, p81, p143, p145, i202, p107, i109, p114, p174, p120, p129, i209, p140, p141, f172, descr=TargetToken(48739520))
+2928: --end of the loop--
[3e4c0a467002157] jit-log-opt-bridge}
[3e4c0a46744248c] {jit-backend
[3e4c0a4674f6aaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe3f
[3e4c0a4675049ce] jit-backend-dump}
[3e4c0a4675101c0] {jit-backend-addr
Loop 26 ((- *epsilon*) from (vector-ref AppRand1 j)) has address 0x7f6e13cfe60d to 0x7f6e13cfe9f0 (bootstrap 0x7f6e13cfe580)
       gc table: 0x7f6e13cfe3f0
       function: 0x7f6e13cfe580
         resops: 0x7f6e13cfe60d
       failures: 0x7f6e13cfe9f0
            end: 0x7f6e13cfeebf
[3e4c0a467512ec6] jit-backend-addr}
[3e4c0a467517a31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe637 +0  E3030000
[3e4c0a467518e35] jit-backend-dump}
[3e4c0a46751c834] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe647 +0  EF030000
[3e4c0a46751d78f] jit-backend-dump}
[3e4c0a467520d04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe65b +0  F7030000
[3e4c0a467521ac2] jit-backend-dump}
[3e4c0a467525015] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe671 +0  FD030000
[3e4c0a467525d6e] jit-backend-dump}
[3e4c0a467529382] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe69c +0  EE030000
[3e4c0a46752a0db] jit-backend-dump}
[3e4c0a46752d515] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe6b0 +0  F0030000
[3e4c0a46752e246] jit-backend-dump}
[3e4c0a4675315ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe6bd +0  F9030000
[3e4c0a467532309] jit-backend-dump}
[3e4c0a4675356b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe6d2 +0  FA030000
[3e4c0a4675363c2] jit-backend-dump}
[3e4c0a46753982a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe6e8 +0  FA030000
[3e4c0a46753a515] jit-backend-dump}
[3e4c0a46753d842] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe6f2 +0  0C040000
[3e4c0a46753e50b] jit-backend-dump}
[3e4c0a467541819] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe706 +0  14040000
[3e4c0a4675424ee] jit-backend-dump}
[3e4c0a4675457c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe71a +0  1C040000
[3e4c0a46754649e] jit-backend-dump}
[3e4c0a46754979d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe72a +0  28040000
[3e4c0a46754a488] jit-backend-dump}
[3e4c0a46754d743] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe741 +0  2D040000
[3e4c0a46754e40c] jit-backend-dump}
[3e4c0a4675516ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe74f +0  3B040000
[3e4c0a4675523cb] jit-backend-dump}
[3e4c0a467555681] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe75b +0  4B040000
[3e4c0a46755635c] jit-backend-dump}
[3e4c0a4675596c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe768 +0  5A040000
[3e4c0a46755a3a8] jit-backend-dump}
[3e4c0a46755d68e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe77e +0  60040000
[3e4c0a46755e37c] jit-backend-dump}
[3e4c0a4675616a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe78b +0  6F040000
[3e4c0a46756237e] jit-backend-dump}
[3e4c0a46756567a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe7a7 +0  6F040000
[3e4c0a46756633d] jit-backend-dump}
[3e4c0a467569670] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe7b7 +0  7B040000
[3e4c0a46756a34b] jit-backend-dump}
[3e4c0a46756d60a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe7cf +0  7F040000
[3e4c0a46756e2e2] jit-backend-dump}
[3e4c0a4675715e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe7d9 +0  91040000
[3e4c0a4675722c9] jit-backend-dump}
[3e4c0a4675755da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe7e6 +0  A0040000
[3e4c0a4675762ac] jit-backend-dump}
[3e4c0a4675795d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe7f7 +0  AB040000
[3e4c0a46757a2b8] jit-backend-dump}
[3e4c0a46757d573] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe81d +0  A1040000
[3e4c0a46757e26a] jit-backend-dump}
[3e4c0a46758159a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe845 +0  95040000
[3e4c0a46758229a] jit-backend-dump}
[3e4c0a46758558a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe85a +0  9C040000
[3e4c0a46758625c] jit-backend-dump}
[3e4c0a46758955b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe86e +0  A4040000
[3e4c0a46758a230] jit-backend-dump}
[3e4c0a46758d50b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe887 +0  A7040000
[3e4c0a46758e1f2] jit-backend-dump}
[3e4c0a467591516] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe8a5 +0  A5040000
[3e4c0a4675921f7] jit-backend-dump}
[3e4c0a46759552a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe8af +0  B7040000
[3e4c0a46759974a] jit-backend-dump}
[3e4c0a46759d685] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe8bd +0  C5040000
[3e4c0a46759e446] jit-backend-dump}
[3e4c0a4675a1947] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe8cf +0  CF040000
[3e4c0a4675a26bb] jit-backend-dump}
[3e4c0a4675a5b17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe931 +0  A5040000
[3e4c0a4675a6823] jit-backend-dump}
[3e4c0a4675a9ba9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe953 +0  9F040000
[3e4c0a4675aa8e0] jit-backend-dump}
[3e4c0a4675adbeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe960 +0  A8040000
[3e4c0a4675ae913] jit-backend-dump}
[3e4c0a4675b1f15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe96d +0  B1040000
[3e4c0a4675b2c5e] jit-backend-dump}
[3e4c0a4675b60b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe97a +0  BA040000
[3e4c0a4675b6de8] jit-backend-dump}
[3e4c0a4675ba136] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe989 +0  C1040000
[3e4c0a4675bae7a] jit-backend-dump}
[3e4c0a4675be215] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe992 +0  CE040000
[3e4c0a4675bef21] jit-backend-dump}
[3e4c0a4675c2251] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe9a3 +0  D3040000
[3e4c0a4675c2f7f] jit-backend-dump}
[3e4c0a4675c62d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe9b0 +0  DC040000
[3e4c0a4675c6fec] jit-backend-dump}
[3e4c0a4675ca381] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe9c0 +0  E2040000
[3e4c0a4675cb0a0] jit-backend-dump}
[3e4c0a4675cef64] jit-backend}
[3e4c0a4675d2fdd] {jit-log-opt-loop
# Loop 26 ((- *epsilon*) from (vector-ref AppRand1 j)) : loop with 160 ops
[p0, p1]
+549: label(p0, p1, descr=TargetToken(49645872))
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+568: guard_not_invalidated(descr=<Guard0x2fa8080>) [p1, p0]
+568: guard_class(p0, 16504944, descr=<Guard0x2f756a0>) [p1, p0]
+587: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+591: guard_class(p3, 16480704, descr=<Guard0x2f756e8>) [p1, p0]
+603: p5 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+614: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x2f75730>) [p1, p0]
+623: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+627: guard_nonnull_class(p7, ConstClass(W_Flonum), descr=<Guard0x2fa80e0>) [p1, p0]
+645: f9 = getfield_gc_f(p7, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+650: f11 = float_sub(0.000000, f9)
+669: guard_class(p1, 16436632, descr=<Guard0x2f75778>) [p1, p0]
+688: p13 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+699: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x2f757c0>) [p1, p0]
+708: p15 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+712: i16 = instance_ptr_eq(p0, p15)
+715: guard_true(i16, descr=<Guard0x2f75808>) [p1, p0]
+721: f17 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.LetContSize1Flo.inst_vals_flo_0 40 pure>)
+726: p18 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))')
+730: guard_class(p18, 16435208, descr=<Guard0x2f75850>) [p1, p0]
+742: p20 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+746: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x2fa8140>) [p1, p0]
debug_merge_point(0, 0, '(< AppRand33 AppRand34)')
+764: i22 = float_lt(f17, f11)
+768: guard_false(i22, descr=<Guard0x2f75898>) [p1, p0]
debug_merge_point(0, 0, '(if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))')
debug_merge_point(0, 0, '(void)')
+774: p23 = getfield_gc_r(p18, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+785: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x2f758e0>) [p1, p0]
+794: p25 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+798: p26 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+802: guard_class(p25, 16504944, descr=<Guard0x2f75928>) [p1, p0]
+814: p28 = getfield_gc_r(p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+818: guard_class(p26, 16435208, descr=<Guard0x2f75970>) [p1, p0]
+830: p30 = getfield_gc_r(p26, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+834: guard_nonnull_class(p30, ConstClass(ForwardLink), descr=<Guard0x2fa81a0>) [p1, p0]
debug_merge_point(0, 0, '(+ i5080 1)')
+853: i32 = getfield_gc_i(p25, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+857: i34 = int_add_ovf(i32, 1)
+861: guard_no_overflow(descr=<Guard0x2f759b8>) [p1, p0]
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
+867: guard_class(p28, 16480704, descr=<Guard0x2f75a00>) [p1, p0]
+879: p36 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+883: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x2f75a48>) [p1, p0]
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+892: p38 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+896: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x2fa8200>) [p1, p0]
+914: i40 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+918: i41 = int_eq(i34, i40)
+921: guard_false(i41, descr=<Guard0x2f75a90>) [p1, p0]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
+927: p42 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_0 24 pure>)
+931: p43 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+935: guard_nonnull_class(p43, ConstClass(W_Bool), descr=<Guard0x2fa8260>) [p1, p0]
+962: i46 = instance_ptr_eq(p43, ConstPtr(ptr45))
+965: guard_true(i46, descr=<Guard0x2f75ad8>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+971: p47 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+975: guard_nonnull_class(p47, ConstClass(W_Vector), descr=<Guard0x2fa82c0>) [p1, p0]
+995: i50 = int_ge(i34, 0)
+999: guard_true(i50, descr=<Guard0x2f75b20>) [p1, p0]
+1005: i51 = getfield_gc_i(p47, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1009: i52 = int_lt(i34, i51)
+1012: guard_true(i52, descr=<Guard0x2f75b68>) [p1, p0]
+1018: p53 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1022: guard_class(p53, 16623792, descr=<Guard0x2f75bb0>) [p1, p0]
+1035: p55 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1039: i56 = getarrayitem_gc_i(p55, i34, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand32 CellRef(kp))')
+1044: p57 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+1055: guard_nonnull_class(p57, ConstClass(W_Vector), descr=<Guard0x2fa8320>) [p1, p0]
+1073: p59 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+1084: p60 = getfield_gc_r(p59, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1095: guard_nonnull_class(p60, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa8380>) [p1, p0]
+1113: i62 = getfield_gc_i(p60, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1124: p63 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1124: i65 = int_ge(i56, 0)
+1128: guard_true(i65, descr=<Guard0x2f75bf8>) [p1, p0]
+1134: i66 = getfield_gc_i(p57, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1145: i67 = int_lt(i56, i66)
+1148: guard_true(i67, descr=<Guard0x2f75c40>) [p1, p0]
+1154: p68 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1165: guard_class(p68, 16622984, descr=<Guard0x2f75c88>) [p1, p0]
+1179: p70 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1183: p71 = getarrayitem_gc_r(p70, i56, descr=<ArrayP 8>)
+1195: guard_class(p71, ConstClass(W_Vector), descr=<Guard0x2f75cd0>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1209: i74 = int_ge(i62, 0)
+1213: guard_true(i74, descr=<Guard0x2f75d18>) [p1, p0]
+1219: i75 = getfield_gc_i(p71, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1224: i76 = int_lt(i62, i75)
+1227: guard_true(i76, descr=<Guard0x2f75d60>) [p1, p0]
+1233: p77 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1238: guard_class(p77, 16612728, descr=<Guard0x2f75da8>) [p1, p0]
+1251: p79 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1256: f80 = getarrayitem_gc_f(p79, i62, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1263: p81 = same_as_r(p30)
+1266: label(p28, i34, p30, p26, f80, p38, i40, p42, p47, i51, p55, p59, p60, p57, i66, p70, i62, p81, descr=TargetToken(49645952))
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1320: guard_not_invalidated(descr=<Guard0x2fa83e0>) [p26, i34, p28, f80, p30]
+1320: p82 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+1331: guard_nonnull_class(p82, ConstClass(W_Flonum), descr=<Guard0x2fa8440>) [p26, i34, p28, f80, p30]
+1349: f84 = getfield_gc_f(p82, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1354: f86 = float_sub(0.000000, f84)
debug_merge_point(0, 0, '(let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))')
debug_merge_point(0, 0, '(< AppRand33 AppRand34)')
+1373: i87 = float_lt(f80, f86)
+1377: guard_false(i87, descr=<Guard0x2f75df0>) [p26, i34, p28, f80, p30]
debug_merge_point(0, 0, '(if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
debug_merge_point(0, 0, '(+ i5080 1)')
+1383: i89 = int_add_ovf(i34, 1)
+1390: guard_no_overflow(descr=<Guard0x2f75e38>) [p26, i34, p28, f80, p30]
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+1396: i90 = int_eq(i89, i40)
+1403: guard_false(i90, descr=<Guard0x2f75e80>) [p26, i34, p28, f80, p30]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1409: i91 = int_lt(i89, i51)
+1416: guard_true(i91, descr=<Guard0x2f75ec8>) [p26, i34, p28, f80, p30]
+1422: i92 = getarrayitem_gc_i(p55, i89, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand32 CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1427: i94 = int_ge(i92, 0)
+1431: guard_true(i94, descr=<Guard0x2f75f10>) [p26, i34, p28, f80, p30]
+1437: i95 = int_lt(i92, i66)
+1440: guard_true(i95, descr=<Guard0x2f75f58>) [p26, i34, p28, f80, p30]
+1446: p96 = getarrayitem_gc_r(p70, i92, descr=<ArrayP 8>)
+1451: guard_class(p96, ConstClass(W_Vector), descr=<Guard0x2f75fa0>) [p26, i34, p28, f80, p30]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1463: i98 = getfield_gc_i(p96, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1467: i99 = int_lt(i62, i98)
+1470: guard_true(i99, descr=<Guard0x2faa020>) [p26, i34, p28, f80, p30]
+1476: p100 = getfield_gc_r(p96, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1480: guard_class(p100, 16612728, descr=<Guard0x2faa068>) [p26, i34, p28, f80, p30]
+1492: p102 = getfield_gc_r(p96, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1496: f103 = getarrayitem_gc_f(p102, i62, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1502: i104 = arraylen_gc(p55, descr=<ArrayS 8>)
+1502: i105 = arraylen_gc(p70, descr=<ArrayP 8>)
+1502: jump(p28, i89, p81, p26, f103, p38, i40, p42, p47, i51, p55, p59, p60, p57, i66, p70, i62, p81, descr=TargetToken(49645952))
+1536: --end of the loop--
[3e4c0a46765d72e] jit-log-opt-loop}
[3e4c0a467f706c4] {jit-backend
[3e4c0a4680909b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff
[3e4c0a4680a2dee] jit-backend-dump}
[3e4c0a4680aebbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff604 +0  24000000
[3e4c0a4680b00a4] jit-backend-dump}
[3e4c0a4680b43e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffc45 +0  24000000
[3e4c0a4680b5359] jit-backend-dump}
[3e4c0a4680b885d] {jit-backend-addr
bridge out of Guard 0x2ee3f58 has address 0x7f6e13cff600 to 0x7f6e13cffc40
       gc table: 0x7f6e13cff380
    jump target: 0x7f6e13cff600
         resops: 0x7f6e13cff60e
       failures: 0x7f6e13cffc40
            end: 0x7f6e13d00463
[3e4c0a4680bad6e] jit-backend-addr}
[3e4c0a4680be71b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff62d +0  98060000
[3e4c0a4680bf4ba] jit-backend-dump}
[3e4c0a4680c2956] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff645 +0  9C060000
[3e4c0a4680c3650] jit-backend-dump}
[3e4c0a4680c69f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff653 +0  AA060000
[3e4c0a4680c776e] jit-backend-dump}
[3e4c0a4680ca9d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff672 +0  A7060000
[3e4c0a4680cb705] jit-backend-dump}
[3e4c0a4680ce922] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff67b +0  BA060000
[3e4c0a4680cf637] jit-backend-dump}
[3e4c0a4680d2961] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff68f +0  C2060000
[3e4c0a4680d36c3] jit-backend-dump}
[3e4c0a4680d69ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff6a5 +0  C8060000
[3e4c0a4680d76ed] jit-backend-dump}
[3e4c0a4680da9b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff6b7 +0  D2060000
[3e4c0a4680db693] jit-backend-dump}
[3e4c0a4680de8a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff6c8 +0  DD060000
[3e4c0a4680df5a1] jit-backend-dump}
[3e4c0a4680e2819] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff6df +0  E2060000
[3e4c0a4680e350d] jit-backend-dump}
[3e4c0a4680e6739] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff6f9 +0  E4060000
[3e4c0a4680e7417] jit-backend-dump}
[3e4c0a4680ea6a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff718 +0  E1060000
[3e4c0a4680eb3d3] jit-backend-dump}
[3e4c0a4680ee65e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff730 +0  E5060000
[3e4c0a4680ef35b] jit-backend-dump}
[3e4c0a4680f25b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff748 +0  E9060000
[3e4c0a4680f3293] jit-backend-dump}
[3e4c0a4680f64ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff752 +0  FB060000
[3e4c0a4680f71e1] jit-backend-dump}
[3e4c0a4680fa4ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff75f +0  0A070000
[3e4c0a4680fb1ca] jit-backend-dump}
[3e4c0a4680fe406] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff771 +0  14070000
[3e4c0a4680ff0e1] jit-backend-dump}
[3e4c0a468102394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff787 +0  1A070000
[3e4c0a46810309a] jit-backend-dump}
[3e4c0a468106343] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff797 +0  26070000
[3e4c0a46810702e] jit-backend-dump}
[3e4c0a46810a29d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff7a1 +0  38070000
[3e4c0a46810af8b] jit-backend-dump}
[3e4c0a46810e1e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff7ae +0  47070000
[3e4c0a46810eec0] jit-backend-dump}
[3e4c0a46811213b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff7cd +0  44070000
[3e4c0a468112e23] jit-backend-dump}
[3e4c0a468116086] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff7e2 +0  4B070000
[3e4c0a468116d61] jit-backend-dump}
[3e4c0a468119fe0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff7f9 +0  50070000
[3e4c0a46811acbe] jit-backend-dump}
[3e4c0a46811df3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff807 +0  5E070000
[3e4c0a46811ec4c] jit-backend-dump}
[3e4c0a468121f08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff819 +0  68070000
[3e4c0a468122bd4] jit-backend-dump}
[3e4c0a468125e4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff82d +0  70070000
[3e4c0a468126b34] jit-backend-dump}
[3e4c0a468129da6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff848 +0  71070000
[3e4c0a46812aaac] jit-backend-dump}
[3e4c0a46812ddca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff859 +0  7C070000
[3e4c0a46812eaab] jit-backend-dump}
[3e4c0a468131d83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff870 +0  81070000
[3e4c0a468132a6a] jit-backend-dump}
[3e4c0a468135cbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff87a +0  93070000
[3e4c0a46813699f] jit-backend-dump}
[3e4c0a468139c40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff887 +0  A2070000
[3e4c0a46813a91e] jit-backend-dump}
[3e4c0a46813dba6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff897 +0  AE070000
[3e4c0a46813e893] jit-backend-dump}
[3e4c0a468141b3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff8b6 +0  AB070000
[3e4c0a46814281b] jit-backend-dump}
[3e4c0a468145ab8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff8cc +0  B1070000
[3e4c0a468146781] jit-backend-dump}
[3e4c0a468149a77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff8e4 +0  B5070000
[3e4c0a46814a73a] jit-backend-dump}
[3e4c0a46814d9bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff8ee +0  C7070000
[3e4c0a46814e6a0] jit-backend-dump}
[3e4c0a4681519f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff8f7 +0  DA070000
[3e4c0a4681526be] jit-backend-dump}
[3e4c0a468155973] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff916 +0  D7070000
[3e4c0a46815664f] jit-backend-dump}
[3e4c0a4681598f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff926 +0  E3070000
[3e4c0a46815a5cd] jit-backend-dump}
[3e4c0a46815d82d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff92f +0  F6070000
[3e4c0a46815e4ff] jit-backend-dump}
[3e4c0a4681617b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff93d +0  04080000
[3e4c0a4681624a6] jit-backend-dump}
[3e4c0a468165718] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff946 +0  17080000
[3e4c0a4681663ed] jit-backend-dump}
[3e4c0a46816968a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff95f +0  1A080000
[3e4c0a46816a372] jit-backend-dump}
[3e4c0a46816d699] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff969 +0  2C080000
[3e4c0a46816e377] jit-backend-dump}
[3e4c0a46817170c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff976 +0  3B080000
[3e4c0a468172431] jit-backend-dump}
[3e4c0a46817570e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff986 +0  47080000
[3e4c0a4681763f0] jit-backend-dump}
[3e4c0a468179723] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff99b +0  4E080000
[3e4c0a46817a3f2] jit-backend-dump}
[3e4c0a46817d66d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff9ab +0  5A080000
[3e4c0a46817e355] jit-backend-dump}
[3e4c0a4681815f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff9b8 +0  69080000
[3e4c0a4681822d6] jit-backend-dump}
[3e4c0a468185530] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff9c6 +0  77080000
[3e4c0a468186212] jit-backend-dump}
[3e4c0a4681894a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff9d0 +0  89080000
[3e4c0a46818a17e] jit-backend-dump}
[3e4c0a46818d3f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff9d9 +0  9C080000
[3e4c0a46818e1d9] jit-backend-dump}
[3e4c0a468191442] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff9ff +0  92080000
[3e4c0a46819211a] jit-backend-dump}
[3e4c0a4681953b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffa10 +0  9D080000
[3e4c0a468196080] jit-backend-dump}
[3e4c0a468199345] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffa2a +0  9F080000
[3e4c0a46819a00b] jit-backend-dump}
[3e4c0a46819d2c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffa45 +0  A0080000
[3e4c0a46819dfa2] jit-backend-dump}
[3e4c0a4681a122d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffa57 +0  AA080000
[3e4c0a4681a1f02] jit-backend-dump}
[3e4c0a4681a519f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffa64 +0  B9080000
[3e4c0a4681a5e65] jit-backend-dump}
[3e4c0a4681a90ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffa74 +0  C5080000
[3e4c0a4681a9dc5] jit-backend-dump}
[3e4c0a4681ad041] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffa89 +0  CC080000
[3e4c0a4681add19] jit-backend-dump}
[3e4c0a4681b0fad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffa93 +0  DE080000
[3e4c0a4681b1c8e] jit-backend-dump}
[3e4c0a4681b4edf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffaa7 +0  E6080000
[3e4c0a4681b5bb7] jit-backend-dump}
[3e4c0a4681b8e33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffab8 +0  F1080000
[3e4c0a4681b9b11] jit-backend-dump}
[3e4c0a4681bcdc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffae4 +0  E1080000
[3e4c0a4681bda90] jit-backend-dump}
[3e4c0a4681c0d0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffaf4 +0  E7080000
[3e4c0a4681c19da] jit-backend-dump}
[3e4c0a4681c4c37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffb01 +0  F0080000
[3e4c0a4681c5944] jit-backend-dump}
[3e4c0a4681c8bc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffb19 +0  EE080000
[3e4c0a4681c98ad] jit-backend-dump}
[3e4c0a4681ccb13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffb2d +0  F0080000
[3e4c0a4681cd7f7] jit-backend-dump}
[3e4c0a4681d0af3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffb3a +0  F9080000
[3e4c0a4681d17de] jit-backend-dump}
[3e4c0a4681d4aaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cffb4b +0  FE080000
[3e4c0a4681d57a3] jit-backend-dump}
[3e4c0a4681d8d71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf52bd +0  3FA30000
[3e4c0a4681d9aa2] jit-backend-dump}
[3e4c0a4681ddbdc] jit-backend}
[3e4c0a4681e1c83] {jit-log-opt-bridge
# bridge out of Guard 0x2ee3f58 with 271 ops
[i0, p1, p2, p3]
+662: guard_not_invalidated(descr=<Guard0x2fa84a0>) [i0, p1, p2, p3]
+662: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+680: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x2faa0b0>) [i0, p1, p2, p3]
+689: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+693: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x2fa8500>) [i0, p1, p2, p3]
+713: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+717: i10 = int_add_ovf(i8, 1)
+721: guard_no_overflow(descr=<Guard0x2faa0f8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))')
+727: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+738: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x2fa8560>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(= kk5209 AppRand56)')
+758: i13 = int_eq(i0, i10)
+761: guard_true(i13, descr=<Guard0x2faa140>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61))))')
debug_merge_point(0, 0, '(void)')
+767: p14 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+778: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x2faa188>) [i0, p1, p2, p3]
+787: p16 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+791: p17 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(matrix-set! a5002 CellRef(ip) CellRef(kp) piv)')
+795: guard_class(p16, 16504592, descr=<Guard0x2faa1d0>) [i0, p1, p2, p3]
+809: p19 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+814: guard_class(p19, 16499664, descr=<Guard0x2faa218>) [i0, p1, p2, p3]
+827: p21 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+831: guard_class(p21, 16479200, descr=<Guard0x2faa260>) [i0, p1, p2, p3]
+844: p23 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+848: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x2fa85c0>) [i0, p1, p2, p3]
+867: p25 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+871: p26 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+875: guard_nonnull_class(p26, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa8620>) [i0, p1, p2, p3]
+893: i28 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+897: p29 = getfield_gc_r(p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+901: p30 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+905: guard_nonnull_class(p30, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa8680>) [i0, p1, p2, p3]
+924: i32 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+928: f33 = getfield_gc_f(p16, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+935: p34 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
+935: guard_class(p17, 16435208, descr=<Guard0x2faa2a8>) [i0, p1, p2, p3]
+948: p36 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+952: guard_nonnull_class(p36, ConstClass(ForwardLink), descr=<Guard0x2fa86e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+972: i39 = int_ge(i28, 0)
+976: guard_true(i39, descr=<Guard0x2faa2f0>) [i0, p1, p2, p3]
+982: i40 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+986: i41 = int_lt(i28, i40)
+989: guard_true(i41, descr=<Guard0x2faa338>) [i0, p1, p2, p3]
+995: p42 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+999: guard_class(p42, 16622984, descr=<Guard0x2faa380>) [i0, p1, p2, p3]
+1013: p44 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1017: p45 = getarrayitem_gc_r(p44, i28, descr=<ArrayP 8>)
+1022: guard_class(p45, ConstClass(W_Vector), descr=<Guard0x2faa3c8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1035: p47 = getfield_gc_r(p45, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1039: guard_class(p47, 16612728, descr=<Guard0x2faa410>) [i0, p1, p2, p3]
+1051: i50 = int_ge(i32, 0)
+1055: guard_true(i50, descr=<Guard0x2faa458>) [i0, p1, p2, p3]
+1061: i51 = getfield_gc_i(p45, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1065: i52 = int_lt(i32, i51)
+1068: guard_true(i52, descr=<Guard0x2faa4a0>) [i0, p1, p2, p3]
+1074: p53 = getfield_gc_r(p45, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1078: setarrayitem_gc(p53, i32, f33, descr=<ArrayF 8>)
+1085: p54 = getfield_gc_r(p17, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1096: guard_value(p54, ConstPtr(ptr55), descr=<Guard0x2fa8740>) [p54, p17, None, None, None, None]
+1105: p57 = getfield_gc_r(p17, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1109: p58 = getfield_gc_r(p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1113: guard_class(p58, 16435208, descr=<Guard0x2faa4e8>) [p54, p17, None, None, None, None]
+1126: p60 = getfield_gc_r(p58, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1130: guard_nonnull_class(p60, ConstClass(ForwardLink), descr=<Guard0x2fa87a0>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
+1149: guard_class(p57, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x2faa530>) [p54, p17, None, None, None, None]
+1163: p63 = getfield_gc_r(p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1167: i64 = arraylen_gc(p63, descr=<ArrayP 8>)
+1171: i66 = int_eq(20, i64)
+1175: guard_false(i66, descr=<Guard0x2faa578>) [p54, p17, None, None, None, None]
+1181: p67 = getfield_gc_r(p57, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1192: guard_value(p67, ConstPtr(ptr68), descr=<Guard0x2faa5c0>) [p54, p17, None, None, None, None]
+1201: p70 = getarrayitem_gc_pure_r(p63, 8, descr=<ArrayP 8>)
+1205: p71 = getfield_gc_r(p70, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1210: guard_nonnull_class(p71, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa8800>) [p54, p17, None, None, None, None]
+1228: i73 = getfield_gc_i(p71, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1232: i75 = int_sub_ovf(i73, 1)
+1239: guard_no_overflow(descr=<Guard0x2faa608>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand98)')
+1245: p77 = getarrayitem_gc_pure_r(p63, 12, descr=<ArrayP 8>)
+1249: guard_nonnull_class(p77, ConstClass(W_Vector), descr=<Guard0x2fa8860>) [p54, p17, None, None, None, None]
+1268: i80 = int_ge(i75, 0)
+1272: guard_true(i80, descr=<Guard0x2faa650>) [p54, p17, None, None, None, None]
+1278: i81 = getfield_gc_i(p77, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1282: i82 = int_lt(i75, i81)
+1285: guard_true(i82, descr=<Guard0x2faa698>) [p54, p17, None, None, None, None]
+1291: p83 = getfield_gc_r(p77, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1295: guard_class(p83, 16623792, descr=<Guard0x2faa6e0>) [p54, p17, None, None, None, None]
+1307: p85 = getfield_gc_r(p77, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1311: i86 = getarrayitem_gc_i(p85, i75, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(+ n m12 -1)')
+1316: p88 = getarrayitem_gc_pure_r(p63, 4, descr=<ArrayP 8>)
+1320: guard_nonnull_class(p88, ConstClass(W_Fixnum), descr=<Guard0x2fa88c0>) [p54, p17, None, None, None, None]
+1338: p91 = getarrayitem_gc_pure_r(p63, 1, descr=<ArrayP 8>)
+1342: guard_nonnull_class(p91, ConstClass(W_Fixnum), descr=<Guard0x2fa8920>) [p54, p17, None, None, None, None]
+1360: i93 = getfield_gc_i(p88, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1371: i94 = getfield_gc_i(p91, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1375: i95 = int_add_ovf(i93, i94)
+1378: guard_no_overflow(descr=<Guard0x2faa728>) [p54, p17, None, None, None, None]
+1384: i97 = int_add_ovf(i95, -1)
+1388: guard_no_overflow(descr=<Guard0x2faa770>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void))))))))')
debug_merge_point(0, 0, '(>= AppRand99 AppRand100)')
+1394: i98 = int_ge(i86, i97)
+1397: guard_false(i98, descr=<Guard0x2faa7b8>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))')
debug_merge_point(0, 0, '(let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void))))))')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
debug_merge_point(0, 0, '(let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand115)')
+1403: i99 = getarrayitem_gc_i(p85, i75, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(+ n m1)')
+1408: p101 = getarrayitem_gc_pure_r(p63, 17, descr=<ArrayP 8>)
+1415: guard_nonnull_class(p101, ConstClass(W_Fixnum), descr=<Guard0x2fa8980>) [p54, p17, None, None, None, None]
+1434: i103 = getfield_gc_i(p101, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1438: i104 = int_add_ovf(i93, i103)
+1444: guard_no_overflow(descr=<Guard0x2faa800>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void))))')
debug_merge_point(0, 0, '(>= AppRand116 AppRand117)')
+1450: i105 = int_ge(i99, i104)
+1453: guard_true(i105, descr=<Guard0x2faa848>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))')
debug_merge_point(0, 0, '(if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)')
debug_merge_point(0, 0, '(let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121))))')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
debug_merge_point(0, 0, '(let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand118)')
+1459: i106 = getarrayitem_gc_i(p85, i75, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(+ m1 n)')
+1464: i107 = int_add_ovf(i103, i93)
+1467: guard_no_overflow(descr=<Guard0x2faa890>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121))')
debug_merge_point(0, 0, '(- AppRand119 AppRand120)')
+1473: i108 = int_sub_ovf(i106, i107)
+1476: guard_no_overflow(descr=<Guard0x2faa8d8>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref l3 AppRand121)')
+1482: p110 = getarrayitem_gc_pure_r(p63, 16, descr=<ArrayP 8>)
+1489: guard_nonnull_class(p110, ConstClass(W_Vector), descr=<Guard0x2fa89e0>) [p54, p17, None, None, None, None]
+1507: i113 = int_ge(i108, 0)
+1511: guard_true(i113, descr=<Guard0x2faa920>) [p54, p17, None, None, None, None]
+1517: i114 = getfield_gc_i(p110, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1521: i115 = int_lt(i108, i114)
+1524: guard_true(i115, descr=<Guard0x2faa968>) [p54, p17, None, None, None, None]
+1530: p116 = getfield_gc_r(p110, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1534: guard_class(p116, 16622984, descr=<Guard0x2faa9b0>) [p54, p17, None, None, None, None]
+1546: p118 = getfield_gc_r(p110, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1550: p119 = getarrayitem_gc_r(p118, i108, descr=<ArrayP 8>)
+1555: guard_class(p119, ConstClass(W_Bool), descr=<Guard0x2faa9f8>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void))')
+1574: i122 = instance_ptr_eq(p119, ConstPtr(ptr121))
+1577: guard_false(i122, descr=<Guard0x2faaa40>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0)))')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
+1583: i124 = int_sub(i73, 1)
debug_merge_point(0, 0, '(let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f)))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand122)')
+1587: i125 = int_lt(i124, i81)
+1590: guard_true(i125, descr=<Guard0x2faaa88>) [p54, p17, None, None, None, None]
+1596: i126 = getarrayitem_gc_i(p85, i124, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(+ m1 n)')
debug_merge_point(0, 0, '(let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))')
debug_merge_point(0, 0, '(- AppRand123 AppRand124)')
+1601: i127 = int_sub_ovf(i126, i107)
+1604: guard_no_overflow(descr=<Guard0x2faaad0>) [p54, p17, None, None, None, None]
debug_merge_point(0, 0, '(vector-set! l3 AppRand125 #f)')
+1610: i129 = int_ge(i127, 0)
+1614: guard_true(i129, descr=<Guard0x2faab18>) [p54, p17, None, None, None, None]
+1620: i130 = int_lt(i127, i114)
+1623: guard_true(i130, descr=<Guard0x2faab60>) [p54, p17, None, None, None, None]
+1639: setarrayitem_gc(p118, i127, ConstPtr(ptr131), descr=<ArrayP 8>)
debug_merge_point(0, 0, '(let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129))))')
debug_merge_point(0, 0, '(+ m 1)')
+1644: p133 = getarrayitem_gc_pure_r(p63, 13, descr=<ArrayP 8>)
+1648: guard_nonnull_class(p133, ConstClass(W_Fixnum), descr=<Guard0x2fa8a40>) [p57, p133, p58, p60, None, None, None, None]
+1667: i135 = getfield_gc_i(p133, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1671: i137 = int_add_ovf(i135, 1)
+1678: guard_no_overflow(descr=<Guard0x2faaba8>) [p57, p133, p58, p60, None, None, None, None]
debug_merge_point(0, 0, '(+ m 1)')
debug_merge_point(0, 0, '(let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand127 CellRef(kp))')
+1684: p139 = getarrayitem_gc_pure_r(p63, 18, descr=<ArrayP 8>)
+1691: guard_nonnull_class(p139, ConstClass(W_Vector), descr=<Guard0x2fa8aa0>) [p57, p133, p58, p60, None, None, None, None]
+1710: p142 = getarrayitem_gc_pure_r(p63, 6, descr=<ArrayP 8>)
+1714: p143 = getfield_gc_r(p142, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1718: guard_nonnull_class(p143, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa8b00>) [p57, p133, p58, p60, None, None, None, None]
+1737: i145 = getfield_gc_i(p143, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1741: p146 = getfield_gc_r(p57, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1745: i148 = int_ge(i137, 0)
+1749: guard_true(i148, descr=<Guard0x2faabf0>) [p57, p133, p58, p60, None, None, None, None]
+1755: i149 = getfield_gc_i(p139, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1759: i150 = int_lt(i137, i149)
+1762: guard_true(i150, descr=<Guard0x2faac38>) [p57, p133, p58, p60, None, None, None, None]
+1768: p151 = getfield_gc_r(p139, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1772: guard_class(p151, 16622984, descr=<Guard0x2faac80>) [p57, p133, p58, p60, None, None, None, None]
+1784: p153 = getfield_gc_r(p139, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1788: p154 = getarrayitem_gc_r(p153, i137, descr=<ArrayP 8>)
+1793: guard_class(p154, ConstClass(W_Vector), descr=<Guard0x2faacc8>) [p57, p133, p58, p60, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1805: i157 = int_ge(i145, 0)
+1809: guard_true(i157, descr=<Guard0x2faad10>) [p57, p133, p58, p60, None, None, None, None]
+1815: i158 = getfield_gc_i(p154, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1826: i159 = int_lt(i145, i158)
+1829: guard_true(i159, descr=<Guard0x2faad58>) [p57, p133, p58, p60, None, None, None, None]
+1835: p160 = getfield_gc_r(p154, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1839: guard_class(p160, 16612728, descr=<Guard0x2faada0>) [p57, p133, p58, p60, None, None, None, None]
+1852: p162 = getfield_gc_r(p154, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1856: f163 = getarrayitem_gc_f(p162, i145, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(+ AppRand128 1.0)')
+1863: f165 = float_add(f163, 1.000000)
debug_merge_point(0, 0, '(matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1878: p166 = getarrayitem_gc_r(p153, i137, descr=<ArrayP 8>)
+1883: guard_class(p166, ConstClass(W_Vector), descr=<Guard0x2faade8>) [p57, p133, p58, p60, None, None, None, None]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1896: p168 = getfield_gc_r(p166, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1900: guard_class(p168, 16612728, descr=<Guard0x2faae30>) [p57, p133, p58, p60, None, None, None, None]
+1912: i170 = getfield_gc_i(p166, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1916: i171 = int_lt(i145, i170)
+1919: guard_true(i171, descr=<Guard0x2faae78>) [p57, p133, p58, p60, None, None, None, None]
+1925: p172 = getfield_gc_r(p166, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1929: setarrayitem_gc(p172, i145, f165, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))')
+1936: guard_class(p146, 16505296, descr=<Guard0x2fa8b60>) [p57, p146, p139, p133, p142, p58, p60, None, None, None, None]
debug_merge_point(0, 0, '(doloop5448 0)')
debug_merge_point(0, 0, '(let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))) from (doloop5448 0)')
debug_merge_point(0, 0, '(+ m 2)')
+1949: i175 = int_add(i135, 2)
debug_merge_point(0, 0, '(let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))')
debug_merge_point(0, 0, '(= i5450 AppRand130)')
debug_merge_point(0, 0, '(if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133))))')
debug_merge_point(0, 0, '(let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))')
debug_merge_point(0, 0, '(matrix-ref a5002 i5450 CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1953: p177 = getarrayitem_gc_r(p153, 0, descr=<ArrayP 8>)
+1957: guard_class(p177, ConstClass(W_Vector), descr=<Guard0x2faaec0>) [p57, p146, p139, p133, p142, p58, p60, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1969: i179 = getfield_gc_i(p177, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1973: i180 = int_lt(i145, i179)
+1976: guard_true(i180, descr=<Guard0x2faaf08>) [p57, p146, p139, p133, p142, p58, p60, None, None, None, None]
+1982: p181 = getfield_gc_r(p177, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1986: guard_class(p181, 16612728, descr=<Guard0x2faaf50>) [p57, p146, p139, p133, p142, p58, p60, None, None, None, None]
+1999: p183 = getfield_gc_r(p177, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2003: f184 = getarrayitem_gc_f(p183, i145, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) from (vector-ref AppRand1 j)')
+2010: p185 = new_with_vtable(descr=<SizeDescr 48>)
+2061: p186 = new_with_vtable(descr=<SizeDescr 40>)
+2072: i187 = arraylen_gc(p153, descr=<ArrayP 8>)
+2079: setfield_gc(p185, ConstPtr(ptr188), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2083: setfield_gc(p186, p60, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2101: setfield_gc(p186, ConstPtr(ptr189), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2105: setfield_gc(p186, p57, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2109: setfield_gc(p186, p58, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2113: setfield_gc(p185, p146, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2117: setfield_gc(p185, p142, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+2121: setfield_gc(p185, p133, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+2132: setfield_gc(p185, p139, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+2136: jump(p185, 0, f184, p60, p186, p142, p143, p139, p153, i145, p133, i175, p60, i149, descr=TargetToken(48737280))
+2240: --end of the loop--
[3e4c0a4682c5af7] jit-log-opt-bridge}
[3e4c0a4684ed9b7] {jit-backend
[3e4c0a46853fec4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d005b
[3e4c0a468547f9f] jit-backend-dump}
[3e4c0a468553237] {jit-backend-addr
Loop 28 ((let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand77 0.0)) has address 0x7f6e13d006dd to 0x7f6e13d00870 (bootstrap 0x7f6e13d00650)
       gc table: 0x7f6e13d005b0
       function: 0x7f6e13d00650
         resops: 0x7f6e13d006dd
       failures: 0x7f6e13d00870
            end: 0x7f6e13d00a96
[3e4c0a468555fb4] jit-backend-addr}
[3e4c0a46855a933] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d006f4 +0  8A010000
[3e4c0a46855bcea] jit-backend-dump}
[3e4c0a46855f424] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0070a +0  90010000
[3e4c0a46856033b] jit-backend-dump}
[3e4c0a4685639c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0071d +0  B5010000
[3e4c0a46856476c] jit-backend-dump}
[3e4c0a468567dc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00731 +0  BD010000
[3e4c0a468568aba] jit-backend-dump}
[3e4c0a46856c014] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00745 +0  C5010000
[3e4c0a46856ccf8] jit-backend-dump}
[3e4c0a4685700ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0075c +0  CA010000
[3e4c0a468570d7b] jit-backend-dump}
[3e4c0a468574103] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00769 +0  D9010000
[3e4c0a468574deb] jit-backend-dump}
[3e4c0a46857818f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00776 +0  E8010000
[3e4c0a468578e8c] jit-backend-dump}
[3e4c0a46857c2fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0078d +0  ED010000
[3e4c0a46857cfc0] jit-backend-dump}
[3e4c0a4685803b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d007a5 +0  F1010000
[3e4c0a468581098] jit-backend-dump}
[3e4c0a468584495] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d007af +0  03020000
[3e4c0a46858517a] jit-backend-dump}
[3e4c0a468588598] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d007bc +0  12020000
[3e4c0a46858926a] jit-backend-dump}
[3e4c0a46858c68f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d007cd +0  1D020000
[3e4c0a46858d367] jit-backend-dump}
[3e4c0a468590764] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d007e3 +0  23020000
[3e4c0a468591446] jit-backend-dump}
[3e4c0a4685947bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d007f2 +0  30020000
[3e4c0a468595494] jit-backend-dump}
[3e4c0a4685988cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d007ff +0  3F020000
[3e4c0a4685995cb] jit-backend-dump}
[3e4c0a46859c9fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0080f +0  4B020000
[3e4c0a46859d6d8] jit-backend-dump}
[3e4c0a4685a0aa4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00830 +0  46020000
[3e4c0a4685a1788] jit-backend-dump}
[3e4c0a4685a556d] jit-backend}
[3e4c0a4685a9535] {jit-log-opt-loop
# Loop 28 ((let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand77 0.0)) : entry bridge with 61 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand77 0.0)')
+309: guard_class(p1, 16435208, descr=<Guard0x2fa8bc0>) [p0, p1]
+328: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+332: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2fa8c20>) [p0, p1]
debug_merge_point(0, 0, '(> i5283 m)')
+350: guard_not_invalidated(descr=<Guard0x2faaf98>) [p0, p1]
+350: guard_class(p0, 16504240, descr=<Guard0x2faafe0>) [p0, p1]
+369: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+373: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+377: guard_class(p7, 16478448, descr=<Guard0x2fab028>) [p0, p1]
+389: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+400: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2fab070>) [p0, p1]
+409: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+413: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x2fa8c80>) [p0, p1]
+432: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+436: i14 = int_gt(i6, i13)
+439: guard_false(i14, descr=<Guard0x2fab0b8>) [p0, p1]
debug_merge_point(0, 0, '(if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))')
debug_merge_point(0, 0, '(let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)))')
debug_merge_point(0, 0, '(+ i5283 1)')
+445: i16 = int_add_ovf(i6, 1)
+452: guard_no_overflow(descr=<Guard0x2fab100>) [p0, p1]
debug_merge_point(0, 0, '(matrix-ref a5002 i5283 k5277)')
+458: p17 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+462: guard_nonnull_class(p17, ConstClass(W_Vector), descr=<Guard0x2fa8ce0>) [p0, p1]
+481: p19 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+485: guard_nonnull_class(p19, ConstClass(W_Fixnum), descr=<Guard0x2fa8d40>) [p0, p1]
+505: p21 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+505: i23 = int_ge(i6, 0)
+509: guard_true(i23, descr=<Guard0x2fab148>) [p0, p1]
+515: i24 = getfield_gc_i(p17, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+519: i25 = int_lt(i6, i24)
+522: guard_true(i25, descr=<Guard0x2fab190>) [p0, p1]
+528: p26 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+532: guard_class(p26, 16622984, descr=<Guard0x2fab1d8>) [p0, p1]
+545: p28 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+549: p29 = getarrayitem_gc_r(p28, i6, descr=<ArrayP 8>)
+554: guard_class(p29, ConstClass(W_Vector), descr=<Guard0x2fab220>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+567: i31 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+572: i33 = int_ge(i31, 0)
+576: guard_true(i33, descr=<Guard0x2fab268>) [p0, p1]
+582: i34 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+586: i35 = int_lt(i31, i34)
+589: guard_true(i35, descr=<Guard0x2fab2b0>) [p0, p1]
+595: p36 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+599: guard_class(p36, 16612728, descr=<Guard0x2fab2f8>) [p0, p1]
+611: p38 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+615: f39 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(+ sum AppRand75)')
+622: p40 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+626: guard_nonnull_class(p40, ConstClass(W_Flonum), descr=<Guard0x2fa8da0>) [p0, p1]
+644: f42 = getfield_gc_f(p40, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+649: f43 = float_add(f42, f39)
debug_merge_point(0, 0, '(doloop5281 AppRand74 AppRand76)')
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)')
+653: i44 = arraylen_gc(p28, descr=<ArrayP 8>)
+653: jump(p7, i16, f43, p1, p3, p11, i13, p17, i24, p28, p19, i31, descr=TargetToken(48739840))
+704: --end of the loop--
[3e4c0a4685e2c9f] jit-log-opt-loop}
[3e4c0a468aa8af0] {jit-backend
[3e4c0a468b336b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00cb
[3e4c0a468b3e052] jit-backend-dump}
[3e4c0a468b497be] {jit-backend-addr
Loop 29 ((let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop 1)) has address 0x7f6e13d00e4d to 0x7f6e13d01160 (bootstrap 0x7f6e13d00dc0)
       gc table: 0x7f6e13d00cb0
       function: 0x7f6e13d00dc0
         resops: 0x7f6e13d00e4d
       failures: 0x7f6e13d01160
            end: 0x7f6e13d014d0
[3e4c0a468b4ca89] jit-backend-addr}
[3e4c0a468b512c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00e64 +0  0A030000
[3e4c0a468b524bf] jit-backend-dump}
[3e4c0a468b55c9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00e7a +0  10030000
[3e4c0a468b56adf] jit-backend-dump}
[3e4c0a468b5a0de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00e8d +0  35030000
[3e4c0a468b5ae62] jit-backend-dump}
[3e4c0a468b5e2b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00ea1 +0  3D030000
[3e4c0a468b5efdf] jit-backend-dump}
[3e4c0a468b62497] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00eb5 +0  45030000
[3e4c0a468b6319a] jit-backend-dump}
[3e4c0a468b6652f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00ecf +0  47030000
[3e4c0a468b6722c] jit-backend-dump}
[3e4c0a468b6a632] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00edc +0  56030000
[3e4c0a468b6b319] jit-backend-dump}
[3e4c0a468b6e72f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00ee9 +0  65030000
[3e4c0a468b6f416] jit-backend-dump}
[3e4c0a468b727eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00ef9 +0  71030000
[3e4c0a468b734e2] jit-backend-dump}
[3e4c0a468b768ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00f10 +0  76030000
[3e4c0a468b77599] jit-backend-dump}
[3e4c0a468b7a9e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00f1a +0  88030000
[3e4c0a468b7b701] jit-backend-dump}
[3e4c0a468b7eb13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00f27 +0  97030000
[3e4c0a468b7f82c] jit-backend-dump}
[3e4c0a468b82c16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00f39 +0  A1030000
[3e4c0a468b83901] jit-backend-dump}
[3e4c0a468b86d2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00f59 +0  9D030000
[3e4c0a468b87a19] jit-backend-dump}
[3e4c0a468b8ae41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00f70 +0  A2030000
[3e4c0a468b8bb63] jit-backend-dump}
[3e4c0a468b8ef4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00f7e +0  B0030000
[3e4c0a468b8fc41] jit-backend-dump}
[3e4c0a468b93022] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00f92 +0  B8030000
[3e4c0a468b93d1c] jit-backend-dump}
[3e4c0a468b97116] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00fa2 +0  C4030000
[3e4c0a468b97e2f] jit-backend-dump}
[3e4c0a468b9b1e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00fbe +0  C4030000
[3e4c0a468b9bedc] jit-backend-dump}
[3e4c0a468b9f2c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00fc8 +0  D6030000
[3e4c0a468b9ffab] jit-backend-dump}
[3e4c0a468ba331e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00fdc +0  DE030000
[3e4c0a468ba4012] jit-backend-dump}
[3e4c0a468ba73a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d00fed +0  E9030000
[3e4c0a468ba80ad] jit-backend-dump}
[3e4c0a468bab4aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01019 +0  D9030000
[3e4c0a468bac195] jit-backend-dump}
[3e4c0a468baf545] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01037 +0  D7030000
[3e4c0a468bb024b] jit-backend-dump}
[3e4c0a468bb3602] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0106c +0  B8030000
[3e4c0a468bb4302] jit-backend-dump}
[3e4c0a468bb76a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0108f +0  B1030000
[3e4c0a468bb83c2] jit-backend-dump}
[3e4c0a468bbb78e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01099 +0  C3030000
[3e4c0a468bbc47b] jit-backend-dump}
[3e4c0a468bbf860] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d010a7 +0  D1030000
[3e4c0a468bc0563] jit-backend-dump}
[3e4c0a468bc3904] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d010b8 +0  DC030000
[3e4c0a468bc45fe] jit-backend-dump}
[3e4c0a468bc79d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d010eb +0  C5030000
[3e4c0a468bc86c7] jit-backend-dump}
[3e4c0a468bcc5b3] jit-backend}
[3e4c0a468bd0513] {jit-log-opt-loop
# Loop 29 ((let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop 1)) : entry bridge with 117 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop 1)')
+421: guard_class(p1, 16435208, descr=<Guard0x2fa8e00>) [p0, p1]
+440: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+444: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2fa8e60>) [p0, p1]
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+462: guard_not_invalidated(descr=<Guard0x2fab340>) [p0, p1]
+462: guard_class(p0, 16504944, descr=<Guard0x2fab388>) [p0, p1]
+481: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+485: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+489: guard_class(p7, 16479952, descr=<Guard0x2fab3d0>) [p0, p1]
+501: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+512: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2fab418>) [p0, p1]
+521: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+525: p12 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+529: guard_nonnull_class(p12, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa8ec0>) [p0, p1]
+547: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+551: i15 = int_ge(i6, i14)
+554: guard_false(i15, descr=<Guard0x2fab460>) [p0, p1]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
+560: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+564: guard_nonnull(p16, descr=<Guard0x2fab4a8>) [p0, p1]
+580: i18 = instance_ptr_eq(p16, ConstPtr(ptr17))
+583: guard_true(i18, descr=<Guard0x2fab4f0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+589: p19 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+593: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x2fa8f20>) [p0, p1]
+612: i22 = int_ge(i6, 0)
+616: guard_true(i22, descr=<Guard0x2fab538>) [p0, p1]
+622: i23 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+626: i24 = int_lt(i6, i23)
+629: guard_true(i24, descr=<Guard0x2fab580>) [p0, p1]
+635: p25 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+639: guard_class(p25, 16623792, descr=<Guard0x2fab5c8>) [p0, p1]
+653: p27 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+657: i28 = getarrayitem_gc_i(p27, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
+662: p29 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+666: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x2fa8f80>) [p0, p1]
+685: p31 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+689: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x2fa8fe0>) [p0, p1]
+708: p33 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+708: i34 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+712: i36 = int_ge(i34, 0)
+716: guard_true(i36, descr=<Guard0x2fab610>) [p0, p1]
+722: i37 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+733: i38 = int_lt(i34, i37)
+736: guard_true(i38, descr=<Guard0x2fab658>) [p0, p1]
+742: p39 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+746: guard_class(p39, 16622984, descr=<Guard0x2fab6a0>) [p0, p1]
+758: p41 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+762: p42 = getarrayitem_gc_r(p41, i34, descr=<ArrayP 8>)
+774: guard_class(p42, ConstClass(W_Vector), descr=<Guard0x2fab6e8>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+786: i45 = int_ge(i28, 0)
+790: guard_true(i45, descr=<Guard0x2fab730>) [p0, p1]
+796: i46 = getfield_gc_i(p42, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+807: i47 = int_lt(i28, i46)
+810: guard_true(i47, descr=<Guard0x2fab778>) [p0, p1]
+816: p48 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+820: guard_class(p48, 16612728, descr=<Guard0x2fab7c0>) [p0, p1]
+833: p50 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+837: f51 = getarrayitem_gc_f(p50, i28, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+844: p52 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+855: p53 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+859: guard_nonnull_class(p53, ConstClass(W_CellFloatStrategy), descr=<Guard0x2fa9040>) [p0, p1]
+877: f55 = getfield_gc_f(p53, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+882: f56 = float_sub(f51, f55)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+886: i58 = float_gt(f56, 0.000000)
+901: guard_true(i58, descr=<Guard0x2fab808>) [p0, p1]
debug_merge_point(0, 0, '(let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+907: i59 = getarrayitem_gc_i(p27, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! kp SetBang2)')
+919: p60 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+930: p61 = getfield_gc_r(p60, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+941: guard_nonnull_class(p61, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa90a0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+960: i63 = getarrayitem_gc_i(p27, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand13)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+965: p64 = getarrayitem_gc_r(p41, i34, descr=<ArrayP 8>)
+977: setfield_gc(p61, i59, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+981: guard_class(p64, ConstClass(W_Vector), descr=<Guard0x2fa9100>) [p64, p1, p0, p7, p3, i63, p31, p29]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+995: i67 = int_ge(i63, 0)
+999: guard_true(i67, descr=<Guard0x2fab850>) [p64, p1, p0, p7, p3, i63, p31, p29]
+1005: i68 = getfield_gc_i(p64, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1010: i69 = int_lt(i63, i68)
+1013: guard_true(i69, descr=<Guard0x2fab898>) [p64, p1, p0, p7, p3, i63, p31, p29]
+1019: p70 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1024: guard_class(p70, 16612728, descr=<Guard0x2fab8e0>) [p64, p1, p0, p7, p3, i63, p31, p29]
+1036: p72 = getfield_gc_r(p64, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1041: f73 = getarrayitem_gc_f(p72, i63, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang3) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
+1048: i75 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+1052: setfield_gc(p53, f73, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1057: i76 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1068: i78 = int_ge(i76, -9223372036854775807)
+1081: guard_true(i78, descr=<Guard0x2fa9160>) [p1, i75, None, None, p7, None, None, None, None]
+1087: i80 = arraylen_gc(p27, descr=<ArrayS 8>)
+1087: i81 = arraylen_gc(p41, descr=<ArrayP 8>)
+1087: jump(p7, i75, p1, p3, p11, p12, i76, p19, i23, p27, p31, p29, p41, i34, p52, p53, f73, descr=TargetToken(48739520))
+1200: --end of the loop--
[3e4c0a468c37a8c] jit-log-opt-loop}
[3e4c0a468f35e62] {jit-backend
[3e4c0a468ffb458] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a46900837f] jit-backend-dump}
[3e4c0a4690139f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01834 +0  28000000
[3e4c0a469014f19] jit-backend-dump}
[3e4c0a469019457] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01d05 +0  28000000
[3e4c0a46901a55e] jit-backend-dump}
[3e4c0a46901dc08] {jit-backend-addr
bridge out of Guard 0x2ee3b20 has address 0x7f6e13d01830 to 0x7f6e13d01d00
       gc table: 0x7f6e13d01700
    jump target: 0x7f6e13d01830
         resops: 0x7f6e13d0183e
       failures: 0x7f6e13d01d00
            end: 0x7f6e13d0209b
[3e4c0a46901ff66] jit-backend-addr}
[3e4c0a469023886] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0185d +0  FE040000
[3e4c0a4690246da] jit-backend-dump}
[3e4c0a469027d4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01878 +0  FF040000
[3e4c0a469028ac1] jit-backend-dump}
[3e4c0a46902bfbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01885 +0  0E050000
[3e4c0a46902ccfc] jit-backend-dump}
[3e4c0a469030105] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d018a0 +0  0F050000
[3e4c0a469030e24] jit-backend-dump}
[3e4c0a46903436e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d018b6 +0  15050000
[3e4c0a4690350df] jit-backend-dump}
[3e4c0a4690385f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d018cb +0  1C050000
[3e4c0a469039358] jit-backend-dump}
[3e4c0a46903c7a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d018e7 +0  1C050000
[3e4c0a46903d4c0] jit-backend-dump}
[3e4c0a46904086d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01902 +0  1D050000
[3e4c0a4690415a1] jit-backend-dump}
[3e4c0a469044948] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0190f +0  26050000
[3e4c0a46904569b] jit-backend-dump}
[3e4c0a469048972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01926 +0  25050000
[3e4c0a4690496a6] jit-backend-dump}
[3e4c0a46904c98a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0193e +0  29050000
[3e4c0a46904d6c1] jit-backend-dump}
[3e4c0a46905098c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01952 +0  31050000
[3e4c0a4690516b7] jit-backend-dump}
[3e4c0a4690549a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0196d +0  32050000
[3e4c0a4690556d7] jit-backend-dump}
[3e4c0a469058999] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0199f +0  1C050000
[3e4c0a4690596c7] jit-backend-dump}
[3e4c0a46905c9c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d019b1 +0  26050000
[3e4c0a46905d703] jit-backend-dump}
[3e4c0a4690609c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d019bf +0  34050000
[3e4c0a4690616ea] jit-backend-dump}
[3e4c0a4690649dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d019d1 +0  3E050000
[3e4c0a46906570e] jit-backend-dump}
[3e4c0a4690689dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d019e6 +0  45050000
[3e4c0a469069704] jit-backend-dump}
[3e4c0a46906c9b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d019fd +0  4A050000
[3e4c0a46906d6db] jit-backend-dump}
[3e4c0a4690709a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01a1e +0  45050000
[3e4c0a4690716ce] jit-backend-dump}
[3e4c0a469074990] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01a49 +0  36050000
[3e4c0a4690756dc] jit-backend-dump}
[3e4c0a4690789d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01a5e +0  3D050000
[3e4c0a469079709] jit-backend-dump}
[3e4c0a46907ca24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01a80 +0  37050000
[3e4c0a46907d745] jit-backend-dump}
[3e4c0a469080a3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01a90 +0  43050000
[3e4c0a469081754] jit-backend-dump}
[3e4c0a469084ce7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01aac +0  43050000
[3e4c0a469085a28] jit-backend-dump}
[3e4c0a469088dd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01ab6 +0  55050000
[3e4c0a469089b03] jit-backend-dump}
[3e4c0a46908cdf9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01ac3 +0  64050000
[3e4c0a46908db24] jit-backend-dump}
[3e4c0a469090def] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01ad3 +0  70050000
[3e4c0a469091b20] jit-backend-dump}
[3e4c0a469094e8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01c5e +0  01040000
[3e4c0a469095ba5] jit-backend-dump}
[3e4c0a469098ebd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01c67 +0  14040000
[3e4c0a469099bde] jit-backend-dump}
[3e4c0a46909d15a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4b3d +0  EFCC0000
[3e4c0a46909deaf] jit-backend-dump}
[3e4c0a4690a2253] jit-backend}
[3e4c0a4690a6054] {jit-log-opt-bridge
# bridge out of Guard 0x2ee3b20 with 132 ops
[i0, p1, p2, p3]
+326: guard_not_invalidated(descr=<Guard0x2fa91c0>) [i0, p1, p2, p3]
+326: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+344: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x2fab928>) [i0, p1, p2, p3]
+353: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+357: p7 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+361: guard_nonnull_class(p7, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa9220>) [i0, p1, p2, p3]
+380: i9 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+384: i10 = int_ge(i0, i9)
+387: guard_true(i10, descr=<Guard0x2fab970>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(void)')
+393: p11 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+411: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x2fab9b8>) [i0, p1, p2, p3]
+420: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+424: p14 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)) from (void)')
+428: guard_class(p13, 16480328, descr=<Guard0x2faba00>) [i0, p1, p2, p3]
+442: p16 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+454: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x2faba48>) [i0, p1, p2, p3]
+463: p18 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_0 24 pure>)
+468: p19 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+472: guard_nonnull_class(p19, ConstClass(W_CellFloatStrategy), descr=<Guard0x2fa9280>) [i0, p1, p2, p3]
+491: f21 = getfield_gc_f(p19, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+497: i23 = float_gt(f21, 0.000000)
+512: guard_true(i23, descr=<Guard0x2faba90>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476))))')
+518: guard_class(p14, 16435208, descr=<Guard0x2fabad8>) [i0, p1, p2, p3]
+531: p25 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+535: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x2fa92e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(simp2)')
+554: p27 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_5 64 pure>)
+559: guard_nonnull_class(p27, 16479952, descr=<Guard0x2fa9340>) [i0, p1, p2, p3]
+578: p29 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+589: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x2fabb20>) [i0, p1, p2, p3]
+598: p31 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(set! ip 0)')
+598: p32 = getfield_gc_r(p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+602: p33 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+606: guard_nonnull_class(p33, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa93a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([q1 0.0][flag? #f]) (let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0)))')
debug_merge_point(0, 0, '0.0')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0))')
+625: p35 = getfield_gc_r(p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))')
+629: p36 = getfield_gc_r(p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+633: p37 = getfield_gc_r(p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+637: p38 = getfield_gc_r(p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+641: p39 = getfield_gc_r(p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+645: p40 = getfield_gc_r(p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+649: p41 = getfield_gc_r(p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+653: setfield_gc(p33, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+661: guard_class(p35, 16505296, descr=<Guard0x2fa9400>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
debug_merge_point(0, 0, '(doloop5078 0)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 0)')
debug_merge_point(0, 0, '(= i5080 m)')
+675: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x2fa9460>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+693: i46 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+697: i48 = int_eq(0, i46)
+701: guard_false(i48, descr=<Guard0x2fabb68>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+707: guard_nonnull_class(p41, ConstClass(W_Vector), descr=<Guard0x2fa94c0>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+725: i50 = getfield_gc_i(p41, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+736: i51 = int_lt(0, i50)
+740: guard_true(i51, descr=<Guard0x2fabbb0>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+746: p52 = getfield_gc_r(p41, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+757: guard_class(p52, 16623792, descr=<Guard0x2fabbf8>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+769: p54 = getfield_gc_r(p41, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+773: i55 = getarrayitem_gc_i(p54, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand32 CellRef(kp))')
+784: guard_nonnull_class(p40, ConstClass(W_Vector), descr=<Guard0x2fa9520>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+802: p57 = getfield_gc_r(p37, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+827: guard_nonnull_class(p57, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa9580>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+845: i59 = getfield_gc_i(p57, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+856: i61 = int_ge(i55, 0)
+860: guard_true(i61, descr=<Guard0x2fabc40>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+866: i62 = getfield_gc_i(p40, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+891: i63 = int_lt(i55, i62)
+894: guard_true(i63, descr=<Guard0x2fabc88>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+900: p64 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+904: guard_class(p64, 16622984, descr=<Guard0x2fabcd0>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+916: p66 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+920: p67 = getarrayitem_gc_r(p66, i55, descr=<ArrayP 8>)
+932: guard_class(p67, ConstClass(W_Vector), descr=<Guard0x2fabd18>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+944: i70 = int_ge(i59, 0)
+948: guard_true(i70, descr=<Guard0x2fabd60>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+954: i71 = getfield_gc_i(p67, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+958: i72 = int_lt(i59, i71)
+961: guard_true(i72, descr=<Guard0x2fabda8>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+967: p73 = getfield_gc_r(p67, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+971: guard_class(p73, 16612728, descr=<Guard0x2fabdf0>) [p35, p41, p40, p39, p38, p32, p37, p36, p27, p14, p13, p25, None, None, None, None]
+983: p75 = getfield_gc_r(p67, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+987: f76 = getarrayitem_gc_f(p75, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+994: p77 = new_with_vtable(descr=<SizeDescr 96>)
+1045: p78 = new_with_vtable(descr=<SizeDescr 16>)
+1063: setfield_gc(p78, ConstPtr(ptr79), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1067: p80 = new_with_vtable(descr=<SizeDescr 16>)
+1078: p81 = new_with_vtable(descr=<SizeDescr 16>)
+1096: setfield_gc(p81, 0.000000, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1104: setfield_gc(p80, p81, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1108: p83 = new_with_vtable(descr=<SizeDescr 40>)
+1239: p84 = getfield_gc_r(p78, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1257: setfield_gc(p77, ConstPtr(ptr85), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1268: setfield_gc(p83, ConstPtr(ptr86), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1272: setfield_gc(p83, p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1276: setfield_gc(p83, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1280: setfield_gc(p83, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1291: setfield_gc(p77, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1295: setfield_gc(p77, p78, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_0 24 pure>)
+1299: setfield_gc(p77, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_1 32 pure>)
+1303: setfield_gc(p77, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+1314: setfield_gc(p77, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_3 48 pure>)
+1318: setfield_gc(p77, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+1329: setfield_gc(p77, p39, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+1333: setfield_gc(p77, p80, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1337: setfield_gc(p77, p40, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+1348: setfield_gc(p77, p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+1359: guard_nonnull_class(p84, ConstClass(W_Bool), descr=<Guard0x2fa95e0>) [p83, p77, f76, None, None, None, None, None, None, None, None, None, None, p25, None, None, None, None]
+1378: i89 = instance_ptr_eq(p84, ConstPtr(ptr88))
+1381: guard_true(i89, descr=<Guard0x2fa9640>) [p83, p77, f76, None, None, None, None, None, None, None, None, None, None, p25, None, None, None, None]
+1387: i90 = arraylen_gc(p54, descr=<ArrayS 8>)
+1387: i91 = arraylen_gc(p66, descr=<ArrayP 8>)
+1387: jump(p77, 0, p25, p83, f76, p38, i46, p78, p41, i50, p54, p37, p57, p40, i62, p66, i59, p25, descr=TargetToken(49645952))
+1536: --end of the loop--
[3e4c0a46913532c] jit-log-opt-bridge}
[3e4c0a4693c3154] {jit-backend
[3e4c0a46944938f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02260 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87E302000048FF042580A32A02488B8D380100008139480E00000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813AB01E01000F8500000000488B5A08813BA8B800000F8500000000488B7310488B3D5CFEFFFF4839FE0F8500000000488B7B184883FF017206813F601400000F8500000000488B77084883C6010F8000000000488B7A104839F70F8400000000488B73204C8B43304C8B4B08418139102001000F85000000004C8B53284983FA01720741813A601400000F8500000000498B5A084883C3010F80000000004883FE017206813E601400000F85000000004C8B56084C39D30F8F000000004989DC4883C3010F80000000004983F8017207418138F08C00000F85000000004983FC000F8C000000004D8B68084D39EC0F8D000000004D8B701841813EC8EB02000F85000000004D8B70104F8B7CE61041813FF08C00000F85000000004883FF000F8C000000004D8B67084C39E70F8D000000004D8B671841813C24B8C302000F85000000004D8B6710F2410F1044FC1049BB2822D0136E7F0000F2410F100BF20F58C84989D44989CF488B0C25F091F900488D5168483B14251092F9000F873A01000048891425F091F90048C70130B70000488D513048C7026014000048897A08488D7A1048C707480E000048C741080000000048C741100000000048C741180000000048C741200000000048C741280000000048C747080000000048C747100000000048C747180000000048C747200000000048898540010000488B42084889B548010000488BB540010000488977084C8949084C8B0DFFFCFFFF4C8949104C8B8D480100004C894918488951204C8941284C8967104C897F184C8B3DE1FCFFFF4C897F204883F8000F8C0000000049BBFEFFFFFFFFFFFF7F4C39D80F8F0000000048898D300100004889BD380100004889B5400100004C898D480100004C89D74C898550010000488995580100004989C149BBB069CF136E7F000041FFE366662E0F1F84000000000049BB50C7CE136E7F000041FFD3E90BFDFFFF4D8D5B084C895D204D8D9BC098FEFF41FFD349BB2822D0136E7F0000E9ADFEFFFFFF3577FBFFFF49BBB820D0136E7F000041534D8D9B488FFEFF41FFE3FF3563FBFFFF49BBC820D0136E7F000041534D8D9B388FFEFF41FFE3FF354FFBFFFF49BBD820D0136E7F000041534D8D9B288FFEFF41FFE3FF353BFBFFFF49BBE820D0136E7F000041534D8D9B188FFEFF41FFE3FF3527FBFFFF49BBF820D0136E7F000041534D8D9B088FFEFF41FFE3FF351BFBFFFF49BB0821D0136E7F000041534D8D9BF88EFEFF41FFE3FF3507FBFFFF49BB1821D0136E7F000041534D8D9BE88EFEFF41FFE3FF35F3FAFFFF49BB2821D0136E7F000041534D8D9BD88EFEFF41FFE3FF35DFFAFFFF49BB3821D0136E7F000041534D8D9BC88EFEFF41FFE3FF35CBFAFFFF49BB4821D0136E7F000041534D8D9BB88EFEFF41FFE3FF35B7FAFFFF49BB5821D0136E7F000041534D8D9BA88EFEFF41FFE3FF35A3FAFFFF49BB6821D0136E7F000041534D8D9B988EFEFF41FFE3FF358FFAFFFF49BB7821D0136E7F000041534D8D9B888EFEFF41FFE3FF357BFAFFFF49BB8821D0136E7F000041534D8D9B788EFEFF41FFE3FF3567FAFFFF49BB9821D0136E7F000041534D8D9B688EFEFF41FFE3FF3553FAFFFF49BBA821D0136E7F000041534D8D9B588EFEFF41FFE3FF353FFAFFFF49BBB821D0136E7F000041534D8D9B488EFEFF41FFE3FF352BFAFFFF49BBC821D0136E7F000041534D8D9B388EFEFF41FFE3FF3517FAFFFF49BBD821D0136E7F000041534D8D9B288EFEFF41FFE3FF3503FAFFFF49BBE821D0136E7F000041534D8D9B188EFEFF41FFE3FF35EFF9FFFF49BBF821D0136E7F000041534D8D9B088EFEFF41FFE3FF35DBF9FFFF49BB0822D0136E7F000041534D8D9BF88DFEFF41FFE3FF35C7F9FFFF49BB1822D0136E7F000041534D8D9BE88DFEFF41FFE3FF35C3F9FFFF4D8D5B1841534D8D9BD092FEFF41FFE3FF35B5F9FFFF49BB5022D0136E7F000041534D8D9BC092FEFF41FFE3
[3e4c0a469452ef9] jit-backend-dump}
[3e4c0a46945e903] {jit-backend-addr
Loop 31 ((let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))) from (doloop5275 AppRand78)) has address 0x7f6e13d023cd to 0x7f6e13d026b0 (bootstrap 0x7f6e13d02340)
       gc table: 0x7f6e13d02260
       function: 0x7f6e13d02340
         resops: 0x7f6e13d023cd
       failures: 0x7f6e13d026b0
            end: 0x7f6e13d02999
[3e4c0a469461a03] jit-backend-addr}
[3e4c0a46946626e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d023e4 +0  FB020000
[3e4c0a46946749e] jit-backend-dump}
[3e4c0a46946ac74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d023fa +0  01030000
[3e4c0a46946baf8] jit-backend-dump}
[3e4c0a46946f181] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0240d +0  26030000
[3e4c0a46946febe] jit-backend-dump}
[3e4c0a4694732ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0241d +0  32030000
[3e4c0a469473fc1] jit-backend-dump}
[3e4c0a46947738d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02431 +0  3A030000
[3e4c0a46947806b] jit-backend-dump}
[3e4c0a46947b413] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02447 +0  40030000
[3e4c0a46947c0fa] jit-backend-dump}
[3e4c0a46947f47d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02455 +0  4E030000
[3e4c0a469480164] jit-backend-dump}
[3e4c0a4694834f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02462 +0  5D030000
[3e4c0a4694841db] jit-backend-dump}
[3e4c0a46948755d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0247b +0  60030000
[3e4c0a469488242] jit-backend-dump}
[3e4c0a46948b5d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02492 +0  65030000
[3e4c0a46948c2bb] jit-backend-dump}
[3e4c0a46948f64a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d024a0 +0  73030000
[3e4c0a469490325] jit-backend-dump}
[3e4c0a4694936a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d024b2 +0  7D030000
[3e4c0a469494526] jit-backend-dump}
[3e4c0a469497878] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d024bf +0  8C030000
[3e4c0a469498562] jit-backend-dump}
[3e4c0a46949b916] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d024cc +0  9B030000
[3e4c0a46949c610] jit-backend-dump}
[3e4c0a46949fa6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d024df +0  A4030000
[3e4c0a4694a0747] jit-backend-dump}
[3e4c0a4694a3b2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d024e9 +0  B6030000
[3e4c0a4694a4816] jit-backend-dump}
[3e4c0a4694a7c0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d024f6 +0  C5030000
[3e4c0a4694a88eb] jit-backend-dump}
[3e4c0a4694abcb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02507 +0  D0030000
[3e4c0a4694ac9a2] jit-backend-dump}
[3e4c0a4694afd71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0251d +0  D6030000
[3e4c0a4694b0a6b] jit-backend-dump}
[3e4c0a4694b3de1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02527 +0  E8030000
[3e4c0a4694b4ad5] jit-backend-dump}
[3e4c0a4694b7ec2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02534 +0  F7030000
[3e4c0a4694b8bd2] jit-backend-dump}
[3e4c0a4694bc086] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02546 +0  01040000
[3e4c0a4694bcd71] jit-backend-dump}
[3e4c0a4694c01df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02651 +0  12030000
[3e4c0a4694c0ec3] jit-backend-dump}
[3e4c0a4694c42d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02664 +0  15030000
[3e4c0a4694c4ffa] jit-backend-dump}
[3e4c0a4694c8f45] jit-backend}
[3e4c0a4694ccf84] {jit-log-opt-loop
# Loop 31 ((let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))) from (doloop5275 AppRand78)) : entry bridge with 95 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))) from (doloop5275 AppRand78)')
+373: guard_class(p1, 16435208, descr=<Guard0x2fa96a0>) [p0, p1]
+392: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+396: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2fa9700>) [p0, p1]
debug_merge_point(0, 0, '(+ n 1)')
+414: guard_not_invalidated(descr=<Guard0x2fabe38>) [p0, p1]
+414: guard_class(p0, 16504944, descr=<Guard0x2fabe80>) [p0, p1]
+433: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+437: guard_class(p6, 16478824, descr=<Guard0x2fabec8>) [p0, p1]
+449: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+460: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x2fabf10>) [p0, p1]
+469: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+473: guard_nonnull_class(p10, ConstClass(W_Fixnum), descr=<Guard0x2fa9760>) [p0, p1]
+491: i12 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+495: i14 = int_add_ovf(i12, 1)
+499: guard_no_overflow(descr=<Guard0x2fabf58>) [p0, p1]
debug_merge_point(0, 0, '(let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))')
debug_merge_point(0, 0, '(= k5277 AppRand71)')
+505: i15 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+509: i16 = int_eq(i15, i14)
+512: guard_false(i16, descr=<Guard0x2fabfa0>) [p0, p1]
debug_merge_point(0, 0, '(if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78))))')
debug_merge_point(0, 0, '(let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))')
debug_merge_point(0, 0, '(lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))')
+518: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+522: p18 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+526: p19 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+530: guard_class(p19, 16505296, descr=<Guard0x3056020>) [p0, p1]
debug_merge_point(0, 0, '(+ m1 1)')
+543: p21 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+547: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x2fa97c0>) [p0, p1]
+566: i23 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+570: i25 = int_add_ovf(i23, 1)
+574: guard_no_overflow(descr=<Guard0x3056068>) [p0, p1]
debug_merge_point(0, 0, '(doloop5281 AppRand77 0.0)')
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand77 0.0)')
debug_merge_point(0, 0, '(> i5283 m)')
+580: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x2fa9820>) [p0, p1]
+598: i27 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+602: i28 = int_gt(i25, i27)
+605: guard_false(i28, descr=<Guard0x30560b0>) [p0, p1]
debug_merge_point(0, 0, '(if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))')
debug_merge_point(0, 0, '(let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)))')
debug_merge_point(0, 0, '(+ i5283 1)')
+611: i30 = int_add_ovf(i25, 1)
+618: guard_no_overflow(descr=<Guard0x30560f8>) [p0, p1]
debug_merge_point(0, 0, '(matrix-ref a5002 i5283 k5277)')
+624: guard_nonnull_class(p18, ConstClass(W_Vector), descr=<Guard0x2fa9880>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+643: i33 = int_ge(i25, 0)
+647: guard_true(i33, descr=<Guard0x3056140>) [p0, p1]
+653: i34 = getfield_gc_i(p18, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+657: i35 = int_lt(i25, i34)
+660: guard_true(i35, descr=<Guard0x3056188>) [p0, p1]
+666: p36 = getfield_gc_r(p18, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+670: guard_class(p36, 16622984, descr=<Guard0x30561d0>) [p0, p1]
+683: p38 = getfield_gc_r(p18, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+687: p39 = getarrayitem_gc_r(p38, i25, descr=<ArrayP 8>)
+692: guard_class(p39, ConstClass(W_Vector), descr=<Guard0x3056218>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+705: i42 = int_ge(i15, 0)
+709: guard_true(i42, descr=<Guard0x3056260>) [p0, p1]
+715: i43 = getfield_gc_i(p39, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+719: i44 = int_lt(i15, i43)
+722: guard_true(i44, descr=<Guard0x30562a8>) [p0, p1]
+728: p45 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+732: guard_class(p45, 16612728, descr=<Guard0x30562f0>) [p0, p1]
+746: p47 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+750: f48 = getarrayitem_gc_f(p47, i15, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(+ sum AppRand75)')
+757: f50 = float_add(0.000000, f48)
debug_merge_point(0, 0, '(doloop5281 AppRand74 AppRand76)')
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)')
+776: p51 = new_with_vtable(descr=<SizeDescr 48>)
+823: p52 = new_with_vtable(descr=<SizeDescr 16>)
+834: setfield_gc(p52, i15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+838: p53 = new_with_vtable(descr=<SizeDescr 40>)
+849: i54 = arraylen_gc(p38, descr=<ArrayP 8>)
+921: i55 = getfield_gc_i(p52, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+932: setfield_gc(p53, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+950: setfield_gc(p51, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+961: setfield_gc(p51, ConstPtr(ptr56), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+965: setfield_gc(p51, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+976: setfield_gc(p51, p52, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+980: setfield_gc(p51, p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+984: setfield_gc(p53, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+988: setfield_gc(p53, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+999: setfield_gc(p53, ConstPtr(ptr57), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1003: i59 = int_ge(i55, 0)
+1007: guard_true(i59, descr=<Guard0x2fa98e0>) [p53, f50, i30, p51]
+1013: i61 = int_le(i55, 9223372036854775806)
+1026: guard_true(i61, descr=<Guard0x2fa9940>) [p53, f50, i30, p51]
+1032: jump(p51, i30, f50, p53, p3, p17, i27, p18, i34, p38, p52, i55, descr=TargetToken(48739840))
+1104: --end of the loop--
[3e4c0a46951fde3] jit-log-opt-loop}
[3e4c0a4697e0472] {jit-backend
[3e4c0a46984a2e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02b40 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C3202000048FF0425A0E7FE028139480E00000F85000000004C8B79084983FF01720741813F900F00000F85000000008138B01E01000F85000000004C8B70104C8B680841817D0000C000000F85000000004D8B65104C8B15E2FEFFFF4D39D40F85000000004D8B55384983FA01720741813A601400000F85000000004D8B62084D39E60F84000000004D8B65184D8B5424084983FA01720741813A88AD02000F85000000004C8B25BAFEFFFF4D39E20F84000000004D8B65584983FC01720841813C24F08C00000F85000000004983FE000F8C000000004D8B5424084D39D60F8D000000004D8B54241841813AF0EE02000F85000000004D8B5424104F8B64F2104D8B75504983FE01720741813EF08C00000F85000000004D8B55284D8B6A084983FD01720841817D00F08900000F85000000004D8B55084983FC000F8C000000004D8B6E084D39EC0F8D000000004D8B6E1841817D00C8EB02000F85000000004D8B6E104F8B74E51041813EF08C00000F85000000004983FA000F8C000000004D8B66084D39E20F8D000000004D8B661841813C24B8C302000F85000000004D8B6610F2470F1074D4104989CC488B0C25F091F900488D5158483B14251092F9000F879400000048891425F091F90048C701D8130000488D513048C702480E00004C897A08488942104C8962184C8B25E9FDFFFF4C8962204C8979084889411048895118488B15DAFDFFFF48895120F2440F1171284889853001000048898D3801000049BB708ACF136E7F000041FFE30F1F44000048C7442408FFFFFF0049BBA829D0136E7F00004C895D204D8D9B4889FEFF41FFD3E9A8FDFFFF49BB282BD0136E7F00004C895D204D8D9BC88FFEFF41FFD3E957FFFFFFFF3597FCFFFF49BBB829D0136E7F000041534D8D9B4886FEFF41FFE3FF3583FCFFFF49BBC829D0136E7F000041534D8D9B3886FEFF41FFE3FF356FFCFFFF49BBD829D0136E7F000041534D8D9B2886FEFF41FFE3FF355BFCFFFF49BBE829D0136E7F000041534D8D9B1886FEFF41FFE3FF3547FCFFFF49BBF829D0136E7F000041534D8D9B0886FEFF41FFE3FF353BFCFFFF49BB082AD0136E7F000041534D8D9BF885FEFF41FFE3FF3527FCFFFF49BB182AD0136E7F000041534D8D9BE885FEFF41FFE3FF3513FCFFFF49BB282AD0136E7F000041534D8D9BD885FEFF41FFE3FF35FFFBFFFF49BB382AD0136E7F000041534D8D9BC885FEFF41FFE3FF35F3FBFFFF49BB482AD0136E7F000041534D8D9BB885FEFF41FFE3FF35DFFBFFFF49BB582AD0136E7F000041534D8D9BA885FEFF41FFE3FF35CBFBFFFF49BB682AD0136E7F000041534D8D9B9885FEFF41FFE3FF35B7FBFFFF49BB782AD0136E7F000041534D8D9B8885FEFF41FFE3FF35A3FBFFFF49BB882AD0136E7F000041534D8D9B7885FEFF41FFE3FF358FFBFFFF49BB982AD0136E7F000041534D8D9B6885FEFF41FFE3FF357BFBFFFF49BBA82AD0136E7F000041534D8D9B5885FEFF41FFE3FF3567FBFFFF49BBB82AD0136E7F000041534D8D9B4885FEFF41FFE3FF3553FBFFFF49BBC82AD0136E7F000041534D8D9B3885FEFF41FFE3FF353FFBFFFF49BBD82AD0136E7F000041534D8D9B2885FEFF41FFE3FF352BFBFFFF49BBE82AD0136E7F000041534D8D9B1885FEFF41FFE3FF3517FBFFFF49BBF82AD0136E7F000041534D8D9B0885FEFF41FFE3FF3503FBFFFF49BB082BD0136E7F000041534D8D9BF884FEFF41FFE3FF35EFFAFFFF49BB182BD0136E7F000041534D8D9BE884FEFF41FFE3
[3e4c0a469853794] jit-backend-dump}
[3e4c0a46985ee98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02c24 +0  28000000
[3e4c0a469860252] jit-backend-dump}
[3e4c0a469864725] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02e65 +0  28000000
[3e4c0a469865670] jit-backend-dump}
[3e4c0a469868f16] {jit-backend-addr
bridge out of Guard 0x2f65028 has address 0x7f6e13d02c20 to 0x7f6e13d02e60
       gc table: 0x7f6e13d02b40
    jump target: 0x7f6e13d02c20
         resops: 0x7f6e13d02c2e
       failures: 0x7f6e13d02e60
            end: 0x7f6e13d03127
[3e4c0a46986b49b] jit-backend-addr}
[3e4c0a46986ee8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02c3e +0  61020000
[3e4c0a46986fcb7] jit-backend-dump}
[3e4c0a469873412] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02c55 +0  66020000
[3e4c0a4698741ae] jit-backend-dump}
[3e4c0a4698778d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02c61 +0  92020000
[3e4c0a4698785b4] jit-backend-dump}
[3e4c0a46987ba4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02c77 +0  98020000
[3e4c0a46987c725] jit-backend-dump}
[3e4c0a46987fb84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02c8b +0  A0020000
[3e4c0a46988087b] jit-backend-dump}
[3e4c0a469883cd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02ca2 +0  A5020000
[3e4c0a4698849b8] jit-backend-dump}
[3e4c0a469887dca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02caf +0  B4020000
[3e4c0a469888ae0] jit-backend-dump}
[3e4c0a46988beb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02ccb +0  B4020000
[3e4c0a46988cbb2] jit-backend-dump}
[3e4c0a46988ff13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02cdb +0  C0020000
[3e4c0a469890bf7] jit-backend-dump}
[3e4c0a469893fd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02cf3 +0  C4020000
[3e4c0a469894cae] jit-backend-dump}
[3e4c0a469898074] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02cfd +0  D6020000
[3e4c0a469898d68] jit-backend-dump}
[3e4c0a46989c140] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02d0b +0  E4020000
[3e4c0a46989ce1e] jit-backend-dump}
[3e4c0a4698a02d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02d1d +0  EE020000
[3e4c0a4698a0fd6] jit-backend-dump}
[3e4c0a4698a43df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02d3e +0  E9020000
[3e4c0a4698a50c0] jit-backend-dump}
[3e4c0a4698a851c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02d5a +0  E9020000
[3e4c0a4698a91e8] jit-backend-dump}
[3e4c0a4698ac644] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02d68 +0  F7020000
[3e4c0a4698ad32b] jit-backend-dump}
[3e4c0a4698b06d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02d75 +0  06030000
[3e4c0a4698b13a2] jit-backend-dump}
[3e4c0a4698b4743] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02d87 +0  10030000
[3e4c0a4698b542a] jit-backend-dump}
[3e4c0a4698b884c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02d9d +0  16030000
[3e4c0a4698b9524] jit-backend-dump}
[3e4c0a4698bc8d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02da7 +0  28030000
[3e4c0a4698bd59b] jit-backend-dump}
[3e4c0a4698c0939] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02db4 +0  37030000
[3e4c0a4698c164b] jit-backend-dump}
[3e4c0a4698c49dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d02dc6 +0  41030000
[3e4c0a4698c56be] jit-backend-dump}
[3e4c0a4698c8d3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfa59a +0  82860000
[3e4c0a4698c99fa] jit-backend-dump}
[3e4c0a4698cdbe0] jit-backend}
[3e4c0a4698d1af6] {jit-log-opt-bridge
# bridge out of Guard 0x2f65028 with 81 ops
[p0, p1]
+246: guard_class(p1, 16435208, descr=<Guard0x2fa9ac0>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+262: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2fa9b20>) [p0, p1]
debug_merge_point(0, 0, '(= i5080 m)')
+281: guard_not_invalidated(descr=<Guard0x30564e8>) [p0, p1]
+281: guard_class(p0, 16504944, descr=<Guard0x3056530>) [p0, p1]
+293: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+297: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+301: guard_class(p7, 16480704, descr=<Guard0x3056578>) [p0, p1]
+315: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+326: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x30565c0>) [p0, p1]
+335: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+339: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x2fa9b80>) [p0, p1]
+358: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+362: i14 = int_eq(i6, i13)
+365: guard_false(i14, descr=<Guard0x3056608>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
+371: p15 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_0 24 pure>)
+375: p16 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+380: guard_nonnull_class(p16, ConstClass(W_Bool), descr=<Guard0x2fa9be0>) [p0, p1]
+406: i19 = instance_ptr_eq(p16, ConstPtr(ptr18))
+409: guard_false(i19, descr=<Guard0x3056650>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+415: p20 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+419: guard_nonnull_class(p20, ConstClass(W_Vector), descr=<Guard0x2fa9c40>) [p0, p1]
+439: i23 = int_ge(i6, 0)
+443: guard_true(i23, descr=<Guard0x3056698>) [p0, p1]
+449: i24 = getfield_gc_i(p20, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+454: i25 = int_lt(i6, i24)
+457: guard_true(i25, descr=<Guard0x30566e0>) [p0, p1]
+463: p26 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+468: guard_class(p26, 16623792, descr=<Guard0x3056728>) [p0, p1]
+481: p28 = getfield_gc_r(p20, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+486: i29 = getarrayitem_gc_i(p28, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand15 CellRef(kp))')
+491: p30 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+495: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x2fa9ca0>) [p0, p1]
+514: p32 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+518: p33 = getfield_gc_r(p32, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+522: guard_nonnull_class(p33, ConstClass(W_CellIntegerStrategy), descr=<Guard0x2fa9d00>) [p0, p1]
+542: i35 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+546: p36 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+546: i38 = int_ge(i29, 0)
+550: guard_true(i38, descr=<Guard0x3056770>) [p0, p1]
+556: i39 = getfield_gc_i(p30, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+560: i40 = int_lt(i29, i39)
+563: guard_true(i40, descr=<Guard0x30567b8>) [p0, p1]
+569: p41 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+573: guard_class(p41, 16622984, descr=<Guard0x3056800>) [p0, p1]
+587: p43 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+591: p44 = getarrayitem_gc_r(p43, i29, descr=<ArrayP 8>)
+596: guard_class(p44, ConstClass(W_Vector), descr=<Guard0x3056848>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+609: i47 = int_ge(i35, 0)
+613: guard_true(i47, descr=<Guard0x3056890>) [p0, p1]
+619: i48 = getfield_gc_i(p44, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+623: i49 = int_lt(i35, i48)
+626: guard_true(i49, descr=<Guard0x30568d8>) [p0, p1]
+632: p50 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+636: guard_class(p50, 16612728, descr=<Guard0x3056920>) [p0, p1]
+650: p52 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+654: f53 = getarrayitem_gc_f(p52, i35, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+661: p54 = new_with_vtable(descr=<SizeDescr 48>)
+705: p55 = new_with_vtable(descr=<SizeDescr 40>)
+716: setfield_gc(p55, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+720: setfield_gc(p55, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+724: setfield_gc(p55, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+735: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+739: setfield_gc(p54, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+743: setfield_gc(p54, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+747: setfield_gc(p54, p55, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+758: setfield_gc(p54, ConstPtr(ptr57), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+762: setfield_gc(p54, f53, descr=<FieldF pycket.small_list.LetContSize1Flo.inst_vals_flo_0 40 pure>)
+768: jump(p0, p54, descr=TargetToken(49644112))
+800: --end of the loop--
[3e4c0a469918790] jit-log-opt-bridge}
[3e4c0a469b12d06] {jit-backend
[3e4c0a469b2b182] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03150 +0  48817D48FFFFFF000F8C6200000048FF0425700B00034989D7488B0C25F091F900488D5118483B14251092F9000F876300000048891425F091F90048C701B01E0100488941084889711048898D300100004C89BD3801000049BB3006CF136E7F000041FFE366662E0F1F84000000000048C7442408FFFFFF0049BB3031D0136E7F00004C895D204D8D9BC081FEFF41FFD3E978FFFFFF49BB4031D0136E7F00004C895D204D8D9BB089FEFF41FFD3E988FFFFFF
[3e4c0a469b2e34c] jit-backend-dump}
[3e4c0a469b3877e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03154 +0  28000000
[3e4c0a469b39921] jit-backend-dump}
[3e4c0a469b3d97f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d031c5 +0  28000000
[3e4c0a469b3e7d0] jit-backend-dump}
[3e4c0a469b420b0] {jit-backend-addr
bridge out of Guard 0x2ecb280 has address 0x7f6e13d03150 to 0x7f6e13d031c0
       gc table: 0x7f6e13d03150
    jump target: 0x7f6e13d03150
         resops: 0x7f6e13d0315e
       failures: 0x7f6e13d031c0
            end: 0x7f6e13d03203
[3e4c0a469b443c4] jit-backend-addr}
[3e4c0a469b47ff7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf2a0c +0  40070100
[3e4c0a469b48dfe] jit-backend-dump}
[3e4c0a469b4d1f1] jit-backend}
[3e4c0a469b51050] {jit-log-opt-bridge
# bridge out of Guard 0x2ecb280 with 5 ops
[p0, i1, p2]
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+22: p3 = new_with_vtable(descr=<SizeDescr 24>)
+66: setfield_gc(p3, p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+70: setfield_gc(p3, i1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+74: jump(p3, p0, descr=TargetToken(48737040))
+112: --end of the loop--
[3e4c0a469b598b2] jit-log-opt-bridge}
[3e4c0a469ded049] {jit-backend
[3e4c0a469e6c3f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d033f
[3e4c0a469e76836] jit-backend-dump}
[3e4c0a469e824fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d034e4 +0  36000000
[3e4c0a469e839f8] jit-backend-dump}
[3e4c0a469e87d84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03815 +0  36000000
[3e4c0a469e88cb0] jit-backend-dump}
[3e4c0a469e8c427] {jit-backend-addr
bridge out of Guard 0x2f74de8 has address 0x7f6e13d034e0 to 0x7f6e13d03810
       gc table: 0x7f6e13d033f0
    jump target: 0x7f6e13d034e0
         resops: 0x7f6e13d034ee
       failures: 0x7f6e13d03810
            end: 0x7f6e13d03b45
[3e4c0a469e8ea8e] jit-backend-addr}
[3e4c0a469e923c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03502 +0  51030000
[3e4c0a469e932ba] jit-backend-dump}
[3e4c0a469e96a09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03517 +0  58030000
[3e4c0a469e977e8] jit-backend-dump}
[3e4c0a469e9acb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03528 +0  63030000
[3e4c0a469e9ba39] jit-backend-dump}
[3e4c0a469e9ee85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0353f +0  68030000
[3e4c0a469e9fbbc] jit-backend-dump}
[3e4c0a469ea30ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0354d +0  92030000
[3e4c0a469ea3dfa] jit-backend-dump}
[3e4c0a469ea7284] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0355a +0  A1030000
[3e4c0a469ea7fca] jit-backend-dump}
[3e4c0a469eab3dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0356e +0  A9030000
[3e4c0a469eac0fb] jit-backend-dump}
[3e4c0a469eaf4d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03584 +0  AF030000
[3e4c0a469eb01dd] jit-backend-dump}
[3e4c0a469eb3590] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03592 +0  BD030000
[3e4c0a469eb4275] jit-backend-dump}
[3e4c0a469eb760d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0359b +0  D0030000
[3e4c0a469eb82ee] jit-backend-dump}
[3e4c0a469ebb6df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d035b3 +0  D4030000
[3e4c0a469ebc3d6] jit-backend-dump}
[3e4c0a469ebf780] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d035c9 +0  DA030000
[3e4c0a469ec0471] jit-backend-dump}
[3e4c0a469ec3972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d035d7 +0  E8030000
[3e4c0a469ec4659] jit-backend-dump}
[3e4c0a469ec79bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d035ea +0  F1030000
[3e4c0a469ec86ab] jit-backend-dump}
[3e4c0a469ecba3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d035f7 +0  00040000
[3e4c0a469ecc740] jit-backend-dump}
[3e4c0a469ecfb1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03604 +0  0F040000
[3e4c0a469ed0806] jit-backend-dump}
[3e4c0a469ed3ba7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03616 +0  19040000
[3e4c0a469ed48bf] jit-backend-dump}
[3e4c0a469ed7c5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03620 +0  2B040000
[3e4c0a469ed8954] jit-backend-dump}
[3e4c0a469edbcb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03634 +0  33040000
[3e4c0a469edc9ac] jit-backend-dump}
[3e4c0a469edfd7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0364c +0  37040000
[3e4c0a469ee0a75] jit-backend-dump}
[3e4c0a469ee3dca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03668 +0  37040000
[3e4c0a469ee4aba] jit-backend-dump}
[3e4c0a469ee7e31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03672 +0  49040000
[3e4c0a469ee8b15] jit-backend-dump}
[3e4c0a469eebe4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0367f +0  58040000
[3e4c0a469eecb36] jit-backend-dump}
[3e4c0a469eefe8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0368f +0  64040000
[3e4c0a469ef0b78] jit-backend-dump}
[3e4c0a469ef3f26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d037a3 +0  6C030000
[3e4c0a469ef4c10] jit-backend-dump}
[3e4c0a469ef7f87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d037b6 +0  6F030000
[3e4c0a469ef8c8d] jit-backend-dump}
[3e4c0a469efc227] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfd22a +0  B2620000
[3e4c0a469efcf24] jit-backend-dump}
[3e4c0a469f01131] jit-backend}
[3e4c0a469f05130] {jit-log-opt-bridge
# bridge out of Guard 0x2f74de8 with 106 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x2fa9d60>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)) from (vector-set! AppRand2 j4995 x)')
+286: guard_class(p3, 16504944, descr=<Guard0x3056968>) [p0, p1]
+299: p6 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+303: guard_class(p4, 16435208, descr=<Guard0x30569b0>) [p0, p1]
+316: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+320: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x2fa9dc0>) [p0, p1]
debug_merge_point(0, 0, '(+ k5277 1)')
+339: guard_not_invalidated(descr=<Guard0x30569f8>) [p0, p1]
+339: i10 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+343: i12 = int_add_ovf(i10, 1)
+347: guard_no_overflow(descr=<Guard0x3056a40>) [p0, p1]
debug_merge_point(0, 0, '(doloop5275 AppRand78)')
+353: guard_class(p6, 16478824, descr=<Guard0x3056a88>) [p0, p1]
+366: p14 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+377: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3056ad0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))) from (doloop5275 AppRand78)')
debug_merge_point(0, 0, '(+ n 1)')
+386: p16 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+390: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x2fa9e20>) [p0, p1]
+408: i18 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+412: i20 = int_add_ovf(i18, 1)
+416: guard_no_overflow(descr=<Guard0x3056b18>) [p0, p1]
debug_merge_point(0, 0, '(let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))')
debug_merge_point(0, 0, '(= k5277 AppRand71)')
+422: i21 = int_eq(i12, i20)
+425: guard_false(i21, descr=<Guard0x3056b60>) [p0, p1]
debug_merge_point(0, 0, '(if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78))))')
debug_merge_point(0, 0, '(let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))')
debug_merge_point(0, 0, '(lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))')
+431: p22 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+435: p23 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+439: p24 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+443: guard_class(p24, 16505296, descr=<Guard0x3056ba8>) [p0, p1]
debug_merge_point(0, 0, '(+ m1 1)')
+455: p26 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+459: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x2fa9e80>) [p0, p1]
+477: i28 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+481: i30 = int_add_ovf(i28, 1)
+485: guard_no_overflow(descr=<Guard0x3056bf0>) [p0, p1]
debug_merge_point(0, 0, '(doloop5281 AppRand77 0.0)')
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand77 0.0)')
debug_merge_point(0, 0, '(> i5283 m)')
+491: guard_nonnull_class(p22, ConstClass(W_Fixnum), descr=<Guard0x2fa9ee0>) [p0, p1]
+510: i32 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+514: i33 = int_gt(i30, i32)
+517: guard_false(i33, descr=<Guard0x3056c38>) [p0, p1]
debug_merge_point(0, 0, '(if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))')
debug_merge_point(0, 0, '(let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)))')
debug_merge_point(0, 0, '(+ i5283 1)')
+523: i35 = int_add_ovf(i30, 1)
+530: guard_no_overflow(descr=<Guard0x3056c80>) [p0, p1]
debug_merge_point(0, 0, '(matrix-ref a5002 i5283 k5277)')
+536: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x2fa9f40>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+554: i38 = int_ge(i30, 0)
+558: guard_true(i38, descr=<Guard0x3056cc8>) [p0, p1]
+564: i39 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+575: i40 = int_lt(i30, i39)
+578: guard_true(i40, descr=<Guard0x3056d10>) [p0, p1]
+584: p41 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+595: guard_class(p41, 16622984, descr=<Guard0x3056d58>) [p0, p1]
+608: p43 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+612: p44 = getarrayitem_gc_r(p43, i30, descr=<ArrayP 8>)
+624: guard_class(p44, ConstClass(W_Vector), descr=<Guard0x3056da0>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+636: i47 = int_ge(i12, 0)
+640: guard_true(i47, descr=<Guard0x3056de8>) [p0, p1]
+646: i48 = getfield_gc_i(p44, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+650: i49 = int_lt(i12, i48)
+653: guard_true(i49, descr=<Guard0x3056e30>) [p0, p1]
+659: p50 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+663: guard_class(p50, 16612728, descr=<Guard0x3056e78>) [p0, p1]
+675: p52 = getfield_gc_r(p44, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+679: f53 = getarrayitem_gc_f(p52, i12, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(+ sum AppRand75)')
+686: f55 = float_add(0.000000, f53)
debug_merge_point(0, 0, '(doloop5281 AppRand74 AppRand76)')
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)')
+706: p56 = new_with_vtable(descr=<SizeDescr 48>)
+753: p57 = new_with_vtable(descr=<SizeDescr 16>)
+764: setfield_gc(p57, i12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+768: p58 = new_with_vtable(descr=<SizeDescr 40>)
+779: p59 = new_with_vtable(descr=<SizeDescr 24>)
+791: setfield_gc(p59, p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+796: setfield_gc(p59, i12, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+801: i60 = arraylen_gc(p43, descr=<ArrayP 8>)
+873: i61 = getfield_gc_i(p57, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+877: setfield_gc(p58, ConstPtr(ptr62), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+881: setfield_gc(p58, p59, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+885: setfield_gc(p58, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+889: setfield_gc(p56, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+893: setfield_gc(p58, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+911: setfield_gc(p56, ConstPtr(ptr63), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+915: setfield_gc(p56, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+926: setfield_gc(p56, p57, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+930: setfield_gc(p56, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+941: i65 = int_ge(i61, 0)
+945: guard_true(i65, descr=<Guard0x2fa9fa0>) [p58, f55, i35, p56]
+951: i67 = int_le(i61, 9223372036854775806)
+964: guard_true(i67, descr=<Guard0x306e020>) [p58, f55, i35, p56]
+970: jump(p56, i35, f55, p58, p8, p22, i32, p23, i39, p43, p57, i61, descr=TargetToken(48739840))
+1056: --end of the loop--
[3e4c0a469f5af82] jit-log-opt-bridge}
[3e4c0a46a25ebcf] {jit-backend
[3e4c0a46a2fcb98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03d
[3e4c0a46a30709a] jit-backend-dump}
[3e4c0a46a3124c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03e64 +0  24000000
[3e4c0a46a313a88] jit-backend-dump}
[3e4c0a46a317cd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d041b5 +0  24000000
[3e4c0a46a318bed] jit-backend-dump}
[3e4c0a46a31c187] {jit-backend-addr
bridge out of Guard 0x2ec71d8 has address 0x7f6e13d03e60 to 0x7f6e13d041b0
       gc table: 0x7f6e13d03d50
    jump target: 0x7f6e13d03e60
         resops: 0x7f6e13d03e6e
       failures: 0x7f6e13d041b0
            end: 0x7f6e13d0451f
[3e4c0a46a31e795] jit-backend-addr}
[3e4c0a46a321f74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03e90 +0  7B030000
[3e4c0a46a322dda] jit-backend-dump}
[3e4c0a46a326407] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03eab +0  7C030000
[3e4c0a46a327141] jit-backend-dump}
[3e4c0a46a32a57e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03ec3 +0  80030000
[3e4c0a46a32b302] jit-backend-dump}
[3e4c0a46a32e6e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03ed2 +0  8D030000
[3e4c0a46a32f3e9] jit-backend-dump}
[3e4c0a46a332848] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03edb +0  A0030000
[3e4c0a46a33358e] jit-backend-dump}
[3e4c0a46a33687b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03eef +0  A8030000
[3e4c0a46a3375b5] jit-backend-dump}
[3e4c0a46a33a86e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03f05 +0  AE030000
[3e4c0a46a33b593] jit-backend-dump}
[3e4c0a46a33e8d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03f1c +0  B3030000
[3e4c0a46a33f5f7] jit-backend-dump}
[3e4c0a46a3428af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03f2a +0  C1030000
[3e4c0a46a3435f0] jit-backend-dump}
[3e4c0a46a3468ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03f3c +0  CB030000
[3e4c0a46a347626] jit-backend-dump}
[3e4c0a46a34a8d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03f4c +0  D7030000
[3e4c0a46a34b5ee] jit-backend-dump}
[3e4c0a46a34e8a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03f74 +0  CB030000
[3e4c0a46a34f5c8] jit-backend-dump}
[3e4c0a46a35287e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03f86 +0  D5030000
[3e4c0a46a35359c] jit-backend-dump}
[3e4c0a46a356830] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03f94 +0  E3030000
[3e4c0a46a357555] jit-backend-dump}
[3e4c0a46a35a857] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03f9e +0  F5030000
[3e4c0a46a35b576] jit-backend-dump}
[3e4c0a46a35e896] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03fb4 +0  FB030000
[3e4c0a46a35f5a6] jit-backend-dump}
[3e4c0a46a36286b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03fc9 +0  02040000
[3e4c0a46a363574] jit-backend-dump}
[3e4c0a46a3667ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d03fef +0  F8030000
[3e4c0a46a367511] jit-backend-dump}
[3e4c0a46a36a7df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0400c +0  F7030000
[3e4c0a46a36b510] jit-backend-dump}
[3e4c0a46a36e7cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04021 +0  FE030000
[3e4c0a46a36f4e7] jit-backend-dump}
[3e4c0a46a3727b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0402e +0  0D040000
[3e4c0a46a3734d1] jit-backend-dump}
[3e4c0a46a376c3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0403e +0  19040000
[3e4c0a46a37795a] jit-backend-dump}
[3e4c0a46a37acf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0405a +0  19040000
[3e4c0a46a37ba08] jit-backend-dump}
[3e4c0a46a37ed87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0406f +0  20040000
[3e4c0a46a37fad7] jit-backend-dump}
[3e4c0a46a382e10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0407f +0  2C040000
[3e4c0a46a383b4a] jit-backend-dump}
[3e4c0a46a386e65] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0409f +0  28040000
[3e4c0a46a387b83] jit-backend-dump}
[3e4c0a46a38aec6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d040af +0  34040000
[3e4c0a46a38bbea] jit-backend-dump}
[3e4c0a46a38ef05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d040bd +0  42040000
[3e4c0a46a38fc14] jit-backend-dump}
[3e4c0a46a3931a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf074d +0  0F370100
[3e4c0a46a393f04] jit-backend-dump}
[3e4c0a46a3981cc] jit-backend}
[3e4c0a46a39c16f] {jit-log-opt-bridge
# bridge out of Guard 0x2ec71d8 with 123 ops
[p0, p1, i2, p3]
+294: guard_not_invalidated(descr=<Guard0x306e080>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
+294: p4 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+305: guard_nonnull_class(p4, ConstClass(ForwardLink), descr=<Guard0x306e0e0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(+ m AppRand42)')
+324: p6 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+342: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x3056ec0>) [p0, p1, i2, p3]
+351: p8 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+355: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x306e140>) [p0, p1, i2, p3]
+375: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+380: i12 = int_add_ovf(i10, 2)
+384: guard_no_overflow(descr=<Guard0x3056f08>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+390: i13 = int_eq(i2, i12)
+393: guard_true(i13, descr=<Guard0x3056f50>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(void)')
+399: p14 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+410: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3056f98>) [p0, p1, i2, p3]
+419: p16 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+423: p17 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+427: guard_class(p17, 16435208, descr=<Guard0x3056fe0>) [p0, p1, i2, p3]
+441: p19 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+445: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x306e1a0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0))')
+464: guard_class(p16, 16504592, descr=<Guard0x3057028>) [p0, p1, i2, p3]
+478: p22 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+483: guard_class(p22, 16499664, descr=<Guard0x3057070>) [p0, p1, i2, p3]
+496: p24 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+500: guard_class(p24, 16479200, descr=<Guard0x30570b8>) [p0, p1, i2, p3]
+512: p26 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))')
+516: p27 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+520: p28 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+524: p29 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+528: p30 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+532: f31 = getfield_gc_f(p16, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+539: guard_class(p26, 16505296, descr=<Guard0x3057100>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(doloop5207 0)')
debug_merge_point(0, 0, '(let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 0)')
debug_merge_point(0, 0, '(+ n 1)')
+552: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x306e200>) [p0, p1, i2, p3]
+570: i34 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+574: i36 = int_add_ovf(i34, 1)
+578: guard_no_overflow(descr=<Guard0x3057148>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))')
debug_merge_point(0, 0, '(= kk5209 AppRand56)')
+584: i38 = int_eq(0, i36)
+588: guard_false(i38, descr=<Guard0x3057190>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61))))')
debug_merge_point(0, 0, '(let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))')
debug_merge_point(0, 0, '(= kk5209 CellRef(kp))')
+594: p39 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+598: guard_nonnull_class(p39, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306e260>) [p0, p1, i2, p3]
+616: i41 = getfield_gc_i(p39, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+627: i42 = int_eq(0, i41)
+631: guard_false(i42, descr=<Guard0x30571d8>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void))')
debug_merge_point(0, 0, '(let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60)))')
debug_merge_point(0, 0, '(- piv)')
+637: f44 = float_sub(0.000000, f31)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk5209)')
+657: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x306e2c0>) [p0, p1, i2, p3]
+675: p46 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+686: guard_nonnull_class(p46, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306e320>) [p0, p1, i2, p3]
+704: i48 = getfield_gc_i(p46, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+715: i50 = int_ge(i48, 0)
+719: guard_true(i50, descr=<Guard0x3057220>) [p0, p1, i2, p3]
+725: i51 = getfield_gc_i(p30, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+729: i52 = int_lt(i48, i51)
+732: guard_true(i52, descr=<Guard0x3057268>) [p0, p1, i2, p3]
+738: p53 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+742: guard_class(p53, 16622984, descr=<Guard0x30572b0>) [p0, p1, i2, p3]
+754: p55 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+758: p56 = getarrayitem_gc_r(p55, i48, descr=<ArrayP 8>)
+770: guard_class(p56, ConstClass(W_Vector), descr=<Guard0x30572f8>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+782: i58 = getfield_gc_i(p56, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+793: i59 = int_lt(0, i58)
+797: guard_true(i59, descr=<Guard0x3057340>) [p0, p1, i2, p3]
+803: p60 = getfield_gc_r(p56, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+807: guard_class(p60, 16612728, descr=<Guard0x3057388>) [p0, p1, i2, p3]
+819: p62 = getfield_gc_r(p56, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+823: f63 = getarrayitem_gc_f(p62, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand58 AppRand59)')
+829: f64 = float_mul(f44, f63)
debug_merge_point(0, 0, '(matrix-set! a5002 CellRef(ip) kk5209 AppRand60)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+834: p65 = getarrayitem_gc_r(p55, i48, descr=<ArrayP 8>)
+839: guard_class(p65, ConstClass(W_Vector), descr=<Guard0x30573d0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+851: p67 = getfield_gc_r(p65, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+855: guard_class(p67, 16612728, descr=<Guard0x3057418>) [p0, p1, i2, p3]
+867: i69 = getfield_gc_i(p65, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+871: i70 = int_lt(0, i69)
+875: guard_true(i70, descr=<Guard0x3057460>) [p0, p1, i2, p3]
+881: p71 = getfield_gc_r(p65, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk5209 1)')
debug_merge_point(0, 0, '(doloop5207 AppRand61)')
debug_merge_point(0, 0, '(let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 AppRand61)')
+885: setarrayitem_gc(p71, 0, f64, descr=<ArrayF 8>)
+891: p72 = new_with_vtable(descr=<SizeDescr 64>)
+935: p73 = new_with_vtable(descr=<SizeDescr 16>)
+946: setfield_gc(p73, f31, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+952: p74 = new_with_vtable(descr=<SizeDescr 40>)
+963: setfield_gc(p74, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+981: setfield_gc(p72, ConstPtr(ptr75), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+992: setfield_gc(p74, ConstPtr(ptr76), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+996: setfield_gc(p74, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1000: setfield_gc(p74, p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1004: setfield_gc(p72, p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1008: setfield_gc(p72, p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1019: setfield_gc(p72, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1030: setfield_gc(p72, p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1034: setfield_gc(p72, p73, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1038: setfield_gc(p72, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1042: jump(p72, 1, p74, p19, p27, i36, p28, p39, i41, descr=TargetToken(48739680))
+1120: --end of the loop--
[3e4c0a46a3fea85] jit-log-opt-bridge}
[3e4c0a46a811a3e] {jit-backend
[3e4c0a46a8cf3bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d047a
[3e4c0a46a8da4ba] jit-backend-dump}
[3e4c0a46a8e5dc6] {jit-backend-addr
Loop 36 ((let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))) from (doloop5244 AppRand68)) has address 0x7f6e13d0495d to 0x7f6e13d04c60 (bootstrap 0x7f6e13d048d0)
       gc table: 0x7f6e13d047a0
       function: 0x7f6e13d048d0
         resops: 0x7f6e13d0495d
       failures: 0x7f6e13d04c60
            end: 0x7f6e13d0507e
[3e4c0a46a8e8ed6] jit-backend-addr}
[3e4c0a46a8edd69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04987 +0  E7020000
[3e4c0a46a8ef01c] jit-backend-dump}
[3e4c0a46a8f2a0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0499d +0  ED020000
[3e4c0a46a8f37fe] jit-backend-dump}
[3e4c0a46a8f71ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d049b0 +0  12030000
[3e4c0a46a8f7f59] jit-backend-dump}
[3e4c0a46a8fb699] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d049c4 +0  1A030000
[3e4c0a46a8fc3e2] jit-backend-dump}
[3e4c0a46a8ff98f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d049d8 +0  22030000
[3e4c0a46a9006c0] jit-backend-dump}
[3e4c0a46a903bc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d049ef +0  27030000
[3e4c0a46a9048e5] jit-backend-dump}
[3e4c0a46a907df2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d049fc +0  36030000
[3e4c0a46a908b0b] jit-backend-dump}
[3e4c0a46a90bf23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04a09 +0  45030000
[3e4c0a46a90cc14] jit-backend-dump}
[3e4c0a46a90ffcb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04a20 +0  4A030000
[3e4c0a46a910cb2] jit-backend-dump}
[3e4c0a46a9140e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04a2a +0  5C030000
[3e4c0a46a914e05] jit-backend-dump}
[3e4c0a46a9181ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04a37 +0  6B030000
[3e4c0a46a918f02] jit-backend-dump}
[3e4c0a46a91c323] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04a49 +0  75030000
[3e4c0a46a91d011] jit-backend-dump}
[3e4c0a46a9204b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04a5f +0  7B030000
[3e4c0a46a9211cc] jit-backend-dump}
[3e4c0a46a92461e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04a6d +0  89030000
[3e4c0a46a92533a] jit-backend-dump}
[3e4c0a46a928771] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04a7e +0  94030000
[3e4c0a46a92944f] jit-backend-dump}
[3e4c0a46a92c812] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04aa3 +0  8B030000
[3e4c0a46a92d4f6] jit-backend-dump}
[3e4c0a46a9308b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04aba +0  90030000
[3e4c0a46a93158b] jit-backend-dump}
[3e4c0a46a934923] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04acb +0  9B030000
[3e4c0a46a935602] jit-backend-dump}
[3e4c0a46a93899a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04ad5 +0  AD030000
[3e4c0a46a93967b] jit-backend-dump}
[3e4c0a46a93ca22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04ae2 +0  BC030000
[3e4c0a46a93d6fe] jit-backend-dump}
[3e4c0a46a940a80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04b08 +0  B2030000
[3e4c0a46a941777] jit-backend-dump}
[3e4c0a46a944b12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04b23 +0  B3030000
[3e4c0a46a9457e7] jit-backend-dump}
[3e4c0a46a948c1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04b4e +0  A4030000
[3e4c0a46a949912] jit-backend-dump}
[3e4c0a46a94cd34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04b66 +0  A8030000
[3e4c0a46a94da15] jit-backend-dump}
[3e4c0a46a950de7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04b73 +0  B7030000
[3e4c0a46a951ac9] jit-backend-dump}
[3e4c0a46a954fca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04bb1 +0  B1030000
[3e4c0a46a955c90] jit-backend-dump}
[3e4c0a46a959012] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04bbe +0  C0030000
[3e4c0a46a959d03] jit-backend-dump}
[3e4c0a46a95d14c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04bc7 +0  D3030000
[3e4c0a46a95de1b] jit-backend-dump}
[3e4c0a46a96122e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04bd8 +0  DE030000
[3e4c0a46a961f4f] jit-backend-dump}
[3e4c0a46a96540a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04be6 +0  EC030000
[3e4c0a46a9660fe] jit-backend-dump}
[3e4c0a46a9694b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04bf7 +0  F7030000
[3e4c0a46a96a19c] jit-backend-dump}
[3e4c0a46a96d57d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04c1c +0  EE030000
[3e4c0a46a96e26e] jit-backend-dump}
[3e4c0a46a9715c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04c25 +0  01040000
[3e4c0a46a9722b0] jit-backend-dump}
[3e4c0a46a97562d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04c3a +0  08040000
[3e4c0a46a976314] jit-backend-dump}
[3e4c0a46a979675] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04c43 +0  1B040000
[3e4c0a46a97a39a] jit-backend-dump}
[3e4c0a46a97e31f] jit-backend}
[3e4c0a46a9821c4] {jit-log-opt-loop
# Loop 36 ((let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))) from (doloop5244 AppRand68)) : loop with 138 ops
[p0, p1]
+453: label(p0, p1, descr=TargetToken(49648272))
debug_merge_point(0, 0, '(let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))) from (doloop5244 AppRand68)')
+472: guard_class(p1, 16435208, descr=<Guard0x306e380>) [p0, p1]
+491: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+495: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x306e3e0>) [p0, p1]
debug_merge_point(0, 0, '(= i5246 m)')
+513: guard_not_invalidated(descr=<Guard0x30574a8>) [p0, p1]
+513: guard_class(p0, 16504944, descr=<Guard0x30574f0>) [p0, p1]
+532: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+536: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+540: guard_class(p7, 16479200, descr=<Guard0x3057538>) [p0, p1]
+552: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+563: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3057580>) [p0, p1]
+572: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+576: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x306e440>) [p0, p1]
+595: i13 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+599: i14 = int_eq(i6, i13)
+602: guard_false(i14, descr=<Guard0x30575c8>) [p0, p1]
debug_merge_point(0, 0, '(if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))')
debug_merge_point(0, 0, '(let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68)))')
debug_merge_point(0, 0, '(+ i5246 1)')
+608: i16 = int_add_ovf(i6, 1)
+615: guard_no_overflow(descr=<Guard0x3057610>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void)))')
+621: p17 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand64 0)')
+621: p18 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+625: guard_nonnull_class(p18, ConstClass(W_Vector), descr=<Guard0x306e4a0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+644: i21 = int_ge(i16, 0)
+648: guard_true(i21, descr=<Guard0x3057658>) [p0, p1]
+654: i22 = getfield_gc_i(p18, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+658: i23 = int_lt(i16, i22)
+661: guard_true(i23, descr=<Guard0x30576a0>) [p0, p1]
+667: p24 = getfield_gc_r(p18, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+671: guard_class(p24, 16622984, descr=<Guard0x30576e8>) [p0, p1]
+685: p26 = getfield_gc_r(p18, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+689: p27 = getarrayitem_gc_r(p26, i16, descr=<ArrayP 8>)
+694: guard_class(p27, ConstClass(W_Vector), descr=<Guard0x3057730>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+707: i29 = getfield_gc_i(p27, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+711: i31 = int_lt(0, i29)
+715: guard_true(i31, descr=<Guard0x3057778>) [p0, p1]
+721: p32 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+725: guard_class(p32, 16612728, descr=<Guard0x30577c0>) [p0, p1]
+738: p34 = getfield_gc_r(p27, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+742: f36 = getarrayitem_gc_f(p34, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(if (negative? AppRand65) (fuck-up) (void)) from (vector-ref AppRand1 j)')
+748: i38 = float_lt(f36, 0.000000)
+769: guard_false(i38, descr=<Guard0x3057808>) [p0, p1]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66))')
debug_merge_point(0, 0, '(+ i5246 1)')
debug_merge_point(0, 0, '(vector-set! l2 i5246 AppRand66)')
+775: p39 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+779: guard_nonnull_class(p39, ConstClass(W_Vector), descr=<Guard0x306e500>) [p0, p1]
+798: p41 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+802: guard_class(p41, 16623792, descr=<Guard0x3057850>) [p0, p1]
+815: i44 = int_ge(i6, 0)
+819: guard_true(i44, descr=<Guard0x3057898>) [p0, p1]
+825: i45 = getfield_gc_i(p39, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+829: i46 = int_lt(i6, i45)
+832: guard_true(i46, descr=<Guard0x30578e0>) [p0, p1]
+838: p47 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+842: setarrayitem_gc(p47, i6, i16, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67))')
debug_merge_point(0, 0, '(+ n i5246)')
+847: p48 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+858: guard_nonnull_class(p48, ConstClass(W_Fixnum), descr=<Guard0x306e560>) [p0, p48, p1, p3]
+876: i50 = getfield_gc_i(p48, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+887: i51 = int_add_ovf(i50, i6)
+897: guard_no_overflow(descr=<Guard0x3057928>) [p0, p48, p1, p3]
debug_merge_point(0, 0, '(vector-set! iposv i5246 AppRand67)')
+903: p52 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+928: guard_nonnull_class(p52, ConstClass(W_Vector), descr=<Guard0x306e5c0>) [p0, p48, p1, p3]
+946: p54 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+957: guard_class(p54, 16623792, descr=<Guard0x3057970>) [p0, p48, p1, p3]
+970: i56 = getfield_gc_i(p52, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+974: i57 = int_lt(i6, i56)
+977: guard_true(i57, descr=<Guard0x30579b8>) [p0, p48, p1, p3]
+983: p58 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+987: setarrayitem_gc(p58, i6, i51, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))')
debug_merge_point(0, 0, '(+ i5246 1)')
debug_merge_point(0, 0, '(doloop5244 AppRand68)')
debug_merge_point(0, 0, '(let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))) from (doloop5244 AppRand68)')
+992: label(p7, i16, p1, p3, p11, i13, p18, i22, p26, p39, i45, p47, p48, i50, p52, i56, p58, descr=TargetToken(49648352))
debug_merge_point(0, 0, '(let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))) from (doloop5244 AppRand68)')
debug_merge_point(0, 0, '(= i5246 m)')
+1032: guard_not_invalidated(descr=<Guard0x306e620>) [i16, p7, p1, p3]
+1032: i59 = int_eq(i16, i13)
+1039: guard_false(i59, descr=<Guard0x3057a00>) [i16, p7, p1, p3]
debug_merge_point(0, 0, '(if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))')
debug_merge_point(0, 0, '(let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68)))')
debug_merge_point(0, 0, '(+ i5246 1)')
+1045: i61 = int_add_ovf(i16, 1)
+1052: guard_no_overflow(descr=<Guard0x3057a48>) [i16, p7, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void)))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand64 0)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1058: i62 = int_lt(i61, i22)
+1061: guard_true(i62, descr=<Guard0x3057a90>) [i16, p7, p1, p3]
+1067: p63 = getarrayitem_gc_r(p26, i61, descr=<ArrayP 8>)
+1072: guard_class(p63, ConstClass(W_Vector), descr=<Guard0x3057ad8>) [i16, p7, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1084: i65 = getfield_gc_i(p63, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1088: i67 = int_lt(0, i65)
+1092: guard_true(i67, descr=<Guard0x3057b20>) [i16, p7, p1, p3]
+1098: p68 = getfield_gc_r(p63, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1102: guard_class(p68, 16612728, descr=<Guard0x3057b68>) [i16, p7, p1, p3]
+1115: p70 = getfield_gc_r(p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1119: f72 = getarrayitem_gc_f(p70, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(if (negative? AppRand65) (fuck-up) (void)) from (vector-ref AppRand1 j)')
+1125: i74 = float_lt(f72, 0.000000)
+1146: guard_false(i74, descr=<Guard0x3057bb0>) [i16, p7, p1, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66))')
debug_merge_point(0, 0, '(+ i5246 1)')
debug_merge_point(0, 0, '(vector-set! l2 i5246 AppRand66)')
+1152: i75 = int_lt(i16, i45)
+1155: guard_true(i75, descr=<Guard0x3057bf8>) [i16, p7, p1, p3]
+1161: setarrayitem_gc(p47, i16, i61, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67))')
debug_merge_point(0, 0, '(+ n i5246)')
+1166: i76 = int_add_ovf(i50, i16)
+1176: guard_no_overflow(descr=<Guard0x306e680>) [i16, i50, p48, None, p7, p1, p3]
debug_merge_point(0, 0, '(vector-set! iposv i5246 AppRand67)')
+1182: i78 = int_lt(i16, i56)
+1185: guard_true(i78, descr=<Guard0x3057c40>) [i16, i50, p48, None, p7, p1, p3]
+1191: setarrayitem_gc(p58, i16, i76, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))')
debug_merge_point(0, 0, '(+ i5246 1)')
debug_merge_point(0, 0, '(doloop5244 AppRand68)')
debug_merge_point(0, 0, '(let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))) from (doloop5244 AppRand68)')
+1196: i79 = arraylen_gc(p26, descr=<ArrayP 8>)
+1196: jump(p7, i61, p1, p3, p11, i13, p18, i22, p26, p39, i45, p47, p48, i50, p52, i56, p58, descr=TargetToken(49648352))
+1216: --end of the loop--
[3e4c0a46a9e723c] jit-log-opt-loop}
[3e4c0a46ad37982] {jit-backend
[3e4c0a46adbd1a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a46adc6ad6] jit-backend-dump}
[3e4c0a46add21b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05364 +0  28000000
[3e4c0a46add3588] jit-backend-dump}
[3e4c0a46add7bdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05665 +0  28000000
[3e4c0a46add8b2a] jit-backend-dump}
[3e4c0a46addc1b3] {jit-backend-addr
bridge out of Guard 0x2ee3cd0 has address 0x7f6e13d05360 to 0x7f6e13d05660
       gc table: 0x7f6e13d05270
    jump target: 0x7f6e13d05360
         resops: 0x7f6e13d0536e
       failures: 0x7f6e13d05660
            end: 0x7f6e13d05990
[3e4c0a46adde710] jit-backend-addr}
[3e4c0a46ade20d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0538d +0  11030000
[3e4c0a46ade2fce] jit-backend-dump}
[3e4c0a46ade65c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d053a8 +0  12030000
[3e4c0a46ade72dc] jit-backend-dump}
[3e4c0a46adea7a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d053b5 +0  21030000
[3e4c0a46adeb4c7] jit-backend-dump}
[3e4c0a46adee893] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d053d4 +0  1E030000
[3e4c0a46adef56c] jit-backend-dump}
[3e4c0a46adf296f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d053e1 +0  2D030000
[3e4c0a46adf3641] jit-backend-dump}
[3e4c0a46adf69d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d053f1 +0  39030000
[3e4c0a46adf76ab] jit-backend-dump}
[3e4c0a46adfaaae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05408 +0  3E030000
[3e4c0a46adfb7b1] jit-backend-dump}
[3e4c0a46adfeb3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05412 +0  50030000
[3e4c0a46adff80c] jit-backend-dump}
[3e4c0a46ae02be1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0541f +0  5F030000
[3e4c0a46ae038de] jit-backend-dump}
[3e4c0a46ae06c9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0542f +0  6B030000
[3e4c0a46ae0798b] jit-backend-dump}
[3e4c0a46ae0aded] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0544e +0  68030000
[3e4c0a46ae0baed] jit-backend-dump}
[3e4c0a46ae0ef27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05464 +0  6E030000
[3e4c0a46ae0fc34] jit-backend-dump}
[3e4c0a46ae1303d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05472 +0  7C030000
[3e4c0a46ae13d27] jit-backend-dump}
[3e4c0a46ae170d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0547f +0  8B030000
[3e4c0a46ae17da4] jit-backend-dump}
[3e4c0a46ae1b1a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05490 +0  96030000
[3e4c0a46ae1be85] jit-backend-dump}
[3e4c0a46ae1f264] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d054ae +0  94030000
[3e4c0a46ae1ff88] jit-backend-dump}
[3e4c0a46ae233a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d054b8 +0  A6030000
[3e4c0a46ae24079] jit-backend-dump}
[3e4c0a46ae27436] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d054cc +0  AE030000
[3e4c0a46ae2813f] jit-backend-dump}
[3e4c0a46ae2b59b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d054dd +0  B9030000
[3e4c0a46ae2c2b3] jit-backend-dump}
[3e4c0a46ae2f746] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0550b +0  A7030000
[3e4c0a46ae3041b] jit-backend-dump}
[3e4c0a46ae33877] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0552b +0  A3030000
[3e4c0a46ae34555] jit-backend-dump}
[3e4c0a46ae37934] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05559 +0  8B030000
[3e4c0a46ae38683] jit-backend-dump}
[3e4c0a46ae3babd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0557b +0  85030000
[3e4c0a46ae3c786] jit-backend-dump}
[3e4c0a46ae3fc16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05585 +0  97030000
[3e4c0a46ae408eb] jit-backend-dump}
[3e4c0a46ae43d3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05592 +0  A6030000
[3e4c0a46ae44a2b] jit-backend-dump}
[3e4c0a46ae47de2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d055a4 +0  B0030000
[3e4c0a46ae48aae] jit-backend-dump}
[3e4c0a46ae4bedf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d055d7 +0  99030000
[3e4c0a46ae4cbb1] jit-backend-dump}
[3e4c0a46ae50166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf4ba8 +0  B4070100
[3e4c0a46ae50e51] jit-backend-dump}
[3e4c0a46ae54f8e] jit-backend}
[3e4c0a46ae58f7e] {jit-log-opt-bridge
# bridge out of Guard 0x2ee3cd0 with 110 ops
[i0, p1, p2, p3]
+262: guard_not_invalidated(descr=<Guard0x306e6e0>) [i0, p1, p2, p3]
+262: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+280: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3057c88>) [i0, p1, p2, p3]
+289: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+293: p7 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+297: guard_nonnull_class(p7, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306e740>) [i0, p1, p2, p3]
+316: i9 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+320: i10 = int_ge(i0, i9)
+323: guard_false(i10, descr=<Guard0x3057cd0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
+329: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+341: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x306e7a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
+360: p13 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+364: guard_nonnull(p13, descr=<Guard0x3057d18>) [i0, p1, p2, p3]
+380: i15 = instance_ptr_eq(p13, ConstPtr(ptr14))
+383: guard_true(i15, descr=<Guard0x3057d60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+389: p16 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+393: guard_nonnull_class(p16, ConstClass(W_Vector), descr=<Guard0x306e800>) [i0, p1, p2, p3]
+412: i19 = int_ge(i0, 0)
+416: guard_true(i19, descr=<Guard0x3057da8>) [i0, p1, p2, p3]
+422: i20 = getfield_gc_i(p16, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+426: i21 = int_lt(i0, i20)
+429: guard_true(i21, descr=<Guard0x3057df0>) [i0, p1, p2, p3]
+435: p22 = getfield_gc_r(p16, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+439: guard_class(p22, 16623792, descr=<Guard0x3057e38>) [i0, p1, p2, p3]
+451: p24 = getfield_gc_r(p16, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+455: i25 = getarrayitem_gc_i(p24, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
+460: p26 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+464: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x306e860>) [i0, p1, p2, p3]
+482: p28 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+486: guard_nonnull_class(p28, ConstClass(W_Fixnum), descr=<Guard0x306e8c0>) [i0, p1, p2, p3]
+504: p30 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+504: i31 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+508: i33 = int_ge(i31, 0)
+512: guard_true(i33, descr=<Guard0x3057e80>) [i0, p1, p2, p3]
+518: i34 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+522: i35 = int_lt(i31, i34)
+525: guard_true(i35, descr=<Guard0x3057ec8>) [i0, p1, p2, p3]
+531: p36 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+535: guard_class(p36, 16622984, descr=<Guard0x3057f10>) [i0, p1, p2, p3]
+548: p38 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+552: p39 = getarrayitem_gc_r(p38, i31, descr=<ArrayP 8>)
+564: guard_class(p39, ConstClass(W_Vector), descr=<Guard0x3057f58>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+578: i42 = int_ge(i25, 0)
+582: guard_true(i42, descr=<Guard0x3057fa0>) [i0, p1, p2, p3]
+588: i43 = getfield_gc_i(p39, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+599: i44 = int_lt(i25, i43)
+602: guard_true(i44, descr=<Guard0x307c020>) [i0, p1, p2, p3]
+608: p45 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+612: guard_class(p45, 16612728, descr=<Guard0x307c068>) [i0, p1, p2, p3]
+625: p47 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+629: f48 = getarrayitem_gc_f(p47, i25, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+636: p49 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+647: p50 = getfield_gc_r(p49, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+651: guard_nonnull_class(p50, ConstClass(W_CellFloatStrategy), descr=<Guard0x306e920>) [i0, p1, p2, p3]
+671: f52 = getfield_gc_f(p50, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+677: f53 = float_sub(f48, f52)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+682: i55 = float_gt(f53, 0.000000)
+697: guard_true(i55, descr=<Guard0x307c0b0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+703: i56 = getarrayitem_gc_i(p24, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! kp SetBang2)')
+708: p57 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+719: p58 = getfield_gc_r(p57, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+730: guard_nonnull_class(p58, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306e980>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+749: i60 = getarrayitem_gc_i(p24, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand13)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+754: p61 = getarrayitem_gc_r(p38, i31, descr=<ArrayP 8>)
+766: setfield_gc(p58, i56, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+770: guard_class(p61, ConstClass(W_Vector), descr=<Guard0x306e9e0>) [p61, p11, i60, p28, p26, i0, p1, p2, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+783: i65 = int_ge(i60, 0)
+787: guard_true(i65, descr=<Guard0x307c0f8>) [p61, p11, i60, p28, p26, i0, p1, p2, None]
+793: i66 = getfield_gc_i(p61, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+797: i67 = int_lt(i60, i66)
+800: guard_true(i67, descr=<Guard0x307c140>) [p61, p11, i60, p28, p26, i0, p1, p2, None]
+806: p68 = getfield_gc_r(p61, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+810: guard_class(p68, 16612728, descr=<Guard0x307c188>) [p61, p11, i60, p28, p26, i0, p1, p2, None]
+824: p70 = getfield_gc_r(p61, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+828: f71 = getarrayitem_gc_f(p70, i60, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang3) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
+835: i73 = int_add(i0, 1)
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+839: setfield_gc(p50, f71, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+845: i74 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+856: i76 = int_ge(i74, -9223372036854775807)
+869: guard_true(i76, descr=<Guard0x306ea40>) [p2, i73, None, None, None, None, None, p1, None, None]
+875: i77 = arraylen_gc(p24, descr=<ArrayS 8>)
+875: i78 = arraylen_gc(p38, descr=<ArrayP 8>)
+875: jump(p1, i73, p2, p11, p6, p7, i74, p16, i20, p24, p28, p26, p38, i31, p49, p50, f71, descr=TargetToken(48739520))
+1008: --end of the loop--
[3e4c0a46aeb8c77] jit-log-opt-bridge}
[3e4c0a46b28600d] {jit-backend
[3e4c0a46b306981] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05be
[3e4c0a46b312b55] jit-backend-dump}
[3e4c0a46b31e207] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05d24 +0  28000000
[3e4c0a46b31f7c0] jit-backend-dump}
[3e4c0a46b323c74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06075 +0  28000000
[3e4c0a46b324c40] jit-backend-dump}
[3e4c0a46b3284c1] {jit-backend-addr
bridge out of Guard 0x2f41a48 has address 0x7f6e13d05d20 to 0x7f6e13d06070
       gc table: 0x7f6e13d05be0
    jump target: 0x7f6e13d05d20
         resops: 0x7f6e13d05d2e
       failures: 0x7f6e13d06070
            end: 0x7f6e13d06452
[3e4c0a46b32a957] jit-backend-addr}
[3e4c0a46b32e24c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05d3e +0  70030000
[3e4c0a46b32f0c8] jit-backend-dump}
[3e4c0a46b33273b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05d4f +0  7B030000
[3e4c0a46b333407] jit-backend-dump}
[3e4c0a46b336c9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05d63 +0  83030000
[3e4c0a46b3379e7] jit-backend-dump}
[3e4c0a46b33af2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05d7a +0  88030000
[3e4c0a46b33bc28] jit-backend-dump}
[3e4c0a46b33f1a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05da0 +0  7E030000
[3e4c0a46b33fec2] jit-backend-dump}
[3e4c0a46b3434ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05db4 +0  80030000
[3e4c0a46b3441cd] jit-backend-dump}
[3e4c0a46b3477ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05dc1 +0  89030000
[3e4c0a46b3484f6] jit-backend-dump}
[3e4c0a46b34b9b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05dd8 +0  88030000
[3e4c0a46b34c6b1] jit-backend-dump}
[3e4c0a46b34fb53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05def +0  87030000
[3e4c0a46b35084d] jit-backend-dump}
[3e4c0a46b353c53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05dfa +0  98030000
[3e4c0a46b354962] jit-backend-dump}
[3e4c0a46b357db2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05e0e +0  A0030000
[3e4c0a46b358aac] jit-backend-dump}
[3e4c0a46b35bf26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05e24 +0  A6030000
[3e4c0a46b35cc1d] jit-backend-dump}
[3e4c0a46b360042] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05e36 +0  B0030000
[3e4c0a46b360d42] jit-backend-dump}
[3e4c0a46b364166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05e4d +0  B5030000
[3e4c0a46b364e5a] jit-backend-dump}
[3e4c0a46b368257] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05e5c +0  C2030000
[3e4c0a46b368f48] jit-backend-dump}
[3e4c0a46b36c3a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05e69 +0  D1030000
[3e4c0a46b3705c0] jit-backend-dump}
[3e4c0a46b374664] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05e76 +0  E0030000
[3e4c0a46b3753eb] jit-backend-dump}
[3e4c0a46b378a95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05e8e +0  E4030000
[3e4c0a46b3797d5] jit-backend-dump}
[3e4c0a46b37ccdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05e9b +0  F3030000
[3e4c0a46b37d9fb] jit-backend-dump}
[3e4c0a46b381006] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05eb5 +0  F5030000
[3e4c0a46b381d15] jit-backend-dump}
[3e4c0a46b3851b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05ec5 +0  01040000
[3e4c0a46b385e99] jit-backend-dump}
[3e4c0a46b389350] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05edb +0  07040000
[3e4c0a46b38a02c] jit-backend-dump}
[3e4c0a46b38d422] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05ee5 +0  19040000
[3e4c0a46b38e116] jit-backend-dump}
[3e4c0a46b391560] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05ef2 +0  28040000
[3e4c0a46b392235] jit-backend-dump}
[3e4c0a46b395650] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05f02 +0  34040000
[3e4c0a46b396338] jit-backend-dump}
[3e4c0a46b399820] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05f29 +0  29040000
[3e4c0a46b39a4ff] jit-backend-dump}
[3e4c0a46b39d920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05f52 +0  1C040000
[3e4c0a46b39e5f2] jit-backend-dump}
[3e4c0a46b3a1d60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05f67 +0  23040000
[3e4c0a46b3a2a3c] jit-backend-dump}
[3e4c0a46b3a5f0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05f7b +0  2B040000
[3e4c0a46b3a6bed] jit-backend-dump}
[3e4c0a46b3aa095] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05f94 +0  2E040000
[3e4c0a46b3aad6a] jit-backend-dump}
[3e4c0a46b3ae1df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05fb1 +0  2D040000
[3e4c0a46b3aeeb7] jit-backend-dump}
[3e4c0a46b3b2356] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05fbb +0  3F040000
[3e4c0a46b3b3025] jit-backend-dump}
[3e4c0a46b3b641f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05fc8 +0  4E040000
[3e4c0a46b3b70f4] jit-backend-dump}
[3e4c0a46b3ba525] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d05fd8 +0  5A040000
[3e4c0a46b3bb1f4] jit-backend-dump}
[3e4c0a46b3be880] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8b42 +0  DAD10000
[3e4c0a46b3bf53f] jit-backend-dump}
[3e4c0a46b3c38a0] jit-backend}
[3e4c0a46b3c78cd] {jit-log-opt-bridge
# bridge out of Guard 0x2f41a48 with 108 ops
[p0, p1]
+342: guard_not_invalidated(descr=<Guard0x306eaa0>) [p0, p1]
+342: guard_class(p1, 16504944, descr=<Guard0x307c1d0>) [p0, p1]
+354: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+358: guard_class(p3, 16480704, descr=<Guard0x307c218>) [p0, p1]
+371: p5 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+382: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x307c260>) [p0, p1]
+391: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+395: guard_nonnull_class(p7, ConstClass(W_Flonum), descr=<Guard0x306eb00>) [p0, p1]
+414: f9 = getfield_gc_f(p7, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+420: f11 = float_sub(0.000000, f9)
+440: guard_class(p0, 16436632, descr=<Guard0x307c2a8>) [p0, p1]
+452: p13 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+463: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x307c2f0>) [p0, p1]
+472: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+476: i16 = instance_ptr_eq(p1, p15)
+479: guard_true(i16, descr=<Guard0x307c338>) [p0, p1]
+485: f17 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.LetContSize1Flo.inst_vals_flo_0 40 pure>)
+491: p18 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))')
+495: guard_class(p18, 16435208, descr=<Guard0x307c380>) [p0, p1]
+508: p20 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+512: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x306eb60>) [p0, p1]
debug_merge_point(0, 0, '(< AppRand16 AppRand17)')
+531: i22 = float_lt(f17, f11)
+536: guard_false(i22, descr=<Guard0x307c3c8>) [p0, p1]
debug_merge_point(0, 0, '(if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))')
debug_merge_point(0, 0, '(void)')
+542: p23 = getfield_gc_r(p18, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+553: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x307c410>) [p0, p1]
+562: p25 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+566: p26 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+570: guard_class(p25, 16504944, descr=<Guard0x307c458>) [p0, p1]
+584: p28 = getfield_gc_r(p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+589: guard_class(p26, 16435208, descr=<Guard0x307c4a0>) [p0, p1]
+602: p30 = getfield_gc_r(p26, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+606: guard_nonnull_class(p30, ConstClass(ForwardLink), descr=<Guard0x306ebc0>) [p0, p1]
debug_merge_point(0, 0, '(+ i5080 1)')
+625: i32 = getfield_gc_i(p25, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+630: i34 = int_add_ovf(i32, 1)
+634: guard_no_overflow(descr=<Guard0x307c4e8>) [p0, p1]
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
+640: guard_class(p28, 16480704, descr=<Guard0x307c530>) [p0, p1]
+653: p36 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+657: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x307c578>) [p0, p1]
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+666: p38 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+670: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x306ec20>) [p0, p1]
+690: i40 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+694: i41 = int_eq(i34, i40)
+697: guard_false(i41, descr=<Guard0x307c5c0>) [p0, p1]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
+703: p42 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_0 24 pure>)
+707: p43 = getfield_gc_r(p42, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+711: guard_nonnull_class(p43, ConstClass(W_Bool), descr=<Guard0x306ec80>) [p0, p1]
+736: i46 = instance_ptr_eq(p43, ConstPtr(ptr45))
+739: guard_false(i46, descr=<Guard0x307c608>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+745: p47 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+749: guard_nonnull_class(p47, ConstClass(W_Vector), descr=<Guard0x306ece0>) [p0, p1]
+767: i50 = int_ge(i34, 0)
+771: guard_true(i50, descr=<Guard0x307c650>) [p0, p1]
+777: i51 = getfield_gc_i(p47, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+781: i52 = int_lt(i34, i51)
+784: guard_true(i52, descr=<Guard0x307c698>) [p0, p1]
+790: p53 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+794: guard_class(p53, 16623792, descr=<Guard0x307c6e0>) [p0, p1]
+806: p55 = getfield_gc_r(p47, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+810: i56 = getarrayitem_gc_i(p55, i34, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand15 CellRef(kp))')
+815: p57 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+826: guard_nonnull_class(p57, ConstClass(W_Vector), descr=<Guard0x306ed40>) [p0, p1]
+845: p59 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+856: p60 = getfield_gc_r(p59, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+867: guard_nonnull_class(p60, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306eda0>) [p0, p1]
+886: i62 = getfield_gc_i(p60, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+897: p63 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+897: i65 = int_ge(i56, 0)
+901: guard_true(i65, descr=<Guard0x307c728>) [p0, p1]
+907: i66 = getfield_gc_i(p57, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+918: i67 = int_lt(i56, i66)
+921: guard_true(i67, descr=<Guard0x307c770>) [p0, p1]
+927: p68 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+938: guard_class(p68, 16622984, descr=<Guard0x307c7b8>) [p0, p1]
+952: p70 = getfield_gc_r(p57, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+956: p71 = getarrayitem_gc_r(p70, i56, descr=<ArrayP 8>)
+968: guard_class(p71, ConstClass(W_Vector), descr=<Guard0x307c800>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+981: i74 = int_ge(i62, 0)
+985: guard_true(i74, descr=<Guard0x307c848>) [p0, p1]
+991: i75 = getfield_gc_i(p71, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+995: i76 = int_lt(i62, i75)
+998: guard_true(i76, descr=<Guard0x307c890>) [p0, p1]
+1004: p77 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1008: guard_class(p77, 16612728, descr=<Guard0x307c8d8>) [p0, p1]
+1020: p79 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1024: f80 = getarrayitem_gc_f(p79, i62, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1031: i81 = arraylen_gc(p55, descr=<ArrayS 8>)
+1031: i82 = arraylen_gc(p70, descr=<ArrayP 8>)
+1031: jump(p28, i34, p30, p26, f80, p47, p55, p57, i66, p70, p59, p60, i62, p38, i40, p42, i51, p30, descr=TargetToken(49644192))
+1168: --end of the loop--
[3e4c0a46b4280d6] jit-log-opt-bridge}
[3e4c0a46b6506b9] {jit-backend
[3e4c0a46b6ffc9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d066c
[3e4c0a46b70bfdf] jit-backend-dump}
[3e4c0a46b717880] {jit-backend-addr
Loop 39 ((if (negative? AppRand65) (fuck-up) (void)) from (vector-ref AppRand1 j)) has address 0x7f6e13d0687d to 0x7f6e13d06cd0 (bootstrap 0x7f6e13d067f0)
       gc table: 0x7f6e13d066c0
       function: 0x7f6e13d067f0
         resops: 0x7f6e13d0687d
       failures: 0x7f6e13d06cd0
            end: 0x7f6e13d0711e
[3e4c0a46b71a50e] jit-backend-addr}
[3e4c0a46b71f3a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06894 +0  CE040000
[3e4c0a46b7207f4] jit-backend-dump}
[3e4c0a46b72441a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d068b4 +0  CA040000
[3e4c0a46b72537b] jit-backend-dump}
[3e4c0a46b728cb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d068c7 +0  EF040000
[3e4c0a46b729a46] jit-backend-dump}
[3e4c0a46b72d0cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d068db +0  F7040000
[3e4c0a46b72ddf4] jit-backend-dump}
[3e4c0a46b731426] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d068ef +0  FF040000
[3e4c0a46b73216a] jit-backend-dump}
[3e4c0a46b73568c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06905 +0  05050000
[3e4c0a46b7363dc] jit-backend-dump}
[3e4c0a46b739954] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06911 +0  15050000
[3e4c0a46b73a663] jit-backend-dump}
[3e4c0a46b73db12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06922 +0  20050000
[3e4c0a46b73e846] jit-backend-dump}
[3e4c0a46b741ce2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06933 +0  2B050000
[3e4c0a46b7429fd] jit-backend-dump}
[3e4c0a46b745eca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06947 +0  33050000
[3e4c0a46b746be9] jit-backend-dump}
[3e4c0a46b74a0cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0695f +0  37050000
[3e4c0a46b74ae21] jit-backend-dump}
[3e4c0a46b74e33a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06971 +0  41050000
[3e4c0a46b74f022] jit-backend-dump}
[3e4c0a46b752490] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0697b +0  53050000
[3e4c0a46b75319c] jit-backend-dump}
[3e4c0a46b756616] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06989 +0  61050000
[3e4c0a46b757320] jit-backend-dump}
[3e4c0a46b75a766] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d069a5 +0  61050000
[3e4c0a46b75b43e] jit-backend-dump}
[3e4c0a46b75e8c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d069b2 +0  70050000
[3e4c0a46b75f594] jit-backend-dump}
[3e4c0a46b76299d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d069bb +0  83050000
[3e4c0a46b7636af] jit-backend-dump}
[3e4c0a46b766af3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06a7d +0  DD040000
[3e4c0a46b7677e3] jit-backend-dump}
[3e4c0a46b76ac05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06a8d +0  E9040000
[3e4c0a46b76b8e0] jit-backend-dump}
[3e4c0a46b76ed0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06aa3 +0  EF040000
[3e4c0a46b76f9e3] jit-backend-dump}
[3e4c0a46b772e11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06ab4 +0  FA040000
[3e4c0a46b773b08] jit-backend-dump}
[3e4c0a46b776f6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06ac1 +0  09050000
[3e4c0a46b777c45] jit-backend-dump}
[3e4c0a46b77b0f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06ae4 +0  02050000
[3e4c0a46b77bdd5] jit-backend-dump}
[3e4c0a46b77f23a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06af1 +0  11050000
[3e4c0a46b77fefa] jit-backend-dump}
[3e4c0a46b78330f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06afa +0  24050000
[3e4c0a46b783ff4] jit-backend-dump}
[3e4c0a46b78744f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06bc5 +0  75040000
[3e4c0a46b788134] jit-backend-dump}
[3e4c0a46b78b5d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06be0 +0  76040000
[3e4c0a46b78c2ab] jit-backend-dump}
[3e4c0a46b78f787] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06bee +0  84040000
[3e4c0a46b79047e] jit-backend-dump}
[3e4c0a46b793933] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06c04 +0  8A040000
[3e4c0a46b794620] jit-backend-dump}
[3e4c0a46b797ab9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06c11 +0  99040000
[3e4c0a46b798785] jit-backend-dump}
[3e4c0a46b79bbbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06c1d +0  A9040000
[3e4c0a46b79c8b3] jit-backend-dump}
[3e4c0a46b79fcbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06c35 +0  AD040000
[3e4c0a46b7a099e] jit-backend-dump}
[3e4c0a46b7a4152] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d06c43 +0  BB040000
[3e4c0a46b7a4e2a] jit-backend-dump}
[3e4c0a46b7a8cae] jit-backend}
[3e4c0a46b7acd5b] {jit-log-opt-loop
# Loop 39 ((if (negative? AppRand65) (fuck-up) (void)) from (vector-ref AppRand1 j)) : entry bridge with 98 ops
[p0, p1]
debug_merge_point(0, 0, '(if (negative? AppRand65) (fuck-up) (void)) from (vector-ref AppRand1 j)')
+453: guard_class(p0, 16504592, descr=<Guard0x306ee00>) [p1, p0]
+472: f3 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+477: i5 = float_lt(f3, 0.000000)
+498: guard_false(i5, descr=<Guard0x307c920>) [p1, p0]
debug_merge_point(0, 0, '(void)')
+504: guard_not_invalidated(descr=<Guard0x307c968>) [p1, p0]
+504: guard_class(p1, 16435208, descr=<Guard0x307c9b0>) [p1, p0]
+523: p7 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+534: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x307c9f8>) [p1, p0]
+543: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+547: p10 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+551: guard_class(p10, 16435208, descr=<Guard0x307ca40>) [p1, p0]
+563: p12 = getfield_gc_r(p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+567: guard_nonnull_class(p12, ConstClass(ForwardLink), descr=<Guard0x306ee60>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66))')
debug_merge_point(0, 0, '(+ i5246 1)')
+585: guard_class(p9, 16504944, descr=<Guard0x307ca88>) [p1, p0]
+597: i15 = getfield_gc_i(p9, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+601: i17 = int_add_ovf(i15, 1)
+608: guard_no_overflow(descr=<Guard0x307cad0>) [p1, p0]
debug_merge_point(0, 0, '(vector-set! l2 i5246 AppRand66)')
+614: p18 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+618: guard_class(p18, 16479200, descr=<Guard0x307cb18>) [p1, p0]
+631: p20 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+642: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x307cb60>) [p1, p0]
+651: p22 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+655: guard_nonnull_class(p22, ConstClass(W_Vector), descr=<Guard0x306eec0>) [p1, p0]
+675: p24 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+680: guard_class(p24, 16693360, descr=<Guard0x307cba8>) [p1, p0]
+693: i27 = int_ge(i15, 0)
+697: guard_true(i27, descr=<Guard0x307cbf0>) [p1, p0]
+703: i28 = getfield_gc_i(p22, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+708: i29 = int_lt(i15, i28)
+711: guard_true(i29, descr=<Guard0x307cc38>) [p1, p0]
+717: p30 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+722: p32 = getarrayitem_gc_pure_r(p30, 0, descr=<ArrayP 8>)
+726: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x306ef20>) [p1, p0]
+745: i34 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+749: i35 = int_eq(i34, i17)
+752: guard_false(i35, descr=<Guard0x307cc80>) [p1, p0]
+758: i36 = int_is_true(i34)
+761: guard_false(i36, descr=<Guard0x307ccc8>) [p1, p0]
+767: p37 = new_array_clear(i28, descr=<ArrayS 8>)
+891: setarrayitem_gc(p37, i15, i17, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67))')
debug_merge_point(0, 0, '(+ n i5246)')
+903: p38 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+933: setfield_gc(p22, ConstPtr(ptr39), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+938: setfield_gc(p22, p37, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+943: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x306ef80>) [p9, p38, p10, p12]
+961: i41 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+965: i42 = int_add_ovf(i41, i15)
+971: guard_no_overflow(descr=<Guard0x307cd10>) [p9, p38, p10, p12]
debug_merge_point(0, 0, '(vector-set! iposv i5246 AppRand67)')
+977: p43 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+981: guard_nonnull_class(p43, ConstClass(W_Vector), descr=<Guard0x306efe0>) [p9, p38, p10, p12]
+999: p45 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1003: guard_class(p45, 16693360, descr=<Guard0x307cd58>) [p9, p38, p10, p12]
+1016: i47 = getfield_gc_i(p43, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1020: i48 = int_lt(i15, i47)
+1023: guard_true(i48, descr=<Guard0x307cda0>) [p9, p38, p10, p12]
+1029: p49 = getfield_gc_r(p43, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1033: p51 = getarrayitem_gc_pure_r(p49, 0, descr=<ArrayP 8>)
+1044: guard_nonnull_class(p51, ConstClass(W_Fixnum), descr=<Guard0x306f040>) [p9, p38, p10, p12]
+1064: i53 = getfield_gc_i(p51, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1068: i54 = int_eq(i53, i42)
+1071: guard_false(i54, descr=<Guard0x307cde8>) [p9, p38, p10, p12]
+1077: i55 = int_is_true(i53)
+1080: guard_false(i55, descr=<Guard0x307ce30>) [p9, p38, p10, p12]
+1086: p56 = new_array_clear(i47, descr=<ArrayS 8>)
+1214: setarrayitem_gc(p56, i15, i42, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))')
debug_merge_point(0, 0, '(+ i5246 1)')
debug_merge_point(0, 0, '(doloop5244 AppRand68)')
debug_merge_point(0, 0, '(let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))) from (doloop5244 AppRand68)')
+1244: setfield_gc(p43, ConstPtr(ptr57), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1255: setfield_gc(p43, p56, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1259: p58 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1270: guard_nonnull_class(p58, ConstClass(W_Fixnum), descr=<Guard0x306f0a0>) [p10, i17, p18, None, None]
+1289: i61 = getfield_gc_i(p58, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1293: p62 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1293: p63 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1297: guard_nonnull_class(p63, ConstClass(W_Vector), descr=<Guard0x306f100>) [p10, i17, p18, None, None]
+1316: i65 = getfield_gc_i(p63, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1320: i67 = int_ge(i65, 1)
+1324: guard_true(i67, descr=<Guard0x306f160>) [p10, i17, p18, None, None]
+1330: p68 = getfield_gc_r(p63, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1334: guard_nonnull_class(p68, 16622984, descr=<Guard0x306f1c0>) [p10, i17, p18, None, None]
+1352: p70 = getfield_gc_r(p63, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1356: guard_nonnull(p70, descr=<Guard0x306f220>) [p10, i17, p18, None, None]
+1365: guard_gc_type(p70, 3592, descr=<Guard0x306f280>) [p10, i17, p18, None, None]
+1377: i72 = arraylen_gc(p70, descr=<ArrayP 8>)
+1377: p73 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1382: guard_nonnull_class(p73, 16623792, descr=<Guard0x306f2e0>) [p10, i17, p18, None, None]
+1401: p75 = getfield_gc_r(p22, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1406: guard_nonnull(p75, descr=<Guard0x306f340>) [p10, i17, p18, None, None]
+1415: jump(p18, i17, p10, p12, p58, i61, p63, i65, p70, p22, i28, p75, p38, i41, p43, i47, p56, descr=TargetToken(49648352))
+1552: --end of the loop--
[3e4c0a46b80163b] jit-log-opt-loop}
[3e4c0a46bb7643f] {jit-backend
[3e4c0a46bc07851] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a46bc132ae] jit-backend-dump}
[3e4c0a46bc1f056] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d074c4 +0  24000000
[3e4c0a46bc20530] jit-backend-dump}
[3e4c0a46bc24875] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07855 +0  24000000
[3e4c0a46bc25777] jit-backend-dump}
[3e4c0a46bc28ed9] {jit-backend-addr
bridge out of Guard 0x2ec7028 has address 0x7f6e13d074c0 to 0x7f6e13d07850
       gc table: 0x7f6e13d07380
    jump target: 0x7f6e13d074c0
         resops: 0x7f6e13d074ce
       failures: 0x7f6e13d07850
            end: 0x7f6e13d07c4b
[3e4c0a46bc2b3b2] jit-backend-addr}
[3e4c0a46bc2ed3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d074de +0  B1030000
[3e4c0a46bc2fb48] jit-backend-dump}
[3e4c0a46bc33128] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d074f5 +0  B6030000
[3e4c0a46bc33e59] jit-backend-dump}
[3e4c0a46bc373a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07501 +0  C6030000
[3e4c0a46bc380a9] jit-backend-dump}
[3e4c0a46bc3b615] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07512 +0  D1030000
[3e4c0a46bc3c331] jit-backend-dump}
[3e4c0a46bc3f7d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07526 +0  D9030000
[3e4c0a46bc404f8] jit-backend-dump}
[3e4c0a46bc43997] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07533 +0  E8030000
[3e4c0a46bc44697] jit-backend-dump}
[3e4c0a46bc47b8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07543 +0  F4030000
[3e4c0a46bc4886d] jit-backend-dump}
[3e4c0a46bc4c15f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0755a +0  15040000
[3e4c0a46bc4ce8a] jit-backend-dump}
[3e4c0a46bc50421] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07568 +0  23040000
[3e4c0a46bc51118] jit-backend-dump}
[3e4c0a46bc545c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07575 +0  32040000
[3e4c0a46bc552b7] jit-backend-dump}
[3e4c0a46bc5875c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07589 +0  3A040000
[3e4c0a46bc59453] jit-backend-dump}
[3e4c0a46bc5c8b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0759e +0  41040000
[3e4c0a46bc5d5a8] jit-backend-dump}
[3e4c0a46bc60a57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d075b6 +0  45040000
[3e4c0a46bc61769] jit-backend-dump}
[3e4c0a46bc64c02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d075c3 +0  54040000
[3e4c0a46bc658e3] jit-backend-dump}
[3e4c0a46bc68d5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d075d5 +0  5E040000
[3e4c0a46bc69a42] jit-backend-dump}
[3e4c0a46bc6ceaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d075e7 +0  68040000
[3e4c0a46bc6db92] jit-backend-dump}
[3e4c0a46bc7112c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0760f +0  5C040000
[3e4c0a46bc71e04] jit-backend-dump}
[3e4c0a46bc75281] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07622 +0  65040000
[3e4c0a46bc75f9a] jit-backend-dump}
[3e4c0a46bc79467] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07630 +0  73040000
[3e4c0a46bc7a148] jit-backend-dump}
[3e4c0a46bc7d5db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0763a +0  85040000
[3e4c0a46bc7e30c] jit-backend-dump}
[3e4c0a46bc8178c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07650 +0  8B040000
[3e4c0a46bc82486] jit-backend-dump}
[3e4c0a46bc85916] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0765e +0  99040000
[3e4c0a46bc865f7] jit-backend-dump}
[3e4c0a46bc89a81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07684 +0  8F040000
[3e4c0a46bc8a76c] jit-backend-dump}
[3e4c0a46bc8dc63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d076a3 +0  8C040000
[3e4c0a46bc8e94e] jit-backend-dump}
[3e4c0a46bc91f87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d076b8 +0  93040000
[3e4c0a46bc92c93] jit-backend-dump}
[3e4c0a46bc9612f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d076c5 +0  A2040000
[3e4c0a46bc96e1d] jit-backend-dump}
[3e4c0a46bc9a2a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d076d7 +0  AC040000
[3e4c0a46bc9af8b] jit-backend-dump}
[3e4c0a46bc9e4c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d076f4 +0  AB040000
[3e4c0a46bc9f192] jit-backend-dump}
[3e4c0a46bca2643] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07709 +0  B2040000
[3e4c0a46bca3337] jit-backend-dump}
[3e4c0a46bca6787] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0771a +0  BD040000
[3e4c0a46bca7477] jit-backend-dump}
[3e4c0a46bcaa8df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0773b +0  B8040000
[3e4c0a46bcab5ae] jit-backend-dump}
[3e4c0a46bcaea01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0774c +0  C3040000
[3e4c0a46bcaf6f5] jit-backend-dump}
[3e4c0a46bcb2b57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0775a +0  D1040000
[3e4c0a46bcb383e] jit-backend-dump}
[3e4c0a46bcb6f41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf06b1 +0  0B6E0100
[3e4c0a46bcb7c41] jit-backend-dump}
[3e4c0a46bcbbf21] jit-backend}
[3e4c0a46bcc0034] {jit-log-opt-bridge
# bridge out of Guard 0x2ec7028 with 134 ops
[p0, p1]
+342: guard_class(p1, 16435208, descr=<Guard0x306f3a0>) [p0, p1]
+354: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+358: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x306f400>) [p0, p1]
debug_merge_point(0, 0, '(if one?5161 2 1)')
+377: guard_class(p0, 16504944, descr=<Guard0x307ce78>) [p0, p1]
+389: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+393: guard_class(p6, 16479952, descr=<Guard0x307cec0>) [p0, p1]
+406: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+417: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x307cf08>) [p0, p1]
+426: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+430: guard_nonnull(p10, descr=<Guard0x307cf50>) [p0, p1]
+446: i12 = instance_ptr_eq(p10, ConstPtr(ptr11))
+449: guard_true(i12, descr=<Guard0x307cf98>) [p0, p1]
debug_merge_point(0, 0, '1')
+455: guard_not_invalidated(descr=<Guard0x307cfe0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+455: p13 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+459: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x306f460>) [p0, p1]
+478: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+482: i17 = int_add_ovf(i15, 1)
+486: guard_no_overflow(descr=<Guard0x307d028>) [p0, p1]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+492: i18 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+496: i19 = int_eq(i18, i17)
+499: guard_true(i19, descr=<Guard0x307d070>) [p0, p1]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(void)')
+505: p20 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+516: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x307d0b8>) [p0, p1]
+525: p22 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+529: p23 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+533: guard_class(p23, 16435208, descr=<Guard0x307d100>) [p0, p1]
+546: p25 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+550: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x306f4c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0))')
+570: guard_class(p22, 16504592, descr=<Guard0x307d148>) [p0, p1]
+583: p28 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+587: guard_class(p28, 16499664, descr=<Guard0x307d190>) [p0, p1]
+601: p30 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+606: guard_class(p30, 16479200, descr=<Guard0x307d1d8>) [p0, p1]
+619: p32 = getfield_gc_r(p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))')
+623: p33 = getfield_gc_r(p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+627: p34 = getfield_gc_r(p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+631: p35 = getfield_gc_r(p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+635: p36 = getfield_gc_r(p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+639: f37 = getfield_gc_f(p22, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+645: guard_class(p32, 16505296, descr=<Guard0x307d220>) [p0, p1]
debug_merge_point(0, 0, '(doloop5207 0)')
debug_merge_point(0, 0, '(let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 0)')
debug_merge_point(0, 0, '(+ n 1)')
+659: guard_nonnull_class(p33, ConstClass(W_Fixnum), descr=<Guard0x306f520>) [p0, p1]
+678: i40 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+682: i42 = int_add_ovf(i40, 1)
+686: guard_no_overflow(descr=<Guard0x307d268>) [p0, p1]
debug_merge_point(0, 0, '(let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))')
debug_merge_point(0, 0, '(= kk5209 AppRand56)')
+692: i44 = int_eq(0, i42)
+696: guard_false(i44, descr=<Guard0x307d2b0>) [p0, p1]
debug_merge_point(0, 0, '(if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61))))')
debug_merge_point(0, 0, '(let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))')
debug_merge_point(0, 0, '(= kk5209 CellRef(kp))')
+702: p45 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+706: guard_nonnull_class(p45, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306f580>) [p0, p1]
+724: i47 = getfield_gc_i(p45, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+728: i48 = int_eq(0, i47)
+732: guard_false(i48, descr=<Guard0x307d2f8>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void))')
debug_merge_point(0, 0, '(let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60)))')
debug_merge_point(0, 0, '(- piv)')
+738: f50 = float_sub(0.000000, f37)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk5209)')
+758: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x306f5e0>) [p0, p1]
+776: p52 = getfield_gc_r(p35, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+787: guard_nonnull_class(p52, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306f640>) [p0, p1]
+807: i54 = getfield_gc_i(p52, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+818: i56 = int_ge(i54, 0)
+822: guard_true(i56, descr=<Guard0x307d340>) [p0, p1]
+828: i57 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+832: i58 = int_lt(i54, i57)
+835: guard_true(i58, descr=<Guard0x307d388>) [p0, p1]
+841: p59 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+845: guard_class(p59, 16622984, descr=<Guard0x307d3d0>) [p0, p1]
+859: p61 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+863: p62 = getarrayitem_gc_r(p61, i54, descr=<ArrayP 8>)
+875: guard_class(p62, ConstClass(W_Vector), descr=<Guard0x307d418>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+888: i64 = getfield_gc_i(p62, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+899: i65 = int_lt(0, i64)
+903: guard_true(i65, descr=<Guard0x307d460>) [p0, p1]
+909: p66 = getfield_gc_r(p62, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+913: guard_class(p66, 16612728, descr=<Guard0x307d4a8>) [p0, p1]
+926: p68 = getfield_gc_r(p62, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+930: f69 = getarrayitem_gc_f(p68, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand58 AppRand59)')
+936: f70 = float_mul(f50, f69)
debug_merge_point(0, 0, '(matrix-set! a5002 CellRef(ip) kk5209 AppRand60)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+941: p71 = getarrayitem_gc_r(p61, i54, descr=<ArrayP 8>)
+946: guard_class(p71, ConstClass(W_Vector), descr=<Guard0x307d4f0>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+959: p73 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+963: guard_class(p73, 16612728, descr=<Guard0x307d538>) [p0, p1]
+976: i75 = getfield_gc_i(p71, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+980: i76 = int_lt(0, i75)
+984: guard_true(i76, descr=<Guard0x307d580>) [p0, p1]
+990: p77 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk5209 1)')
debug_merge_point(0, 0, '(doloop5207 AppRand61)')
debug_merge_point(0, 0, '(let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 AppRand61)')
+994: setarrayitem_gc(p77, 0, f70, descr=<ArrayF 8>)
+1000: p78 = new_with_vtable(descr=<SizeDescr 64>)
+1041: p79 = new_with_vtable(descr=<SizeDescr 16>)
+1052: setfield_gc(p79, f37, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1058: p80 = new_with_vtable(descr=<SizeDescr 40>)
+1069: setfield_gc(p80, p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1080: setfield_gc(p78, p32, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1091: setfield_gc(p78, ConstPtr(ptr81), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1102: setfield_gc(p80, ConstPtr(ptr82), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1106: setfield_gc(p80, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1110: setfield_gc(p80, p23, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1114: setfield_gc(p78, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1125: setfield_gc(p78, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1136: setfield_gc(p78, p35, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1140: setfield_gc(p78, p79, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1144: setfield_gc(p78, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1148: jump(p78, 1, p80, p25, p33, i42, p34, p45, i47, descr=TargetToken(48739680))
+1232: --end of the loop--
[3e4c0a46bd28db7] jit-log-opt-bridge}
[3e4c0a46c849be9] {jit-backend
[3e4c0a46c9b8265] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a46c9cd037] jit-backend-dump}
[3e4c0a47977605f] {jit-backend-addr
Loop 41 ((let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))) from (vector-ref AppRand1 j)) has address 0x7f6e13d084bd to 0x7f6e13d08d30 (bootstrap 0x7f6e13d08430)
       gc table: 0x7f6e13d08160
       function: 0x7f6e13d08430
         resops: 0x7f6e13d084bd
       failures: 0x7f6e13d08d30
            end: 0x7f6e13d095bd
[3e4c0a47977a89f] jit-backend-addr}
[3e4c0a4797818f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d084d4 +0  AD080000
[3e4c0a479782f02] jit-backend-dump}
[3e4c0a4797867bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d084eb +0  B2080000
[3e4c0a47978763f] jit-backend-dump}
[3e4c0a47978a944] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08501 +0  B8080000
[3e4c0a47978b693] jit-backend-dump}
[3e4c0a47978eb0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08525 +0  CC080000
[3e4c0a47978f876] jit-backend-dump}
[3e4c0a47979298e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08535 +0  D2080000
[3e4c0a479793685] jit-backend-dump}
[3e4c0a479796739] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08549 +0  D4080000
[3e4c0a479797430] jit-backend-dump}
[3e4c0a47979a4da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0855f +0  D4080000
[3e4c0a47979b1ce] jit-backend-dump}
[3e4c0a47979e285] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0856d +0  E2080000
[3e4c0a47979ef54] jit-backend-dump}
[3e4c0a4797a1f69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0857a +0  F1080000
[3e4c0a4797a2c2c] jit-backend-dump}
[3e4c0a4797a5bdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0858a +0  FD080000
[3e4c0a4797a688c] jit-backend-dump}
[3e4c0a4797a9863] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d085aa +0  F9080000
[3e4c0a4797aa51a] jit-backend-dump}
[3e4c0a4797ad4b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d085c5 +0  FA080000
[3e4c0a4797ae162] jit-backend-dump}
[3e4c0a4797b10e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d085d3 +0  08090000
[3e4c0a4797b1d94] jit-backend-dump}
[3e4c0a4797b4dd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d085e0 +0  17090000
[3e4c0a4797b5a7e] jit-backend-dump}
[3e4c0a4797b8a4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d085f1 +0  22090000
[3e4c0a4797b971e] jit-backend-dump}
[3e4c0a4797bc742] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08607 +0  28090000
[3e4c0a4797bd3f9] jit-backend-dump}
[3e4c0a4797c0387] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08611 +0  3A090000
[3e4c0a4797c103e] jit-backend-dump}
[3e4c0a4797c3fd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0861e +0  49090000
[3e4c0a4797c4c7f] jit-backend-dump}
[3e4c0a4797c7c14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0862e +0  55090000
[3e4c0a4797c88d0] jit-backend-dump}
[3e4c0a4797cb87d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08653 +0  4C090000
[3e4c0a4797cc53a] jit-backend-dump}
[3e4c0a4797cf517] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08671 +0  4A090000
[3e4c0a4797d01d4] jit-backend-dump}
[3e4c0a4797d314a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08680 +0  57090000
[3e4c0a4797d3dfd] jit-backend-dump}
[3e4c0a4797d6d98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08690 +0  63090000
[3e4c0a4797d7a76] jit-backend-dump}
[3e4c0a4797daa75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d086a4 +0  6B090000
[3e4c0a4797db741] jit-backend-dump}
[3e4c0a4797de719] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d086b8 +0  73090000
[3e4c0a4797df3df] jit-backend-dump}
[3e4c0a4797e2333] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d086c8 +0  7F090000
[3e4c0a4797e2fe0] jit-backend-dump}
[3e4c0a4797e5f59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d086df +0  84090000
[3e4c0a4797e6c0c] jit-backend-dump}
[3e4c0a4797e9bc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d086ed +0  92090000
[3e4c0a4797ea879] jit-backend-dump}
[3e4c0a4797ed80a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d086f9 +0  A2090000
[3e4c0a4797ee4b4] jit-backend-dump}
[3e4c0a4797f146d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08706 +0  B1090000
[3e4c0a4797f211e] jit-backend-dump}
[3e4c0a4797f510b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0871c +0  B7090000
[3e4c0a4797f5db8] jit-backend-dump}
[3e4c0a4797f8e32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08729 +0  C6090000
[3e4c0a4797f9b16] jit-backend-dump}
[3e4c0a4797fcaeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0873d +0  CE090000
[3e4c0a4797fd7ba] jit-backend-dump}
[3e4c0a4798007a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08752 +0  D5090000
[3e4c0a47980147f] jit-backend-dump}
[3e4c0a4798044ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08764 +0  DF090000
[3e4c0a47980516f] jit-backend-dump}
[3e4c0a479808137] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08778 +0  E7090000
[3e4c0a479808e0c] jit-backend-dump}
[3e4c0a47980be15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08793 +0  E8090000
[3e4c0a47980cad8] jit-backend-dump}
[3e4c0a47980faec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d087a0 +0  F7090000
[3e4c0a4798107af] jit-backend-dump}
[3e4c0a479813810] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d087c5 +0  EE090000
[3e4c0a4798144dc] jit-backend-dump}
[3e4c0a4798174f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d087d9 +0  F6090000
[3e4c0a47981819e] jit-backend-dump}
[3e4c0a47981b111] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d087ed +0  FE090000
[3e4c0a47981bdda] jit-backend-dump}
[3e4c0a47981edc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d087ff +0  080A0000
[3e4c0a47981fab8] jit-backend-dump}
[3e4c0a479822a46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0880c +0  170A0000
[3e4c0a4798236ff] jit-backend-dump}
[3e4c0a4798266d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08827 +0  180A0000
[3e4c0a479827381] jit-backend-dump}
[3e4c0a47982a2f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08837 +0  240A0000
[3e4c0a47982afa4] jit-backend-dump}
[3e4c0a47982def5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08843 +0  340A0000
[3e4c0a47982eba6] jit-backend-dump}
[3e4c0a479831b12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0885a +0  390A0000
[3e4c0a4798327cf] jit-backend-dump}
[3e4c0a4798357b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0887f +0  300A0000
[3e4c0a479836460] jit-backend-dump}
[3e4c0a4798393ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08893 +0  380A0000
[3e4c0a47983a0ab] jit-backend-dump}
[3e4c0a47983d04e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d088a9 +0  3E0A0000
[3e4c0a47983dcfc] jit-backend-dump}
[3e4c0a479840d32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d088c3 +0  400A0000
[3e4c0a479841a7f] jit-backend-dump}
[3e4c0a479844b3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d088e4 +0  3B0A0000
[3e4c0a47984580b] jit-backend-dump}
[3e4c0a4798487a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d088f6 +0  450A0000
[3e4c0a47984945f] jit-backend-dump}
[3e4c0a47984c436] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0890a +0  4D0A0000
[3e4c0a47984d0ed] jit-backend-dump}
[3e4c0a479850081] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0891b +0  580A0000
[3e4c0a479850d38] jit-backend-dump}
[3e4c0a479853cde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08937 +0  580A0000
[3e4c0a479854995] jit-backend-dump}
[3e4c0a47985790a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08941 +0  6A0A0000
[3e4c0a4798585e0] jit-backend-dump}
[3e4c0a47985b574] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08955 +0  720A0000
[3e4c0a47985c234] jit-backend-dump}
[3e4c0a47985f224] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08966 +0  7D0A0000
[3e4c0a47985feda] jit-backend-dump}
[3e4c0a479862ee6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0898c +0  730A0000
[3e4c0a479863b93] jit-backend-dump}
[3e4c0a479866c07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d089b4 +0  670A0000
[3e4c0a4798678c3] jit-backend-dump}
[3e4c0a47986a8fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d089c6 +0  6B0A0000
[3e4c0a47986b5a7] jit-backend-dump}
[3e4c0a47986e597] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d089db +0  720A0000
[3e4c0a47986f248] jit-backend-dump}
[3e4c0a47987228d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d089e5 +0  840A0000
[3e4c0a479872f5c] jit-backend-dump}
[3e4c0a479875f86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d089ef +0  960A0000
[3e4c0a479876c3d] jit-backend-dump}
[3e4c0a479879be4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d089ff +0  A20A0000
[3e4c0a47987a88b] jit-backend-dump}
[3e4c0a47987d807] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08a13 +0  AA0A0000
[3e4c0a47987e4bd] jit-backend-dump}
[3e4c0a4798814a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08a23 +0  B60A0000
[3e4c0a47988218c] jit-backend-dump}
[3e4c0a479885166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08a50 +0  A50A0000
[3e4c0a479885e17] jit-backend-dump}
[3e4c0a479888eb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08a5e +0  B30A0000
[3e4c0a479889b5c] jit-backend-dump}
[3e4c0a47988cafd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08a68 +0  C50A0000
[3e4c0a47988d7b0] jit-backend-dump}
[3e4c0a479890729] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08a72 +0  D70A0000
[3e4c0a4798913d3] jit-backend-dump}
[3e4c0a4798943a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08a9f +0  C60A0000
[3e4c0a47989506e] jit-backend-dump}
[3e4c0a47989801a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08ab4 +0  CD0A0000
[3e4c0a479898ccb] jit-backend-dump}
[3e4c0a47989bcf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08ac5 +0  D80A0000
[3e4c0a47989c9b2] jit-backend-dump}
[3e4c0a4798a07e3] jit-backend}
[3e4c0a4798a44a5] {jit-log-opt-loop
# Loop 41 ((let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))) from (vector-ref AppRand1 j)) : entry bridge with 348 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))) from (vector-ref AppRand1 j)')
+869: guard_class(p0, 16504592, descr=<Guard0x306f940>) [p1, p0]
+888: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+892: guard_class(p1, 16435208, descr=<Guard0x307d658>) [p1, p0]
+911: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+915: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x306f9a0>) [p1, p0]
debug_merge_point(0, 0, '(- AppRand19)')
+933: guard_not_invalidated(descr=<Guard0x307d6a0>) [p1, p0]
+933: f7 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+938: f9 = float_sub(0.000000, f7)
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+957: guard_class(p3, 16504944, descr=<Guard0x307d6e8>) [p1, p0]
+969: p11 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+973: guard_class(p11, 16480704, descr=<Guard0x307d730>) [p1, p0]
+985: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+996: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x307d778>) [p1, p0]
+1005: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+1009: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x306fa00>) [p1, p0]
+1027: i17 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1031: i19 = int_ge(i17, 0)
+1035: guard_true(i19, descr=<Guard0x307d7c0>) [p1, p0]
+1041: i20 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1045: i21 = int_lt(i17, i20)
+1048: guard_true(i21, descr=<Guard0x307d808>) [p1, p0]
+1054: p22 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1058: guard_class(p22, 16623792, descr=<Guard0x307d850>) [p1, p0]
+1070: p24 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1074: i25 = getarrayitem_gc_i(p24, i17, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand21 CellRef(kp))')
+1079: p26 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+1083: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x306fa60>) [p1, p0]
+1102: p28 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+1106: p29 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1110: guard_nonnull_class(p29, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306fac0>) [p1, p0]
+1129: i31 = getfield_gc_i(p29, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1133: p32 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1133: i34 = int_ge(i25, 0)
+1137: guard_true(i34, descr=<Guard0x307d898>) [p1, p0]
+1143: i35 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1147: i36 = int_lt(i25, i35)
+1150: guard_true(i36, descr=<Guard0x307d8e0>) [p1, p0]
+1156: p37 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1160: guard_class(p37, 16622984, descr=<Guard0x307d928>) [p1, p0]
+1173: p39 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1177: p40 = getarrayitem_gc_r(p39, i25, descr=<ArrayP 8>)
+1182: guard_class(p40, ConstClass(W_Vector), descr=<Guard0x307d970>) [p1, p0]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1195: i43 = int_ge(i31, 0)
+1199: guard_true(i43, descr=<Guard0x307d9b8>) [p1, p0]
+1205: i44 = getfield_gc_i(p40, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1209: i45 = int_lt(i31, i44)
+1212: guard_true(i45, descr=<Guard0x307da00>) [p1, p0]
+1218: p46 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1222: guard_class(p46, 16612728, descr=<Guard0x307da48>) [p1, p0]
+1234: p48 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1238: f49 = getarrayitem_gc_f(p48, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(/ AppRand20 AppRand22)')
+1244: i51 = float_eq(f49, 0.000000)
+1265: guard_false(i51, descr=<Guard0x307da90>) [p1, p0]
+1271: f52 = float_truediv(f9, f49)
debug_merge_point(0, 0, '(let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))')
debug_merge_point(0, 0, '(< q CellRef(q1))')
+1275: p53 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1279: p54 = getfield_gc_r(p53, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1283: guard_nonnull_class(p54, ConstClass(W_CellFloatStrategy), descr=<Guard0x306fb20>) [p1, p0]
+1301: f56 = getfield_gc_f(p54, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1306: i57 = float_lt(f52, f56)
+1310: guard_false(i57, descr=<Guard0x307dad8>) [p1, p0]
debug_merge_point(0, 0, '(if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))')
debug_merge_point(0, 0, '(let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))')
debug_merge_point(0, 0, '(= q CellRef(q1))')
+1316: i58 = float_eq(f52, f56)
+1326: guard_false(i58, descr=<Guard0x307db20>) [p1, p0]
debug_merge_point(0, 0, '(if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))')
debug_merge_point(0, 0, '(void)')
+1332: p59 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1343: guard_value(p59, ConstPtr(ptr60), descr=<Guard0x307db68>) [p1, p0]
+1352: p61 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1356: p62 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+1360: guard_class(p61, 16504944, descr=<Guard0x307dbb0>) [p1, p0]
+1372: p64 = getfield_gc_r(p61, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1376: guard_class(p62, 16435208, descr=<Guard0x307dbf8>) [p1, p0]
+1388: p66 = getfield_gc_r(p62, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1392: guard_nonnull_class(p66, ConstClass(ForwardLink), descr=<Guard0x306fb80>) [p1, p0]
debug_merge_point(0, 0, '(+ i5080 1)')
+1411: i68 = getfield_gc_i(p61, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1415: i70 = int_add_ovf(i68, 1)
+1419: guard_no_overflow(descr=<Guard0x307dc40>) [p1, p0]
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
+1425: guard_class(p64, 16480704, descr=<Guard0x307dc88>) [p1, p0]
+1437: p72 = getfield_gc_r(p64, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1441: guard_value(p72, ConstPtr(ptr73), descr=<Guard0x307dcd0>) [p1, p0]
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+1450: p74 = getfield_gc_r(p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+1454: guard_nonnull_class(p74, ConstClass(W_Fixnum), descr=<Guard0x306fbe0>) [p1, p0]
+1472: i76 = getfield_gc_i(p74, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1476: i77 = int_eq(i70, i76)
+1479: guard_true(i77, descr=<Guard0x307dd18>) [p1, p0]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(void)')
+1485: p78 = getfield_gc_r(p62, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1496: guard_value(p78, ConstPtr(ptr79), descr=<Guard0x307dd60>) [p1, p0]
+1505: p80 = getfield_gc_r(p62, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1509: p81 = getfield_gc_r(p62, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)) from (void)')
+1513: guard_class(p80, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x307dda8>) [p1, p0]
+1526: p83 = getfield_gc_r(p80, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1530: i84 = arraylen_gc(p83, descr=<ArrayP 8>)
+1534: i86 = int_eq(20, i84)
+1538: guard_false(i86, descr=<Guard0x307ddf0>) [p1, p0]
+1544: p87 = getfield_gc_r(p80, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1555: guard_value(p87, ConstPtr(ptr88), descr=<Guard0x307de38>) [p1, p0]
+1564: p90 = getarrayitem_gc_pure_r(p83, 8, descr=<ArrayP 8>)
+1568: p91 = getfield_gc_r(p90, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1572: guard_nonnull_class(p91, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306fc40>) [p1, p0]
+1591: i93 = getfield_gc_i(p91, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1595: i94 = int_is_zero(i93)
+1598: guard_false(i94, descr=<Guard0x307de80>) [p1, p0]
debug_merge_point(0, 0, '(set! one? #t)')
+1604: p96 = getarrayitem_gc_pure_r(p83, 0, descr=<ArrayP 8>)
+1625: setfield_gc(p96, ConstPtr(ptr97), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1629: guard_class(p81, 16435208, descr=<Guard0x306fca0>) [p81, p80]
+1641: p99 = getfield_gc_r(p81, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1652: guard_value(p99, ConstPtr(ptr100), descr=<Guard0x307dec8>) [p81, p80]
+1661: p101 = getfield_gc_r(p81, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1665: p102 = getfield_gc_r(p81, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)) from (void)')
+1669: guard_class(p101, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x307df10>) [p81, p80]
+1681: p104 = getfield_gc_r(p101, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1685: i105 = arraylen_gc(p104, descr=<ArrayP 8>)
+1689: i107 = int_eq(20, i105)
+1693: guard_false(i107, descr=<Guard0x307df58>) [p81, p80]
+1699: p108 = getfield_gc_r(p101, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1703: guard_value(p108, ConstPtr(ptr109), descr=<Guard0x307dfa0>) [p81, p80]
+1712: p111 = getarrayitem_gc_pure_r(p104, 0, descr=<ArrayP 8>)
+1716: p112 = getfield_gc_r(p111, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1720: guard_nonnull_class(p112, ConstClass(W_Bool), descr=<Guard0x306fd00>) [p81, p80]
+1746: i115 = instance_ptr_eq(p112, ConstPtr(ptr114))
+1749: guard_false(i115, descr=<Guard0x30a8020>) [p81, p80]
debug_merge_point(0, 0, '(begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303))')
+1755: guard_class(p102, 16435208, descr=<Guard0x30a8068>) [p81, p80]
+1767: p117 = getfield_gc_r(p102, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1771: guard_nonnull_class(p117, ConstClass(ForwardLink), descr=<Guard0x306fd60>) [p81, p80]
debug_merge_point(0, 0, '(set! one? #f)')
debug_merge_point(0, 0, '(simp3 #t)')
+1790: p120 = getarrayitem_gc_pure_r(p104, 9, descr=<ArrayP 8>)
+1804: setfield_gc(p111, ConstPtr(ptr121), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1808: guard_nonnull_class(p120, 16479200, descr=<Guard0x306fdc0>) [p101, p120, p102, p117]
+1827: p123 = getfield_gc_r(p120, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1838: guard_value(p123, ConstPtr(ptr124), descr=<Guard0x30a80b0>) [p101, p120, p102, p117]
+1847: p125 = getfield_gc_r(p101, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))))')
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) CellRef(kp))')
+1847: p126 = getfield_gc_r(p120, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1851: guard_nonnull_class(p126, ConstClass(W_Vector), descr=<Guard0x306fe20>) [p101, p120, p102, p117]
+1869: p128 = getfield_gc_r(p120, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1873: p129 = getfield_gc_r(p128, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1877: guard_nonnull_class(p129, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306fe80>) [p101, p120, p102, p117]
+1895: i131 = getfield_gc_i(p129, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1899: p132 = getfield_gc_r(p120, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1903: p133 = getfield_gc_r(p132, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1908: guard_nonnull_class(p133, ConstClass(W_CellIntegerStrategy), descr=<Guard0x306fee0>) [p101, p120, p102, p117]
+1928: i135 = getfield_gc_i(p133, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1932: p136 = getfield_gc_r(p120, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1936: i138 = int_ge(i131, 0)
+1940: guard_true(i138, descr=<Guard0x30a80f8>) [p101, p120, p102, p117]
+1946: i139 = getfield_gc_i(p126, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1957: i140 = int_lt(i131, i139)
+1960: guard_true(i140, descr=<Guard0x30a8140>) [p101, p120, p102, p117]
+1966: p141 = getfield_gc_r(p126, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1970: guard_class(p141, 16622984, descr=<Guard0x30a8188>) [p101, p120, p102, p117]
+1983: p143 = getfield_gc_r(p126, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1987: p144 = getarrayitem_gc_r(p143, i131, descr=<ArrayP 8>)
+1999: guard_class(p144, ConstClass(W_Vector), descr=<Guard0x30a81d0>) [p101, p120, p102, p117]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2011: i147 = int_ge(i135, 0)
+2015: guard_true(i147, descr=<Guard0x30a8218>) [p101, p120, p102, p117]
+2021: i148 = getfield_gc_i(p144, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2032: i149 = int_lt(i135, i148)
+2035: guard_true(i149, descr=<Guard0x30a8260>) [p101, p120, p102, p117]
+2041: p150 = getfield_gc_r(p144, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2045: guard_class(p150, 16612728, descr=<Guard0x30a82a8>) [p101, p120, p102, p117]
+2058: p152 = getfield_gc_r(p144, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2062: f153 = getarrayitem_gc_f(p152, i135, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))')
debug_merge_point(0, 0, '(/ AppRand41)')
+2069: i155 = float_eq(f153, 0.000000)
+2090: guard_false(i155, descr=<Guard0x30a82f0>) [p101, p120, p102, p117]
+2096: f157 = float_truediv(1.000000, f153)
debug_merge_point(0, 0, '(let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))')
debug_merge_point(0, 0, '(lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))')
+2115: p158 = getfield_gc_r(p120, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2119: p159 = getfield_gc_r(p120, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2123: guard_class(p136, 16505296, descr=<Guard0x30a8338>) [p101, p120, p102, p117]
debug_merge_point(0, 0, '(doloop5167 0)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 0)')
debug_merge_point(0, 0, '(if one?5161 2 1)')
debug_merge_point(0, 0, '2')
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+2136: guard_nonnull_class(p159, ConstClass(W_Fixnum), descr=<Guard0x306ff40>) [p101, p120, p102, p117]
+2154: i162 = getfield_gc_i(p159, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2165: i164 = int_add_ovf(i162, 2)
+2169: guard_no_overflow(descr=<Guard0x30a8380>) [p101, p120, p102, p117]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+2175: i166 = int_eq(0, i164)
+2179: guard_false(i166, descr=<Guard0x30a83c8>) [p101, p120, p102, p117]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+2185: i167 = int_eq(0, i131)
+2189: guard_false(i167, descr=<Guard0x30a8410>) [p101, p120, p102, p117]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2195: p168 = getarrayitem_gc_r(p143, 0, descr=<ArrayP 8>)
+2199: guard_class(p168, ConstClass(W_Vector), descr=<Guard0x30a8458>) [p101, p120, p102, p117]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2211: i170 = getfield_gc_i(p168, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2222: i171 = int_lt(i135, i170)
+2225: guard_true(i171, descr=<Guard0x30a84a0>) [p101, p120, p102, p117]
+2231: p172 = getfield_gc_r(p168, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2235: guard_class(p172, 16612728, descr=<Guard0x30a84e8>) [p101, p120, p102, p117]
+2247: p174 = getfield_gc_r(p168, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2251: f175 = getarrayitem_gc_f(p174, i135, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+2258: f176 = float_mul(f157, f175)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+2266: setarrayitem_gc(p174, i135, f176, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+2273: guard_nonnull_class(p158, ConstClass(W_Fixnum), descr=<Guard0x306ffa0>) [p158, p101, p120, f157, p159, p126, p128, p132, p136, p102, p117]
+2292: i178 = getfield_gc_i(p158, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2296: i180 = int_add_ovf(i178, 1)
+2300: guard_no_overflow(descr=<Guard0x30a8530>) [p158, p101, p120, f157, p159, p126, p128, p132, p136, p102, p117]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+2306: i182 = int_eq(0, i180)
+2310: guard_false(i182, descr=<Guard0x30a8578>) [p158, p101, p120, f157, p159, p126, p128, p132, p136, p102, p117]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+2316: i183 = int_eq(0, i135)
+2320: guard_false(i183, descr=<Guard0x30a85c0>) [p158, p101, p120, f157, p159, p126, p128, p132, p136, p102, p117]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2326: f184 = getarrayitem_gc_f(p174, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2331: p185 = getarrayitem_gc_r(p143, i131, descr=<ArrayP 8>)
+2357: guard_class(p185, ConstClass(W_Vector), descr=<Guard0x30a8608>) [p158, p101, p120, f157, p159, p126, p128, p132, p136, p102, p117]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2371: i187 = getfield_gc_i(p185, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2382: i188 = int_lt(0, i187)
+2386: guard_true(i188, descr=<Guard0x30a8650>) [p158, p101, p120, f157, p159, p126, p128, p132, p136, p102, p117]
+2392: p189 = getfield_gc_r(p185, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2396: guard_class(p189, 16612728, descr=<Guard0x30a8698>) [p158, p101, p120, f157, p159, p126, p128, p132, p136, p102, p117]
+2409: p191 = getfield_gc_r(p185, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2413: f192 = getarrayitem_gc_f(p191, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2419: f193 = getarrayitem_gc_f(p174, i135, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+2433: f194 = float_mul(f192, f193)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+2437: f195 = float_sub(f184, f194)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+2441: setarrayitem_gc(p174, 0, f195, descr=<ArrayF 8>)
+2446: p196 = new_with_vtable(descr=<SizeDescr 64>)
+2500: p197 = new_with_vtable(descr=<SizeDescr 40>)
+2511: p198 = new_with_vtable(descr=<SizeDescr 24>)
+2522: p199 = new_with_vtable(descr=<SizeDescr 80>)
+2540: setfield_gc(p199, p136, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2558: setfield_gc(p199, ConstPtr(ptr200), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2562: setfield_gc(p199, p158, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+2573: setfield_gc(p199, p132, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+2591: setfield_gc(p199, p128, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+2602: setfield_gc(p199, p159, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+2606: setfield_gc(p199, p126, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+2617: setfield_gc(p199, ConstPtr(ptr201), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+2621: p202 = new_with_vtable(descr=<SizeDescr 16>)
+2632: setfield_gc(p202, f157, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+2638: setfield_gc(p199, p202, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+2642: setfield_gc(p198, p199, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2646: setfield_gc(p198, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+2654: p203 = new_with_vtable(descr=<SizeDescr 40>)
+2665: setfield_gc(p203, p117, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2676: p204 = new_with_vtable(descr=<SizeDescr 24>)
+2694: p205 = new_with_vtable(descr=<SizeDescr 24>)
+2712: setfield_gc(p205, p120, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2716: setfield_gc(p205, ConstPtr(ptr206), descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2720: setfield_gc(p204, p205, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2724: setfield_gc(p204, f157, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+2729: setfield_gc(p203, p204, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2733: p207 = new_with_vtable(descr=<SizeDescr 40>)
+2744: setfield_gc(p207, p117, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2748: setfield_gc(p207, p101, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2752: setfield_gc(p207, p102, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2770: setfield_gc(p207, ConstPtr(ptr208), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2774: setfield_gc(p203, p207, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2785: setfield_gc(p203, ConstPtr(ptr209), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2789: i210 = arraylen_gc(p143, descr=<ArrayP 8>)
+2789: setfield_gc(p196, p136, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2800: setfield_gc(p197, p117, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2818: setfield_gc(p196, ConstPtr(ptr211), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2829: setfield_gc(p197, ConstPtr(ptr212), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2833: setfield_gc(p197, p198, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2837: setfield_gc(p197, p203, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2841: setfield_gc(p196, p126, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2845: setfield_gc(p196, p132, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2849: setfield_gc(p196, p158, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2860: setfield_gc(p196, ConstPtr(ptr213), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2864: setfield_gc(p196, p128, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2868: jump(p196, 1, p197, p117, p158, i180, p132, p133, i135, ConstPtr(ptr213), p126, p143, 0, p128, p129, i131, descr=TargetToken(47968112))
+3024: --end of the loop--
[3e4c0a4799bca2f] jit-log-opt-loop}
[3e4c0a479e2adb1] {jit-backend
[3e4c0a479f1b4d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a479f28cfb] jit-backend-dump}
[3e4c0a479f33c7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09954 +0  2A000000
[3e4c0a479f3512d] jit-backend-dump}
[3e4c0a479f393ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09e85 +0  2A000000
[3e4c0a479f3a33a] jit-backend-dump}
[3e4c0a479f3d5e6] {jit-backend-addr
bridge out of Guard 0x2fab9b8 has address 0x7f6e13d09950 to 0x7f6e13d09e80
       gc table: 0x7f6e13d09800
    jump target: 0x7f6e13d09950
         resops: 0x7f6e13d0995e
       failures: 0x7f6e13d09e80
            end: 0x7f6e13d0a25f
[3e4c0a479f3fc44] jit-backend-addr}
[3e4c0a479f43687] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09976 +0  65050000
[3e4c0a479f44536] jit-backend-dump}
[3e4c0a479f4778d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09992 +0  65050000
[3e4c0a479f484bb] jit-backend-dump}
[3e4c0a479f4b6a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0999f +0  74050000
[3e4c0a479f4c398] jit-backend-dump}
[3e4c0a479f4f57d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d099b3 +0  7C050000
[3e4c0a479f502ab] jit-backend-dump}
[3e4c0a479f53567] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d099c9 +0  82050000
[3e4c0a479f542c3] jit-backend-dump}
[3e4c0a479f574e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d099e1 +0  86050000
[3e4c0a479f58201] jit-backend-dump}
[3e4c0a479f5b38e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d099ee +0  95050000
[3e4c0a479f5c072] jit-backend-dump}
[3e4c0a479f5f274] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09a00 +0  9F050000
[3e4c0a479f5ff77] jit-backend-dump}
[3e4c0a479f63040] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09a14 +0  A7050000
[3e4c0a479f63d58] jit-backend-dump}
[3e4c0a479f66f1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09a2f +0  A8050000
[3e4c0a479f67c3b] jit-backend-dump}
[3e4c0a479f6acec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09a4f +0  A4050000
[3e4c0a479f6b9ec] jit-backend-dump}
[3e4c0a479f6eb1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09a60 +0  AF050000
[3e4c0a479f6f82c] jit-backend-dump}
[3e4c0a479f728f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09a77 +0  B4050000
[3e4c0a479f735ef] jit-backend-dump}
[3e4c0a479f766d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09a8b +0  BC050000
[3e4c0a479f773cb] jit-backend-dump}
[3e4c0a479f7a413] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09aa6 +0  BD050000
[3e4c0a479f7b10d] jit-backend-dump}
[3e4c0a479f7e260] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09ad8 +0  A7050000
[3e4c0a479f7ef38] jit-backend-dump}
[3e4c0a479f81f4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09aea +0  B1050000
[3e4c0a479f82c41] jit-backend-dump}
[3e4c0a479f85d16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09af8 +0  BF050000
[3e4c0a479f86a0a] jit-backend-dump}
[3e4c0a479f89a5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09b0a +0  C9050000
[3e4c0a479f8a73d] jit-backend-dump}
[3e4c0a479f8d7ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09b1f +0  D0050000
[3e4c0a479f8e4e8] jit-backend-dump}
[3e4c0a479f914cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09b36 +0  D5050000
[3e4c0a479f921cc] jit-backend-dump}
[3e4c0a479f95295] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09b57 +0  D0050000
[3e4c0a479f95f92] jit-backend-dump}
[3e4c0a479f98f60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09b82 +0  C1050000
[3e4c0a479f99c54] jit-backend-dump}
[3e4c0a479f9cd63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09b97 +0  C8050000
[3e4c0a479f9da57] jit-backend-dump}
[3e4c0a479fa0aa9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09bb9 +0  C2050000
[3e4c0a479fa17be] jit-backend-dump}
[3e4c0a479fa48e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09bc9 +0  CE050000
[3e4c0a479fa55e0] jit-backend-dump}
[3e4c0a479fa8614] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09be5 +0  CE050000
[3e4c0a479fa9317] jit-backend-dump}
[3e4c0a479fac3e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09bef +0  E0050000
[3e4c0a479fad0c1] jit-backend-dump}
[3e4c0a479fb0135] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09bfc +0  EF050000
[3e4c0a479fb0e41] jit-backend-dump}
[3e4c0a479fb3eec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09c0c +0  FB050000
[3e4c0a479fb4bdc] jit-backend-dump}
[3e4c0a479fb7be5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09dd6 +0  4D040000
[3e4c0a479fb8903] jit-backend-dump}
[3e4c0a479fbbb76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09ddf +0  60040000
[3e4c0a479fbc870] jit-backend-dump}
[3e4c0a479fbfb4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d018a0 +0  AC800000
[3e4c0a479fc0822] jit-backend-dump}
[3e4c0a479fc483d] jit-backend}
[3e4c0a479fc8393] {jit-log-opt-bridge
# bridge out of Guard 0x2fab9b8 with 146 ops
[i0, p1, p2, p3]
+358: guard_not_invalidated(descr=<Guard0x30ae020>) [i0, p1, p2, p3]
+358: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+369: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x30a86e0>) [i0, p1, p2, p3]
+378: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+382: p7 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+387: guard_nonnull_class(p7, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30ae080>) [i0, p1, p2, p3]
+406: i9 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+410: i10 = int_ge(i0, i9)
+413: guard_true(i10, descr=<Guard0x30a8728>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(void)')
+419: p11 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+430: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x30a8770>) [i0, p1, p2, p3]
+439: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+443: p14 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+447: guard_class(p14, 16435208, descr=<Guard0x30a87b8>) [i0, p1, p2, p3]
+461: p16 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+466: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x30ae0e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) from (void)')
debug_merge_point(0, 0, '(<= CellRef(bmax) *epsilon*)')
+485: guard_class(p13, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x30a8800>) [i0, p1, p2, p3]
+498: p19 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+502: i20 = arraylen_gc(p19, descr=<ArrayP 8>)
+506: i22 = int_eq(20, i20)
+510: guard_false(i22, descr=<Guard0x30a8848>) [i0, p1, p2, p3]
+516: p23 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+527: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x30a8890>) [i0, p1, p2, p3]
+536: p26 = getarrayitem_gc_pure_r(p19, 3, descr=<ArrayP 8>)
+540: p27 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+544: guard_nonnull_class(p27, ConstClass(W_CellFloatStrategy), descr=<Guard0x30ae140>) [i0, p1, p2, p3]
+563: f29 = getfield_gc_f(p27, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+569: p31 = getarrayitem_gc_pure_r(p19, 15, descr=<ArrayP 8>)
+576: guard_nonnull_class(p31, ConstClass(W_Flonum), descr=<Guard0x30ae1a0>) [i0, p1, p2, p3]
+595: f33 = getfield_gc_f(p31, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+601: i34 = float_le(f29, f33)
+606: guard_false(i34, descr=<Guard0x30a88d8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))')
debug_merge_point(0, 0, '(begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)))')
debug_merge_point(0, 0, '(simp2)')
+612: p36 = getarrayitem_gc_pure_r(p19, 10, descr=<ArrayP 8>)
+616: guard_nonnull_class(p36, 16479952, descr=<Guard0x30ae200>) [i0, p1, p2, p3]
+635: p38 = getfield_gc_r(p36, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+646: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x30a8920>) [i0, p1, p2, p3]
+655: p40 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(set! ip 0)')
+655: p41 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+659: p42 = getfield_gc_r(p41, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+663: guard_nonnull_class(p42, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30ae260>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([q1 0.0][flag? #f]) (let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0)))')
debug_merge_point(0, 0, '0.0')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0))')
+682: p44 = getfield_gc_r(p36, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))')
+686: p45 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+690: p46 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+694: p47 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+698: p48 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+702: p49 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+706: p50 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+710: setfield_gc(p42, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+718: guard_class(p44, 16505296, descr=<Guard0x30ae2c0>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
debug_merge_point(0, 0, '(doloop5078 0)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 0)')
debug_merge_point(0, 0, '(= i5080 m)')
+732: guard_nonnull_class(p47, ConstClass(W_Fixnum), descr=<Guard0x30ae320>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+750: i55 = getfield_gc_i(p47, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+754: i57 = int_eq(0, i55)
+758: guard_false(i57, descr=<Guard0x30a8968>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
debug_merge_point(0, 0, '(let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+764: guard_nonnull_class(p50, ConstClass(W_Vector), descr=<Guard0x30ae380>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+782: i59 = getfield_gc_i(p50, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+793: i60 = int_lt(0, i59)
+797: guard_true(i60, descr=<Guard0x30a89b0>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+803: p61 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+814: guard_class(p61, 16623792, descr=<Guard0x30a89f8>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+826: p63 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+830: i64 = getarrayitem_gc_i(p63, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand32 CellRef(kp))')
+841: guard_nonnull_class(p49, ConstClass(W_Vector), descr=<Guard0x30ae3e0>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+859: p66 = getfield_gc_r(p46, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+884: guard_nonnull_class(p66, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30ae440>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+902: i68 = getfield_gc_i(p66, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+913: i70 = int_ge(i64, 0)
+917: guard_true(i70, descr=<Guard0x30a8a40>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+923: i71 = getfield_gc_i(p49, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+948: i72 = int_lt(i64, i71)
+951: guard_true(i72, descr=<Guard0x30a8a88>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+957: p73 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+961: guard_class(p73, 16622984, descr=<Guard0x30a8ad0>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+973: p75 = getfield_gc_r(p49, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+977: p76 = getarrayitem_gc_r(p75, i64, descr=<ArrayP 8>)
+989: guard_class(p76, ConstClass(W_Vector), descr=<Guard0x30a8b18>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1001: i79 = int_ge(i68, 0)
+1005: guard_true(i79, descr=<Guard0x30a8b60>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+1011: i80 = getfield_gc_i(p76, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1015: i81 = int_lt(i68, i80)
+1018: guard_true(i81, descr=<Guard0x30a8ba8>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+1024: p82 = getfield_gc_r(p76, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1028: guard_class(p82, 16612728, descr=<Guard0x30a8bf0>) [p44, p50, p49, p48, p47, p41, p46, p45, p36, p14, p13, p16, None, None, None, None]
+1040: p84 = getfield_gc_r(p76, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1044: f85 = getarrayitem_gc_f(p84, i68, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1051: p86 = new_with_vtable(descr=<SizeDescr 96>)
+1102: p87 = new_with_vtable(descr=<SizeDescr 16>)
+1120: setfield_gc(p87, ConstPtr(ptr88), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1124: p89 = new_with_vtable(descr=<SizeDescr 16>)
+1135: p90 = new_with_vtable(descr=<SizeDescr 16>)
+1153: setfield_gc(p90, 0.000000, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1161: setfield_gc(p89, p90, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1165: p92 = new_with_vtable(descr=<SizeDescr 40>)
+1176: p93 = new_with_vtable(descr=<SizeDescr 40>)
+1187: setfield_gc(p93, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1205: setfield_gc(p93, p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1209: setfield_gc(p93, p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1220: setfield_gc(p93, ConstPtr(ptr94), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1344: p95 = getfield_gc_r(p87, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1362: setfield_gc(p86, ConstPtr(ptr96), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1387: setfield_gc(p92, ConstPtr(ptr97), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1391: setfield_gc(p92, p13, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1395: setfield_gc(p92, p93, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1399: setfield_gc(p92, p16, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1403: setfield_gc(p86, p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1407: setfield_gc(p86, p87, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_0 24 pure>)
+1418: setfield_gc(p86, p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_1 32 pure>)
+1422: setfield_gc(p86, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+1433: setfield_gc(p86, p41, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_3 48 pure>)
+1437: setfield_gc(p86, p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+1448: setfield_gc(p86, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+1452: setfield_gc(p86, p89, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1456: setfield_gc(p86, p49, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+1467: setfield_gc(p86, p50, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+1478: guard_nonnull_class(p95, ConstClass(W_Bool), descr=<Guard0x30ae4a0>) [p92, p86, f85, None, None, None, None, None, None, None, None, None, None, p16, None, None, None, None]
+1498: i100 = instance_ptr_eq(p95, ConstPtr(ptr99))
+1501: guard_true(i100, descr=<Guard0x30ae500>) [p92, p86, f85, None, None, None, None, None, None, None, None, None, None, p16, None, None, None, None]
+1507: i101 = arraylen_gc(p63, descr=<ArrayS 8>)
+1507: i102 = arraylen_gc(p75, descr=<ArrayP 8>)
+1507: jump(p86, 0, p16, p92, f85, p47, i55, p87, p50, i59, p63, p46, p66, p49, i71, p75, i68, p16, descr=TargetToken(49645952))
+1664: --end of the loop--
[3e4c0a47a054ada] jit-log-opt-bridge}
[3e4c0a47a83e03f] {jit-backend
[3e4c0a47a998162] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0a6f
[3e4c0a47a9ae13f] jit-backend-dump}
[3e4c0a47a9b984c] {jit-backend-addr
Loop 43 ((let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)) has address 0x7f6e13d0aa1d to 0x7f6e13d0b210 (bootstrap 0x7f6e13d0a990)
       gc table: 0x7f6e13d0a6f0
       function: 0x7f6e13d0a990
         resops: 0x7f6e13d0aa1d
       failures: 0x7f6e13d0b210
            end: 0x7f6e13d0b9eb
[3e4c0a47a9bd0d9] jit-backend-addr}
[3e4c0a47a9c1c69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aa34 +0  2D080000
[3e4c0a47a9c2f6c] jit-backend-dump}
[3e4c0a47a9c64de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aa44 +0  39080000
[3e4c0a47a9c73c4] jit-backend-dump}
[3e4c0a47a9ca5e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aa5b +0  3E080000
[3e4c0a47a9cb3a8] jit-backend-dump}
[3e4c0a47a9ce5d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aa71 +0  44080000
[3e4c0a47a9cf317] jit-backend-dump}
[3e4c0a47a9d2687] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aa87 +0  66080000
[3e4c0a47a9d339a] jit-backend-dump}
[3e4c0a47a9d6533] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aaa7 +0  62080000
[3e4c0a47a9d7239] jit-backend-dump}
[3e4c0a47a9da3f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aabc +0  69080000
[3e4c0a47a9db137] jit-backend-dump}
[3e4c0a47a9de2be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aacc +0  75080000
[3e4c0a47a9defd3] jit-backend-dump}
[3e4c0a47a9e2132] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aae0 +0  7D080000
[3e4c0a47a9e2e3c] jit-backend-dump}
[3e4c0a47a9e6018] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aafb +0  7E080000
[3e4c0a47a9e6d0c] jit-backend-dump}
[3e4c0a47a9e9ee2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ab0b +0  8A080000
[3e4c0a47a9eabeb] jit-backend-dump}
[3e4c0a47a9eddb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ab21 +0  90080000
[3e4c0a47a9eeaa9] jit-backend-dump}
[3e4c0a47a9f1bd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ab2f +0  9E080000
[3e4c0a47a9f28cb] jit-backend-dump}
[3e4c0a47a9f5a7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ab3c +0  AD080000
[3e4c0a47a9f677d] jit-backend-dump}
[3e4c0a47a9f98b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ab4c +0  B9080000
[3e4c0a47a9fa5b7] jit-backend-dump}
[3e4c0a47a9fd86d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ab6f +0  B2080000
[3e4c0a47a9fe56d] jit-backend-dump}
[3e4c0a47aa016f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ab8d +0  B0080000
[3e4c0a47aa02406] jit-backend-dump}
[3e4c0a47aa0558d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aba1 +0  B8080000
[3e4c0a47aa0627a] jit-backend-dump}
[3e4c0a47aa09420] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0abb1 +0  C4080000
[3e4c0a47aa0a13e] jit-backend-dump}
[3e4c0a47aa0d2b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0abc8 +0  C9080000
[3e4c0a47aa0dfcb] jit-backend-dump}
[3e4c0a47aa110d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0abd6 +0  D7080000
[3e4c0a47aa11dcf] jit-backend-dump}
[3e4c0a47aa14f0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0abe3 +0  E6080000
[3e4c0a47aa15c00] jit-backend-dump}
[3e4c0a47aa18d50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0abf0 +0  F5080000
[3e4c0a47aa19a3a] jit-backend-dump}
[3e4c0a47aa1cbb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ac06 +0  FB080000
[3e4c0a47aa1d8b5] jit-backend-dump}
[3e4c0a47aa209be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ac13 +0  0A090000
[3e4c0a47aa216f5] jit-backend-dump}
[3e4c0a47aa24879] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ac27 +0  12090000
[3e4c0a47aa255f3] jit-backend-dump}
[3e4c0a47aa2876b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ac3c +0  19090000
[3e4c0a47aa29465] jit-backend-dump}
[3e4c0a47aa2c620] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ac4e +0  23090000
[3e4c0a47aa2d329] jit-backend-dump}
[3e4c0a47aa30469] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ac62 +0  2B090000
[3e4c0a47aa31172] jit-backend-dump}
[3e4c0a47aa34302] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ac7c +0  2D090000
[3e4c0a47aa34ff9] jit-backend-dump}
[3e4c0a47aa3814f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ac89 +0  3C090000
[3e4c0a47aa38e4c] jit-backend-dump}
[3e4c0a47aa3bf83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0acaf +0  32090000
[3e4c0a47aa3cc80] jit-backend-dump}
[3e4c0a47aa3fd93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0acc3 +0  3A090000
[3e4c0a47aa40a99] jit-backend-dump}
[3e4c0a47aa43c32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0acd7 +0  42090000
[3e4c0a47aa44923] jit-backend-dump}
[3e4c0a47aa47a73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ace9 +0  4C090000
[3e4c0a47aa48788] jit-backend-dump}
[3e4c0a47aa4b8ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0acf6 +0  5B090000
[3e4c0a47aa4c5f3] jit-backend-dump}
[3e4c0a47aa4f6fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ad10 +0  5D090000
[3e4c0a47aa503e4] jit-backend-dump}
[3e4c0a47aa53613] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ad20 +0  69090000
[3e4c0a47aa5430a] jit-backend-dump}
[3e4c0a47aa57414] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ad2c +0  79090000
[3e4c0a47aa58104] jit-backend-dump}
[3e4c0a47aa5b260] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ad42 +0  7F090000
[3e4c0a47aa5bf66] jit-backend-dump}
[3e4c0a47aa5f0de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ad67 +0  76090000
[3e4c0a47aa5fe0c] jit-backend-dump}
[3e4c0a47aa62fa5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ad7b +0  7E090000
[3e4c0a47aa63cd9] jit-backend-dump}
[3e4c0a47aa66e72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ad91 +0  84090000
[3e4c0a47aa67b97] jit-backend-dump}
[3e4c0a47aa6ae5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0adab +0  86090000
[3e4c0a47aa6bb6b] jit-backend-dump}
[3e4c0a47aa6ed4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0adcc +0  81090000
[3e4c0a47aa6fa7c] jit-backend-dump}
[3e4c0a47aa72bdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0adde +0  8B090000
[3e4c0a47aa738cb] jit-backend-dump}
[3e4c0a47aa76a24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0adf2 +0  93090000
[3e4c0a47aa77715] jit-backend-dump}
[3e4c0a47aa7a893] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ae02 +0  9F090000
[3e4c0a47aa7b593] jit-backend-dump}
[3e4c0a47aa7e6ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ae1e +0  9F090000
[3e4c0a47aa7f3c4] jit-backend-dump}
[3e4c0a47aa82532] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ae28 +0  B1090000
[3e4c0a47aa83254] jit-backend-dump}
[3e4c0a47aa8640f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ae3c +0  B9090000
[3e4c0a47aa87183] jit-backend-dump}
[3e4c0a47aa8a2d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ae4d +0  C4090000
[3e4c0a47aa8afdc] jit-backend-dump}
[3e4c0a47aa8e141] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ae73 +0  BA090000
[3e4c0a47aa8ee2f] jit-backend-dump}
[3e4c0a47aa91f91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ae9b +0  AE090000
[3e4c0a47aa92c8b] jit-backend-dump}
[3e4c0a47aa95de7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aead +0  B2090000
[3e4c0a47aa96ae7] jit-backend-dump}
[3e4c0a47aa99c7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aec2 +0  B9090000
[3e4c0a47aa9a967] jit-backend-dump}
[3e4c0a47aa9db1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aecc +0  CB090000
[3e4c0a47aa9e810] jit-backend-dump}
[3e4c0a47aaa197b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aed6 +0  DD090000
[3e4c0a47aaa2641] jit-backend-dump}
[3e4c0a47aaa579a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aee6 +0  E9090000
[3e4c0a47aaa646f] jit-backend-dump}
[3e4c0a47aaa962a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0aefa +0  F1090000
[3e4c0a47aaaa30e] jit-backend-dump}
[3e4c0a47aaad467] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0af0b +0  FC090000
[3e4c0a47aaae136] jit-backend-dump}
[3e4c0a47aab12c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0af38 +0  EB090000
[3e4c0a47aab1f8c] jit-backend-dump}
[3e4c0a47aab50ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0af46 +0  F9090000
[3e4c0a47aab5dd3] jit-backend-dump}
[3e4c0a47aab8f7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0af50 +0  0B0A0000
[3e4c0a47aab9c5a] jit-backend-dump}
[3e4c0a47aabcdc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0af5a +0  1D0A0000
[3e4c0a47aabdab3] jit-backend-dump}
[3e4c0a47aac0c8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0af88 +0  0B0A0000
[3e4c0a47aac1961] jit-backend-dump}
[3e4c0a47aac4afa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0af9d +0  120A0000
[3e4c0a47aac57f7] jit-backend-dump}
[3e4c0a47aacbbaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0afae +0  1D0A0000
[3e4c0a47aaccae0] jit-backend-dump}
[3e4c0a47aad1086] jit-backend}
[3e4c0a47aad4dd2] {jit-log-opt-loop
# Loop 43 ((let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)) : entry bridge with 321 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)')
+821: guard_class(p0, 16504592, descr=<Guard0x30ae560>) [p1, p0]
+840: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+844: guard_class(p3, 16503536, descr=<Guard0x30a8c38>) [p1, p0]
+856: p5 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+860: guard_class(p1, 16435208, descr=<Guard0x30a8c80>) [p1, p0]
+879: p7 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+883: guard_nonnull_class(p7, ConstClass(ForwardLink), descr=<Guard0x30ae5c0>) [p1, p0]
debug_merge_point(0, 0, '(/ AppRand20 AppRand22)')
+901: guard_not_invalidated(descr=<Guard0x30a8cc8>) [p1, p0]
+901: p9 = getfield_gc_r(p3, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed01.inst_w_val0 24 pure>)
+905: guard_nonnull_class(p9, ConstClass(W_Flonum), descr=<Guard0x30ae620>) [p1, p0]
+923: f11 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+928: i13 = float_eq(f11, 0.000000)
+949: guard_false(i13, descr=<Guard0x30a8d10>) [p1, p0]
+955: f14 = getfield_gc_f(p9, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+960: f15 = float_truediv(f14, f11)
debug_merge_point(0, 0, '(let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))')
debug_merge_point(0, 0, '(< q CellRef(q1))')
+964: guard_class(p5, 16504944, descr=<Guard0x30a8d58>) [p1, p0]
+976: p17 = getfield_gc_r(p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+980: guard_class(p17, 16480704, descr=<Guard0x30a8da0>) [p1, p0]
+992: p19 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1003: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x30a8de8>) [p1, p0]
+1012: p21 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1016: p22 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1020: guard_nonnull_class(p22, ConstClass(W_CellFloatStrategy), descr=<Guard0x30ae680>) [p1, p0]
+1039: f24 = getfield_gc_f(p22, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1045: i25 = float_lt(f15, f24)
+1049: guard_true(i25, descr=<Guard0x30a8e30>) [p1, p0]
debug_merge_point(0, 0, '(if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))')
debug_merge_point(0, 0, '(let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1055: p26 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+1059: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x30ae6e0>) [p1, p0]
+1077: i28 = getfield_gc_i(p5, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1081: i30 = int_ge(i28, 0)
+1085: guard_true(i30, descr=<Guard0x30a8e78>) [p1, p0]
+1091: i31 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1095: i32 = int_lt(i28, i31)
+1098: guard_true(i32, descr=<Guard0x30a8ec0>) [p1, p0]
+1104: p33 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1108: guard_class(p33, 16623792, descr=<Guard0x30a8f08>) [p1, p0]
+1120: p35 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1124: i36 = getarrayitem_gc_i(p35, i28, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! ip SetBang4)')
+1129: p37 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_3 48 pure>)
+1133: p38 = getfield_gc_r(p37, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1137: guard_nonnull_class(p38, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30ae740>) [p1, p0]
debug_merge_point(0, 0, '(set! q1 q)')
+1155: p40 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1159: setfield_gc(p22, f15, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1165: setfield_gc(p38, i36, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1176: guard_value(p40, ConstPtr(ptr41), descr=<Guard0x30ae7a0>) [p40, p1]
+1185: p42 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1189: p43 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+1193: guard_class(p42, 16504944, descr=<Guard0x30a8f50>) [p40, p1]
+1205: p45 = getfield_gc_r(p42, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1209: guard_class(p43, 16435208, descr=<Guard0x30a8f98>) [p40, p1]
+1221: p47 = getfield_gc_r(p43, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1225: guard_nonnull_class(p47, ConstClass(ForwardLink), descr=<Guard0x30ae800>) [p40, p1]
debug_merge_point(0, 0, '(+ i5080 1)')
+1244: i49 = getfield_gc_i(p42, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1248: i51 = int_add_ovf(i49, 1)
+1252: guard_no_overflow(descr=<Guard0x30a8fe0>) [p40, p1]
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
+1258: guard_class(p45, 16480704, descr=<Guard0x30a9028>) [p40, p1]
+1271: p53 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1275: guard_value(p53, ConstPtr(ptr54), descr=<Guard0x30a9070>) [p40, p1]
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+1284: p55 = getfield_gc_r(p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+1288: guard_nonnull_class(p55, ConstClass(W_Fixnum), descr=<Guard0x30ae860>) [p40, p1]
+1306: i57 = getfield_gc_i(p55, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1310: i58 = int_eq(i51, i57)
+1313: guard_true(i58, descr=<Guard0x30a90b8>) [p40, p1]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(void)')
+1319: p59 = getfield_gc_r(p43, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1330: guard_value(p59, ConstPtr(ptr60), descr=<Guard0x30a9100>) [p40, p1]
+1339: p61 = getfield_gc_r(p43, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1343: p62 = getfield_gc_r(p43, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)) from (void)')
+1347: guard_class(p61, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x30a9148>) [p40, p1]
+1360: p64 = getfield_gc_r(p61, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1364: i65 = arraylen_gc(p64, descr=<ArrayP 8>)
+1368: i67 = int_eq(20, i65)
+1372: guard_false(i67, descr=<Guard0x30a9190>) [p40, p1]
+1378: p68 = getfield_gc_r(p61, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1389: guard_value(p68, ConstPtr(ptr69), descr=<Guard0x30a91d8>) [p40, p1]
+1398: p71 = getarrayitem_gc_pure_r(p64, 8, descr=<ArrayP 8>)
+1402: p72 = getfield_gc_r(p71, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1406: guard_nonnull_class(p72, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30ae8c0>) [p40, p1]
+1424: i74 = getfield_gc_i(p72, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1428: i75 = int_is_zero(i74)
+1431: guard_false(i75, descr=<Guard0x30a9220>) [p40, p1]
debug_merge_point(0, 0, '(set! one? #t)')
+1437: p77 = getarrayitem_gc_pure_r(p64, 0, descr=<ArrayP 8>)
+1458: setfield_gc(p77, ConstPtr(ptr78), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1462: guard_class(p62, 16435208, descr=<Guard0x30ae920>) [p62, p61]
+1475: p80 = getfield_gc_r(p62, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1486: guard_value(p80, ConstPtr(ptr81), descr=<Guard0x30a9268>) [p62, p61]
+1495: p82 = getfield_gc_r(p62, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1499: p83 = getfield_gc_r(p62, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)) from (void)')
+1503: guard_class(p82, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x30a92b0>) [p62, p61]
+1515: p85 = getfield_gc_r(p82, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1519: i86 = arraylen_gc(p85, descr=<ArrayP 8>)
+1523: i88 = int_eq(20, i86)
+1527: guard_false(i88, descr=<Guard0x30a92f8>) [p62, p61]
+1533: p89 = getfield_gc_r(p82, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1537: guard_value(p89, ConstPtr(ptr90), descr=<Guard0x30a9340>) [p62, p61]
+1546: p92 = getarrayitem_gc_pure_r(p85, 0, descr=<ArrayP 8>)
+1550: p93 = getfield_gc_r(p92, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1554: guard_nonnull_class(p93, ConstClass(W_Bool), descr=<Guard0x30ae980>) [p62, p61]
+1579: i96 = instance_ptr_eq(p93, ConstPtr(ptr95))
+1582: guard_false(i96, descr=<Guard0x30a9388>) [p62, p61]
debug_merge_point(0, 0, '(begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303))')
+1588: guard_class(p83, 16435208, descr=<Guard0x30a93d0>) [p62, p61]
+1600: p98 = getfield_gc_r(p83, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1604: guard_nonnull_class(p98, ConstClass(ForwardLink), descr=<Guard0x30ae9e0>) [p62, p61]
debug_merge_point(0, 0, '(set! one? #f)')
debug_merge_point(0, 0, '(simp3 #t)')
+1622: p101 = getarrayitem_gc_pure_r(p85, 9, descr=<ArrayP 8>)
+1636: setfield_gc(p92, ConstPtr(ptr102), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1640: guard_nonnull_class(p101, 16479200, descr=<Guard0x30aea40>) [p82, p101, p83, p98]
+1659: p104 = getfield_gc_r(p101, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1670: guard_value(p104, ConstPtr(ptr105), descr=<Guard0x30a9418>) [p82, p101, p83, p98]
+1679: p106 = getfield_gc_r(p82, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))))')
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) CellRef(kp))')
+1679: p107 = getfield_gc_r(p101, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1683: guard_nonnull_class(p107, ConstClass(W_Vector), descr=<Guard0x30aeaa0>) [p82, p101, p83, p98]
+1701: p109 = getfield_gc_r(p101, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1705: p110 = getfield_gc_r(p109, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1709: guard_nonnull_class(p110, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30aeb00>) [p82, p101, p83, p98]
+1727: i112 = getfield_gc_i(p110, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1731: p113 = getfield_gc_r(p101, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1735: p114 = getfield_gc_r(p113, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1740: guard_nonnull_class(p114, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30aeb60>) [p82, p101, p83, p98]
+1760: i116 = getfield_gc_i(p114, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1764: p117 = getfield_gc_r(p101, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1768: i119 = int_ge(i112, 0)
+1772: guard_true(i119, descr=<Guard0x30a9460>) [p82, p101, p83, p98]
+1778: i120 = getfield_gc_i(p107, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1789: i121 = int_lt(i112, i120)
+1792: guard_true(i121, descr=<Guard0x30a94a8>) [p82, p101, p83, p98]
+1798: p122 = getfield_gc_r(p107, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1802: guard_class(p122, 16622984, descr=<Guard0x30a94f0>) [p82, p101, p83, p98]
+1814: p124 = getfield_gc_r(p107, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1818: p125 = getarrayitem_gc_r(p124, i112, descr=<ArrayP 8>)
+1830: guard_class(p125, ConstClass(W_Vector), descr=<Guard0x30a9538>) [p82, p101, p83, p98]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1842: i128 = int_ge(i116, 0)
+1846: guard_true(i128, descr=<Guard0x30a9580>) [p82, p101, p83, p98]
+1852: i129 = getfield_gc_i(p125, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1863: i130 = int_lt(i116, i129)
+1866: guard_true(i130, descr=<Guard0x30a95c8>) [p82, p101, p83, p98]
+1872: p131 = getfield_gc_r(p125, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1876: guard_class(p131, 16612728, descr=<Guard0x30a9610>) [p82, p101, p83, p98]
+1889: p133 = getfield_gc_r(p125, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1893: f134 = getarrayitem_gc_f(p133, i116, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))')
debug_merge_point(0, 0, '(/ AppRand41)')
+1900: i136 = float_eq(f134, 0.000000)
+1921: guard_false(i136, descr=<Guard0x30a9658>) [p82, p101, p83, p98]
+1927: f138 = float_truediv(1.000000, f134)
debug_merge_point(0, 0, '(let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))')
debug_merge_point(0, 0, '(lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))')
+1946: p139 = getfield_gc_r(p101, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1950: p140 = getfield_gc_r(p101, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1954: guard_class(p117, 16505296, descr=<Guard0x30a96a0>) [p82, p101, p83, p98]
debug_merge_point(0, 0, '(doloop5167 0)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 0)')
debug_merge_point(0, 0, '(if one?5161 2 1)')
debug_merge_point(0, 0, '2')
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+1967: guard_nonnull_class(p140, ConstClass(W_Fixnum), descr=<Guard0x30aebc0>) [p82, p101, p83, p98]
+1985: i143 = getfield_gc_i(p140, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1996: i145 = int_add_ovf(i143, 2)
+2000: guard_no_overflow(descr=<Guard0x30a96e8>) [p82, p101, p83, p98]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+2006: i147 = int_eq(0, i145)
+2010: guard_false(i147, descr=<Guard0x30a9730>) [p82, p101, p83, p98]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+2016: i148 = int_eq(0, i112)
+2020: guard_false(i148, descr=<Guard0x30a9778>) [p82, p101, p83, p98]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2026: p149 = getarrayitem_gc_r(p124, 0, descr=<ArrayP 8>)
+2030: guard_class(p149, ConstClass(W_Vector), descr=<Guard0x30a97c0>) [p82, p101, p83, p98]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2042: i151 = getfield_gc_i(p149, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2053: i152 = int_lt(i116, i151)
+2056: guard_true(i152, descr=<Guard0x30a9808>) [p82, p101, p83, p98]
+2062: p153 = getfield_gc_r(p149, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2066: guard_class(p153, 16612728, descr=<Guard0x30a9850>) [p82, p101, p83, p98]
+2079: p155 = getfield_gc_r(p149, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2083: f156 = getarrayitem_gc_f(p155, i116, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+2090: f157 = float_mul(f138, f156)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+2098: setarrayitem_gc(p155, i116, f157, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+2105: guard_nonnull_class(p139, ConstClass(W_Fixnum), descr=<Guard0x30aec20>) [p139, p82, p101, f138, p140, p107, p109, p113, p117, p83, p98]
+2124: i159 = getfield_gc_i(p139, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2128: i161 = int_add_ovf(i159, 1)
+2132: guard_no_overflow(descr=<Guard0x30a9898>) [p139, p82, p101, f138, p140, p107, p109, p113, p117, p83, p98]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+2138: i163 = int_eq(0, i161)
+2142: guard_false(i163, descr=<Guard0x30a98e0>) [p139, p82, p101, f138, p140, p107, p109, p113, p117, p83, p98]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+2148: i164 = int_eq(0, i116)
+2152: guard_false(i164, descr=<Guard0x30a9928>) [p139, p82, p101, f138, p140, p107, p109, p113, p117, p83, p98]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2158: f165 = getarrayitem_gc_f(p155, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2164: p166 = getarrayitem_gc_r(p124, i112, descr=<ArrayP 8>)
+2190: guard_class(p166, ConstClass(W_Vector), descr=<Guard0x30a9970>) [p139, p82, p101, f138, p140, p107, p109, p113, p117, p83, p98]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2204: i168 = getfield_gc_i(p166, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2215: i169 = int_lt(0, i168)
+2219: guard_true(i169, descr=<Guard0x30a99b8>) [p139, p82, p101, f138, p140, p107, p109, p113, p117, p83, p98]
+2225: p170 = getfield_gc_r(p166, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2229: guard_class(p170, 16612728, descr=<Guard0x30a9a00>) [p139, p82, p101, f138, p140, p107, p109, p113, p117, p83, p98]
+2242: p172 = getfield_gc_r(p166, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2246: f173 = getarrayitem_gc_f(p172, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2252: f174 = getarrayitem_gc_f(p155, i116, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+2266: f175 = float_mul(f173, f174)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+2270: f176 = float_sub(f165, f175)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+2274: setarrayitem_gc(p155, 0, f176, descr=<ArrayF 8>)
+2280: p177 = new_with_vtable(descr=<SizeDescr 64>)
+2334: p178 = new_with_vtable(descr=<SizeDescr 40>)
+2345: p179 = new_with_vtable(descr=<SizeDescr 24>)
+2356: p180 = new_with_vtable(descr=<SizeDescr 80>)
+2374: setfield_gc(p180, p117, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2392: setfield_gc(p180, ConstPtr(ptr181), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2396: setfield_gc(p180, p139, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+2407: setfield_gc(p180, p113, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+2418: setfield_gc(p180, p109, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+2429: setfield_gc(p180, p140, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+2433: setfield_gc(p180, p107, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+2444: setfield_gc(p180, ConstPtr(ptr182), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+2448: p183 = new_with_vtable(descr=<SizeDescr 16>)
+2466: setfield_gc(p183, f138, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+2471: setfield_gc(p180, p183, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+2475: setfield_gc(p179, p180, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2479: setfield_gc(p179, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+2487: p184 = new_with_vtable(descr=<SizeDescr 40>)
+2498: setfield_gc(p184, p98, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2509: p185 = new_with_vtable(descr=<SizeDescr 24>)
+2527: p186 = new_with_vtable(descr=<SizeDescr 24>)
+2538: setfield_gc(p186, p101, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2542: setfield_gc(p186, ConstPtr(ptr187), descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2546: setfield_gc(p185, p186, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2550: setfield_gc(p185, f138, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+2555: setfield_gc(p184, p185, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2559: p188 = new_with_vtable(descr=<SizeDescr 40>)
+2570: setfield_gc(p188, p98, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2574: setfield_gc(p188, p82, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2578: setfield_gc(p188, p83, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2589: setfield_gc(p188, ConstPtr(ptr189), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2593: setfield_gc(p184, p188, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2604: setfield_gc(p184, ConstPtr(ptr190), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2608: i191 = arraylen_gc(p124, descr=<ArrayP 8>)
+2608: setfield_gc(p177, p117, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2619: setfield_gc(p178, p98, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2637: setfield_gc(p177, ConstPtr(ptr192), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2648: setfield_gc(p178, ConstPtr(ptr193), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2652: setfield_gc(p178, p179, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2656: setfield_gc(p178, p184, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2660: setfield_gc(p177, p107, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2664: setfield_gc(p177, p113, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2668: setfield_gc(p177, p139, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2686: setfield_gc(p177, ConstPtr(ptr194), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2690: setfield_gc(p177, p109, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2694: jump(p177, 1, p178, p98, p139, i161, p113, p114, i116, ConstPtr(ptr194), p107, p124, 0, p109, p110, i112, descr=TargetToken(47968112))
+2848: --end of the loop--
[3e4c0a47abd59cc] jit-log-opt-loop}
[3e4c0a47b05604d] {jit-backend
[3e4c0a47b10584d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bc
[3e4c0a47b111bec] jit-backend-dump}
[3e4c0a47b11d07d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bda4 +0  28000000
[3e4c0a47b11e611] jit-backend-dump}
[3e4c0a47b12291f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c185 +0  28000000
[3e4c0a47b12381b] jit-backend-dump}
[3e4c0a47b126c95] {jit-backend-addr
bridge out of Guard 0x2f75df0 has address 0x7f6e13d0bda0 to 0x7f6e13d0c180
       gc table: 0x7f6e13d0bc70
    jump target: 0x7f6e13d0bda0
         resops: 0x7f6e13d0bdae
       failures: 0x7f6e13d0c180
            end: 0x7f6e13d0c5a3
[3e4c0a47b1290d0] jit-backend-addr}
[3e4c0a47b12c721] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bdc6 +0  0B040000
[3e4c0a47b12d581] jit-backend-dump}
[3e4c0a47b1308cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bdde +0  0F040000
[3e4c0a47b13164d] jit-backend-dump}
[3e4c0a47b1347d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0be03 +0  06040000
[3e4c0a47b1354b2] jit-backend-dump}
[3e4c0a47b1385e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0be1b +0  04040000
[3e4c0a47b1392ef] jit-backend-dump}
[3e4c0a47b13c445] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0be25 +0  16040000
[3e4c0a47b13d13c] jit-backend-dump}
[3e4c0a47b1401cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0be32 +0  25040000
[3e4c0a47b140e8e] jit-backend-dump}
[3e4c0a47b143ef2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0be44 +0  2F040000
[3e4c0a47b144bca] jit-backend-dump}
[3e4c0a47b147db0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0be64 +0  2B040000
[3e4c0a47b148a76] jit-backend-dump}
[3e4c0a47b14bb11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0be6e +0  3D040000
[3e4c0a47b14c7fc] jit-backend-dump}
[3e4c0a47b14f8b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0be7b +0  4C040000
[3e4c0a47b150572] jit-backend-dump}
[3e4c0a47b153584] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0be8b +0  58040000
[3e4c0a47b15425f] jit-backend-dump}
[3e4c0a47b157296] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bea0 +0  5F040000
[3e4c0a47b157f52] jit-backend-dump}
[3e4c0a47b15af92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0beae +0  6D040000
[3e4c0a47b15bc55] jit-backend-dump}
[3e4c0a47b15ed58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bebf +0  78040000
[3e4c0a47b15fa21] jit-backend-dump}
[3e4c0a47b162a36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0befc +0  57040000
[3e4c0a47b1636e9] jit-backend-dump}
[3e4c0a47b166710] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bf0a +0  65040000
[3e4c0a47b1673d3] jit-backend-dump}
[3e4c0a47b16a459] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bf13 +0  78040000
[3e4c0a47b16b131] jit-backend-dump}
[3e4c0a47b16e15e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bf24 +0  83040000
[3e4c0a47b16ee15] jit-backend-dump}
[3e4c0a47b171e48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bf2e +0  95040000
[3e4c0a47b172b02] jit-backend-dump}
[3e4c0a47b175b29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bf3b +0  A4040000
[3e4c0a47b1767e9] jit-backend-dump}
[3e4c0a47b179847] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bf4c +0  AF040000
[3e4c0a47b17a516] jit-backend-dump}
[3e4c0a47b17d534] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bf72 +0  A5040000
[3e4c0a47b17e1fa] jit-backend-dump}
[3e4c0a47b18125b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bf92 +0  A1040000
[3e4c0a47b181f0e] jit-backend-dump}
[3e4c0a47b184f97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0bfb7 +0  98040000
[3e4c0a47b185c54] jit-backend-dump}
[3e4c0a47b188c97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c000 +0  6B040000
[3e4c0a47b189956] jit-backend-dump}
[3e4c0a47b18c996] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c023 +0  64040000
[3e4c0a47b18d696] jit-backend-dump}
[3e4c0a47b19069e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c037 +0  6C040000
[3e4c0a47b191364] jit-backend-dump}
[3e4c0a47b194373] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c044 +0  7B040000
[3e4c0a47b19503c] jit-backend-dump}
[3e4c0a47b198054] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c06e +0  6D040000
[3e4c0a47b198d04] jit-backend-dump}
[3e4c0a47b19bd68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c083 +0  74040000
[3e4c0a47b19ca4d] jit-backend-dump}
[3e4c0a47b19fa8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c090 +0  83040000
[3e4c0a47b1a0758] jit-backend-dump}
[3e4c0a47b1a3828] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c0a8 +0  87040000
[3e4c0a47b1a44e1] jit-backend-dump}
[3e4c0a47b1a75cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c0b2 +0  99040000
[3e4c0a47b1a8298] jit-backend-dump}
[3e4c0a47b1ab28e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c0bf +0  A8040000
[3e4c0a47b1abf4e] jit-backend-dump}
[3e4c0a47b1aef6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c0d1 +0  B2040000
[3e4c0a47b1afc3e] jit-backend-dump}
[3e4c0a47b1b2e9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfe953 +0  49D40000
[3e4c0a47b1b3b76] jit-backend-dump}
[3e4c0a47b1b7c98] jit-backend}
[3e4c0a47b1bb77a] {jit-log-opt-bridge
# bridge out of Guard 0x2f75df0 with 148 ops
[p0, i1, p2, f3, p4]
+326: guard_not_invalidated(descr=<Guard0x30aec80>) [p0, i1, p2, f3, p4]
+326: p5 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+337: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x30a9a48>) [p0, i1, p2, f3, p4]
+346: p7 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+350: guard_nonnull_class(p7, ConstClass(W_Flonum), descr=<Guard0x30aece0>) [p0, i1, p2, f3, p4]
+370: f9 = getfield_gc_f(p7, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+376: f11 = float_sub(0.000000, f9)
debug_merge_point(0, 0, '(let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))')
debug_merge_point(0, 0, '(< AppRand33 AppRand34)')
+396: i12 = float_lt(f3, f11)
+401: guard_true(i12, descr=<Guard0x30a9a90>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))')
debug_merge_point(0, 0, '(let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+407: p13 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+411: guard_nonnull_class(p13, ConstClass(W_Vector), descr=<Guard0x30aed40>) [p0, i1, p2, f3, p4]
+431: i16 = int_ge(i1, 0)
+435: guard_true(i16, descr=<Guard0x30a9ad8>) [p0, i1, p2, f3, p4]
+441: i17 = getfield_gc_i(p13, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+445: i18 = int_lt(i1, i17)
+448: guard_true(i18, descr=<Guard0x30a9b20>) [p0, i1, p2, f3, p4]
+454: p19 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+458: guard_class(p19, 16623792, descr=<Guard0x30a9b68>) [p0, i1, p2, f3, p4]
+472: p21 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+476: i22 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8)))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand35 0)')
+481: p23 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+485: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x30aeda0>) [p0, i1, p2, f3, p4]
+504: p25 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+504: i27 = int_ge(i22, 0)
+508: guard_true(i27, descr=<Guard0x30a9bb0>) [p0, i1, p2, f3, p4]
+514: i28 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+518: i29 = int_lt(i22, i28)
+521: guard_true(i29, descr=<Guard0x30a9bf8>) [p0, i1, p2, f3, p4]
+527: p30 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+531: guard_class(p30, 16622984, descr=<Guard0x30a9c40>) [p0, i1, p2, f3, p4]
+543: p32 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+547: p33 = getarrayitem_gc_r(p32, i22, descr=<ArrayP 8>)
+552: guard_class(p33, ConstClass(W_Vector), descr=<Guard0x30a9c88>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+564: i35 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+568: i37 = int_lt(0, i35)
+572: guard_true(i37, descr=<Guard0x30a9cd0>) [p0, i1, p2, f3, p4]
+578: p38 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+582: guard_class(p38, 16612728, descr=<Guard0x30a9d18>) [p0, i1, p2, f3, p4]
+595: p40 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+599: f42 = getarrayitem_gc_f(p40, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8)))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand36)')
+605: f44 = float_sub(0.000000, f42)
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+625: i45 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8)))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand38 CellRef(kp))')
+630: p46 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+634: p47 = getfield_gc_r(p46, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+638: guard_nonnull_class(p47, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30aee00>) [p0, i1, p2, f3, p4]
+656: i49 = getfield_gc_i(p47, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+660: i51 = int_ge(i45, 0)
+664: guard_true(i51, descr=<Guard0x30a9d60>) [p0, i1, p2, f3, p4]
+670: i52 = int_lt(i45, i28)
+673: guard_true(i52, descr=<Guard0x30a9da8>) [p0, i1, p2, f3, p4]
+679: p53 = getarrayitem_gc_r(p32, i45, descr=<ArrayP 8>)
+684: guard_class(p53, ConstClass(W_Vector), descr=<Guard0x30a9df0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+696: i56 = int_ge(i49, 0)
+700: guard_true(i56, descr=<Guard0x30a9e38>) [p0, i1, p2, f3, p4]
+706: i57 = getfield_gc_i(p53, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+710: i58 = int_lt(i49, i57)
+713: guard_true(i58, descr=<Guard0x30a9e80>) [p0, i1, p2, f3, p4]
+719: p59 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+723: guard_class(p59, 16612728, descr=<Guard0x30a9ec8>) [p0, i1, p2, f3, p4]
+736: p61 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+740: f62 = getarrayitem_gc_f(p61, i49, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(/ AppRand37 AppRand39)')
+747: i64 = float_eq(f62, 0.000000)
+768: guard_false(i64, descr=<Guard0x30a9f10>) [p0, i1, p2, f3, p4]
+774: f65 = float_truediv(f44, f62)
debug_merge_point(0, 0, '(set! q1 SetBang8)')
+779: p66 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+783: p67 = getfield_gc_r(p66, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+787: guard_nonnull_class(p67, ConstClass(W_CellFloatStrategy), descr=<Guard0x30aee60>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+806: i69 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! ip SetBang9)')
+811: p70 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_3 48 pure>)
+815: p71 = getfield_gc_r(p70, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+819: setfield_gc(p67, f65, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+825: guard_nonnull_class(p71, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30aeec0>) [p71, p70, i69, p0, i1, p2, None, p4]
debug_merge_point(0, 0, '(set! flag? #t)')
+843: p74 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_0 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+847: p75 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+889: setfield_gc(p74, ConstPtr(ptr76), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+893: setfield_gc(p71, i69, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+897: guard_nonnull_class(p75, ConstClass(ForwardLink), descr=<Guard0x30aef20>) [p75, p0, p2, None, None, i1, None, None, None]
debug_merge_point(0, 0, '(+ i5080 1)')
+916: i79 = int_add(i1, 1)
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+920: p80 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+931: guard_nonnull_class(p80, ConstClass(W_Fixnum), descr=<Guard0x30aef80>) [p75, p0, p2, None, None, i1, None, None, None]
+951: i82 = getfield_gc_i(p80, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+962: i83 = int_eq(i79, i82)
+965: guard_false(i83, descr=<Guard0x30a9f58>) [p75, p0, p2, None, None, i1, None, None, None]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
debug_merge_point(0, 0, '(let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+971: i84 = int_lt(i79, i17)
+978: guard_true(i84, descr=<Guard0x30a9fa0>) [p75, p0, p2, None, None, i1, None, None, None]
+984: i85 = getarrayitem_gc_i(p21, i79, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand15 CellRef(kp))')
+996: p86 = getfield_gc_r(p46, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1007: guard_nonnull_class(p86, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30aefe0>) [p75, p0, p2, None, None, i1, None, None, None]
+1026: i88 = getfield_gc_i(p86, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1037: i90 = int_ge(i85, 0)
+1041: guard_true(i90, descr=<Guard0x30ba020>) [p75, p0, p2, None, None, i1, None, None, None]
+1047: i91 = int_lt(i85, i28)
+1054: guard_true(i91, descr=<Guard0x30ba068>) [p75, p0, p2, None, None, i1, None, None, None]
+1060: p92 = getarrayitem_gc_r(p32, i85, descr=<ArrayP 8>)
+1072: guard_class(p92, ConstClass(W_Vector), descr=<Guard0x30ba0b0>) [p75, p0, p2, None, None, i1, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1084: i95 = int_ge(i88, 0)
+1088: guard_true(i95, descr=<Guard0x30ba0f8>) [p75, p0, p2, None, None, i1, None, None, None]
+1094: i96 = getfield_gc_i(p92, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1098: i97 = int_lt(i88, i96)
+1101: guard_true(i97, descr=<Guard0x30ba140>) [p75, p0, p2, None, None, i1, None, None, None]
+1107: p98 = getfield_gc_r(p92, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1111: guard_class(p98, 16612728, descr=<Guard0x30ba188>) [p75, p0, p2, None, None, i1, None, None, None]
+1125: p100 = getfield_gc_r(p92, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1129: f101 = getarrayitem_gc_f(p100, i88, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1136: i102 = arraylen_gc(p21, descr=<ArrayS 8>)
+1136: i103 = arraylen_gc(p32, descr=<ArrayP 8>)
+1136: jump(p2, i79, p75, p0, f101, p13, p21, p23, i28, p32, p46, p86, i88, p80, i82, p74, i17, p75, descr=TargetToken(49644192))
+1296: --end of the loop--
[3e4c0a47b24296e] jit-log-opt-bridge}
[3e4c0a47b6a8ca3] {jit-backend
[3e4c0a47b71b4c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c760 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8202000048FF0425905E02034C8BBD3801000041813F480E00000F85000000004D8B77084983FE01720741813E900F00000F8500000000813AB01E01000F85000000004C8B6A104C8B620841813C2410BD00000F85000000004D8B5424104C8B0DD9FEFFFF4D39CA0F85000000004D8B4C24284D8B51084983FA01720741813AF08900000F85000000004D8B42084D39C50F8D00000000498B7C24304885FF0F8400000000488B35BAFEFFFF4839F70F8500000000498B7424384883FE017206813EF08C00000F85000000004983FD000F8C00000000488B7E084939FD0F8D00000000488B5E18813BF0EE02000F8500000000488B5E104A8B44EB10498B4C24484883F90172068139F08C00000F85000000004D8B7C24404983FF01720741813F601400000F85000000004C89B5300100004D8B77084983FE000F8C000000004C89A5400100004C8B61084D39E60F8D000000004C8B611841813C24C8EB02000F85000000004C8B61104C898D480100004F8B4CF410418139F08C00000F85000000004883F8000F8C000000004C8995500100004D8B51084C39D00F8D000000004D8B511841813AB8C302000F85000000004D8B5110F2450F1074C210488B85400100004C8B50184D8B4A084983F9017207418139B08800000F8500000000F2450F106908F2450F5CF549BB40C7D0136E7F000066450F2E330F8700000000498D55014C8B9D300100004C899D400100004C8B9D500100004C899D580100004889B5300100004989DD4C89BD6001000048898D680100004C89E64C8995700100004C898D780100004C8B9D480100004C899D500100004D89C14989FA488985480100004C89F066410F28CD49BB304BCF136E7F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BBB0C5D0136E7F00004C895D204D8D9B40EDFDFF41FFD3E958FDFFFFFF3564FCFFFF49BBC0C5D0136E7F000041534D8D9B40EAFDFF41FFE3FF3550FCFFFF49BBD0C5D0136E7F000041534D8D9B30EAFDFF41FFE3FF353CFCFFFF49BBE0C5D0136E7F000041534D8D9B20EAFDFF41FFE3FF3528FCFFFF49BBF0C5D0136E7F000041534D8D9B10EAFDFF41FFE3FF3514FCFFFF49BB00C6D0136E7F000041534D8D9B00EAFDFF41FFE3FF3508FCFFFF49BB10C6D0136E7F000041534D8D9BF0E9FDFF41FFE3FF35F4FBFFFF49BB20C6D0136E7F000041534D8D9BE0E9FDFF41FFE3FF35E0FBFFFF49BB30C6D0136E7F000041534D8D9BD0E9FDFF41FFE3FF35CCFBFFFF49BB40C6D0136E7F000041534D8D9BC0E9FDFF41FFE3FF35C0FBFFFF49BB50C6D0136E7F000041534D8D9BB0E9FDFF41FFE3FF35ACFBFFFF49BB60C6D0136E7F000041534D8D9BA0E9FDFF41FFE3FF3598FBFFFF49BB70C6D0136E7F000041534D8D9B90E9FDFF41FFE3FF3584FBFFFF49BB80C6D0136E7F000041534D8D9B80E9FDFF41FFE3FF3570FBFFFF49BB90C6D0136E7F000041534D8D9B70E9FDFF41FFE3FF355CFBFFFF49BBA0C6D0136E7F000041534D8D9B60E9FDFF41FFE3FF3548FBFFFF49BBB0C6D0136E7F000041534D8D9B50E9FDFF41FFE3FF3534FBFFFF49BBC0C6D0136E7F000041534D8D9B40E9FDFF41FFE3FF3520FBFFFF49BBD0C6D0136E7F000041534D8D9B30E9FDFF41FFE3FF350CFBFFFF49BBE0C6D0136E7F000041534D8D9B20E9FDFF41FFE3FF35F8FAFFFF49BBF0C6D0136E7F000041534D8D9B10E9FDFF41FFE3FF35E4FAFFFF49BB00C7D0136E7F000041534D8D9B00E9FDFF41FFE3FF35D0FAFFFF49BB10C7D0136E7F000041534D8D9BF0E8FDFF41FFE3FF35BCFAFFFF49BB20C7D0136E7F000041534D8D9BE0E8FDFF41FFE3FF35A8FAFFFF49BB30C7D0136E7F000041534D8D9BD0E8FDFF41FFE3FF3594FAFFFF4D8D5B0841534D8D9BB8E8FDFF41FFE3
[3e4c0a47b724b8e] jit-backend-dump}
[3e4c0a47b7330a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c844 +0  2A000000
[3e4c0a47b7345e4] jit-backend-dump}
[3e4c0a47b738b4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0cad5 +0  2A000000
[3e4c0a47b739a5a] jit-backend-dump}
[3e4c0a47b73cef0] {jit-backend-addr
bridge out of Guard 0x2fab808 has address 0x7f6e13d0c840 to 0x7f6e13d0cad0
       gc table: 0x7f6e13d0c760
    jump target: 0x7f6e13d0c840
         resops: 0x7f6e13d0c84e
       failures: 0x7f6e13d0cad0
            end: 0x7f6e13d0cdac
[3e4c0a47b73f472] jit-backend-addr}
[3e4c0a47b742a46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c866 +0  8C020000
[3e4c0a47b74387e] jit-backend-dump}
[3e4c0a47b746b80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c87d +0  91020000
[3e4c0a47b7478ab] jit-backend-dump}
[3e4c0a47b74ac37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c889 +0  BD020000
[3e4c0a47b74b921] jit-backend-dump}
[3e4c0a47b74eb41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c89f +0  C3020000
[3e4c0a47b74f875] jit-backend-dump}
[3e4c0a47b752a64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c8b4 +0  CA020000
[3e4c0a47b75376a] jit-backend-dump}
[3e4c0a47b7568ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c8d0 +0  CA020000
[3e4c0a47b7575ee] jit-backend-dump}
[3e4c0a47b75a6b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c8dd +0  D9020000
[3e4c0a47b75b39b] jit-backend-dump}
[3e4c0a47b75e44f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c8eb +0  E7020000
[3e4c0a47b75f137] jit-backend-dump}
[3e4c0a47b7621f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c8fb +0  F3020000
[3e4c0a47b762efd] jit-backend-dump}
[3e4c0a47b765ff1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c912 +0  F8020000
[3e4c0a47b766cd8] jit-backend-dump}
[3e4c0a47b769db1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c91c +0  0A030000
[3e4c0a47b76aa8c] jit-backend-dump}
[3e4c0a47b76dc56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c929 +0  19030000
[3e4c0a47b76e956] jit-backend-dump}
[3e4c0a47b771a35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c939 +0  25030000
[3e4c0a47b772716] jit-backend-dump}
[3e4c0a47b7757b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c959 +0  21030000
[3e4c0a47b7764b8] jit-backend-dump}
[3e4c0a47b7795d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c971 +0  25030000
[3e4c0a47b77a2ec] jit-backend-dump}
[3e4c0a47b77d442] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c986 +0  2C030000
[3e4c0a47b77e120] jit-backend-dump}
[3e4c0a47b781276] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c99a +0  34030000
[3e4c0a47b781f6d] jit-backend-dump}
[3e4c0a47b7850b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c9ac +0  3E030000
[3e4c0a47b785da4] jit-backend-dump}
[3e4c0a47b788ea7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c9c9 +0  3D030000
[3e4c0a47b789b86] jit-backend-dump}
[3e4c0a47b78cc2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c9d3 +0  4F030000
[3e4c0a47b78d90c] jit-backend-dump}
[3e4c0a47b7909a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c9e7 +0  57030000
[3e4c0a47b791685] jit-backend-dump}
[3e4c0a47b79475e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0c9f8 +0  62030000
[3e4c0a47b795442] jit-backend-dump}
[3e4c0a47b798539] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ca25 +0  51030000
[3e4c0a47b799239] jit-backend-dump}
[3e4c0a47b79c327] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ca45 +0  4D030000
[3e4c0a47b79d00f] jit-backend-dump}
[3e4c0a47b7a0342] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01037 +0  05B80000
[3e4c0a47b7a1045] jit-backend-dump}
[3e4c0a47b7a4fe8] jit-backend}
[3e4c0a47b7a8afb] {jit-log-opt-bridge
# bridge out of Guard 0x2fab808 with 85 ops
[p0, p1]
+246: guard_class(p1, 16435208, descr=<Guard0x30af040>) [p0, p1]
+266: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+270: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x30af0a0>) [p0, p1]
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+289: guard_not_invalidated(descr=<Guard0x30ba1d0>) [p0, p1]
+289: guard_class(p0, 16504944, descr=<Guard0x30ba218>) [p0, p1]
+301: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+305: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+309: guard_class(p7, 16479952, descr=<Guard0x30ba260>) [p0, p1]
+323: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+335: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x30ba2a8>) [p0, p1]
+344: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+349: p12 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+353: guard_nonnull_class(p12, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30af100>) [p0, p1]
+372: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+376: i15 = int_ge(i6, i14)
+379: guard_false(i15, descr=<Guard0x30ba2f0>) [p0, p1]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
+385: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+390: guard_nonnull(p16, descr=<Guard0x30ba338>) [p0, p1]
+406: i18 = instance_ptr_eq(p16, ConstPtr(ptr17))
+409: guard_true(i18, descr=<Guard0x30ba380>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+415: p19 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+420: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x30af160>) [p0, p1]
+438: i22 = int_ge(i6, 0)
+442: guard_true(i22, descr=<Guard0x30ba3c8>) [p0, p1]
+448: i23 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+452: i24 = int_lt(i6, i23)
+455: guard_true(i24, descr=<Guard0x30ba410>) [p0, p1]
+461: p25 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+465: guard_class(p25, 16623792, descr=<Guard0x30ba458>) [p0, p1]
+477: p27 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+481: i28 = getarrayitem_gc_i(p27, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
+486: p29 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+491: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x30af1c0>) [p0, p1]
+509: p31 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+514: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x30af220>) [p0, p1]
+533: p33 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+533: i34 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+544: i36 = int_ge(i34, 0)
+548: guard_true(i36, descr=<Guard0x30ba4a0>) [p0, p1]
+554: i37 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+565: i38 = int_lt(i34, i37)
+568: guard_true(i38, descr=<Guard0x30ba4e8>) [p0, p1]
+574: p39 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+578: guard_class(p39, 16622984, descr=<Guard0x30ba530>) [p0, p1]
+592: p41 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+596: p42 = getarrayitem_gc_r(p41, i34, descr=<ArrayP 8>)
+608: guard_class(p42, ConstClass(W_Vector), descr=<Guard0x30ba578>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+621: i45 = int_ge(i28, 0)
+625: guard_true(i45, descr=<Guard0x30ba5c0>) [p0, p1]
+631: i46 = getfield_gc_i(p42, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+642: i47 = int_lt(i28, i46)
+645: guard_true(i47, descr=<Guard0x30ba608>) [p0, p1]
+651: p48 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+655: guard_class(p48, 16612728, descr=<Guard0x30ba650>) [p0, p1]
+668: p50 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+672: f51 = getarrayitem_gc_f(p50, i28, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+679: p52 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+690: p53 = getfield_gc_r(p52, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+694: guard_nonnull_class(p53, ConstClass(W_CellFloatStrategy), descr=<Guard0x30af280>) [p0, p1]
+713: f55 = getfield_gc_f(p53, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+719: f56 = float_sub(f51, f55)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+724: i58 = float_gt(f56, 0.000000)
+739: guard_false(i58, descr=<Guard0x30ba698>) [p0, p1]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
+745: i60 = int_add(i6, 1)
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+749: i61 = arraylen_gc(p27, descr=<ArrayS 8>)
+749: i62 = arraylen_gc(p41, descr=<ArrayP 8>)
+749: jump(p7, i60, p1, p3, p11, p12, i14, p19, i23, p27, p31, p29, p41, i34, p52, p53, f55, descr=TargetToken(48739520))
+880: --end of the loop--
[3e4c0a47b7f6c5e] jit-log-opt-bridge}
[3e4c0a47c2bcc0b] {jit-backend
[3e4c0a47c4132a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d
[3e4c0a47c42783b] jit-backend-dump}
[3e4c0a47c43304c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d464 +0  29000000
[3e4c0a47c4345b9] jit-backend-dump}
[3e4c0a47c4388ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0dc15 +0  29000000
[3e4c0a47c4397f7] jit-backend-dump}
[3e4c0a47c43cc4c] {jit-backend-addr
bridge out of Guard 0x2f648d8 has address 0x7f6e13d0d460 to 0x7f6e13d0dc10
       gc table: 0x7f6e13d0d200
    jump target: 0x7f6e13d0d460
         resops: 0x7f6e13d0d46e
       failures: 0x7f6e13d0dc10
            end: 0x7f6e13d0e347
[3e4c0a47c43f107] jit-backend-addr}
[3e4c0a47c44274f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d486 +0  E5070000
[3e4c0a47c443594] jit-backend-dump}
[3e4c0a47c4468e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d49e +0  E9070000
[3e4c0a47c4475f8] jit-backend-dump}
[3e4c0a47c44a77e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d4c3 +0  E0070000
[3e4c0a47c44b497] jit-backend-dump}
[3e4c0a47c44e630] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d4db +0  DE070000
[3e4c0a47c44f367] jit-backend-dump}
[3e4c0a47c4524ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d4e5 +0  F0070000
[3e4c0a47c4531c9] jit-backend-dump}
[3e4c0a47c45623a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d4f2 +0  FF070000
[3e4c0a47c456f18] jit-backend-dump}
[3e4c0a47c459f7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d503 +0  0A080000
[3e4c0a47c45ac92] jit-backend-dump}
[3e4c0a47c45dd33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d523 +0  06080000
[3e4c0a47c45ea39] jit-backend-dump}
[3e4c0a47c461a4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d52d +0  18080000
[3e4c0a47c46271d] jit-backend-dump}
[3e4c0a47c465775] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d53a +0  27080000
[3e4c0a47c46649d] jit-backend-dump}
[3e4c0a47c4694c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d54b +0  32080000
[3e4c0a47c46a1bb] jit-backend-dump}
[3e4c0a47c46d1b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d561 +0  38080000
[3e4c0a47c46de86] jit-backend-dump}
[3e4c0a47c470e30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d56f +0  46080000
[3e4c0a47c471afc] jit-backend-dump}
[3e4c0a47c474b72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d581 +0  50080000
[3e4c0a47c475841] jit-backend-dump}
[3e4c0a47c478810] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d5bf +0  2E080000
[3e4c0a47c4794e2] jit-backend-dump}
[3e4c0a47c47c4c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d5cd +0  3C080000
[3e4c0a47c47d19b] jit-backend-dump}
[3e4c0a47c48013e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d5d6 +0  4F080000
[3e4c0a47c480e3e] jit-backend-dump}
[3e4c0a47c483ef5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d5e8 +0  59080000
[3e4c0a47c484c23] jit-backend-dump}
[3e4c0a47c487bfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d5f2 +0  6B080000
[3e4c0a47c488904] jit-backend-dump}
[3e4c0a47c48b980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d5ff +0  7A080000
[3e4c0a47c48c652] jit-backend-dump}
[3e4c0a47c48f692] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d611 +0  84080000
[3e4c0a47c4903c0] jit-backend-dump}
[3e4c0a47c4933b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d637 +0  7A080000
[3e4c0a47c4940c2] jit-backend-dump}
[3e4c0a47c4970d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d658 +0  75080000
[3e4c0a47c497de6] jit-backend-dump}
[3e4c0a47c49ae47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d669 +0  80080000
[3e4c0a47c49bb29] jit-backend-dump}
[3e4c0a47c49eae5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d67a +0  8B080000
[3e4c0a47c49f7b7] jit-backend-dump}
[3e4c0a47c4a284c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d698 +0  89080000
[3e4c0a47c4a3521] jit-backend-dump}
[3e4c0a47c4a64a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d6b4 +0  89080000
[3e4c0a47c4a717e] jit-backend-dump}
[3e4c0a47c4aa196] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d6c1 +0  98080000
[3e4c0a47c4aae6e] jit-backend-dump}
[3e4c0a47c4ade7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d6d5 +0  A0080000
[3e4c0a47c4aeb71] jit-backend-dump}
[3e4c0a47c4b1c18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d6ea +0  A7080000
[3e4c0a47c4b28fd] jit-backend-dump}
[3e4c0a47c4b59aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d6fe +0  AF080000
[3e4c0a47c4b669e] jit-backend-dump}
[3e4c0a47c4b9645] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d719 +0  B0080000
[3e4c0a47c4ba320] jit-backend-dump}
[3e4c0a47c4bd307] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d726 +0  BF080000
[3e4c0a47c4bdfdc] jit-backend-dump}
[3e4c0a47c4c0f39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d733 +0  CE080000
[3e4c0a47c4c1c18] jit-backend-dump}
[3e4c0a47c4c4bfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d74a +0  D3080000
[3e4c0a47c4c592c] jit-backend-dump}
[3e4c0a47c4c8935] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d761 +0  D8080000
[3e4c0a47c4c9622] jit-backend-dump}
[3e4c0a47c4cc60f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d775 +0  E0080000
[3e4c0a47c4cd2f4] jit-backend-dump}
[3e4c0a47c4d0263] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d78b +0  E6080000
[3e4c0a47c4d0f63] jit-backend-dump}
[3e4c0a47c4d3f66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d7a5 +0  E8080000
[3e4c0a47c4d4c3e] jit-backend-dump}
[3e4c0a47c4d7b8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d7c3 +0  E6080000
[3e4c0a47c4d8864] jit-backend-dump}
[3e4c0a47c4db81a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d7e3 +0  E2080000
[3e4c0a47c4dc4f8] jit-backend-dump}
[3e4c0a47c4df480] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d805 +0  DC080000
[3e4c0a47c4e015c] jit-backend-dump}
[3e4c0a47c4e310b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d815 +0  E8080000
[3e4c0a47c4e3de7] jit-backend-dump}
[3e4c0a47c4e6d50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d831 +0  E8080000
[3e4c0a47c4e7a28] jit-backend-dump}
[3e4c0a47c4ea9f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d83b +0  FA080000
[3e4c0a47c4eb6cc] jit-backend-dump}
[3e4c0a47c4ee663] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d84f +0  02090000
[3e4c0a47c4ef33b] jit-backend-dump}
[3e4c0a47c4f230a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d85f +0  0E090000
[3e4c0a47c4f2fe2] jit-backend-dump}
[3e4c0a47c4f5fd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d885 +0  04090000
[3e4c0a47c4f6cad] jit-backend-dump}
[3e4c0a47c4f9cd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d8ad +0  F8080000
[3e4c0a47c4fa9b9] jit-backend-dump}
[3e4c0a47c4fd92e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d8bf +0  FC080000
[3e4c0a47c4fe5fa] jit-backend-dump}
[3e4c0a47c50164c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d8d4 +0  03090000
[3e4c0a47c502328] jit-backend-dump}
[3e4c0a47c5052a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d8de +0  15090000
[3e4c0a47c505f72] jit-backend-dump}
[3e4c0a47c508f3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d8ec +0  23090000
[3e4c0a47c509c0d] jit-backend-dump}
[3e4c0a47c50cc15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d8fc +0  2F090000
[3e4c0a47c50d8f7] jit-backend-dump}
[3e4c0a47c5108e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d914 +0  33090000
[3e4c0a47c5115c2] jit-backend-dump}
[3e4c0a47c514575] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d925 +0  3E090000
[3e4c0a47c51526c] jit-backend-dump}
[3e4c0a47c518246] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d95a +0  25090000
[3e4c0a47c518f1e] jit-backend-dump}
[3e4c0a47c51bea0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d968 +0  33090000
[3e4c0a47c51cb72] jit-backend-dump}
[3e4c0a47c51fb41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d972 +0  45090000
[3e4c0a47c520819] jit-backend-dump}
[3e4c0a47c5237c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d97c +0  57090000
[3e4c0a47c52449b] jit-backend-dump}
[3e4c0a47c5274f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d99c +0  53090000
[3e4c0a47c5281ea] jit-backend-dump}
[3e4c0a47c52b1bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d9aa +0  61090000
[3e4c0a47c52be90] jit-backend-dump}
[3e4c0a47c52ee7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d9ba +0  6D090000
[3e4c0a47c52fb74] jit-backend-dump}
[3e4c0a47c532d88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9052 +0  0A440100
[3e4c0a47c533a72] jit-backend-dump}
[3e4c0a47c537ea0] jit-backend}
[3e4c0a47c53be12] {jit-log-opt-bridge
# bridge out of Guard 0x2f648d8 with 329 ops
[p0, i1, p2, f3, p4]
+630: guard_not_invalidated(descr=<Guard0x30af460>) [p0, i1, p2, f3, p4]
+630: p5 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+641: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x30bb2b0>) [p0, i1, p2, f3, p4]
+650: p7 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+654: guard_nonnull_class(p7, ConstClass(W_Flonum), descr=<Guard0x30af940>) [p0, i1, p2, f3, p4]
+674: f9 = getfield_gc_f(p7, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+680: f11 = float_sub(0.000000, f9)
debug_merge_point(0, 0, '(let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))')
debug_merge_point(0, 0, '(< AppRand16 AppRand17)')
+700: i12 = float_lt(f3, f11)
+705: guard_true(i12, descr=<Guard0x30bb268>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))')
debug_merge_point(0, 0, '(let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))))))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+711: p13 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+715: guard_nonnull_class(p13, ConstClass(W_Vector), descr=<Guard0x30af8e0>) [p0, i1, p2, f3, p4]
+735: i16 = int_ge(i1, 0)
+739: guard_true(i16, descr=<Guard0x30bb220>) [p0, i1, p2, f3, p4]
+745: i17 = getfield_gc_i(p13, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+749: i18 = int_lt(i1, i17)
+752: guard_true(i18, descr=<Guard0x30bb1d8>) [p0, i1, p2, f3, p4]
+758: p19 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+762: guard_class(p19, 16623792, descr=<Guard0x30bb190>) [p0, i1, p2, f3, p4]
+775: p21 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+779: i22 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand18 0)')
+784: p23 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+788: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x30af880>) [p0, i1, p2, f3, p4]
+807: p25 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+807: i27 = int_ge(i22, 0)
+811: guard_true(i27, descr=<Guard0x30bb148>) [p0, i1, p2, f3, p4]
+817: i28 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+821: i29 = int_lt(i22, i28)
+824: guard_true(i29, descr=<Guard0x30bb100>) [p0, i1, p2, f3, p4]
+830: p30 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+834: guard_class(p30, 16622984, descr=<Guard0x30bb0b8>) [p0, i1, p2, f3, p4]
+847: p32 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+851: p33 = getarrayitem_gc_r(p32, i22, descr=<ArrayP 8>)
+856: guard_class(p33, ConstClass(W_Vector), descr=<Guard0x30bb070>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+869: i35 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+873: i37 = int_lt(0, i35)
+877: guard_true(i37, descr=<Guard0x30bb028>) [p0, i1, p2, f3, p4]
+883: p38 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+887: guard_class(p38, 16612728, descr=<Guard0x30bafe0>) [p0, i1, p2, f3, p4]
+901: p40 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+905: f42 = getarrayitem_gc_f(p40, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand19)')
+911: f44 = float_sub(0.000000, f42)
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+931: i45 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand21 CellRef(kp))')
+936: p46 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+940: p47 = getfield_gc_r(p46, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+944: guard_nonnull_class(p47, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30af820>) [p0, i1, p2, f3, p4]
+963: i49 = getfield_gc_i(p47, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+967: i51 = int_ge(i45, 0)
+971: guard_true(i51, descr=<Guard0x30baf98>) [p0, i1, p2, f3, p4]
+977: i52 = int_lt(i45, i28)
+980: guard_true(i52, descr=<Guard0x30baf50>) [p0, i1, p2, f3, p4]
+986: p53 = getarrayitem_gc_r(p32, i45, descr=<ArrayP 8>)
+991: guard_class(p53, ConstClass(W_Vector), descr=<Guard0x30baf08>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1004: i56 = int_ge(i49, 0)
+1008: guard_true(i56, descr=<Guard0x30baec0>) [p0, i1, p2, f3, p4]
+1014: i57 = getfield_gc_i(p53, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1018: i58 = int_lt(i49, i57)
+1021: guard_true(i58, descr=<Guard0x30bae78>) [p0, i1, p2, f3, p4]
+1027: p59 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1031: guard_class(p59, 16612728, descr=<Guard0x30bae30>) [p0, i1, p2, f3, p4]
+1045: p61 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1049: f62 = getarrayitem_gc_f(p61, i49, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(/ AppRand20 AppRand22)')
+1056: i64 = float_eq(f62, 0.000000)
+1077: guard_false(i64, descr=<Guard0x30bade8>) [p0, i1, p2, f3, p4]
+1083: f65 = float_truediv(f44, f62)
debug_merge_point(0, 0, '(let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))')
debug_merge_point(0, 0, '(< q CellRef(q1))')
+1088: p66 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1092: p67 = getfield_gc_r(p66, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1096: guard_nonnull_class(p67, ConstClass(W_CellFloatStrategy), descr=<Guard0x30af7c0>) [p0, i1, p2, f3, p4]
+1116: f69 = getfield_gc_f(p67, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1122: i70 = float_lt(f65, f69)
+1127: guard_false(i70, descr=<Guard0x30bada0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))')
debug_merge_point(0, 0, '(let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))')
debug_merge_point(0, 0, '(= q CellRef(q1))')
+1133: i71 = float_eq(f65, f69)
+1144: guard_false(i71, descr=<Guard0x30bad58>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+1150: p72 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1161: guard_nonnull_class(p72, ConstClass(ForwardLink), descr=<Guard0x30af760>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(+ i5080 1)')
+1180: i75 = int_add(i1, 1)
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+1185: p76 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+1189: guard_nonnull_class(p76, ConstClass(W_Fixnum), descr=<Guard0x30af700>) [p0, i1, p2, f3, p4]
+1208: i78 = getfield_gc_i(p76, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1212: i79 = int_eq(i75, i78)
+1215: guard_true(i79, descr=<Guard0x30bad10>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(void)')
+1221: p80 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1232: guard_value(p80, ConstPtr(ptr81), descr=<Guard0x30bacc8>) [p0, i1, p2, f3, p4]
+1241: p82 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1245: p83 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476))) from (void)')
+1249: guard_class(p82, 16480328, descr=<Guard0x30bac80>) [p0, i1, p2, f3, p4]
+1262: p85 = getfield_gc_r(p82, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1273: guard_value(p85, ConstPtr(ptr86), descr=<Guard0x30bac38>) [p0, i1, p2, f3, p4]
+1282: p87 = getfield_gc_r(p82, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_3 48 pure>)
+1286: p88 = getfield_gc_r(p87, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1290: guard_nonnull_class(p88, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30af6a0>) [p0, i1, p2, f3, p4]
+1309: i90 = getfield_gc_i(p88, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1313: i91 = int_is_zero(i90)
+1316: guard_false(i91, descr=<Guard0x30babf0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476))')
+1322: guard_class(p83, 16435208, descr=<Guard0x30baba8>) [p0, i1, p2, f3, p4]
+1335: p93 = getfield_gc_r(p83, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1339: guard_nonnull_class(p93, ConstClass(ForwardLink), descr=<Guard0x30af640>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(simp3 #f)')
+1358: p95 = getfield_gc_r(p82, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_4 56 pure>)
+1362: guard_nonnull_class(p95, 16479200, descr=<Guard0x30af5e0>) [p0, i1, p2, f3, p4]
+1381: p97 = getfield_gc_r(p95, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1392: guard_value(p97, ConstPtr(ptr98), descr=<Guard0x30bab60>) [p0, i1, p2, f3, p4]
+1401: p99 = getfield_gc_r(p82, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))))')
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) CellRef(kp))')
+1401: p100 = getfield_gc_r(p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1405: guard_nonnull_class(p100, ConstClass(W_Vector), descr=<Guard0x30af580>) [p0, i1, p2, f3, p4]
+1423: p102 = getfield_gc_r(p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1427: p103 = getfield_gc_r(p102, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1431: guard_nonnull_class(p103, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30af520>) [p0, i1, p2, f3, p4]
+1449: i105 = getfield_gc_i(p103, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1453: p106 = getfield_gc_r(p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1457: p107 = getfield_gc_r(p106, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1461: guard_nonnull_class(p107, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30af4c0>) [p0, i1, p2, f3, p4]
+1479: i109 = getfield_gc_i(p107, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1490: p110 = getfield_gc_r(p95, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1501: i112 = int_ge(i105, 0)
+1505: guard_true(i112, descr=<Guard0x30bab18>) [p0, i1, p2, f3, p4]
+1511: i113 = getfield_gc_i(p100, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1536: i114 = int_lt(i105, i113)
+1539: guard_true(i114, descr=<Guard0x30baad0>) [p0, i1, p2, f3, p4]
+1545: p115 = getfield_gc_r(p100, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1549: guard_class(p115, 16622984, descr=<Guard0x30baa88>) [p0, i1, p2, f3, p4]
+1561: p117 = getfield_gc_r(p100, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1565: p118 = getarrayitem_gc_r(p117, i105, descr=<ArrayP 8>)
+1577: guard_class(p118, ConstClass(W_Vector), descr=<Guard0x30baa40>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1589: i121 = int_ge(i109, 0)
+1593: guard_true(i121, descr=<Guard0x30ba9f8>) [p0, i1, p2, f3, p4]
+1599: i122 = getfield_gc_i(p118, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1610: i123 = int_lt(i109, i122)
+1613: guard_true(i123, descr=<Guard0x30ba9b0>) [p0, i1, p2, f3, p4]
+1619: p124 = getfield_gc_r(p118, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1623: guard_class(p124, 16612728, descr=<Guard0x30bb2f8>) [p0, i1, p2, f3, p4]
+1635: p126 = getfield_gc_r(p118, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1639: f127 = getarrayitem_gc_f(p126, i109, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))')
debug_merge_point(0, 0, '(/ AppRand41)')
+1646: i129 = float_eq(f127, 0.000000)
+1667: guard_false(i129, descr=<Guard0x30bb340>) [p0, i1, p2, f3, p4]
+1673: f131 = float_truediv(1.000000, f127)
debug_merge_point(0, 0, '(let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))')
debug_merge_point(0, 0, '(lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))')
+1693: p132 = getfield_gc_r(p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1697: p133 = getfield_gc_r(p95, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1701: guard_class(p110, 16505296, descr=<Guard0x30bb388>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(doloop5167 0)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 0)')
debug_merge_point(0, 0, '(if one?5161 2 1)')
debug_merge_point(0, 0, '1')
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+1713: guard_nonnull_class(p133, ConstClass(W_Fixnum), descr=<Guard0x30afb80>) [p0, i1, p2, f3, p4]
+1731: i136 = getfield_gc_i(p133, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1742: i138 = int_add_ovf(i136, 1)
+1746: guard_no_overflow(descr=<Guard0x30bb3d0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+1752: i140 = int_eq(0, i138)
+1756: guard_false(i140, descr=<Guard0x30bb418>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+1762: i141 = int_eq(0, i105)
+1770: guard_false(i141, descr=<Guard0x30bb460>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1776: p142 = getarrayitem_gc_r(p117, 0, descr=<ArrayP 8>)
+1780: guard_class(p142, ConstClass(W_Vector), descr=<Guard0x30bb4a8>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1792: i144 = getfield_gc_i(p142, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1803: i145 = int_lt(i109, i144)
+1810: guard_true(i145, descr=<Guard0x30bb4f0>) [p0, i1, p2, f3, p4]
+1816: p146 = getfield_gc_r(p142, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1820: guard_class(p146, 16612728, descr=<Guard0x30bb538>) [p0, i1, p2, f3, p4]
+1833: p148 = getfield_gc_r(p142, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1837: f149 = getarrayitem_gc_f(p148, i109, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+1851: f150 = float_mul(f131, f149)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1861: setarrayitem_gc(p148, i109, f150, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+1868: guard_nonnull_class(p132, ConstClass(W_Fixnum), descr=<Guard0x30afbe0>) [p132, p83, p82, p95, f131, p133, p100, p102, p106, p110, p93, None, None, None, None, None]
+1886: i153 = getfield_gc_i(p132, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1890: i155 = int_add_ovf(i153, 1)
+1894: guard_no_overflow(descr=<Guard0x30bb580>) [p132, p83, p82, p95, f131, p133, p100, p102, p106, p110, p93, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+1900: i157 = int_eq(0, i155)
+1904: guard_false(i157, descr=<Guard0x30bb5c8>) [p132, p83, p82, p95, f131, p133, p100, p102, p106, p110, p93, None, None, None, None, None]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+1910: i158 = int_eq(0, i109)
+1914: guard_false(i158, descr=<Guard0x30bb610>) [p132, p83, p82, p95, f131, p133, p100, p102, p106, p110, p93, None, None, None, None, None]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1920: f159 = getarrayitem_gc_f(p148, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1926: p160 = getarrayitem_gc_r(p117, i105, descr=<ArrayP 8>)
+1938: guard_class(p160, ConstClass(W_Vector), descr=<Guard0x30bb658>) [p132, p83, p82, p95, f131, p133, p100, p102, p106, p110, p93, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1952: i162 = getfield_gc_i(p160, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1956: i163 = int_lt(0, i162)
+1960: guard_true(i163, descr=<Guard0x30bb6a0>) [p132, p83, p82, p95, f131, p133, p100, p102, p106, p110, p93, None, None, None, None, None]
+1966: p164 = getfield_gc_r(p160, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1970: guard_class(p164, 16612728, descr=<Guard0x30bb6e8>) [p132, p83, p82, p95, f131, p133, p100, p102, p106, p110, p93, None, None, None, None, None]
+1982: p166 = getfield_gc_r(p160, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1986: f167 = getarrayitem_gc_f(p166, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1991: f168 = getarrayitem_gc_f(p148, i109, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+1998: f169 = float_mul(f167, f168)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+2003: f170 = float_sub(f159, f169)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+2008: setarrayitem_gc(p148, 0, f170, descr=<ArrayF 8>)
+2014: p171 = new_with_vtable(descr=<SizeDescr 64>)
+2061: p172 = new_with_vtable(descr=<SizeDescr 40>)
+2072: p173 = new_with_vtable(descr=<SizeDescr 24>)
+2083: p174 = new_with_vtable(descr=<SizeDescr 80>)
+2094: setfield_gc(p174, p110, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2112: setfield_gc(p174, ConstPtr(ptr175), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2116: setfield_gc(p174, p132, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+2120: setfield_gc(p174, p106, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+2131: setfield_gc(p174, p102, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+2149: setfield_gc(p174, p133, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+2153: setfield_gc(p174, p100, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+2178: setfield_gc(p174, ConstPtr(ptr176), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+2182: p177 = new_with_vtable(descr=<SizeDescr 16>)
+2194: setfield_gc(p177, f131, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+2201: setfield_gc(p174, p177, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+2205: setfield_gc(p173, p174, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2209: setfield_gc(p173, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+2217: p178 = new_with_vtable(descr=<SizeDescr 40>)
+2229: setfield_gc(p178, p93, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2240: p179 = new_with_vtable(descr=<SizeDescr 24>)
+2258: p180 = new_with_vtable(descr=<SizeDescr 24>)
+2276: setfield_gc(p180, p95, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2280: setfield_gc(p180, ConstPtr(ptr181), descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2284: setfield_gc(p179, p180, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2288: setfield_gc(p179, f131, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+2294: setfield_gc(p178, p179, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2298: p182 = new_with_vtable(descr=<SizeDescr 40>)
+2309: setfield_gc(p182, p93, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2313: setfield_gc(p182, p82, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2317: setfield_gc(p182, p83, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2328: setfield_gc(p182, ConstPtr(ptr183), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2332: setfield_gc(p178, p182, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2343: setfield_gc(p178, ConstPtr(ptr184), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2347: i185 = arraylen_gc(p117, descr=<ArrayP 8>)
+2354: setfield_gc(p171, ConstPtr(ptr186), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2365: setfield_gc(p171, p110, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2369: setfield_gc(p172, p93, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2387: setfield_gc(p172, ConstPtr(ptr187), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2391: setfield_gc(p172, p173, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2395: setfield_gc(p172, p178, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2399: setfield_gc(p171, p100, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2403: setfield_gc(p171, p106, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2407: setfield_gc(p171, p132, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2425: setfield_gc(p171, ConstPtr(ptr188), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2429: setfield_gc(p171, p102, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2433: jump(p171, 1, p172, p93, p132, i155, p106, p107, i109, ConstPtr(ptr188), p100, p117, 0, p102, p103, i105, descr=TargetToken(47968112))
+2576: --end of the loop--
[3e4c0a47c6327f7] jit-log-opt-bridge}
[3e4c0a47d037de3] {jit-backend
[3e4c0a47d1c21e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0e
[3e4c0a47d1d97dd] jit-backend-dump}
[3e4c0a47d1e5909] {jit-backend-addr
Loop 47 ((let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) from (void)) has address 0x7f6e13d0ecad to 0x7f6e13d0f5c0 (bootstrap 0x7f6e13d0ec20)
       gc table: 0x7f6e13d0e910
       function: 0x7f6e13d0ec20
         resops: 0x7f6e13d0ecad
       failures: 0x7f6e13d0f5c0
            end: 0x7f6e13d0ff69
[3e4c0a47d1e964f] jit-backend-addr}
[3e4c0a47d1ee55c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ecc4 +0  2B090000
[3e4c0a47d1ef8ab] jit-backend-dump}
[3e4c0a47d1f301f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ecda +0  31090000
[3e4c0a47d1f3e76] jit-backend-dump}
[3e4c0a47d1f73b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eced +0  56090000
[3e4c0a47d1f8103] jit-backend-dump}
[3e4c0a47d1fb498] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ecff +0  60090000
[3e4c0a47d1fc19e] jit-backend-dump}
[3e4c0a47d1ff5e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ed13 +0  68090000
[3e4c0a47d200328] jit-backend-dump}
[3e4c0a47d2036e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ed2d +0  6A090000
[3e4c0a47d2043eb] jit-backend-dump}
[3e4c0a47d207629] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ed4b +0  68090000
[3e4c0a47d20832f] jit-backend-dump}
[3e4c0a47d20b4ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ed5a +0  75090000
[3e4c0a47d20c17f] jit-backend-dump}
[3e4c0a47d20f303] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ed70 +0  7B090000
[3e4c0a47d20ffc6] jit-backend-dump}
[3e4c0a47d213137] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ed81 +0  86090000
[3e4c0a47d213e34] jit-backend-dump}
[3e4c0a47d216ff8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ed9b +0  88090000
[3e4c0a47d217cd0] jit-backend-dump}
[3e4c0a47d21ae54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eda9 +0  96090000
[3e4c0a47d21bb1d] jit-backend-dump}
[3e4c0a47d21ed2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0edb6 +0  A5090000
[3e4c0a47d21fa09] jit-backend-dump}
[3e4c0a47d222b71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0edc7 +0  B0090000
[3e4c0a47d223837] jit-backend-dump}
[3e4c0a47d226984] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eddd +0  B6090000
[3e4c0a47d227643] jit-backend-dump}
[3e4c0a47d22a7b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0edeb +0  C4090000
[3e4c0a47d22b481] jit-backend-dump}
[3e4c0a47d22e5b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0edfd +0  CE090000
[3e4c0a47d22f278] jit-backend-dump}
[3e4c0a47d2323d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ee25 +0  C2090000
[3e4c0a47d2330b5] jit-backend-dump}
[3e4c0a47d23625e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ee38 +0  C5090000
[3e4c0a47d236f2d] jit-backend-dump}
[3e4c0a47d23a0a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ee47 +0  CC090000
[3e4c0a47d23ad80] jit-backend-dump}
[3e4c0a47d23dec6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ee58 +0  D1090000
[3e4c0a47d23eb89] jit-backend-dump}
[3e4c0a47d241d22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ee6c +0  D3090000
[3e4c0a47d242a04] jit-backend-dump}
[3e4c0a47d245c14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ee97 +0  BE090000
[3e4c0a47d2468d7] jit-backend-dump}
[3e4c0a47d249a17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eea9 +0  C2090000
[3e4c0a47d24a6ff] jit-backend-dump}
[3e4c0a47d24d8f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eeb6 +0  D1090000
[3e4c0a47d24e5c0] jit-backend-dump}
[3e4c0a47d2516eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eec3 +0  E0090000
[3e4c0a47d2523ba] jit-backend-dump}
[3e4c0a47d25553e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eed6 +0  E9090000
[3e4c0a47d2561e8] jit-backend-dump}
[3e4c0a47d259335] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eee0 +0  FB090000
[3e4c0a47d25a01c] jit-backend-dump}
[3e4c0a47d260443] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eeed +0  0A0A0000
[3e4c0a47d2612ac] jit-backend-dump}
[3e4c0a47d264cb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eefd +0  160A0000
[3e4c0a47d265a08] jit-backend-dump}
[3e4c0a47d268d2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ef1d +0  120A0000
[3e4c0a47d269a2e] jit-backend-dump}
[3e4c0a47d26ce50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ef35 +0  160A0000
[3e4c0a47d26db56] jit-backend-dump}
[3e4c0a47d270d48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ef43 +0  240A0000
[3e4c0a47d271a39] jit-backend-dump}
[3e4c0a47d274baa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ef4d +0  360A0000
[3e4c0a47d275892] jit-backend-dump}
[3e4c0a47d2789b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ef56 +0  490A0000
[3e4c0a47d279695] jit-backend-dump}
[3e4c0a47d27c7d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ef63 +0  580A0000
[3e4c0a47d27d4b4] jit-backend-dump}
[3e4c0a47d2805eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ef76 +0  610A0000
[3e4c0a47d2812d9] jit-backend-dump}
[3e4c0a47d284401] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ef84 +0  6F0A0000
[3e4c0a47d2850dc] jit-backend-dump}
[3e4c0a47d2881f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0ef8d +0  820A0000
[3e4c0a47d288ed0] jit-backend-dump}
[3e4c0a47d28bfe9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0efa1 +0  8A0A0000
[3e4c0a47d28ccc7] jit-backend-dump}
[3e4c0a47d28fe97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0efaf +0  980A0000
[3e4c0a47d290b7c] jit-backend-dump}
[3e4c0a47d293ca1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0efc0 +0  A30A0000
[3e4c0a47d29497c] jit-backend-dump}
[3e4c0a47d297b09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0efd6 +0  A90A0000
[3e4c0a47d2987f7] jit-backend-dump}
[3e4c0a47d29b906] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0efe6 +0  B50A0000
[3e4c0a47d29c5e8] jit-backend-dump}
[3e4c0a47d29f74d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0eff3 +0  C40A0000
[3e4c0a47d2a054b] jit-backend-dump}
[3e4c0a47d2a367c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f007 +0  CC0A0000
[3e4c0a47d2a435a] jit-backend-dump}
[3e4c0a47d2a748e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f01d +0  D20A0000
[3e4c0a47d2a8170] jit-backend-dump}
[3e4c0a47d2ab2f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f02f +0  DC0A0000
[3e4c0a47d2abfd2] jit-backend-dump}
[3e4c0a47d2af11c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f03c +0  EB0A0000
[3e4c0a47d2afe09] jit-backend-dump}
[3e4c0a47d2b2f6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f056 +0  ED0A0000
[3e4c0a47d2b3c50] jit-backend-dump}
[3e4c0a47d2b6d5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f05f +0  000B0000
[3e4c0a47d2b7a3e] jit-backend-dump}
[3e4c0a47d2baba6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f06b +0  100B0000
[3e4c0a47d2bb87e] jit-backend-dump}
[3e4c0a47d2be9a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f07f +0  180B0000
[3e4c0a47d2bf67e] jit-backend-dump}
[3e4c0a47d2c27a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f093 +0  200B0000
[3e4c0a47d2c348e] jit-backend-dump}
[3e4c0a47d2c658b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f0ae +0  210B0000
[3e4c0a47d2c72bc] jit-backend-dump}
[3e4c0a47d2ca406] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f0b7 +0  340B0000
[3e4c0a47d2cb0e7] jit-backend-dump}
[3e4c0a47d2ce1ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f0c8 +0  3F0B0000
[3e4c0a47d2ceed8] jit-backend-dump}
[3e4c0a47d2d201c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f0d8 +0  4B0B0000
[3e4c0a47d2d2cfa] jit-backend-dump}
[3e4c0a47d2d5e6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f0ea +0  550B0000
[3e4c0a47d2d6b4d] jit-backend-dump}
[3e4c0a47d2d9ca0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f0fa +0  610B0000
[3e4c0a47d2da984] jit-backend-dump}
[3e4c0a47d2dda97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f10c +0  6B0B0000
[3e4c0a47d2de77b] jit-backend-dump}
[3e4c0a47d2e189d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f11c +0  770B0000
[3e4c0a47d2e2588] jit-backend-dump}
[3e4c0a47d2e56f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f12e +0  810B0000
[3e4c0a47d2e63da] jit-backend-dump}
[3e4c0a47d2e94bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f13a +0  910B0000
[3e4c0a47d2ea1aa] jit-backend-dump}
[3e4c0a47d2ed33a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f150 +0  970B0000
[3e4c0a47d2ee058] jit-backend-dump}
[3e4c0a47d2f121c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f191 +0  720B0000
[3e4c0a47d2f1f3b] jit-backend-dump}
[3e4c0a47d2f5088] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f1ac +0  730B0000
[3e4c0a47d2f5d7e] jit-backend-dump}
[3e4c0a47d2f8f18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f1c2 +0  790B0000
[3e4c0a47d2f9c3c] jit-backend-dump}
[3e4c0a47d2fcdb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f1d0 +0  870B0000
[3e4c0a47d2fdab7] jit-backend-dump}
[3e4c0a47d300cb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f1e7 +0  8C0B0000
[3e4c0a47d3019a3] jit-backend-dump}
[3e4c0a47d304afc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f226 +0  690B0000
[3e4c0a47d3057dd] jit-backend-dump}
[3e4c0a47d308924] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f240 +0  6B0B0000
[3e4c0a47d309602] jit-backend-dump}
[3e4c0a47d30c758] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f259 +0  6E0B0000
[3e4c0a47d30d42d] jit-backend-dump}
[3e4c0a47d310598] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f270 +0  730B0000
[3e4c0a47d31127a] jit-backend-dump}
[3e4c0a47d31437a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f292 +0  6D0B0000
[3e4c0a47d315055] jit-backend-dump}
[3e4c0a47d31811b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f29c +0  7F0B0000
[3e4c0a47d318e03] jit-backend-dump}
[3e4c0a47d31bf12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f2b0 +0  870B0000
[3e4c0a47d31cbf1] jit-backend-dump}
[3e4c0a47d31fce5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f2c7 +0  8C0B0000
[3e4c0a47d3209c0] jit-backend-dump}
[3e4c0a47d323adc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f2eb +0  840B0000
[3e4c0a47d3247b7] jit-backend-dump}
[3e4c0a47d3278dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f315 +0  760B0000
[3e4c0a47d3285c4] jit-backend-dump}
[3e4c0a47d32b6be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f332 +0  750B0000
[3e4c0a47d32c39f] jit-backend-dump}
[3e4c0a47d32f490] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f347 +0  7C0B0000
[3e4c0a47d330178] jit-backend-dump}
[3e4c0a47d333284] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f355 +0  8A0B0000
[3e4c0a47d333f5f] jit-backend-dump}
[3e4c0a47d33704a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f36a +0  910B0000
[3e4c0a47d337d2c] jit-backend-dump}
[3e4c0a47d33ae4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f373 +0  A40B0000
[3e4c0a47d33bb29] jit-backend-dump}
[3e4c0a47d33ec1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f392 +0  A10B0000
[3e4c0a47d33f917] jit-backend-dump}
[3e4c0a47d342a29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0f53c +0  0D0A0000
[3e4c0a47d343717] jit-backend-dump}
[3e4c0a47d347472] jit-backend}
[3e4c0a47d34b333] {jit-log-opt-loop
# Loop 47 ((let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) from (void)) : entry bridge with 377 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) from (void)')
+933: guard_class(p1, 16435208, descr=<Guard0x30afc40>) [p0, p1]
+952: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+956: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x30afca0>) [p0, p1]
debug_merge_point(0, 0, '(<= CellRef(bmax) *epsilon*)')
+974: guard_not_invalidated(descr=<Guard0x30bb730>) [p0, p1]
+974: guard_class(p0, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x30bb778>) [p0, p1]
+993: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+997: i7 = arraylen_gc(p6, descr=<ArrayP 8>)
+1001: i9 = int_eq(20, i7)
+1005: guard_false(i9, descr=<Guard0x30bb7c0>) [p0, p1]
+1011: p10 = getfield_gc_r(p0, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1022: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x30bb808>) [p0, p1]
+1031: p13 = getarrayitem_gc_pure_r(p6, 3, descr=<ArrayP 8>)
+1035: p14 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1039: guard_nonnull_class(p14, ConstClass(W_CellFloatStrategy), descr=<Guard0x30afd00>) [p0, p1]
+1057: f16 = getfield_gc_f(p14, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1062: p18 = getarrayitem_gc_pure_r(p6, 15, descr=<ArrayP 8>)
+1069: guard_nonnull_class(p18, ConstClass(W_Flonum), descr=<Guard0x30afd60>) [p0, p1]
+1087: f20 = getfield_gc_f(p18, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1092: i21 = float_le(f16, f20)
+1096: guard_true(i21, descr=<Guard0x30bb850>) [p0, p1]
debug_merge_point(0, 0, '(if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))')
debug_merge_point(0, 0, '(let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)))))))))))')
debug_merge_point(0, 0, '(+ m 1)')
+1102: p23 = getarrayitem_gc_pure_r(p6, 13, descr=<ArrayP 8>)
+1106: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x30afdc0>) [p0, p1]
+1124: i25 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1128: i27 = int_add_ovf(i25, 1)
+1135: guard_no_overflow(descr=<Guard0x30bb898>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand80 0)')
+1141: p29 = getarrayitem_gc_pure_r(p6, 18, descr=<ArrayP 8>)
+1148: guard_nonnull_class(p29, ConstClass(W_Vector), descr=<Guard0x30afe20>) [p0, p1]
+1167: p31 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1171: i33 = int_ge(i27, 0)
+1175: guard_true(i33, descr=<Guard0x30bb8e0>) [p0, p1]
+1181: i34 = getfield_gc_i(p29, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1185: i35 = int_lt(i27, i34)
+1188: guard_true(i35, descr=<Guard0x30bb928>) [p0, p1]
+1194: p36 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1198: guard_class(p36, 16622984, descr=<Guard0x30bb970>) [p0, p1]
+1211: p38 = getfield_gc_r(p29, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1215: p39 = getarrayitem_gc_r(p38, i27, descr=<ArrayP 8>)
+1220: guard_class(p39, ConstClass(W_Vector), descr=<Guard0x30bb9b8>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1233: i41 = getfield_gc_i(p39, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1237: i43 = int_lt(0, i41)
+1241: guard_true(i43, descr=<Guard0x30bba00>) [p0, p1]
+1247: p44 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1251: guard_class(p44, 16612728, descr=<Guard0x30bba48>) [p0, p1]
+1265: p46 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1269: f48 = getarrayitem_gc_f(p46, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1276: f50 = float_sub(0.000000, f20)
debug_merge_point(0, 0, '(let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)))))))))')
debug_merge_point(0, 0, '(< AppRand81 AppRand82)')
+1295: i51 = float_lt(f48, f50)
+1299: guard_false(i51, descr=<Guard0x30bba90>) [p0, p1]
debug_merge_point(0, 0, '(if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))')
debug_merge_point(0, 0, '(let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)))))))')
debug_merge_point(0, 0, '(+ m 1)')
debug_merge_point(0, 0, '(let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand83 0)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1305: p52 = getarrayitem_gc_r(p38, i27, descr=<ArrayP 8>)
+1310: guard_class(p52, ConstClass(W_Vector), descr=<Guard0x30bbad8>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1324: i54 = getfield_gc_i(p52, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1329: i56 = int_lt(0, i54)
+1333: guard_true(i56, descr=<Guard0x30bbb20>) [p0, p1]
+1339: p57 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1344: guard_class(p57, 16612728, descr=<Guard0x30bbb68>) [p0, p1]
+1356: p59 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1361: f61 = getarrayitem_gc_f(p59, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(<= AppRand84 *epsilon*)')
+1366: i62 = float_le(f61, f20)
+1370: guard_true(i62, descr=<Guard0x30bbbb0>) [p0, p1]
debug_merge_point(0, 0, '(if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))')
debug_merge_point(0, 0, '(let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12))')
debug_merge_point(0, 0, '(lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))')
+1376: p64 = getarrayitem_gc_pure_r(p6, 0, descr=<ArrayP 8>)
+1376: p66 = getarrayitem_gc_pure_r(p6, 1, descr=<ArrayP 8>)
+1380: p68 = getarrayitem_gc_pure_r(p6, 4, descr=<ArrayP 8>)
+1384: p70 = getarrayitem_gc_pure_r(p6, 8, descr=<ArrayP 8>)
+1388: p72 = getarrayitem_gc_pure_r(p6, 11, descr=<ArrayP 8>)
+1388: p74 = getarrayitem_gc_pure_r(p6, 12, descr=<ArrayP 8>)
+1392: p76 = getarrayitem_gc_pure_r(p6, 16, descr=<ArrayP 8>)
+1399: p78 = getarrayitem_gc_pure_r(p6, 17, descr=<ArrayP 8>)
+1406: guard_class(p31, 16505296, descr=<Guard0x30bbbf8>) [p0, p1]
debug_merge_point(0, 0, '(loop5316 m12)')
+1419: guard_nonnull_class(p66, ConstClass(W_Fixnum), descr=<Guard0x30afe80>) [p0, p1]
+1437: i81 = getfield_gc_i(p66, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))) from (loop5316 m12)')
debug_merge_point(0, 0, '(<= ip1 m)')
+1441: i82 = int_le(i81, i25)
+1444: guard_true(i82, descr=<Guard0x30bbc40>) [p0, p1]
debug_merge_point(0, 0, '(if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))')
debug_merge_point(0, 0, '(let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89))))))')
debug_merge_point(0, 0, '(- ip1 1)')
+1450: i84 = int_sub_ovf(i81, 1)
+1457: guard_no_overflow(descr=<Guard0x30bbc88>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand85)')
+1463: guard_nonnull_class(p74, ConstClass(W_Vector), descr=<Guard0x30afee0>) [p0, p1]
+1482: i87 = int_ge(i84, 0)
+1486: guard_true(i87, descr=<Guard0x30bbcd0>) [p0, p1]
+1492: i88 = getfield_gc_i(p74, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1496: i89 = int_lt(i84, i88)
+1499: guard_true(i89, descr=<Guard0x30bbd18>) [p0, p1]
+1505: p90 = getfield_gc_r(p74, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1509: guard_class(p90, 16623792, descr=<Guard0x30bbd60>) [p0, p1]
+1521: p92 = getfield_gc_r(p74, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1525: i93 = getarrayitem_gc_i(p92, i84, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(+ CellRef(ip) n -1)')
+1530: p94 = getfield_gc_r(p70, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1534: guard_nonnull_class(p94, ConstClass(W_CellIntegerStrategy), descr=<Guard0x30aff40>) [p0, p1]
+1553: i96 = getfield_gc_i(p94, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1557: guard_nonnull_class(p68, ConstClass(W_Fixnum), descr=<Guard0x30affa0>) [p0, p1]
+1577: i98 = getfield_gc_i(p68, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1582: i99 = int_add_ovf(i96, i98)
+1585: guard_no_overflow(descr=<Guard0x30bbda8>) [p0, p1]
+1591: i101 = int_add_ovf(i99, -1)
+1595: guard_no_overflow(descr=<Guard0x30bbdf0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89))))')
debug_merge_point(0, 0, '(= AppRand86 AppRand87)')
+1601: i102 = int_eq(i93, i101)
+1604: guard_false(i102, descr=<Guard0x30bbe38>) [p0, p1]
debug_merge_point(0, 0, '(if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))')
debug_merge_point(0, 0, '(let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89))')
debug_merge_point(0, 0, '(+ ip1 1)')
+1610: i104 = int_add(i81, 1)
debug_merge_point(0, 0, '(loop5316 AppRand89)')
debug_merge_point(0, 0, '(let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))) from (loop5316 AppRand89)')
debug_merge_point(0, 0, '(<= ip1 m)')
+1614: i105 = int_le(i104, i25)
+1617: guard_false(i105, descr=<Guard0x30bbe80>) [p0, p1]
debug_merge_point(0, 0, '(if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))')
debug_merge_point(0, 0, '(let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97))')
debug_merge_point(0, 0, '(lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))')
debug_merge_point(0, 0, '(+ m1 1)')
+1623: guard_nonnull_class(p78, ConstClass(W_Fixnum), descr=<Guard0x315a020>) [p0, p1]
+1642: i107 = getfield_gc_i(p78, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1646: i109 = int_add_ovf(i107, 1)
+1650: guard_no_overflow(descr=<Guard0x30bbec8>) [p0, p1]
debug_merge_point(0, 0, '(doloop5335 AppRand97)')
debug_merge_point(0, 0, '(let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))) from (doloop5335 AppRand97)')
debug_merge_point(0, 0, '(>= i5337 m12)')
+1656: i110 = int_ge(i109, i81)
+1659: guard_false(i110, descr=<Guard0x30bbf10>) [p0, p1]
debug_merge_point(0, 0, '(if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))')
debug_merge_point(0, 0, '(let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96)))')
debug_merge_point(0, 0, '(+ m1 1)')
debug_merge_point(0, 0, '(let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void))))')
debug_merge_point(0, 0, '(- i5337 AppRand90)')
debug_merge_point(0, 0, '(let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))')
debug_merge_point(0, 0, '(vector-ref l3 AppRand91)')
+1665: guard_nonnull_class(p76, ConstClass(W_Vector), descr=<Guard0x315a080>) [p0, p1]
+1685: i112 = getfield_gc_i(p76, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1689: i114 = int_lt(0, i112)
+1693: guard_true(i114, descr=<Guard0x30bbf58>) [p0, p1]
+1699: p115 = getfield_gc_r(p76, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1703: guard_class(p115, 16622984, descr=<Guard0x30bbfa0>) [p0, p1]
+1716: p117 = getfield_gc_r(p76, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1720: p118 = getarrayitem_gc_r(p117, 0, descr=<ArrayP 8>)
+1724: guard_class(p118, ConstClass(W_Bool), descr=<Guard0x315e020>) [p0, p1]
debug_merge_point(0, 0, '(if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void))')
+1745: i121 = instance_ptr_eq(p118, ConstPtr(ptr120))
+1748: guard_true(i121, descr=<Guard0x315e068>) [p0, p1]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))')
debug_merge_point(0, 0, '(+ i5337 1)')
+1754: i123 = int_add(i109, 1)
debug_merge_point(0, 0, '(doloop5335 AppRand96)')
debug_merge_point(0, 0, '(let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))) from (doloop5335 AppRand96)')
debug_merge_point(0, 0, '(>= i5337 m12)')
+1758: i124 = int_ge(i123, i81)
+1761: guard_true(i124, descr=<Guard0x315e0b0>) [p0, p1]
debug_merge_point(0, 0, '(if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))')
debug_merge_point(0, 0, '(void)')
+1767: p125 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1778: guard_value(p125, ConstPtr(ptr126), descr=<Guard0x315e0f8>) [p0, p1]
+1787: p127 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1791: p128 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)) from (void)')
+1795: guard_class(p127, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x315e140>) [p0, p1]
+1809: p130 = getfield_gc_r(p127, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1813: i131 = arraylen_gc(p130, descr=<ArrayP 8>)
+1817: i133 = int_eq(20, i131)
+1821: guard_false(i133, descr=<Guard0x315e188>) [p0, p1]
+1827: p134 = getfield_gc_r(p127, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1831: guard_value(p134, ConstPtr(ptr135), descr=<Guard0x315e1d0>) [p0, p1]
+1840: p137 = getarrayitem_gc_pure_r(p130, 0, descr=<ArrayP 8>)
+1844: p138 = getfield_gc_r(p137, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1848: guard_nonnull_class(p138, ConstClass(W_Bool), descr=<Guard0x315a0e0>) [p0, p1]
+1866: i141 = instance_ptr_eq(p138, ConstPtr(ptr140))
+1869: guard_true(i141, descr=<Guard0x315e218>) [p0, p1]
debug_merge_point(0, 0, '(void)')
+1875: guard_class(p128, 16435208, descr=<Guard0x315e260>) [p0, p1]
+1887: p143 = getfield_gc_r(p128, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1898: guard_value(p143, ConstPtr(ptr144), descr=<Guard0x315e2a8>) [p0, p1]
+1907: p145 = getfield_gc_r(p128, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1911: p146 = getfield_gc_r(p128, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if CellRef(pass2?) (let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476)) #f)')
+1915: guard_class(p145, 16501424, descr=<Guard0x315e2f0>) [p0, p1]
+1927: p148 = getfield_gc_r(p145, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_1 24 pure>)
+1931: p149 = getfield_gc_r(p148, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1935: guard_nonnull_class(p149, ConstClass(W_Bool), descr=<Guard0x315a140>) [p0, p1]
+1954: i152 = instance_ptr_eq(p149, ConstPtr(ptr151))
+1957: guard_false(i152, descr=<Guard0x315e338>) [p0, p1]
debug_merge_point(0, 0, '(let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476))')
+1963: p153 = getfield_gc_r(p145, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1967: guard_class(p153, 16502480, descr=<Guard0x315e380>) [p0, p1]
+1980: p155 = getfield_gc_r(p153, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1984: guard_class(p155, 16504944, descr=<Guard0x315e3c8>) [p0, p1]
+1996: p157 = getfield_gc_r(p155, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2000: guard_class(p157, 16503888, descr=<Guard0x315e410>) [p0, p1]
+2014: p159 = getfield_gc_r(p157, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2018: guard_class(p159, 16503888, descr=<Guard0x315e458>) [p0, p1]
+2030: p161 = getfield_gc_r(p159, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2034: guard_class(p161, 16500016, descr=<Guard0x315e4a0>) [p0, p1]
+2048: p163 = getfield_gc_r(p161, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2052: guard_class(p163, 16500720, descr=<Guard0x315e4e8>) [p0, p1]
+2064: p165 = getfield_gc_r(p163, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2068: guard_class(p165, 16505296, descr=<Guard0x315e530>) [p0, p1]
+2082: guard_class(p146, 16435208, descr=<Guard0x315e578>) [p0, p1]
+2094: p168 = getfield_gc_r(p146, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2098: guard_nonnull_class(p168, ConstClass(ForwardLink), descr=<Guard0x315a1a0>) [p0, p1]
debug_merge_point(0, 0, '(lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))')
+2116: p170 = getfield_gc_r(p153, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_8 80 pure>)
+2120: p171 = getfield_gc_r(p153, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_5 56 pure>)
+2124: p172 = getfield_gc_r(p153, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_7 72 pure>)
+2128: p173 = getfield_gc_r(p153, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_6 64 pure>)
+2132: p174 = getfield_gc_r(p145, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_4 48 pure>)
+2136: p175 = getfield_gc_r(p145, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_3 40 pure>)
+2147: p176 = getfield_gc_r(p145, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_2 32 pure>)
+2158: p177 = getfield_gc_r(p153, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_4 48 pure>)
debug_merge_point(0, 0, '(loop5476)')
debug_merge_point(0, 0, '(simp1 0 #f) from (loop5476)')
+2162: guard_nonnull_class(p176, 16479200, descr=<Guard0x315a200>) [p0, p1]
+2181: p179 = getfield_gc_r(p176, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2199: guard_value(p179, ConstPtr(ptr180), descr=<Guard0x315e5c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0))')
debug_merge_point(0, 0, '(vector-ref l1 0)')
+2208: p181 = getfield_gc_r(p176, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2212: guard_nonnull_class(p181, ConstClass(W_Vector), descr=<Guard0x315a260>) [p0, p1]
+2230: i183 = getfield_gc_i(p181, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2234: i185 = int_lt(0, i183)
+2238: guard_true(i185, descr=<Guard0x315e608>) [p0, p1]
+2244: p186 = getfield_gc_r(p181, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2255: guard_class(p186, 16623792, descr=<Guard0x315e650>) [p0, p1]
+2267: p188 = getfield_gc_r(p181, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2285: i190 = getarrayitem_gc_i(p188, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! kp SetBang0)')
+2289: p191 = getfield_gc_r(p176, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2300: p192 = getfield_gc_r(p191, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2311: guard_nonnull_class(p192, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315a2c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm CellRef(kp))')
+2330: p194 = getfield_gc_r(p176, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2334: setfield_gc(p192, i190, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2338: guard_nonnull_class(p194, ConstClass(W_Vector), descr=<Guard0x315a320>) [p194, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2356: p196 = getfield_gc_r(p176, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2360: i197 = getfield_gc_i(p194, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2371: i199 = int_lt(0, i197)
+2375: guard_true(i199, descr=<Guard0x315e698>) [p194, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2381: p200 = getfield_gc_r(p194, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2392: guard_class(p200, 16622984, descr=<Guard0x315e6e0>) [p194, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2404: p202 = getfield_gc_r(p194, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2415: p204 = getarrayitem_gc_r(p202, 0, descr=<ArrayP 8>)
+2426: guard_class(p204, ConstClass(W_Vector), descr=<Guard0x315e728>) [p194, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2438: i207 = int_ge(i190, 0)
+2442: guard_true(i207, descr=<Guard0x315e770>) [p194, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2448: i208 = getfield_gc_i(p204, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2459: i209 = int_lt(i190, i208)
+2462: guard_true(i209, descr=<Guard0x315e7b8>) [p194, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2468: p210 = getfield_gc_r(p204, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2479: guard_class(p210, 16612728, descr=<Guard0x315e800>) [p194, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2491: p212 = getfield_gc_r(p204, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2495: f213 = getarrayitem_gc_f(p212, i190, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang1)')
+2501: p214 = getfield_gc_r(p176, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2505: p215 = getfield_gc_r(p214, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2509: guard_nonnull_class(p215, ConstClass(W_CellFloatStrategy), descr=<Guard0x315a380>) [p194, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
debug_merge_point(0, 0, '(let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1))')
debug_merge_point(0, 0, '(lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))')
+2527: p217 = getfield_gc_r(p176, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2538: setfield_gc(p215, f213, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+2543: guard_class(p196, 16505296, descr=<Guard0x315a3e0>) [p196, p194, p181, p217, p191, p214, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
debug_merge_point(0, 0, '(doloop 1)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop 1)')
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+2569: p219 = getfield_gc_r(p217, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2580: guard_nonnull_class(p219, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315a440>) [p196, p194, p181, p217, p191, p214, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2598: i221 = getfield_gc_i(p219, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2609: i223 = int_ge(1, i221)
+2613: guard_false(i223, descr=<Guard0x315e848>) [p196, p194, p181, p217, p191, p214, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+2619: i224 = int_lt(1, i183)
+2627: guard_true(i224, descr=<Guard0x315e890>) [p196, p194, p181, p217, p191, p214, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2633: i225 = getarrayitem_gc_i(p188, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2644: i227 = int_ge(i225, 0)
+2648: guard_true(i227, descr=<Guard0x315e8d8>) [p196, p194, p181, p217, p191, p214, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2654: i228 = int_lt(i225, i208)
+2657: guard_true(i228, descr=<Guard0x315e920>) [p196, p194, p181, p217, p191, p214, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
+2663: f229 = getarrayitem_gc_f(p212, i225, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+2669: f230 = float_sub(f229, f213)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+2673: i232 = float_gt(f230, 0.000000)
+2688: guard_true(i232, descr=<Guard0x315e968>) [p196, p194, p181, p217, p191, p214, p177, p175, p174, p173, p172, p171, p170, p165, p146, p176, p168]
debug_merge_point(0, 0, '(let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
debug_merge_point(0, 0, '(set! kp SetBang2)')
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
debug_merge_point(0, 0, '(let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand13)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2694: f233 = getarrayitem_gc_f(p212, i225, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang3) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+2700: setfield_gc(p215, f233, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+2712: setfield_gc(p192, i225, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2716: p234 = new_with_vtable(descr=<SizeDescr 80>)
+2767: p235 = new_with_vtable(descr=<SizeDescr 40>)
+2778: p236 = new_with_vtable(descr=<SizeDescr 88>)
+2789: setfield_gc(p236, p165, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2800: setfield_gc(p236, ConstPtr(ptr237), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2804: setfield_gc(p236, p170, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_0 24 pure>)
+2808: setfield_gc(p236, p171, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_1 32 pure>)
+2812: setfield_gc(p236, p172, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_2 40 pure>)
+2816: setfield_gc(p236, p173, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_3 48 pure>)
+2827: setfield_gc(p236, p174, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_4 56 pure>)
+2831: setfield_gc(p236, p175, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_5 64 pure>)
+2835: setfield_gc(p236, p176, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_6 72 pure>)
+2839: setfield_gc(p236, p177, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_7 80 pure>)
+2954: i238 = getfield_gc_i(p219, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2965: setfield_gc(p235, p168, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2983: setfield_gc(p234, ConstPtr(ptr239), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2987: setfield_gc(p234, p196, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+3005: setfield_gc(p235, ConstPtr(ptr240), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+3009: setfield_gc(p235, p236, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+3013: setfield_gc(p235, p146, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+3024: setfield_gc(p234, p214, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+3035: setfield_gc(p234, p191, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+3046: setfield_gc(p234, p217, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+3057: setfield_gc(p234, ConstPtr(ptr241), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+3068: setfield_gc(p234, p181, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+3086: setfield_gc(p234, ConstPtr(ptr242), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+3090: setfield_gc(p234, p194, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+3101: i244 = int_ge(i238, -9223372036854775807)
+3114: guard_true(i244, descr=<Guard0x315a4a0>) [p235, p234, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+3120: i246 = arraylen_gc(p188, descr=<ArrayS 8>)
+3120: i247 = arraylen_gc(p202, descr=<ArrayP 8>)
+3120: jump(p234, 2, p235, p168, p217, p219, i238, p181, i183, p188, ConstPtr(ptr242), p194, p202, 0, p214, p215, f233, descr=TargetToken(48739520))
+3248: --end of the loop--
[3e4c0a47d4a374e] jit-log-opt-loop}
[3e4c0a47d6dd498] {jit-backend
[3e4c0a47d72ee14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d100c0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB201000048FF042520D003034D8B6F104C8B2527FFFFFF4D39E50F85000000004D8B67204983FC01720841813C24601400000F85000000004D8B6C24084983C5010F80000000004D8B66084983FC01720841813C24900F00000F85000000004C39EA0F85000000004D8B6E204C8B25FBFEFFFF4D39E50F85000000004D8B66104D8B6E1841813C24B01E01000F85000000004D8B54240841817D00480E00000F85000000004D8B4D084983F9017207418139900F00000F85000000004D8B4424104983C0010F800000000041813A10BD00000F85000000004D8B6210488B3DC3FEFFFF4939FC0F8500000000498B7A404885FF0F84000000004C8B25BEFEFFFF4C39E70F84000000004D8B62304983FC01720841813C24601400000F8500000000498B7C24084883C7020F80000000004D8B72284D85F60F8400000000458B3E4E8B3C3DC0B9FA004981EF2C0300004983FF010F83000000004D8B7E084983FF01720741813FF08900000F8500000000498B57084C8995300100004C89AD380100004C898D400100004C89A5480100004C89B5500100004C89BD580100004989D449BB4007CF136E7F000041FFE30F1F84000000000048C7442408FFFFFF0049BB70FFD0136E7F00004C895D204D8D9B80B3FDFF41FFD3E928FEFFFFFF3554FDFFFF49BB80FFD0136E7F000041534D8D9B80B0FDFF41FFE3FF3548FDFFFF49BB90FFD0136E7F000041534D8D9B70B0FDFF41FFE3FF3534FDFFFF49BBA0FFD0136E7F000041534D8D9B60B0FDFF41FFE3FF3520FDFFFF49BBB0FFD0136E7F000041534D8D9B50B0FDFF41FFE3FF350CFDFFFF49BBC0FFD0136E7F000041534D8D9B40B0FDFF41FFE3FF35F8FCFFFF49BBD0FFD0136E7F000041534D8D9B30B0FDFF41FFE3FF35ECFCFFFF49BBE0FFD0136E7F000041534D8D9B20B0FDFF41FFE3FF35D8FCFFFF49BBF0FFD0136E7F000041534D8D9B10B0FDFF41FFE3FF35C4FCFFFF49BB0000D1136E7F000041534D8D9B00B0FDFF41FFE3FF35B0FCFFFF49BB1000D1136E7F000041534D8D9BF0AFFDFF41FFE3FF359CFCFFFF49BB2000D1136E7F000041534D8D9BE0AFFDFF41FFE3FF3588FCFFFF49BB3000D1136E7F000041534D8D9BD0AFFDFF41FFE3FF357CFCFFFF49BB4000D1136E7F000041534D8D9BC0AFFDFF41FFE3FF3568FCFFFF49BB5000D1136E7F000041534D8D9BB0AFFDFF41FFE3FF355CFCFFFF49BB6000D1136E7F000041534D8D9BA0AFFDFF41FFE3FF3548FCFFFF49BB7000D1136E7F000041534D8D9B90AFFDFF41FFE3FF3534FCFFFF49BB8000D1136E7F000041534D8D9B80AFFDFF41FFE3FF3520FCFFFF49BB9000D1136E7F000041534D8D9B70AFFDFF41FFE3FF350CFCFFFF49BBA000D1136E7F000041534D8D9B60AFFDFF41FFE3FF35F8FBFFFF49BBB000D1136E7F000041534D8D9B50AFFDFF41FFE3
[3e4c0a47d736834] jit-backend-dump}
[3e4c0a47d741aee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10184 +0  28000000
[3e4c0a47d742fe0] jit-backend-dump}
[3e4c0a47d74732e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10345 +0  28000000
[3e4c0a47d7481fc] jit-backend-dump}
[3e4c0a47d74b5e7] {jit-backend-addr
bridge out of Guard 0x2ec6728 has address 0x7f6e13d10180 to 0x7f6e13d10340
       gc table: 0x7f6e13d100c0
    jump target: 0x7f6e13d10180
         resops: 0x7f6e13d1018e
       failures: 0x7f6e13d10340
            end: 0x7f6e13d10596
[3e4c0a47d74daa8] jit-backend-addr}
[3e4c0a47d754a16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d101a6 +0  D8010000
[3e4c0a47d755a35] jit-backend-dump}
[3e4c0a47d759077] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d101be +0  DC010000
[3e4c0a47d759dba] jit-backend-dump}
[3e4c0a47d75d18c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d101cd +0  E9010000
[3e4c0a47d75de7d] jit-backend-dump}
[3e4c0a47d76104d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d101e5 +0  ED010000
[3e4c0a47d761d2f] jit-backend-dump}
[3e4c0a47d764e8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d101ee +0  00020000
[3e4c0a47d765b54] jit-backend-dump}
[3e4c0a47d768c7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10202 +0  08020000
[3e4c0a47d76994b] jit-backend-dump}
[3e4c0a47d76cb2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10218 +0  0E020000
[3e4c0a47d76d81b] jit-backend-dump}
[3e4c0a47d770989] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1022b +0  17020000
[3e4c0a47d771652] jit-backend-dump}
[3e4c0a47d774790] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10242 +0  1C020000
[3e4c0a47d775474] jit-backend-dump}
[3e4c0a47d7785dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10251 +0  29020000
[3e4c0a47d7792c1] jit-backend-dump}
[3e4c0a47d77c423] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1025e +0  38020000
[3e4c0a47d77d148] jit-backend-dump}
[3e4c0a47d780386] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10272 +0  40020000
[3e4c0a47d7810c0] jit-backend-dump}
[3e4c0a47d784241] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1027f +0  4F020000
[3e4c0a47d784f62] jit-backend-dump}
[3e4c0a47d7881a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1028f +0  5B020000
[3e4c0a47d788e9b] jit-backend-dump}
[3e4c0a47d78c06b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d102a7 +0  5F020000
[3e4c0a47d78cd31] jit-backend-dump}
[3e4c0a47d78fe62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d102b6 +0  6C020000
[3e4c0a47d790b37] jit-backend-dump}
[3e4c0a47d793cec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d102c3 +0  7B020000
[3e4c0a47d7949c7] jit-backend-dump}
[3e4c0a47d797aef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d102df +0  7B020000
[3e4c0a47d7987e0] jit-backend-dump}
[3e4c0a47d79b8dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d102f6 +0  80020000
[3e4c0a47d79c5ac] jit-backend-dump}
[3e4c0a47d79f9bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef8e2 +0  9A080200
[3e4c0a47d7a06be] jit-backend-dump}
[3e4c0a47d7a458c] jit-backend}
[3e4c0a47d7a80f4] {jit-log-opt-bridge
# bridge out of Guard 0x2ec6728 with 51 ops
[i0, p1, p2, p3]
+214: guard_not_invalidated(descr=<Guard0x315a500>) [i0, p1, p2, p3]
+214: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+225: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x315e9b0>) [i0, p1, p2, p3]
+234: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+238: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x315a560>) [i0, p1, p2, p3]
+258: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+263: i10 = int_add_ovf(i8, 1)
+267: guard_no_overflow(descr=<Guard0x315e9f8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
+273: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+277: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x315a5c0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(= kk AppRand47)')
+297: i13 = int_eq(i0, i10)
+300: guard_true(i13, descr=<Guard0x315ea40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(void)')
+306: p14 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+317: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x315ea88>) [i0, p1, p2, p3]
+326: p16 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+330: p17 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)')
+334: guard_class(p16, 16504944, descr=<Guard0x315ead0>) [i0, p1, p2, p3]
+348: p19 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+353: guard_class(p17, 16435208, descr=<Guard0x315eb18>) [i0, p1, p2, p3]
+367: p21 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+371: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x315a620>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ ii 1)')
+390: i23 = getfield_gc_i(p16, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+395: i25 = int_add_ovf(i23, 1)
+399: guard_no_overflow(descr=<Guard0x315eb60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5167 AppRand55)')
+405: guard_class(p19, 16479952, descr=<Guard0x315eba8>) [i0, p1, p2, p3]
+418: p27 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+429: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x315ebf0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+438: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+442: guard_nonnull(p29, descr=<Guard0x315a680>) [p17, i25, p19, None, None, None, None]
+458: i32 = instance_ptr_eq(p29, ConstPtr(ptr31))
+461: guard_false(i32, descr=<Guard0x315a6e0>) [p17, i25, p19, None, None, None, None]
+467: p33 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+471: guard_nonnull_class(p33, ConstClass(W_Fixnum), descr=<Guard0x315a740>) [p17, i25, p19, None, None, None, None]
+491: i35 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+496: i37 = int_add_ovf(i35, 2)
+500: guard_no_overflow(descr=<Guard0x315a7a0>) [p17, i25, p19, None, None, None, None]
+506: p38 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+510: guard_nonnull(p38, descr=<Guard0x315a800>) [p17, i25, p19, None, None, None, None]
+519: guard_subclass(p38, ConstClass(W_Cell), descr=<Guard0x315a860>) [p17, i25, p19, None, None, None, None]
+547: p40 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+551: guard_nonnull_class(p40, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315a8c0>) [p17, i25, p19, None, None, None, None]
+570: i42 = getfield_gc_i(p40, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+574: jump(p19, i25, p17, p21, p33, i37, p38, p40, i42, descr=TargetToken(48737120))
+640: --end of the loop--
[3e4c0a47d7ddfc8] jit-log-opt-bridge}
[3e4c0a47d8e2fe6] {jit-backend
[3e4c0a47d92a2a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a47d932259] jit-backend-dump}
[3e4c0a47d93c20a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d107c4 +0  28000000
[3e4c0a47d93d513] jit-backend-dump}
[3e4c0a47d9410c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10985 +0  28000000
[3e4c0a47d941e39] jit-backend-dump}
[3e4c0a47d945157] {jit-backend-addr
bridge out of Guard 0x2ec66e0 has address 0x7f6e13d107c0 to 0x7f6e13d10980
       gc table: 0x7f6e13d10700
    jump target: 0x7f6e13d107c0
         resops: 0x7f6e13d107ce
       failures: 0x7f6e13d10980
            end: 0x7f6e13d10bd6
[3e4c0a47d9474e9] jit-backend-addr}
[3e4c0a47d94aadb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d107e6 +0  D8010000
[3e4c0a47d94b89c] jit-backend-dump}
[3e4c0a47d94ebbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d107fe +0  DC010000
[3e4c0a47d94f8ee] jit-backend-dump}
[3e4c0a47d952bce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1080d +0  E9010000
[3e4c0a47d9538d1] jit-backend-dump}
[3e4c0a47d956b06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10825 +0  ED010000
[3e4c0a47d9577f1] jit-backend-dump}
[3e4c0a47d95a9ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1082e +0  00020000
[3e4c0a47d95b6c1] jit-backend-dump}
[3e4c0a47d95e7c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10842 +0  08020000
[3e4c0a47d95f494] jit-backend-dump}
[3e4c0a47d9625bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10858 +0  0E020000
[3e4c0a47d963272] jit-backend-dump}
[3e4c0a47d966332] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1086b +0  17020000
[3e4c0a47d967001] jit-backend-dump}
[3e4c0a47d96a10b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10882 +0  1C020000
[3e4c0a47d96ade0] jit-backend-dump}
[3e4c0a47d96dece] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10891 +0  29020000
[3e4c0a47d96eb97] jit-backend-dump}
[3e4c0a47d971c97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1089e +0  38020000
[3e4c0a47d97299a] jit-backend-dump}
[3e4c0a47d975a5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d108b2 +0  40020000
[3e4c0a47d976738] jit-backend-dump}
[3e4c0a47d979826] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d108bf +0  4F020000
[3e4c0a47d97a4f8] jit-backend-dump}
[3e4c0a47d97d5d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d108cf +0  5B020000
[3e4c0a47d97e2b8] jit-backend-dump}
[3e4c0a47d9813b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d108e7 +0  5F020000
[3e4c0a47d982088] jit-backend-dump}
[3e4c0a47d985163] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d108f6 +0  6C020000
[3e4c0a47d985e5a] jit-backend-dump}
[3e4c0a47d988f97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10903 +0  7B020000
[3e4c0a47d989c70] jit-backend-dump}
[3e4c0a47d98ce68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1091f +0  7B020000
[3e4c0a47d98db49] jit-backend-dump}
[3e4c0a47d990d41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10936 +0  80020000
[3e4c0a47d991a2f] jit-backend-dump}
[3e4c0a47d994d28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cef8b8 +0  040F0200
[3e4c0a47d995a0c] jit-backend-dump}
[3e4c0a47d9999f0] jit-backend}
[3e4c0a47d99d4c5] {jit-log-opt-bridge
# bridge out of Guard 0x2ec66e0 with 51 ops
[i0, p1, p2, p3]
+214: guard_not_invalidated(descr=<Guard0x315a920>) [i0, p1, p2, p3]
+214: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+225: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x315ec38>) [i0, p1, p2, p3]
+234: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+238: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x315a980>) [i0, p1, p2, p3]
+258: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+263: i10 = int_add_ovf(i8, 1)
+267: guard_no_overflow(descr=<Guard0x315ec80>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
+273: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+277: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x315a9e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(= kk AppRand47)')
+297: i13 = int_eq(i0, i10)
+300: guard_true(i13, descr=<Guard0x315ecc8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(void)')
+306: p14 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+317: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x315ed10>) [i0, p1, p2, p3]
+326: p16 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+330: p17 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)')
+334: guard_class(p16, 16504944, descr=<Guard0x315ed58>) [i0, p1, p2, p3]
+348: p19 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+353: guard_class(p17, 16435208, descr=<Guard0x315eda0>) [i0, p1, p2, p3]
+367: p21 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+371: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x315aa40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(+ ii 1)')
+390: i23 = getfield_gc_i(p16, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+395: i25 = int_add_ovf(i23, 1)
+399: guard_no_overflow(descr=<Guard0x315ede8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5167 AppRand55)')
+405: guard_class(p19, 16479952, descr=<Guard0x315ee30>) [i0, p1, p2, p3]
+418: p27 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+429: guard_value(p27, ConstPtr(ptr28), descr=<Guard0x315ee78>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+438: p29 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+442: guard_nonnull(p29, descr=<Guard0x315aaa0>) [p17, i25, p19, None, None, None, None]
+458: i32 = instance_ptr_eq(p29, ConstPtr(ptr31))
+461: guard_false(i32, descr=<Guard0x315ab00>) [p17, i25, p19, None, None, None, None]
+467: p33 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+471: guard_nonnull_class(p33, ConstClass(W_Fixnum), descr=<Guard0x315ab60>) [p17, i25, p19, None, None, None, None]
+491: i35 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+496: i37 = int_add_ovf(i35, 2)
+500: guard_no_overflow(descr=<Guard0x315abc0>) [p17, i25, p19, None, None, None, None]
+506: p38 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+510: guard_nonnull(p38, descr=<Guard0x315ac20>) [p17, i25, p19, None, None, None, None]
+519: guard_subclass(p38, ConstClass(W_Cell), descr=<Guard0x315ac80>) [p17, i25, p19, None, None, None, None]
+547: p40 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+551: guard_nonnull_class(p40, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315ace0>) [p17, i25, p19, None, None, None, None]
+570: i42 = getfield_gc_i(p40, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+574: jump(p19, i25, p17, p21, p33, i37, p38, p40, i42, descr=TargetToken(48737120))
+640: --end of the loop--
[3e4c0a47d9d4ae0] jit-log-opt-bridge}
[3e4c0a47df0e50e] {jit-backend
[3e4c0a47e00ac63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d10f
[3e4c0a47e01ab71] jit-backend-dump}
[3e4c0a47e026cc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d110e4 +0  2A000000
[3e4c0a47e02825c] jit-backend-dump}
[3e4c0a47e02c353] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11695 +0  2A000000
[3e4c0a47e02d309] jit-backend-dump}
[3e4c0a47e03083b] {jit-backend-addr
bridge out of Guard 0x2ecabc0 has address 0x7f6e13d110e0 to 0x7f6e13d11690
       gc table: 0x7f6e13d10f20
    jump target: 0x7f6e13d110e0
         resops: 0x7f6e13d110ee
       failures: 0x7f6e13d11690
            end: 0x7f6e13d11c27
[3e4c0a47e032f6c] jit-backend-addr}
[3e4c0a47e0366e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d110fb +0  D8050000
[3e4c0a47e0374ff] jit-backend-dump}
[3e4c0a47e03aa37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11116 +0  F5050000
[3e4c0a47e03b79f] jit-backend-dump}
[3e4c0a47e03eaae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1112b +0  FC050000
[3e4c0a47e03f798] jit-backend-dump}
[3e4c0a47e04293e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11143 +0  00060000
[3e4c0a47e043675] jit-backend-dump}
[3e4c0a47e0468a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11151 +0  0E060000
[3e4c0a47e0475cf] jit-backend-dump}
[3e4c0a47e04a799] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11163 +0  18060000
[3e4c0a47e04b50a] jit-backend-dump}
[3e4c0a47e04e6d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11177 +0  20060000
[3e4c0a47e04f3f9] jit-backend-dump}
[3e4c0a47e0525ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11191 +0  22060000
[3e4c0a47e0532a7] jit-backend-dump}
[3e4c0a47e056419] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1119f +0  30060000
[3e4c0a47e057103] jit-backend-dump}
[3e4c0a47e05a3ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d111b5 +0  36060000
[3e4c0a47e05b0e1] jit-backend-dump}
[3e4c0a47e05e237] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d111bf +0  48060000
[3e4c0a47e05ef3d] jit-backend-dump}
[3e4c0a47e0620cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d111cc +0  57060000
[3e4c0a47e062dc7] jit-backend-dump}
[3e4c0a47e065f2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d111dc +0  63060000
[3e4c0a47e066c13] jit-backend-dump}
[3e4c0a47e069d9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d111ff +0  5C060000
[3e4c0a47e06aa97] jit-backend-dump}
[3e4c0a47e06dbf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1120d +0  6A060000
[3e4c0a47e06e902] jit-backend-dump}
[3e4c0a47e071abd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11223 +0  70060000
[3e4c0a47e0727bd] jit-backend-dump}
[3e4c0a47e075944] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1122d +0  82060000
[3e4c0a47e076650] jit-backend-dump}
[3e4c0a47e07988c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11241 +0  8A060000
[3e4c0a47e07a579] jit-backend-dump}
[3e4c0a47e07d6fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11253 +0  94060000
[3e4c0a47e07e3f7] jit-backend-dump}
[3e4c0a47e08157e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1127c +0  87060000
[3e4c0a47e082281] jit-backend-dump}
[3e4c0a47e0854d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1128a +0  95060000
[3e4c0a47e0861de] jit-backend-dump}
[3e4c0a47e089340] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d112a2 +0  99060000
[3e4c0a47e08a02a] jit-backend-dump}
[3e4c0a47e08d196] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d112b7 +0  A0060000
[3e4c0a47e08de83] jit-backend-dump}
[3e4c0a47e090ffb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d112ce +0  A5060000
[3e4c0a47e091cef] jit-backend-dump}
[3e4c0a47e094eb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d112dc +0  B3060000
[3e4c0a47e095ba3] jit-backend-dump}
[3e4c0a47e098d95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d112ec +0  BF060000
[3e4c0a47e099a86] jit-backend-dump}
[3e4c0a47e09cbd9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11310 +0  B7060000
[3e4c0a47e09d8d9] jit-backend-dump}
[3e4c0a47e0a0a41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1132b +0  B8060000
[3e4c0a47e0a1735] jit-backend-dump}
[3e4c0a47e0a488e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1133a +0  C5060000
[3e4c0a47e0a557b] jit-backend-dump}
[3e4c0a47e0a86d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11347 +0  D4060000
[3e4c0a47e0a93c2] jit-backend-dump}
[3e4c0a47e0ac524] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11358 +0  DF060000
[3e4c0a47e0ad215] jit-backend-dump}
[3e4c0a47e0b0389] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11374 +0  DF060000
[3e4c0a47e0b1080] jit-backend-dump}
[3e4c0a47e0b42d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1137e +0  F1060000
[3e4c0a47e0b5020] jit-backend-dump}
[3e4c0a47e0b8243] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11392 +0  F9060000
[3e4c0a47e0b8f4c] jit-backend-dump}
[3e4c0a47e0bc0f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d113a3 +0  04070000
[3e4c0a47e0bcdec] jit-backend-dump}
[3e4c0a47e0bffd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d113ca +0  F9060000
[3e4c0a47e0c0cce] jit-backend-dump}
[3e4c0a47e0c3e4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d113e2 +0  FD060000
[3e4c0a47e0c4b49] jit-backend-dump}
[3e4c0a47e0c7d6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d113ff +0  FC060000
[3e4c0a47e0c8a87] jit-backend-dump}
[3e4c0a47e0cbc88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11414 +0  03070000
[3e4c0a47e0cc9d8] jit-backend-dump}
[3e4c0a47e0cfba2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11422 +0  11070000
[3e4c0a47e0d08f8] jit-backend-dump}
[3e4c0a47e0d3b02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11461 +0  EE060000
[3e4c0a47e0d4858] jit-backend-dump}
[3e4c0a47e0d7a28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1146b +0  00070000
[3e4c0a47e0d876b] jit-backend-dump}
[3e4c0a47e0dbaa7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1147f +0  08070000
[3e4c0a47e0dc7f1] jit-backend-dump}
[3e4c0a47e0dfa8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1148f +0  14070000
[3e4c0a47e0e07d4] jit-backend-dump}
[3e4c0a47e0e39fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d114b4 +0  0B070000
[3e4c0a47e0e4744] jit-backend-dump}
[3e4c0a47e0e790b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d115eb +0  EA050000
[3e4c0a47e0e8648] jit-backend-dump}
[3e4c0a47e0eb852] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d115fe +0  ED050000
[3e4c0a47e0ec59c] jit-backend-dump}
[3e4c0a47e0ef763] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11607 +0  00060000
[3e4c0a47e0f0497] jit-backend-dump}
[3e4c0a47e0f3951] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf11b0 +0  2CFF0100
[3e4c0a47e0f46a7] jit-backend-dump}
[3e4c0a47e0f87b0] jit-backend}
[3e4c0a47e0fc70d] {jit-log-opt-bridge
# bridge out of Guard 0x2ecabc0 with 201 ops
[i0, i1, i2, p3, p4, p5]
+470: guard_true(i0, descr=<Guard0x315ad40>) [i0, i1, i2, p5, p4, p3]
+479: guard_not_invalidated(descr=<Guard0x315eec0>) [i0, i1, i2, p5, p4, p3]
debug_merge_point(0, 0, '(if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133))))')
debug_merge_point(0, 0, '(void)')
+479: p6 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+497: guard_value(p6, ConstPtr(ptr7), descr=<Guard0x315ef08>) [i0, i1, i2, p5, p4, p3]
+506: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+510: p9 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+514: guard_class(p9, 16435208, descr=<Guard0x315ef50>) [i0, i1, i2, p5, p4, p3]
+527: p11 = getfield_gc_r(p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+531: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x315ada0>) [i0, i1, i2, p5, p4, p3]
debug_merge_point(0, 0, '(let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) from (void)')
debug_merge_point(0, 0, '(- CellRef(kp) 1)')
+551: guard_class(p8, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x315ef98>) [i0, i1, i2, p5, p4, p3]
+565: p14 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+569: i15 = arraylen_gc(p14, descr=<ArrayP 8>)
+573: i17 = int_eq(20, i15)
+577: guard_false(i17, descr=<Guard0x315efe0>) [i0, i1, i2, p5, p4, p3]
+583: p18 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+594: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x315f028>) [i0, i1, i2, p5, p4, p3]
+603: p21 = getarrayitem_gc_pure_r(p14, 6, descr=<ArrayP 8>)
+607: p22 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+611: guard_nonnull_class(p22, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315ae00>) [i0, i1, i2, p5, p4, p3]
+629: i24 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+633: i26 = int_sub_ovf(i24, 1)
+637: guard_no_overflow(descr=<Guard0x315f070>) [i0, i1, i2, p5, p4, p3]
debug_merge_point(0, 0, '(let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))')
debug_merge_point(0, 0, '(vector-ref izrov AppRand134)')
+643: p28 = getarrayitem_gc_pure_r(p14, 5, descr=<ArrayP 8>)
+647: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x315ae60>) [i0, i1, i2, p5, p4, p3]
+665: i31 = int_ge(i26, 0)
+669: guard_true(i31, descr=<Guard0x315f0b8>) [i0, i1, i2, p5, p4, p3]
+675: i32 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+679: i33 = int_lt(i26, i32)
+682: guard_true(i33, descr=<Guard0x315f100>) [i0, i1, i2, p5, p4, p3]
+688: p34 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+692: guard_class(p34, 16623792, descr=<Guard0x315f148>) [i0, i1, i2, p5, p4, p3]
+704: p36 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+708: i37 = getarrayitem_gc_i(p36, i26, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(- CellRef(kp) 1)')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
+713: p39 = getarrayitem_gc_pure_r(p14, 8, descr=<ArrayP 8>)
+717: p40 = getfield_gc_r(p39, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+721: guard_nonnull_class(p40, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315aec0>) [i0, i1, i2, p5, p4, p3]
+739: i42 = getfield_gc_i(p40, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+743: i44 = int_sub_ovf(i42, 1)
+747: guard_no_overflow(descr=<Guard0x315f190>) [i0, i1, i2, p5, p4, p3]
debug_merge_point(0, 0, '(let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand136)')
+753: p46 = getarrayitem_gc_pure_r(p14, 12, descr=<ArrayP 8>)
+757: guard_nonnull_class(p46, ConstClass(W_Vector), descr=<Guard0x315af20>) [i0, i1, i2, p5, p4, p3]
+775: i49 = int_ge(i44, 0)
+779: guard_true(i49, descr=<Guard0x315f1d8>) [i0, i1, i2, p5, p4, p3]
+785: i50 = getfield_gc_i(p46, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+796: i51 = int_lt(i44, i50)
+799: guard_true(i51, descr=<Guard0x315f220>) [i0, i1, i2, p5, p4, p3]
+805: p52 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+809: guard_class(p52, 16623792, descr=<Guard0x315f268>) [i0, i1, i2, p5, p4, p3]
+823: p54 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+827: i55 = getarrayitem_gc_i(p54, i44, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! izrov AppRand135 AppRand137)')
+832: setarrayitem_gc(p36, i26, i55, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t))')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
debug_merge_point(0, 0, '(vector-set! iposv AppRand138 t)')
+837: setarrayitem_gc(p54, i44, i37, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(loop5303)')
debug_merge_point(0, 0, '(let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) from (loop5303)')
debug_merge_point(0, 0, '(+ m 1)')
+842: p57 = getarrayitem_gc_pure_r(p14, 13, descr=<ArrayP 8>)
+846: guard_nonnull_class(p57, ConstClass(W_Fixnum), descr=<Guard0x315af80>) [p8, p57, p9, p11, None, None, None, None, None]
+864: i60 = getfield_gc_i(p57, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+868: i62 = int_add_ovf(i60, 1)
+872: guard_no_overflow(descr=<Guard0x315f2b0>) [p8, p57, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(simp1 AppRand79 #f)')
+878: p64 = getarrayitem_gc_pure_r(p14, 11, descr=<ArrayP 8>)
+882: guard_nonnull_class(p64, 16479200, descr=<Guard0x315afe0>) [p8, p57, p9, p11, None, None, None, None, None]
+902: p66 = getfield_gc_r(p64, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+914: guard_value(p66, ConstPtr(ptr67), descr=<Guard0x315f2f8>) [p8, p57, p9, p11, None, None, None, None, None]
+923: p68 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0))')
debug_merge_point(0, 0, '(vector-ref l1 0)')
+923: p69 = getfield_gc_r(p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+928: guard_nonnull_class(p69, ConstClass(W_Vector), descr=<Guard0x315b040>) [p8, p57, p9, p11, None, None, None, None, None]
+946: i71 = getfield_gc_i(p69, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+950: i73 = int_lt(0, i71)
+954: guard_true(i73, descr=<Guard0x315f340>) [p8, p57, p9, p11, None, None, None, None, None]
+960: p74 = getfield_gc_r(p69, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+964: guard_class(p74, 16623792, descr=<Guard0x315f388>) [p8, p57, p9, p11, None, None, None, None, None]
+976: p76 = getfield_gc_r(p69, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+980: i78 = getarrayitem_gc_i(p76, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! kp SetBang0)')
+984: p79 = getfield_gc_r(p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+989: p80 = getfield_gc_r(p79, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+993: guard_nonnull_class(p80, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315b0a0>) [p8, p57, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm CellRef(kp))')
+1012: p82 = getfield_gc_r(p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1017: setfield_gc(p80, i78, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1021: guard_nonnull_class(p82, ConstClass(W_Vector), descr=<Guard0x315b100>) [p82, p8, i62, p64, p9, p11, None, None, None, None, None]
+1039: p84 = getfield_gc_r(p64, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1044: i86 = int_ge(i62, 0)
+1048: guard_true(i86, descr=<Guard0x315f3d0>) [p82, p8, i62, p64, p9, p11, None, None, None, None, None]
+1054: i87 = getfield_gc_i(p82, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1058: i88 = int_lt(i62, i87)
+1061: guard_true(i88, descr=<Guard0x315f418>) [p82, p8, i62, p64, p9, p11, None, None, None, None, None]
+1067: p89 = getfield_gc_r(p82, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1071: guard_class(p89, 16622984, descr=<Guard0x315f460>) [p82, p8, i62, p64, p9, p11, None, None, None, None, None]
+1084: p91 = getfield_gc_r(p82, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1088: p92 = getarrayitem_gc_r(p91, i62, descr=<ArrayP 8>)
+1100: guard_class(p92, ConstClass(W_Vector), descr=<Guard0x315f4a8>) [p82, p8, i62, p64, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1112: i95 = int_ge(i78, 0)
+1116: guard_true(i95, descr=<Guard0x315f4f0>) [p82, p8, i62, p64, p9, p11, None, None, None, None, None]
+1122: i96 = getfield_gc_i(p92, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1133: i97 = int_lt(i78, i96)
+1136: guard_true(i97, descr=<Guard0x315f538>) [p82, p8, i62, p64, p9, p11, None, None, None, None, None]
+1142: p98 = getfield_gc_r(p92, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1146: guard_class(p98, 16612728, descr=<Guard0x315f580>) [p82, p8, i62, p64, p9, p11, None, None, None, None, None]
+1159: p100 = getfield_gc_r(p92, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1163: f101 = getarrayitem_gc_f(p100, i78, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang1)')
+1170: p102 = getfield_gc_r(p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1175: p103 = getfield_gc_r(p102, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1179: guard_nonnull_class(p103, ConstClass(W_CellFloatStrategy), descr=<Guard0x315b160>) [p82, p8, i62, p64, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1))')
debug_merge_point(0, 0, '(lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))')
+1198: p105 = getfield_gc_r(p64, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1203: setfield_gc(p103, f101, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1209: guard_class(p84, 16505296, descr=<Guard0x315b1c0>) [p84, p82, p69, p105, p79, p102, p8, i62, p64, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(doloop 1)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop 1)')
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+1222: p107 = getfield_gc_r(p105, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1233: guard_nonnull_class(p107, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315b220>) [p84, p82, p69, p105, p79, p102, p8, i62, p64, p9, p11, None, None, None, None, None]
+1251: i109 = getfield_gc_i(p107, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1262: i111 = int_ge(1, i109)
+1266: guard_false(i111, descr=<Guard0x315f5c8>) [p84, p82, p69, p105, p79, p102, p8, i62, p64, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+1272: i112 = int_lt(1, i71)
+1280: guard_true(i112, descr=<Guard0x315f610>) [p84, p82, p69, p105, p79, p102, p8, i62, p64, p9, p11, None, None, None, None, None]
+1286: i113 = getarrayitem_gc_i(p76, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1311: p114 = getarrayitem_gc_r(p91, i62, descr=<ArrayP 8>)
+1337: guard_class(p114, ConstClass(W_Vector), descr=<Guard0x315f658>) [p84, p82, p69, p105, p79, p102, p8, i62, p64, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1349: i117 = int_ge(i113, 0)
+1353: guard_true(i117, descr=<Guard0x315f6a0>) [p84, p82, p69, p105, p79, p102, p8, i62, p64, p9, p11, None, None, None, None, None]
+1359: i118 = getfield_gc_i(p114, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1370: i119 = int_lt(i113, i118)
+1373: guard_true(i119, descr=<Guard0x315f6e8>) [p84, p82, p69, p105, p79, p102, p8, i62, p64, p9, p11, None, None, None, None, None]
+1379: p120 = getfield_gc_r(p114, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1383: guard_class(p120, 16612728, descr=<Guard0x315f730>) [p84, p82, p69, p105, p79, p102, p8, i62, p64, p9, p11, None, None, None, None, None]
+1395: p122 = getfield_gc_r(p114, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1399: f123 = getarrayitem_gc_f(p122, i113, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+1406: f124 = float_sub(f123, f101)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+1411: i126 = float_gt(f124, 0.000000)
+1426: guard_false(i126, descr=<Guard0x315f778>) [p84, p82, p69, p105, p79, p102, p8, i62, p64, p9, p11, None, None, None, None, None]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+1432: p127 = new_with_vtable(descr=<SizeDescr 80>)
+1482: p128 = new_with_vtable(descr=<SizeDescr 16>)
+1493: setfield_gc(p128, i62, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1497: p129 = new_with_vtable(descr=<SizeDescr 40>)
+1509: i130 = arraylen_gc(p76, descr=<ArrayS 8>)
+1617: i131 = getfield_gc_i(p128, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1628: setfield_gc(p129, ConstPtr(ptr132), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1633: setfield_gc(p129, p8, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1638: setfield_gc(p129, p9, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1643: setfield_gc(p129, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1662: setfield_gc(p127, ConstPtr(ptr133), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1666: setfield_gc(p127, p84, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1670: setfield_gc(p127, p102, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+1681: setfield_gc(p127, p79, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+1685: setfield_gc(p127, p105, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+1703: setfield_gc(p127, ConstPtr(ptr134), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+1707: setfield_gc(p127, p69, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+1718: setfield_gc(p127, p128, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+1722: setfield_gc(p127, p82, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+1733: i136 = int_ge(i131, 0)
+1737: guard_true(i136, descr=<Guard0x315b280>) [p129, p127, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1743: i138 = int_le(i131, 9223372036854775806)
+1756: guard_true(i138, descr=<Guard0x315b2e0>) [p129, p127, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1762: i139 = int_lt(i131, i87)
+1765: guard_true(i139, descr=<Guard0x315b340>) [p129, p127, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1771: i140 = arraylen_gc(p91, descr=<ArrayP 8>)
+1771: jump(p127, 2, p129, p11, p105, p107, i109, p69, i71, p76, p128, p82, p91, i131, p102, p103, f101, descr=TargetToken(48739520))
+1904: --end of the loop--
[3e4c0a47e1ac183] jit-log-opt-bridge}
[3e4c0a47e4acb71] {jit-backend
[3e4c0a47e51f2a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d11e
[3e4c0a47e52a440] jit-backend-dump}
[3e4c0a47e535b63] {jit-backend-addr
Loop 51 ((let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) from (vector-ref AppRand1 j)) has address 0x7f6e13d1204d to 0x7f6e13d12330 (bootstrap 0x7f6e13d11fc0)
       gc table: 0x7f6e13d11e90
       function: 0x7f6e13d11fc0
         resops: 0x7f6e13d1204d
       failures: 0x7f6e13d12330
            end: 0x7f6e13d12720
[3e4c0a47e5388f2] jit-backend-addr}
[3e4c0a47e53d0bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12064 +0  DA020000
[3e4c0a47e53e33b] jit-backend-dump}
[3e4c0a47e541af2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1207b +0  DF020000
[3e4c0a47e542908] jit-backend-dump}
[3e4c0a47e545c7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12091 +0  E5020000
[3e4c0a47e5469ea] jit-backend-dump}
[3e4c0a47e549dd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d120b5 +0  F9020000
[3e4c0a47e54aabf] jit-backend-dump}
[3e4c0a47e54dd59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d120c5 +0  FF020000
[3e4c0a47e54ea53] jit-backend-dump}
[3e4c0a47e551c4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d120d9 +0  01030000
[3e4c0a47e55294b] jit-backend-dump}
[3e4c0a47e555b9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d120ef +0  01030000
[3e4c0a47e55689c] jit-backend-dump}
[3e4c0a47e559b54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1210d +0  FF020000
[3e4c0a47e55a857] jit-backend-dump}
[3e4c0a47e55db10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1211b +0  0D030000
[3e4c0a47e55e7f8] jit-backend-dump}
[3e4c0a47e5619cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12128 +0  1C030000
[3e4c0a47e5626af] jit-backend-dump}
[3e4c0a47e5659df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12138 +0  28030000
[3e4c0a47e5666d3] jit-backend-dump}
[3e4c0a47e5698f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1214d +0  2F030000
[3e4c0a47e56a61e] jit-backend-dump}
[3e4c0a47e56d89c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1215e +0  3A030000
[3e4c0a47e56e590] jit-backend-dump}
[3e4c0a47e5717ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12168 +0  4C030000
[3e4c0a47e5724d8] jit-backend-dump}
[3e4c0a47e575762] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12175 +0  5B030000
[3e4c0a47e57646c] jit-backend-dump}
[3e4c0a47e5796de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12193 +0  59030000
[3e4c0a47e57a40c] jit-backend-dump}
[3e4c0a47e57d6ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d121a7 +0  61030000
[3e4c0a47e57e3bb] jit-backend-dump}
[3e4c0a47e58164c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d121b7 +0  6D030000
[3e4c0a47e582362] jit-backend-dump}
[3e4c0a47e58565e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d121cd +0  73030000
[3e4c0a47e586364] jit-backend-dump}
[3e4c0a47e5895ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d121db +0  81030000
[3e4c0a47e58a2f8] jit-backend-dump}
[3e4c0a47e58d56d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d121e8 +0  90030000
[3e4c0a47e58e276] jit-backend-dump}
[3e4c0a47e591507] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d121f5 +0  9F030000
[3e4c0a47e592220] jit-backend-dump}
[3e4c0a47e595562] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d121ff +0  B1030000
[3e4c0a47e596253] jit-backend-dump}
[3e4c0a47e59951b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12215 +0  B7030000
[3e4c0a47e59a215] jit-backend-dump}
[3e4c0a47e59d4a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12223 +0  C5030000
[3e4c0a47e59e18a] jit-backend-dump}
[3e4c0a47e5a13ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12239 +0  CB030000
[3e4c0a47e5a20a4] jit-backend-dump}
[3e4c0a47e5a52dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12246 +0  DA030000
[3e4c0a47e5a5fcd] jit-backend-dump}
[3e4c0a47e5a9239] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12262 +0  DA030000
[3e4c0a47e5a9f2a] jit-backend-dump}
[3e4c0a47e5ad143] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12279 +0  DF030000
[3e4c0a47e5ade93] jit-backend-dump}
[3e4c0a47e5b111b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12287 +0  ED030000
[3e4c0a47e5b1dfc] jit-backend-dump}
[3e4c0a47e5b5068] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1229a +0  F6030000
[3e4c0a47e5b5d62] jit-backend-dump}
[3e4c0a47e5b8f76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d122a8 +0  04040000
[3e4c0a47e5b9c66] jit-backend-dump}
[3e4c0a47e5bceeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d122bf +0  09040000
[3e4c0a47e5bdbf4] jit-backend-dump}
[3e4c0a47e5c0e17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d122cc +0  18040000
[3e4c0a47e5c1aff] jit-backend-dump}
[3e4c0a47e5c4d37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d122d9 +0  27040000
[3e4c0a47e5c5a43] jit-backend-dump}
[3e4c0a47e5c976a] jit-backend}
[3e4c0a47e5cd577] {jit-log-opt-loop
# Loop 51 ((let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) from (vector-ref AppRand1 j)) : entry bridge with 95 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) from (vector-ref AppRand1 j)')
+453: guard_class(p0, 16504592, descr=<Guard0x315b3a0>) [p1, p0]
+472: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+476: guard_class(p1, 16435208, descr=<Guard0x315f7c0>) [p1, p0]
+495: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+499: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x315b400>) [p1, p0]
debug_merge_point(0, 0, '(- AppRand112)')
+517: guard_not_invalidated(descr=<Guard0x315f808>) [p1, p0]
+517: f7 = getfield_gc_f(p0, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+522: f9 = float_sub(0.000000, f7)
debug_merge_point(0, 0, '(matrix-set! a5002 i5414 CellRef(kp) AppRand113)')
+541: guard_class(p3, 16504944, descr=<Guard0x315f850>) [p1, p0]
+553: p11 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+557: guard_class(p11, 16478448, descr=<Guard0x315f898>) [p1, p0]
+569: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+580: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x315f8e0>) [p1, p0]
+589: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+593: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x315b460>) [p1, p0]
+611: i17 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+615: p18 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+619: p19 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+623: guard_nonnull_class(p19, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315b4c0>) [p1, p0]
+641: i21 = getfield_gc_i(p19, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+645: p22 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+645: i24 = int_ge(i17, 0)
+649: guard_true(i24, descr=<Guard0x315f928>) [p1, p0]
+655: i25 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+659: i26 = int_lt(i17, i25)
+662: guard_true(i26, descr=<Guard0x315f970>) [p1, p0]
+668: p27 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+672: guard_class(p27, 16622984, descr=<Guard0x315f9b8>) [p1, p0]
+684: p29 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+688: p30 = getarrayitem_gc_r(p29, i17, descr=<ArrayP 8>)
+693: guard_class(p30, ConstClass(W_Vector), descr=<Guard0x315fa00>) [p1, p0]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+705: p32 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+709: guard_class(p32, 16612728, descr=<Guard0x315fa48>) [p1, p0]
+722: i35 = int_ge(i21, 0)
+726: guard_true(i35, descr=<Guard0x315fa90>) [p1, p0]
+732: i36 = getfield_gc_i(p30, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+736: i37 = int_lt(i21, i36)
+739: guard_true(i37, descr=<Guard0x315fad8>) [p1, p0]
+745: p38 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+749: setarrayitem_gc(p38, i21, f9, descr=<ArrayF 8>)
+755: p39 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+766: guard_value(p39, ConstPtr(ptr40), descr=<Guard0x315b520>) [p39, p1]
+775: p41 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+779: p42 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)) from (vector-set! AppRand2 j4995 x)')
+783: guard_class(p41, 16504944, descr=<Guard0x315fb20>) [p39, p1]
+795: p44 = getfield_gc_r(p41, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+799: guard_class(p42, 16435208, descr=<Guard0x315fb68>) [p39, p1]
+811: p46 = getfield_gc_r(p42, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+815: guard_nonnull_class(p46, ConstClass(ForwardLink), descr=<Guard0x315b580>) [p39, p1]
debug_merge_point(0, 0, '(+ i5414 1)')
+833: i48 = getfield_gc_i(p41, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+837: i50 = int_add_ovf(i48, 1)
+841: guard_no_overflow(descr=<Guard0x315fbb0>) [p39, p1]
debug_merge_point(0, 0, '(doloop5412 AppRand114)')
+847: guard_class(p44, 16478448, descr=<Guard0x315fbf8>) [p39, p1]
+860: p52 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+864: guard_value(p52, ConstPtr(ptr53), descr=<Guard0x315fc40>) [p39, p1]
debug_merge_point(0, 0, '(let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))) from (doloop5412 AppRand114)')
+873: i55 = int_ge(i50, 1)
+877: guard_true(i55, descr=<Guard0x315b5e0>) [p42, i50, p44]
+883: p56 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+887: guard_nonnull_class(p56, ConstClass(W_Fixnum), descr=<Guard0x315b640>) [p42, i50, p44]
+905: i58 = getfield_gc_i(p56, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+909: i60 = int_add_ovf(i58, 2)
+913: guard_no_overflow(descr=<Guard0x315b6a0>) [p42, i50, p44]
+919: p61 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+923: guard_nonnull_class(p61, ConstClass(W_Vector), descr=<Guard0x315b700>) [p42, i50, p44]
+941: p63 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+945: guard_nonnull(p63, descr=<Guard0x315b760>) [p42, i50, p44]
+954: guard_subclass(p63, ConstClass(W_Cell), descr=<Guard0x315b7c0>) [p42, i50, p44]
+982: p65 = getfield_gc_r(p63, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+986: guard_nonnull_class(p65, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315b820>) [p42, i50, p44]
+1005: i67 = getfield_gc_i(p65, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1009: i69 = int_ge(i67, 0)
+1013: guard_true(i69, descr=<Guard0x315b880>) [p42, i50, p44]
+1019: i71 = int_le(i67, 9223372036854775806)
+1032: guard_true(i71, descr=<Guard0x315b8e0>) [p42, i50, p44]
+1038: p72 = getfield_gc_r(p44, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1038: i73 = getfield_gc_i(p61, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1042: i75 = int_ge(i73, 1)
+1046: guard_true(i75, descr=<Guard0x315b940>) [p42, i50, p44]
+1052: p76 = getfield_gc_r(p61, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1056: guard_nonnull_class(p76, 16622984, descr=<Guard0x315b9a0>) [p42, i50, p44]
+1075: p78 = getfield_gc_r(p61, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1079: guard_nonnull(p78, descr=<Guard0x315ba00>) [p42, i50, p44]
+1088: guard_gc_type(p78, 3592, descr=<Guard0x315ba60>) [p42, i50, p44]
+1101: i80 = arraylen_gc(p78, descr=<ArrayP 8>)
+1101: jump(p44, i50, p42, p46, p56, i60, p63, p65, p61, i73, p78, i67, descr=TargetToken(49644512))
+1184: --end of the loop--
[3e4c0a47e6246fc] jit-log-opt-loop}
[3e4c0a47ed41424] {jit-backend
[3e4c0a47ef4adbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12a
[3e4c0a47ef59592] jit-backend-dump}
[3e4c0a47ef65075] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12bf4 +0  28000000
[3e4c0a47ef6675d] jit-backend-dump}
[3e4c0a47ef6abe0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13135 +0  28000000
[3e4c0a47ef6bb53] jit-backend-dump}
[3e4c0a47ef6f275] {jit-backend-addr
bridge out of Guard 0x307d070 has address 0x7f6e13d12bf0 to 0x7f6e13d13130
       gc table: 0x7f6e13d12a50
    jump target: 0x7f6e13d12bf0
         resops: 0x7f6e13d12bfe
       failures: 0x7f6e13d13130
            end: 0x7f6e13d136b3
[3e4c0a47ef71855] jit-backend-addr}
[3e4c0a47ef751c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12c0e +0  61050000
[3e4c0a47ef76087] jit-backend-dump}
[3e4c0a47ef7956f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12c25 +0  66050000
[3e4c0a47ef7a2e0] jit-backend-dump}
[3e4c0a47ef7d5f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12c31 +0  76050000
[3e4c0a47ef7e33e] jit-backend-dump}
[3e4c0a47ef8150b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12c42 +0  81050000
[3e4c0a47ef8220e] jit-backend-dump}
[3e4c0a47ef85346] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12c56 +0  89050000
[3e4c0a47ef86018] jit-backend-dump}
[3e4c0a47ef890d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12c63 +0  98050000
[3e4c0a47ef89d9e] jit-backend-dump}
[3e4c0a47ef8ce4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12c73 +0  A4050000
[3e4c0a47ef8db27] jit-backend-dump}
[3e4c0a47ef90d74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12c8b +0  C4050000
[3e4c0a47ef91a50] jit-backend-dump}
[3e4c0a47ef94bf5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12c99 +0  D2050000
[3e4c0a47ef95917] jit-backend-dump}
[3e4c0a47ef98a11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12ca6 +0  E1050000
[3e4c0a47ef996f2] jit-backend-dump}
[3e4c0a47ef9c7f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12cc2 +0  E1050000
[3e4c0a47ef9d4d1] jit-backend-dump}
[3e4c0a47efa05c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12ccf +0  F0050000
[3e4c0a47efa12a6] jit-backend-dump}
[3e4c0a47efa436c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12ce6 +0  F5050000
[3e4c0a47efa504e] jit-backend-dump}
[3e4c0a47efa8117] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12d00 +0  F7050000
[3e4c0a47efa8df2] jit-backend-dump}
[3e4c0a47efabee0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12d12 +0  01060000
[3e4c0a47efacbcb] jit-backend-dump}
[3e4c0a47efafc6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12d26 +0  09060000
[3e4c0a47efb0963] jit-backend-dump}
[3e4c0a47efb3a35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12d3f +0  0C060000
[3e4c0a47efb4714] jit-backend-dump}
[3e4c0a47efb77f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12d5c +0  0B060000
[3e4c0a47efb84da] jit-backend-dump}
[3e4c0a47efbb5b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12d66 +0  1D060000
[3e4c0a47efbc281] jit-backend-dump}
[3e4c0a47efbf32c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12d7a +0  25060000
[3e4c0a47efc0001] jit-backend-dump}
[3e4c0a47efc30d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12d8b +0  30060000
[3e4c0a47efc3dac] jit-backend-dump}
[3e4c0a47efc6e72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12dad +0  2A060000
[3e4c0a47efc7b2e] jit-backend-dump}
[3e4c0a47efcac1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12dca +0  29060000
[3e4c0a47efcb8fe] jit-backend-dump}
[3e4c0a47efcea7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12ddb +0  34060000
[3e4c0a47efcf75d] jit-backend-dump}
[3e4c0a47efd280a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12de8 +0  43060000
[3e4c0a47efd34d0] jit-backend-dump}
[3e4c0a47efd65c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e03 +0  44060000
[3e4c0a47efd7296] jit-backend-dump}
[3e4c0a47efda33b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e16 +0  4D060000
[3e4c0a47efdb00d] jit-backend-dump}
[3e4c0a47efde13e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e24 +0  5B060000
[3e4c0a47efdee0d] jit-backend-dump}
[3e4c0a47efe21ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e2e +0  6D060000
[3e4c0a47efe2e84] jit-backend-dump}
[3e4c0a47efe5ff8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e38 +0  7F060000
[3e4c0a47efe6d23] jit-backend-dump}
[3e4c0a47efe9e08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e4a +0  89060000
[3e4c0a47efeaaf2] jit-backend-dump}
[3e4c0a47efedbbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e5f +0  90060000
[3e4c0a47efee897] jit-backend-dump}
[3e4c0a47eff195d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e70 +0  9B060000
[3e4c0a47eff262f] jit-backend-dump}
[3e4c0a47eff5699] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e88 +0  9F060000
[3e4c0a47eff6368] jit-backend-dump}
[3e4c0a47eff93dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12e95 +0  AE060000
[3e4c0a47effa0a8] jit-backend-dump}
[3e4c0a47effd131] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12eae +0  B1060000
[3e4c0a47effddfa] jit-backend-dump}
[3e4c0a47f000e83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12ec3 +0  B8060000
[3e4c0a47f001b4c] jit-backend-dump}
[3e4c0a47f004be4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12ed3 +0  C4060000
[3e4c0a47f0058a7] jit-backend-dump}
[3e4c0a47f008920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12eee +0  C5060000
[3e4c0a47f0095ec] jit-backend-dump}
[3e4c0a47f00f7f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12efb +0  D4060000
[3e4c0a47f0106ab] jit-backend-dump}
[3e4c0a47f014024] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12f0c +0  DF060000
[3e4c0a47f014d37] jit-backend-dump}
[3e4c0a47f017f78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12f33 +0  D4060000
[3e4c0a47f018c78] jit-backend-dump}
[3e4c0a47f01be4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12f43 +0  E0060000
[3e4c0a47f01cbc9] jit-backend-dump}
[3e4c0a47f01ffb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12f51 +0  EE060000
[3e4c0a47f020d1e] jit-backend-dump}
[3e4c0a47f023eec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1308c +0  CF050000
[3e4c0a47f024c29] jit-backend-dump}
[3e4c0a47f027dbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1309f +0  D8050000
[3e4c0a47f028b4f] jit-backend-dump}
[3e4c0a47f02bcdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d130a8 +0  EB050000
[3e4c0a47f02ca22] jit-backend-dump}
[3e4c0a47f02fec1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d07575 +0  77B60000
[3e4c0a47f030c1a] jit-backend-dump}
[3e4c0a47f034e3c] jit-backend}
[3e4c0a47f038b4b] {jit-log-opt-bridge
# bridge out of Guard 0x307d070 with 199 ops
[p0, p1]
+438: guard_class(p1, 16435208, descr=<Guard0x315bdc0>) [p0, p1]
+450: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+454: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3188020>) [p0, p1]
debug_merge_point(0, 0, '(if one?5161 2 1)')
+473: guard_class(p0, 16504944, descr=<Guard0x3184698>) [p0, p1]
+485: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+489: guard_class(p6, 16479952, descr=<Guard0x3184650>) [p0, p1]
+502: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+513: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3184608>) [p0, p1]
+522: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+526: guard_nonnull(p10, descr=<Guard0x31845c0>) [p0, p1]
+542: i12 = instance_ptr_eq(p10, ConstPtr(ptr11))
+545: guard_true(i12, descr=<Guard0x3184578>) [p0, p1]
debug_merge_point(0, 0, '1')
+551: guard_not_invalidated(descr=<Guard0x3184530>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+551: p13 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+555: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x315bfa0>) [p0, p1]
+575: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+579: i17 = int_add_ovf(i15, 1)
+583: guard_no_overflow(descr=<Guard0x31844e8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+589: i18 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+593: i19 = int_eq(i18, i17)
+596: guard_false(i19, descr=<Guard0x31844a0>) [p0, p1]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+602: p20 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+606: p21 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+611: guard_nonnull_class(p21, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315bf40>) [p0, p1]
+630: i23 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+634: i24 = int_eq(i18, i23)
+637: guard_false(i24, descr=<Guard0x3184458>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
+643: p25 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+647: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x315bee0>) [p0, p1]
+666: p27 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+670: p28 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+674: guard_nonnull_class(p28, ConstClass(W_CellIntegerStrategy), descr=<Guard0x315be80>) [p0, p1]
+692: i30 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+696: p31 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+700: i33 = int_ge(i18, 0)
+704: guard_true(i33, descr=<Guard0x3184410>) [p0, p1]
+710: i34 = getfield_gc_i(p25, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+721: i35 = int_lt(i18, i34)
+724: guard_true(i35, descr=<Guard0x31843c8>) [p0, p1]
+730: p36 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+741: guard_class(p36, 16622984, descr=<Guard0x3184380>) [p0, p1]
+755: p38 = getfield_gc_r(p25, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+759: p39 = getarrayitem_gc_r(p38, i18, descr=<ArrayP 8>)
+771: guard_class(p39, ConstClass(W_Vector), descr=<Guard0x3184338>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+784: i42 = int_ge(i30, 0)
+788: guard_true(i42, descr=<Guard0x31842f0>) [p0, p1]
+794: i43 = getfield_gc_i(p39, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+805: i44 = int_lt(i30, i43)
+808: guard_true(i44, descr=<Guard0x31842a8>) [p0, p1]
+814: p45 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+818: guard_class(p45, 16612728, descr=<Guard0x3184260>) [p0, p1]
+831: p47 = getfield_gc_r(p39, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+835: f48 = getarrayitem_gc_f(p47, i30, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+842: p49 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+846: guard_nonnull_class(p49, ConstClass(W_Flonum), descr=<Guard0x315be20>) [p0, p1]
+865: f51 = getfield_gc_f(p49, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+871: f52 = float_mul(f51, f48)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+876: p53 = getarrayitem_gc_r(p38, i18, descr=<ArrayP 8>)
+881: guard_class(p53, ConstClass(W_Vector), descr=<Guard0x3184218>) [p0, p1]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+894: p55 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+898: guard_class(p55, 16612728, descr=<Guard0x31841d0>) [p0, p1]
+911: i57 = getfield_gc_i(p53, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+915: i58 = int_lt(i30, i57)
+918: guard_true(i58, descr=<Guard0x3184188>) [p0, p1]
+924: p59 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+928: setarrayitem_gc(p59, i30, f52, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
+935: p60 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+939: guard_class(p31, 16505296, descr=<Guard0x315bd00>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+951: guard_nonnull_class(p60, ConstClass(W_Fixnum), descr=<Guard0x315bd60>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+970: i63 = getfield_gc_i(p60, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+974: i65 = int_add_ovf(i63, 1)
+978: guard_no_overflow(descr=<Guard0x3184140>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+984: i67 = int_eq(0, i65)
+988: guard_false(i67, descr=<Guard0x31840f8>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+994: i68 = int_eq(0, i30)
+998: guard_false(i68, descr=<Guard0x31840b0>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1004: p69 = getarrayitem_gc_r(p38, i18, descr=<ArrayP 8>)
+1009: guard_class(p69, ConstClass(W_Vector), descr=<Guard0x3184068>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1022: i71 = getfield_gc_i(p69, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1033: i72 = int_lt(0, i71)
+1037: guard_true(i72, descr=<Guard0x3184020>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1043: p73 = getfield_gc_r(p69, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1047: guard_class(p73, 16612728, descr=<Guard0x315ffa0>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1060: p75 = getfield_gc_r(p69, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1064: f76 = getarrayitem_gc_f(p75, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1070: i78 = int_ge(i23, 0)
+1078: guard_true(i78, descr=<Guard0x315ff58>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1084: i79 = int_lt(i23, i34)
+1091: guard_true(i79, descr=<Guard0x315ff10>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1097: p80 = getarrayitem_gc_r(p38, i23, descr=<ArrayP 8>)
+1109: guard_class(p80, ConstClass(W_Vector), descr=<Guard0x315fec8>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1122: i82 = getfield_gc_i(p80, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1133: i83 = int_lt(0, i82)
+1137: guard_true(i83, descr=<Guard0x315fe80>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1143: p84 = getfield_gc_r(p80, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1147: guard_class(p84, 16612728, descr=<Guard0x315fe38>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1159: p86 = getfield_gc_r(p80, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1163: f87 = getarrayitem_gc_f(p86, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1169: p88 = getarrayitem_gc_r(p38, i18, descr=<ArrayP 8>)
+1174: guard_class(p88, ConstClass(W_Vector), descr=<Guard0x315fdf0>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1186: i90 = getfield_gc_i(p88, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1190: i91 = int_lt(i30, i90)
+1193: guard_true(i91, descr=<Guard0x315fda8>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1199: p92 = getfield_gc_r(p88, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1203: guard_class(p92, 16612728, descr=<Guard0x315fd60>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1216: p94 = getfield_gc_r(p88, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1220: f95 = getarrayitem_gc_f(p94, i30, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+1227: f96 = float_mul(f87, f95)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+1232: f97 = float_sub(f76, f96)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+1237: p98 = getarrayitem_gc_r(p38, i18, descr=<ArrayP 8>)
+1242: guard_class(p98, ConstClass(W_Vector), descr=<Guard0x315fd18>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+1255: p100 = getfield_gc_r(p98, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1259: guard_class(p100, 16612728, descr=<Guard0x315fcd0>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1271: i102 = getfield_gc_i(p98, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1275: i103 = int_lt(0, i102)
+1279: guard_true(i103, descr=<Guard0x315fc88>) [p0, p31, i18, p25, p20, p27, p60, p1, p3]
+1285: p104 = getfield_gc_r(p98, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+1289: setarrayitem_gc(p104, 0, f97, descr=<ArrayF 8>)
+1295: p105 = new_with_vtable(descr=<SizeDescr 64>)
+1350: p106 = new_with_vtable(descr=<SizeDescr 16>)
+1361: setfield_gc(p106, i18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1365: p107 = new_with_vtable(descr=<SizeDescr 40>)
+1465: i108 = getfield_gc_i(p106, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1469: setfield_gc(p107, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1480: setfield_gc(p105, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1491: setfield_gc(p105, ConstPtr(ptr109), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1495: setfield_gc(p105, p106, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1499: setfield_gc(p105, p60, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1503: setfield_gc(p105, p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1514: setfield_gc(p105, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1532: setfield_gc(p105, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1550: setfield_gc(p107, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1568: setfield_gc(p107, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1586: setfield_gc(p107, ConstPtr(ptr110), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1590: i112 = int_ge(i108, 0)
+1594: guard_true(i112, descr=<Guard0x315bca0>) [p107, p105, None, None, None, None, None, None, None]
+1600: i115 = int_le(i108, 9223372036854775806)
+1613: guard_true(i115, descr=<Guard0x315bc40>) [p107, p105, None, None, None, None, None, None, None]
+1619: i116 = int_lt(i108, i34)
+1622: guard_true(i116, descr=<Guard0x315bbe0>) [p107, p105, None, None, None, None, None, None, None]
+1628: i117 = arraylen_gc(p38, descr=<ArrayP 8>)
+1628: jump(p105, 1, p107, p3, p60, i65, p27, p28, i30, p106, p25, p38, i108, p20, p21, i23, descr=TargetToken(47968112))
+1760: --end of the loop--
[3e4c0a47f0c4622] jit-log-opt-bridge}
[3e4c0a47f243c02] {jit-backend
[3e4c0a47f2b53a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a47f2bd8ba] jit-backend-dump}
[3e4c0a47f2c88ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d138d4 +0  22000000
[3e4c0a47f2c9de1] jit-backend-dump}
[3e4c0a47f2ce053] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13b25 +0  22000000
[3e4c0a47f2cf037] jit-backend-dump}
[3e4c0a47f2d253b] {jit-backend-addr
bridge out of Guard 0x2f740f8 has address 0x7f6e13d138d0 to 0x7f6e13d13b20
       gc table: 0x7f6e13d13820
    jump target: 0x7f6e13d138d0
         resops: 0x7f6e13d138de
       failures: 0x7f6e13d13b20
            end: 0x7f6e13d13db8
[3e4c0a47f2d4a8f] jit-backend-addr}
[3e4c0a47f2d83b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d138f5 +0  8F020000
[3e4c0a47f2d91ea] jit-backend-dump}
[3e4c0a47f2dc6ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1390b +0  95020000
[3e4c0a47f2dd40d] jit-backend-dump}
[3e4c0a47f2e0728] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13915 +0  A7020000
[3e4c0a47f2e1440] jit-backend-dump}
[3e4c0a47f2e473c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13922 +0  B6020000
[3e4c0a47f2e5470] jit-backend-dump}
[3e4c0a47f2e888c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1393e +0  B6020000
[3e4c0a47f2e9570] jit-backend-dump}
[3e4c0a47f2ec771] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1394b +0  C5020000
[3e4c0a47f2ed459] jit-backend-dump}
[3e4c0a47f2f0669] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13954 +0  D8020000
[3e4c0a47f2f13b3] jit-backend-dump}
[3e4c0a47f2f45cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d139f9 +0  4F020000
[3e4c0a47f2f52df] jit-backend-dump}
[3e4c0a47f2f86ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13a09 +0  77020000
[3e4c0a47f2f9413] jit-backend-dump}
[3e4c0a47f2fc712] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13a1d +0  7F020000
[3e4c0a47f2fd461] jit-backend-dump}
[3e4c0a47f30068a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13a34 +0  84020000
[3e4c0a47f3013a9] jit-backend-dump}
[3e4c0a47f304598] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13a50 +0  84020000
[3e4c0a47f30526a] jit-backend-dump}
[3e4c0a47f308440] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13a68 +0  88020000
[3e4c0a47f309112] jit-backend-dump}
[3e4c0a47f30c320] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13a77 +0  95020000
[3e4c0a47f30cfef] jit-backend-dump}
[3e4c0a47f310205] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13a85 +0  A3020000
[3e4c0a47f310eda] jit-backend-dump}
[3e4c0a47f3140cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13a9c +0  A8020000
[3e4c0a47f314da8] jit-backend-dump}
[3e4c0a47f317f78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13ab2 +0  AE020000
[3e4c0a47f318c3b] jit-backend-dump}
[3e4c0a47f31bdff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13ac0 +0  BC020000
[3e4c0a47f31cac8] jit-backend-dump}
[3e4c0a47f31fc8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d13acd +0  CB020000
[3e4c0a47f32095b] jit-backend-dump}
[3e4c0a47f323da1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbd2a +0  A27B0100
[3e4c0a47f324a64] jit-backend-dump}
[3e4c0a47f328aaf] jit-backend}
[3e4c0a47f32c7bb] {jit-log-opt-bridge
# bridge out of Guard 0x2f740f8 with 55 ops
[p0, p1, p2, p3]
+198: guard_nonnull_class(p1, ConstClass(W_Vector), descr=<Guard0x3188200>) [p0, p1, p2, p3]
+217: i5 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+221: p6 = getfield_gc_r(p1, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+225: guard_class(p6, 16693360, descr=<Guard0x31848d8>) [p0, p1, p2, p3]
+239: i9 = int_ge(i5, 0)
+243: guard_true(i9, descr=<Guard0x3184920>) [p0, p1, p2, p3]
+249: i10 = getfield_gc_i(p1, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+253: i11 = int_lt(i5, i10)
+256: guard_true(i11, descr=<Guard0x3184968>) [p0, p1, p2, p3]
+262: p12 = getfield_gc_r(p1, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+266: p14 = getarrayitem_gc_pure_r(p12, 0, descr=<ArrayP 8>)
+271: guard_nonnull_class(p14, ConstClass(W_Fixnum), descr=<Guard0x3188260>) [p0, p1, p2, p3]
+290: i16 = getfield_gc_i(p14, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+294: i17 = int_eq(i16, i5)
+297: guard_false(i17, descr=<Guard0x31849b0>) [p0, p1, p2, p3]
+303: i18 = int_is_true(i16)
+306: guard_false(i18, descr=<Guard0x31849f8>) [p0, p1, p2, p3]
+312: p19 = new_array_clear(i10, descr=<ArrayS 8>)
+412: setarrayitem_gc(p19, i5, i5, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))')
+424: p20 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+429: p21 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+451: setfield_gc(p1, ConstPtr(ptr22), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+455: setfield_gc(p1, p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+459: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x31882c0>) [p0, p21, p2, p20, None, None]
debug_merge_point(0, 0, '(+ k5231 1)')
+477: guard_not_invalidated(descr=<Guard0x3184a40>) [p0, p21, p2, p20, None, None]
+477: i26 = int_add(i5, 1)
debug_merge_point(0, 0, '(doloop5229 AppRand63)')
+481: guard_class(p20, 16478448, descr=<Guard0x3184a88>) [p0, p21, p2, p20, None, None]
+493: p28 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+504: guard_value(p28, ConstPtr(ptr29), descr=<Guard0x3184ad0>) [p0, p21, p2, p20, None, None]
debug_merge_point(0, 0, '(let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))) from (doloop5229 AppRand63)')
+513: p30 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+517: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3188320>) [p2, i26, p20, None, None]
+536: i32 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+540: p33 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+544: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3188380>) [p2, i26, p20, None, None]
+564: p35 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+569: guard_nonnull_class(p35, 16623792, descr=<Guard0x31883e0>) [p2, i26, p20, None, None]
+588: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+593: i39 = int_ge(i37, 1)
+597: guard_true(i39, descr=<Guard0x3188440>) [p2, i26, p20, None, None]
+603: p40 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: guard_nonnull(p40, descr=<Guard0x31884a0>) [p2, i26, p20, None, None]
+617: p41 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+621: guard_nonnull_class(p41, ConstClass(W_Vector), descr=<Guard0x3188500>) [p2, i26, p20, None, None]
+640: p43 = getfield_gc_r(p41, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+644: guard_nonnull_class(p43, 16623792, descr=<Guard0x3188560>) [p2, i26, p20, None, None]
+662: i45 = getfield_gc_i(p41, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+666: i47 = int_ge(i45, 1)
+670: guard_true(i47, descr=<Guard0x31885c0>) [p2, i26, p20, None, None]
+676: p48 = getfield_gc_r(p41, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+680: guard_nonnull(p48, descr=<Guard0x3188620>) [p2, i26, p20, None, None]
+689: jump(p20, i26, p2, p21, p30, i32, p33, i37, p40, p41, i45, p48, descr=TargetToken(49644352))
+768: --end of the loop--
[3e4c0a47f3641b1] jit-log-opt-bridge}
[3e4c0a47f63c2d4] {jit-backend
[3e4c0a47f70dae4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a47f71befd] jit-backend-dump}
[3e4c0a47f727dcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14204 +0  26000000
[3e4c0a47f7293a3] jit-backend-dump}
[3e4c0a47f72d826] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d147d5 +0  26000000
[3e4c0a47f72e762] jit-backend-dump}
[3e4c0a47f731d0f] {jit-backend-addr
bridge out of Guard 0x2f74188 has address 0x7f6e13d14200 to 0x7f6e13d147d0
       gc table: 0x7f6e13d14090
    jump target: 0x7f6e13d14200
         resops: 0x7f6e13d1420e
       failures: 0x7f6e13d147d0
            end: 0x7f6e13d14cf5
[3e4c0a47f73433c] jit-backend-addr}
[3e4c0a47f737d26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1422d +0  80060000
[3e4c0a47f738c12] jit-backend-dump}
[3e4c0a47f73c10a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14245 +0  84060000
[3e4c0a47f73ce9d] jit-backend-dump}
[3e4c0a47f740294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14252 +0  93060000
[3e4c0a47f740fbe] jit-backend-dump}
[3e4c0a47f744414] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1426d +0  94060000
[3e4c0a47f74514e] jit-backend-dump}
[3e4c0a47f748487] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14283 +0  9A060000
[3e4c0a47f74916f] jit-backend-dump}
[3e4c0a47f74c32d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1429a +0  9F060000
[3e4c0a47f74d061] jit-backend-dump}
[3e4c0a47f7502a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d142a8 +0  AD060000
[3e4c0a47f75100d] jit-backend-dump}
[3e4c0a47f754289] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d142ba +0  B7060000
[3e4c0a47f754faa] jit-backend-dump}
[3e4c0a47f75821a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d142cb +0  C2060000
[3e4c0a47f758f01] jit-backend-dump}
[3e4c0a47f75c25f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d142db +0  CE060000
[3e4c0a47f75cf44] jit-backend-dump}
[3e4c0a47f7602cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d142eb +0  DA060000
[3e4c0a47f760fc6] jit-backend-dump}
[3e4c0a47f7641da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d142fb +0  E6060000
[3e4c0a47f764ee6] jit-backend-dump}
[3e4c0a47f768379] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1430b +0  F2060000
[3e4c0a47f7690ce] jit-backend-dump}
[3e4c0a47f76c3bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1431b +0  FE060000
[3e4c0a47f76d11a] jit-backend-dump}
[3e4c0a47f770355] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14339 +0  FC060000
[3e4c0a47f771083] jit-backend-dump}
[3e4c0a47f77434b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1434b +0  06070000
[3e4c0a47f775070] jit-backend-dump}
[3e4c0a47f7809b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14359 +0  14070000
[3e4c0a47f781b5f] jit-backend-dump}
[3e4c0a47f785e1a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14371 +0  18070000
[3e4c0a47f786baa] jit-backend-dump}
[3e4c0a47f789fdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1438d +0  18070000
[3e4c0a47f78ad2e] jit-backend-dump}
[3e4c0a47f78e09e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1439b +0  26070000
[3e4c0a47f78edad] jit-backend-dump}
[3e4c0a47f79207b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d143ac +0  31070000
[3e4c0a47f792d7e] jit-backend-dump}
[3e4c0a47f795fde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d143d1 +0  28070000
[3e4c0a47f796cdb] jit-backend-dump}
[3e4c0a47f799f54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d143e3 +0  32070000
[3e4c0a47f79ac51] jit-backend-dump}
[3e4c0a47f79dfb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d143f4 +0  3D070000
[3e4c0a47f79ecca] jit-backend-dump}
[3e4c0a47f7a1ffd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14402 +0  4B070000
[3e4c0a47f7a2d16] jit-backend-dump}
[3e4c0a47f7a60f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14423 +0  46070000
[3e4c0a47f7a6e47] jit-backend-dump}
[3e4c0a47f7aa192] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14431 +0  54070000
[3e4c0a47f7aaedc] jit-backend-dump}
[3e4c0a47f7ae267] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1443a +0  67070000
[3e4c0a47f7aef80] jit-backend-dump}
[3e4c0a47f7b22c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14503 +0  BA060000
[3e4c0a47f7b305e] jit-backend-dump}
[3e4c0a47f7b6397] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14513 +0  C6060000
[3e4c0a47f7b70fc] jit-backend-dump}
[3e4c0a47f7ba442] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14521 +0  D4060000
[3e4c0a47f7bb154] jit-backend-dump}
[3e4c0a47f7be46c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1453b +0  D6060000
[3e4c0a47f7bf187] jit-backend-dump}
[3e4c0a47f7c24df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1454c +0  E1060000
[3e4c0a47f7c31f4] jit-backend-dump}
[3e4c0a47f7c6540] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14555 +0  F4060000
[3e4c0a47f7c7252] jit-backend-dump}
[3e4c0a47f7ca51d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14703 +0  62050000
[3e4c0a47f7cb220] jit-backend-dump}
[3e4c0a47f7ce54a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14710 +0  71050000
[3e4c0a47f7cf260] jit-backend-dump}
[3e4c0a47f7d25fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1471d +0  80050000
[3e4c0a47f7d3338] jit-backend-dump}
[3e4c0a47f7d6652] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14735 +0  84050000
[3e4c0a47f7d736b] jit-backend-dump}
[3e4c0a47f7da6b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d14743 +0  92050000
[3e4c0a47f7db400] jit-backend-dump}
[3e4c0a47f7de94d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfbd7d +0  7F840100
[3e4c0a47f7df656] jit-backend-dump}
[3e4c0a47f7e3719] jit-backend}
[3e4c0a47f7e7560] {jit-log-opt-bridge
# bridge out of Guard 0x2f74188 with 148 ops
[i0, p1, p2, p3]
+390: guard_not_invalidated(descr=<Guard0x3188680>) [i0, p1, p2, p3]
+390: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+408: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3184b18>) [i0, p1, p2, p3]
+417: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+421: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x31886e0>) [i0, p1, p2, p3]
+441: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+445: i9 = int_eq(i0, i8)
+448: guard_true(i9, descr=<Guard0x3184b60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))')
debug_merge_point(0, 0, '(void)')
+454: p10 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+472: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3184ba8>) [i0, p1, p2, p3]
+481: p12 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+485: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+489: guard_class(p13, 16435208, descr=<Guard0x3184bf0>) [i0, p1, p2, p3]
+503: p15 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+507: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x3188740>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([doloop5244 (lambda (i5246) (let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))))]) (doloop5244 0))')
+526: guard_class(p12, 16501424, descr=<Guard0x3184c38>) [i0, p1, p2, p3]
+540: p18 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+545: guard_class(p18, 16502480, descr=<Guard0x3184c80>) [i0, p1, p2, p3]
+558: p20 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+562: guard_class(p20, 16504944, descr=<Guard0x3184cc8>) [i0, p1, p2, p3]
+575: p22 = getfield_gc_r(p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+579: guard_class(p22, 16503888, descr=<Guard0x3184d10>) [i0, p1, p2, p3]
+591: p24 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+595: guard_class(p24, 16503888, descr=<Guard0x3184d58>) [i0, p1, p2, p3]
+607: p26 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+611: guard_class(p26, 16500016, descr=<Guard0x3184da0>) [i0, p1, p2, p3]
+623: p28 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+627: guard_class(p28, 16500720, descr=<Guard0x3184de8>) [i0, p1, p2, p3]
+639: p30 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+643: guard_class(p30, 16505296, descr=<Guard0x3184e30>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(lambda (i5246) (let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))))')
+655: i32 = getfield_gc_i(p20, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+659: p33 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_4 48 pure>)
+663: i34 = getfield_gc_i(p22, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+667: p35 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+671: p36 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_1 24 pure>)
debug_merge_point(0, 0, '(doloop5244 0)')
debug_merge_point(0, 0, '(let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))) from (doloop5244 0)')
debug_merge_point(0, 0, '(= i5246 m)')
+675: i38 = int_eq(0, i34)
+679: guard_false(i38, descr=<Guard0x3184e78>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))')
debug_merge_point(0, 0, '(let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68)))')
debug_merge_point(0, 0, '(+ i5246 1)')
debug_merge_point(0, 0, '(let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void)))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand64 0)')
+685: guard_nonnull_class(p35, ConstClass(W_Vector), descr=<Guard0x31887a0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+703: i40 = getfield_gc_i(p35, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+707: i42 = int_lt(1, i40)
+711: guard_true(i42, descr=<Guard0x3184ec0>) [i0, p1, p2, p3]
+717: p43 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+728: guard_class(p43, 16622984, descr=<Guard0x3184f08>) [i0, p1, p2, p3]
+741: p45 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+745: p46 = getarrayitem_gc_r(p45, 1, descr=<ArrayP 8>)
+756: guard_class(p46, ConstClass(W_Vector), descr=<Guard0x3184f50>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+769: i48 = getfield_gc_i(p46, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+773: i50 = int_lt(0, i48)
+777: guard_true(i50, descr=<Guard0x3184f98>) [i0, p1, p2, p3]
+783: p51 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+787: guard_class(p51, 16612728, descr=<Guard0x3184fe0>) [i0, p1, p2, p3]
+800: p53 = getfield_gc_r(p46, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+804: f55 = getarrayitem_gc_f(p53, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(if (negative? AppRand65) (fuck-up) (void)) from (vector-ref AppRand1 j)')
+810: i57 = float_lt(f55, 0.000000)
+831: guard_false(i57, descr=<Guard0x3185028>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66))')
debug_merge_point(0, 0, '(+ i5246 1)')
debug_merge_point(0, 0, '(vector-set! l2 i5246 AppRand66)')
+837: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x3188800>) [i0, p1, p2, p3]
+855: p59 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+859: guard_class(p59, 16693360, descr=<Guard0x3185070>) [i0, p1, p2, p3]
+872: i61 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+876: i62 = int_lt(0, i61)
+880: guard_true(i62, descr=<Guard0x31850b8>) [i0, p1, p2, p3]
+886: p63 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+890: p65 = getarrayitem_gc_pure_r(p63, 0, descr=<ArrayP 8>)
+901: guard_nonnull_class(p65, ConstClass(W_Fixnum), descr=<Guard0x3188860>) [i0, p1, p2, p3]
+919: i67 = getfield_gc_i(p65, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+923: i69 = int_eq(i67, 1)
+927: guard_false(i69, descr=<Guard0x3185100>) [i0, p1, p2, p3]
+933: i70 = int_is_true(i67)
+936: guard_false(i70, descr=<Guard0x3185148>) [i0, p1, p2, p3]
+942: p71 = new_array_clear(i61, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67))')
debug_merge_point(0, 0, '(+ n i5246)')
debug_merge_point(0, 0, '(vector-set! iposv i5246 AppRand67)')
+1094: setfield_gc(p36, ConstPtr(ptr72), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1098: setfield_gc(p36, p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1109: setarrayitem_gc(p71, 0, 1, descr=<ArrayS 8>)
+1117: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x31888c0>) [p33, p13, p12, i34, i32, p36, p35, p30, p15, None, None, None, None]
+1143: p75 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1147: guard_class(p75, 16693360, descr=<Guard0x3185190>) [p33, p13, p12, i34, i32, p36, p35, p30, p15, None, None, None, None]
+1159: i77 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1163: i78 = int_lt(0, i77)
+1167: guard_true(i78, descr=<Guard0x31851d8>) [p33, p13, p12, i34, i32, p36, p35, p30, p15, None, None, None, None]
+1173: p79 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1177: p81 = getarrayitem_gc_pure_r(p79, 0, descr=<ArrayP 8>)
+1181: guard_nonnull_class(p81, ConstClass(W_Fixnum), descr=<Guard0x3188920>) [p33, p13, p12, i34, i32, p36, p35, p30, p15, None, None, None, None]
+1199: i83 = getfield_gc_i(p81, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1203: i84 = int_eq(i83, i32)
+1210: guard_false(i84, descr=<Guard0x3185220>) [p33, p13, p12, i34, i32, p36, p35, p30, p15, None, None, None, None]
+1216: i85 = int_is_true(i83)
+1219: guard_false(i85, descr=<Guard0x3185268>) [p33, p13, p12, i34, i32, p36, p35, p30, p15, None, None, None, None]
+1225: p86 = new_array_clear(i77, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))')
debug_merge_point(0, 0, '(+ i5246 1)')
debug_merge_point(0, 0, '(doloop5244 AppRand68)')
debug_merge_point(0, 0, '(let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))) from (doloop5244 AppRand68)')
+1343: setfield_gc(p33, ConstPtr(ptr87), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1347: setfield_gc(p33, p86, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1358: setarrayitem_gc(p86, 0, i32, descr=<ArrayS 8>)
+1369: p88 = new_with_vtable(descr=<SizeDescr 64>)
+1413: p89 = new_with_vtable(descr=<SizeDescr 16>)
+1424: setfield_gc(p89, i32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1428: p90 = new_with_vtable(descr=<SizeDescr 16>)
+1439: setfield_gc(p90, i34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1443: p91 = new_with_vtable(descr=<SizeDescr 40>)
+1542: i92 = getfield_gc_i(p90, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1546: p93 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1564: setfield_gc(p88, ConstPtr(ptr94), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1575: setfield_gc(p91, ConstPtr(ptr95), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1579: setfield_gc(p91, p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1583: setfield_gc(p91, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1587: setfield_gc(p91, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1598: setfield_gc(p88, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1602: setfield_gc(p88, p89, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1606: setfield_gc(p88, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1617: setfield_gc(p88, p90, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1621: setfield_gc(p88, p35, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1625: setfield_gc(p88, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1636: guard_nonnull_class(p93, 16622984, descr=<Guard0x3188980>) [p91, p88, None, None, None, None, None, None, None, None, None, None, None, None]
+1655: p97 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1659: guard_nonnull(p97, descr=<Guard0x31889e0>) [p91, p88, None, None, None, None, None, None, None, None, None, None, None, None]
+1668: guard_gc_type(p97, 3592, descr=<Guard0x3188a40>) [p91, p88, None, None, None, None, None, None, None, None, None, None, None, None]
+1681: i99 = arraylen_gc(p97, descr=<ArrayP 8>)
+1681: p100 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1686: guard_nonnull_class(p100, 16623792, descr=<Guard0x3188aa0>) [p91, p88, None, None, None, None, None, None, None, None, None, None, None, None]
+1705: p102 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1710: guard_nonnull(p102, descr=<Guard0x3188b00>) [p91, p88, None, None, None, None, None, None, None, None, None, None, None, None]
+1719: i103 = getfield_gc_i(p89, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1723: jump(p88, 1, p91, p15, p90, i92, p35, i40, p97, p36, i61, p102, p89, i103, p33, i77, p86, descr=TargetToken(49648352))
+1856: --end of the loop--
[3e4c0a47f863a16] jit-log-opt-bridge}
[3e4c0a47fd63e10] {jit-backend
[3e4c0a47fe776b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a47fe880cb] jit-backend-dump}
[3e4c0a47fe937f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15264 +0  2A000000
[3e4c0a47fe94d2f] jit-backend-dump}
[3e4c0a47fe98f4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15865 +0  2A000000
[3e4c0a47fe99e1c] jit-backend-dump}
[3e4c0a47fe9d238] {jit-backend-addr
bridge out of Guard 0x2f746e0 has address 0x7f6e13d15260 to 0x7f6e13d15860
       gc table: 0x7f6e13d15080
    jump target: 0x7f6e13d15260
         resops: 0x7f6e13d1526e
       failures: 0x7f6e13d15860
            end: 0x7f6e13d15e67
[3e4c0a47fe9f748] jit-backend-addr}
[3e4c0a47fea2e0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1528d +0  32060000
[3e4c0a47fea3c43] jit-backend-dump}
[3e4c0a47fea710d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d152a5 +0  36060000
[3e4c0a47fea7e5c] jit-backend-dump}
[3e4c0a47feab143] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d152b3 +0  44060000
[3e4c0a47feabe68] jit-backend-dump}
[3e4c0a47feaf0d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d152d2 +0  41060000
[3e4c0a47feafe08] jit-backend-dump}
[3e4c0a47feb2fe1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d152db +0  54060000
[3e4c0a47feb3ccf] jit-backend-dump}
[3e4c0a47feb6f13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d152ef +0  5C060000
[3e4c0a47feb7bf5] jit-backend-dump}
[3e4c0a47febadbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15304 +0  63060000
[3e4c0a47febba94] jit-backend-dump}
[3e4c0a47febecc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1531b +0  68060000
[3e4c0a47febf98c] jit-backend-dump}
[3e4c0a47fec2b4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15329 +0  76060000
[3e4c0a47fec3819] jit-backend-dump}
[3e4c0a47fec6a64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1533c +0  7F060000
[3e4c0a47fec7733] jit-backend-dump}
[3e4c0a47feca912] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15351 +0  86060000
[3e4c0a47fecb5de] jit-backend-dump}
[3e4c0a47fece7d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1536c +0  87060000
[3e4c0a47fecf4b8] jit-backend-dump}
[3e4c0a47fed2691] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1537a +0  95060000
[3e4c0a47fed33a3] jit-backend-dump}
[3e4c0a47fed6600] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15391 +0  9A060000
[3e4c0a47fed72e5] jit-backend-dump}
[3e4c0a47feda4c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1539b +0  AC060000
[3e4c0a47fedb1a0] jit-backend-dump}
[3e4c0a47fede418] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d153a8 +0  BB060000
[3e4c0a47fedf0e7] jit-backend-dump}
[3e4c0a47fee2347] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d153b8 +0  C7060000
[3e4c0a47fee647b] jit-backend-dump}
[3e4c0a47feea2c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d153db +0  C0060000
[3e4c0a47feeb098] jit-backend-dump}
[3e4c0a47feee427] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d153e9 +0  CE060000
[3e4c0a47feef11a] jit-backend-dump}
[3e4c0a47fef2432] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d153ff +0  D4060000
[3e4c0a47fef310d] jit-backend-dump}
[3e4c0a47fef62ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15409 +0  E6060000
[3e4c0a47fef6ff6] jit-backend-dump}
[3e4c0a47fefa29c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15416 +0  F5060000
[3e4c0a47fefafc7] jit-backend-dump}
[3e4c0a47fefe233] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15426 +0  01070000
[3e4c0a47fefef52] jit-backend-dump}
[3e4c0a47ff020fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15450 +0  F3060000
[3e4c0a47ff02deb] jit-backend-dump}
[3e4c0a47ff05f94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1545e +0  01070000
[3e4c0a47ff06c6c] jit-backend-dump}
[3e4c0a47ff09e8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15474 +0  07070000
[3e4c0a47ff0ab4e] jit-backend-dump}
[3e4c0a47ff0dca4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15488 +0  0F070000
[3e4c0a47ff0e980] jit-backend-dump}
[3e4c0a47ff11afd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1549e +0  15070000
[3e4c0a47ff127dc] jit-backend-dump}
[3e4c0a47ff15981] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d154ac +0  23070000
[3e4c0a47ff166a6] jit-backend-dump}
[3e4c0a47ff198b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d154bc +0  2F070000
[3e4c0a47ff1a5d8] jit-backend-dump}
[3e4c0a47ff1d7ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d154df +0  28070000
[3e4c0a47ff1e547] jit-backend-dump}
[3e4c0a47ff2174b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d154fa +0  29070000
[3e4c0a47ff22479] jit-backend-dump}
[3e4c0a47ff25696] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15508 +0  37070000
[3e4c0a47ff263d6] jit-backend-dump}
[3e4c0a47ff2959d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15515 +0  46070000
[3e4c0a47ff2a2da] jit-backend-dump}
[3e4c0a47ff2d4dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1552d +0  4A070000
[3e4c0a47ff2e200] jit-backend-dump}
[3e4c0a47ff314b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15549 +0  4A070000
[3e4c0a47ff32218] jit-backend-dump}
[3e4c0a47ff35493] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15553 +0  5C070000
[3e4c0a47ff361f2] jit-backend-dump}
[3e4c0a47ff39398] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15567 +0  64070000
[3e4c0a47ff3a115] jit-backend-dump}
[3e4c0a47ff3d299] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15578 +0  6F070000
[3e4c0a47ff3df5f] jit-backend-dump}
[3e4c0a47ff410c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1559e +0  65070000
[3e4c0a47ff41e10] jit-backend-dump}
[3e4c0a47ff44f91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d155b5 +0  6A070000
[3e4c0a47ff45cc2] jit-backend-dump}
[3e4c0a47ff48e36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d155d2 +0  69070000
[3e4c0a47ff49b64] jit-backend-dump}
[3e4c0a47ff4cd3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d155e7 +0  70070000
[3e4c0a47ff4da6c] jit-backend-dump}
[3e4c0a47ff50c3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d155f5 +0  7E070000
[3e4c0a47ff5198e] jit-backend-dump}
[3e4c0a47ff54bfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15634 +0  5B070000
[3e4c0a47ff55922] jit-backend-dump}
[3e4c0a47ff58ad4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1563e +0  6D070000
[3e4c0a47ff5980e] jit-backend-dump}
[3e4c0a47ff5c9bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15652 +0  75070000
[3e4c0a47ff5d6f4] jit-backend-dump}
[3e4c0a47ff6085f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15662 +0  81070000
[3e4c0a47ff615a2] jit-backend-dump}
[3e4c0a47ff6470e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15687 +0  78070000
[3e4c0a47ff65451] jit-backend-dump}
[3e4c0a47ff686a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d157b6 +0  5F060000
[3e4c0a47ff693a8] jit-backend-dump}
[3e4c0a47ff6c605] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d157c9 +0  62060000
[3e4c0a47ff6d33f] jit-backend-dump}
[3e4c0a47ff70515] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d157d6 +0  71060000
[3e4c0a47ff71268] jit-backend-dump}
[3e4c0a47ff746fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cfc58d +0  CF8C0100
[3e4c0a47ff75419] jit-backend-dump}
[3e4c0a47ff794b4] jit-backend}
[3e4c0a47ff7d2a5] {jit-log-opt-bridge
# bridge out of Guard 0x2f746e0 with 213 ops
[i0, p1, p2, p3]
+502: guard_not_invalidated(descr=<Guard0x3188b60>) [i0, p1, p2, p3]
+502: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+520: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x31852b0>) [i0, p1, p2, p3]
+529: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+533: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3188bc0>) [i0, p1, p2, p3]
+553: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+557: i10 = int_add_ovf(i8, 2)
+561: guard_no_overflow(descr=<Guard0x31852f8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))')
+567: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+578: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x3188c20>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(= i5414 AppRand111)')
+598: i13 = int_eq(i0, i10)
+601: guard_true(i13, descr=<Guard0x3185340>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114))))')
debug_merge_point(0, 0, '(void)')
+607: p14 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+618: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3185388>) [i0, p1, p2, p3]
+627: p16 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+631: p17 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+635: guard_class(p17, 16435208, descr=<Guard0x31853d0>) [i0, p1, p2, p3]
+648: p19 = getfield_gc_r(p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+652: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x3188c80>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) from (void)')
debug_merge_point(0, 0, '(- CellRef(kp) 1)')
+671: guard_class(p16, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x3185418>) [i0, p1, p2, p3]
+685: p22 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+690: i23 = arraylen_gc(p22, descr=<ArrayP 8>)
+694: i25 = int_eq(20, i23)
+698: guard_false(i25, descr=<Guard0x3185460>) [i0, p1, p2, p3]
+704: p26 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+716: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x31854a8>) [i0, p1, p2, p3]
+725: p29 = getarrayitem_gc_pure_r(p22, 6, descr=<ArrayP 8>)
+729: p30 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+733: guard_nonnull_class(p30, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3188ce0>) [i0, p1, p2, p3]
+752: i32 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+756: i34 = int_sub_ovf(i32, 1)
+760: guard_no_overflow(descr=<Guard0x31854f0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))')
debug_merge_point(0, 0, '(vector-ref izrov AppRand134)')
+766: p36 = getarrayitem_gc_pure_r(p22, 5, descr=<ArrayP 8>)
+770: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x3188d40>) [i0, p1, p2, p3]
+789: i39 = int_ge(i34, 0)
+793: guard_true(i39, descr=<Guard0x3185538>) [i0, p1, p2, p3]
+799: i40 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+803: i41 = int_lt(i34, i40)
+806: guard_true(i41, descr=<Guard0x3185580>) [i0, p1, p2, p3]
+812: p42 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+816: guard_class(p42, 16623792, descr=<Guard0x31855c8>) [i0, p1, p2, p3]
+828: p44 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+832: i45 = getarrayitem_gc_i(p44, i34, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(- CellRef(kp) 1)')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
+837: p47 = getarrayitem_gc_pure_r(p22, 8, descr=<ArrayP 8>)
+841: p48 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+845: guard_nonnull_class(p48, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3188da0>) [i0, p1, p2, p3]
+863: i50 = getfield_gc_i(p48, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+867: i52 = int_sub_ovf(i50, 1)
+871: guard_no_overflow(descr=<Guard0x3185610>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand136)')
+877: p54 = getarrayitem_gc_pure_r(p22, 12, descr=<ArrayP 8>)
+881: guard_nonnull_class(p54, ConstClass(W_Vector), descr=<Guard0x3188e00>) [i0, p1, p2, p3]
+899: i57 = int_ge(i52, 0)
+903: guard_true(i57, descr=<Guard0x3185658>) [i0, p1, p2, p3]
+909: i58 = getfield_gc_i(p54, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+913: i59 = int_lt(i52, i58)
+916: guard_true(i59, descr=<Guard0x31856a0>) [i0, p1, p2, p3]
+922: p60 = getfield_gc_r(p54, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+926: guard_class(p60, 16623792, descr=<Guard0x31856e8>) [i0, p1, p2, p3]
+938: p62 = getfield_gc_r(p54, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+942: i63 = getarrayitem_gc_i(p62, i52, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! izrov AppRand135 AppRand137)')
+947: setarrayitem_gc(p44, i34, i63, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t))')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
debug_merge_point(0, 0, '(vector-set! iposv AppRand138 t)')
+952: setarrayitem_gc(p62, i52, i45, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(loop5303)')
debug_merge_point(0, 0, '(let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) from (loop5303)')
debug_merge_point(0, 0, '(+ m 1)')
+957: p65 = getarrayitem_gc_pure_r(p22, 13, descr=<ArrayP 8>)
+961: guard_nonnull_class(p65, ConstClass(W_Fixnum), descr=<Guard0x3188e60>) [p16, p65, p17, p19, None, None, None, None]
+980: i68 = getfield_gc_i(p65, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+984: i70 = int_add_ovf(i68, 1)
+988: guard_no_overflow(descr=<Guard0x3185730>) [p16, p65, p17, p19, None, None, None, None]
debug_merge_point(0, 0, '(simp1 AppRand79 #f)')
+994: p72 = getarrayitem_gc_pure_r(p22, 11, descr=<ArrayP 8>)
+998: guard_nonnull_class(p72, 16479200, descr=<Guard0x3188ec0>) [p16, p65, p17, p19, None, None, None, None]
+1016: p74 = getfield_gc_r(p72, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1027: guard_value(p74, ConstPtr(ptr75), descr=<Guard0x3185778>) [p16, p65, p17, p19, None, None, None, None]
+1036: p76 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0))')
debug_merge_point(0, 0, '(vector-ref l1 0)')
+1036: p77 = getfield_gc_r(p72, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1040: guard_nonnull_class(p77, ConstClass(W_Vector), descr=<Guard0x3188f20>) [p16, p65, p17, p19, None, None, None, None]
+1058: i79 = getfield_gc_i(p77, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1062: i81 = int_lt(0, i79)
+1066: guard_true(i81, descr=<Guard0x31857c0>) [p16, p65, p17, p19, None, None, None, None]
+1072: p82 = getfield_gc_r(p77, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1076: guard_class(p82, 16623792, descr=<Guard0x3185808>) [p16, p65, p17, p19, None, None, None, None]
+1088: p84 = getfield_gc_r(p77, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1092: i86 = getarrayitem_gc_i(p84, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! kp SetBang0)')
+1096: p87 = getfield_gc_r(p72, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1100: p88 = getfield_gc_r(p87, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1104: guard_nonnull_class(p88, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3188f80>) [p16, p65, p17, p19, None, None, None, None]
debug_merge_point(0, 0, '(let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm CellRef(kp))')
+1123: p90 = getfield_gc_r(p72, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1127: setfield_gc(p88, i86, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1131: guard_nonnull_class(p90, ConstClass(W_Vector), descr=<Guard0x3188fe0>) [p90, p16, i70, p72, p17, p19, None, None, None, None]
+1150: p92 = getfield_gc_r(p72, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1154: i94 = int_ge(i70, 0)
+1158: guard_true(i94, descr=<Guard0x3185850>) [p90, p16, i70, p72, p17, p19, None, None, None, None]
+1164: i95 = getfield_gc_i(p90, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1168: i96 = int_lt(i70, i95)
+1171: guard_true(i96, descr=<Guard0x3185898>) [p90, p16, i70, p72, p17, p19, None, None, None, None]
+1177: p97 = getfield_gc_r(p90, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1188: guard_class(p97, 16622984, descr=<Guard0x31858e0>) [p90, p16, i70, p72, p17, p19, None, None, None, None]
+1201: p99 = getfield_gc_r(p90, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1205: p100 = getarrayitem_gc_r(p99, i70, descr=<ArrayP 8>)
+1217: guard_class(p100, ConstClass(W_Vector), descr=<Guard0x3185928>) [p90, p16, i70, p72, p17, p19, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1229: i103 = int_ge(i86, 0)
+1233: guard_true(i103, descr=<Guard0x3185970>) [p90, p16, i70, p72, p17, p19, None, None, None, None]
+1239: i104 = getfield_gc_i(p100, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1250: i105 = int_lt(i86, i104)
+1253: guard_true(i105, descr=<Guard0x31859b8>) [p90, p16, i70, p72, p17, p19, None, None, None, None]
+1259: p106 = getfield_gc_r(p100, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1263: guard_class(p106, 16612728, descr=<Guard0x3185a00>) [p90, p16, i70, p72, p17, p19, None, None, None, None]
+1276: p108 = getfield_gc_r(p100, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1280: f109 = getarrayitem_gc_f(p108, i86, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang1)')
+1287: p110 = getfield_gc_r(p72, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1291: p111 = getfield_gc_r(p110, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1295: guard_nonnull_class(p111, ConstClass(W_CellFloatStrategy), descr=<Guard0x3189040>) [p90, p16, i70, p72, p17, p19, None, None, None, None]
debug_merge_point(0, 0, '(let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1))')
debug_merge_point(0, 0, '(lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))')
+1314: p113 = getfield_gc_r(p72, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1318: setfield_gc(p111, f109, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1324: guard_class(p92, 16505296, descr=<Guard0x31890a0>) [p92, p90, p77, p113, p87, p110, p16, i70, p72, p17, p19, None, None, None, None]
debug_merge_point(0, 0, '(doloop 1)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop 1)')
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+1337: p115 = getfield_gc_r(p113, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1348: guard_nonnull_class(p115, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3189100>) [p92, p90, p77, p113, p87, p110, p16, i70, p72, p17, p19, None, None, None, None]
+1366: i117 = getfield_gc_i(p115, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1377: i119 = int_ge(1, i117)
+1381: guard_false(i119, descr=<Guard0x3185a48>) [p92, p90, p77, p113, p87, p110, p16, i70, p72, p17, p19, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+1387: i120 = int_lt(1, i79)
+1395: guard_true(i120, descr=<Guard0x3185a90>) [p92, p90, p77, p113, p87, p110, p16, i70, p72, p17, p19, None, None, None, None]
+1401: i121 = getarrayitem_gc_i(p84, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1426: p122 = getarrayitem_gc_r(p99, i70, descr=<ArrayP 8>)
+1452: guard_class(p122, ConstClass(W_Vector), descr=<Guard0x3185ad8>) [p92, p90, p77, p113, p87, p110, p16, i70, p72, p17, p19, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1464: i125 = int_ge(i121, 0)
+1468: guard_true(i125, descr=<Guard0x3185b20>) [p92, p90, p77, p113, p87, p110, p16, i70, p72, p17, p19, None, None, None, None]
+1474: i126 = getfield_gc_i(p122, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1485: i127 = int_lt(i121, i126)
+1488: guard_true(i127, descr=<Guard0x3185b68>) [p92, p90, p77, p113, p87, p110, p16, i70, p72, p17, p19, None, None, None, None]
+1494: p128 = getfield_gc_r(p122, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1498: guard_class(p128, 16612728, descr=<Guard0x3185bb0>) [p92, p90, p77, p113, p87, p110, p16, i70, p72, p17, p19, None, None, None, None]
+1510: p130 = getfield_gc_r(p122, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1514: f131 = getarrayitem_gc_f(p130, i121, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+1521: f132 = float_sub(f131, f109)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+1526: i134 = float_gt(f132, 0.000000)
+1541: guard_false(i134, descr=<Guard0x3185bf8>) [p92, p90, p77, p113, p87, p110, p16, i70, p72, p17, p19, None, None, None, None]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+1547: p135 = new_with_vtable(descr=<SizeDescr 80>)
+1598: p136 = new_with_vtable(descr=<SizeDescr 16>)
+1609: setfield_gc(p136, i70, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1613: p137 = new_with_vtable(descr=<SizeDescr 40>)
+1624: i138 = arraylen_gc(p84, descr=<ArrayS 8>)
+1728: i139 = getfield_gc_i(p136, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1739: setfield_gc(p135, ConstPtr(ptr140), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1743: setfield_gc(p137, p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1761: setfield_gc(p137, ConstPtr(ptr141), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1765: setfield_gc(p137, p16, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1769: setfield_gc(p137, p17, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1773: setfield_gc(p135, p92, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1777: setfield_gc(p135, p110, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+1788: setfield_gc(p135, p87, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+1792: setfield_gc(p135, p113, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+1810: setfield_gc(p135, ConstPtr(ptr142), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+1814: setfield_gc(p135, p77, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+1825: setfield_gc(p135, p136, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+1829: setfield_gc(p135, p90, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+1840: i144 = int_ge(i139, 0)
+1844: guard_true(i144, descr=<Guard0x3189160>) [p137, p135, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1850: i146 = int_le(i139, 9223372036854775806)
+1863: guard_true(i146, descr=<Guard0x31891c0>) [p137, p135, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1869: i147 = int_lt(i139, i95)
+1876: guard_true(i147, descr=<Guard0x3189220>) [p137, p135, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+1882: i148 = arraylen_gc(p99, descr=<ArrayP 8>)
+1882: jump(p135, 2, p137, p19, p113, p115, i117, p77, i79, p84, p136, p90, p99, i139, p110, p111, f109, descr=TargetToken(48739520))
+2016: --end of the loop--
[3e4c0a48002df70] jit-log-opt-bridge}
[3e4c0a4802b0ad8] {jit-backend
[3e4c0a48030d690] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d15fb0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F879301000048FF0425F096100366662E0F1F84000000000048FF042510971003488B8D380100008139480E00000F8500000000488B41084883F80172068138900F00000F8500000000488B9530010000813AB01E01000F8500000000488B5A10488B7208813E20BA00000F8500000000488B7E104C8B0585FEFFFF4C39C70F85000000004C8B4620498B78084883FF017206813FF08900000F85000000004C8B4F084C39CB0F8D000000004C8B56304983FA01720741813AF08C00000F85000000004883FB000F8C000000004D8B62084C39E30F8D000000004D8B6A1841817D00F0EE02000F85000000004D8B6A104D8B74DD104C8B7E18498B4F084883F90172068139F08900000F850000000048898540010000488B41084C39F00F8400000000488D53014889B5300100004C8985480100004889BD500100004C8995580100004C89BD6001000048898D680100000F1F84000000000048FF0425306C1A034C39CA0F8D000000004C39E20F8D00000000498B4CD5104839C80F8400000000488D4A014889CAE9CCFFFFFF6666662E0F1F84000000000049BB50C7CE136E7F000041FFD3E95BFEFFFFFF3528FDFFFF49BB885ED1136E7F000041534D8D9B7851FDFF41FFE3FF3514FDFFFF49BB985ED1136E7F000041534D8D9B6851FDFF41FFE3FF3500FDFFFF49BBA85ED1136E7F000041534D8D9B5851FDFF41FFE3FF35ECFCFFFF49BBB85ED1136E7F000041534D8D9B4851FDFF41FFE3FF35D8FCFFFF49BBC85ED1136E7F000041534D8D9B3851FDFF41FFE3FF35CCFCFFFF49BBD85ED1136E7F000041534D8D9B2851FDFF41FFE3FF35B8FCFFFF49BBE85ED1136E7F000041534D8D9B1851FDFF41FFE3FF35A4FCFFFF49BBF85ED1136E7F000041534D8D9B0851FDFF41FFE3FF3590FCFFFF49BB085FD1136E7F000041534D8D9BF850FDFF41FFE3FF357CFCFFFF49BB185FD1136E7F000041534D8D9BE850FDFF41FFE3FF3568FCFFFF49BB285FD1136E7F000041534D8D9BD850FDFF41FFE3FF3554FCFFFF49BB385FD1136E7F000041534D8D9BC850FDFF41FFE3FF3540FCFFFF49BB485FD1136E7F000041534D8D9BB850FDFF41FFE3FF352CFCFFFF49BB585FD1136E7F000041534D8D9BA850FDFF41FFE3FF3518FCFFFF49BB685FD1136E7F000041534D8D9B9850FDFF41FFE3FF3504FCFFFF49BB785FD1136E7F000041534D8D9B8850FDFF41FFE3FF35F0FBFFFF49BB885FD1136E7F000041534D8D9B7850FDFF41FFE3FF35DCFBFFFF49BB985FD1136E7F000041534D8D9B6850FDFF41FFE3
[3e4c0a480315106] jit-backend-dump}
[3e4c0a48031fedd] {jit-backend-addr
Loop 56 ((let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))) from (loop5380 AppRand103)) has address 0x7f6e13d160dd to 0x7f6e13d16270 (bootstrap 0x7f6e13d16050)
       gc table: 0x7f6e13d15fb0
       function: 0x7f6e13d16050
         resops: 0x7f6e13d160dd
       failures: 0x7f6e13d16270
            end: 0x7f6e13d1647a
[3e4c0a480323568] jit-backend-addr}
[3e4c0a480327e9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16107 +0  77010000
[3e4c0a480329099] jit-backend-dump}
[3e4c0a48032c7ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1611d +0  7D010000
[3e4c0a48032d65b] jit-backend-dump}
[3e4c0a480330c0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16130 +0  A2010000
[3e4c0a48033199a] jit-backend-dump}
[3e4c0a480334d9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16144 +0  AA010000
[3e4c0a480335b11] jit-backend-dump}
[3e4c0a480338e04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16158 +0  B2010000
[3e4c0a480339aeb] jit-backend-dump}
[3e4c0a48033ccce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16172 +0  B4010000
[3e4c0a48033d9e6] jit-backend-dump}
[3e4c0a480340bde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1617f +0  C3010000
[3e4c0a4803418d8] jit-backend-dump}
[3e4c0a480344a96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16196 +0  C8010000
[3e4c0a4803457ac] jit-backend-dump}
[3e4c0a4803489a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d161a0 +0  DA010000
[3e4c0a48034969a] jit-backend-dump}
[3e4c0a48034c824] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d161ad +0  E9010000
[3e4c0a48034d534] jit-backend-dump}
[3e4c0a48035076c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d161bf +0  F3010000
[3e4c0a480351453] jit-backend-dump}
[3e4c0a4803545fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d161e2 +0  EC010000
[3e4c0a4803552da] jit-backend-dump}
[3e4c0a4803584c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d161f6 +0  F4010000
[3e4c0a48035918f] jit-backend-dump}
[3e4c0a48035c404] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1623d +0  E5010000
[3e4c0a48035d0e3] jit-backend-dump}
[3e4c0a480360358] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16246 +0  F8010000
[3e4c0a480361027] jit-backend-dump}
[3e4c0a4803641c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16254 +0  06020000
[3e4c0a480364e9f] jit-backend-dump}
[3e4c0a480368c99] jit-backend}
[3e4c0a48036c989] {jit-log-opt-loop
# Loop 56 ((let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))) from (loop5380 AppRand103)) : loop with 76 ops
[p0, p1]
+309: label(p0, p1, descr=TargetToken(51962368))
debug_merge_point(0, 0, '(let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))) from (loop5380 AppRand103)')
+328: guard_class(p1, 16435208, descr=<Guard0x3189280>) [p0, p1]
+347: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+351: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x31892e0>) [p0, p1]
debug_merge_point(0, 0, '(< k5382 CellRef(nl1))')
+369: guard_not_invalidated(descr=<Guard0x3185c40>) [p0, p1]
+369: guard_class(p0, 16504944, descr=<Guard0x3185c88>) [p0, p1]
+388: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+392: p7 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+396: guard_class(p7, 16479200, descr=<Guard0x3185cd0>) [p0, p1]
+408: p9 = getfield_gc_r(p7, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+419: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3185d18>) [p0, p1]
+428: p11 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+432: p12 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+436: guard_nonnull_class(p12, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3189340>) [p0, p1]
+454: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+458: i15 = int_lt(i6, i14)
+461: guard_true(i15, descr=<Guard0x3185d60>) [p0, p1]
debug_merge_point(0, 0, '(let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))')
debug_merge_point(0, 0, '(if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)')
debug_merge_point(0, 0, '(let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102)))')
debug_merge_point(0, 0, '(vector-ref l1 k5382)')
+467: p16 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+471: guard_nonnull_class(p16, ConstClass(W_Vector), descr=<Guard0x31893a0>) [p0, p1]
+490: i19 = int_ge(i6, 0)
+494: guard_true(i19, descr=<Guard0x3185da8>) [p0, p1]
+500: i20 = getfield_gc_i(p16, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+504: i21 = int_lt(i6, i20)
+507: guard_true(i21, descr=<Guard0x3185df0>) [p0, p1]
+513: p22 = getfield_gc_r(p16, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+517: guard_class(p22, 16623792, descr=<Guard0x3185e38>) [p0, p1]
+531: p24 = getfield_gc_r(p16, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+535: i25 = getarrayitem_gc_i(p24, i6, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))')
+540: p26 = getfield_gc_r(p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(= CellRef(kp) AppRand101)')
+540: p27 = getfield_gc_r(p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+544: p28 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+548: guard_nonnull_class(p28, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3189400>) [p0, p1]
+566: i30 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+577: i31 = int_eq(i30, i25)
+580: guard_false(i31, descr=<Guard0x3185e80>) [p0, p1]
debug_merge_point(0, 0, '(not AppRand102)')
debug_merge_point(0, 0, '(if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0))))')
debug_merge_point(0, 0, '(let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103))')
debug_merge_point(0, 0, '(+ k5382 1)')
+586: i33 = int_add(i6, 1)
debug_merge_point(0, 0, '(loop5380 AppRand103)')
debug_merge_point(0, 0, '(let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))) from (loop5380 AppRand103)')
+590: label(p7, i33, p1, p3, p11, p12, i14, p16, i20, p24, p27, p28, i30, descr=TargetToken(51962448))
debug_merge_point(0, 0, '(let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))) from (loop5380 AppRand103)')
debug_merge_point(0, 0, '(< k5382 CellRef(nl1))')
+648: guard_not_invalidated(descr=<Guard0x3189460>) [i33, p7, p1, p3]
+648: i34 = int_lt(i33, i14)
+651: guard_true(i34, descr=<Guard0x3185ec8>) [i33, p7, p1, p3]
debug_merge_point(0, 0, '(let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))')
debug_merge_point(0, 0, '(if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)')
debug_merge_point(0, 0, '(let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102)))')
debug_merge_point(0, 0, '(vector-ref l1 k5382)')
+657: i35 = int_lt(i33, i20)
+660: guard_true(i35, descr=<Guard0x3185f10>) [i33, p7, p1, p3]
+666: i36 = getarrayitem_gc_i(p24, i33, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))')
debug_merge_point(0, 0, '(= CellRef(kp) AppRand101)')
+671: i37 = int_eq(i30, i36)
+674: guard_false(i37, descr=<Guard0x3185f58>) [i33, p7, p1, p3]
debug_merge_point(0, 0, '(not AppRand102)')
debug_merge_point(0, 0, '(if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0))))')
debug_merge_point(0, 0, '(let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103))')
debug_merge_point(0, 0, '(+ k5382 1)')
+680: i39 = int_add(i33, 1)
debug_merge_point(0, 0, '(loop5380 AppRand103)')
debug_merge_point(0, 0, '(let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))) from (loop5380 AppRand103)')
+684: i40 = arraylen_gc(p24, descr=<ArrayS 8>)
+684: jump(p7, i39, p1, p3, p11, p12, i14, p16, i20, p24, p27, p28, i30, descr=TargetToken(51962448))
+704: --end of the loop--
[3e4c0a4803af0c6] jit-log-opt-loop}
[3e4c0a4806ce363] {jit-backend
[3e4c0a48074d553] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a480756e5f] jit-backend-dump}
[3e4c0a480762573] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16744 +0  24000000
[3e4c0a480763970] jit-backend-dump}
[3e4c0a480767b83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16a45 +0  24000000
[3e4c0a480768a8e] jit-backend-dump}
[3e4c0a48076bfbd] {jit-backend-addr
bridge out of Guard 0x2faa7b8 has address 0x7f6e13d16740 to 0x7f6e13d16a40
       gc table: 0x7f6e13d16650
    jump target: 0x7f6e13d16740
         resops: 0x7f6e13d1674e
       failures: 0x7f6e13d16a40
            end: 0x7f6e13d16d5b
[3e4c0a48076e57f] jit-backend-addr}
[3e4c0a480771d55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16762 +0  1D030000
[3e4c0a480772c0a] jit-backend-dump}
[3e4c0a4807761a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16778 +0  23030000
[3e4c0a480776f0c] jit-backend-dump}
[3e4c0a48077a2e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16790 +0  27030000
[3e4c0a48077b025] jit-backend-dump}
[3e4c0a48077e6fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1679d +0  52030000
[3e4c0a48077f437] jit-backend-dump}
[3e4c0a480782846] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d167af +0  5C030000
[3e4c0a48078351b] jit-backend-dump}
[3e4c0a480786710] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d167c3 +0  64030000
[3e4c0a4807873dc] jit-backend-dump}
[3e4c0a48078a5f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d167de +0  65030000
[3e4c0a48078b29d] jit-backend-dump}
[3e4c0a48078e4ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d167ec +0  73030000
[3e4c0a48078f1a8] jit-backend-dump}
[3e4c0a4807923ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16803 +0  78030000
[3e4c0a48079305f] jit-backend-dump}
[3e4c0a4807962a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1680d +0  8A030000
[3e4c0a480796f73] jit-backend-dump}
[3e4c0a48079a15c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1681a +0  99030000
[3e4c0a48079ae18] jit-backend-dump}
[3e4c0a48079e0fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1682a +0  A5030000
[3e4c0a48079eda9] jit-backend-dump}
[3e4c0a4807a209f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1684a +0  A1030000
[3e4c0a4807a2d65] jit-backend-dump}
[3e4c0a4807a5fe7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16860 +0  A7030000
[3e4c0a4807a6c9a] jit-backend-dump}
[3e4c0a4807a9ecc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16871 +0  B2030000
[3e4c0a4807aab83] jit-backend-dump}
[3e4c0a4807addd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1687b +0  C4030000
[3e4c0a4807aea87] jit-backend-dump}
[3e4c0a4807b1caa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16884 +0  D7030000
[3e4c0a4807b296a] jit-backend-dump}
[3e4c0a4807b5ba8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d168af +0  C8030000
[3e4c0a4807b6871] jit-backend-dump}
[3e4c0a4807b9aaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d168c6 +0  CD030000
[3e4c0a4807ba76c] jit-backend-dump}
[3e4c0a4807bd9a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d168d4 +0  DB030000
[3e4c0a4807be65b] jit-backend-dump}
[3e4c0a4807c1887] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d168e6 +0  E5030000
[3e4c0a4807c2544] jit-backend-dump}
[3e4c0a4807c5782] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d168fb +0  EC030000
[3e4c0a4807c6442] jit-backend-dump}
[3e4c0a4807c9677] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16913 +0  F0030000
[3e4c0a4807ca334] jit-backend-dump}
[3e4c0a4807cd597] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1694e +0  D1030000
[3e4c0a4807ce26f] jit-backend-dump}
[3e4c0a4807d14ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16962 +0  D9030000
[3e4c0a4807d21de] jit-backend-dump}
[3e4c0a4807d56df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff8f7 +0  456E0100
[3e4c0a4807d63b1] jit-backend-dump}
[3e4c0a4807da553] jit-backend}
[3e4c0a4807de3a6] {jit-log-opt-bridge
# bridge out of Guard 0x2faa7b8 with 108 ops
[p0, p1]
+269: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x31894c0>) [p0, p1]
+278: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+282: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+286: guard_class(p4, 16435208, descr=<Guard0x3185fa0>) [p0, p1]
+300: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+304: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3189520>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
+324: guard_not_invalidated(descr=<Guard0x31fa020>) [p0, p1]
+324: guard_class(p3, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x31fa068>) [p0, p1]
+337: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+341: i10 = arraylen_gc(p9, descr=<ArrayP 8>)
+345: i12 = int_eq(20, i10)
+349: guard_false(i12, descr=<Guard0x31fa0b0>) [p0, p1]
+355: p13 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+366: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x31fa0f8>) [p0, p1]
+375: p16 = getarrayitem_gc_pure_r(p9, 8, descr=<ArrayP 8>)
+379: p17 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+383: guard_nonnull_class(p17, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3189580>) [p0, p1]
+402: i19 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+406: i21 = int_sub_ovf(i19, 1)
+410: guard_no_overflow(descr=<Guard0x31fa140>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand98)')
+416: p23 = getarrayitem_gc_pure_r(p9, 12, descr=<ArrayP 8>)
+420: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x31895e0>) [p0, p1]
+439: i26 = int_ge(i21, 0)
+443: guard_true(i26, descr=<Guard0x31fa188>) [p0, p1]
+449: i27 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+453: i28 = int_lt(i21, i27)
+456: guard_true(i28, descr=<Guard0x31fa1d0>) [p0, p1]
+462: p29 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+466: guard_class(p29, 16623792, descr=<Guard0x31fa218>) [p0, p1]
+478: p31 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+482: i32 = getarrayitem_gc_i(p31, i21, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(+ n m12 -1)')
+487: p34 = getarrayitem_gc_pure_r(p9, 4, descr=<ArrayP 8>)
+491: guard_nonnull_class(p34, ConstClass(W_Fixnum), descr=<Guard0x3189640>) [p0, p1]
+510: p37 = getarrayitem_gc_pure_r(p9, 1, descr=<ArrayP 8>)
+514: guard_nonnull_class(p37, ConstClass(W_Fixnum), descr=<Guard0x31896a0>) [p0, p1]
+532: i39 = getfield_gc_i(p34, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+536: i40 = getfield_gc_i(p37, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+540: i41 = int_add_ovf(i39, i40)
+543: guard_no_overflow(descr=<Guard0x31fa260>) [p0, p1]
+549: i43 = int_add_ovf(i41, -1)
+553: guard_no_overflow(descr=<Guard0x31fa2a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void))))))))')
debug_merge_point(0, 0, '(>= AppRand99 AppRand100)')
+559: i44 = int_ge(i32, i43)
+562: guard_true(i44, descr=<Guard0x31fa2f0>) [p0, p1]
debug_merge_point(0, 0, '(if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))')
debug_merge_point(0, 0, '(let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0))')
+568: p45 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))')
+572: p47 = getarrayitem_gc_pure_r(p9, 6, descr=<ArrayP 8>)
+576: p49 = getarrayitem_gc_pure_r(p9, 7, descr=<ArrayP 8>)
+580: p51 = getarrayitem_gc_pure_r(p9, 13, descr=<ArrayP 8>)
+584: p53 = getarrayitem_gc_pure_r(p9, 14, descr=<ArrayP 8>)
+591: p55 = getarrayitem_gc_pure_r(p9, 18, descr=<ArrayP 8>)
+598: guard_class(p45, 16505296, descr=<Guard0x31fa338>) [p0, p1]
debug_merge_point(0, 0, '(loop5380 0)')
debug_merge_point(0, 0, '(let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))) from (loop5380 0)')
debug_merge_point(0, 0, '(< k5382 CellRef(nl1))')
+611: p57 = getfield_gc_r(p49, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+615: guard_nonnull_class(p57, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3189700>) [p0, p1]
+634: i59 = getfield_gc_i(p57, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+638: i61 = int_lt(0, i59)
+642: guard_true(i61, descr=<Guard0x31fa380>) [p0, p1]
debug_merge_point(0, 0, '(let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))')
debug_merge_point(0, 0, '(if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)')
debug_merge_point(0, 0, '(let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102)))')
debug_merge_point(0, 0, '(vector-ref l1 k5382)')
+648: guard_nonnull_class(p53, ConstClass(W_Vector), descr=<Guard0x3189760>) [p0, p1]
+666: i63 = getfield_gc_i(p53, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+677: i64 = int_lt(0, i63)
+681: guard_true(i64, descr=<Guard0x31fa3c8>) [p0, p1]
+687: p65 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+698: guard_class(p65, 16623792, descr=<Guard0x31fa410>) [p0, p1]
+711: p67 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+715: i68 = getarrayitem_gc_i(p67, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))')
debug_merge_point(0, 0, '(= CellRef(kp) AppRand101)')
+726: p69 = getfield_gc_r(p47, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+751: guard_nonnull_class(p69, ConstClass(W_CellIntegerStrategy), descr=<Guard0x31897c0>) [p0, p1]
+770: i71 = getfield_gc_i(p69, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+781: i72 = int_eq(i71, i68)
+784: guard_false(i72, descr=<Guard0x31fa458>) [p0, p1]
debug_merge_point(0, 0, '(not AppRand102)')
debug_merge_point(0, 0, '(if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0))))')
debug_merge_point(0, 0, '(let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103))')
debug_merge_point(0, 0, '(+ k5382 1)')
debug_merge_point(0, 0, '(loop5380 AppRand103)')
debug_merge_point(0, 0, '(let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))) from (loop5380 AppRand103)')
+790: p73 = new_with_vtable(descr=<SizeDescr 64>)
+837: p74 = new_with_vtable(descr=<SizeDescr 40>)
+848: i75 = arraylen_gc(p67, descr=<ArrayS 8>)
+855: setfield_gc(p74, ConstPtr(ptr76), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+859: setfield_gc(p74, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+863: setfield_gc(p74, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+867: setfield_gc(p74, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+885: setfield_gc(p73, ConstPtr(ptr77), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+889: setfield_gc(p73, p45, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+893: setfield_gc(p73, p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+897: setfield_gc(p73, p49, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+908: setfield_gc(p73, p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+912: setfield_gc(p73, p53, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+923: setfield_gc(p73, p55, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+927: jump(p73, 1, p74, p6, p49, p57, i59, p53, i63, p67, p47, p69, i71, descr=TargetToken(51962448))
+1008: --end of the loop--
[3e4c0a48083c903] jit-log-opt-bridge}
[3e4c0a480f7ea2c] {jit-backend
[3e4c0a481108e0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16f
[3e4c0a48111a9a3] jit-backend-dump}
[3e4c0a481126c07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17114 +0  27000000
[3e4c0a4811280e7] jit-backend-dump}
[3e4c0a48112c8cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17b35 +0  27000000
[3e4c0a48112d85a] jit-backend-dump}
[3e4c0a481130eb5] {jit-backend-addr
bridge out of Guard 0x2faba90 has address 0x7f6e13d17110 to 0x7f6e13d17b30
       gc table: 0x7f6e13d16f50
    jump target: 0x7f6e13d17110
         resops: 0x7f6e13d1711e
       failures: 0x7f6e13d17b30
            end: 0x7f6e13d17e7d
[3e4c0a481133434] jit-backend-addr}
[3e4c0a481136e5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17136 +0  550A0000
[3e4c0a481137cca] jit-backend-dump}
[3e4c0a48113b245] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17152 +0  550A0000
[3e4c0a48113bf58] jit-backend-dump}
[3e4c0a48113f39e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1715f +0  640A0000
[3e4c0a4811400c0] jit-backend-dump}
[3e4c0a48114341a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17173 +0  6C0A0000
[3e4c0a48114417f] jit-backend-dump}
[3e4c0a481147686] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17188 +0  730A0000
[3e4c0a4811483e2] jit-backend-dump}
[3e4c0a48114b783] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1719c +0  7B0A0000
[3e4c0a48114c496] jit-backend-dump}
[3e4c0a48114f764] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d171b7 +0  7C0A0000
[3e4c0a481150448] jit-backend-dump}
[3e4c0a481153704] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d171d2 +0  7D0A0000
[3e4c0a481154426] jit-backend-dump}
[3e4c0a481157762] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d171e9 +0  7C0A0000
[3e4c0a48115845c] jit-backend-dump}
[3e4c0a48115b896] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17200 +0  810A0000
[3e4c0a48115c584] jit-backend-dump}
[3e4c0a48115f886] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1720e +0  8F0A0000
[3e4c0a481160555] jit-backend-dump}
[3e4c0a481163817] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17223 +0  960A0000
[3e4c0a4811644ef] jit-backend-dump}
[3e4c0a481167740] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1723a +0  9B0A0000
[3e4c0a48116841b] jit-backend-dump}
[3e4c0a48116b6da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1724c +0  A50A0000
[3e4c0a48116c3b2] jit-backend-dump}
[3e4c0a48116f5b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17264 +0  A90A0000
[3e4c0a48117028b] jit-backend-dump}
[3e4c0a481173538] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17272 +0  B70A0000
[3e4c0a481174232] jit-backend-dump}
[3e4c0a48117745e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17286 +0  BF0A0000
[3e4c0a481178139] jit-backend-dump}
[3e4c0a48117b37a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17293 +0  CE0A0000
[3e4c0a48117c056] jit-backend-dump}
[3e4c0a48117f27c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d172a0 +0  DD0A0000
[3e4c0a48117ff51] jit-backend-dump}
[3e4c0a48118349b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d172b6 +0  E30A0000
[3e4c0a481184189] jit-backend-dump}
[3e4c0a4811874a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d172c3 +0  F20A0000
[3e4c0a481188182] jit-backend-dump}
[3e4c0a48118b42b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17a84 +0  4D030000
[3e4c0a48118c103] jit-backend-dump}
[3e4c0a48118f34e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17a92 +0  5B030000
[3e4c0a48119003f] jit-backend-dump}
[3e4c0a4811932df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17a9f +0  6A030000
[3e4c0a481194007] jit-backend-dump}
[3e4c0a4811973e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17ab7 +0  6E030000
[3e4c0a4811980b4] jit-backend-dump}
[3e4c0a48119b351] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17ac5 +0  7C030000
[3e4c0a48119c085] jit-backend-dump}
[3e4c0a48119f3d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17ad2 +0  8B030000
[3e4c0a4811a0084] jit-backend-dump}
[3e4c0a4811a3588] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d01902 +0  0A580100
[3e4c0a4811a424e] jit-backend-dump}
[3e4c0a4811a8342] jit-backend}
[3e4c0a4811ac0e6] {jit-log-opt-bridge
# bridge out of Guard 0x2faba90 with 350 ops
[i0, p1, p2, p3]
+470: guard_not_invalidated(descr=<Guard0x3189820>) [i0, p1, p2, p3]
+470: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+481: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x31fa800>) [i0, p1, p2, p3]
+490: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+494: p7 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+499: guard_nonnull_class(p7, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3189880>) [i0, p1, p2, p3]
+518: i9 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+522: i10 = int_ge(i0, i9)
+525: guard_true(i10, descr=<Guard0x31fa848>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(void)')
+531: p11 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+542: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x31fa890>) [i0, p1, p2, p3]
+551: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+555: p14 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)) from (void)')
+559: guard_class(p13, 16480328, descr=<Guard0x31fa8d8>) [i0, p1, p2, p3]
+572: p16 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+583: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x31fa920>) [i0, p1, p2, p3]
+592: p18 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_0 24 pure>)
+596: p19 = getfield_gc_r(p18, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+600: guard_nonnull_class(p19, ConstClass(W_CellFloatStrategy), descr=<Guard0x31898e0>) [i0, p1, p2, p3]
+619: f21 = getfield_gc_f(p19, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+625: i23 = float_gt(f21, 0.000000)
+640: guard_false(i23, descr=<Guard0x31fa968>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(list iposv izrov)')
+646: p24 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_7 80 pure>)
+650: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x3189940>) [i0, p1, p2, p3]
+669: p26 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_1 32 pure>)
+673: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x31899a0>) [i0, p1, p2, p3]
+692: guard_class(p14, 16435208, descr=<Guard0x31fa9b0>) [i0, p1, p2, p3]
+706: p29 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+718: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x31fa9f8>) [i0, p1, p2, p3]
+727: p31 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+732: p32 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop5508 (add1 i5510)) from (list iposv izrov)')
+737: guard_class(p31, 16504944, descr=<Guard0x31faa40>) [i0, p1, p2, p3]
+750: p34 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+754: guard_class(p34, 16499664, descr=<Guard0x31faa88>) [i0, p1, p2, p3]
+768: p36 = getfield_gc_r(p34, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+773: guard_nonnull_class(p36, 16510992, descr=<Guard0x3189a00>) [i0, p1, p2, p3]
+792: i38 = getfield_gc_i(p31, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+796: i40 = int_add_ovf(i38, 1)
+800: guard_no_overflow(descr=<Guard0x31faad0>) [i0, p1, p2, p3]
+806: p41 = getfield_gc_r(p36, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+817: guard_value(p41, ConstPtr(ptr42), descr=<Guard0x31fab18>) [i0, p1, p2, p3]
+826: p43 = getfield_gc_r(p36, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+830: i44 = instance_ptr_eq(p34, p43)
+833: guard_true(i44, descr=<Guard0x31fab60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if37 (> i5510 simplex-iters)]) (if if37 (begin (void) (void)) (begin (test) (doloop5508 (add1 i5510))))) from (doloop5508 (add1 i5510))')
+839: guard_class(p32, 16528368, descr=<Guard0x31faba8>) [i0, p1, p2, p3]
+852: p46 = getfield_gc_r(p32, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+856: guard_nonnull_class(p46, ConstClass(ForwardLink), descr=<Guard0x3189a60>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(> i5510 simplex-iters)')
+874: i49 = int_gt(i40, 800000)
+881: guard_false(i49, descr=<Guard0x31fabf0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if37 (begin (void) (void)) (begin (test) (doloop5508 (add1 i5510))))')
debug_merge_point(0, 0, '(begin (test) (doloop5508 (add1 i5510)))')
debug_merge_point(0, 0, '(test)')
+887: p50 = getfield_gc_r(p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand144 (vector 0.0 1.0 1.0 3.0 -0.5)][AppRand145 (vector 740.0 -1.0 0.0 -2.0 0.0)][AppRand146 (vector 0.0 0.0 -2.0 0.0 7.0)][AppRand147 (vector 0.5 0.0 -1.0 1.0 -2.0)][AppRand148 (vector 9.0 -1.0 -1.0 -1.0 -1.0)][AppRand149 (vector 0.0 0.0 0.0 0.0 0.0)]) (let ([AppRand150 (vector AppRand144 AppRand145 AppRand146 AppRand147 AppRand148 AppRand149)]) (simplex AppRand150 2 1 1)))')
debug_merge_point(0, 0, '(vector 0.0 1.0 1.0 3.0 -0.5)')
debug_merge_point(0, 0, '(vector 740.0 -1.0 0.0 -2.0 0.0)')
debug_merge_point(0, 0, '(vector 0.0 0.0 -2.0 0.0 7.0)')
debug_merge_point(0, 0, '(vector 0.5 0.0 -1.0 1.0 -2.0)')
debug_merge_point(0, 0, '(vector 9.0 -1.0 -1.0 -1.0 -1.0)')
debug_merge_point(0, 0, '(vector 0.0 0.0 0.0 0.0 0.0)')
debug_merge_point(0, 0, '(let ([AppRand150 (vector AppRand144 AppRand145 AppRand146 AppRand147 AppRand148 AppRand149)]) (simplex AppRand150 2 1 1))')
debug_merge_point(0, 0, '(vector AppRand144 AppRand145 AppRand146 AppRand147 AppRand148 AppRand149)')
debug_merge_point(0, 0, '(simplex AppRand150 2 1 1)')
debug_merge_point(0, 0, '(let ([*epsilon* 1e-06][if0 (>= m1 0)]) (let ([AppRand5 (if if0 (let ([if1 (>= m2 0)]) (if if1 (let ([if2 (>= m3 0)]) (if if2 (let ([AppRand3 (matrix-rows a5002)][AppRand4 (+ m1 m2 m3 2)]) (= AppRand3 AppRand4)) #f)) #f)) #f)]) (if (not AppRand5) (fuck-up) (void))) (let ([m12 (+ m1 m2 1)][AppRand6 (matrix-rows a5002)]) (let ([m (- AppRand6 2)][AppRand7 (matrix-columns a5002)]) (let ([n (- AppRand7 1)]) (let ([l1 (make-vector n)][l2 (make-vector m)][l3 (make-vector m2)][nl1 n][iposv (make-vector m)][izrov (make-vector n)][ip 0][kp 0][bmax 0.0]) (let ([one? #f][pass2? #t][simp1 (lambda (mm abs?) (let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0)) (let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1)) (let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1)))][simp2 (lambda () (set! ip 0) (let ([q1 0.0][flag? #f]) (let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0))))][simp3 (lambda (one?5161) (let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))))][doloop5229 (lambda (k5231) (let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))))]) (doloop5229 0) (let ([doloop5244 (lambda (i5246) (let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))))]) (doloop5244 0)) (let ([doloop5262 (lambda (i5264) (let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))))]) (doloop5262 0)) (let ([AppRand70 (+ m2 m3)]) (if (positive? AppRand70) (let ([doloop5275 (lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))]) (doloop5275 0) (let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303))) (void))) (if CellRef(pass2?) (let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476)) #f)))))))')
debug_merge_point(0, 0, '1e-06')
debug_merge_point(0, 0, '(>= m1 0)')
debug_merge_point(0, 0, '(let ([AppRand5 (if if0 (let ([if1 (>= m2 0)]) (if if1 (let ([if2 (>= m3 0)]) (if if2 (let ([AppRand3 (matrix-rows a5002)][AppRand4 (+ m1 m2 m3 2)]) (= AppRand3 AppRand4)) #f)) #f)) #f)]) (if (not AppRand5) (fuck-up) (void)))')
debug_merge_point(0, 0, '(if if0 (let ([if1 (>= m2 0)]) (if if1 (let ([if2 (>= m3 0)]) (if if2 (let ([AppRand3 (matrix-rows a5002)][AppRand4 (+ m1 m2 m3 2)]) (= AppRand3 AppRand4)) #f)) #f)) #f)')
debug_merge_point(0, 0, '(let ([if1 (>= m2 0)]) (if if1 (let ([if2 (>= m3 0)]) (if if2 (let ([AppRand3 (matrix-rows a5002)][AppRand4 (+ m1 m2 m3 2)]) (= AppRand3 AppRand4)) #f)) #f))')
debug_merge_point(0, 0, '(>= m2 0)')
debug_merge_point(0, 0, '(if if1 (let ([if2 (>= m3 0)]) (if if2 (let ([AppRand3 (matrix-rows a5002)][AppRand4 (+ m1 m2 m3 2)]) (= AppRand3 AppRand4)) #f)) #f)')
debug_merge_point(0, 0, '(let ([if2 (>= m3 0)]) (if if2 (let ([AppRand3 (matrix-rows a5002)][AppRand4 (+ m1 m2 m3 2)]) (= AppRand3 AppRand4)) #f))')
debug_merge_point(0, 0, '(>= m3 0)')
debug_merge_point(0, 0, '(if if2 (let ([AppRand3 (matrix-rows a5002)][AppRand4 (+ m1 m2 m3 2)]) (= AppRand3 AppRand4)) #f)')
debug_merge_point(0, 0, '(let ([AppRand3 (matrix-rows a5002)][AppRand4 (+ m1 m2 m3 2)]) (= AppRand3 AppRand4))')
debug_merge_point(0, 0, '(matrix-rows a5002)')
debug_merge_point(0, 0, '(vector-length a)')
debug_merge_point(0, 0, '(+ m1 m2 m3 2)')
debug_merge_point(0, 0, '(= AppRand3 AppRand4)')
debug_merge_point(0, 0, '(if (not AppRand5) (fuck-up) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([m12 (+ m1 m2 1)][AppRand6 (matrix-rows a5002)]) (let ([m (- AppRand6 2)][AppRand7 (matrix-columns a5002)]) (let ([n (- AppRand7 1)]) (let ([l1 (make-vector n)][l2 (make-vector m)][l3 (make-vector m2)][nl1 n][iposv (make-vector m)][izrov (make-vector n)][ip 0][kp 0][bmax 0.0]) (let ([one? #f][pass2? #t][simp1 (lambda (mm abs?) (let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0)) (let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1)) (let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1)))][simp2 (lambda () (set! ip 0) (let ([q1 0.0][flag? #f]) (let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0))))][simp3 (lambda (one?5161) (let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))))][doloop5229 (lambda (k5231) (let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))))]) (doloop5229 0) (let ([doloop5244 (lambda (i5246) (let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))))]) (doloop5244 0)) (let ([doloop5262 (lambda (i5264) (let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))))]) (doloop5262 0)) (let ([AppRand70 (+ m2 m3)]) (if (positive? AppRand70) (let ([doloop5275 (lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))]) (doloop5275 0) (let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303))) (void))) (if CellRef(pass2?) (let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476)) #f))))))')
debug_merge_point(0, 0, '(+ m1 m2 1)')
debug_merge_point(0, 0, '(matrix-rows a5002)')
debug_merge_point(0, 0, '(vector-length a)')
debug_merge_point(0, 0, '(let ([m (- AppRand6 2)][AppRand7 (matrix-columns a5002)]) (let ([n (- AppRand7 1)]) (let ([l1 (make-vector n)][l2 (make-vector m)][l3 (make-vector m2)][nl1 n][iposv (make-vector m)][izrov (make-vector n)][ip 0][kp 0][bmax 0.0]) (let ([one? #f][pass2? #t][simp1 (lambda (mm abs?) (let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0)) (let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1)) (let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1)))][simp2 (lambda () (set! ip 0) (let ([q1 0.0][flag? #f]) (let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0))))][simp3 (lambda (one?5161) (let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))))][doloop5229 (lambda (k5231) (let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))))]) (doloop5229 0) (let ([doloop5244 (lambda (i5246) (let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))))]) (doloop5244 0)) (let ([doloop5262 (lambda (i5264) (let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))))]) (doloop5262 0)) (let ([AppRand70 (+ m2 m3)]) (if (positive? AppRand70) (let ([doloop5275 (lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))]) (doloop5275 0) (let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303))) (void))) (if CellRef(pass2?) (let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476)) #f)))))')
debug_merge_point(0, 0, '(- AppRand6 2)')
debug_merge_point(0, 0, '(matrix-columns a5002)')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref a4981 0)]) (vector-length AppRand0))')
debug_merge_point(0, 0, '(vector-ref a4981 0)')
debug_merge_point(0, 0, '(vector-length AppRand0)')
debug_merge_point(0, 0, '(let ([n (- AppRand7 1)]) (let ([l1 (make-vector n)][l2 (make-vector m)][l3 (make-vector m2)][nl1 n][iposv (make-vector m)][izrov (make-vector n)][ip 0][kp 0][bmax 0.0]) (let ([one? #f][pass2? #t][simp1 (lambda (mm abs?) (let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0)) (let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1)) (let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1)))][simp2 (lambda () (set! ip 0) (let ([q1 0.0][flag? #f]) (let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0))))][simp3 (lambda (one?5161) (let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))))][doloop5229 (lambda (k5231) (let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))))]) (doloop5229 0) (let ([doloop5244 (lambda (i5246) (let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))))]) (doloop5244 0)) (let ([doloop5262 (lambda (i5264) (let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))))]) (doloop5262 0)) (let ([AppRand70 (+ m2 m3)]) (if (positive? AppRand70) (let ([doloop5275 (lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))]) (doloop5275 0) (let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303))) (void))) (if CellRef(pass2?) (let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476)) #f))))')
debug_merge_point(0, 0, '(- AppRand7 1)')
debug_merge_point(0, 0, '(let ([l1 (make-vector n)][l2 (make-vector m)][l3 (make-vector m2)][nl1 n][iposv (make-vector m)][izrov (make-vector n)][ip 0][kp 0][bmax 0.0]) (let ([one? #f][pass2? #t][simp1 (lambda (mm abs?) (let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0)) (let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1)) (let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1)))][simp2 (lambda () (set! ip 0) (let ([q1 0.0][flag? #f]) (let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0))))][simp3 (lambda (one?5161) (let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))))][doloop5229 (lambda (k5231) (let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))))]) (doloop5229 0) (let ([doloop5244 (lambda (i5246) (let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))))]) (doloop5244 0)) (let ([doloop5262 (lambda (i5264) (let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))))]) (doloop5262 0)) (let ([AppRand70 (+ m2 m3)]) (if (positive? AppRand70) (let ([doloop5275 (lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))]) (doloop5275 0) (let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303))) (void))) (if CellRef(pass2?) (let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476)) #f)))')
debug_merge_point(0, 0, '(make-vector n)')
debug_merge_point(0, 0, '(make-vector m)')
debug_merge_point(0, 0, '(make-vector m2)')
debug_merge_point(0, 0, 'n')
debug_merge_point(0, 0, '(make-vector m)')
debug_merge_point(0, 0, '(make-vector n)')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, '0.0')
debug_merge_point(0, 0, '(let ([one? #f][pass2? #t][simp1 (lambda (mm abs?) (let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0)) (let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1)) (let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1)))][simp2 (lambda () (set! ip 0) (let ([q1 0.0][flag? #f]) (let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0))))][simp3 (lambda (one?5161) (let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))))][doloop5229 (lambda (k5231) (let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))))]) (doloop5229 0) (let ([doloop5244 (lambda (i5246) (let ([if16 (= i5246 m)]) (if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))))]) (doloop5244 0)) (let ([doloop5262 (lambda (i5264) (let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))))]) (doloop5262 0)) (let ([AppRand70 (+ m2 m3)]) (if (positive? AppRand70) (let ([doloop5275 (lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))]) (doloop5275 0) (let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303))) (void))) (if CellRef(pass2?) (let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476)) #f))')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '#t')
debug_merge_point(0, 0, '(lambda (mm abs?) (let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0)) (let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1)) (let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1)))')
debug_merge_point(0, 0, '(lambda () (set! ip 0) (let ([q1 0.0][flag? #f]) (let ([doloop5078 (lambda (i5080) (let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))))]) (doloop5078 0))))')
debug_merge_point(0, 0, '(lambda (one?5161) (let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))))')
debug_merge_point(0, 0, '(lambda (k5231) (let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))))')
debug_merge_point(0, 0, '(doloop5229 0)')
debug_merge_point(0, 0, '(let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))) from (doloop5229 0)')
debug_merge_point(0, 0, '(= k5231 n)')
debug_merge_point(0, 0, '(if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))')
debug_merge_point(0, 0, '(let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63)))')
debug_merge_point(0, 0, '(+ k5231 1)')
debug_merge_point(0, 0, '(vector-set! l1 k5231 AppRand62)')
debug_merge_point(0, 0, '(vector-set! izrov k5231 k5231)')
debug_merge_point(0, 0, '(let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))')
debug_merge_point(0, 0, '(+ k5231 1)')
debug_merge_point(0, 0, '(doloop5229 AppRand63)')
debug_merge_point(0, 0, '(let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))) from (doloop5229 AppRand63)')
+887: p51 = new_with_vtable(descr=<SizeDescr 48>)
+931: p52 = new_with_vtable(descr=<SizeDescr 32>)
+942: setfield_gc(p52, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+950: p55 = new_array_clear(1, descr=<ArrayP 8>)
+977: setarrayitem_gc(p55, 0, ConstPtr(ptr57), descr=<ArrayP 8>)
+981: setfield_gc(p52, p55, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+992: setfield_gc(p52, ConstPtr(ptr58), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+996: p59 = new_with_vtable(descr=<SizeDescr 32>)
+1007: setfield_gc(p59, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1015: p62 = new_array_clear(4, descr=<ArrayS 8>)
+1052: setarrayitem_gc(p62, 0, 1, descr=<ArrayS 8>)
+1060: setfield_gc(p59, p62, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1071: setfield_gc(p59, ConstPtr(ptr65), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1075: p66 = new_with_vtable(descr=<SizeDescr 40>)
+1086: p67 = new_with_vtable(descr=<SizeDescr 64>)
+1098: p68 = new_with_vtable(descr=<SizeDescr 88>)
+1109: p69 = new_with_vtable(descr=<SizeDescr 24>)
+1127: p70 = new_with_vtable(descr=<SizeDescr 32>)
+1145: p71 = new_with_vtable(descr=<SizeDescr 32>)
+1163: p72 = new_with_vtable(descr=<SizeDescr 32>)
+1181: p73 = new_with_vtable(descr=<SizeDescr 48>)
+1213: setfield_gc(p73, ConstPtr(ptr74), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1217: p75 = new_with_vtable(descr=<SizeDescr 32>)
+1236: setfield_gc(p75, 6, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1244: p78 = new_array_clear(6, descr=<ArrayP 8>)
+1270: p79 = new_with_vtable(descr=<SizeDescr 32>)
+1288: setfield_gc(p79, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1296: p82 = new_array(5, descr=<ArrayF 8>)
+1322: setarrayitem_gc(p82, 0, 0.000000, descr=<ArrayF 8>)
+1330: setarrayitem_gc(p82, 1, 1.000000, descr=<ArrayF 8>)
+1344: setarrayitem_gc(p82, 2, 1.000000, descr=<ArrayF 8>)
+1348: setarrayitem_gc(p82, 3, 3.000000, descr=<ArrayF 8>)
+1362: setarrayitem_gc(p82, 4, -0.500000, descr=<ArrayF 8>)
+1376: setfield_gc(p79, p82, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1394: setfield_gc(p79, ConstPtr(ptr93), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1398: setarrayitem_gc(p78, 0, p79, descr=<ArrayP 8>)
+1402: p95 = new_with_vtable(descr=<SizeDescr 32>)
+1413: setfield_gc(p95, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1421: p98 = new_array(5, descr=<ArrayF 8>)
+1440: setarrayitem_gc(p98, 0, 740.000000, descr=<ArrayF 8>)
+1454: setarrayitem_gc(p98, 1, -1.000000, descr=<ArrayF 8>)
+1468: setarrayitem_gc(p98, 2, 0.000000, descr=<ArrayF 8>)
+1476: setarrayitem_gc(p98, 3, -2.000000, descr=<ArrayF 8>)
+1490: setarrayitem_gc(p98, 4, 0.000000, descr=<ArrayF 8>)
+1498: setfield_gc(p95, p98, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1502: setfield_gc(p95, ConstPtr(ptr109), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1506: setarrayitem_gc(p78, 1, p95, descr=<ArrayP 8>)
+1510: p111 = new_with_vtable(descr=<SizeDescr 32>)
+1521: setfield_gc(p111, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1529: p114 = new_array(5, descr=<ArrayF 8>)
+1548: setarrayitem_gc(p114, 0, 0.000000, descr=<ArrayF 8>)
+1556: setarrayitem_gc(p114, 1, 0.000000, descr=<ArrayF 8>)
+1564: setarrayitem_gc(p114, 2, -2.000000, descr=<ArrayF 8>)
+1568: setarrayitem_gc(p114, 3, 0.000000, descr=<ArrayF 8>)
+1576: setarrayitem_gc(p114, 4, 7.000000, descr=<ArrayF 8>)
+1590: setfield_gc(p111, p114, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1594: setfield_gc(p111, ConstPtr(ptr125), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1598: setarrayitem_gc(p78, 2, p111, descr=<ArrayP 8>)
+1602: p127 = new_with_vtable(descr=<SizeDescr 32>)
+1613: setfield_gc(p127, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1621: p130 = new_array(5, descr=<ArrayF 8>)
+1640: setarrayitem_gc(p130, 0, 0.500000, descr=<ArrayF 8>)
+1654: setarrayitem_gc(p130, 1, 0.000000, descr=<ArrayF 8>)
+1662: setarrayitem_gc(p130, 2, -1.000000, descr=<ArrayF 8>)
+1676: setarrayitem_gc(p130, 3, 1.000000, descr=<ArrayF 8>)
+1690: setarrayitem_gc(p130, 4, -2.000000, descr=<ArrayF 8>)
+1704: setfield_gc(p127, p130, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1708: setfield_gc(p127, ConstPtr(ptr141), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1712: setarrayitem_gc(p78, 3, p127, descr=<ArrayP 8>)
+1716: p143 = new_with_vtable(descr=<SizeDescr 32>)
+1727: setfield_gc(p143, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1735: p146 = new_array(5, descr=<ArrayF 8>)
+1754: setarrayitem_gc(p146, 0, 9.000000, descr=<ArrayF 8>)
+1768: setarrayitem_gc(p146, 1, -1.000000, descr=<ArrayF 8>)
+1782: setarrayitem_gc(p146, 2, -1.000000, descr=<ArrayF 8>)
+1786: setarrayitem_gc(p146, 3, -1.000000, descr=<ArrayF 8>)
+1790: setarrayitem_gc(p146, 4, -1.000000, descr=<ArrayF 8>)
+1794: setfield_gc(p143, p146, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1798: setfield_gc(p143, ConstPtr(ptr157), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1802: setarrayitem_gc(p78, 4, p143, descr=<ArrayP 8>)
+1806: p159 = new_with_vtable(descr=<SizeDescr 32>)
+1817: setfield_gc(p159, 5, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1825: p162 = new_array(5, descr=<ArrayF 8>)
+1844: setarrayitem_gc(p162, 0, 0.000000, descr=<ArrayF 8>)
+1852: setarrayitem_gc(p162, 1, 0.000000, descr=<ArrayF 8>)
+1860: setarrayitem_gc(p162, 2, 0.000000, descr=<ArrayF 8>)
+1868: setarrayitem_gc(p162, 3, 0.000000, descr=<ArrayF 8>)
+1876: setarrayitem_gc(p162, 4, 0.000000, descr=<ArrayF 8>)
+1884: setfield_gc(p159, p162, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1888: setfield_gc(p159, ConstPtr(ptr173), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1892: setarrayitem_gc(p78, 5, p159, descr=<ArrayP 8>)
+1896: setfield_gc(p75, p78, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1907: setfield_gc(p75, ConstPtr(ptr175), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1911: setfield_gc(p73, p75, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+1922: setfield_gc(p73, ConstPtr(ptr176), descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1933: setfield_gc(p73, ConstPtr(ptr177), descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+1944: setfield_gc(p73, ConstPtr(ptr178), descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+1948: setfield_gc(p72, p73, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1959: setfield_gc(p72, ConstPtr(ptr179), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+1970: setfield_gc(p72, ConstPtr(ptr180), descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+1974: setfield_gc(p71, p72, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1978: setfield_gc(p71, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1986: setfield_gc(p71, 6, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+1994: setfield_gc(p70, p71, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1998: setfield_gc(p70, 4, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+2006: setfield_gc(p70, 5, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+2014: setfield_gc(p69, p70, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2018: setfield_gc(p69, 4, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+2026: setfield_gc(p68, p69, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2030: setfield_gc(p68, p59, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_0 16 pure>)
+2041: p186 = new_with_vtable(descr=<SizeDescr 32>)
+2052: setfield_gc(p186, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2060: p189 = new_array_clear(1, descr=<ArrayP 8>)
+2079: setarrayitem_gc(p189, 0, ConstPtr(ptr191), descr=<ArrayP 8>)
+2083: setfield_gc(p186, p189, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2087: setfield_gc(p186, ConstPtr(ptr192), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2091: setfield_gc(p68, p186, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_1 24 pure>)
+2095: p193 = new_with_vtable(descr=<SizeDescr 32>)
+2106: setfield_gc(p193, 1, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2114: p196 = new_array_clear(1, descr=<ArrayP 8>)
+2133: setarrayitem_gc(p196, 0, ConstPtr(ptr198), descr=<ArrayP 8>)
+2137: setfield_gc(p193, p196, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2141: setfield_gc(p193, ConstPtr(ptr199), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2145: setfield_gc(p68, p193, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_2 32 pure>)
+2149: p200 = new_with_vtable(descr=<SizeDescr 16>)
+2160: p201 = new_with_vtable(descr=<SizeDescr 16>)
+2171: setfield_gc(p201, 4, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2179: setfield_gc(p200, p201, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2183: setfield_gc(p68, p200, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_3 40 pure>)
+2187: p203 = new_with_vtable(descr=<SizeDescr 32>)
+2198: setfield_gc(p203, 4, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2206: p206 = new_array_clear(1, descr=<ArrayP 8>)
+2225: setarrayitem_gc(p206, 0, ConstPtr(ptr208), descr=<ArrayP 8>)
+2229: setfield_gc(p203, p206, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2233: setfield_gc(p203, ConstPtr(ptr209), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2237: setfield_gc(p68, p203, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_4 48 pure>)
+2241: setfield_gc(p68, p52, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_5 56 pure>)
+2252: p210 = new_with_vtable(descr=<SizeDescr 16>)
+2263: p211 = new_with_vtable(descr=<SizeDescr 16>)
+2274: setfield_gc(p211, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2282: setfield_gc(p210, p211, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2286: setfield_gc(p68, p210, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_6 64 pure>)
+2290: p213 = new_with_vtable(descr=<SizeDescr 16>)
+2301: p214 = new_with_vtable(descr=<SizeDescr 16>)
+2312: setfield_gc(p214, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2320: setfield_gc(p213, p214, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2324: setfield_gc(p68, p213, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_7 72 pure>)
+2328: p216 = new_with_vtable(descr=<SizeDescr 16>)
+2339: p217 = new_with_vtable(descr=<SizeDescr 16>)
+2350: setfield_gc(p217, 0.000000, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+2358: setfield_gc(p216, p217, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2362: setfield_gc(p68, p216, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_8 80 pure>)
+2366: setfield_gc(p67, p68, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2378: p219 = new_with_vtable(descr=<SizeDescr 16>)
+2396: setfield_gc(p219, ConstPtr(ptr220), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2400: setfield_gc(p67, p219, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_0 16 pure>)
+2405: p221 = new_with_vtable(descr=<SizeDescr 16>)
+2416: setfield_gc(p221, ConstPtr(ptr222), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2420: setfield_gc(p67, p221, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_1 24 pure>)
+2425: p223 = new_with_vtable(descr=<SizeDescr 64>)
+2436: setfield_gc(p223, ConstPtr(ptr224), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2454: setfield_gc(p223, ConstPtr(ptr225), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2458: setfield_gc(p223, p216, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2462: setfield_gc(p223, p213, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2466: setfield_gc(p223, p200, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2470: setfield_gc(p223, p59, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2474: setfield_gc(p223, p75, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2478: setfield_gc(p67, p223, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_2 32 pure>)
+2483: p226 = new_with_vtable(descr=<SizeDescr 80>)
+2494: setfield_gc(p226, ConstPtr(ptr227), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2505: setfield_gc(p226, ConstPtr(ptr228), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2516: setfield_gc(p226, ConstPtr(ptr229), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+2520: setfield_gc(p226, p213, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+2524: setfield_gc(p226, p210, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+2535: setfield_gc(p226, ConstPtr(ptr230), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+2539: setfield_gc(p226, ConstPtr(ptr179), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+2543: setfield_gc(p226, p75, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+2547: setfield_gc(p226, p186, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+2551: setfield_gc(p67, p226, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_3 40 pure>)
+2556: p231 = new_with_vtable(descr=<SizeDescr 64>)
+2567: setfield_gc(p231, ConstPtr(ptr232), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2578: setfield_gc(p231, ConstPtr(ptr233), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2589: setfield_gc(p231, ConstPtr(ptr234), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2593: setfield_gc(p231, p213, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2597: setfield_gc(p231, p210, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2608: setfield_gc(p231, ConstPtr(ptr235), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2612: setfield_gc(p231, p75, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2616: setfield_gc(p67, p231, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_4 48 pure>)
+2621: setfield_gc(p67, p51, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_5 56 pure>)
+2633: p236 = new_with_vtable(descr=<SizeDescr 40>)
+2644: setfield_gc(p236, p46, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2655: p237 = new_with_vtable(descr=<SizeDescr 24>)
+2666: setfield_gc(p237, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2677: setfield_gc(p237, i40, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+2688: setfield_gc(p236, p237, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2692: setfield_gc(p236, p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2703: setfield_gc(p236, ConstPtr(ptr238), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2793: p239 = getfield_gc_r(p59, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2804: setfield_gc(p51, ConstPtr(ptr240), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2815: setfield_gc(p66, ConstPtr(ptr241), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2819: setfield_gc(p66, p67, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2823: setfield_gc(p66, p236, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2827: setfield_gc(p51, ConstPtr(ptr242), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2831: setfield_gc(p66, p46, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2842: setfield_gc(p51, ConstPtr(ptr243), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+2846: setfield_gc(p51, p52, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+2850: setfield_gc(p51, p59, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+2854: guard_nonnull_class(p239, 16623792, descr=<Guard0x3189ac0>) [p66, p51, None, None, None, None]
+2872: i246 = getfield_gc_i(p59, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2876: i248 = int_ge(i246, 1)
+2880: guard_true(i248, descr=<Guard0x3189b20>) [p66, p51, None, None, None, None]
+2886: p249 = getfield_gc_r(p59, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2890: guard_nonnull(p249, descr=<Guard0x3189b80>) [p66, p51, None, None, None, None]
+2899: p250 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2903: guard_nonnull_class(p250, 16623792, descr=<Guard0x3189be0>) [p66, p51, None, None, None, None]
+2923: i252 = getfield_gc_i(p52, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2927: i254 = int_ge(i252, 1)
+2931: guard_true(i254, descr=<Guard0x3189c40>) [p66, p51, None, None, None, None]
+2937: p255 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2941: guard_nonnull(p255, descr=<Guard0x3189ca0>) [p66, p51, None, None, None, None]
+2950: jump(p51, 1, p66, p46, ConstPtr(ptr243), 4, p59, i246, p249, p52, i252, p255, descr=TargetToken(49644352))
+3040: --end of the loop--
[3e4c0a4812f2634] jit-log-opt-bridge}
[3e4c0a481854659] {jit-backend
[3e4c0a48192f1c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a48193d33e] jit-backend-dump}
[3e4c0a481949341] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d182c4 +0  2A000000
[3e4c0a48194a88c] jit-backend-dump}
[3e4c0a48194ed9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d187b5 +0  2A000000
[3e4c0a48194fcc3] jit-backend-dump}
[3e4c0a481953207] {jit-backend-addr
bridge out of Guard 0x2fa8740 has address 0x7f6e13d182c0 to 0x7f6e13d187b0
       gc table: 0x7f6e13d18140
    jump target: 0x7f6e13d182c0
         resops: 0x7f6e13d182ce
       failures: 0x7f6e13d187b0
            end: 0x7f6e13d18c51
[3e4c0a4819557b0] jit-backend-addr}
[3e4c0a481958eed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d182e2 +0  11050000
[3e4c0a481959d25] jit-backend-dump}
[3e4c0a48195d162] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d182f8 +0  17050000
[3e4c0a48195de87] jit-backend-dump}
[3e4c0a4819611dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18310 +0  1B050000
[3e4c0a481961ec3] jit-backend-dump}
[3e4c0a4819655e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1831d +0  46050000
[3e4c0a4819662e5] jit-backend-dump}
[3e4c0a4819696b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18331 +0  4E050000
[3e4c0a48196a38c] jit-backend-dump}
[3e4c0a48196d755] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1834c +0  4F050000
[3e4c0a48196e443] jit-backend-dump}
[3e4c0a4819717f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1835a +0  5D050000
[3e4c0a4819724f6] jit-backend-dump}
[3e4c0a48197575f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18371 +0  62050000
[3e4c0a48197642e] jit-backend-dump}
[3e4c0a4819796a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1837b +0  74050000
[3e4c0a48197a379] jit-backend-dump}
[3e4c0a48197d5cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18388 +0  83050000
[3e4c0a48197e296] jit-backend-dump}
[3e4c0a4819814f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18399 +0  8E050000
[3e4c0a4819821da] jit-backend-dump}
[3e4c0a481985471] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d183bc +0  87050000
[3e4c0a481986146] jit-backend-dump}
[3e4c0a481989388] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d183ca +0  95050000
[3e4c0a48198a0b0] jit-backend-dump}
[3e4c0a48198d313] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d183e0 +0  9B050000
[3e4c0a48198e010] jit-backend-dump}
[3e4c0a48199127c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d183ea +0  AD050000
[3e4c0a481991f70] jit-backend-dump}
[3e4c0a481995183] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d183f7 +0  BC050000
[3e4c0a481995e7a] jit-backend-dump}
[3e4c0a481999182] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18407 +0  C8050000
[3e4c0a481999e82] jit-backend-dump}
[3e4c0a48199d0df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18431 +0  BA050000
[3e4c0a48199ddb1] jit-backend-dump}
[3e4c0a4819a0fdd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18445 +0  C2050000
[3e4c0a4819a1ce6] jit-backend-dump}
[3e4c0a4819a4f87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1845b +0  C8050000
[3e4c0a4819a5c56] jit-backend-dump}
[3e4c0a4819a8ea6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18469 +0  D6050000
[3e4c0a4819a9b7c] jit-backend-dump}
[3e4c0a4819acdcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18479 +0  E2050000
[3e4c0a4819adaba] jit-backend-dump}
[3e4c0a4819b0cbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1849c +0  DB050000
[3e4c0a4819b19b8] jit-backend-dump}
[3e4c0a4819b4bde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d184b6 +0  DD050000
[3e4c0a4819b58de] jit-backend-dump}
[3e4c0a4819b8aeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d184c8 +0  E7050000
[3e4c0a4819b97e8] jit-backend-dump}
[3e4c0a4819bca30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d184d8 +0  F3050000
[3e4c0a4819bd739] jit-backend-dump}
[3e4c0a4819c0984] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d184f5 +0  F2050000
[3e4c0a4819c16ae] jit-backend-dump}
[3e4c0a4819c48cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d184ff +0  04060000
[3e4c0a4819c55b0] jit-backend-dump}
[3e4c0a4819c87b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18514 +0  0B060000
[3e4c0a4819c9489] jit-backend-dump}
[3e4c0a4819cc66f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1852c +0  0F060000
[3e4c0a4819cd353] jit-backend-dump}
[3e4c0a4819d0585] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18554 +0  03060000
[3e4c0a4819d12b0] jit-backend-dump}
[3e4c0a4819d44fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18572 +0  01060000
[3e4c0a4819d5213] jit-backend-dump}
[3e4c0a4819d8461] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1858f +0  00060000
[3e4c0a4819d9170] jit-backend-dump}
[3e4c0a4819dc3c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d185a4 +0  07060000
[3e4c0a4819dd093] jit-backend-dump}
[3e4c0a4819e02a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d185b2 +0  15060000
[3e4c0a4819e0f85] jit-backend-dump}
[3e4c0a4819e4152] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d185ce +0  15060000
[3e4c0a4819e4e24] jit-backend-dump}
[3e4c0a4819e8007] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d185d7 +0  28060000
[3e4c0a4819e8ce5] jit-backend-dump}
[3e4c0a4819ebf4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d185f8 +0  23060000
[3e4c0a4819ecc57] jit-backend-dump}
[3e4c0a4819efeba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1872c +0  05050000
[3e4c0a4819f0bfe] jit-backend-dump}
[3e4c0a4819f411d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cff7cd +0  EF8A0100
[3e4c0a4819f4de6] jit-backend-dump}
[3e4c0a4819f8e66] jit-backend}
[3e4c0a4819fcd64] {jit-log-opt-bridge
# bridge out of Guard 0x2fa8740 with 185 ops
[p0, p1]
+413: guard_value(p0, ConstPtr(ptr2), descr=<Guard0x3189d00>) [p0, p1]
+422: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+426: p4 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+430: guard_class(p4, 16435208, descr=<Guard0x31fac38>) [p0, p1]
+444: p6 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+448: guard_nonnull_class(p6, ConstClass(ForwardLink), descr=<Guard0x3189d60>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(- CellRef(kp) 1)')
+468: guard_not_invalidated(descr=<Guard0x31fac80>) [p0, p1]
+468: guard_class(p3, 16480328, descr=<Guard0x31facc8>) [p0, p1]
+481: p9 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+492: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x31fad10>) [p0, p1]
+501: p11 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_2 40 pure>)
+505: p12 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+509: guard_nonnull_class(p12, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3189dc0>) [p0, p1]
+528: i14 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+532: i16 = int_sub_ovf(i14, 1)
+536: guard_no_overflow(descr=<Guard0x31fad58>) [p0, p1]
debug_merge_point(0, 0, '(let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))')
debug_merge_point(0, 0, '(vector-ref izrov AppRand139)')
+542: p17 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_1 32 pure>)
+546: guard_nonnull_class(p17, ConstClass(W_Vector), descr=<Guard0x3189e20>) [p0, p1]
+565: i20 = int_ge(i16, 0)
+569: guard_true(i20, descr=<Guard0x31fada0>) [p0, p1]
+575: i21 = getfield_gc_i(p17, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+579: i22 = int_lt(i16, i21)
+582: guard_true(i22, descr=<Guard0x31fade8>) [p0, p1]
+588: p23 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+592: guard_class(p23, 16623792, descr=<Guard0x31fae30>) [p0, p1]
+605: p25 = getfield_gc_r(p17, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+609: i26 = getarrayitem_gc_i(p25, i16, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(- CellRef(kp) 1)')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
+614: p27 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_3 48 pure>)
+618: p28 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+622: guard_nonnull_class(p28, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3189e80>) [p0, p1]
+640: i30 = getfield_gc_i(p28, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+644: i32 = int_sub_ovf(i30, 1)
+648: guard_no_overflow(descr=<Guard0x31fae78>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand141)')
+654: p33 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_7 80 pure>)
+658: guard_nonnull_class(p33, ConstClass(W_Vector), descr=<Guard0x3189ee0>) [p0, p1]
+676: i36 = int_ge(i32, 0)
+680: guard_true(i36, descr=<Guard0x31faec0>) [p0, p1]
+686: i37 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+690: i38 = int_lt(i32, i37)
+693: guard_true(i38, descr=<Guard0x31faf08>) [p0, p1]
+699: p39 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+703: guard_class(p39, 16623792, descr=<Guard0x31faf50>) [p0, p1]
+715: p41 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+719: i42 = getarrayitem_gc_i(p41, i32, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! izrov AppRand140 AppRand142)')
+724: setarrayitem_gc(p25, i16, i42, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483))')
debug_merge_point(0, 0, '(- CellRef(ip) 1)')
debug_merge_point(0, 0, '(vector-set! iposv AppRand143 t5483)')
+729: setarrayitem_gc(p41, i32, i26, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(loop5476)')
debug_merge_point(0, 0, '(simp1 0 #f) from (loop5476)')
+734: p43 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_6 72 pure>)
+738: guard_nonnull_class(p43, 16479200, descr=<Guard0x3189f40>) [p3, p43, p4, p6]
+757: p45 = getfield_gc_r(p43, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+768: guard_value(p45, ConstPtr(ptr46), descr=<Guard0x31faf98>) [p3, p43, p4, p6]
+777: p47 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0))')
debug_merge_point(0, 0, '(vector-ref l1 0)')
+777: p48 = getfield_gc_r(p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+781: guard_nonnull_class(p48, ConstClass(W_Vector), descr=<Guard0x3189fa0>) [p3, p43, p4, p6]
+799: i50 = getfield_gc_i(p48, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+803: i52 = int_lt(0, i50)
+807: guard_true(i52, descr=<Guard0x31fafe0>) [p3, p43, p4, p6]
+813: p53 = getfield_gc_r(p48, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+817: guard_class(p53, 16623792, descr=<Guard0x31fb028>) [p3, p43, p4, p6]
+829: p55 = getfield_gc_r(p48, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+833: i57 = getarrayitem_gc_i(p55, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! kp SetBang0)')
+837: p58 = getfield_gc_r(p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+841: p59 = getfield_gc_r(p58, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+845: guard_nonnull_class(p59, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3208020>) [p3, p43, p4, p6]
debug_merge_point(0, 0, '(let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm CellRef(kp))')
+864: p61 = getfield_gc_r(p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+868: setfield_gc(p59, i57, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+872: guard_nonnull_class(p61, ConstClass(W_Vector), descr=<Guard0x3208080>) [p61, p3, p43, p4, p6]
+890: p63 = getfield_gc_r(p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+894: i64 = getfield_gc_i(p61, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+898: i66 = int_lt(0, i64)
+902: guard_true(i66, descr=<Guard0x31fb070>) [p61, p3, p43, p4, p6]
+908: p67 = getfield_gc_r(p61, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+912: guard_class(p67, 16622984, descr=<Guard0x31fb0b8>) [p61, p3, p43, p4, p6]
+924: p69 = getfield_gc_r(p61, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+928: p71 = getarrayitem_gc_r(p69, 0, descr=<ArrayP 8>)
+939: guard_class(p71, ConstClass(W_Vector), descr=<Guard0x31fb100>) [p61, p3, p43, p4, p6]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+953: i74 = int_ge(i57, 0)
+957: guard_true(i74, descr=<Guard0x31fb340>) [p61, p3, p43, p4, p6]
+963: i75 = getfield_gc_i(p71, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+975: i76 = int_lt(i57, i75)
+978: guard_true(i76, descr=<Guard0x31fb2f8>) [p61, p3, p43, p4, p6]
+984: p77 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+996: guard_class(p77, 16612728, descr=<Guard0x31fb2b0>) [p61, p3, p43, p4, p6]
+1008: p79 = getfield_gc_r(p71, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1013: f80 = getarrayitem_gc_f(p79, i57, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang1)')
+1020: p81 = getfield_gc_r(p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1024: p82 = getfield_gc_r(p81, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1028: guard_nonnull_class(p82, ConstClass(W_CellFloatStrategy), descr=<Guard0x32085c0>) [p61, p3, p43, p4, p6]
debug_merge_point(0, 0, '(let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1))')
debug_merge_point(0, 0, '(lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))')
+1048: p84 = getfield_gc_r(p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1059: setfield_gc(p82, f80, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1066: guard_class(p63, 16505296, descr=<Guard0x3208260>) [p63, p61, p48, p84, p58, p81, p3, p43, p4, p6]
debug_merge_point(0, 0, '(doloop 1)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop 1)')
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+1078: p86 = getfield_gc_r(p84, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1089: guard_nonnull_class(p86, ConstClass(W_CellIntegerStrategy), descr=<Guard0x32084a0>) [p63, p61, p48, p84, p58, p81, p3, p43, p4, p6]
+1107: i88 = getfield_gc_i(p86, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1118: i90 = int_ge(1, i88)
+1122: guard_false(i90, descr=<Guard0x31fb268>) [p63, p61, p48, p84, p58, p81, p3, p43, p4, p6]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+1128: i91 = int_lt(1, i50)
+1136: guard_true(i91, descr=<Guard0x31fb220>) [p63, p61, p48, p84, p58, p81, p3, p43, p4, p6]
+1142: i92 = getarrayitem_gc_i(p55, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1160: i94 = int_ge(i92, 0)
+1164: guard_true(i94, descr=<Guard0x31fb1d8>) [p63, p61, p48, p84, p58, p81, p3, p43, p4, p6]
+1170: i95 = int_lt(i92, i75)
+1173: guard_true(i95, descr=<Guard0x31fb190>) [p63, p61, p48, p84, p58, p81, p3, p43, p4, p6]
+1179: f96 = getarrayitem_gc_f(p79, i92, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+1186: f97 = float_sub(f96, f80)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+1191: i99 = float_gt(f97, 0.000000)
+1206: guard_true(i99, descr=<Guard0x31fb148>) [p63, p61, p48, p84, p58, p81, p3, p43, p4, p6]
debug_merge_point(0, 0, '(let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
debug_merge_point(0, 0, '(set! kp SetBang2)')
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
debug_merge_point(0, 0, '(let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand13)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1212: f100 = getarrayitem_gc_f(p79, i92, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang3) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+1219: setfield_gc(p59, i92, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1223: setfield_gc(p82, f100, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1230: p101 = new_with_vtable(descr=<SizeDescr 80>)
+1274: p102 = new_with_vtable(descr=<SizeDescr 40>)
+1389: i103 = getfield_gc_i(p86, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1400: setfield_gc(p102, ConstPtr(ptr104), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1404: setfield_gc(p102, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1408: setfield_gc(p102, p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1412: setfield_gc(p102, p6, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1430: setfield_gc(p101, ConstPtr(ptr105), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1434: setfield_gc(p101, p63, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1438: setfield_gc(p101, p81, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+1449: setfield_gc(p101, p58, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+1453: setfield_gc(p101, p84, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+1464: setfield_gc(p101, ConstPtr(ptr106), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+1468: setfield_gc(p101, p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+1486: setfield_gc(p101, ConstPtr(ptr107), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+1490: setfield_gc(p101, p61, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+1501: i109 = int_ge(i103, -9223372036854775807)
+1514: guard_true(i109, descr=<Guard0x32081a0>) [p102, p101, None, None, None, None, None, None, None, None, None]
+1520: i111 = arraylen_gc(p55, descr=<ArrayS 8>)
+1520: i112 = arraylen_gc(p69, descr=<ArrayP 8>)
+1520: jump(p101, 2, p102, p6, p84, p86, i103, p48, i50, p55, ConstPtr(ptr107), p61, p69, 0, p81, p82, f100, descr=TargetToken(48739520))
+1648: --end of the loop--
[3e4c0a481b83568] jit-log-opt-bridge}
[3e4c0a4820480d5] {jit-backend
[3e4c0a4821314cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d18f
[3e4c0a48213edc3] jit-backend-dump}
[3e4c0a48214abac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d190a4 +0  36000000
[3e4c0a48214c1ab] jit-backend-dump}
[3e4c0a482150a3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19635 +0  36000000
[3e4c0a48215195f] jit-backend-dump}
[3e4c0a48215527c] {jit-backend-addr
bridge out of Guard 0x3057a00 has address 0x7f6e13d190a0 to 0x7f6e13d19630
       gc table: 0x7f6e13d18f10
    jump target: 0x7f6e13d190a0
         resops: 0x7f6e13d190ae
       failures: 0x7f6e13d19630
            end: 0x7f6e13d19b18
[3e4c0a4821577a5] jit-backend-addr}
[3e4c0a48215b1eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d190cd +0  03060000
[3e4c0a48215c05d] jit-backend-dump}
[3e4c0a48215f824] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d190e5 +0  07060000
[3e4c0a482160502] jit-backend-dump}
[3e4c0a482163a3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d190f2 +0  16060000
[3e4c0a482164749] jit-backend-dump}
[3e4c0a482167c3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1910d +0  17060000
[3e4c0a482168997] jit-backend-dump}
[3e4c0a48216bde9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19123 +0  1D060000
[3e4c0a48216ca7b] jit-backend-dump}
[3e4c0a48216fd7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1913a +0  22060000
[3e4c0a4821709f7] jit-backend-dump}
[3e4c0a482173cc8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19148 +0  30060000
[3e4c0a482174994] jit-backend-dump}
[3e4c0a482177ccd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1915a +0  3A060000
[3e4c0a48217895f] jit-backend-dump}
[3e4c0a48217bc4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1916b +0  45060000
[3e4c0a48217c8ce] jit-backend-dump}
[3e4c0a48217fbfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1917b +0  51060000
[3e4c0a482180890] jit-backend-dump}
[3e4c0a482183b46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1918b +0  5D060000
[3e4c0a482187ecb] jit-backend-dump}
[3e4c0a48218bdb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1919b +0  69060000
[3e4c0a48218cb1f] jit-backend-dump}
[3e4c0a48218ff2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d191ab +0  75060000
[3e4c0a482190c19] jit-backend-dump}
[3e4c0a482193eed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d191bb +0  81060000
[3e4c0a482194bb6] jit-backend-dump}
[3e4c0a482197f91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d191d5 +0  83060000
[3e4c0a482198caa] jit-backend-dump}
[3e4c0a48219c020] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d191e8 +0  8C060000
[3e4c0a48219cd0e] jit-backend-dump}
[3e4c0a48219ffeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d191f6 +0  9A060000
[3e4c0a4821a0cd0] jit-backend-dump}
[3e4c0a4821a402a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19207 +0  A5060000
[3e4c0a4821a4d06] jit-backend-dump}
[3e4c0a4821a7fe9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19215 +0  B3060000
[3e4c0a4821a8cbb] jit-backend-dump}
[3e4c0a4821ac06f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1923b +0  A9060000
[3e4c0a4821acd69] jit-backend-dump}
[3e4c0a4821b002b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1924d +0  B3060000
[3e4c0a4821b0cfa] jit-backend-dump}
[3e4c0a4821b404e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d192cb +0  51060000
[3e4c0a4821b4d39] jit-backend-dump}
[3e4c0a4821b8007] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19320 +0  18060000
[3e4c0a4821b8cef] jit-backend-dump}
[3e4c0a4821bbfa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1933e +0  16060000
[3e4c0a4821bcc92] jit-backend-dump}
[3e4c0a4821bff35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1934c +0  24060000
[3e4c0a4821c0c0a] jit-backend-dump}
[3e4c0a4821c3edc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19356 +0  36060000
[3e4c0a4821c4be8] jit-backend-dump}
[3e4c0a4821c7e45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19381 +0  27060000
[3e4c0a4821c8b20] jit-backend-dump}
[3e4c0a4821cbddf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1938b +0  39060000
[3e4c0a4821ccac0] jit-backend-dump}
[3e4c0a4821cfd6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1939d +0  43060000
[3e4c0a4821d0a54] jit-backend-dump}
[3e4c0a4821d3d04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d193ab +0  51060000
[3e4c0a4821d49d3] jit-backend-dump}
[3e4c0a4821d7d62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d193b4 +0  64060000
[3e4c0a4821d8a43] jit-backend-dump}
[3e4c0a4821dbd48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d193c1 +0  73060000
[3e4c0a4821dca45] jit-backend-dump}
[3e4c0a4821dfd07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d193d4 +0  7C060000
[3e4c0a4821e09dc] jit-backend-dump}
[3e4c0a4821e3c95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d193de +0  8E060000
[3e4c0a4821e496a] jit-backend-dump}
[3e4c0a4821e7c3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d193eb +0  9D060000
[3e4c0a4821e8923] jit-backend-dump}
[3e4c0a4821ebbc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d193fb +0  A9060000
[3e4c0a4821ec8ae] jit-backend-dump}
[3e4c0a4821efb79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19411 +0  AF060000
[3e4c0a4821f0851] jit-backend-dump}
[3e4c0a4821f3afa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1941f +0  BD060000
[3e4c0a4821f47dc] jit-backend-dump}
[3e4c0a4821f7a8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1942f +0  C9060000
[3e4c0a4821f8767] jit-backend-dump}
[3e4c0a4821fbcdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d04bb1 +0  EB440100
[3e4c0a4821fc9dc] jit-backend-dump}
[3e4c0a482200c5d] jit-backend}
[3e4c0a482204c19] {jit-log-opt-bridge
# bridge out of Guard 0x3057a00 with 179 ops
[i0, p1, p2, p3]
+422: guard_not_invalidated(descr=<Guard0x3208980>) [i0, p1, p2, p3]
+422: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+440: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x31fb3d0>) [i0, p1, p2, p3]
+449: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+453: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x32089e0>) [i0, p1, p2, p3]
+473: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+477: i9 = int_eq(i0, i8)
+480: guard_true(i9, descr=<Guard0x31fb418>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if16 (void) (let ([AppRand64 (+ i5246 1)]) (let ([AppRand65 (matrix-ref a5002 AppRand64 0)]) (if (negative? AppRand65) (fuck-up) (void))) (let ([AppRand66 (+ i5246 1)]) (vector-set! l2 i5246 AppRand66)) (let ([AppRand67 (+ n i5246)]) (vector-set! iposv i5246 AppRand67)) (let ([AppRand68 (+ i5246 1)]) (doloop5244 AppRand68))))')
debug_merge_point(0, 0, '(void)')
+486: p10 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+504: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x31fb460>) [i0, p1, p2, p3]
+513: p12 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+517: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+521: guard_class(p13, 16435208, descr=<Guard0x31fb4a8>) [i0, p1, p2, p3]
+535: p15 = getfield_gc_r(p13, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+539: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x3208a40>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([doloop5262 (lambda (i5264) (let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))))]) (doloop5262 0))')
+558: guard_class(p12, 16501424, descr=<Guard0x31fb4f0>) [i0, p1, p2, p3]
+572: p18 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+577: guard_class(p18, 16502480, descr=<Guard0x31fb538>) [i0, p1, p2, p3]
+590: p20 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+594: guard_class(p20, 16504944, descr=<Guard0x31fb580>) [i0, p1, p2, p3]
+607: p22 = getfield_gc_r(p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+611: guard_class(p22, 16503888, descr=<Guard0x31fb5c8>) [i0, p1, p2, p3]
+623: p24 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+627: guard_class(p24, 16503888, descr=<Guard0x31fb610>) [i0, p1, p2, p3]
+639: p26 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+643: guard_class(p26, 16500016, descr=<Guard0x31fb658>) [i0, p1, p2, p3]
+655: p28 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+659: guard_class(p28, 16500720, descr=<Guard0x31fb6a0>) [i0, p1, p2, p3]
+671: p30 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+675: guard_class(p30, 16505296, descr=<Guard0x31fb6e8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(lambda (i5264) (let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))))')
+687: p32 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_2 32 pure>)
+691: p33 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+695: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x3208aa0>) [i0, p1, p2, p3]
+713: guard_nonnull_class(p33, ConstClass(W_Fixnum), descr=<Guard0x3208b00>) [i0, p1, p2, p3]
+732: i36 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(doloop5262 0)')
debug_merge_point(0, 0, '(let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))) from (doloop5262 0)')
debug_merge_point(0, 0, '(= i5264 m2)')
+736: i38 = int_eq(0, i36)
+740: guard_false(i38, descr=<Guard0x31fb730>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))')
debug_merge_point(0, 0, '(begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69)))')
debug_merge_point(0, 0, '(vector-set! l3 i5264 #t)')
+746: p39 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+750: guard_class(p39, 16693360, descr=<Guard0x31fb778>) [i0, p1, p2, p3]
+763: i41 = getfield_gc_i(p32, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+767: i42 = int_lt(0, i41)
+771: guard_true(i42, descr=<Guard0x31fb7c0>) [i0, p1, p2, p3]
+777: p43 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+788: p45 = getarrayitem_gc_pure_r(p43, 0, descr=<ArrayP 8>)
+806: i47 = instance_ptr_eq(p45, ConstPtr(ptr46))
+809: guard_false(i47, descr=<Guard0x31fb808>) [i0, p1, p2, p3]
+815: guard_nonnull_class(p45, ConstClass(W_Fixnum), descr=<Guard0x3208b60>) [i0, p1, p2, p3]
+833: p50 = call_r(ConstClass(_ll_alloc_and_set_nonnull_trampoline__v582___simple_call__function__), i41, p45, descr=<Callr 8 ir EF=5>)
+944: guard_no_exception(descr=<Guard0x3208bc0>) [p32, p50, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))')
debug_merge_point(0, 0, '(+ i5264 1)')
debug_merge_point(0, 0, '(doloop5262 AppRand69)')
debug_merge_point(0, 0, '(let ([if17 (= i5264 m2)]) (if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))) from (doloop5262 AppRand69)')
debug_merge_point(0, 0, '(= i5264 m2)')
+985: setfield_gc(p32, ConstPtr(ptr52), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+990: setfield_gc(p32, p50, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1005: setarrayitem_gc(p50, 0, ConstPtr(ptr53), descr=<ArrayP 8>)
+1022: i55 = int_eq(1, i36)
guard_true(i55, descr=<Guard0x3208c20>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(if if17 (void) (begin (vector-set! l3 i5264 #t) (let ([AppRand69 (+ i5264 1)]) (doloop5262 AppRand69))))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand70 (+ m2 m3)]) (if (positive? AppRand70) (let ([doloop5275 (lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))]) (doloop5275 0) (let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303))) (void)))')
debug_merge_point(0, 0, '(+ m2 m3)')
+1044: p56 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+1055: guard_nonnull_class(p56, ConstClass(W_Fixnum), descr=<Guard0x3208c80>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
+1074: i58 = getfield_gc_i(p56, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1078: i60 = int_add_ovf(1, i58)
+1082: guard_no_overflow(descr=<Guard0x31fb850>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(if (positive? AppRand70) (let ([doloop5275 (lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))]) (doloop5275 0) (let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303))) (void))')
+1088: i62 = int_gt(i60, 0)
+1092: guard_true(i62, descr=<Guard0x31fb898>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(let ([doloop5275 (lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))]) (doloop5275 0) (let ([loop5303 (lambda () (let ([AppRand79 (+ m 1)]) (simp1 AppRand79 #f)) (let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) (if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)))]) (loop5303)))')
debug_merge_point(0, 0, '(lambda (k5277) (let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))))')
+1098: i63 = getfield_gc_i(p20, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1109: i64 = getfield_gc_i(p22, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+1120: p65 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+1124: p66 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
debug_merge_point(0, 0, '(doloop5275 0)')
debug_merge_point(0, 0, '(let ([AppRand71 (+ n 1)]) (let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))) from (doloop5275 0)')
debug_merge_point(0, 0, '(+ n 1)')
+1128: i68 = int_add_ovf(i63, 1)
+1135: guard_no_overflow(descr=<Guard0x31fb8e0>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(let ([if18 (= k5277 AppRand71)]) (if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))))')
debug_merge_point(0, 0, '(= k5277 AppRand71)')
+1141: i70 = int_eq(0, i68)
+1145: guard_false(i70, descr=<Guard0x31fb928>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(if if18 (void) (let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78))))')
debug_merge_point(0, 0, '(let ([doloop5281 (lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))][AppRand77 (+ m1 1)]) (doloop5281 AppRand77 0.0) (let ([AppRand78 (+ k5277 1)]) (doloop5275 AppRand78)))')
debug_merge_point(0, 0, '(lambda (i5283 sum) (let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))))')
debug_merge_point(0, 0, '(+ m1 1)')
+1151: guard_nonnull_class(p65, ConstClass(W_Fixnum), descr=<Guard0x3208ce0>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
+1169: i72 = getfield_gc_i(p65, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1173: i74 = int_add_ovf(i72, 1)
+1177: guard_no_overflow(descr=<Guard0x31fb970>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(doloop5281 AppRand77 0.0)')
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand77 0.0)')
debug_merge_point(0, 0, '(> i5283 m)')
+1183: i75 = int_gt(i74, i64)
+1186: guard_false(i75, descr=<Guard0x31fb9b8>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))')
debug_merge_point(0, 0, '(let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)))')
debug_merge_point(0, 0, '(+ i5283 1)')
+1192: i77 = int_add_ovf(i74, 1)
+1199: guard_no_overflow(descr=<Guard0x31fba00>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(matrix-ref a5002 i5283 k5277)')
+1205: guard_nonnull_class(p66, ConstClass(W_Vector), descr=<Guard0x3208d40>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1224: i80 = int_ge(i74, 0)
+1228: guard_true(i80, descr=<Guard0x31fba48>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
+1234: i81 = getfield_gc_i(p66, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1238: i82 = int_lt(i74, i81)
+1241: guard_true(i82, descr=<Guard0x31fba90>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
+1247: p83 = getfield_gc_r(p66, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1251: guard_class(p83, 16622984, descr=<Guard0x31fbad8>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
+1263: p85 = getfield_gc_r(p66, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1267: p86 = getarrayitem_gc_r(p85, i74, descr=<ArrayP 8>)
+1272: guard_class(p86, ConstClass(W_Vector), descr=<Guard0x31fbb20>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1285: i88 = getfield_gc_i(p86, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1289: i89 = int_lt(0, i88)
+1293: guard_true(i89, descr=<Guard0x31fbb68>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
+1299: p90 = getfield_gc_r(p86, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1303: guard_class(p90, 16612728, descr=<Guard0x31fbbb0>) [i55, p32, p13, p12, i36, p30, p15, None, None, None, None]
+1315: p92 = getfield_gc_r(p86, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1319: f93 = getarrayitem_gc_f(p92, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(+ sum AppRand75)')
+1325: f95 = float_add(0.000000, f93)
debug_merge_point(0, 0, '(doloop5281 AppRand74 AppRand76)')
debug_merge_point(0, 0, '(let ([if19 (> i5283 m)]) (if if19 (begin (void) (let ([AppRand72 (+ m 1)][AppRand73 (- sum)]) (matrix-set! a5002 AppRand72 k5277 AppRand73))) (let ([AppRand74 (+ i5283 1)][AppRand75 (matrix-ref a5002 i5283 k5277)]) (let ([AppRand76 (+ sum AppRand75)]) (doloop5281 AppRand74 AppRand76))))) from (doloop5281 AppRand74 AppRand76)')
+1345: p96 = new_with_vtable(descr=<SizeDescr 48>)
+1392: p97 = new_with_vtable(descr=<SizeDescr 16>)
+1403: setfield_gc(p97, i64, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1407: p98 = new_with_vtable(descr=<SizeDescr 40>)
+1418: p99 = new_with_vtable(descr=<SizeDescr 24>)
+1429: p100 = new_with_vtable(descr=<SizeDescr 56>)
+1441: setfield_gc(p100, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1460: setfield_gc(p100, ConstPtr(ptr101), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1465: p102 = new_with_vtable(descr=<SizeDescr 16>)
+1477: setfield_gc(p102, i63, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1481: setfield_gc(p100, p102, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1486: setfield_gc(p100, p97, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1491: setfield_gc(p100, p65, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1496: setfield_gc(p100, p66, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1501: setfield_gc(p99, p100, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1505: setfield_gc(p99, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1513: p103 = new_with_vtable(descr=<SizeDescr 40>)
+1525: setfield_gc(p103, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1537: setfield_gc(p103, p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1549: p104 = new_with_vtable(descr=<SizeDescr 40>)
+1562: setfield_gc(p104, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1566: setfield_gc(p104, p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1570: setfield_gc(p104, p13, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1588: setfield_gc(p104, ConstPtr(ptr105), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1592: setfield_gc(p103, p104, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1604: setfield_gc(p103, ConstPtr(ptr106), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1681: i107 = getfield_gc_i(p97, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1685: i108 = arraylen_gc(p85, descr=<ArrayP 8>)
+1692: setfield_gc(p96, ConstPtr(ptr109), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1703: setfield_gc(p98, ConstPtr(ptr110), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1707: setfield_gc(p98, p99, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1711: setfield_gc(p98, p103, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1715: setfield_gc(p98, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1719: setfield_gc(p96, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1723: setfield_gc(p96, p97, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1734: setfield_gc(p96, ConstPtr(ptr111), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1738: setfield_gc(p96, p66, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1742: jump(p96, i77, f95, p98, p15, p97, i107, p66, i81, p85, ConstPtr(ptr111), 0, descr=TargetToken(48739840))
+1824: --end of the loop--
[3e4c0a48229b2f6] jit-log-opt-bridge}
[3e4c0a4825040c8] {jit-backend
[3e4c0a48257b2ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19cb0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C7202000048FF042550701A034D8B77104C8B2D17FFFFFF4D39EE0F85000000004D8B6F404983FD01720841817D00201200000F8500000000F2450F10750849BB689BD1136E7F0000F2450F102BF2450F5CEE66440F2EE90F87000000004C8BAD400100004D8B75084983FE01720741813E900F00000F85000000004D89E24983C4010F80000000004D8B4F384983F9017207418139601400000F85000000004D8B41084D39C40F8400000000498B7F18488B77084883FE017206813E88AD02000F8500000000488B1DA9FEFFFF4839DE0F8400000000498B5F584883FB017206813BF08C00000F85000000004983FC000F8C00000000488B73084939F40F8D00000000488B5318813AF0EE02000F8500000000488B53104A8B44E210498B4F504883F90172068139F08C00000F85000000004C89BD380100004D8B7F284D8B6F084983FD01720841817D00F08900000F85000000004C89B5480100004D8B75084883F8000F8C000000004C89A5500100004C8B61084C39E00F8D000000004C898D580100004C8B4918418139C8EB02000F85000000004C8B49104C8985600100004D8B44C110418138F08C00000F85000000004983FE000F8C00000000498B40084939C60F8D00000000498B40188138B8C302000F8500000000498B4010F2420F104CF0104C8B9D480100004C899D3001000048899D680100004D89CA4C89BD780100004C89AD800100004D89F04889B5700100004C8B9D480100004C899D880100004C8B9D380100004C899D480100004989D648898D380100004D89E54C8BA5500100004C8B9D580100004C899D500100004C8B9D600100004C899D580100004889BD6001000049BB008FCF136E7F000041FFE39048C7442408FFFFFF0049BB289BD1136E7F00004C895D204D8D9BC817FDFF41FFD3E968FDFFFFFF3584FCFFFF49BB389BD1136E7F000041534D8D9BD819FDFF41FFE3FF3578FCFFFF49BB489BD1136E7F000041534D8D9BC819FDFF41FFE3FF3564FCFFFF49BB589BD1136E7F000041534D8D9BB819FDFF41FFE3FF3550FCFFFF4D8D5B0841534D8D9BA019FDFF41FFE3FF3542FCFFFF49BB809BD1136E7F000041534D8D9B9019FDFF41FFE3FF352EFCFFFF49BB909BD1136E7F000041534D8D9B8019FDFF41FFE3FF351AFCFFFF49BBA09BD1136E7F000041534D8D9B7019FDFF41FFE3FF3506FCFFFF49BBB09BD1136E7F000041534D8D9B6019FDFF41FFE3FF35F2FBFFFF49BBC09BD1136E7F000041534D8D9B5019FDFF41FFE3FF35E6FBFFFF49BBD09BD1136E7F000041534D8D9B4019FDFF41FFE3FF35D2FBFFFF49BBE09BD1136E7F000041534D8D9B3019FDFF41FFE3FF35BEFBFFFF49BBF09BD1136E7F000041534D8D9B2019FDFF41FFE3FF35AAFBFFFF49BB009CD1136E7F000041534D8D9B1019FDFF41FFE3FF3596FBFFFF49BB109CD1136E7F000041534D8D9B0019FDFF41FFE3FF3582FBFFFF49BB209CD1136E7F000041534D8D9BF018FDFF41FFE3FF356EFBFFFF49BB309CD1136E7F000041534D8D9BE018FDFF41FFE3FF355AFBFFFF49BB409CD1136E7F000041534D8D9BD018FDFF41FFE3FF3546FBFFFF49BB509CD1136E7F000041534D8D9BC018FDFF41FFE3FF3532FBFFFF49BB609CD1136E7F000041534D8D9BB018FDFF41FFE3FF351EFBFFFF49BB709CD1136E7F000041534D8D9BA018FDFF41FFE3FF350AFBFFFF49BB809CD1136E7F000041534D8D9B9018FDFF41FFE3FF35F6FAFFFF49BB909CD1136E7F000041534D8D9B8018FDFF41FFE3FF35E2FAFFFF49BBA09CD1136E7F000041534D8D9B7018FDFF41FFE3
[3e4c0a482583c20] jit-backend-dump}
[3e4c0a48258f13d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19d84 +0  29000000
[3e4c0a482590755] jit-backend-dump}
[3e4c0a482594bde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1a005 +0  29000000
[3e4c0a482595acb] jit-backend-dump}
[3e4c0a4825991fc] {jit-backend-addr
bridge out of Guard 0x2f644e8 has address 0x7f6e13d19d80 to 0x7f6e13d1a000
       gc table: 0x7f6e13d19cb0
    jump target: 0x7f6e13d19d80
         resops: 0x7f6e13d19d8e
       failures: 0x7f6e13d1a000
            end: 0x7f6e13d1a2a4
[3e4c0a48259b648] jit-backend-addr}
[3e4c0a48259f49e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19da6 +0  98020000
[3e4c0a4825a02ab] jit-backend-dump}
[3e4c0a4825a3afc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19dbe +0  9C020000
[3e4c0a4825a4867] jit-backend-dump}
[3e4c0a4825a7e38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19de3 +0  93020000
[3e4c0a4825a8b2b] jit-backend-dump}
[3e4c0a4825ac0ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e01 +0  8B020000
[3e4c0a4825acd85] jit-backend-dump}
[3e4c0a4825b01ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e0e +0  9A020000
[3e4c0a4825b0ea7] jit-backend-dump}
[3e4c0a4825b42f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e25 +0  9F020000
[3e4c0a4825b4fce] jit-backend-dump}
[3e4c0a4825b83ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e32 +0  AE020000
[3e4c0a4825b90b9] jit-backend-dump}
[3e4c0a4825bc48e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e4c +0  B0020000
[3e4c0a4825bd19a] jit-backend-dump}
[3e4c0a4825c0591] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e5c +0  BC020000
[3e4c0a4825c1266] jit-backend-dump}
[3e4c0a4825c4632] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e72 +0  C2020000
[3e4c0a4825c5308] jit-backend-dump}
[3e4c0a4825c8745] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e7c +0  D4020000
[3e4c0a4825c9414] jit-backend-dump}
[3e4c0a4825cc829] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e89 +0  E3020000
[3e4c0a4825cd50e] jit-backend-dump}
[3e4c0a4825d0926] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19e99 +0  EF020000
[3e4c0a4825d160e] jit-backend-dump}
[3e4c0a4825d49e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19eb8 +0  EC020000
[3e4c0a4825d56c4] jit-backend-dump}
[3e4c0a4825d8ae6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19edb +0  E5020000
[3e4c0a4825d97b8] jit-backend-dump}
[3e4c0a4825dcb90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19ef0 +0  EC020000
[3e4c0a4825dd87b] jit-backend-dump}
[3e4c0a4825e0db6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19f04 +0  F4020000
[3e4c0a4825e1ac8] jit-backend-dump}
[3e4c0a4825e4f12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19f1c +0  F8020000
[3e4c0a4825e5bd8] jit-backend-dump}
[3e4c0a4825e8ff6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19f39 +0  F7020000
[3e4c0a4825e9cdb] jit-backend-dump}
[3e4c0a4825ed05d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19f43 +0  09030000
[3e4c0a4825edd1d] jit-backend-dump}
[3e4c0a4825f1148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19f50 +0  18030000
[3e4c0a4825f1e11] jit-backend-dump}
[3e4c0a4825f51ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d19f60 +0  24030000
[3e4c0a4825f5e87] jit-backend-dump}
[3e4c0a4825f9528] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf8f43 +0  390E0200
[3e4c0a4825fa1f7] jit-backend-dump}
[3e4c0a4825fe54c] jit-backend}
[3e4c0a482602406] {jit-log-opt-bridge
# bridge out of Guard 0x2f644e8 with 83 ops
[p0, i1, p2, f3, p4]
+230: guard_not_invalidated(descr=<Guard0x3208da0>) [p0, i1, p2, f3, p4]
+230: p5 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+241: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x31fbbf8>) [p0, i1, p2, f3, p4]
+250: p7 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+254: guard_nonnull_class(p7, ConstClass(W_Flonum), descr=<Guard0x3208e00>) [p0, i1, p2, f3, p4]
+274: f9 = getfield_gc_f(p7, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+280: f11 = float_sub(0.000000, f9)
debug_merge_point(0, 0, '(let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))')
debug_merge_point(0, 0, '(< AppRand16 AppRand17)')
+300: i12 = float_lt(f3, f11)
+305: guard_false(i12, descr=<Guard0x31fbc40>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+311: p13 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+322: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x3208e60>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(+ i5080 1)')
+341: i16 = int_add_ovf(i1, 1)
+348: guard_no_overflow(descr=<Guard0x31fbc88>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+354: p17 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+358: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3208ec0>) [p0, i1, p2, f3, p4]
+377: i19 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+381: i20 = int_eq(i16, i19)
+384: guard_false(i20, descr=<Guard0x31fbcd0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40)))')
debug_merge_point(0, 0, '(if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void))))))')
+390: p21 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_0 24 pure>)
+394: p22 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+398: guard_nonnull_class(p22, ConstClass(W_Bool), descr=<Guard0x3208f20>) [p0, i1, p2, f3, p4]
+423: i25 = instance_ptr_eq(p22, ConstPtr(ptr24))
+426: guard_false(i25, descr=<Guard0x31fbd18>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+432: p26 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+436: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x3208f80>) [p0, i1, p2, f3, p4]
+454: i29 = int_ge(i16, 0)
+458: guard_true(i29, descr=<Guard0x31fbd60>) [p0, i1, p2, f3, p4]
+464: i30 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+468: i31 = int_lt(i16, i30)
+471: guard_true(i31, descr=<Guard0x31fbda8>) [p0, i1, p2, f3, p4]
+477: p32 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+481: guard_class(p32, 16623792, descr=<Guard0x31fbdf0>) [p0, i1, p2, f3, p4]
+493: p34 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+497: i35 = getarrayitem_gc_i(p34, i16, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand15 CellRef(kp))')
+502: p36 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+506: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x3208fe0>) [p0, i1, p2, f3, p4]
+524: p38 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+535: p39 = getfield_gc_r(p38, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+539: guard_nonnull_class(p39, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3209040>) [p0, i1, p2, f3, p4]
+559: i41 = getfield_gc_i(p39, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+570: p42 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+570: i44 = int_ge(i35, 0)
+574: guard_true(i44, descr=<Guard0x31fbe38>) [p0, i1, p2, f3, p4]
+580: i45 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+591: i46 = int_lt(i35, i45)
+594: guard_true(i46, descr=<Guard0x31fbe80>) [p0, i1, p2, f3, p4]
+600: p47 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+611: guard_class(p47, 16622984, descr=<Guard0x31fbec8>) [p0, i1, p2, f3, p4]
+624: p49 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+628: p50 = getarrayitem_gc_r(p49, i35, descr=<ArrayP 8>)
+640: guard_class(p50, ConstClass(W_Vector), descr=<Guard0x31fbf10>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+653: i53 = int_ge(i41, 0)
+657: guard_true(i53, descr=<Guard0x31fbf58>) [p0, i1, p2, f3, p4]
+663: i54 = getfield_gc_i(p50, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+667: i55 = int_lt(i41, i54)
+670: guard_true(i55, descr=<Guard0x31fbfa0>) [p0, i1, p2, f3, p4]
+676: p56 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+680: guard_class(p56, 16612728, descr=<Guard0x3230020>) [p0, i1, p2, f3, p4]
+692: p58 = getfield_gc_r(p50, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+696: f59 = getarrayitem_gc_f(p58, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+703: i60 = arraylen_gc(p34, descr=<ArrayS 8>)
+703: i61 = arraylen_gc(p49, descr=<ArrayP 8>)
+703: jump(p2, i16, p13, p0, f59, p26, p34, p36, i45, p49, p38, p39, i41, p17, i19, p21, i30, p13, descr=TargetToken(49644192))
+848: --end of the loop--
[3e4c0a482657e7c] jit-log-opt-bridge}
[3e4c0a482f3ea2e] {jit-backend
[3e4c0a4830a480c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1a7c
[3e4c0a4830b98a9] jit-backend-dump}
[3e4c0a4830c6869] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aa94 +0  2A000000
[3e4c0a4830c7d55] jit-backend-dump}
[3e4c0a4830cc35d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b345 +0  2A000000
[3e4c0a4830cd29f] jit-backend-dump}
[3e4c0a4830d0a10] {jit-backend-addr
bridge out of Guard 0x307dad8 has address 0x7f6e13d1aa90 to 0x7f6e13d1b340
       gc table: 0x7f6e13d1a7c0
    jump target: 0x7f6e13d1aa90
         resops: 0x7f6e13d1aa9e
       failures: 0x7f6e13d1b340
            end: 0x7f6e13d1bbe2
[3e4c0a4830d2e84] jit-backend-addr}
[3e4c0a4830d68f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aaae +0  F8080000
[3e4c0a4830d7776] jit-backend-dump}
[3e4c0a4830daeaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aabe +0  04090000
[3e4c0a4830dbc0f] jit-backend-dump}
[3e4c0a4830df104] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aad5 +0  09090000
[3e4c0a4830dfe19] jit-backend-dump}
[3e4c0a4830e334e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aafc +0  1A090000
[3e4c0a4830e4073] jit-backend-dump}
[3e4c0a4830e74b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ab0d +0  1F090000
[3e4c0a4830e81c2] jit-backend-dump}
[3e4c0a4830eb564] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ab21 +0  21090000
[3e4c0a4830ec251] jit-backend-dump}
[3e4c0a4830ef614] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ab39 +0  1F090000
[3e4c0a4830f02ef] jit-backend-dump}
[3e4c0a4830f36ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ab47 +0  2D090000
[3e4c0a4830f43dd] jit-backend-dump}
[3e4c0a4830f77be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ab54 +0  3C090000
[3e4c0a4830f84a0] jit-backend-dump}
[3e4c0a4830fb8a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ab65 +0  47090000
[3e4c0a4830fc560] jit-backend-dump}
[3e4c0a4830ff92c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ab85 +0  43090000
[3e4c0a4831005ee] jit-backend-dump}
[3e4c0a48310399f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ab9f +0  45090000
[3e4c0a48310465c] jit-backend-dump}
[3e4c0a483107a6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1abad +0  53090000
[3e4c0a483108737] jit-backend-dump}
[3e4c0a48310bb1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1abba +0  62090000
[3e4c0a48310c7e1] jit-backend-dump}
[3e4c0a48310fb5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1abca +0  6E090000
[3e4c0a483110814] jit-backend-dump}
[3e4c0a483113b7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1abe0 +0  74090000
[3e4c0a483114860] jit-backend-dump}
[3e4c0a483117be2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1abea +0  86090000
[3e4c0a483118899] jit-backend-dump}
[3e4c0a48311bbfd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1abf7 +0  95090000
[3e4c0a48311c8c9] jit-backend-dump}
[3e4c0a48311fc05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ac09 +0  9F090000
[3e4c0a4831208d1] jit-backend-dump}
[3e4c0a483123c63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ac2f +0  95090000
[3e4c0a48312492f] jit-backend-dump}
[3e4c0a483127c8d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ac50 +0  90090000
[3e4c0a48312895c] jit-backend-dump}
[3e4c0a48312bcd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ac61 +0  9B090000
[3e4c0a48312c9ba] jit-backend-dump}
[3e4c0a48312fd9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ac81 +0  97090000
[3e4c0a483130ab4] jit-backend-dump}
[3e4c0a483133e8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ac9f +0  95090000
[3e4c0a483134bc3] jit-backend-dump}
[3e4c0a483137f80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1acb5 +0  9B090000
[3e4c0a483138c67] jit-backend-dump}
[3e4c0a48313bfe1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1acc6 +0  A6090000
[3e4c0a48313ccaa] jit-backend-dump}
[3e4c0a483140029] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1acdd +0  AB090000
[3e4c0a483140d11] jit-backend-dump}
[3e4c0a483144078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aceb +0  B9090000
[3e4c0a483144d93] jit-backend-dump}
[3e4c0a483148159] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1acf8 +0  C8090000
[3e4c0a483148e75] jit-backend-dump}
[3e4c0a48314c1fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ad05 +0  D7090000
[3e4c0a48314cef1] jit-backend-dump}
[3e4c0a48315024f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ad1d +0  DB090000
[3e4c0a483150f4c] jit-backend-dump}
[3e4c0a483154309] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ad2b +0  E9090000
[3e4c0a48315500f] jit-backend-dump}
[3e4c0a48315837f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ad3f +0  F1090000
[3e4c0a48315907c] jit-backend-dump}
[3e4c0a48315c3da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ad54 +0  F8090000
[3e4c0a48315d0b8] jit-backend-dump}
[3e4c0a483160444] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ad66 +0  020A0000
[3e4c0a483161138] jit-backend-dump}
[3e4c0a483164449] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ad7a +0  0A0A0000
[3e4c0a48316511b] jit-backend-dump}
[3e4c0a4831684e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ad96 +0  0A0A0000
[3e4c0a48316920c] jit-backend-dump}
[3e4c0a48316c56a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ada3 +0  190A0000
[3e4c0a48316d248] jit-backend-dump}
[3e4c0a4831706c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1adc9 +0  0F0A0000
[3e4c0a48317139b] jit-backend-dump}
[3e4c0a48317471a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1addd +0  170A0000
[3e4c0a4831753f3] jit-backend-dump}
[3e4c0a483178788] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1adf1 +0  1F0A0000
[3e4c0a48317948e] jit-backend-dump}
[3e4c0a48317c7c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ae04 +0  280A0000
[3e4c0a48317d49c] jit-backend-dump}
[3e4c0a483180843] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ae11 +0  370A0000
[3e4c0a48318151f] jit-backend-dump}
[3e4c0a483184880] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ae2d +0  370A0000
[3e4c0a48318555b] jit-backend-dump}
[3e4c0a4831888f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ae3d +0  430A0000
[3e4c0a4831895d7] jit-backend-dump}
[3e4c0a48318c929] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ae49 +0  530A0000
[3e4c0a48318d614] jit-backend-dump}
[3e4c0a483190978] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ae60 +0  580A0000
[3e4c0a48319167b] jit-backend-dump}
[3e4c0a483194a00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ae87 +0  4D0A0000
[3e4c0a4831956e5] jit-backend-dump}
[3e4c0a483198adf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ae9b +0  550A0000
[3e4c0a4831997f4] jit-backend-dump}
[3e4c0a48319cb49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aeb3 +0  590A0000
[3e4c0a48319d84f] jit-backend-dump}
[3e4c0a4831a0bdb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aecf +0  590A0000
[3e4c0a4831a18e4] jit-backend-dump}
[3e4c0a4831a4cb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aeee +0  560A0000
[3e4c0a4831a59bf] jit-backend-dump}
[3e4c0a4831a8dcb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1af00 +0  600A0000
[3e4c0a4831a9ab3] jit-backend-dump}
[3e4c0a4831ace1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1af14 +0  680A0000
[3e4c0a4831adb0b] jit-backend-dump}
[3e4c0a4831b0e93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1af25 +0  730A0000
[3e4c0a4831b1b75] jit-backend-dump}
[3e4c0a4831b4edf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1af43 +0  710A0000
[3e4c0a4831b5bbd] jit-backend-dump}
[3e4c0a4831b8f5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1af4d +0  830A0000
[3e4c0a4831b9c55] jit-backend-dump}
[3e4c0a4831bcfbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1af61 +0  8B0A0000
[3e4c0a4831bdcaa] jit-backend-dump}
[3e4c0a4831c100b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1af72 +0  960A0000
[3e4c0a4831c1ce3] jit-backend-dump}
[3e4c0a4831c50ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1af98 +0  8C0A0000
[3e4c0a4831c5d75] jit-backend-dump}
[3e4c0a4831c9119] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1afc0 +0  800A0000
[3e4c0a4831c9deb] jit-backend-dump}
[3e4c0a4831cd1a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1afd4 +0  820A0000
[3e4c0a4831cde96] jit-backend-dump}
[3e4c0a4831d123d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1afe9 +0  890A0000
[3e4c0a4831d1f18] jit-backend-dump}
[3e4c0a4831d5264] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1aff3 +0  9B0A0000
[3e4c0a4831d5f45] jit-backend-dump}
[3e4c0a4831d92ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1affd +0  AD0A0000
[3e4c0a4831d9fd7] jit-backend-dump}
[3e4c0a4831dd335] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b00f +0  B70A0000
[3e4c0a4831de010] jit-backend-dump}
[3e4c0a4831e13cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b024 +0  BE0A0000
[3e4c0a4831e20a5] jit-backend-dump}
[3e4c0a4831e5468] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b036 +0  C80A0000
[3e4c0a4831e6143] jit-backend-dump}
[3e4c0a4831e94cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b066 +0  B40A0000
[3e4c0a4831ea1a4] jit-backend-dump}
[3e4c0a4831ed75d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b074 +0  C20A0000
[3e4c0a4831ee457] jit-backend-dump}
[3e4c0a4831f194b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b07e +0  D40A0000
[3e4c0a4831f2661] jit-backend-dump}
[3e4c0a4831f5b1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b088 +0  E60A0000
[3e4c0a4831f684c] jit-backend-dump}
[3e4c0a4831f9ca5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b0b4 +0  D60A0000
[3e4c0a4831faa0d] jit-backend-dump}
[3e4c0a4831fdfc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b0c9 +0  DD0A0000
[3e4c0a4831fecde] jit-backend-dump}
[3e4c0a483202158] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1b0d9 +0  E90A0000
[3e4c0a483202edf] jit-backend-dump}
[3e4c0a483206610] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d08680 +0  0C240100
[3e4c0a483207334] jit-backend-dump}
[3e4c0a48320b57f] jit-backend}
[3e4c0a48320f6f9] {jit-log-opt-bridge
# bridge out of Guard 0x307dad8 with 351 ops
[p0, p1]
+742: guard_class(p1, 16504592, descr=<Guard0x32090a0>) [p0, p1]
+754: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+758: guard_class(p0, 16435208, descr=<Guard0x3230068>) [p0, p1]
+770: p5 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+774: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x3209100>) [p0, p1]
debug_merge_point(0, 0, '(- AppRand19)')
+793: guard_not_invalidated(descr=<Guard0x32300b0>) [p0, p1]
+793: f7 = getfield_gc_f(p1, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+799: f9 = float_sub(0.000000, f7)
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+819: guard_class(p3, 16504944, descr=<Guard0x32300f8>) [p0, p1]
+832: p11 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+836: guard_class(p11, 16480704, descr=<Guard0x3230140>) [p0, p1]
+849: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+860: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x3230188>) [p0, p1]
+869: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+873: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x3209160>) [p0, p1]
+893: i17 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+897: i19 = int_ge(i17, 0)
+901: guard_true(i19, descr=<Guard0x32301d0>) [p0, p1]
+907: i20 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+911: i21 = int_lt(i17, i20)
+914: guard_true(i21, descr=<Guard0x3230218>) [p0, p1]
+920: p22 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+924: guard_class(p22, 16623792, descr=<Guard0x3230260>) [p0, p1]
+937: p24 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+941: i25 = getarrayitem_gc_i(p24, i17, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand21 CellRef(kp))')
+946: p26 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+950: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x32091c0>) [p0, p1]
+969: p28 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+973: p29 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+977: guard_nonnull_class(p29, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3209220>) [p0, p1]
+995: i31 = getfield_gc_i(p29, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+999: p32 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+999: i34 = int_ge(i25, 0)
+1003: guard_true(i34, descr=<Guard0x32302a8>) [p0, p1]
+1009: i35 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1013: i36 = int_lt(i25, i35)
+1016: guard_true(i36, descr=<Guard0x32302f0>) [p0, p1]
+1022: p37 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1026: guard_class(p37, 16622984, descr=<Guard0x3230338>) [p0, p1]
+1038: p39 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1042: p40 = getarrayitem_gc_r(p39, i25, descr=<ArrayP 8>)
+1047: guard_class(p40, ConstClass(W_Vector), descr=<Guard0x3230380>) [p0, p1]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1060: i43 = int_ge(i31, 0)
+1064: guard_true(i43, descr=<Guard0x32303c8>) [p0, p1]
+1070: i44 = getfield_gc_i(p40, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1074: i45 = int_lt(i31, i44)
+1077: guard_true(i45, descr=<Guard0x3230410>) [p0, p1]
+1083: p46 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1087: guard_class(p46, 16612728, descr=<Guard0x3230458>) [p0, p1]
+1101: p48 = getfield_gc_r(p40, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1105: f49 = getarrayitem_gc_f(p48, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(/ AppRand20 AppRand22)')
+1112: i51 = float_eq(f49, 0.000000)
+1133: guard_false(i51, descr=<Guard0x32304a0>) [p0, p1]
+1139: f52 = float_truediv(f9, f49)
debug_merge_point(0, 0, '(let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))')
debug_merge_point(0, 0, '(< q CellRef(q1))')
+1144: p53 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1148: p54 = getfield_gc_r(p53, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1152: guard_nonnull_class(p54, ConstClass(W_CellFloatStrategy), descr=<Guard0x3209280>) [p0, p1]
+1172: f56 = getfield_gc_f(p54, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1178: i57 = float_lt(f52, f56)
+1183: guard_true(i57, descr=<Guard0x32304e8>) [p0, p1]
debug_merge_point(0, 0, '(if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))')
debug_merge_point(0, 0, '(let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1189: i58 = getarrayitem_gc_i(p24, i17, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! ip SetBang4)')
+1194: p59 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_3 48 pure>)
+1198: p60 = getfield_gc_r(p59, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1202: guard_nonnull_class(p60, ConstClass(W_CellIntegerStrategy), descr=<Guard0x32092e0>) [p0, p1]
debug_merge_point(0, 0, '(set! q1 q)')
+1221: p62 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1225: setfield_gc(p60, i58, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1229: setfield_gc(p54, f52, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1242: guard_value(p62, ConstPtr(ptr63), descr=<Guard0x3209340>) [p62, p0]
+1251: p64 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1255: p65 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+1259: guard_class(p64, 16504944, descr=<Guard0x3230530>) [p62, p0]
+1273: p67 = getfield_gc_r(p64, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1277: guard_class(p65, 16435208, descr=<Guard0x3230578>) [p62, p0]
+1290: p69 = getfield_gc_r(p65, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1294: guard_nonnull_class(p69, ConstClass(ForwardLink), descr=<Guard0x32093a0>) [p62, p0]
debug_merge_point(0, 0, '(+ i5080 1)')
+1313: i71 = getfield_gc_i(p64, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+1317: i73 = int_add_ovf(i71, 1)
+1321: guard_no_overflow(descr=<Guard0x32305c0>) [p62, p0]
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
+1327: guard_class(p67, 16480704, descr=<Guard0x3230608>) [p62, p0]
+1340: p75 = getfield_gc_r(p67, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1344: guard_value(p75, ConstPtr(ptr76), descr=<Guard0x3230650>) [p62, p0]
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+1353: p77 = getfield_gc_r(p67, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+1357: guard_nonnull_class(p77, ConstClass(W_Fixnum), descr=<Guard0x3209400>) [p62, p0]
+1377: i79 = getfield_gc_i(p77, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1382: i80 = int_eq(i73, i79)
+1385: guard_true(i80, descr=<Guard0x3230698>) [p62, p0]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(void)')
+1391: p81 = getfield_gc_r(p65, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1402: guard_value(p81, ConstPtr(ptr82), descr=<Guard0x32306e0>) [p62, p0]
+1411: p83 = getfield_gc_r(p65, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1415: p84 = getfield_gc_r(p65, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)) from (void)')
+1419: guard_class(p83, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x3230728>) [p62, p0]
+1432: p86 = getfield_gc_r(p83, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1436: i87 = arraylen_gc(p86, descr=<ArrayP 8>)
+1440: i89 = int_eq(20, i87)
+1444: guard_false(i89, descr=<Guard0x3230770>) [p62, p0]
+1450: p90 = getfield_gc_r(p83, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1461: guard_value(p90, ConstPtr(ptr91), descr=<Guard0x32307b8>) [p62, p0]
+1470: p93 = getarrayitem_gc_pure_r(p86, 8, descr=<ArrayP 8>)
+1474: p94 = getfield_gc_r(p93, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1479: guard_nonnull_class(p94, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3209460>) [p62, p0]
+1498: i96 = getfield_gc_i(p94, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1502: i97 = int_is_zero(i96)
+1505: guard_false(i97, descr=<Guard0x3230800>) [p62, p0]
debug_merge_point(0, 0, '(set! one? #t)')
+1511: p99 = getarrayitem_gc_pure_r(p86, 0, descr=<ArrayP 8>)
+1532: setfield_gc(p99, ConstPtr(ptr100), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1536: guard_class(p84, 16435208, descr=<Guard0x32094c0>) [p84, p83]
+1549: p102 = getfield_gc_r(p84, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1560: guard_value(p102, ConstPtr(ptr103), descr=<Guard0x3230848>) [p84, p83]
+1569: p104 = getfield_gc_r(p84, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1573: p105 = getfield_gc_r(p84, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)) from (void)')
+1577: guard_class(p104, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x3230890>) [p84, p83]
+1589: p107 = getfield_gc_r(p104, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1593: i108 = arraylen_gc(p107, descr=<ArrayP 8>)
+1598: i110 = int_eq(20, i108)
+1602: guard_false(i110, descr=<Guard0x32308d8>) [p84, p83]
+1608: p111 = getfield_gc_r(p104, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1612: guard_value(p111, ConstPtr(ptr112), descr=<Guard0x3230920>) [p84, p83]
+1621: p114 = getarrayitem_gc_pure_r(p107, 0, descr=<ArrayP 8>)
+1626: p115 = getfield_gc_r(p114, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1630: guard_nonnull_class(p115, ConstClass(W_Bool), descr=<Guard0x3209520>) [p84, p83]
+1656: i118 = instance_ptr_eq(p115, ConstPtr(ptr117))
+1659: guard_false(i118, descr=<Guard0x3230968>) [p84, p83]
debug_merge_point(0, 0, '(begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303))')
+1665: guard_class(p105, 16435208, descr=<Guard0x32309b0>) [p84, p83]
+1677: p120 = getfield_gc_r(p105, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1681: guard_nonnull_class(p120, ConstClass(ForwardLink), descr=<Guard0x3209580>) [p84, p83]
debug_merge_point(0, 0, '(set! one? #f)')
debug_merge_point(0, 0, '(simp3 #t)')
+1700: p123 = getarrayitem_gc_pure_r(p107, 9, descr=<ArrayP 8>)
+1716: setfield_gc(p114, ConstPtr(ptr124), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1720: guard_nonnull_class(p123, 16479200, descr=<Guard0x32095e0>) [p104, p123, p105, p120]
+1739: p126 = getfield_gc_r(p123, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1750: guard_value(p126, ConstPtr(ptr127), descr=<Guard0x32309f8>) [p104, p123, p105, p120]
+1759: p128 = getfield_gc_r(p104, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))))')
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) CellRef(kp))')
+1759: p129 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1763: guard_nonnull_class(p129, ConstClass(W_Vector), descr=<Guard0x3209640>) [p104, p123, p105, p120]
+1783: p131 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1787: p132 = getfield_gc_r(p131, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1791: guard_nonnull_class(p132, ConstClass(W_CellIntegerStrategy), descr=<Guard0x32096a0>) [p104, p123, p105, p120]
+1811: i134 = getfield_gc_i(p132, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1816: p135 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1820: p136 = getfield_gc_r(p135, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1824: guard_nonnull_class(p136, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3209700>) [p104, p123, p105, p120]
+1842: i138 = getfield_gc_i(p136, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1846: p139 = getfield_gc_r(p123, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1850: i141 = int_ge(i134, 0)
+1854: guard_true(i141, descr=<Guard0x3230a40>) [p104, p123, p105, p120]
+1860: i142 = getfield_gc_i(p129, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1871: i143 = int_lt(i134, i142)
+1874: guard_true(i143, descr=<Guard0x3230a88>) [p104, p123, p105, p120]
+1880: p144 = getfield_gc_r(p129, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1884: guard_class(p144, 16622984, descr=<Guard0x3230ad0>) [p104, p123, p105, p120]
+1897: p146 = getfield_gc_r(p129, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1901: p147 = getarrayitem_gc_r(p146, i134, descr=<ArrayP 8>)
+1913: guard_class(p147, ConstClass(W_Vector), descr=<Guard0x3230b18>) [p104, p123, p105, p120]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1927: i150 = int_ge(i138, 0)
+1931: guard_true(i150, descr=<Guard0x3230b60>) [p104, p123, p105, p120]
+1937: i151 = getfield_gc_i(p147, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1948: i152 = int_lt(i138, i151)
+1951: guard_true(i152, descr=<Guard0x3230ba8>) [p104, p123, p105, p120]
+1957: p153 = getfield_gc_r(p147, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1961: guard_class(p153, 16612728, descr=<Guard0x3230bf0>) [p104, p123, p105, p120]
+1974: p155 = getfield_gc_r(p147, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1978: f156 = getarrayitem_gc_f(p155, i138, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))')
debug_merge_point(0, 0, '(/ AppRand41)')
+1985: i158 = float_eq(f156, 0.000000)
+2006: guard_false(i158, descr=<Guard0x3230c38>) [p104, p123, p105, p120]
+2012: f160 = float_truediv(1.000000, f156)
debug_merge_point(0, 0, '(let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))')
debug_merge_point(0, 0, '(lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))')
+2032: p161 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2036: p162 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2040: guard_class(p139, 16505296, descr=<Guard0x3230c80>) [p104, p123, p105, p120]
debug_merge_point(0, 0, '(doloop5167 0)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 0)')
debug_merge_point(0, 0, '(if one?5161 2 1)')
debug_merge_point(0, 0, '2')
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+2052: guard_nonnull_class(p162, ConstClass(W_Fixnum), descr=<Guard0x3209760>) [p104, p123, p105, p120]
+2072: i165 = getfield_gc_i(p162, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2083: i167 = int_add_ovf(i165, 2)
+2087: guard_no_overflow(descr=<Guard0x3230cc8>) [p104, p123, p105, p120]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+2093: i169 = int_eq(0, i167)
+2097: guard_false(i169, descr=<Guard0x3230d10>) [p104, p123, p105, p120]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+2103: i170 = int_eq(0, i134)
+2107: guard_false(i170, descr=<Guard0x3230d58>) [p104, p123, p105, p120]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2113: p171 = getarrayitem_gc_r(p146, 0, descr=<ArrayP 8>)
+2117: guard_class(p171, ConstClass(W_Vector), descr=<Guard0x3230da0>) [p104, p123, p105, p120]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2131: i173 = getfield_gc_i(p171, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2143: i174 = int_lt(i138, i173)
+2146: guard_true(i174, descr=<Guard0x3230de8>) [p104, p123, p105, p120]
+2152: p175 = getfield_gc_r(p171, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2157: guard_class(p175, 16612728, descr=<Guard0x3230e30>) [p104, p123, p105, p120]
+2170: p177 = getfield_gc_r(p171, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2175: f178 = getarrayitem_gc_f(p177, i138, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+2182: f179 = float_mul(f160, f178)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+2192: setarrayitem_gc(p177, i138, f179, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+2199: guard_nonnull_class(p161, ConstClass(W_Fixnum), descr=<Guard0x32097c0>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120]
+2218: i181 = getfield_gc_i(p161, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2222: i183 = int_add_ovf(i181, 1)
+2226: guard_no_overflow(descr=<Guard0x3230e78>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+2232: i185 = int_eq(0, i183)
+2236: guard_false(i185, descr=<Guard0x3230ec0>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+2242: i186 = int_eq(0, i138)
+2246: guard_false(i186, descr=<Guard0x3230f08>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2252: f187 = getarrayitem_gc_f(p177, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2258: p188 = getarrayitem_gc_r(p146, i134, descr=<ArrayP 8>)
+2284: guard_class(p188, ConstClass(W_Vector), descr=<Guard0x3230f50>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2296: i190 = getfield_gc_i(p188, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2307: i191 = int_lt(0, i190)
+2311: guard_true(i191, descr=<Guard0x3230f98>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120]
+2317: p192 = getfield_gc_r(p188, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2321: guard_class(p192, 16612728, descr=<Guard0x3230fe0>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120]
+2333: p194 = getfield_gc_r(p188, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2337: f195 = getarrayitem_gc_f(p194, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2343: f196 = getarrayitem_gc_f(p177, i138, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+2357: f197 = float_mul(f195, f196)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+2362: f198 = float_sub(f187, f197)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+2367: setarrayitem_gc(p177, 0, f198, descr=<ArrayF 8>)
+2373: p199 = new_with_vtable(descr=<SizeDescr 64>)
+2427: p200 = new_with_vtable(descr=<SizeDescr 40>)
+2438: p201 = new_with_vtable(descr=<SizeDescr 24>)
+2449: p202 = new_with_vtable(descr=<SizeDescr 80>)
+2467: setfield_gc(p202, p139, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2485: setfield_gc(p202, ConstPtr(ptr203), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2489: setfield_gc(p202, p161, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+2500: setfield_gc(p202, p135, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+2518: setfield_gc(p202, p131, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+2529: setfield_gc(p202, p162, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+2533: setfield_gc(p202, p129, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+2544: setfield_gc(p202, ConstPtr(ptr204), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+2548: p205 = new_with_vtable(descr=<SizeDescr 16>)
+2559: setfield_gc(p205, f160, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+2565: setfield_gc(p202, p205, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+2569: setfield_gc(p201, p202, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2573: setfield_gc(p201, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+2581: p206 = new_with_vtable(descr=<SizeDescr 40>)
+2592: setfield_gc(p206, p120, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2603: p207 = new_with_vtable(descr=<SizeDescr 24>)
+2621: p208 = new_with_vtable(descr=<SizeDescr 24>)
+2639: setfield_gc(p208, p123, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2643: setfield_gc(p208, ConstPtr(ptr209), descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2647: setfield_gc(p207, p208, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2651: setfield_gc(p207, f160, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+2657: setfield_gc(p206, p207, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2661: p210 = new_with_vtable(descr=<SizeDescr 40>)
+2672: setfield_gc(p210, p120, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2676: setfield_gc(p210, p104, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2680: setfield_gc(p210, p105, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2698: setfield_gc(p210, ConstPtr(ptr211), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2702: setfield_gc(p206, p210, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2713: setfield_gc(p206, ConstPtr(ptr212), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2717: i213 = arraylen_gc(p146, descr=<ArrayP 8>)
+2717: setfield_gc(p199, p139, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2728: setfield_gc(p200, p120, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2746: setfield_gc(p199, ConstPtr(ptr214), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2757: setfield_gc(p200, ConstPtr(ptr215), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2761: setfield_gc(p200, p201, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2765: setfield_gc(p200, p206, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2769: setfield_gc(p199, p129, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2773: setfield_gc(p199, p135, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2777: setfield_gc(p199, p161, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2788: setfield_gc(p199, ConstPtr(ptr216), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2792: setfield_gc(p199, p131, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2796: jump(p199, 1, p200, p120, p161, i183, p135, p136, i138, ConstPtr(ptr216), p129, p146, 0, p131, p132, i134, descr=TargetToken(47968112))
+2944: --end of the loop--
[3e4c0a48331a46f] jit-log-opt-bridge}
[3e4c0a483cd52f2] {jit-backend
[3e4c0a483e5d827] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c
[3e4c0a483e7440b] jit-backend-dump}
[3e4c0a483e81480] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c494 +0  2C000000
[3e4c0a483e82904] jit-backend-dump}
[3e4c0a483e86d10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cdc5 +0  2C000000
[3e4c0a483e87c24] jit-backend-dump}
[3e4c0a483e8b3c3] {jit-backend-addr
bridge out of Guard 0x30a88d8 has address 0x7f6e13d1c490 to 0x7f6e13d1cdc0
       gc table: 0x7f6e13d1c190
    jump target: 0x7f6e13d1c490
         resops: 0x7f6e13d1c49e
       failures: 0x7f6e13d1cdc0
            end: 0x7f6e13d1d761
[3e4c0a483e8d742] jit-backend-addr}
[3e4c0a483e91130] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c4b6 +0  69090000
[3e4c0a483e91f58] jit-backend-dump}
[3e4c0a483e9561e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c4d1 +0  6A090000
[3e4c0a483e9637d] jit-backend-dump}
[3e4c0a483e99938] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c4de +0  79090000
[3e4c0a483e9a614] jit-backend-dump}
[3e4c0a483e9da85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c4f2 +0  81090000
[3e4c0a483e9e78e] jit-backend-dump}
[3e4c0a483ea1c58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c507 +0  88090000
[3e4c0a483ea2924] jit-backend-dump}
[3e4c0a483ea5e84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c51e +0  8D090000
[3e4c0a483ea6b65] jit-backend-dump}
[3e4c0a483ea9fc1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c52b +0  9C090000
[3e4c0a483eaac8d] jit-backend-dump}
[3e4c0a483eae129] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c53d +0  A6090000
[3e4c0a483eaedf8] jit-backend-dump}
[3e4c0a483eb2226] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c551 +0  AE090000
[3e4c0a483eb2eef] jit-backend-dump}
[3e4c0a483eb6366] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c56c +0  AF090000
[3e4c0a483eb702f] jit-backend-dump}
[3e4c0a483eba46c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c58c +0  AB090000
[3e4c0a483ebb132] jit-backend-dump}
[3e4c0a483ebe5ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c59d +0  B6090000
[3e4c0a483ebf2ac] jit-backend-dump}
[3e4c0a483ec26d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c5b4 +0  BB090000
[3e4c0a483ec33d4] jit-backend-dump}
[3e4c0a483ec67f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c5c5 +0  C6090000
[3e4c0a483ec74c5] jit-backend-dump}
[3e4c0a483eca942] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c5de +0  C9090000
[3e4c0a483ecb63c] jit-backend-dump}
[3e4c0a483ecea92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c5ec +0  D7090000
[3e4c0a483ecf779] jit-backend-dump}
[3e4c0a483ed2bc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c5f9 +0  E6090000
[3e4c0a483ed38c3] jit-backend-dump}
[3e4c0a483ed6cea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c60a +0  F1090000
[3e4c0a483ed79cf] jit-backend-dump}
[3e4c0a483edae3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c61f +0  F8090000
[3e4c0a483edbb15] jit-backend-dump}
[3e4c0a483edef74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c62d +0  060A0000
[3e4c0a483edfc68] jit-backend-dump}
[3e4c0a483ee33a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c63d +0  120A0000
[3e4c0a483ee4092] jit-backend-dump}
[3e4c0a483ee75a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c666 +0  050A0000
[3e4c0a483ee827e] jit-backend-dump}
[3e4c0a483eeb6f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c677 +0  0A0A0000
[3e4c0a483eec3d7] jit-backend-dump}
[3e4c0a483eef873] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c685 +0  120A0000
[3e4c0a483ef0594] jit-backend-dump}
[3e4c0a483ef3a40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c695 +0  180A0000
[3e4c0a483ef4789] jit-backend-dump}
[3e4c0a483ef7bcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c6aa +0  190A0000
[3e4c0a483ef8919] jit-backend-dump}
[3e4c0a483efbdb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c6e6 +0  F3090000
[3e4c0a483efca93] jit-backend-dump}
[3e4c0a483efff0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c6f8 +0  F7090000
[3e4c0a483f00c51] jit-backend-dump}
[3e4c0a483f041bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c705 +0  060A0000
[3e4c0a483f04ef1] jit-backend-dump}
[3e4c0a483f0835c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c712 +0  150A0000
[3e4c0a483f09062] jit-backend-dump}
[3e4c0a483f0c5ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c724 +0  1F0A0000
[3e4c0a483f0d2c5] jit-backend-dump}
[3e4c0a483f106af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c72e +0  310A0000
[3e4c0a483f113a3] jit-backend-dump}
[3e4c0a483f14808] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c73b +0  400A0000
[3e4c0a483f15514] jit-backend-dump}
[3e4c0a483f189ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c74c +0  4B0A0000
[3e4c0a483f196b0] jit-backend-dump}
[3e4c0a483f1cb71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c76b +0  480A0000
[3e4c0a483f1d883] jit-backend-dump}
[3e4c0a483f20ce2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c782 +0  4D0A0000
[3e4c0a483f219d9] jit-backend-dump}
[3e4c0a483f24eb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c78f +0  5C0A0000
[3e4c0a483f25ba3] jit-backend-dump}
[3e4c0a483f29002] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c799 +0  6E0A0000
[3e4c0a483f29d1a] jit-backend-dump}
[3e4c0a483f2d1d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c7a2 +0  810A0000
[3e4c0a483f2def0] jit-backend-dump}
[3e4c0a483f313ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c7af +0  900A0000
[3e4c0a483f320ae] jit-backend-dump}
[3e4c0a483f39020] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c7c1 +0  9A0A0000
[3e4c0a483f39e70] jit-backend-dump}
[3e4c0a483f3d658] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c7cf +0  A80A0000
[3e4c0a483f3e39c] jit-backend-dump}
[3e4c0a483f4195a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c7d8 +0  BB0A0000
[3e4c0a483f426e1] jit-backend-dump}
[3e4c0a483f45ce0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c7ec +0  C30A0000
[3e4c0a483f46a23] jit-backend-dump}
[3e4c0a483f49f0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c7fb +0  D00A0000
[3e4c0a483f4ac3c] jit-backend-dump}
[3e4c0a483f4e04f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c80c +0  DB0A0000
[3e4c0a483f4ed8c] jit-backend-dump}
[3e4c0a483f522fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c823 +0  E00A0000
[3e4c0a483f52fe2] jit-backend-dump}
[3e4c0a483f563ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c833 +0  EC0A0000
[3e4c0a483f5710d] jit-backend-dump}
[3e4c0a483f5a55d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c840 +0  FB0A0000
[3e4c0a483f5b2a6] jit-backend-dump}
[3e4c0a483f5e87d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c856 +0  010B0000
[3e4c0a483f5f5cd] jit-backend-dump}
[3e4c0a483f62a41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c85f +0  140B0000
[3e4c0a483f6373b] jit-backend-dump}
[3e4c0a483f66bac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c873 +0  1C0B0000
[3e4c0a483f67914] jit-backend-dump}
[3e4c0a483f6adad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c887 +0  240B0000
[3e4c0a483f6bb0c] jit-backend-dump}
[3e4c0a483f6efd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c8a3 +0  240B0000
[3e4c0a483f6fd22] jit-backend-dump}
[3e4c0a483f73196] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c8ac +0  370B0000
[3e4c0a483f73eec] jit-backend-dump}
[3e4c0a483f773aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c8be +0  410B0000
[3e4c0a483f780f3] jit-backend-dump}
[3e4c0a483f7b546] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c8d0 +0  4B0B0000
[3e4c0a483f7c298] jit-backend-dump}
[3e4c0a483f7f6c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c8e1 +0  560B0000
[3e4c0a483f8044d] jit-backend-dump}
[3e4c0a483f838e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c8f2 +0  610B0000
[3e4c0a483f8460a] jit-backend-dump}
[3e4c0a483f87a60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c903 +0  6C0B0000
[3e4c0a483f887c8] jit-backend-dump}
[3e4c0a483f8bc5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c914 +0  770B0000
[3e4c0a483f8c9bd] jit-backend-dump}
[3e4c0a483f8fe25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c925 +0  820B0000
[3e4c0a483f90b8d] jit-backend-dump}
[3e4c0a483f9400a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c931 +0  920B0000
[3e4c0a483f94d3b] jit-backend-dump}
[3e4c0a483f9817b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c948 +0  970B0000
[3e4c0a483f98ee6] jit-backend-dump}
[3e4c0a483f9c358] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c98d +0  6E0B0000
[3e4c0a483f9d0b0] jit-backend-dump}
[3e4c0a483fa050f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c9a8 +0  6F0B0000
[3e4c0a483fa1268] jit-backend-dump}
[3e4c0a483fa4719] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c9be +0  750B0000
[3e4c0a483fa5481] jit-backend-dump}
[3e4c0a483fa8979] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c9cc +0  830B0000
[3e4c0a483fa96d5] jit-backend-dump}
[3e4c0a483facb71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1c9e3 +0  880B0000
[3e4c0a483fad8a5] jit-backend-dump}
[3e4c0a483fb0d2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ca25 +0  620B0000
[3e4c0a483fb1a93] jit-backend-dump}
[3e4c0a483fb4f23] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ca42 +0  610B0000
[3e4c0a483fb5c79] jit-backend-dump}
[3e4c0a483fb9127] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ca5b +0  640B0000
[3e4c0a483fb9e80] jit-backend-dump}
[3e4c0a483fbd356] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ca74 +0  670B0000
[3e4c0a483fbe0c1] jit-backend-dump}
[3e4c0a483fc1535] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ca98 +0  5F0B0000
[3e4c0a483fc22b0] jit-backend-dump}
[3e4c0a483fc570e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1caa2 +0  710B0000
[3e4c0a483fc643f] jit-backend-dump}
[3e4c0a483fc9861] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cab6 +0  790B0000
[3e4c0a483fca570] jit-backend-dump}
[3e4c0a483fcd98c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cacd +0  7E0B0000
[3e4c0a483fce695] jit-backend-dump}
[3e4c0a483fd1ac9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1caf4 +0  730B0000
[3e4c0a483fd27bd] jit-backend-dump}
[3e4c0a483fd5ca2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cb21 +0  620B0000
[3e4c0a483fd698d] jit-backend-dump}
[3e4c0a483fd9dbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cb3e +0  610B0000
[3e4c0a483fdaacd] jit-backend-dump}
[3e4c0a483fddec1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cb53 +0  680B0000
[3e4c0a483fdebf2] jit-backend-dump}
[3e4c0a483fe1fcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cb61 +0  760B0000
[3e4c0a483fe2da0] jit-backend-dump}
[3e4c0a483fe6242] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cb76 +0  7D0B0000
[3e4c0a483fe6f2d] jit-backend-dump}
[3e4c0a483fea324] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cb7f +0  900B0000
[3e4c0a483feb005] jit-backend-dump}
[3e4c0a483fee436] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cba0 +0  8B0B0000
[3e4c0a483fef11a] jit-backend-dump}
[3e4c0a483ff24e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1cd3e +0  030A0000
[3e4c0a483ff31da] jit-backend-dump}
[3e4c0a483ff6948] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d09a60 +0  2C2A0100
[3e4c0a483ff7602] jit-backend-dump}
[3e4c0a483ffb880] jit-backend}
[3e4c0a483fff857] {jit-log-opt-bridge
# bridge out of Guard 0x30a88d8 with 378 ops
[i0, p1, p2, p3]
+790: guard_not_invalidated(descr=<Guard0x3209820>) [i0, p1, p2, p3]
+790: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+801: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x3231028>) [i0, p1, p2, p3]
+810: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+814: p7 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+818: guard_nonnull_class(p7, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3209880>) [i0, p1, p2, p3]
+837: i9 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+841: i10 = int_ge(i0, i9)
+844: guard_true(i10, descr=<Guard0x3231070>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(void)')
+850: p11 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+861: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x32310b8>) [i0, p1, p2, p3]
+870: p13 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+874: p14 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+878: guard_class(p14, 16435208, descr=<Guard0x3231100>) [i0, p1, p2, p3]
+891: p16 = getfield_gc_r(p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+895: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x32098e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if20 (<= CellRef(bmax) *epsilon*)]) (if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) from (void)')
debug_merge_point(0, 0, '(<= CellRef(bmax) *epsilon*)')
+914: guard_class(p13, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x3231148>) [i0, p1, p2, p3]
+927: p19 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+931: i20 = arraylen_gc(p19, descr=<ArrayP 8>)
+935: i22 = int_eq(20, i20)
+939: guard_false(i22, descr=<Guard0x3231190>) [i0, p1, p2, p3]
+945: p23 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+956: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x32311d8>) [i0, p1, p2, p3]
+965: p26 = getarrayitem_gc_pure_r(p19, 3, descr=<ArrayP 8>)
+969: p27 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+973: guard_nonnull_class(p27, ConstClass(W_CellFloatStrategy), descr=<Guard0x3209940>) [i0, p1, p2, p3]
+992: f29 = getfield_gc_f(p27, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+998: p31 = getarrayitem_gc_pure_r(p19, 15, descr=<ArrayP 8>)
+1005: guard_nonnull_class(p31, ConstClass(W_Flonum), descr=<Guard0x32099a0>) [i0, p1, p2, p3]
+1024: f33 = getfield_gc_f(p31, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+1030: i34 = float_le(f29, f33)
+1035: guard_true(i34, descr=<Guard0x3231220>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if20 (let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))')
debug_merge_point(0, 0, '(let ([AppRand80 (+ m 1)]) (let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)))))))))))')
debug_merge_point(0, 0, '(+ m 1)')
+1041: p36 = getarrayitem_gc_pure_r(p19, 13, descr=<ArrayP 8>)
+1045: guard_nonnull_class(p36, ConstClass(W_Fixnum), descr=<Guard0x3209a00>) [i0, p1, p2, p3]
+1064: i38 = getfield_gc_i(p36, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1068: i40 = int_add_ovf(i38, 1)
+1075: guard_no_overflow(descr=<Guard0x3231268>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand81 (matrix-ref a5002 AppRand80 0)][AppRand82 (- *epsilon*)]) (let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand80 0)')
+1081: p42 = getarrayitem_gc_pure_r(p19, 18, descr=<ArrayP 8>)
+1088: guard_nonnull_class(p42, ConstClass(W_Vector), descr=<Guard0x3209a60>) [i0, p1, p2, p3]
+1106: p44 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1110: i46 = int_ge(i40, 0)
+1114: guard_true(i46, descr=<Guard0x32312b0>) [i0, p1, p2, p3]
+1120: i47 = getfield_gc_i(p42, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1124: i48 = int_lt(i40, i47)
+1127: guard_true(i48, descr=<Guard0x32312f8>) [i0, p1, p2, p3]
+1133: p49 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1137: guard_class(p49, 16622984, descr=<Guard0x3231340>) [i0, p1, p2, p3]
+1150: p51 = getfield_gc_r(p42, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1154: p52 = getarrayitem_gc_r(p51, i40, descr=<ArrayP 8>)
+1159: guard_class(p52, ConstClass(W_Vector), descr=<Guard0x3231388>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1171: i54 = getfield_gc_i(p52, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1175: i56 = int_lt(0, i54)
+1179: guard_true(i56, descr=<Guard0x32313d0>) [i0, p1, p2, p3]
+1185: p57 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1189: guard_class(p57, 16612728, descr=<Guard0x3231418>) [i0, p1, p2, p3]
+1201: p59 = getfield_gc_r(p52, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1205: f61 = getarrayitem_gc_f(p59, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- *epsilon*) from (vector-ref AppRand1 j)')
+1211: f63 = float_sub(0.000000, f33)
debug_merge_point(0, 0, '(let ([if21 (< AppRand81 AppRand82)]) (if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)))))))))')
debug_merge_point(0, 0, '(< AppRand81 AppRand82)')
+1231: i64 = float_lt(f61, f63)
+1236: guard_false(i64, descr=<Guard0x3231460>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if21 (set! pass2? #f) (let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))))')
debug_merge_point(0, 0, '(let ([AppRand83 (+ m 1)]) (let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)))))))')
debug_merge_point(0, 0, '(+ m 1)')
debug_merge_point(0, 0, '(let ([AppRand84 (matrix-ref a5002 AppRand83 0)]) (let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand83 0)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1242: p65 = getarrayitem_gc_r(p51, i40, descr=<ArrayP 8>)
+1247: guard_class(p65, ConstClass(W_Vector), descr=<Guard0x32314a8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1259: i67 = getfield_gc_i(p65, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1263: i69 = int_lt(0, i67)
+1267: guard_true(i69, descr=<Guard0x32314f0>) [i0, p1, p2, p3]
+1273: p70 = getfield_gc_r(p65, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1277: guard_class(p70, 16612728, descr=<Guard0x3231538>) [i0, p1, p2, p3]
+1289: p72 = getfield_gc_r(p65, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1293: f74 = getarrayitem_gc_f(p72, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([if22 (<= AppRand84 *epsilon*)]) (if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(<= AppRand84 *epsilon*)')
+1299: i75 = float_le(f74, f33)
+1304: guard_true(i75, descr=<Guard0x3231580>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if22 (let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12)) (begin (simp2) (if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t))))')
debug_merge_point(0, 0, '(let ([loop5316 (lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))]) (loop5316 m12))')
debug_merge_point(0, 0, '(lambda (ip1) (let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))))')
+1310: p77 = getarrayitem_gc_pure_r(p19, 0, descr=<ArrayP 8>)
+1314: p79 = getarrayitem_gc_pure_r(p19, 1, descr=<ArrayP 8>)
+1318: p81 = getarrayitem_gc_pure_r(p19, 4, descr=<ArrayP 8>)
+1322: p83 = getarrayitem_gc_pure_r(p19, 8, descr=<ArrayP 8>)
+1326: p85 = getarrayitem_gc_pure_r(p19, 11, descr=<ArrayP 8>)
+1326: p87 = getarrayitem_gc_pure_r(p19, 12, descr=<ArrayP 8>)
+1330: p89 = getarrayitem_gc_pure_r(p19, 16, descr=<ArrayP 8>)
+1344: p91 = getarrayitem_gc_pure_r(p19, 17, descr=<ArrayP 8>)
+1358: guard_class(p44, 16505296, descr=<Guard0x32315c8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(loop5316 m12)')
+1370: guard_nonnull_class(p79, ConstClass(W_Fixnum), descr=<Guard0x3209ac0>) [i0, p1, p2, p3]
+1388: i94 = getfield_gc_i(p79, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))) from (loop5316 m12)')
debug_merge_point(0, 0, '(<= ip1 m)')
+1392: i95 = int_le(i94, i38)
+1395: guard_true(i95, descr=<Guard0x3231610>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))')
debug_merge_point(0, 0, '(let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89))))))')
debug_merge_point(0, 0, '(- ip1 1)')
+1401: i97 = int_sub_ovf(i94, 1)
+1408: guard_no_overflow(descr=<Guard0x3231658>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))')
debug_merge_point(0, 0, '(vector-ref iposv AppRand85)')
+1414: guard_nonnull_class(p87, ConstClass(W_Vector), descr=<Guard0x3209b20>) [i0, p1, p2, p3]
+1432: i100 = int_ge(i97, 0)
+1436: guard_true(i100, descr=<Guard0x32316a0>) [i0, p1, p2, p3]
+1442: i101 = getfield_gc_i(p87, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1446: i102 = int_lt(i97, i101)
+1449: guard_true(i102, descr=<Guard0x32316e8>) [i0, p1, p2, p3]
+1455: p103 = getfield_gc_r(p87, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1459: guard_class(p103, 16623792, descr=<Guard0x3231730>) [i0, p1, p2, p3]
+1472: p105 = getfield_gc_r(p87, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1476: i106 = getarrayitem_gc_i(p105, i97, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(+ CellRef(ip) n -1)')
+1481: p107 = getfield_gc_r(p83, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1485: guard_nonnull_class(p107, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3209b80>) [i0, p1, p2, p3]
+1503: i109 = getfield_gc_i(p107, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1507: guard_nonnull_class(p81, ConstClass(W_Fixnum), descr=<Guard0x3209be0>) [i0, p1, p2, p3]
+1526: i111 = getfield_gc_i(p81, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1530: i112 = int_add_ovf(i109, i111)
+1533: guard_no_overflow(descr=<Guard0x3231778>) [i0, p1, p2, p3]
+1539: i114 = int_add_ovf(i112, -1)
+1543: guard_no_overflow(descr=<Guard0x32317c0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89))))')
debug_merge_point(0, 0, '(= AppRand86 AppRand87)')
+1549: i115 = int_eq(i106, i114)
+1552: guard_false(i115, descr=<Guard0x3231808>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))')
debug_merge_point(0, 0, '(let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89))')
debug_merge_point(0, 0, '(+ ip1 1)')
+1558: i117 = int_add(i94, 1)
debug_merge_point(0, 0, '(loop5316 AppRand89)')
debug_merge_point(0, 0, '(let ([if23 (<= ip1 m)]) (if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))) from (loop5316 AppRand89)')
debug_merge_point(0, 0, '(<= ip1 m)')
+1562: i118 = int_le(i117, i38)
+1565: guard_false(i118, descr=<Guard0x3231850>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if23 (let ([AppRand85 (- ip1 1)]) (let ([AppRand86 (vector-ref iposv AppRand85)][AppRand87 (+ CellRef(ip) n -1)]) (let ([if24 (= AppRand86 AppRand87)]) (if if24 (begin (simp1 ip1 #t) (if (positive? CellRef(bmax)) (begin (set! ip ip1) (set! one? #t)) (let ([AppRand88 (+ ip1 1)]) (loop5316 AppRand88)))) (let ([AppRand89 (+ ip1 1)]) (loop5316 AppRand89)))))) (let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97)))')
debug_merge_point(0, 0, '(let ([doloop5335 (lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))][AppRand97 (+ m1 1)]) (doloop5335 AppRand97))')
debug_merge_point(0, 0, '(lambda (i5337) (let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))))')
debug_merge_point(0, 0, '(+ m1 1)')
+1571: guard_nonnull_class(p91, ConstClass(W_Fixnum), descr=<Guard0x3209c40>) [i0, p1, p2, p3]
+1589: i120 = getfield_gc_i(p91, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1593: i122 = int_add_ovf(i120, 1)
+1597: guard_no_overflow(descr=<Guard0x3231898>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(doloop5335 AppRand97)')
debug_merge_point(0, 0, '(let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))) from (doloop5335 AppRand97)')
debug_merge_point(0, 0, '(>= i5337 m12)')
+1603: i123 = int_ge(i122, i94)
+1606: guard_false(i123, descr=<Guard0x32318e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))')
debug_merge_point(0, 0, '(let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96)))')
debug_merge_point(0, 0, '(+ m1 1)')
debug_merge_point(0, 0, '(let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void))))')
debug_merge_point(0, 0, '(- i5337 AppRand90)')
debug_merge_point(0, 0, '(let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))')
debug_merge_point(0, 0, '(vector-ref l3 AppRand91)')
+1612: guard_nonnull_class(p89, ConstClass(W_Vector), descr=<Guard0x3209ca0>) [i0, p1, p2, p3]
+1632: i125 = getfield_gc_i(p89, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1637: i127 = int_lt(0, i125)
+1641: guard_true(i127, descr=<Guard0x3231928>) [i0, p1, p2, p3]
+1647: p128 = getfield_gc_r(p89, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1652: guard_class(p128, 16622984, descr=<Guard0x3231970>) [i0, p1, p2, p3]
+1664: p130 = getfield_gc_r(p89, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1669: p131 = getarrayitem_gc_r(p130, 0, descr=<ArrayP 8>)
+1673: guard_class(p131, ConstClass(W_Bool), descr=<Guard0x32319b8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void))')
+1694: i134 = instance_ptr_eq(p131, ConstPtr(ptr133))
+1697: guard_true(i134, descr=<Guard0x3231a00>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))')
debug_merge_point(0, 0, '(+ i5337 1)')
+1703: i136 = int_add(i122, 1)
debug_merge_point(0, 0, '(doloop5335 AppRand96)')
debug_merge_point(0, 0, '(let ([if25 (>= i5337 m12)]) (if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))) from (doloop5335 AppRand96)')
debug_merge_point(0, 0, '(>= i5337 m12)')
+1707: i137 = int_ge(i136, i94)
+1710: guard_true(i137, descr=<Guard0x3231a48>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if25 (void) (let ([AppRand90 (+ m1 1)]) (let ([AppRand91 (- i5337 AppRand90)]) (let ([if26 (vector-ref l3 AppRand91)]) (if if26 (let ([doloop5344 (lambda (k5346) (let ([AppRand92 (+ n 1)]) (let ([if27 (= k5346 AppRand92)]) (if if27 (void) (let ([AppRand93 (matrix-ref a5002 i5337 k5346)]) (let ([AppRand94 (- AppRand93)]) (matrix-set! a5002 i5337 k5346 AppRand94)) (let ([AppRand95 (+ k5346 1)]) (doloop5344 AppRand95)))))))]) (doloop5344 0)) (void)))) (let ([AppRand96 (+ i5337 1)]) (doloop5335 AppRand96))))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)) from (void)')
+1716: p138 = getfield_gc_r(p77, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1720: guard_nonnull_class(p138, ConstClass(W_Bool), descr=<Guard0x3209d00>) [i0, p1, p2, p3]
+1738: i141 = instance_ptr_eq(p138, ConstPtr(ptr140))
+1741: guard_true(i141, descr=<Guard0x3231a90>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(void)')
+1747: p142 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1758: guard_value(p142, ConstPtr(ptr143), descr=<Guard0x3231ad8>) [i0, p1, p2, p3]
+1767: p144 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1771: p145 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if CellRef(pass2?) (let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476)) #f)')
+1775: guard_class(p144, 16501424, descr=<Guard0x3231b20>) [i0, p1, p2, p3]
+1787: p147 = getfield_gc_r(p144, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_1 24 pure>)
+1791: p148 = getfield_gc_r(p147, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1795: guard_nonnull_class(p148, ConstClass(W_Bool), descr=<Guard0x3209d60>) [i0, p1, p2, p3]
+1815: i151 = instance_ptr_eq(p148, ConstPtr(ptr150))
+1818: guard_false(i151, descr=<Guard0x3231b68>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([loop5476 (lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))]) (loop5476))')
+1824: p152 = getfield_gc_r(p144, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1828: guard_class(p152, 16502480, descr=<Guard0x3231bb0>) [i0, p1, p2, p3]
+1842: p154 = getfield_gc_r(p152, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1847: guard_class(p154, 16504944, descr=<Guard0x3231bf8>) [i0, p1, p2, p3]
+1860: p156 = getfield_gc_r(p154, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1864: guard_class(p156, 16503888, descr=<Guard0x3231c40>) [i0, p1, p2, p3]
+1877: p158 = getfield_gc_r(p156, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1881: guard_class(p158, 16503888, descr=<Guard0x3231c88>) [i0, p1, p2, p3]
+1894: p160 = getfield_gc_r(p158, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1898: guard_class(p160, 16500016, descr=<Guard0x3231cd0>) [i0, p1, p2, p3]
+1911: p162 = getfield_gc_r(p160, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1915: guard_class(p162, 16500720, descr=<Guard0x3231d18>) [i0, p1, p2, p3]
+1928: p164 = getfield_gc_r(p162, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1932: guard_class(p164, 16505296, descr=<Guard0x3231d60>) [i0, p1, p2, p3]
+1945: guard_class(p145, 16435208, descr=<Guard0x3231da8>) [i0, p1, p2, p3]
+1957: p167 = getfield_gc_r(p145, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1961: guard_nonnull_class(p167, ConstClass(ForwardLink), descr=<Guard0x3209dc0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(lambda () (simp1 0 #f) (if (positive? CellRef(bmax)) (begin (simp2) (if (zero? CellRef(ip)) #t (begin (simp3 #f) (let ([AppRand139 (- CellRef(kp) 1)]) (let ([t5483 (vector-ref izrov AppRand139)][AppRand140 (- CellRef(kp) 1)][AppRand141 (- CellRef(ip) 1)]) (let ([AppRand142 (vector-ref iposv AppRand141)]) (vector-set! izrov AppRand140 AppRand142)) (let ([AppRand143 (- CellRef(ip) 1)]) (vector-set! iposv AppRand143 t5483)))) (loop5476)))) (list iposv izrov)))')
+1980: p169 = getfield_gc_r(p152, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_8 80 pure>)
+1985: p170 = getfield_gc_r(p152, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_5 56 pure>)
+1990: p171 = getfield_gc_r(p152, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_7 72 pure>)
+1995: p172 = getfield_gc_r(p152, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_6 64 pure>)
+2000: p173 = getfield_gc_r(p144, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_4 48 pure>)
+2004: p174 = getfield_gc_r(p144, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_3 40 pure>)
+2015: p175 = getfield_gc_r(p144, descr=<FieldP rpython.tool.pairtype.ConsEnvSize6.inst__vals_2 32 pure>)
+2026: p176 = getfield_gc_r(p152, descr=<FieldP rpython.tool.pairtype.ConsEnvSize9.inst__vals_4 48 pure>)
debug_merge_point(0, 0, '(loop5476)')
debug_merge_point(0, 0, '(simp1 0 #f) from (loop5476)')
+2031: guard_nonnull_class(p175, 16479200, descr=<Guard0x3209e20>) [i0, p1, p2, p3]
+2049: p178 = getfield_gc_r(p175, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2067: guard_value(p178, ConstPtr(ptr179), descr=<Guard0x3231df0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([SetBang0 (vector-ref l1 0)]) (set! kp SetBang0))')
debug_merge_point(0, 0, '(vector-ref l1 0)')
+2076: p180 = getfield_gc_r(p175, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2080: guard_nonnull_class(p180, ConstClass(W_Vector), descr=<Guard0x3209e80>) [i0, p1, p2, p3]
+2098: i182 = getfield_gc_i(p180, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2102: i184 = int_lt(0, i182)
+2106: guard_true(i184, descr=<Guard0x3231e38>) [i0, p1, p2, p3]
+2112: p185 = getfield_gc_r(p180, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2123: guard_class(p185, 16623792, descr=<Guard0x3231e80>) [i0, p1, p2, p3]
+2135: p187 = getfield_gc_r(p180, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2153: i189 = getarrayitem_gc_i(p187, 0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! kp SetBang0)')
+2158: p190 = getfield_gc_r(p175, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2169: p191 = getfield_gc_r(p190, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2181: guard_nonnull_class(p191, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3209ee0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([SetBang1 (matrix-ref a5002 mm CellRef(kp))]) (set! bmax SetBang1))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm CellRef(kp))')
+2201: p193 = getfield_gc_r(p175, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2205: setfield_gc(p191, i189, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2210: guard_nonnull_class(p193, ConstClass(W_Vector), descr=<Guard0x3209f40>) [p193, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2230: p196 = getfield_gc_r(p175, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2234: i197 = getfield_gc_i(p193, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2245: i199 = int_lt(0, i197)
+2249: guard_true(i199, descr=<Guard0x3231ec8>) [p193, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2255: p200 = getfield_gc_r(p193, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2266: guard_class(p200, 16622984, descr=<Guard0x3231f10>) [p193, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2280: p202 = getfield_gc_r(p193, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2291: p204 = getarrayitem_gc_r(p202, 0, descr=<ArrayP 8>)
+2302: guard_class(p204, ConstClass(W_Vector), descr=<Guard0x3231f58>) [p193, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2316: i207 = int_ge(i189, 0)
+2320: guard_true(i207, descr=<Guard0x3231fa0>) [p193, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2326: i208 = getfield_gc_i(p204, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2337: i209 = int_lt(i189, i208)
+2340: guard_true(i209, descr=<Guard0x3242020>) [p193, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2346: p210 = getfield_gc_r(p204, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2357: guard_class(p210, 16612728, descr=<Guard0x3242068>) [p193, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2369: p212 = getfield_gc_r(p204, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2373: f213 = getarrayitem_gc_f(p212, i189, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang1)')
+2380: p214 = getfield_gc_r(p175, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2384: p215 = getfield_gc_r(p214, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2388: guard_nonnull_class(p215, ConstClass(W_CellFloatStrategy), descr=<Guard0x3209fa0>) [p193, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
debug_merge_point(0, 0, '(let ([doloop (lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))]) (doloop 1))')
debug_merge_point(0, 0, '(lambda (k) (let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))))')
+2408: p217 = getfield_gc_r(p175, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2419: setfield_gc(p215, f213, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+2425: guard_class(p196, 16505296, descr=<Guard0x3244020>) [p196, p193, p180, p217, p190, p214, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
debug_merge_point(0, 0, '(doloop 1)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop 1)')
debug_merge_point(0, 0, '(>= k CellRef(nl1))')
+2453: p219 = getfield_gc_r(p217, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+2464: guard_nonnull_class(p219, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3244080>) [p196, p193, p180, p217, p190, p214, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2482: i221 = getfield_gc_i(p219, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2493: i223 = int_ge(1, i221)
+2497: guard_false(i223, descr=<Guard0x32420b0>) [p196, p193, p180, p217, p190, p214, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
debug_merge_point(0, 0, '(if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))')
debug_merge_point(0, 0, '(let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14)))')
debug_merge_point(0, 0, '(if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))')
debug_merge_point(0, 0, '(let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
+2503: i224 = int_lt(1, i182)
+2511: guard_true(i224, descr=<Guard0x32420f8>) [p196, p193, p180, p217, p190, p214, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2517: i225 = getarrayitem_gc_i(p187, 1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand10)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2528: i227 = int_ge(i225, 0)
+2532: guard_true(i227, descr=<Guard0x3242140>) [p196, p193, p180, p217, p190, p214, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2538: i228 = int_lt(i225, i208)
+2541: guard_true(i228, descr=<Guard0x3242188>) [p196, p193, p180, p217, p190, p214, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
+2547: f229 = getarrayitem_gc_f(p212, i225, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(- AppRand11 CellRef(bmax)) from (vector-ref AppRand1 j)')
+2554: f230 = float_sub(f229, f213)
debug_merge_point(0, 0, '(if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void))')
+2559: i232 = float_gt(f230, 0.000000)
+2574: guard_true(i232, descr=<Guard0x32421d0>) [p196, p193, p180, p217, p190, p214, p176, p174, p173, p172, p171, p170, p169, p164, p145, p175, p167, None, None, None, None]
debug_merge_point(0, 0, '(let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
debug_merge_point(0, 0, '(set! kp SetBang2)')
debug_merge_point(0, 0, '(let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))')
debug_merge_point(0, 0, '(vector-ref l1 k)')
debug_merge_point(0, 0, '(let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3))')
debug_merge_point(0, 0, '(matrix-ref a5002 mm AppRand13)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2580: f233 = getarrayitem_gc_f(p212, i225, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(set! bmax SetBang3) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand14 (+ k 1)]) (doloop AppRand14))')
debug_merge_point(0, 0, '(+ k 1)')
debug_merge_point(0, 0, '(doloop AppRand14)')
debug_merge_point(0, 0, '(let ([if3 (>= k CellRef(nl1))]) (if if3 (void) (let ([AppRand12 (if abs? (let ([AppRand8 (vector-ref l1 k)]) (let ([AppRand9 (matrix-ref a5002 mm AppRand8)]) (- (abs AppRand9) (abs CellRef(bmax))))) (let ([AppRand10 (vector-ref l1 k)]) (let ([AppRand11 (matrix-ref a5002 mm AppRand10)]) (- AppRand11 CellRef(bmax)))))]) (if (positive? AppRand12) (let ([SetBang2 (vector-ref l1 k)]) (set! kp SetBang2) (let ([AppRand13 (vector-ref l1 k)]) (let ([SetBang3 (matrix-ref a5002 mm AppRand13)]) (set! bmax SetBang3)))) (void)) (let ([AppRand14 (+ k 1)]) (doloop AppRand14))))) from (doloop AppRand14)')
+2587: setfield_gc(p191, i225, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2592: setfield_gc(p215, f233, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+2605: p234 = new_with_vtable(descr=<SizeDescr 80>)
+2655: p235 = new_with_vtable(descr=<SizeDescr 40>)
+2666: p236 = new_with_vtable(descr=<SizeDescr 88>)
+2677: setfield_gc(p236, p164, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2688: setfield_gc(p236, ConstPtr(ptr237), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2692: setfield_gc(p236, p169, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_0 24 pure>)
+2696: setfield_gc(p236, p170, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_1 32 pure>)
+2700: setfield_gc(p236, p171, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_2 40 pure>)
+2704: setfield_gc(p236, p172, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_3 48 pure>)
+2708: setfield_gc(p236, p173, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_4 56 pure>)
+2712: setfield_gc(p236, p174, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_5 64 pure>)
+2716: setfield_gc(p236, p175, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_6 72 pure>)
+2720: setfield_gc(p236, p176, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize8.inst__vals_7 80 pure>)
+2835: i238 = getfield_gc_i(p219, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+2846: setfield_gc(p234, ConstPtr(ptr239), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2857: setfield_gc(p234, p217, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+2875: setfield_gc(p235, ConstPtr(ptr240), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2879: setfield_gc(p235, p236, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2883: setfield_gc(p235, p145, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2894: setfield_gc(p235, p167, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2905: setfield_gc(p234, p196, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2909: setfield_gc(p234, p214, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+2920: setfield_gc(p234, p190, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+2931: setfield_gc(p234, ConstPtr(ptr241), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+2942: setfield_gc(p234, p180, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+2960: setfield_gc(p234, ConstPtr(ptr242), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+2964: setfield_gc(p234, p193, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+2975: i244 = int_ge(i238, -9223372036854775807)
+2988: guard_true(i244, descr=<Guard0x32440e0>) [p235, p234, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
+2994: i245 = arraylen_gc(p187, descr=<ArrayS 8>)
+2994: i246 = arraylen_gc(p202, descr=<ArrayP 8>)
+2994: jump(p234, 2, p235, p167, p217, p219, i238, p180, i182, p187, ConstPtr(ptr242), p193, p202, 0, p214, p215, f233, descr=TargetToken(48739520))
+3120: --end of the loop--
[3e4c0a48412d58b] jit-log-opt-bridge}
[3e4c0a4842d8b8b] {jit-backend
[3e4c0a4843449ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1d
[3e4c0a48434e995] jit-backend-dump}
[3e4c0a484359f92] {jit-backend-addr
Loop 64 ((let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60)) from (vector-ref AppRand1 j)) has address 0x7f6e13d1daed to 0x7f6e13d1dd70 (bootstrap 0x7f6e13d1da60)
       gc table: 0x7f6e13d1d960
       function: 0x7f6e13d1da60
         resops: 0x7f6e13d1daed
       failures: 0x7f6e13d1dd70
            end: 0x7f6e13d1e0ca
[3e4c0a48435ce78] jit-backend-addr}
[3e4c0a48436174e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1db04 +0  7A020000
[3e4c0a4843629a3] jit-backend-dump}
[3e4c0a48436626a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1db1b +0  7F020000
[3e4c0a4843670ef] jit-backend-dump}
[3e4c0a48436a6f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1db31 +0  85020000
[3e4c0a48436b44f] jit-backend-dump}
[3e4c0a48436eb89] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1db47 +0  A7020000
[3e4c0a48436f874] jit-backend-dump}
[3e4c0a484372d04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1db5d +0  AD020000
[3e4c0a484373a10] jit-backend-dump}
[3e4c0a484376e6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1db77 +0  AF020000
[3e4c0a484377b84] jit-backend-dump}
[3e4c0a48437afe9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1db87 +0  BB020000
[3e4c0a48437bce6] jit-backend-dump}
[3e4c0a48437f179] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1db9b +0  C3020000
[3e4c0a48437fe66] jit-backend-dump}
[3e4c0a48438330c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dbb1 +0  C9020000
[3e4c0a484384036] jit-backend-dump}
[3e4c0a484387503] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dbcb +0  CB020000
[3e4c0a484388206] jit-backend-dump}
[3e4c0a48438b5e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dbdd +0  D5020000
[3e4c0a48438c303] jit-backend-dump}
[3e4c0a48438f73a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dbea +0  E4020000
[3e4c0a484390487] jit-backend-dump}
[3e4c0a484393935] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dbfa +0  F0020000
[3e4c0a48439464e] jit-backend-dump}
[3e4c0a484397abf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dc0f +0  F7020000
[3e4c0a4843987d7] jit-backend-dump}
[3e4c0a48439bc3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dc20 +0  02030000
[3e4c0a48439c93c] jit-backend-dump}
[3e4c0a48439fd92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dc2a +0  14030000
[3e4c0a4843a0ac6] jit-backend-dump}
[3e4c0a4843a40bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dc37 +0  23030000
[3e4c0a4843a4dd4] jit-backend-dump}
[3e4c0a4843a82c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dc55 +0  21030000
[3e4c0a4843a9000] jit-backend-dump}
[3e4c0a4843ac434] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dc69 +0  29030000
[3e4c0a4843ad152] jit-backend-dump}
[3e4c0a4843b056e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dc79 +0  35030000
[3e4c0a4843b1277] jit-backend-dump}
[3e4c0a4843b469f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dc8f +0  3B030000
[3e4c0a4843b53ae] jit-backend-dump}
[3e4c0a4843b87df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dc9d +0  49030000
[3e4c0a4843b94e5] jit-backend-dump}
[3e4c0a4843bc916] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dcaa +0  58030000
[3e4c0a4843bd622] jit-backend-dump}
[3e4c0a4843c0acb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dcb7 +0  67030000
[3e4c0a4843c17d4] jit-backend-dump}
[3e4c0a4843c4c6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dccd +0  6D030000
[3e4c0a4843c595a] jit-backend-dump}
[3e4c0a4843c8d85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dcdb +0  7B030000
[3e4c0a4843c9a9b] jit-backend-dump}
[3e4c0a4843ccf09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dce8 +0  8A030000
[3e4c0a4843cdc24] jit-backend-dump}
[3e4c0a4843d1071] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dd03 +0  8B030000
[3e4c0a4843d1d7a] jit-backend-dump}
[3e4c0a4843d51a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1dd19 +0  91030000
[3e4c0a4843d5e9c] jit-backend-dump}
[3e4c0a4843d9e20] jit-backend}
[3e4c0a4843ddcfa] {jit-log-opt-loop
# Loop 64 ((let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60)) from (vector-ref AppRand1 j)) : entry bridge with 82 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60)) from (vector-ref AppRand1 j)')
+405: guard_class(p0, 16500016, descr=<Guard0x3244140>) [p1, p0]
+424: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+428: guard_class(p1, 16435208, descr=<Guard0x3242218>) [p1, p0]
+447: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+451: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x32441a0>) [p1, p0]
debug_merge_point(0, 0, '(* AppRand58 AppRand59)')
+469: guard_not_invalidated(descr=<Guard0x3242260>) [p1, p0]
+469: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+473: guard_nonnull_class(p7, ConstClass(W_Flonum), descr=<Guard0x3244200>) [p1, p0]
+491: p9 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+495: guard_nonnull_class(p9, ConstClass(W_Flonum), descr=<Guard0x3244260>) [p1, p0]
+513: f11 = getfield_gc_f(p7, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+518: f12 = getfield_gc_f(p9, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+523: f13 = float_mul(f11, f12)
debug_merge_point(0, 0, '(matrix-set! a5002 CellRef(ip) kk5209 AppRand60)')
+527: guard_class(p3, 16504944, descr=<Guard0x32422a8>) [p1, p0]
+539: p15 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+543: guard_class(p15, 16479200, descr=<Guard0x32422f0>) [p1, p0]
+555: p17 = getfield_gc_r(p15, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+566: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3242338>) [p1, p0]
+575: p19 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+579: guard_nonnull_class(p19, ConstClass(W_Vector), descr=<Guard0x32442c0>) [p1, p0]
+597: p21 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+601: p22 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+605: guard_nonnull_class(p22, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3244320>) [p1, p0]
+623: i24 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+627: i25 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+631: p26 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+631: i28 = int_ge(i24, 0)
+635: guard_true(i28, descr=<Guard0x3242380>) [p1, p0]
+641: i29 = getfield_gc_i(p19, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+645: i30 = int_lt(i24, i29)
+648: guard_true(i30, descr=<Guard0x32423c8>) [p1, p0]
+654: p31 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+658: guard_class(p31, 16622984, descr=<Guard0x3242410>) [p1, p0]
+670: p33 = getfield_gc_r(p19, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+674: p34 = getarrayitem_gc_r(p33, i24, descr=<ArrayP 8>)
+679: guard_class(p34, ConstClass(W_Vector), descr=<Guard0x3242458>) [p1, p0]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+691: p36 = getfield_gc_r(p34, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+695: guard_class(p36, 16612728, descr=<Guard0x32424a0>) [p1, p0]
+708: i39 = int_ge(i25, 0)
+712: guard_true(i39, descr=<Guard0x32424e8>) [p1, p0]
+718: i40 = getfield_gc_i(p34, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+722: i41 = int_lt(i25, i40)
+725: guard_true(i41, descr=<Guard0x3242530>) [p1, p0]
+731: p42 = getfield_gc_r(p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+735: setarrayitem_gc(p42, i25, f13, descr=<ArrayF 8>)
+741: p43 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+752: guard_value(p43, ConstPtr(ptr44), descr=<Guard0x3244380>) [p43, p1]
+761: p45 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+765: p46 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)) from (vector-set! AppRand2 j4995 x)')
+769: guard_class(p45, 16504944, descr=<Guard0x3242578>) [p43, p1]
+781: p48 = getfield_gc_r(p45, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+785: guard_class(p46, 16435208, descr=<Guard0x32425c0>) [p43, p1]
+797: p50 = getfield_gc_r(p46, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+801: guard_nonnull_class(p50, ConstClass(ForwardLink), descr=<Guard0x32443e0>) [p43, p1]
debug_merge_point(0, 0, '(+ kk5209 1)')
+819: i52 = getfield_gc_i(p45, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+823: i54 = int_add_ovf(i52, 1)
+827: guard_no_overflow(descr=<Guard0x3242608>) [p43, p1]
debug_merge_point(0, 0, '(doloop5207 AppRand61)')
+833: guard_class(p48, 16479200, descr=<Guard0x3242650>) [p43, p1]
+846: p56 = getfield_gc_r(p48, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+850: guard_value(p56, ConstPtr(ptr57), descr=<Guard0x3242698>) [p43, p1]
debug_merge_point(0, 0, '(let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))) from (doloop5207 AppRand61)')
+859: p58 = getfield_gc_r(p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+863: guard_nonnull_class(p58, ConstClass(W_Fixnum), descr=<Guard0x3244440>) [p46, i54, p48]
+881: i60 = getfield_gc_i(p58, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+885: i62 = int_add_ovf(i60, 1)
+889: guard_no_overflow(descr=<Guard0x32444a0>) [p46, i54, p48]
+895: p63 = getfield_gc_r(p48, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+899: guard_nonnull(p63, descr=<Guard0x3244500>) [p46, i54, p48]
+908: guard_subclass(p63, ConstClass(W_Cell), descr=<Guard0x3244560>) [p46, i54, p48]
+935: p65 = getfield_gc_r(p63, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+939: guard_nonnull_class(p65, ConstClass(W_CellIntegerStrategy), descr=<Guard0x32445c0>) [p46, i54, p48]
+957: i67 = getfield_gc_i(p65, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+961: jump(p48, i54, p46, p50, p58, i62, p63, p65, i67, descr=TargetToken(48739680))
+1040: --end of the loop--
[3e4c0a48442a4b8] jit-log-opt-loop}
[3e4c0a484e06ea9] {jit-backend
[3e4c0a484f8366c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e5b
[3e4c0a484f980eb] jit-backend-dump}
[3e4c0a484fa510a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e864 +0  2A000000
[3e4c0a484fa682f] jit-backend-dump}
[3e4c0a484fab23a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1f0f5 +0  2A000000
[3e4c0a484fac1f1] jit-backend-dump}
[3e4c0a484fafb48] {jit-backend-addr
bridge out of Guard 0x2f64848 has address 0x7f6e13d1e860 to 0x7f6e13d1f0f0
       gc table: 0x7f6e13d1e5b0
    jump target: 0x7f6e13d1e860
         resops: 0x7f6e13d1e86e
       failures: 0x7f6e13d1f0f0
            end: 0x7f6e13d1f92e
[3e4c0a484fb1f98] jit-backend-addr}
[3e4c0a484fb5c85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e886 +0  EC080000
[3e4c0a484fb6a9e] jit-backend-dump}
[3e4c0a484fba470] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e89e +0  F0080000
[3e4c0a484fbb1b3] jit-backend-dump}
[3e4c0a484fbe88b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e8c3 +0  E7080000
[3e4c0a484fbf5c2] jit-backend-dump}
[3e4c0a484fc2bfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e8db +0  E5080000
[3e4c0a484fc3935] jit-backend-dump}
[3e4c0a484fc6de7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e8e5 +0  F7080000
[3e4c0a484fc7b3c] jit-backend-dump}
[3e4c0a484fcafb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e8f2 +0  06090000
[3e4c0a484fcbce8] jit-backend-dump}
[3e4c0a484fcf12b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e903 +0  11090000
[3e4c0a484fcfe40] jit-backend-dump}
[3e4c0a48507a376] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e923 +0  0D090000
[3e4c0a48507bf31] jit-backend-dump}
[3e4c0a4850811d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e92d +0  1F090000
[3e4c0a485081f64] jit-backend-dump}
[3e4c0a485087969] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e93a +0  2E090000
[3e4c0a485088711] jit-backend-dump}
[3e4c0a48508ba41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e94b +0  39090000
[3e4c0a48508c7a9] jit-backend-dump}
[3e4c0a48508f81a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e961 +0  3F090000
[3e4c0a485090557] jit-backend-dump}
[3e4c0a4850934d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e96f +0  4D090000
[3e4c0a4850941ee] jit-backend-dump}
[3e4c0a48509719e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e981 +0  57090000
[3e4c0a485097eaa] jit-backend-dump}
[3e4c0a48509aed1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e9be +0  36090000
[3e4c0a48509bc02] jit-backend-dump}
[3e4c0a48509ec7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e9cc +0  44090000
[3e4c0a48509f98b] jit-backend-dump}
[3e4c0a4850a28d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e9d5 +0  57090000
[3e4c0a4850a361f] jit-backend-dump}
[3e4c0a4850a6598] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e9e7 +0  61090000
[3e4c0a4850a72a4] jit-backend-dump}
[3e4c0a4850aa25d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e9f1 +0  73090000
[3e4c0a4850aaf7c] jit-backend-dump}
[3e4c0a4850adef8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1e9fe +0  82090000
[3e4c0a4850aec44] jit-backend-dump}
[3e4c0a4850b1ba4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ea10 +0  8C090000
[3e4c0a4850b2956] jit-backend-dump}
[3e4c0a4850b5933] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ea36 +0  82090000
[3e4c0a4850b6661] jit-backend-dump}
[3e4c0a4850b9620] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ea57 +0  7D090000
[3e4c0a4850ba339] jit-backend-dump}
[3e4c0a4850bd29c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ea68 +0  88090000
[3e4c0a4850bdfa5] jit-backend-dump}
[3e4c0a4850c0ede] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ea88 +0  84090000
[3e4c0a4850c1bf3] jit-backend-dump}
[3e4c0a4850c4b19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eab0 +0  78090000
[3e4c0a4850c5822] jit-backend-dump}
[3e4c0a4850c878f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eacc +0  78090000
[3e4c0a4850c94aa] jit-backend-dump}
[3e4c0a4850cc417] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ead9 +0  87090000
[3e4c0a4850cd120] jit-backend-dump}
[3e4c0a4850d00b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eaed +0  8F090000
[3e4c0a4850d0dc4] jit-backend-dump}
[3e4c0a4850d3d80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eb03 +0  95090000
[3e4c0a4850d4a8c] jit-backend-dump}
[3e4c0a4850d79fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eb15 +0  9F090000
[3e4c0a4850d8720] jit-backend-dump}
[3e4c0a4850db66e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eb29 +0  A7090000
[3e4c0a4850dc3ab] jit-backend-dump}
[3e4c0a4850df38c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eb43 +0  A9090000
[3e4c0a4850e009b] jit-backend-dump}
[3e4c0a4850e2fc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eb50 +0  B8090000
[3e4c0a4850e3cda] jit-backend-dump}
[3e4c0a4850e6c15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eb79 +0  AB090000
[3e4c0a4850e7928] jit-backend-dump}
[3e4c0a4850ea8bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eb8d +0  B3090000
[3e4c0a4850eb5d1] jit-backend-dump}
[3e4c0a4850ee626] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eba2 +0  BA090000
[3e4c0a4850ef332] jit-backend-dump}
[3e4c0a4850f22e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ebb4 +0  C4090000
[3e4c0a4850f2fee] jit-backend-dump}
[3e4c0a4850f5f1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ebc1 +0  D3090000
[3e4c0a4850f6c36] jit-backend-dump}
[3e4c0a4850f9b4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ebdc +0  D4090000
[3e4c0a4850fa859] jit-backend-dump}
[3e4c0a4850fd76d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ebec +0  E0090000
[3e4c0a4850fe479] jit-backend-dump}
[3e4c0a485101393] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ebfa +0  EE090000
[3e4c0a48510209c] jit-backend-dump}
[3e4c0a485104fd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ec12 +0  F2090000
[3e4c0a485105ce7] jit-backend-dump}
[3e4c0a485108bf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ec38 +0  E8090000
[3e4c0a485109907] jit-backend-dump}
[3e4c0a48510c84c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ec4c +0  F0090000
[3e4c0a48510d558] jit-backend-dump}
[3e4c0a485110497] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ec62 +0  F6090000
[3e4c0a485111230] jit-backend-dump}
[3e4c0a4851141f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ec7d +0  F7090000
[3e4c0a485114efe] jit-backend-dump}
[3e4c0a485117e4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ec9b +0  F5090000
[3e4c0a485118b7a] jit-backend-dump}
[3e4c0a48511baaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ecad +0  FF090000
[3e4c0a48511c7be] jit-backend-dump}
[3e4c0a48511f774] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ecc1 +0  070A0000
[3e4c0a485120487] jit-backend-dump}
[3e4c0a4851233a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ecd2 +0  120A0000
[3e4c0a4851240b3] jit-backend-dump}
[3e4c0a485126fc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ecee +0  120A0000
[3e4c0a485127ccd] jit-backend-dump}
[3e4c0a48512ac18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ecf8 +0  240A0000
[3e4c0a48512b921] jit-backend-dump}
[3e4c0a48512e884] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ed0c +0  2C0A0000
[3e4c0a48512f58a] jit-backend-dump}
[3e4c0a4851324fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ed1c +0  380A0000
[3e4c0a48513322b] jit-backend-dump}
[3e4c0a4851361b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ed42 +0  2E0A0000
[3e4c0a485136ec5] jit-backend-dump}
[3e4c0a485139e44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ed6a +0  220A0000
[3e4c0a48513ab6c] jit-backend-dump}
[3e4c0a48513daaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ed7c +0  260A0000
[3e4c0a48513e7b0] jit-backend-dump}
[3e4c0a48514173e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ed91 +0  2D0A0000
[3e4c0a485142454] jit-backend-dump}
[3e4c0a4851453a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ed9b +0  3F0A0000
[3e4c0a4851460a8] jit-backend-dump}
[3e4c0a485148ff3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eda5 +0  510A0000
[3e4c0a485149d0e] jit-backend-dump}
[3e4c0a48514ccb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1edb6 +0  5C0A0000
[3e4c0a48514d9c1] jit-backend-dump}
[3e4c0a48515093d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1edca +0  640A0000
[3e4c0a48515164c] jit-backend-dump}
[3e4c0a48515454a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1eddb +0  6F0A0000
[3e4c0a48515525a] jit-backend-dump}
[3e4c0a485158265] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ee09 +0  5D0A0000
[3e4c0a485158f96] jit-backend-dump}
[3e4c0a48515bef3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ee17 +0  6B0A0000
[3e4c0a48515cc27] jit-backend-dump}
[3e4c0a48515fb8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ee21 +0  7D0A0000
[3e4c0a48516088e] jit-backend-dump}
[3e4c0a4851637c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ee2b +0  8F0A0000
[3e4c0a4851644d2] jit-backend-dump}
[3e4c0a48516740b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ee57 +0  7F0A0000
[3e4c0a485168120] jit-backend-dump}
[3e4c0a48516b09c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ee6c +0  860A0000
[3e4c0a48516bdae] jit-backend-dump}
[3e4c0a48516eccb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1ee7c +0  920A0000
[3e4c0a48516f9db] jit-backend-dump}
[3e4c0a485172ca0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13cf9030 +0  2C580200
[3e4c0a485173993] jit-backend-dump}
[3e4c0a485177a10] jit-backend}
[3e4c0a48517b728] {jit-log-opt-bridge
# bridge out of Guard 0x2f64848 with 360 ops
[p0, i1, p2, f3, p4]
+710: guard_not_invalidated(descr=<Guard0x3244860>) [p0, i1, p2, f3, p4]
+710: p5 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+721: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x3242770>) [p0, i1, p2, f3, p4]
+730: p7 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+734: guard_nonnull_class(p7, ConstClass(W_Flonum), descr=<Guard0x32448c0>) [p0, i1, p2, f3, p4]
+754: f9 = getfield_gc_f(p7, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+760: f11 = float_sub(0.000000, f9)
debug_merge_point(0, 0, '(let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))')
debug_merge_point(0, 0, '(< AppRand16 AppRand17)')
+780: i12 = float_lt(f3, f11)
+785: guard_true(i12, descr=<Guard0x32427b8>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))')
debug_merge_point(0, 0, '(let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))))))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+791: p13 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+795: guard_nonnull_class(p13, ConstClass(W_Vector), descr=<Guard0x3244920>) [p0, i1, p2, f3, p4]
+815: i16 = int_ge(i1, 0)
+819: guard_true(i16, descr=<Guard0x3242800>) [p0, i1, p2, f3, p4]
+825: i17 = getfield_gc_i(p13, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+829: i18 = int_lt(i1, i17)
+832: guard_true(i18, descr=<Guard0x3242848>) [p0, i1, p2, f3, p4]
+838: p19 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+842: guard_class(p19, 16623792, descr=<Guard0x3242890>) [p0, i1, p2, f3, p4]
+855: p21 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+859: i22 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand18 0)')
+864: p23 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+868: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x3244980>) [p0, i1, p2, f3, p4]
+887: p25 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+887: i27 = int_ge(i22, 0)
+891: guard_true(i27, descr=<Guard0x32428d8>) [p0, i1, p2, f3, p4]
+897: i28 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+901: i29 = int_lt(i22, i28)
+904: guard_true(i29, descr=<Guard0x3242920>) [p0, i1, p2, f3, p4]
+910: p30 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+914: guard_class(p30, 16622984, descr=<Guard0x3242968>) [p0, i1, p2, f3, p4]
+927: p32 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+931: p33 = getarrayitem_gc_r(p32, i22, descr=<ArrayP 8>)
+936: guard_class(p33, ConstClass(W_Vector), descr=<Guard0x32429b0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+949: i35 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+953: i37 = int_lt(0, i35)
+957: guard_true(i37, descr=<Guard0x32429f8>) [p0, i1, p2, f3, p4]
+963: p38 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+967: guard_class(p38, 16612728, descr=<Guard0x3242a40>) [p0, i1, p2, f3, p4]
+981: p40 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+985: f42 = getarrayitem_gc_f(p40, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand19)')
+991: f44 = float_sub(0.000000, f42)
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1011: i45 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand21 CellRef(kp))')
+1016: p46 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+1020: p47 = getfield_gc_r(p46, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1024: guard_nonnull_class(p47, ConstClass(W_CellIntegerStrategy), descr=<Guard0x32449e0>) [p0, i1, p2, f3, p4]
+1042: i49 = getfield_gc_i(p47, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1046: i51 = int_ge(i45, 0)
+1050: guard_true(i51, descr=<Guard0x3242a88>) [p0, i1, p2, f3, p4]
+1056: i52 = int_lt(i45, i28)
+1059: guard_true(i52, descr=<Guard0x3242ad0>) [p0, i1, p2, f3, p4]
+1065: p53 = getarrayitem_gc_r(p32, i45, descr=<ArrayP 8>)
+1070: guard_class(p53, ConstClass(W_Vector), descr=<Guard0x3242b18>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1083: i56 = int_ge(i49, 0)
+1087: guard_true(i56, descr=<Guard0x3242b60>) [p0, i1, p2, f3, p4]
+1093: i57 = getfield_gc_i(p53, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1097: i58 = int_lt(i49, i57)
+1100: guard_true(i58, descr=<Guard0x3242ba8>) [p0, i1, p2, f3, p4]
+1106: p59 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1110: guard_class(p59, 16612728, descr=<Guard0x3242bf0>) [p0, i1, p2, f3, p4]
+1124: p61 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1128: f62 = getarrayitem_gc_f(p61, i49, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(/ AppRand20 AppRand22)')
+1135: i64 = float_eq(f62, 0.000000)
+1156: guard_false(i64, descr=<Guard0x3242c38>) [p0, i1, p2, f3, p4]
+1162: f65 = float_truediv(f44, f62)
debug_merge_point(0, 0, '(let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))')
debug_merge_point(0, 0, '(< q CellRef(q1))')
+1167: p66 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1171: p67 = getfield_gc_r(p66, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1175: guard_nonnull_class(p67, ConstClass(W_CellFloatStrategy), descr=<Guard0x3244a40>) [p0, i1, p2, f3, p4]
+1195: f69 = getfield_gc_f(p67, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1201: i70 = float_lt(f65, f69)
+1206: guard_true(i70, descr=<Guard0x3242c80>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))')
debug_merge_point(0, 0, '(let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1212: i71 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(set! ip SetBang4)')
+1217: p72 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_3 48 pure>)
+1221: p73 = getfield_gc_r(p72, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1225: guard_nonnull_class(p73, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3244aa0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(set! q1 q)')
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+1244: p75 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1255: setfield_gc(p73, i71, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1259: setfield_gc(p67, f65, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1265: guard_nonnull_class(p75, ConstClass(ForwardLink), descr=<Guard0x3244b00>) [p75, p0, p2, None, i1, None, None, None]
debug_merge_point(0, 0, '(+ i5080 1)')
+1284: i79 = int_add(i1, 1)
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+1289: p80 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+1293: guard_nonnull_class(p80, ConstClass(W_Fixnum), descr=<Guard0x3244b60>) [p75, p0, p2, None, i1, None, None, None]
+1312: i82 = getfield_gc_i(p80, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1316: i83 = int_eq(i79, i82)
+1319: guard_true(i83, descr=<Guard0x3242cc8>) [p75, p0, p2, None, i1, None, None, None]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(void)')
+1325: p84 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1336: guard_value(p84, ConstPtr(ptr85), descr=<Guard0x3242d10>) [p75, p0, p2, None, i1, None, None, None]
+1345: p86 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1349: p87 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)) from (void)')
+1353: guard_class(p86, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x3242d58>) [p75, p0, p2, None, i1, None, None, None]
+1367: p89 = getfield_gc_r(p86, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1371: i90 = arraylen_gc(p89, descr=<ArrayP 8>)
+1375: i92 = int_eq(20, i90)
+1379: guard_false(i92, descr=<Guard0x3242da0>) [p75, p0, p2, None, i1, None, None, None]
+1385: p93 = getfield_gc_r(p86, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1396: guard_value(p93, ConstPtr(ptr94), descr=<Guard0x3242de8>) [p75, p0, p2, None, i1, None, None, None]
+1405: p96 = getarrayitem_gc_pure_r(p89, 8, descr=<ArrayP 8>)
+1409: p97 = getfield_gc_r(p96, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1413: guard_nonnull_class(p97, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3244bc0>) [p75, p0, p2, None, i1, None, None, None]
+1431: i99 = getfield_gc_i(p97, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1435: i100 = int_is_zero(i99)
+1438: guard_false(i100, descr=<Guard0x3242e30>) [p75, p0, p2, None, i1, None, None, None]
debug_merge_point(0, 0, '(set! one? #t)')
+1444: p102 = getarrayitem_gc_pure_r(p89, 0, descr=<ArrayP 8>)
+1467: setfield_gc(p102, ConstPtr(ptr103), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1472: guard_class(p87, 16435208, descr=<Guard0x3244c20>) [p87, p86, None, None, None, None, None]
+1485: p105 = getfield_gc_r(p87, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1496: guard_value(p105, ConstPtr(ptr106), descr=<Guard0x3242e78>) [p87, p86, None, None, None, None, None]
+1505: p107 = getfield_gc_r(p87, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1509: p108 = getfield_gc_r(p87, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)) from (void)')
+1513: guard_class(p107, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x3242ec0>) [p87, p86, None, None, None, None, None]
+1526: p110 = getfield_gc_r(p107, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1530: i111 = arraylen_gc(p110, descr=<ArrayP 8>)
+1534: i113 = int_eq(20, i111)
+1538: guard_false(i113, descr=<Guard0x3242f08>) [p87, p86, None, None, None, None, None]
+1544: p114 = getfield_gc_r(p107, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1548: guard_value(p114, ConstPtr(ptr115), descr=<Guard0x3242f50>) [p87, p86, None, None, None, None, None]
+1557: p117 = getarrayitem_gc_pure_r(p110, 0, descr=<ArrayP 8>)
+1561: p118 = getfield_gc_r(p117, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1565: guard_nonnull_class(p118, ConstClass(W_Bool), descr=<Guard0x3244c80>) [p87, p86, None, None, None, None, None]
+1591: i121 = instance_ptr_eq(p118, ConstPtr(ptr120))
+1594: guard_false(i121, descr=<Guard0x3242f98>) [p87, p86, None, None, None, None, None]
debug_merge_point(0, 0, '(begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303))')
+1600: guard_class(p108, 16435208, descr=<Guard0x3242fe0>) [p87, p86, None, None, None, None, None]
+1614: p123 = getfield_gc_r(p108, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1619: guard_nonnull_class(p123, ConstClass(ForwardLink), descr=<Guard0x3244ce0>) [p87, p86, None, None, None, None, None]
debug_merge_point(0, 0, '(set! one? #f)')
debug_merge_point(0, 0, '(simp3 #t)')
+1638: p126 = getarrayitem_gc_pure_r(p110, 9, descr=<ArrayP 8>)
+1652: setfield_gc(p117, ConstPtr(ptr127), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1656: guard_nonnull_class(p126, 16479200, descr=<Guard0x3244d40>) [p107, p126, p108, p123, None, None, None, None, None]
+1676: p129 = getfield_gc_r(p126, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1687: guard_value(p129, ConstPtr(ptr130), descr=<Guard0x3243028>) [p107, p126, p108, p123, None, None, None, None, None]
+1696: p131 = getfield_gc_r(p107, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))))')
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) CellRef(kp))')
+1696: p132 = getfield_gc_r(p126, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1700: guard_nonnull_class(p132, ConstClass(W_Vector), descr=<Guard0x3244da0>) [p107, p126, p108, p123, None, None, None, None, None]
+1718: p134 = getfield_gc_r(p126, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1722: p135 = getfield_gc_r(p134, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1726: guard_nonnull_class(p135, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3244e00>) [p107, p126, p108, p123, None, None, None, None, None]
+1745: i137 = getfield_gc_i(p135, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1749: p138 = getfield_gc_r(p126, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1753: p139 = getfield_gc_r(p138, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1757: guard_nonnull_class(p139, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3244e60>) [p107, p126, p108, p123, None, None, None, None, None]
+1775: i141 = getfield_gc_i(p139, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1779: p142 = getfield_gc_r(p126, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1783: i144 = int_ge(i137, 0)
+1787: guard_true(i144, descr=<Guard0x3243070>) [p107, p126, p108, p123, None, None, None, None, None]
+1793: i145 = getfield_gc_i(p132, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1804: i146 = int_lt(i137, i145)
+1807: guard_true(i146, descr=<Guard0x32430b8>) [p107, p126, p108, p123, None, None, None, None, None]
+1813: p147 = getfield_gc_r(p132, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1817: guard_class(p147, 16622984, descr=<Guard0x3243100>) [p107, p126, p108, p123, None, None, None, None, None]
+1830: p149 = getfield_gc_r(p132, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1834: p150 = getarrayitem_gc_r(p149, i137, descr=<ArrayP 8>)
+1846: guard_class(p150, ConstClass(W_Vector), descr=<Guard0x3243148>) [p107, p126, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1858: i153 = int_ge(i141, 0)
+1862: guard_true(i153, descr=<Guard0x3243190>) [p107, p126, p108, p123, None, None, None, None, None]
+1868: i154 = getfield_gc_i(p150, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1879: i155 = int_lt(i141, i154)
+1882: guard_true(i155, descr=<Guard0x32431d8>) [p107, p126, p108, p123, None, None, None, None, None]
+1888: p156 = getfield_gc_r(p150, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1892: guard_class(p156, 16612728, descr=<Guard0x3243220>) [p107, p126, p108, p123, None, None, None, None, None]
+1904: p158 = getfield_gc_r(p150, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1908: f159 = getarrayitem_gc_f(p158, i141, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))')
debug_merge_point(0, 0, '(/ AppRand41)')
+1915: i161 = float_eq(f159, 0.000000)
+1936: guard_false(i161, descr=<Guard0x3243268>) [p107, p126, p108, p123, None, None, None, None, None]
+1942: f163 = float_truediv(1.000000, f159)
debug_merge_point(0, 0, '(let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))')
debug_merge_point(0, 0, '(lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))')
+1962: p164 = getfield_gc_r(p126, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1966: p165 = getfield_gc_r(p126, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1970: guard_class(p142, 16505296, descr=<Guard0x32432b0>) [p107, p126, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(doloop5167 0)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 0)')
debug_merge_point(0, 0, '(if one?5161 2 1)')
debug_merge_point(0, 0, '2')
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+1982: guard_nonnull_class(p165, ConstClass(W_Fixnum), descr=<Guard0x3244ec0>) [p107, p126, p108, p123, None, None, None, None, None]
+2000: i168 = getfield_gc_i(p165, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2011: i170 = int_add_ovf(i168, 2)
+2015: guard_no_overflow(descr=<Guard0x32432f8>) [p107, p126, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+2021: i172 = int_eq(0, i170)
+2025: guard_false(i172, descr=<Guard0x3243340>) [p107, p126, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+2031: i173 = int_eq(0, i137)
+2035: guard_false(i173, descr=<Guard0x3243388>) [p107, p126, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2041: p174 = getarrayitem_gc_r(p149, 0, descr=<ArrayP 8>)
+2045: guard_class(p174, ConstClass(W_Vector), descr=<Guard0x32433d0>) [p107, p126, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2058: i176 = getfield_gc_i(p174, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2069: i177 = int_lt(i141, i176)
+2072: guard_true(i177, descr=<Guard0x3243418>) [p107, p126, p108, p123, None, None, None, None, None]
+2078: p178 = getfield_gc_r(p174, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2082: guard_class(p178, 16612728, descr=<Guard0x3243460>) [p107, p126, p108, p123, None, None, None, None, None]
+2095: p180 = getfield_gc_r(p174, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2099: f181 = getarrayitem_gc_f(p180, i141, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+2106: f182 = float_mul(f163, f181)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+2116: setarrayitem_gc(p180, i141, f182, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+2123: guard_nonnull_class(p164, ConstClass(W_Fixnum), descr=<Guard0x3244f20>) [p164, p107, p126, f163, p165, p132, p134, p138, p142, p108, p123, None, None, None, None, None]
+2141: i184 = getfield_gc_i(p164, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2145: i186 = int_add_ovf(i184, 1)
+2149: guard_no_overflow(descr=<Guard0x32434a8>) [p164, p107, p126, f163, p165, p132, p134, p138, p142, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+2155: i188 = int_eq(0, i186)
+2159: guard_false(i188, descr=<Guard0x32434f0>) [p164, p107, p126, f163, p165, p132, p134, p138, p142, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+2165: i189 = int_eq(0, i141)
+2169: guard_false(i189, descr=<Guard0x3243538>) [p164, p107, p126, f163, p165, p132, p134, p138, p142, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2175: f190 = getarrayitem_gc_f(p180, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2181: p191 = getarrayitem_gc_r(p149, i137, descr=<ArrayP 8>)
+2207: guard_class(p191, ConstClass(W_Vector), descr=<Guard0x3243580>) [p164, p107, p126, f163, p165, p132, p134, p138, p142, p108, p123, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2219: i193 = getfield_gc_i(p191, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2230: i194 = int_lt(0, i193)
+2234: guard_true(i194, descr=<Guard0x32435c8>) [p164, p107, p126, f163, p165, p132, p134, p138, p142, p108, p123, None, None, None, None, None]
+2240: p195 = getfield_gc_r(p191, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2244: guard_class(p195, 16612728, descr=<Guard0x3243610>) [p164, p107, p126, f163, p165, p132, p134, p138, p142, p108, p123, None, None, None, None, None]
+2256: p197 = getfield_gc_r(p191, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2260: f198 = getarrayitem_gc_f(p197, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2266: f199 = getarrayitem_gc_f(p180, i141, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+2280: f200 = float_mul(f198, f199)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+2285: f201 = float_sub(f190, f200)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+2290: setarrayitem_gc(p180, 0, f201, descr=<ArrayF 8>)
+2296: p202 = new_with_vtable(descr=<SizeDescr 64>)
+2347: p203 = new_with_vtable(descr=<SizeDescr 40>)
+2358: p204 = new_with_vtable(descr=<SizeDescr 24>)
+2369: p205 = new_with_vtable(descr=<SizeDescr 80>)
+2387: setfield_gc(p205, p142, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2419: setfield_gc(p205, ConstPtr(ptr206), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2423: setfield_gc(p205, p164, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+2434: setfield_gc(p205, p138, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+2445: setfield_gc(p205, p134, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+2456: setfield_gc(p205, p165, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+2460: setfield_gc(p205, p132, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+2471: setfield_gc(p205, ConstPtr(ptr207), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+2475: p208 = new_with_vtable(descr=<SizeDescr 16>)
+2493: setfield_gc(p208, f163, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+2499: setfield_gc(p205, p208, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+2503: setfield_gc(p204, p205, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2507: setfield_gc(p204, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+2515: p209 = new_with_vtable(descr=<SizeDescr 40>)
+2526: setfield_gc(p209, p123, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2537: p210 = new_with_vtable(descr=<SizeDescr 24>)
+2555: p211 = new_with_vtable(descr=<SizeDescr 24>)
+2566: setfield_gc(p211, p126, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2570: setfield_gc(p211, ConstPtr(ptr212), descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2574: setfield_gc(p210, p211, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2578: setfield_gc(p210, f163, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+2584: setfield_gc(p209, p210, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2588: p213 = new_with_vtable(descr=<SizeDescr 40>)
+2599: setfield_gc(p213, p123, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2603: setfield_gc(p213, p107, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2607: setfield_gc(p213, p108, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2618: setfield_gc(p213, ConstPtr(ptr214), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2622: setfield_gc(p209, p213, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2633: setfield_gc(p209, ConstPtr(ptr215), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2637: i216 = arraylen_gc(p149, descr=<ArrayP 8>)
+2644: setfield_gc(p202, ConstPtr(ptr217), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2656: setfield_gc(p202, p142, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2661: setfield_gc(p203, p123, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2679: setfield_gc(p203, ConstPtr(ptr218), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2683: setfield_gc(p203, p204, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2687: setfield_gc(p203, p209, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2691: setfield_gc(p202, p132, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2696: setfield_gc(p202, p138, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2701: setfield_gc(p202, p164, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2720: setfield_gc(p202, ConstPtr(ptr219), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2725: setfield_gc(p202, p134, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2730: jump(p202, 1, p203, p123, p164, i186, p138, p139, i141, ConstPtr(ptr219), p132, p149, 0, p134, p135, i137, descr=TargetToken(47968112))
+2880: --end of the loop--
[3e4c0a48529cb03] jit-log-opt-bridge}
[3e4c0a485c2c179] {jit-backend
[3e4c0a485da3139] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1fe
[3e4c0a485db97ee] jit-backend-dump}
[3e4c0a485dc50a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d200b4 +0  2A000000
[3e4c0a485dc6597] jit-backend-dump}
[3e4c0a485dca4c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20915 +0  2A000000
[3e4c0a485dcb307] jit-backend-dump}
[3e4c0a485dce527] {jit-backend-addr
bridge out of Guard 0x30bacc8 has address 0x7f6e13d200b0 to 0x7f6e13d20910
       gc table: 0x7f6e13d1fe00
    jump target: 0x7f6e13d200b0
         resops: 0x7f6e13d200be
       failures: 0x7f6e13d20910
            end: 0x7f6e13d2114f
[3e4c0a485dd081d] jit-backend-addr}
[3e4c0a485dd3cd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d200d6 +0  BD080000
[3e4c0a485dd4b2e] jit-backend-dump}
[3e4c0a485dd7d32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d200ed +0  C2080000
[3e4c0a485dd8a07] jit-backend-dump}
[3e4c0a485ddba22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20112 +0  B9080000
[3e4c0a485ddc6e8] jit-backend-dump}
[3e4c0a485ddf749] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20129 +0  B8080000
[3e4c0a485de03fd] jit-backend-dump}
[3e4c0a485de33cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20133 +0  CA080000
[3e4c0a485de407f] jit-backend-dump}
[3e4c0a485de70e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20140 +0  D9080000
[3e4c0a485de7d87] jit-backend-dump}
[3e4c0a485dead96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20151 +0  E4080000
[3e4c0a485deba2e] jit-backend-dump}
[3e4c0a485dee9f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20171 +0  E0080000
[3e4c0a485def697] jit-backend-dump}
[3e4c0a485df267e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2017b +0  F2080000
[3e4c0a485df3310] jit-backend-dump}
[3e4c0a485df6331] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20188 +0  01090000
[3e4c0a485df6fcf] jit-backend-dump}
[3e4c0a485df9fb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20198 +0  0D090000
[3e4c0a485dfac51] jit-backend-dump}
[3e4c0a485dfdc07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d201ae +0  13090000
[3e4c0a485dfe89c] jit-backend-dump}
[3e4c0a485e018c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d201bc +0  21090000
[3e4c0a485e02561] jit-backend-dump}
[3e4c0a485e05582] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d201cd +0  2C090000
[3e4c0a485e06217] jit-backend-dump}
[3e4c0a485e091fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2020b +0  0A090000
[3e4c0a485e09e92] jit-backend-dump}
[3e4c0a485e0ce7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20219 +0  18090000
[3e4c0a485e0db24] jit-backend-dump}
[3e4c0a485e10aef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20222 +0  2B090000
[3e4c0a485e1178a] jit-backend-dump}
[3e4c0a485e1476b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20234 +0  35090000
[3e4c0a485e15406] jit-backend-dump}
[3e4c0a485e183e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2023e +0  47090000
[3e4c0a485e190bf] jit-backend-dump}
[3e4c0a485e1c11d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2024b +0  56090000
[3e4c0a485e1cdb5] jit-backend-dump}
[3e4c0a485e1fda2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2025c +0  61090000
[3e4c0a485e20a3d] jit-backend-dump}
[3e4c0a485e23a3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20282 +0  57090000
[3e4c0a485e246d4] jit-backend-dump}
[3e4c0a485e276e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d202a2 +0  53090000
[3e4c0a485e28384] jit-backend-dump}
[3e4c0a485e2b39c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d202b3 +0  5E090000
[3e4c0a485e2c04f] jit-backend-dump}
[3e4c0a485e2efe0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d202c4 +0  69090000
[3e4c0a485e2fcbf] jit-backend-dump}
[3e4c0a485e32c99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d202db +0  6E090000
[3e4c0a485e33931] jit-backend-dump}
[3e4c0a485e36927] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d202f7 +0  6E090000
[3e4c0a485e375d5] jit-backend-dump}
[3e4c0a485e3a5af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20304 +0  7D090000
[3e4c0a485e3b241] jit-backend-dump}
[3e4c0a485e3e222] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20318 +0  85090000
[3e4c0a485e3eebd] jit-backend-dump}
[3e4c0a485e41f3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2032d +0  8C090000
[3e4c0a485e42bd2] jit-backend-dump}
[3e4c0a485e45bd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2033f +0  96090000
[3e4c0a485e46866] jit-backend-dump}
[3e4c0a485e49884] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20353 +0  9E090000
[3e4c0a485e4a51f] jit-backend-dump}
[3e4c0a485e4d4ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2036d +0  A0090000
[3e4c0a485e4e17f] jit-backend-dump}
[3e4c0a485e51175] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2037a +0  AF090000
[3e4c0a485e51e04] jit-backend-dump}
[3e4c0a485e54e7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d203a1 +0  A4090000
[3e4c0a485e55b13] jit-backend-dump}
[3e4c0a485e58af0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d203b5 +0  AC090000
[3e4c0a485e59785] jit-backend-dump}
[3e4c0a485e5c757] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d203cb +0  B2090000
[3e4c0a485e5d3e2] jit-backend-dump}
[3e4c0a485e6044a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d203de +0  BB090000
[3e4c0a485e61134] jit-backend-dump}
[3e4c0a485e641f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d203ec +0  C9090000
[3e4c0a485e64ea2] jit-backend-dump}
[3e4c0a485e67e8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20406 +0  CB090000
[3e4c0a485e68b27] jit-backend-dump}
[3e4c0a485e6bad0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20416 +0  D7090000
[3e4c0a485e6c768] jit-backend-dump}
[3e4c0a485e6f72a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20423 +0  E6090000
[3e4c0a485e703b9] jit-backend-dump}
[3e4c0a485e733d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20439 +0  EC090000
[3e4c0a485e7406f] jit-backend-dump}
[3e4c0a485e77059] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2045f +0  E2090000
[3e4c0a485e77d00] jit-backend-dump}
[3e4c0a485e7acb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20473 +0  EA090000
[3e4c0a485e7b948] jit-backend-dump}
[3e4c0a485e7e932] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2048a +0  EF090000
[3e4c0a485e7f5c4] jit-backend-dump}
[3e4c0a485e82580] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d204a6 +0  EF090000
[3e4c0a485e8321b] jit-backend-dump}
[3e4c0a485e86220] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d204c4 +0  ED090000
[3e4c0a485e86eb5] jit-backend-dump}
[3e4c0a485e89e9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d204d6 +0  F7090000
[3e4c0a485e8ab2e] jit-backend-dump}
[3e4c0a485e8db12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d204ea +0  FF090000
[3e4c0a485e8e7d8] jit-backend-dump}
[3e4c0a485e917c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d204fa +0  0B0A0000
[3e4c0a485e92463] jit-backend-dump}
[3e4c0a485e95465] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20517 +0  0A0A0000
[3e4c0a485e960f7] jit-backend-dump}
[3e4c0a485e990b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20521 +0  1C0A0000
[3e4c0a485e99d45] jit-backend-dump}
[3e4c0a485e9cd72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20535 +0  240A0000
[3e4c0a485e9da0d] jit-backend-dump}
[3e4c0a485ea09d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20545 +0  300A0000
[3e4c0a485ea166d] jit-backend-dump}
[3e4c0a485ea463f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2056a +0  270A0000
[3e4c0a485ea52d7] jit-backend-dump}
[3e4c0a485ea8316] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20592 +0  1B0A0000
[3e4c0a485ea8fb4] jit-backend-dump}
[3e4c0a485eabfb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d205a5 +0  1E0A0000
[3e4c0a485eacc61] jit-backend-dump}
[3e4c0a485eafcc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d205ba +0  250A0000
[3e4c0a485eb0951] jit-backend-dump}
[3e4c0a485eb396f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d205c4 +0  370A0000
[3e4c0a485eb460a] jit-backend-dump}
[3e4c0a485eb75ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d205ce +0  490A0000
[3e4c0a485eb8280] jit-backend-dump}
[3e4c0a485ebb297] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d205e0 +0  530A0000
[3e4c0a485ebbf2f] jit-backend-dump}
[3e4c0a485ebef7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d205f4 +0  5B0A0000
[3e4c0a485ebfc19] jit-backend-dump}
[3e4c0a485ec2c59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20605 +0  660A0000
[3e4c0a485ec38ee] jit-backend-dump}
[3e4c0a485ec68e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20633 +0  540A0000
[3e4c0a485ec7576] jit-backend-dump}
[3e4c0a485eca556] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20641 +0  620A0000
[3e4c0a485ecb1fe] jit-backend-dump}
[3e4c0a485ece21f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2064b +0  740A0000
[3e4c0a485eceeb7] jit-backend-dump}
[3e4c0a485ed1f27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20655 +0  860A0000
[3e4c0a485ed2bbf] jit-backend-dump}
[3e4c0a485ed5ba3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20681 +0  760A0000
[3e4c0a485ed6872] jit-backend-dump}
[3e4c0a485ed9856] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d20696 +0  7D0A0000
[3e4c0a485eda4ee] jit-backend-dump}
[3e4c0a485edd4e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d206a6 +0  890A0000
[3e4c0a485ede17c] jit-backend-dump}
[3e4c0a485ee144a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d0d6d5 +0  D7290100
[3e4c0a485ee20ba] jit-backend-dump}
[3e4c0a485ee624d] jit-backend}
[3e4c0a485ee9e27] {jit-log-opt-bridge
# bridge out of Guard 0x30bacc8 with 356 ops
[p0, i1, p2, f3, p4]
+710: guard_not_invalidated(descr=<Guard0x3244f80>) [p0, i1, p2, f3, p4]
+710: p5 = getfield_gc_r(p2, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+721: guard_value(p5, ConstPtr(ptr6), descr=<Guard0x3243658>) [p0, i1, p2, f3, p4]
+730: p7 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_5 64 pure>)
+734: guard_nonnull_class(p7, ConstClass(W_Flonum), descr=<Guard0x3244fe0>) [p0, i1, p2, f3, p4]
+753: f9 = getfield_gc_f(p7, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+759: f11 = float_sub(0.000000, f9)
debug_merge_point(0, 0, '(let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void)))')
debug_merge_point(0, 0, '(< AppRand16 AppRand17)')
+779: i12 = float_lt(f3, f11)
+784: guard_true(i12, descr=<Guard0x32436a0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))')
debug_merge_point(0, 0, '(let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))))))))')
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+790: p13 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_8 88 pure>)
+794: guard_nonnull_class(p13, ConstClass(W_Vector), descr=<Guard0x3245040>) [p0, i1, p2, f3, p4]
+813: i16 = int_ge(i1, 0)
+817: guard_true(i16, descr=<Guard0x32436e8>) [p0, i1, p2, f3, p4]
+823: i17 = getfield_gc_i(p13, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+827: i18 = int_lt(i1, i17)
+830: guard_true(i18, descr=<Guard0x3243730>) [p0, i1, p2, f3, p4]
+836: p19 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+840: guard_class(p19, 16623792, descr=<Guard0x3243778>) [p0, i1, p2, f3, p4]
+853: p21 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+857: i22 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand18 0)')
+862: p23 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_7 80 pure>)
+866: guard_nonnull_class(p23, ConstClass(W_Vector), descr=<Guard0x32450a0>) [p0, i1, p2, f3, p4]
+885: p25 = getfield_gc_r(p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+885: i27 = int_ge(i22, 0)
+889: guard_true(i27, descr=<Guard0x32437c0>) [p0, i1, p2, f3, p4]
+895: i28 = getfield_gc_i(p23, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+899: i29 = int_lt(i22, i28)
+902: guard_true(i29, descr=<Guard0x3243808>) [p0, i1, p2, f3, p4]
+908: p30 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+912: guard_class(p30, 16622984, descr=<Guard0x3243850>) [p0, i1, p2, f3, p4]
+924: p32 = getfield_gc_r(p23, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+928: p33 = getarrayitem_gc_r(p32, i22, descr=<ArrayP 8>)
+933: guard_class(p33, ConstClass(W_Vector), descr=<Guard0x3243898>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+946: i35 = getfield_gc_i(p33, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+950: i37 = int_lt(0, i35)
+954: guard_true(i37, descr=<Guard0x32438e0>) [p0, i1, p2, f3, p4]
+960: p38 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+964: guard_class(p38, 16612728, descr=<Guard0x3243928>) [p0, i1, p2, f3, p4]
+977: p40 = getfield_gc_r(p33, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+981: f42 = getarrayitem_gc_f(p40, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand19)')
+987: f44 = float_sub(0.000000, f42)
debug_merge_point(0, 0, '(vector-ref l2 i5080)')
+1007: i45 = getarrayitem_gc_i(p21, i1, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand21 CellRef(kp))')
+1012: p46 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_2 40 pure>)
+1016: p47 = getfield_gc_r(p46, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1020: guard_nonnull_class(p47, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3245100>) [p0, i1, p2, f3, p4]
+1039: i49 = getfield_gc_i(p47, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1043: i51 = int_ge(i45, 0)
+1047: guard_true(i51, descr=<Guard0x3243970>) [p0, i1, p2, f3, p4]
+1053: i52 = int_lt(i45, i28)
+1056: guard_true(i52, descr=<Guard0x32439b8>) [p0, i1, p2, f3, p4]
+1062: p53 = getarrayitem_gc_r(p32, i45, descr=<ArrayP 8>)
+1067: guard_class(p53, ConstClass(W_Vector), descr=<Guard0x3243a00>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1080: i56 = int_ge(i49, 0)
+1084: guard_true(i56, descr=<Guard0x3243a48>) [p0, i1, p2, f3, p4]
+1090: i57 = getfield_gc_i(p53, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1094: i58 = int_lt(i49, i57)
+1097: guard_true(i58, descr=<Guard0x3243a90>) [p0, i1, p2, f3, p4]
+1103: p59 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1107: guard_class(p59, 16612728, descr=<Guard0x3243ad8>) [p0, i1, p2, f3, p4]
+1120: p61 = getfield_gc_r(p53, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1124: f62 = getarrayitem_gc_f(p61, i49, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(/ AppRand20 AppRand22)')
+1131: i64 = float_eq(f62, 0.000000)
+1152: guard_false(i64, descr=<Guard0x3243b20>) [p0, i1, p2, f3, p4]
+1158: f65 = float_truediv(f44, f62)
debug_merge_point(0, 0, '(let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))')
debug_merge_point(0, 0, '(< q CellRef(q1))')
+1163: p66 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_6 72 pure>)
+1167: p67 = getfield_gc_r(p66, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1171: guard_nonnull_class(p67, ConstClass(W_CellFloatStrategy), descr=<Guard0x3245160>) [p0, i1, p2, f3, p4]
+1190: f69 = getfield_gc_f(p67, descr=<FieldF pycket.values.W_CellFloatStrategy.inst_value 8>)
+1196: i70 = float_lt(f65, f69)
+1201: guard_false(i70, descr=<Guard0x3243b68>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))))')
debug_merge_point(0, 0, '(let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))')
debug_merge_point(0, 0, '(= q CellRef(q1))')
+1207: i71 = float_eq(f65, f69)
+1218: guard_false(i71, descr=<Guard0x3243bb0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))')
+1224: p72 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1228: guard_nonnull_class(p72, ConstClass(ForwardLink), descr=<Guard0x32451c0>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(+ i5080 1)')
+1247: i75 = int_add(i1, 1)
debug_merge_point(0, 0, '(doloop5078 AppRand40)')
debug_merge_point(0, 0, '(let ([if4 (= i5080 m)]) (if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))) from (doloop5078 AppRand40)')
debug_merge_point(0, 0, '(= i5080 m)')
+1252: p76 = getfield_gc_r(p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize9.inst__vals_4 56 pure>)
+1256: guard_nonnull_class(p76, ConstClass(W_Fixnum), descr=<Guard0x3245220>) [p0, i1, p2, f3, p4]
+1275: i78 = getfield_gc_i(p76, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1279: i79 = int_eq(i75, i78)
+1282: guard_true(i79, descr=<Guard0x3243bf8>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(if if4 (void) (begin (if CellRef(flag?) (let ([AppRand15 (vector-ref l2 i5080)]) (let ([AppRand16 (matrix-ref a5002 AppRand15 CellRef(kp))][AppRand17 (- *epsilon*)]) (let ([if5 (< AppRand16 AppRand17)]) (if if5 (let ([AppRand18 (vector-ref l2 i5080)]) (let ([AppRand19 (matrix-ref a5002 AppRand18 0)]) (let ([AppRand20 (- AppRand19)][AppRand21 (vector-ref l2 i5080)]) (let ([AppRand22 (matrix-ref a5002 AppRand21 CellRef(kp))]) (let ([q (/ AppRand20 AppRand22)]) (let ([if6 (< q CellRef(q1))]) (if if6 (let ([SetBang4 (vector-ref l2 i5080)]) (set! ip SetBang4) (set! q1 q)) (let ([if7 (= q CellRef(q1))]) (if if7 (let ([qp 0.0][q0 0.0]) (let ([loop (lambda (k5110) (let ([if8 (<= k5110 n)]) (if if8 (let ([AppRand23 (matrix-ref a5002 CellRef(ip) k5110)]) (let ([AppRand24 (- AppRand23)][AppRand25 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([SetBang5 (/ AppRand24 AppRand25)]) (set! qp SetBang5))) (let ([AppRand26 (vector-ref l2 i5080)]) (let ([AppRand27 (matrix-ref a5002 AppRand26 k5110)]) (let ([AppRand28 (- AppRand27)][AppRand29 (vector-ref l2 i5080)]) (let ([AppRand30 (matrix-ref a5002 AppRand29 CellRef(kp))]) (let ([SetBang6 (/ AppRand28 AppRand30)]) (set! q0 SetBang6)))))) (let ([if9 (= CellRef(q0) CellRef(qp))]) (if if9 (let ([AppRand31 (+ k5110 1)]) (loop AppRand31)) (void)))) (void))))]) (loop 1) (let ([if10 (< CellRef(q0) CellRef(qp))]) (if if10 (let ([SetBang7 (vector-ref l2 i5080)]) (set! ip SetBang7)) (void))))) (void)))))))))) (void))))) (let ([AppRand32 (vector-ref l2 i5080)]) (let ([AppRand33 (matrix-ref a5002 AppRand32 CellRef(kp))][AppRand34 (- *epsilon*)]) (let ([if11 (< AppRand33 AppRand34)]) (if if11 (let ([AppRand35 (vector-ref l2 i5080)]) (let ([AppRand36 (matrix-ref a5002 AppRand35 0)]) (let ([AppRand37 (- AppRand36)][AppRand38 (vector-ref l2 i5080)]) (let ([AppRand39 (matrix-ref a5002 AppRand38 CellRef(kp))]) (let ([SetBang8 (/ AppRand37 AppRand39)]) (set! q1 SetBang8))))) (let ([SetBang9 (vector-ref l2 i5080)]) (set! ip SetBang9)) (set! flag? #t)) (void)))))) (let ([AppRand40 (+ i5080 1)]) (doloop5078 AppRand40))))')
debug_merge_point(0, 0, '(void)')
+1288: p80 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1299: guard_value(p80, ConstPtr(ptr81), descr=<Guard0x3243c40>) [p0, i1, p2, f3, p4]
+1308: p82 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1312: p83 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if (zero? CellRef(ip)) (set! pass2? #f) (set! one? #t)) from (void)')
+1316: guard_class(p82, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x3243c88>) [p0, i1, p2, f3, p4]
+1329: p85 = getfield_gc_r(p82, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1333: i86 = arraylen_gc(p85, descr=<ArrayP 8>)
+1337: i88 = int_eq(20, i86)
+1341: guard_false(i88, descr=<Guard0x3243cd0>) [p0, i1, p2, f3, p4]
+1347: p89 = getfield_gc_r(p82, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1358: guard_value(p89, ConstPtr(ptr90), descr=<Guard0x3243d18>) [p0, i1, p2, f3, p4]
+1367: p92 = getarrayitem_gc_pure_r(p85, 8, descr=<ArrayP 8>)
+1371: p93 = getfield_gc_r(p92, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1375: guard_nonnull_class(p93, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3245280>) [p0, i1, p2, f3, p4]
+1393: i95 = getfield_gc_i(p93, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1397: i96 = int_is_zero(i95)
+1400: guard_false(i96, descr=<Guard0x3243d60>) [p0, i1, p2, f3, p4]
debug_merge_point(0, 0, '(set! one? #t)')
+1406: p98 = getarrayitem_gc_pure_r(p85, 0, descr=<ArrayP 8>)
+1428: setfield_gc(p98, ConstPtr(ptr99), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1432: guard_class(p83, 16435208, descr=<Guard0x32452e0>) [p83, p82, None, None, None, None, None]
+1445: p102 = getfield_gc_r(p83, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1456: guard_value(p102, ConstPtr(ptr103), descr=<Guard0x3243da8>) [p83, p82, None, None, None, None, None]
+1465: p104 = getfield_gc_r(p83, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1469: p105 = getfield_gc_r(p83, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if CellRef(one?) (begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303)) (void)) from (void)')
+1473: guard_class(p104, ConstClass(W_Closure1AsEnvArbitrary), descr=<Guard0x3243df0>) [p83, p82, None, None, None, None, None]
+1487: p107 = getfield_gc_r(p104, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvArbitrary.inst_vals 24 pure>)
+1492: i108 = arraylen_gc(p107, descr=<ArrayP 8>)
+1496: i110 = int_eq(20, i108)
+1500: guard_false(i110, descr=<Guard0x3243e38>) [p83, p82, None, None, None, None, None]
+1506: p111 = getfield_gc_r(p104, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1511: guard_value(p111, ConstPtr(ptr112), descr=<Guard0x3243e80>) [p83, p82, None, None, None, None, None]
+1520: p114 = getarrayitem_gc_pure_r(p107, 0, descr=<ArrayP 8>)
+1524: p115 = getfield_gc_r(p114, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1528: guard_nonnull_class(p115, ConstClass(W_Bool), descr=<Guard0x3245340>) [p83, p82, None, None, None, None, None]
+1553: i118 = instance_ptr_eq(p115, ConstPtr(ptr117))
+1556: guard_false(i118, descr=<Guard0x3243ec8>) [p83, p82, None, None, None, None, None]
debug_merge_point(0, 0, '(begin (set! one? #f) (simp3 #t) (let ([AppRand98 (- CellRef(ip) 1)]) (let ([AppRand99 (vector-ref iposv AppRand98)][AppRand100 (+ n m12 -1)]) (let ([if28 (>= AppRand99 AppRand100)]) (if if28 (let ([loop5380 (lambda (k5382) (let ([if29 (< k5382 CellRef(nl1))]) (let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))))]) (loop5380 0)) (let ([AppRand115 (- CellRef(ip) 1)]) (let ([AppRand116 (vector-ref iposv AppRand115)][AppRand117 (+ n m1)]) (let ([if33 (>= AppRand116 AppRand117)]) (let ([if34 (if if33 (let ([AppRand118 (- CellRef(ip) 1)]) (let ([AppRand119 (vector-ref iposv AppRand118)][AppRand120 (+ m1 n)]) (let ([AppRand121 (- AppRand119 AppRand120)]) (vector-ref l3 AppRand121)))) #f)]) (if if34 (let ([AppRand122 (- CellRef(ip) 1)]) (let ([AppRand123 (vector-ref iposv AppRand122)][AppRand124 (+ m1 n)]) (let ([AppRand125 (- AppRand123 AppRand124)]) (vector-set! l3 AppRand125 #f))) (let ([AppRand126 (+ m 1)][AppRand127 (+ m 1)]) (let ([AppRand128 (matrix-ref a5002 AppRand127 CellRef(kp))]) (let ([AppRand129 (+ AppRand128 1.0)]) (matrix-set! a5002 AppRand126 CellRef(kp) AppRand129)))) (let ([doloop5448 (lambda (i5450) (let ([AppRand130 (+ m 2)]) (let ([if35 (= i5450 AppRand130)]) (if if35 (void) (let ([AppRand131 (matrix-ref a5002 i5450 CellRef(kp))]) (let ([AppRand132 (- AppRand131)]) (matrix-set! a5002 i5450 CellRef(kp) AppRand132)) (let ([AppRand133 (+ i5450 1)]) (doloop5448 AppRand133)))))))]) (doloop5448 0))) (void)))))))))) (let ([AppRand134 (- CellRef(kp) 1)]) (let ([t (vector-ref izrov AppRand134)][AppRand135 (- CellRef(kp) 1)][AppRand136 (- CellRef(ip) 1)]) (let ([AppRand137 (vector-ref iposv AppRand136)]) (vector-set! izrov AppRand135 AppRand137)) (let ([AppRand138 (- CellRef(ip) 1)]) (vector-set! iposv AppRand138 t)))) (loop5303))')
+1562: guard_class(p105, 16435208, descr=<Guard0x3243f10>) [p83, p82, None, None, None, None, None]
+1575: p120 = getfield_gc_r(p105, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1579: guard_nonnull_class(p120, ConstClass(ForwardLink), descr=<Guard0x32453a0>) [p83, p82, None, None, None, None, None]
debug_merge_point(0, 0, '(set! one? #f)')
debug_merge_point(0, 0, '(simp3 #t)')
+1597: p123 = getarrayitem_gc_pure_r(p107, 9, descr=<ArrayP 8>)
+1612: setfield_gc(p114, ConstPtr(ptr124), descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1616: guard_nonnull_class(p123, 16479200, descr=<Guard0x3245400>) [p104, p123, p105, p120, None, None, None, None, None]
+1635: p126 = getfield_gc_r(p123, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1646: guard_value(p126, ConstPtr(ptr127), descr=<Guard0x3243f58>) [p104, p123, p105, p120, None, None, None, None, None]
+1655: p128 = getfield_gc_r(p104, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand41 (matrix-ref a5002 CellRef(ip) CellRef(kp))]) (let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))))')
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) CellRef(kp))')
+1655: p129 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+1659: guard_nonnull_class(p129, ConstClass(W_Vector), descr=<Guard0x3245460>) [p104, p123, p105, p120, None, None, None, None, None]
+1678: p131 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+1682: p132 = getfield_gc_r(p131, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1686: guard_nonnull_class(p132, ConstClass(W_CellIntegerStrategy), descr=<Guard0x32454c0>) [p104, p123, p105, p120, None, None, None, None, None]
+1706: i134 = getfield_gc_i(p132, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1710: p135 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+1714: p136 = getfield_gc_r(p135, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+1718: guard_nonnull_class(p136, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3245520>) [p104, p123, p105, p120, None, None, None, None, None]
+1736: i138 = getfield_gc_i(p136, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+1740: p139 = getfield_gc_r(p123, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+1744: i141 = int_ge(i134, 0)
+1748: guard_true(i141, descr=<Guard0x3243fa0>) [p104, p123, p105, p120, None, None, None, None, None]
+1754: i142 = getfield_gc_i(p129, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1765: i143 = int_lt(i134, i142)
+1768: guard_true(i143, descr=<Guard0x3268020>) [p104, p123, p105, p120, None, None, None, None, None]
+1774: p144 = getfield_gc_r(p129, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1778: guard_class(p144, 16622984, descr=<Guard0x3268068>) [p104, p123, p105, p120, None, None, None, None, None]
+1790: p146 = getfield_gc_r(p129, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1794: p147 = getarrayitem_gc_r(p146, i134, descr=<ArrayP 8>)
+1806: guard_class(p147, ConstClass(W_Vector), descr=<Guard0x32680b0>) [p104, p123, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+1819: i150 = int_ge(i138, 0)
+1823: guard_true(i150, descr=<Guard0x32680f8>) [p104, p123, p105, p120, None, None, None, None, None]
+1829: i151 = getfield_gc_i(p147, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+1840: i152 = int_lt(i138, i151)
+1843: guard_true(i152, descr=<Guard0x3268140>) [p104, p123, p105, p120, None, None, None, None, None]
+1849: p153 = getfield_gc_r(p147, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+1853: guard_class(p153, 16612728, descr=<Guard0x3268188>) [p104, p123, p105, p120, None, None, None, None, None]
+1865: p155 = getfield_gc_r(p147, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+1869: f156 = getarrayitem_gc_f(p155, i138, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([piv (/ AppRand41)]) (let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv)))')
debug_merge_point(0, 0, '(/ AppRand41)')
+1875: i158 = float_eq(f156, 0.000000)
+1896: guard_false(i158, descr=<Guard0x32681d0>) [p104, p123, p105, p120, None, None, None, None, None]
+1902: f160 = float_truediv(1.000000, f156)
debug_merge_point(0, 0, '(let ([doloop5167 (lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))]) (doloop5167 0) (let ([doloop5207 (lambda (kk5209) (let ([AppRand56 (+ n 1)]) (let ([if14 (= kk5209 AppRand56)]) (if if14 (void) (let ([AppRand57 (= kk5209 CellRef(kp))]) (if (not AppRand57) (let ([AppRand58 (- piv)][AppRand59 (matrix-ref a5002 CellRef(ip) kk5209)]) (let ([AppRand60 (* AppRand58 AppRand59)]) (matrix-set! a5002 CellRef(ip) kk5209 AppRand60))) (void)) (let ([AppRand61 (+ kk5209 1)]) (doloop5207 AppRand61)))))))]) (doloop5207 0)) (matrix-set! a5002 CellRef(ip) CellRef(kp) piv))')
debug_merge_point(0, 0, '(lambda (ii) (let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))))')
+1922: p161 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+1926: p162 = getfield_gc_r(p123, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+1930: guard_class(p139, 16505296, descr=<Guard0x3268218>) [p104, p123, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(doloop5167 0)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 0)')
debug_merge_point(0, 0, '(if one?5161 2 1)')
debug_merge_point(0, 0, '2')
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+1942: guard_nonnull_class(p162, ConstClass(W_Fixnum), descr=<Guard0x3245580>) [p104, p123, p105, p120, None, None, None, None, None]
+1961: i165 = getfield_gc_i(p162, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1972: i167 = int_add_ovf(i165, 2)
+1976: guard_no_overflow(descr=<Guard0x3268260>) [p104, p123, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+1982: i169 = int_eq(0, i167)
+1986: guard_false(i169, descr=<Guard0x32682a8>) [p104, p123, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+1992: i170 = int_eq(0, i134)
+1996: guard_false(i170, descr=<Guard0x32682f0>) [p104, p123, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2002: p171 = getarrayitem_gc_r(p146, 0, descr=<ArrayP 8>)
+2006: guard_class(p171, ConstClass(W_Vector), descr=<Guard0x3268338>) [p104, p123, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2020: i173 = getfield_gc_i(p171, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2031: i174 = int_lt(i138, i173)
+2034: guard_true(i174, descr=<Guard0x3268380>) [p104, p123, p105, p120, None, None, None, None, None]
+2040: p175 = getfield_gc_r(p171, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2044: guard_class(p175, 16612728, descr=<Guard0x32683c8>) [p104, p123, p105, p120, None, None, None, None, None]
+2057: p177 = getfield_gc_r(p171, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2061: f178 = getarrayitem_gc_f(p177, i138, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* piv AppRand45)')
+2068: f179 = float_mul(f160, f178)
debug_merge_point(0, 0, '(matrix-set! a5002 ii CellRef(kp) AppRand46)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+2078: setarrayitem_gc(p177, i138, f179, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))')
debug_merge_point(0, 0, '(doloop5182 0)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 0)')
debug_merge_point(0, 0, '(+ n 1)')
+2085: guard_nonnull_class(p161, ConstClass(W_Fixnum), descr=<Guard0x32455e0>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120, None, None, None, None, None]
+2103: i181 = getfield_gc_i(p161, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+2107: i183 = int_add_ovf(i181, 1)
+2111: guard_no_overflow(descr=<Guard0x3268410>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))')
debug_merge_point(0, 0, '(= kk AppRand47)')
+2117: i185 = int_eq(0, i183)
+2121: guard_false(i185, descr=<Guard0x3268458>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54))))')
debug_merge_point(0, 0, '(let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))')
debug_merge_point(0, 0, '(= kk CellRef(kp))')
+2127: i186 = int_eq(0, i138)
+2131: guard_false(i186, descr=<Guard0x32684a0>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void))')
debug_merge_point(0, 0, '(let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))))')
debug_merge_point(0, 0, '(matrix-ref a5002 ii kk)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2137: f187 = getarrayitem_gc_f(p177, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 CellRef(ip) kk) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+2143: p188 = getarrayitem_gc_r(p146, i134, descr=<ArrayP 8>)
+2169: guard_class(p188, ConstClass(W_Vector), descr=<Guard0x32684e8>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120, None, None, None, None, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2181: i190 = getfield_gc_i(p188, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+2192: i191 = int_lt(0, i190)
+2196: guard_true(i191, descr=<Guard0x3268530>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120, None, None, None, None, None]
+2202: p192 = getfield_gc_r(p188, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+2206: guard_class(p192, 16612728, descr=<Guard0x3268578>) [p161, p104, p123, f160, p162, p129, p131, p135, p139, p105, p120, None, None, None, None, None]
+2218: p194 = getfield_gc_r(p188, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+2222: f195 = getarrayitem_gc_f(p194, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(matrix-ref a5002 ii CellRef(kp)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+2227: f196 = getarrayitem_gc_f(p177, i138, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(* AppRand50 AppRand51)')
+2241: f197 = float_mul(f195, f196)
debug_merge_point(0, 0, '(let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53))')
debug_merge_point(0, 0, '(- AppRand49 AppRand52)')
+2246: f198 = float_sub(f187, f197)
debug_merge_point(0, 0, '(matrix-set! a5002 ii kk AppRand53)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ kk 1)')
debug_merge_point(0, 0, '(doloop5182 AppRand54)')
debug_merge_point(0, 0, '(let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))) from (doloop5182 AppRand54)')
+2251: setarrayitem_gc(p177, 0, f198, descr=<ArrayF 8>)
+2257: p199 = new_with_vtable(descr=<SizeDescr 64>)
+2308: p200 = new_with_vtable(descr=<SizeDescr 40>)
+2319: p201 = new_with_vtable(descr=<SizeDescr 24>)
+2330: p202 = new_with_vtable(descr=<SizeDescr 80>)
+2348: setfield_gc(p202, p139, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2380: setfield_gc(p202, ConstPtr(ptr203), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2384: setfield_gc(p202, p161, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_0 24 pure>)
+2395: setfield_gc(p202, p135, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_1 32 pure>)
+2406: setfield_gc(p202, p131, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+2417: setfield_gc(p202, p162, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+2421: setfield_gc(p202, p129, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_4 56 pure>)
+2432: setfield_gc(p202, ConstPtr(ptr204), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+2436: p205 = new_with_vtable(descr=<SizeDescr 16>)
+2454: setfield_gc(p205, f160, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+2460: setfield_gc(p202, p205, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_6 72 pure>)
+2464: setfield_gc(p201, p202, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2468: setfield_gc(p201, 0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+2476: p206 = new_with_vtable(descr=<SizeDescr 40>)
+2487: setfield_gc(p206, p120, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2498: p207 = new_with_vtable(descr=<SizeDescr 24>)
+2516: p208 = new_with_vtable(descr=<SizeDescr 24>)
+2528: setfield_gc(p208, p123, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2532: setfield_gc(p208, ConstPtr(ptr209), descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+2536: setfield_gc(p207, p208, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2540: setfield_gc(p207, f160, descr=<FieldF pycket.small_list.ConsEnvSize1Flo.inst_vals_flo_0 16 pure>)
+2546: setfield_gc(p206, p207, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2550: p210 = new_with_vtable(descr=<SizeDescr 40>)
+2561: setfield_gc(p210, p120, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2565: setfield_gc(p210, p104, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2569: setfield_gc(p210, p105, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2580: setfield_gc(p210, ConstPtr(ptr211), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2584: setfield_gc(p206, p210, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2595: setfield_gc(p206, ConstPtr(ptr212), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2599: i213 = arraylen_gc(p146, descr=<ArrayP 8>)
+2606: setfield_gc(p199, ConstPtr(ptr214), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+2617: setfield_gc(p199, p139, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+2621: setfield_gc(p200, p120, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+2639: setfield_gc(p200, ConstPtr(ptr215), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+2643: setfield_gc(p200, p201, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+2647: setfield_gc(p200, p206, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+2651: setfield_gc(p199, p129, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+2655: setfield_gc(p199, p135, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+2659: setfield_gc(p199, p161, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+2677: setfield_gc(p199, ConstPtr(ptr216), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+2681: setfield_gc(p199, p131, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+2685: jump(p199, 1, p200, p120, p161, i183, p135, p136, i138, ConstPtr(ptr216), p129, p146, 0, p131, p132, i134, descr=TargetToken(47968112))
+2832: --end of the loop--
[3e4c0a48600f064] jit-log-opt-bridge}
[3e4c0a4860b6bd4] {jit-backend
[3e4c0a4860cc729] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21180 +0  48817D48FFFFFF000F8C6200000048FF0425502A1D03488B0C25F091F900488D5118483B14251092F9000F876600000048891425F091F90048C701B01E01004C8951084C89411048898D300100004C89AD3801000049BB3006CF136E7F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BB6011D2136E7F00004C895D204D8D9B90A1FCFF41FFD3E978FFFFFF49BB7011D2136E7F00004C895D204D8D9B80A9FCFF41FFD3E985FFFFFF
[3e4c0a4860cf9fd] jit-backend-dump}
[3e4c0a4860d967a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21184 +0  28000000
[3e4c0a4860da8ea] jit-backend-dump}
[3e4c0a4860de406] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d211f5 +0  28000000
[3e4c0a4860df223] jit-backend-dump}
[3e4c0a4860e246d] {jit-backend-addr
bridge out of Guard 0x315a6e0 has address 0x7f6e13d21180 to 0x7f6e13d211f0
       gc table: 0x7f6e13d21180
    jump target: 0x7f6e13d21180
         resops: 0x7f6e13d2118e
       failures: 0x7f6e13d211f0
            end: 0x7f6e13d21233
[3e4c0a4860e47f0] jit-backend-addr}
[3e4c0a4860e7ba4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d1028f +0  ED0E0100
[3e4c0a4860e894f] jit-backend-dump}
[3e4c0a4860ec75b] jit-backend}
[3e4c0a4860f0180] {jit-log-opt-bridge
# bridge out of Guard 0x315a6e0 with 5 ops
[p0, i1, p2]
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+22: p3 = new_with_vtable(descr=<SizeDescr 24>)
+63: setfield_gc(p3, p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+67: setfield_gc(p3, i1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+71: jump(p3, p0, descr=TargetToken(48737040))
+112: --end of the loop--
[3e4c0a4860f89f0] jit-log-opt-bridge}
[3e4c0a4861195b1] {jit-backend
[3e4c0a48612d7ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21270 +0  48817D48FFFFFF000F8C6200000048FF0425004F1D03488B0C25F091F900488D5118483B14251092F9000F876600000048891425F091F90048C701B01E01004C8951084C89411048898D300100004C89AD3801000049BB3006CF136E7F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BB4812D2136E7F00004C895D204D8D9BA8A0FCFF41FFD3E978FFFFFF49BB5812D2136E7F00004C895D204D8D9B98A8FCFF41FFD3E985FFFFFF
[3e4c0a486130461] jit-backend-dump}
[3e4c0a486138d8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21274 +0  28000000
[3e4c0a486139fc2] jit-backend-dump}
[3e4c0a48613d736] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d212e5 +0  28000000
[3e4c0a48613e4b6] jit-backend-dump}
[3e4c0a486141723] {jit-backend-addr
bridge out of Guard 0x315ab00 has address 0x7f6e13d21270 to 0x7f6e13d212e0
       gc table: 0x7f6e13d21270
    jump target: 0x7f6e13d21270
         resops: 0x7f6e13d2127e
       failures: 0x7f6e13d212e0
            end: 0x7f6e13d21323
[3e4c0a486143796] jit-backend-addr}
[3e4c0a486146cad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d108cf +0  9D090100
[3e4c0a486147a24] jit-backend-dump}
[3e4c0a48614b846] jit-backend}
[3e4c0a48614f239] {jit-log-opt-bridge
# bridge out of Guard 0x315ab00 with 5 ops
[p0, i1, p2]
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+22: p3 = new_with_vtable(descr=<SizeDescr 24>)
+63: setfield_gc(p3, p2, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+67: setfield_gc(p3, i1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+71: jump(p3, p0, descr=TargetToken(48737040))
+112: --end of the loop--
[3e4c0a486157222] jit-log-opt-bridge}
[3e4c0a4867cb304] {jit-backend
[3e4c0a486877ebc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a486883d35] jit-backend-dump}
[3e4c0a48688f148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21674 +0  2A000000
[3e4c0a4868905b4] jit-backend-dump}
[3e4c0a486894695] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d219e5 +0  2A000000
[3e4c0a486895597] jit-backend-dump}
[3e4c0a486898a4c] {jit-backend-addr
bridge out of Guard 0x3185f58 has address 0x7f6e13d21670 to 0x7f6e13d219e0
       gc table: 0x7f6e13d21560
    jump target: 0x7f6e13d21670
         resops: 0x7f6e13d2167e
       failures: 0x7f6e13d219e0
            end: 0x7f6e13d21d83
[3e4c0a48689b085] jit-backend-addr}
[3e4c0a48689eaf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2169d +0  A2030000
[3e4c0a48689f934] jit-backend-dump}
[3e4c0a4868a2d92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d216b8 +0  A3030000
[3e4c0a4868a3afa] jit-backend-dump}
[3e4c0a4868a6dd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d216c5 +0  B2030000
[3e4c0a4868a7aea] jit-backend-dump}
[3e4c0a4868aac18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d216e3 +0  B0030000
[3e4c0a4868ab8f4] jit-backend-dump}
[3e4c0a4868aeb4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d216fa +0  B5030000
[3e4c0a4868af82c] jit-backend-dump}
[3e4c0a4868b292c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21704 +0  C7030000
[3e4c0a4868b3607] jit-backend-dump}
[3e4c0a4868b696e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21711 +0  D6030000
[3e4c0a4868b76b2] jit-backend-dump}
[3e4c0a4868ba897] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21721 +0  E2030000
[3e4c0a4868bb57f] jit-backend-dump}
[3e4c0a4868be698] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21749 +0  D6030000
[3e4c0a4868bf379] jit-backend-dump}
[3e4c0a4868c2476] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2175d +0  DE030000
[3e4c0a4868c315b] jit-backend-dump}
[3e4c0a4868c62d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21772 +0  E5030000
[3e4c0a4868c6fb4] jit-backend-dump}
[3e4c0a4868ca110] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21780 +0  F3030000
[3e4c0a4868cadee] jit-backend-dump}
[3e4c0a4868cdf50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21789 +0  06040000
[3e4c0a4868cec2e] jit-backend-dump}
[3e4c0a4868d1da0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21796 +0  15040000
[3e4c0a4868d2aa0] jit-backend-dump}
[3e4c0a4868d5c48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d217ba +0  0D040000
[3e4c0a4868d692a] jit-backend-dump}
[3e4c0a4868d9a83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d217d0 +0  13040000
[3e4c0a4868da75e] jit-backend-dump}
[3e4c0a4868dd8c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d217e1 +0  1E040000
[3e4c0a4868de5a8] jit-backend-dump}
[3e4c0a4868e1716] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d217f9 +0  22040000
[3e4c0a4868e23f7] jit-backend-dump}
[3e4c0a4868e552f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21807 +0  30040000
[3e4c0a4868e6241] jit-backend-dump}
[3e4c0a4868e9344] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2181c +0  37040000
[3e4c0a4868ea02c] jit-backend-dump}
[3e4c0a4868ed148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21835 +0  3A040000
[3e4c0a4868ede2f] jit-backend-dump}
[3e4c0a4868f0f4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21852 +0  39040000
[3e4c0a4868f1c32] jit-backend-dump}
[3e4c0a4868f4daa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2185c +0  4B040000
[3e4c0a4868f5a8b] jit-backend-dump}
[3e4c0a4868f8b95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21870 +0  53040000
[3e4c0a4868f9873] jit-backend-dump}
[3e4c0a4868fc98f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21882 +0  5D040000
[3e4c0a4868fd670] jit-backend-dump}
[3e4c0a48690079b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d218af +0  4C040000
[3e4c0a486901486] jit-backend-dump}
[3e4c0a4869045a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d218c0 +0  51040000
[3e4c0a486905280] jit-backend-dump}
[3e4c0a486908419] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d218ce +0  59040000
[3e4c0a486909101] jit-backend-dump}
[3e4c0a48690c254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d218ee +0  4F040000
[3e4c0a48690cf57] jit-backend-dump}
[3e4c0a48691005a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d218fb +0  58040000
[3e4c0a486910d32] jit-backend-dump}
[3e4c0a486913e66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2190d +0  5C040000
[3e4c0a486914b51] jit-backend-dump}
[3e4c0a486917eef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d16254 +0  18B40000
[3e4c0a486918bbb] jit-backend-dump}
[3e4c0a48691ca7f] jit-backend}
[3e4c0a48692078e] {jit-log-opt-bridge
# bridge out of Guard 0x3185f58 with 166 ops
[i0, p1, p2, p3]
+294: guard_not_invalidated(descr=<Guard0x3245640>) [i0, p1, p2, p3]
+294: p4 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+312: guard_value(p4, ConstPtr(ptr5), descr=<Guard0x32685c0>) [i0, p1, p2, p3]
+321: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+325: p7 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+329: guard_nonnull_class(p7, ConstClass(W_CellIntegerStrategy), descr=<Guard0x32456a0>) [i0, p1, p2, p3]
+348: i9 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+352: i10 = int_lt(i0, i9)
+355: guard_true(i10, descr=<Guard0x3268608>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([if30 (if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)]) (if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))))')
+361: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+372: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x3245700>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if if29 (let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))) #f)')
debug_merge_point(0, 0, '(let ([AppRand101 (vector-ref l1 k5382)]) (let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102)))')
debug_merge_point(0, 0, '(vector-ref l1 k5382)')
+391: p13 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+395: guard_nonnull_class(p13, ConstClass(W_Vector), descr=<Guard0x3245760>) [i0, p1, p2, p3]
+414: i16 = int_ge(i0, 0)
+418: guard_true(i16, descr=<Guard0x3268650>) [i0, p1, p2, p3]
+424: i17 = getfield_gc_i(p13, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+428: i18 = int_lt(i0, i17)
+431: guard_true(i18, descr=<Guard0x3268698>) [i0, p1, p2, p3]
+437: p19 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+441: guard_class(p19, 16623792, descr=<Guard0x32686e0>) [i0, p1, p2, p3]
+453: p21 = getfield_gc_r(p13, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+457: i22 = getarrayitem_gc_i(p21, i0, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand102 (= CellRef(kp) AppRand101)]) (not AppRand102))')
+462: p23 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(= CellRef(kp) AppRand101)')
+466: p24 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+470: p25 = getfield_gc_r(p24, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+474: guard_nonnull_class(p25, ConstClass(W_CellIntegerStrategy), descr=<Guard0x32457c0>) [i0, p1, p2, p3]
+493: i27 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+504: i28 = int_eq(i27, i22)
+507: guard_true(i28, descr=<Guard0x3268728>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(not AppRand102)')
debug_merge_point(0, 0, '(if if30 (let ([AppRand103 (+ k5382 1)]) (loop5380 AppRand103)) (let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0))))')
debug_merge_point(0, 0, '(let ([SetBang10 (- CellRef(nl1) 1)]) (set! nl1 SetBang10) (let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382)) (let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) (let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)))')
debug_merge_point(0, 0, '(- CellRef(nl1) 1)')
+513: i30 = int_sub(i9, 1)
debug_merge_point(0, 0, '(set! nl1 SetBang10)')
debug_merge_point(0, 0, '(let ([k5382 k5382][doloop5393 (lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))]) (doloop5393 k5382))')
debug_merge_point(0, 0, 'k5382')
debug_merge_point(0, 0, '(lambda (is) (let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))))')
+518: setfield_gc(p7, i30, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+522: guard_class(p23, 16505296, descr=<Guard0x3245820>) [p1, p23, p13, p6, p11, i0, None, p2, None]
+534: guard_class(p6, ConstClass(W_Cell), descr=<Guard0x3268770>) [p1, p23, p13, p6, p11, i0, None, p2, None]
debug_merge_point(0, 0, '(doloop5393 k5382)')
debug_merge_point(0, 0, '(let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))) from (doloop5393 k5382)')
debug_merge_point(0, 0, '(>= is CellRef(nl1))')
+548: i34 = int_ge(i0, i30)
+551: guard_false(i34, descr=<Guard0x32687b8>) [p1, p23, p13, p6, p11, i0, None, p2, None]
debug_merge_point(0, 0, '(if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))')
debug_merge_point(0, 0, '(let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106)))')
debug_merge_point(0, 0, '(+ is 1)')
+557: i36 = int_add(i0, 1)
debug_merge_point(0, 0, '(let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105))')
debug_merge_point(0, 0, '(vector-ref l1 AppRand104)')
+561: i37 = int_lt(i36, i17)
+564: guard_true(i37, descr=<Guard0x3268800>) [p1, p23, p13, p6, p11, i0, None, p2, None]
+570: i38 = getarrayitem_gc_i(p21, i36, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(vector-set! l1 is AppRand105)')
+575: setarrayitem_gc(p21, i0, i38, descr=<ArrayS 8>)
debug_merge_point(0, 0, '(let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))')
debug_merge_point(0, 0, '(+ is 1)')
debug_merge_point(0, 0, '(doloop5393 AppRand106)')
debug_merge_point(0, 0, '(let ([if31 (>= is CellRef(nl1))]) (if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))) from (doloop5393 AppRand106)')
debug_merge_point(0, 0, '(>= is CellRef(nl1))')
+585: i39 = int_ge(i36, i30)
guard_true(i39, descr=<Guard0x3245880>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
debug_merge_point(0, 0, '(if if31 (void) (let ([AppRand104 (+ is 1)]) (let ([AppRand105 (vector-ref l1 AppRand104)]) (vector-set! l1 is AppRand105)) (let ([AppRand106 (+ is 1)]) (doloop5393 AppRand106))))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand107 (+ m 1)][AppRand108 (+ m 1)]) (let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))) from (void)')
debug_merge_point(0, 0, '(+ m 1)')
+606: p40 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+610: guard_nonnull_class(p40, ConstClass(W_Fixnum), descr=<Guard0x32458e0>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+628: i42 = getfield_gc_i(p40, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+632: i44 = int_add_ovf(i42, 1)
+639: guard_no_overflow(descr=<Guard0x3268848>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
debug_merge_point(0, 0, '(+ m 1)')
debug_merge_point(0, 0, '(let ([AppRand109 (matrix-ref a5002 AppRand108 CellRef(kp))]) (let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)))')
debug_merge_point(0, 0, '(matrix-ref a5002 AppRand108 CellRef(kp))')
+645: p45 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+649: guard_nonnull_class(p45, ConstClass(W_Vector), descr=<Guard0x3245940>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+669: i47 = getfield_gc_i(p25, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+673: i49 = int_ge(i44, 0)
+677: guard_true(i49, descr=<Guard0x3268890>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+683: i50 = getfield_gc_i(p45, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+695: i51 = int_lt(i44, i50)
+698: guard_true(i51, descr=<Guard0x32688d8>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+704: p52 = getfield_gc_r(p45, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+716: guard_class(p52, 16622984, descr=<Guard0x3268920>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+729: p54 = getfield_gc_r(p45, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+734: p55 = getarrayitem_gc_r(p54, i44, descr=<ArrayP 8>)
+746: guard_class(p55, ConstClass(W_Vector), descr=<Guard0x3268968>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+758: i58 = int_ge(i47, 0)
+762: guard_true(i58, descr=<Guard0x32689b0>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+768: i59 = getfield_gc_i(p55, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+779: i60 = int_lt(i47, i59)
+782: guard_true(i60, descr=<Guard0x32689f8>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+788: p61 = getfield_gc_r(p55, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+792: guard_class(p61, 16612728, descr=<Guard0x3268a40>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+806: p63 = getfield_gc_r(p55, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+810: f64 = getarrayitem_gc_f(p63, i47, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand110 (+ AppRand109 1.0)]) (matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(+ AppRand109 1.0)')
+817: f66 = float_add(f64, 1.000000)
debug_merge_point(0, 0, '(matrix-set! a5002 AppRand107 CellRef(kp) AppRand110)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
+832: p67 = getarrayitem_gc_r(p54, i44, descr=<ArrayP 8>)
+837: guard_class(p67, ConstClass(W_Vector), descr=<Guard0x3268a88>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+851: p69 = getfield_gc_r(p67, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+856: guard_class(p69, 16612728, descr=<Guard0x3268ad0>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+868: i71 = getfield_gc_i(p67, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+873: i72 = int_lt(i47, i71)
+876: guard_true(i72, descr=<Guard0x3268b18>) [i39, p23, i36, p13, p6, p11, None, p1, p2, None]
+882: p73 = getfield_gc_r(p67, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+887: setarrayitem_gc(p73, i47, f66, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([doloop5412 (lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))]) (doloop5412 0)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(lambda (i5414) (let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))))')
debug_merge_point(0, 0, '(doloop5412 0)')
debug_merge_point(0, 0, '(let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))) from (doloop5412 0)')
debug_merge_point(0, 0, '(+ m 2)')
+894: i75 = int_add(i42, 2)
debug_merge_point(0, 0, '(let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))')
debug_merge_point(0, 0, '(= i5414 AppRand111)')
debug_merge_point(0, 0, '(if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114))))')
debug_merge_point(0, 0, '(let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))')
debug_merge_point(0, 0, '(matrix-ref a5002 i5414 CellRef(kp))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref a4984 i)]) (vector-ref AppRand1 j))')
debug_merge_point(0, 0, '(vector-ref a4984 i)')
+898: p77 = getarrayitem_gc_r(p54, 0, descr=<ArrayP 8>)
+902: guard_class(p77, ConstClass(W_Vector), descr=<Guard0x32459a0>) [p77, p40, p24, i47, p45, p23, None, None, None, p11, None, None, p2, None]
debug_merge_point(0, 0, '(vector-ref AppRand1 j)')
+914: i79 = getfield_gc_i(p77, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+918: i80 = int_lt(i47, i79)
+921: guard_true(i80, descr=<Guard0x3268b60>) [p77, p40, p24, i47, p45, p23, None, None, None, p11, None, None, p2, None]
+927: p81 = getfield_gc_r(p77, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+931: guard_class(p81, 16612728, descr=<Guard0x3268ba8>) [p77, p40, p24, i47, p45, p23, None, None, None, p11, None, None, p2, None]
+945: p83 = getfield_gc_r(p77, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+949: f84 = getarrayitem_gc_f(p83, i47, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) from (vector-ref AppRand1 j)')
debug_merge_point(0, 0, '(- AppRand112)')
+956: f86 = float_sub(0.000000, f84)
debug_merge_point(0, 0, '(matrix-set! a5002 i5414 CellRef(kp) AppRand113)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref a4991 i4993)]) (vector-set! AppRand2 j4995 x))')
debug_merge_point(0, 0, '(vector-ref a4991 i4993)')
debug_merge_point(0, 0, '(vector-set! AppRand2 j4995 x)')
+967: setarrayitem_gc(p83, i47, f86, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)) from (vector-set! AppRand2 j4995 x)')
debug_merge_point(0, 0, '(+ i5414 1)')
debug_merge_point(0, 0, '(doloop5412 AppRand114)')
debug_merge_point(0, 0, '(let ([AppRand111 (+ m 2)]) (let ([if32 (= i5414 AppRand111)]) (if if32 (void) (let ([AppRand112 (matrix-ref a5002 i5414 CellRef(kp))]) (let ([AppRand113 (- AppRand112)]) (matrix-set! a5002 i5414 CellRef(kp) AppRand113)) (let ([AppRand114 (+ i5414 1)]) (doloop5412 AppRand114)))))) from (doloop5412 AppRand114)')
+974: p87 = new_with_vtable(descr=<SizeDescr 48>)
+1018: i88 = arraylen_gc(p54, descr=<ArrayP 8>)
+1025: setfield_gc(p87, ConstPtr(ptr89), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1029: setfield_gc(p87, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1033: setfield_gc(p87, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+1044: setfield_gc(p87, p40, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+1055: setfield_gc(p87, p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+1066: jump(p87, 1, p2, p11, p40, i75, p24, p25, p45, i50, p54, i47, descr=TargetToken(49644512))
+1152: --end of the loop--
[3e4c0a4869a4298] jit-log-opt-bridge}
[3e4c0a486a098c3] {jit-backend
[3e4c0a486a1e581] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21dc0 +0  48817D48FFFFFF000F8C6200000048FF042530291D03488B0C25F091F900488D5118483B14251092F9000F876600000048891425F091F90048C701B01E01004C89690848C741100100000048898D300100004C89BD3801000049BB20BCCF136E7F000041FFE3662E0F1F84000000000048C7442408FFFFFF0049BB981DD2136E7F00004C895D204D8D9B5895FCFF41FFD3E978FFFFFF49BBA81DD2136E7F00004C895D204D8D9B489DFCFF41FFD3E985FFFFFF
[3e4c0a486a217cc] jit-backend-dump}
[3e4c0a486a2ae34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21dc4 +0  36000000
[3e4c0a486a2bfce] jit-backend-dump}
[3e4c0a486a2f9ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21e35 +0  36000000
[3e4c0a486a307d7] jit-backend-dump}
[3e4c0a486a33a2b] {jit-backend-addr
bridge out of Guard 0x3189be0 has address 0x7f6e13d21dc0 to 0x7f6e13d21e30
       gc table: 0x7f6e13d21dc0
    jump target: 0x7f6e13d21dc0
         resops: 0x7f6e13d21dce
       failures: 0x7f6e13d21e30
            end: 0x7f6e13d21e73
[3e4c0a486a35b87] jit-backend-addr}
[3e4c0a486a391a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d17ab7 +0  05A30000
[3e4c0a486a39f96] jit-backend-dump}
[3e4c0a486a3de4b] jit-backend}
[3e4c0a486a41958] {jit-log-opt-bridge
# bridge out of Guard 0x3189be0 with 5 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if15 (= k5231 n)]) (if if15 (void) (let ([AppRand62 (+ k5231 1)]) (vector-set! l1 k5231 AppRand62) (vector-set! izrov k5231 k5231) (let ([AppRand63 (+ k5231 1)]) (doloop5229 AppRand63))))) from (doloop5229 AppRand63)')
+22: p2 = new_with_vtable(descr=<SizeDescr 24>)
+63: setfield_gc(p2, p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+67: setfield_gc(p2, 1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+75: jump(p2, p0, descr=TargetToken(49644272))
+112: --end of the loop--
[3e4c0a486a49678] jit-log-opt-bridge}
[3e4c0a486b27ae3] {jit-backend
[3e4c0a486b5f961] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d21f
[3e4c0a486b66b36] jit-backend-dump}
[3e4c0a486b707c9] {jit-backend-addr
Loop 71 ((let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)) has address 0x7f6e13d2207d to 0x7f6e13d221c0 (bootstrap 0x7f6e13d21ff0)
       gc table: 0x7f6e13d21f70
       function: 0x7f6e13d21ff0
         resops: 0x7f6e13d2207d
       failures: 0x7f6e13d221c0
            end: 0x7f6e13d2235a
[3e4c0a486b73537] jit-backend-addr}
[3e4c0a486b77561] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22094 +0  3A010000
[3e4c0a486b78655] jit-backend-dump}
[3e4c0a486b7b9ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d220ab +0  3F010000
[3e4c0a486b7c774] jit-backend-dump}
[3e4c0a486b7f9c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d220c1 +0  45010000
[3e4c0a486b80742] jit-backend-dump}
[3e4c0a486b83ae9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d220cf +0  6F010000
[3e4c0a486b84848] jit-backend-dump}
[3e4c0a486b87a74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d220db +0  7F010000
[3e4c0a486b8875c] jit-backend-dump}
[3e4c0a486b8b893] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d220ef +0  87010000
[3e4c0a486b8c571] jit-backend-dump}
[3e4c0a486b8f65c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d220fc +0  96010000
[3e4c0a486b90337] jit-backend-dump}
[3e4c0a486b9346c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2210c +0  A2010000
[3e4c0a486b94141] jit-backend-dump}
[3e4c0a486b972e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22122 +0  A8010000
[3e4c0a486b97fbb] jit-backend-dump}
[3e4c0a486b9b069] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22130 +0  B6010000
[3e4c0a486b9bd54] jit-backend-dump}
[3e4c0a486b9ee1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2213d +0  C5010000
[3e4c0a486b9faf2] jit-backend-dump}
[3e4c0a486ba2ba3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22159 +0  C5010000
[3e4c0a486ba38a3] jit-backend-dump}
[3e4c0a486ba6919] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22170 +0  CA010000
[3e4c0a486ba75fb] jit-backend-dump}
[3e4c0a486bab044] jit-backend}
[3e4c0a486baebb8] {jit-log-opt-loop
# Loop 71 ((let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)) : entry bridge with 32 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)')
+277: guard_class(p0, 16504944, descr=<Guard0x3245a00>) [p1, p0]
+296: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+300: guard_class(p1, 16435208, descr=<Guard0x3268bf0>) [p1, p0]
+319: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+323: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x3245a60>) [p1, p0]
debug_merge_point(0, 0, '(+ ii 1)')
+341: guard_not_invalidated(descr=<Guard0x3268c38>) [p1, p0]
+341: i7 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+345: i9 = int_add_ovf(i7, 1)
+349: guard_no_overflow(descr=<Guard0x3268c80>) [p1, p0]
debug_merge_point(0, 0, '(doloop5167 AppRand55)')
+355: guard_class(p3, 16479952, descr=<Guard0x3268cc8>) [p1, p0]
+367: p11 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+378: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3268d10>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+387: p13 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+391: guard_nonnull(p13, descr=<Guard0x3245ac0>) [p1, i9, p3]
+407: i15 = instance_ptr_eq(p13, ConstPtr(ptr14))
+410: guard_false(i15, descr=<Guard0x3245b20>) [p1, i9, p3]
+416: p16 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+420: guard_nonnull_class(p16, ConstClass(W_Fixnum), descr=<Guard0x3245b80>) [p1, i9, p3]
+438: i18 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+442: i20 = int_add_ovf(i18, 2)
+446: guard_no_overflow(descr=<Guard0x3245be0>) [p1, i9, p3]
+452: p21 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+456: guard_nonnull(p21, descr=<Guard0x3245c40>) [p1, i9, p3]
+465: guard_subclass(p21, ConstClass(W_Cell), descr=<Guard0x3245ca0>) [p1, i9, p3]
+493: p23 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+497: guard_nonnull_class(p23, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3245d00>) [p1, i9, p3]
+516: i25 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+520: jump(p3, i9, p1, p5, p16, i20, p21, p23, i25, descr=TargetToken(48737120))
+592: --end of the loop--
[3e4c0a486bd6875] jit-log-opt-loop}
[3e4c0a486de450c] {jit-backend
[3e4c0a486e29f08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d
[3e4c0a486e30a1d] jit-backend-dump}
[3e4c0a486e3db03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d224f4 +0  36000000
[3e4c0a486e3eeee] jit-backend-dump}
[3e4c0a486e42d10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22635 +0  36000000
[3e4c0a486e43ba3] jit-backend-dump}
[3e4c0a486e46e44] {jit-backend-addr
bridge out of Guard 0x3184458 has address 0x7f6e13d224f0 to 0x7f6e13d22630
       gc table: 0x7f6e13d22470
    jump target: 0x7f6e13d224f0
         resops: 0x7f6e13d224fe
       failures: 0x7f6e13d22630
            end: 0x7f6e13d227fb
[3e4c0a486e491b4] jit-backend-addr}
[3e4c0a486e4c604] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2250e +0  61010000
[3e4c0a486e4d3f8] jit-backend-dump}
[3e4c0a486e5062a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22525 +0  66010000
[3e4c0a486e51377] jit-backend-dump}
[3e4c0a486e544df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22531 +0  76010000
[3e4c0a486e551d3] jit-backend-dump}
[3e4c0a486e58299] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22542 +0  81010000
[3e4c0a486e58f87] jit-backend-dump}
[3e4c0a486e5bfc9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22556 +0  89010000
[3e4c0a486e5ccbd] jit-backend-dump}
[3e4c0a486e5fd1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22563 +0  98010000
[3e4c0a486e60a18] jit-backend-dump}
[3e4c0a486e63a6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22573 +0  A4010000
[3e4c0a486e64764] jit-backend-dump}
[3e4c0a486e67aac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d2258a +0  C5010000
[3e4c0a486e687b2] jit-backend-dump}
[3e4c0a486e6b82f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d22598 +0  D3010000
[3e4c0a486e6c59a] jit-backend-dump}
[3e4c0a486e6f7a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d225a5 +0  E2010000
[3e4c0a486e7047d] jit-backend-dump}
[3e4c0a486e734de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d225c1 +0  E2010000
[3e4c0a486e741aa] jit-backend-dump}
[3e4c0a486e771e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d225cf +0  F0010000
[3e4c0a486e77ec5] jit-backend-dump}
[3e4c0a486e7aeac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d225d9 +0  02020000
[3e4c0a486e7bb7e] jit-backend-dump}
[3e4c0a486e7ed85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f6e13d12ccf +0  1DF80000
[3e4c0a486e7fa4e] jit-backend-dump}
[3e4c0a486e8376c] jit-backend}
[3e4c0a486e87119] {jit-log-opt-bridge
# bridge out of Guard 0x3184458 with 48 ops
[p0, p1]
+150: guard_class(p1, 16435208, descr=<Guard0x3245dc0>) [p0, p1]
+162: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+166: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3245e20>) [p0, p1]
debug_merge_point(0, 0, '(if one?5161 2 1)')
+185: guard_class(p0, 16504944, descr=<Guard0x3268d58>) [p0, p1]
+197: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+201: guard_class(p6, 16479952, descr=<Guard0x3268da0>) [p0, p1]
+214: p8 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+225: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3268de8>) [p0, p1]
+234: p10 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_5 64 pure>)
+238: guard_nonnull(p10, descr=<Guard0x3268e30>) [p0, p1]
+254: i12 = instance_ptr_eq(p10, ConstPtr(ptr11))
+257: guard_true(i12, descr=<Guard0x3268e78>) [p0, p1]
debug_merge_point(0, 0, '1')
+263: guard_not_invalidated(descr=<Guard0x3268ec0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))')
debug_merge_point(0, 0, '(+ m AppRand42)')
+263: p13 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_3 48 pure>)
+267: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x3245e80>) [p0, p1]
+286: i15 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+290: i17 = int_add_ovf(i15, 1)
+294: guard_no_overflow(descr=<Guard0x3268f08>) [p0, p1]
debug_merge_point(0, 0, '(let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))))')
debug_merge_point(0, 0, '(= ii AppRand43)')
+300: i18 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+304: i19 = int_eq(i18, i17)
+307: guard_false(i19, descr=<Guard0x3268f50>) [p0, p1]
debug_merge_point(0, 0, '(if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))')
debug_merge_point(0, 0, '(let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)))')
debug_merge_point(0, 0, '(= ii CellRef(ip))')
+313: p20 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize7.inst__vals_2 40 pure>)
+317: p21 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+321: guard_nonnull_class(p21, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3245ee0>) [p0, p1]
+341: i23 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+346: i24 = int_eq(i18, i23)
+349: guard_true(i24, descr=<Guard0x3268f98>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void))')
debug_merge_point(0, 0, '(void)')
debug_merge_point(0, 0, '(let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55)) from (void)')
debug_merge_point(0, 0, '(+ ii 1)')
+355: i26 = int_add_ovf(i18, 1)
+359: guard_no_overflow(descr=<Guard0x3268fe0>) [p0, p1]
debug_merge_point(0, 0, '(doloop5167 AppRand55)')
debug_merge_point(0, 0, '(let ([AppRand42 (if one?5161 2 1)]) (let ([AppRand43 (+ m AppRand42)]) (let ([if12 (= ii AppRand43)]) (if if12 (void) (let ([AppRand44 (= ii CellRef(ip))]) (if (not AppRand44) (let ([AppRand45 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand46 (* piv AppRand45)]) (matrix-set! a5002 ii CellRef(kp) AppRand46)) (let ([doloop5182 (lambda (kk) (let ([AppRand47 (+ n 1)]) (let ([if13 (= kk AppRand47)]) (if if13 (void) (let ([AppRand48 (= kk CellRef(kp))]) (if (not AppRand48) (let ([AppRand49 (matrix-ref a5002 ii kk)][AppRand50 (matrix-ref a5002 CellRef(ip) kk)][AppRand51 (matrix-ref a5002 ii CellRef(kp))]) (let ([AppRand52 (* AppRand50 AppRand51)]) (let ([AppRand53 (- AppRand49 AppRand52)]) (matrix-set! a5002 ii kk AppRand53)))) (void)) (let ([AppRand54 (+ kk 1)]) (doloop5182 AppRand54)))))))]) (doloop5182 0))) (void)) (let ([AppRand55 (+ ii 1)]) (doloop5167 AppRand55))))))) from (doloop5167 AppRand55)')
+365: p27 = new_with_vtable(descr=<SizeDescr 24>)
+409: setfield_gc(p27, p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+413: setfield_gc(p27, i26, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+417: jump(p27, p1, descr=TargetToken(48737040))
+448: --end of the loop--
[3e4c0a486eb120d] jit-log-opt-bridge}
[3e4c0b5a6bc7c91] {jit-summary
Tracing:      	71	0.118483
Backend:      	71	0.125027
TOTAL:      		28.628139
ops:             	216217
recorded ops:    	36220
  calls:         	1
guards:          	9822
opt ops:         	11105
opt guards:      	3155
opt guards shared:	2271
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	447
nvholes:         	27
nvreused:        	31
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	29
Total # of bridges:	42
Freed # of loops:	0
Freed # of bridges:	0
[3e4c0b5a6bd823a] jit-summary}
[3e4c0b5a6be2ed9] {jit-backend-counts
entry 1:83
TargetToken(47968032):83
TargetToken(47968112):559999772
entry 2:98
bridge 48583848:111999921
bridge 48583776:111999903
entry 5:180
TargetToken(48737040):23999814
TargetToken(48737120):95999867
entry 6:24
TargetToken(48737200):24
TargetToken(48737280):47999919
entry 7:207
entry 8:127
bridge 49047120:79999875
entry 10:443
entry 11:65
TargetToken(48739440):65
TargetToken(48739520):95999766
entry 12:5
TargetToken(48739600):5
TargetToken(48739680):119999786
entry 13:181
entry 14:213
entry 15:5
TargetToken(48739760):5
TargetToken(48739840):79999816
bridge 49050144:63999857
entry 17:78
entry 18:85
TargetToken(49644112):217
TargetToken(49644192):47999664
bridge 49168288:71999817
bridge 49163392:201
bridge 49546112:60
entry 23:186
TargetToken(49644272):8000032
TargetToken(49644352):23999808
entry 24:49
TargetToken(49644432):49
TargetToken(49644512):47999787
bridge 49547408:39999860
entry 26:61
TargetToken(49645872):61
TargetToken(49645952):47999759
bridge 49168216:23999903
entry 28:80
entry 29:173
bridge 49167136:39999815
entry 31:15
bridge 49696808:132
bridge 49066624:58
bridge 49761768:31999834
bridge 49050072:15999917
entry 36:7
TargetToken(49648272):7
TargetToken(49648352):31999817
bridge 49167568:15999909
bridge 49551944:53
entry 39:37
bridge 49049640:23999720
entry 41:138
bridge 49985976:23999831
entry 43:58
bridge 49765872:23999826
bridge 49985544:29
bridge 49694936:15999868
entry 47:40
bridge 49047336:7999929
bridge 49047264:7999929
bridge 49064896:7999927
entry 51:63
bridge 50843760:15999768
bridge 49758456:7999863
bridge 49758600:7999915
bridge 49759968:7999915
entry 56:3
TargetToken(51962368):3
TargetToken(51962448):15999822
bridge 49981368:7999910
bridge 49986192:7999907
bridge 49973056:7999905
bridge 50690560:7999901
bridge 49693928:15999796
bridge 50846424:7
bridge 51022040:7999891
entry 64:15
bridge 49694792:7999886
bridge 51096776:7999880
bridge 51750624:7999876
bridge 51751680:7999876
bridge 51928920:7999861
bridge 51944416:7999846
entry 71:23
bridge 51922008:7999824
[3e4c0b5a6bf66b7] jit-backend-counts}
