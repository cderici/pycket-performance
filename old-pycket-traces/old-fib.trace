[3e4c1f06ca0f12a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713287000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c1f06ca238ea] jit-backend-dump}
[3e4c1f06ca65e28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132870b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c1f06ca68c50] jit-backend-dump}
[3e4c1f06ca794fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713287180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c1f06ca7b2d8] jit-backend-dump}
[3e4c1f06ca82373] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132871f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c1f06ca83c04] jit-backend-dump}
[3e4c1f06ca8c8a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713287270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c1f06ca8e229] jit-backend-dump}
[3e4c1f06ca97c08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132872f
[3e4c1f06ca9b8da] jit-backend-dump}
[3e4c1f06caa0dc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f
[3e4c1f06caa319d] jit-backend-dump}
[3e4c1f06caa7ced] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f
[3e4c1f06caaa225] jit-backend-dump}
[3e4c1f06cb38afa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f
[3e4c1f06cb3b72c] jit-backend-dump}
[3e4c1f06cb417b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132878f
[3e4c1f06cb43f20] jit-backend-dump}
[3e4c1f06cb48ec0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713287a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c1f06cb4a82a] jit-backend-dump}
[3e4c1f06cb5f6fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713287af
[3e4c1f06cb62892] jit-backend-dump}
[3e4c1f06cb6a81c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713287ce
[3e4c1f06cb6d733] jit-backend-dump}
[3e4c1f06cb75132] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713287ee
[3e4c1f06cb784b1] jit-backend-dump}
[3e4c1f06cb7e5eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132880d
[3e4c1f06cb81428] jit-backend-dump}
[3e4c1f06cb8b3f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132882c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70722813877F000041FFD3E99CFFFFFF
[3e4c1f06cb8d144] jit-backend-dump}
[3e4c1f06cb92421] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70722813877F000041FFD3E9BCFFFFFF
[3e4c1f06cb93cb5] jit-backend-dump}
[3e4c1f06cb990d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f
[3e4c1f06cb9babe] jit-backend-dump}
[3e4c1f06cba0b03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132885c0 +0  4C8985800000004C898D880000004C899590000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC08FFD0488B0C258893F900488B69F8F64504010F85B10000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B528010000C349BB70722813877F000041FFD3E93DFFFFFF
[3e4c1f06cba3467] jit-backend-dump}
[3e4c1f06cbb430f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB707A2813877F000041FFE3
[3e4c1f06cbb5b2f] jit-backend-dump}
[3e4c1f06d06e9a1] {jit-backend
[3e4c1f06d1469b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132888c
[3e4c1f06d14d465] jit-backend-dump}
[3e4c1f06d15cd5e] {jit-backend-addr
Loop 1 ((let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)) has address 0x7f871328899d to 0x7f8713288aa0 (bootstrap 0x7f8713288910)
       gc table: 0x7f87132888c0
       function: 0x7f8713288910
         resops: 0x7f871328899d
       failures: 0x7f8713288aa0
            end: 0x7f8713288baf
[3e4c1f06d1615a5] jit-backend-addr}
[3e4c1f06d166425] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132889c7 +0  04010000
[3e4c1f06d1676e1] jit-backend-dump}
[3e4c1f06d16ade7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132889dd +0  0A010000
[3e4c1f06d16bc41] jit-backend-dump}
[3e4c1f06d16efd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132889f0 +0  2F010000
[3e4c1f06d16fd7b] jit-backend-dump}
[3e4c1f06d172e38] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132889fe +0  3D010000
[3e4c1f06d173afb] jit-backend-dump}
[3e4c1f06d176bb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288a16 +0  41010000
[3e4c1f06d17783a] jit-backend-dump}
[3e4c1f06d17a8d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288a2e +0  61010000
[3e4c1f06d17b55b] jit-backend-dump}
[3e4c1f06d17f0f2] jit-backend}
[3e4c1f06d182dfd] {jit-log-opt-loop
# Loop 1 ((let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)) : loop with 43 ops
[p0, p1]
+229: label(p0, p1, descr=TargetToken(53169952))
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)')
+248: guard_class(p1, 16435920, descr=<Guard0x3087ca0>) [p0, p1]
+267: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+271: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3087d00>) [p0, p1]
debug_merge_point(0, 0, '(< n 2)')
+289: guard_not_invalidated(descr=<Guard0x32d7268>) [p0, p1]
+289: guard_class(p0, 16504944, descr=<Guard0x32d72b0>) [p0, p1]
+308: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+312: i8 = int_lt(i6, 2)
+316: guard_false(i8, descr=<Guard0x32d72f8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1)')
+322: i10 = int_sub(i6, 1)
debug_merge_point(0, 0, '(let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fib AppRand0)')
+326: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+337: i13 = instance_ptr_eq(p11, ConstPtr(ptr12))
+340: guard_true(i13, descr=<Guard0x32d7340>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)')
+346: label(p11, i10, p3, p0, p1, descr=TargetToken(53170032))
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)')
debug_merge_point(0, 0, '(< n 2)')
+360: guard_not_invalidated(descr=<Guard0x3087d60>) [p1, p0, i10, p11, p3]
+360: i15 = int_lt(i10, 2)
+364: guard_false(i15, descr=<Guard0x32d7388>) [p1, p0, i10, p11, p3]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1)')
+370: i17 = int_sub(i10, 1)
debug_merge_point(0, 0, '(let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fib AppRand0)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)')
+374: p18 = new_with_vtable(descr=<SizeDescr 24>)
+421: p19 = new_with_vtable(descr=<SizeDescr 40>)
+432: setfield_gc(p18, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+436: setfield_gc(p18, i10, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+440: setfield_gc(p19, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+444: setfield_gc(p19, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+448: setfield_gc(p19, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+459: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+463: jump(p11, i17, p3, p18, p19, descr=TargetToken(53170032))
+480: --end of the loop--
[3e4c1f06d1e2b8f] jit-log-opt-loop}
[3e4c1f06d2fcd2d] {jit-backend
[3e4c1f06d31f9ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288c
[3e4c1f06d3249ce] jit-backend-dump}
[3e4c1f06d32e35e] {jit-backend-addr
Loop 2 ((let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)) has address 0x7f8713288cfd to 0x7f8713288d80 (bootstrap 0x7f8713288c70)
       gc table: 0x7f8713288c30
       function: 0x7f8713288c70
         resops: 0x7f8713288cfd
       failures: 0x7f8713288d80
            end: 0x7f8713288e3a
[3e4c1f06d330fec] jit-backend-addr}
[3e4c1f06d334e02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288d14 +0  7A000000
[3e4c1f06d336025] jit-backend-dump}
[3e4c1f06d339374] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288d2a +0  80000000
[3e4c1f06d33a1c1] jit-backend-dump}
[3e4c1f06d33d43d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288d3d +0  A5000000
[3e4c1f06d33e1cd] jit-backend-dump}
[3e4c1f06d34133e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288d4b +0  B3000000
[3e4c1f06d3420b5] jit-backend-dump}
[3e4c1f06d345135] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288d63 +0  B7000000
[3e4c1f06d345e75] jit-backend-dump}
[3e4c1f06d349936] jit-backend}
[3e4c1f06d34d63e] {jit-log-opt-loop
# Loop 2 ((let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)) : entry bridge with 21 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+213: guard_class(p1, 16435920, descr=<Guard0x3087dc0>) [p0, p1]
+232: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+236: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3087e20>) [p0, p1]
debug_merge_point(0, 0, '(< n 2)')
+254: guard_not_invalidated(descr=<Guard0x32d73d0>) [p0, p1]
+254: guard_class(p0, 16504944, descr=<Guard0x32d7418>) [p0, p1]
+273: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+277: i8 = int_lt(i6, 2)
+281: guard_false(i8, descr=<Guard0x32d7460>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1)')
+287: i10 = int_sub(i6, 1)
debug_merge_point(0, 0, '(let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fib AppRand0)')
+291: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+302: i13 = instance_ptr_eq(p11, ConstPtr(ptr12))
+305: guard_true(i13, descr=<Guard0x32d74a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)')
+311: jump(p11, i10, p3, p0, p1, descr=TargetToken(53170032))
+336: --end of the loop--
[3e4c1f06d3633fa] jit-log-opt-loop}
[3e4c1f06d598133] {jit-backend
[3e4c1f06d6224f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288fb0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CD201000048FF0425107779028139101100000F85000000004C8B79084983FF01720741813F900F00000F8500000000813AB01E01000F85000000004C8B7A104983FF020F8D000000004C8B71204C8B2D0AFFFFFF4D39EE0F85000000004C8B71104C8B611841813E901A01000F85000000004D8B56104D01D70F800000000041813C24101100000F85000000004D8B5424204D39EA0F85000000004D8B5424104D8B74241841813A901A01000F85000000004D8B62104D01E70F800000000041813E101100000F85000000004D8B66204C8B15CFFEFFFF4D39D40F85000000004D8B56104D8B661841813AB01E01000F85000000004D8B720841813E102001000F850000000041813C24101100000F85000000004D8B4C24084983F9017207418139900F00000F85000000004D8B42104983E8020F80000000004983F8020F8C00000000498D48FF4889CB488B0C25F091F900488D5160483B14251092F9000F879700000048891425F091F90048C701B01E0100488D511848C702101100004C8D522849C702901A01004D8972084D897A104D8942184C894A084C8941104C896A204C8952104C8962184C8B2535FEFFFF4C8961084889DE4C89C84C89E3524889CA5949BB208A2813877F000041FFE3660F1F44000048C7442408FFFFFF0049BB508E2813877F00004C895D204D8D9BA0E4FFFF41FFD3E908FEFFFF49BBA08F2813877F00004C895D204D8D9B50EBFFFF41FFD3E954FFFFFFFF3517FDFFFF49BB608E2813877F000041534D8D9BA0E1FFFF41FFE3FF3503FDFFFF49BB708E2813877F000041534D8D9B90E1FFFF41FFE3FF35EFFCFFFF49BB808E2813877F000041534D8D9B80E1FFFF41FFE3FF35DBFCFFFF49BB908E2813877F000041534D8D9B70E1FFFF41FFE3FF35C7FCFFFF49BBA08E2813877F000041534D8D9B60E1FFFF41FFE3FF35BBFCFFFF49BBB08E2813877F000041534D8D9B50E1FFFF41FFE3FF35A7FCFFFF49BBC08E2813877F000041534D8D9B40E1FFFF41FFE3FF3593FCFFFF49BBD08E2813877F000041534D8D9B30E1FFFF41FFE3FF357FFCFFFF49BBE08E2813877F000041534D8D9B20E1FFFF41FFE3FF356BFCFFFF49BBF08E2813877F000041534D8D9B10E1FFFF41FFE3FF3557FCFFFF49BB008F2813877F000041534D8D9B00E1FFFF41FFE3FF3543FCFFFF49BB108F2813877F000041534D8D9BF0E0FFFF41FFE3FF352FFCFFFF49BB208F2813877F000041534D8D9BE0E0FFFF41FFE3FF3523FCFFFF49BB308F2813877F000041534D8D9BD0E0FFFF41FFE3FF350FFCFFFF49BB408F2813877F000041534D8D9BC0E0FFFF41FFE3FF35FBFBFFFF49BB508F2813877F000041534D8D9BB0E0FFFF41FFE3FF35E7FBFFFF49BB608F2813877F000041534D8D9BA0E0FFFF41FFE3FF35D3FBFFFF49BB708F2813877F000041534D8D9B90E0FFFF41FFE3FF35BFFBFFFF49BB808F2813877F000041534D8D9B80E0FFFF41FFE3FF35ABFBFFFF49BB908F2813877F000041534D8D9B70E0FFFF41FFE3
[3e4c1f06d62b2fa] jit-backend-dump}
[3e4c1f06d634fd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289074 +0  1E000000
[3e4c1f06d636365] jit-backend-dump}
[3e4c1f06d639f8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289255 +0  1E000000
[3e4c1f06d63ae5f] jit-backend-dump}
[3e4c1f06d63e088] {jit-backend-addr
bridge out of Guard 0x32d7460 has address 0x7f8713289070 to 0x7f8713289250
       gc table: 0x7f8713288fb0
    jump target: 0x7f8713289070
         resops: 0x7f871328907e
       failures: 0x7f8713289250
            end: 0x7f87132894c3
[3e4c1f06d640583] jit-backend-addr}
[3e4c1f06d643830] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328908e +0  01020000
[3e4c1f06d6445de] jit-backend-dump}
[3e4c1f06d6477fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132890a5 +0  06020000
[3e4c1f06d64850a] jit-backend-dump}
[3e4c1f06d64b5f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132890b1 +0  32020000
[3e4c1f06d64c329] jit-backend-dump}
[3e4c1f06d64f313] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132890bf +0  40020000
[3e4c1f06d650056] jit-backend-dump}
[3e4c1f06d653015] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132890d3 +0  48020000
[3e4c1f06d653d52] jit-backend-dump}
[3e4c1f06d656c8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132890e8 +0  4F020000
[3e4c1f06d6579c5] jit-backend-dump}
[3e4c1f06d65a925] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132890f5 +0  5E020000
[3e4c1f06d65b65f] jit-backend-dump}
[3e4c1f06d65e5f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289103 +0  6C020000
[3e4c1f06d65f31b] jit-backend-dump}
[3e4c1f06d66225d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289111 +0  7A020000
[3e4c1f06d662f94] jit-backend-dump}
[3e4c1f06d665f0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289128 +0  7F020000
[3e4c1f06d666c44] jit-backend-dump}
[3e4c1f06d669b98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289135 +0  8E020000
[3e4c1f06d66a8ed] jit-backend-dump}
[3e4c1f06d66d820] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289142 +0  9D020000
[3e4c1f06d66e557] jit-backend-dump}
[3e4c1f06d6714a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289156 +0  A5020000
[3e4c1f06d6721e2] jit-backend-dump}
[3e4c1f06d6750ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328916b +0  AC020000
[3e4c1f06d675e36] jit-backend-dump}
[3e4c1f06d678d87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328917c +0  B7020000
[3e4c1f06d679ac7] jit-backend-dump}
[3e4c1f06d67ca27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328918a +0  C5020000
[3e4c1f06d67d764] jit-backend-dump}
[3e4c1f06d6806c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132891a2 +0  C9020000
[3e4c1f06d6813ff] jit-backend-dump}
[3e4c1f06d68434a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132891b0 +0  D7020000
[3e4c1f06d685081] jit-backend-dump}
[3e4c1f06d687fd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132891ba +0  E9020000
[3e4c1f06d688d15] jit-backend-dump}
[3e4c1f06d68db2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288d4b +0  21030000
[3e4c1f06d68e9b5] jit-backend-dump}
[3e4c1f06d695964] jit-backend}
[3e4c1f06d69952e] {jit-log-opt-bridge
# bridge out of Guard 0x32d7460 with 71 ops
[p0, p1]
+214: guard_class(p1, 16435920, descr=<Guard0x3087e80>) [p0, p1]
+226: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+230: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3087ee0>) [p0, p1]
debug_merge_point(0, 0, '(< n 2)')
+249: guard_not_invalidated(descr=<Guard0x32d74f0>) [p0, p1]
+249: guard_class(p0, 16504944, descr=<Guard0x32d7538>) [p0, p1]
+261: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+265: i8 = int_lt(i6, 2)
+269: guard_true(i8, descr=<Guard0x32d7580>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
+275: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+286: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x32d75c8>) [p0, p1]
+295: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+299: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2)')
+303: guard_class(p11, 16503888, descr=<Guard0x32d7610>) [p0, p1]
+316: i14 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+320: i15 = int_add_ovf(i14, i6)
+323: guard_no_overflow(descr=<Guard0x32d7658>) [p0, p1]
+329: guard_class(p12, 16435920, descr=<Guard0x32d76a0>) [p0, p1]
+343: p17 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+348: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x32d76e8>) [p0, p1]
+357: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+362: p20 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+367: guard_class(p19, 16503888, descr=<Guard0x32d7730>) [p0, p1]
+380: i22 = getfield_gc_i(p19, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+384: i23 = int_add_ovf(i22, i15)
+387: guard_no_overflow(descr=<Guard0x32d7778>) [p0, p1]
+393: guard_class(p20, 16435920, descr=<Guard0x32d77c0>) [p0, p1]
+406: p25 = getfield_gc_r(p20, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+417: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x32d7808>) [p0, p1]
+426: p27 = getfield_gc_r(p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+430: p28 = getfield_gc_r(p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+434: guard_class(p27, 16504944, descr=<Guard0x32d7850>) [p0, p1]
+447: p30 = getfield_gc_r(p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+451: guard_class(p30, 16505296, descr=<Guard0x32d7898>) [p0, p1]
+464: guard_class(p28, 16435920, descr=<Guard0x32d78e0>) [p0, p1]
+478: p33 = getfield_gc_r(p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+483: guard_nonnull_class(p33, ConstClass(ForwardLink), descr=<Guard0x3087f40>) [p0, p1]
debug_merge_point(0, 0, '(- n 2) from (+ AppRand1 AppRand3)')
+502: i35 = getfield_gc_i(p27, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+506: i37 = int_sub_ovf(i35, 2)
+510: guard_no_overflow(descr=<Guard0x32d7928>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
debug_merge_point(0, 0, '(< n 2)')
+516: i39 = int_lt(i37, 2)
+520: guard_false(i39, descr=<Guard0x32d7970>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1)')
+526: i41 = int_sub(i37, 1)
debug_merge_point(0, 0, '(let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fib AppRand0)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)')
+530: p42 = new_with_vtable(descr=<SizeDescr 24>)
+574: p43 = new_with_vtable(descr=<SizeDescr 40>)
+585: p44 = new_with_vtable(descr=<SizeDescr 32>)
+596: setfield_gc(p44, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+600: setfield_gc(p44, i23, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+604: setfield_gc(p44, i37, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+608: setfield_gc(p43, p33, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+612: setfield_gc(p42, i37, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+616: setfield_gc(p43, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+620: setfield_gc(p43, p44, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+624: setfield_gc(p43, p28, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+635: setfield_gc(p42, ConstPtr(ptr46), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+639: jump(ConstPtr(ptr46), i41, p33, p42, p43, descr=TargetToken(53170032))
+672: --end of the loop--
[3e4c1f06da02f2b] jit-log-opt-bridge}
[3e4c1f06db43314] {jit-backend
[3e4c1f06db90e03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132895c
[3e4c1f06db98946] jit-backend-dump}
[3e4c1f06dba2a26] {jit-backend-addr
Loop 4 ((+ AppRand1 AppRand3) from (< n 2)) has address 0x7f87132896cd to 0x7f8713289830 (bootstrap 0x7f8713289640)
       gc table: 0x7f87132895c0
       function: 0x7f8713289640
         resops: 0x7f87132896cd
       failures: 0x7f8713289830
            end: 0x7f87132899af
[3e4c1f06dba5628] jit-backend-addr}
[3e4c1f06dba98c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132896e4 +0  93010000
[3e4c1f06dbaac38] jit-backend-dump}
[3e4c1f06dbae139] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f87132896f4 +0  9F010000
[3e4c1f06dbaf13f] jit-backend-dump}
[3e4c1f06dbb2521] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289705 +0  AA010000
[3e4c1f06dbb333a] jit-backend-dump}
[3e4c1f06dbb6490] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289718 +0  B3010000
[3e4c1f06dbb71dc] jit-backend-dump}
[3e4c1f06dbba3c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328972c +0  BB010000
[3e4c1f06dbbb124] jit-backend-dump}
[3e4c1f06dbc2750] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289740 +0  C3010000
[3e4c1f06dbc35c5] jit-backend-dump}
[3e4c1f06dbc6b03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289750 +0  CF010000
[3e4c1f06dbc787d] jit-backend-dump}
[3e4c1f06dbca98a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328975c +0  DF010000
[3e4c1f06dbcb6ca] jit-backend-dump}
[3e4c1f06dbce6fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289773 +0  E4010000
[3e4c1f06dbcf3dc] jit-backend-dump}
[3e4c1f06dbd2446] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289781 +0  F2010000
[3e4c1f06dbd3143] jit-backend-dump}
[3e4c1f06dbd6111] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328978b +0  04020000
[3e4c1f06dbd6dcb] jit-backend-dump}
[3e4c1f06dbda888] jit-backend}
[3e4c1f06dbde422] {jit-log-opt-loop
# Loop 4 ((+ AppRand1 AppRand3) from (< n 2)) : entry bridge with 50 ops
[p0, p1]
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2)')
+277: guard_not_invalidated(descr=<Guard0x32fc200>) [p1, p0]
+277: guard_class(p0, 16504944, descr=<Guard0x332da90>) [p1, p0]
+296: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+300: guard_class(p3, 16503888, descr=<Guard0x332dad8>) [p1, p0]
+312: i5 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+316: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+320: i7 = int_add_ovf(i5, i6)
+323: guard_no_overflow(descr=<Guard0x332db20>) [p1, p0]
+329: guard_class(p1, 16435920, descr=<Guard0x332db68>) [p1, p0]
+348: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+359: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x332dbb0>) [p1, p0]
+368: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+372: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+376: guard_class(p11, 16504944, descr=<Guard0x332dbf8>) [p1, p0]
+388: p14 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+392: guard_class(p14, 16505296, descr=<Guard0x332dc40>) [p1, p0]
+404: guard_class(p12, 16435920, descr=<Guard0x332dc88>) [p1, p0]
+416: p17 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+420: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x32fc260>) [p1, p0]
debug_merge_point(0, 0, '(- n 2) from (+ AppRand1 AppRand3)')
+439: i19 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+443: i21 = int_sub_ovf(i19, 2)
+447: guard_no_overflow(descr=<Guard0x332dcd0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
debug_merge_point(0, 0, '(< n 2)')
+453: i23 = int_lt(i21, 2)
+457: guard_false(i23, descr=<Guard0x332dd18>) [p1, p0]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1)')
+463: i25 = int_sub(i21, 1)
debug_merge_point(0, 0, '(let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fib AppRand0)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)')
+467: p26 = new_with_vtable(descr=<SizeDescr 24>)
+511: p27 = new_with_vtable(descr=<SizeDescr 40>)
+522: p28 = new_with_vtable(descr=<SizeDescr 32>)
+533: setfield_gc(p28, p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+537: setfield_gc(p28, i7, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+541: setfield_gc(p28, i21, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+552: setfield_gc(p26, ConstPtr(ptr29), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+556: setfield_gc(p26, i21, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+567: setfield_gc(p27, ConstPtr(ptr30), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+571: setfield_gc(p27, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+575: setfield_gc(p27, p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+579: setfield_gc(p27, p17, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+583: jump(ConstPtr(ptr29), i25, p17, p26, p27, descr=TargetToken(53170032))
+624: --end of the loop--
[3e4c1f06dc0725c] jit-log-opt-loop}
[3e4c1f06de06a9d] {jit-backend
[3e4c1f06de868c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289bd
[3e4c1f06de924b1] jit-backend-dump}
[3e4c1f06de9c4be] {jit-backend-addr
Loop 5 ((let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)) has address 0x7f8713289d6d to 0x7f8713289fb0 (bootstrap 0x7f8713289ce0)
       gc table: 0x7f8713289bd0
       function: 0x7f8713289ce0
         resops: 0x7f8713289d6d
       failures: 0x7f8713289fb0
            end: 0x7f871328a342
[3e4c1f06de9f31a] jit-backend-addr}
[3e4c1f06dea327a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289d97 +0  27020000
[3e4c1f06dea4561] jit-backend-dump}
[3e4c1f06dea7942] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289dad +0  2D020000
[3e4c1f06dea8897] jit-backend-dump}
[3e4c1f06deabcff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289dc0 +0  52020000
[3e4c1f06deacb6e] jit-backend-dump}
[3e4c1f06deafcf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289dce +0  60020000
[3e4c1f06deb0a35] jit-backend-dump}
[3e4c1f06deb3b9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289de2 +0  68020000
[3e4c1f06deb48d4] jit-backend-dump}
[3e4c1f06deb7985] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289df6 +0  70020000
[3e4c1f06deb869a] jit-backend-dump}
[3e4c1f06debb71a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e03 +0  7F020000
[3e4c1f06debc439] jit-backend-dump}
[3e4c1f06debf47b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e0f +0  8F020000
[3e4c1f06dec017b] jit-backend-dump}
[3e4c1f06dec3171] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e1c +0  9E020000
[3e4c1f06dec3e6b] jit-backend-dump}
[3e4c1f06dec6f78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e30 +0  A6020000
[3e4c1f06dec7c78] jit-backend-dump}
[3e4c1f06decac7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e3d +0  B5020000
[3e4c1f06decb9b7] jit-backend-dump}
[3e4c1f06dece9f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e4a +0  C4020000
[3e4c1f06decf728] jit-backend-dump}
[3e4c1f06ded277a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e5e +0  CC020000
[3e4c1f06ded3495] jit-backend-dump}
[3e4c1f06ded6494] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e72 +0  D4020000
[3e4c1f06ded719e] jit-backend-dump}
[3e4c1f06deda1e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e83 +0  DF020000
[3e4c1f06dedaee9] jit-backend-dump}
[3e4c1f06deddf2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e8f +0  EF020000
[3e4c1f06dedec2c] jit-backend-dump}
[3e4c1f06dee1c5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289ea5 +0  F5020000
[3e4c1f06dee295c] jit-backend-dump}
[3e4c1f06dee59e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289eb3 +0  03030000
[3e4c1f06dee6722] jit-backend-dump}
[3e4c1f06dee985a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289ede +0  10030000
[3e4c1f06deea575] jit-backend-dump}
[3e4c1f06deed5d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289eea +0  20030000
[3e4c1f06deee2e6] jit-backend-dump}
[3e4c1f06def131c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289efe +0  28030000
[3e4c1f06def2022] jit-backend-dump}
[3e4c1f06def5000] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f12 +0  30030000
[3e4c1f06def5d0f] jit-backend-dump}
[3e4c1f06def8d0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f1f +0  3F030000
[3e4c1f06def9a11] jit-backend-dump}
[3e4c1f06defca57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f2b +0  4F030000
[3e4c1f06defd754] jit-backend-dump}
[3e4c1f06df007c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f3f +0  57030000
[3e4c1f06df014ce] jit-backend-dump}
[3e4c1f06df044d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f53 +0  5F030000
[3e4c1f06df051e8] jit-backend-dump}
[3e4c1f06df081f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f63 +0  6B030000
[3e4c1f06df08ee2] jit-backend-dump}
[3e4c1f06df0bec2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f6f +0  7B030000
[3e4c1f06df0cc06] jit-backend-dump}
[3e4c1f06df0fc17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f85 +0  81030000
[3e4c1f06df1092a] jit-backend-dump}
[3e4c1f06df1396c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f93 +0  8F030000
[3e4c1f06df146f9] jit-backend-dump}
[3e4c1f06df181db] jit-backend}
[3e4c1f06df1bd9c] {jit-log-opt-loop
# Loop 5 ((let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)) : loop with 87 ops
[p0, p1]
+421: label(p0, p1, descr=TargetToken(53683488))
+440: guard_class(p1, 16435920, descr=<Guard0x32fc2c0>) [p0, p1]
+459: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+463: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x32fc320>) [p0, p1]
debug_merge_point(0, 0, '(< n 2)')
+481: guard_not_invalidated(descr=<Guard0x332dd60>) [p0, p1]
+481: guard_class(p0, 16504944, descr=<Guard0x332dda8>) [p0, p1]
+500: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+504: i8 = int_lt(i6, 2)
+508: guard_true(i8, descr=<Guard0x332ddf0>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
+514: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+525: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x332de38>) [p0, p1]
+534: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+538: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2)')
+542: guard_class(p11, 16503888, descr=<Guard0x332de80>) [p0, p1]
+554: i14 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+558: i15 = int_add_ovf(i14, i6)
+561: guard_no_overflow(descr=<Guard0x332dec8>) [p0, p1]
+567: guard_class(p12, 16435920, descr=<Guard0x332df10>) [p0, p1]
+579: p17 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+583: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x332df58>) [p0, p1]
+592: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+596: p20 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+600: guard_class(p19, 16503888, descr=<Guard0x332dfa0>) [p0, p1]
+612: i22 = getfield_gc_i(p19, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+616: i23 = int_add_ovf(i22, i15)
+619: guard_no_overflow(descr=<Guard0x3364020>) [p0, p1]
+625: guard_class(p20, 16435920, descr=<Guard0x3364068>) [p0, p1]
+638: p25 = getfield_gc_r(p20, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+649: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x33640b0>) [p0, p1]
+658: p27 = getfield_gc_r(p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+662: p28 = getfield_gc_r(p20, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+666: guard_class(p27, 16504944, descr=<Guard0x33640f8>) [p0, p1]
+678: p30 = getfield_gc_r(p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+682: guard_class(p30, 16505296, descr=<Guard0x3364140>) [p0, p1]
+695: guard_class(p28, 16435920, descr=<Guard0x3364188>) [p0, p1]
+707: p33 = getfield_gc_r(p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+711: guard_nonnull_class(p33, ConstClass(ForwardLink), descr=<Guard0x32fc380>) [p0, p1]
debug_merge_point(0, 0, '(- n 2) from (+ AppRand1 AppRand3)')
+729: i35 = getfield_gc_i(p27, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+733: i37 = int_sub_ovf(i35, 2)
+737: guard_no_overflow(descr=<Guard0x33641d0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+743: label(i37, p33, p30, i23, p28, descr=TargetToken(53683568))
debug_merge_point(0, 0, '(< n 2)')
+776: guard_not_invalidated(descr=<Guard0x32fc3e0>) [i23, p30, p28, i37, p33]
+776: i39 = int_lt(i37, 2)
+780: guard_true(i39, descr=<Guard0x3364218>) [i23, p30, p28, i37, p33]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2)')
+786: i40 = int_add_ovf(i23, i37)
+792: guard_no_overflow(descr=<Guard0x3364260>) [i23, p30, p28, i37, p33]
+798: p41 = getfield_gc_r(p28, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+809: guard_value(p41, ConstPtr(ptr42), descr=<Guard0x33642a8>) [i23, p30, p28, i37, p33]
+818: p43 = getfield_gc_r(p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+822: p44 = getfield_gc_r(p28, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+826: guard_class(p43, 16503888, descr=<Guard0x33642f0>) [i23, p30, p28, i37, p33]
+838: i46 = getfield_gc_i(p43, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+842: i47 = int_add_ovf(i46, i40)
+845: guard_no_overflow(descr=<Guard0x3364338>) [i23, p30, p28, i37, p33]
+851: guard_class(p44, 16435920, descr=<Guard0x3364380>) [i23, p30, p28, i37, p33]
+863: p49 = getfield_gc_r(p44, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+874: guard_value(p49, ConstPtr(ptr50), descr=<Guard0x33643c8>) [i23, p30, p28, i37, p33]
+883: p51 = getfield_gc_r(p44, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+887: p52 = getfield_gc_r(p44, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+891: guard_class(p51, 16504944, descr=<Guard0x3364410>) [i23, p30, p28, i37, p33]
+903: p54 = getfield_gc_r(p51, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+907: guard_class(p54, 16505296, descr=<Guard0x3364458>) [i23, p30, p28, i37, p33]
+919: guard_class(p52, 16435920, descr=<Guard0x33644a0>) [i23, p30, p28, i37, p33]
+931: p57 = getfield_gc_r(p52, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+935: guard_nonnull_class(p57, ConstClass(ForwardLink), descr=<Guard0x32fc440>) [i23, p30, p28, i37, p33]
debug_merge_point(0, 0, '(- n 2) from (+ AppRand1 AppRand3)')
+953: i59 = getfield_gc_i(p51, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+957: i61 = int_sub_ovf(i59, 2)
+961: guard_no_overflow(descr=<Guard0x33644e8>) [i23, p30, p28, i37, p33]
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+967: jump(i61, p57, p54, i47, p52, descr=TargetToken(53683568))
+992: --end of the loop--
[3e4c1f06df636c5] jit-log-opt-loop}
[3e4c1f06df6fd60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288c70 +0  49BBE09C2813877F000041FFE3
[3e4c1f06df71742] jit-backend-dump}
[3e4c1f06e04fb05] {jit-backend
[3e4c1f06e07ab32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a3e
[3e4c1f06e08042a] jit-backend-dump}
[3e4c1f06e0898ec] {jit-backend-addr
Loop 6 ((- n 2) from (+ AppRand1 AppRand3)) has address 0x7f871328a4bd to 0x7f871328a570 (bootstrap 0x7f871328a430)
       gc table: 0x7f871328a3e0
       function: 0x7f871328a430
         resops: 0x7f871328a4bd
       failures: 0x7f871328a570
            end: 0x7f871328a662
[3e4c1f06e08c250] jit-backend-addr}
[3e4c1f06e08ff15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a4d4 +0  C6000000
[3e4c1f06e091056] jit-backend-dump}
[3e4c1f06e09433d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a4e2 +0  D4000000
[3e4c1f06e095083] jit-backend-dump}
[3e4c1f06e09814c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a4f5 +0  DD000000
[3e4c1f06e098e8a] jit-backend-dump}
[3e4c1f06e09beb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a509 +0  E5000000
[3e4c1f06e09cbe5] jit-backend-dump}
[3e4c1f06e09fc43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a521 +0  E9000000
[3e4c1f06e0a094c] jit-backend-dump}
[3e4c1f06e0a3945] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a538 +0  EE000000
[3e4c1f06e0a465e] jit-backend-dump}
[3e4c1f06e0a768b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a54a +0  F8000000
[3e4c1f06e0a8394] jit-backend-dump}
[3e4c1f06e0abdce] jit-backend}
[3e4c1f06e0b2d27] {jit-log-opt-loop
# Loop 6 ((- n 2) from (+ AppRand1 AppRand3)) : entry bridge with 20 ops
[p0, p1]
debug_merge_point(0, 0, '(- n 2) from (+ AppRand1 AppRand3)')
+229: guard_not_invalidated(descr=<Guard0x32fc4a0>) [p1, p0]
+229: guard_class(p0, 16504944, descr=<Guard0x3364530>) [p1, p0]
+248: i3 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+252: i5 = int_sub_ovf(i3, 2)
+256: guard_no_overflow(descr=<Guard0x3364578>) [p1, p0]
+262: guard_class(p1, 16437216, descr=<Guard0x33645c0>) [p1, p0]
+281: p7 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+292: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3364608>) [p1, p0]
+301: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+305: i10 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.LetContSize1Fixed.inst_vals_fixed_0 40 pure>)
+309: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
+313: guard_class(p11, 16435920, descr=<Guard0x3364650>) [p1, p0]
+325: p13 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+329: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x32fc500>) [p1, p0]
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+348: guard_nonnull_class(p9, 16505296, descr=<Guard0x32fc560>) [i5, i10, p9, p11, p13]
+366: jump(i5, p13, p9, i10, p11, descr=TargetToken(53683568))
+400: --end of the loop--
[3e4c1f06e0c9ece] jit-log-opt-loop}
[3e4c1f06e2099d6] {jit-backend
[3e4c1f06e22ec56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a
[3e4c1f06e2348aa] jit-backend-dump}
[3e4c1f06e23dde9] {jit-backend-addr
Loop 7 ((- n 2) from (< n 2)) has address 0x7f871328a7ed to 0x7f871328a8a0 (bootstrap 0x7f871328a760)
       gc table: 0x7f871328a710
       function: 0x7f871328a760
         resops: 0x7f871328a7ed
       failures: 0x7f871328a8a0
            end: 0x7f871328a992
[3e4c1f06e24054e] jit-backend-addr}
[3e4c1f06e244355] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a804 +0  C6000000
[3e4c1f06e245424] jit-backend-dump}
[3e4c1f06e248638] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a812 +0  D4000000
[3e4c1f06e2494b3] jit-backend-dump}
[3e4c1f06e24c4f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a825 +0  DD000000
[3e4c1f06e24d1ea] jit-backend-dump}
[3e4c1f06e2501d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a839 +0  E5000000
[3e4c1f06e250eb8] jit-backend-dump}
[3e4c1f06e253e4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a851 +0  E9000000
[3e4c1f06e254b43] jit-backend-dump}
[3e4c1f06e257ad4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a868 +0  EE000000
[3e4c1f06e2587bf] jit-backend-dump}
[3e4c1f06e25b6fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328a87a +0  F8000000
[3e4c1f06e25c400] jit-backend-dump}
[3e4c1f06e25fd5e] jit-backend}
[3e4c1f06e263785] {jit-log-opt-loop
# Loop 7 ((- n 2) from (< n 2)) : entry bridge with 20 ops
[p0, p1]
debug_merge_point(0, 0, '(- n 2) from (< n 2)')
+229: guard_not_invalidated(descr=<Guard0x32fc5c0>) [p1, p0]
+229: guard_class(p0, 16504944, descr=<Guard0x3364698>) [p1, p0]
+248: i3 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+252: i5 = int_sub_ovf(i3, 2)
+256: guard_no_overflow(descr=<Guard0x33646e0>) [p1, p0]
+262: guard_class(p1, 16437216, descr=<Guard0x3364728>) [p1, p0]
+281: p7 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+292: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3364770>) [p1, p0]
+301: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+305: i10 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.LetContSize1Fixed.inst_vals_fixed_0 40 pure>)
+309: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
+313: guard_class(p11, 16435920, descr=<Guard0x33647b8>) [p1, p0]
+325: p13 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+329: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x32fc620>) [p1, p0]
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+348: guard_nonnull_class(p9, 16505296, descr=<Guard0x32fc680>) [i5, i10, p9, p11, p13]
+366: jump(i5, p13, p9, i10, p11, descr=TargetToken(53683568))
+400: --end of the loop--
[3e4c1f06e278263] jit-log-opt-loop}
[3e4c1f06e36df39] {jit-backend
[3e4c1f06e38e638] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328aa00 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C7200000048FF042500C540024883FE020F8D000000004C8B7A0841813F102001000F85000000004C8B71084983FE01720741813E900F00000F85000000004C8B6A104983ED020F80000000004D89E94C89B5300100004C89BD380100004889F24889CF49BBD09E2813877F000041FFE3660F1F44000048C7442408FFFFFF0049BBA0A92813877F00004C895D204D8D9B50C9FFFF41FFD3E968FFFFFFFF3524FFFFFF49BBB0A92813877F000041534D8D9B50C6FFFF41FFE3FF3510FFFFFF49BBC0A92813877F000041534D8D9B40C6FFFF41FFE3FF35FCFEFFFF49BBD0A92813877F000041534D8D9B30C6FFFF41FFE3FF35E8FEFFFF49BBE0A92813877F000041534D8D9B20C6FFFF41FFE3FF35D4FEFFFF49BBF0A92813877F000041534D8D9B10C6FFFF41FFE3
[3e4c1f06e392322] jit-backend-dump}
[3e4c1f06e39b61c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328aa34 +0  1E000000
[3e4c1f06e39ca94] jit-backend-dump}
[3e4c1f06e3a04e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328aab5 +0  1E000000
[3e4c1f06e3a12d8] jit-backend-dump}
[3e4c1f06e3a44d9] {jit-backend-addr
bridge out of Guard 0x32d7388 has address 0x7f871328aa30 to 0x7f871328aab0
       gc table: 0x7f871328aa00
    jump target: 0x7f871328aa30
         resops: 0x7f871328aa3e
       failures: 0x7f871328aab0
            end: 0x7f871328ab62
[3e4c1f06e3a673f] jit-backend-addr}
[3e4c1f06e3a9d47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328aa4c +0  A2000000
[3e4c1f06e3aaaa9] jit-backend-dump}
[3e4c1f06e3add06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328aa5d +0  AD000000
[3e4c1f06e3ae9f4] jit-backend-dump}
[3e4c1f06e3b1bd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328aa74 +0  B2000000
[3e4c1f06e3b28bb] jit-backend-dump}
[3e4c1f06e3b590a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328aa82 +0  C0000000
[3e4c1f06e3b6656] jit-backend-dump}
[3e4c1f06e3b99f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713288a2e +0  FE1F0000
[3e4c1f06e3ba72b] jit-backend-dump}
[3e4c1f06e3be581] jit-backend}
[3e4c1f06e3c1e98] {jit-log-opt-bridge
# bridge out of Guard 0x32d7388 with 17 ops
[p0, p1, i2, p3, p4]
+70: guard_not_invalidated(descr=<Guard0x32fc6e0>) [p0, p1, i2, p3, p4]
+70: i6 = int_lt(i2, 2)
+74: guard_true(i6, descr=<Guard0x3364800>) [p0, p1, i2, p3, p4]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
+80: p7 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+84: guard_class(p7, 16505296, descr=<Guard0x3364848>) [p0, p1, i2, p3, p4]
+97: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+101: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x32fc740>) [p0, p1, i2, p3, p4]
debug_merge_point(0, 0, '(- n 2) from (< n 2)')
+120: i11 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+124: i13 = int_sub_ovf(i11, 2)
+128: guard_no_overflow(descr=<Guard0x3364890>) [p0, p1, i2, p3, p4]
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+134: jump(i13, p9, p7, i2, p0, descr=TargetToken(53683568))
+176: --end of the loop--
[3e4c1f06e3d44e3] jit-log-opt-bridge}
[3e4c1f06e4f6002] {jit-backend
[3e4c1f06e52e124] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ac
[3e4c1f06e534ddc] jit-backend-dump}
[3e4c1f06e53e1f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ad14 +0  1E000000
[3e4c1f06e53f447] jit-backend-dump}
[3e4c1f06e542fce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ae45 +0  1E000000
[3e4c1f06e543dcc] jit-backend-dump}
[3e4c1f06e547146] {jit-backend-addr
bridge out of Guard 0x332df58 has address 0x7f871328ad10 to 0x7f871328ae40
       gc table: 0x7f871328ac80
    jump target: 0x7f871328ad10
         resops: 0x7f871328ad1e
       failures: 0x7f871328ae40
            end: 0x7f871328b00a
[3e4c1f06e5493b2] jit-backend-addr}
[3e4c1f06e54c829] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ad2e +0  34010000
[3e4c1f06e54d5d8] jit-backend-dump}
[3e4c1f06e55079c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ad45 +0  39010000
[3e4c1f06e5514f1] jit-backend-dump}
[3e4c1f06e5545ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ad51 +0  65010000
[3e4c1f06e5552ae] jit-backend-dump}
[3e4c1f06e558252] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ad5f +0  73010000
[3e4c1f06e558f49] jit-backend-dump}
[3e4c1f06e55bee9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ad73 +0  7B010000
[3e4c1f06e55cbf2] jit-backend-dump}
[3e4c1f06e55fb6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ad89 +0  81010000
[3e4c1f06e560859] jit-backend-dump}
[3e4c1f06e5637d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ad96 +0  90010000
[3e4c1f06e5644b9] jit-backend-dump}
[3e4c1f06e5673e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ada3 +0  9F010000
[3e4c1f06e5680df] jit-backend-dump}
[3e4c1f06e56b02a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328adb7 +0  A7010000
[3e4c1f06e56bd24] jit-backend-dump}
[3e4c1f06e56ec4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328adcd +0  AD010000
[3e4c1f06e56f947] jit-backend-dump}
[3e4c1f06e572882] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328adde +0  B8010000
[3e4c1f06e573588] jit-backend-dump}
[3e4c1f06e5764ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328adec +0  C6010000
[3e4c1f06e5771a8] jit-backend-dump}
[3e4c1f06e57a109] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ae04 +0  CA010000
[3e4c1f06e57ae06] jit-backend-dump}
[3e4c1f06e57dd5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ae12 +0  D8010000
[3e4c1f06e57ea60] jit-backend-dump}
[3e4c1f06e581c5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289e1c +0  F00E0000
[3e4c1f06e58299b] jit-backend-dump}
[3e4c1f06e5867e8] jit-backend}
[3e4c1f06e58a2ba] {jit-log-opt-bridge
# bridge out of Guard 0x332df58 with 39 ops
[p0, p1]
+166: guard_class(p1, 16435920, descr=<Guard0x32fc7a0>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+182: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x32fc800>) [p0, p1]
debug_merge_point(0, 0, '(< n 2)')
+201: guard_not_invalidated(descr=<Guard0x33648d8>) [p0, p1]
+201: guard_class(p0, 16504944, descr=<Guard0x3364920>) [p0, p1]
+213: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+217: i8 = int_lt(i6, 2)
+221: guard_true(i8, descr=<Guard0x3364968>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
+227: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+238: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x33649b0>) [p0, p1]
+247: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+251: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2)')
+255: guard_class(p11, 16503888, descr=<Guard0x33649f8>) [p0, p1]
+269: i14 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+273: i15 = int_add_ovf(i14, i6)
+276: guard_no_overflow(descr=<Guard0x3364a40>) [p0, p1]
+282: guard_class(p12, 16435920, descr=<Guard0x3364a88>) [p0, p1]
+295: p17 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+306: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3364ad0>) [p0, p1]
+315: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+319: p20 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+323: guard_class(p19, 16504944, descr=<Guard0x3364b18>) [p0, p1]
+337: p22 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+341: guard_class(p22, 16505296, descr=<Guard0x3364b60>) [p0, p1]
+354: guard_class(p20, 16435920, descr=<Guard0x3364ba8>) [p0, p1]
+368: p25 = getfield_gc_r(p20, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+373: guard_nonnull_class(p25, ConstClass(ForwardLink), descr=<Guard0x32fc860>) [p0, p1]
debug_merge_point(0, 0, '(- n 2) from (+ AppRand1 AppRand3)')
+392: i27 = getfield_gc_i(p19, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+396: i29 = int_sub_ovf(i27, 2)
+400: guard_no_overflow(descr=<Guard0x3364bf0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+406: jump(i29, p25, p22, i15, p20, descr=TargetToken(53683568))
+448: --end of the loop--
[3e4c1f06e5b11b6] jit-log-opt-bridge}
[3e4c1f06e669af5] {jit-backend
[3e4c1f06e6989c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b0e
[3e4c1f06e69e110] jit-backend-dump}
[3e4c1f06e6a766c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b144 +0  1E000000
[3e4c1f06e6a88b1] jit-backend-dump}
[3e4c1f06e6ac1c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b225 +0  1E000000
[3e4c1f06e6acf39] jit-backend-dump}
[3e4c1f06e6b0103] {jit-backend-addr
bridge out of Guard 0x332dd18 has address 0x7f871328b140 to 0x7f871328b220
       gc table: 0x7f871328b0e0
    jump target: 0x7f871328b140
         resops: 0x7f871328b14e
       failures: 0x7f871328b220
            end: 0x7f871328b37a
[3e4c1f06e6b251c] jit-backend-addr}
[3e4c1f06e6b58f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b15e +0  00010000
[3e4c1f06e6b6619] jit-backend-dump}
[3e4c1f06e6b9734] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b16f +0  0B010000
[3e4c1f06e6ba425] jit-backend-dump}
[3e4c1f06e6bd4a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b180 +0  16010000
[3e4c1f06e6be162] jit-backend-dump}
[3e4c1f06e6c11c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b18c +0  26010000
[3e4c1f06e6c1e76] jit-backend-dump}
[3e4c1f06e6c4efc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b1a0 +0  2E010000
[3e4c1f06e6c5b9d] jit-backend-dump}
[3e4c1f06e6c8bf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b1b6 +0  34010000
[3e4c1f06e6c98af] jit-backend-dump}
[3e4c1f06e6cc910] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b1c8 +0  3E010000
[3e4c1f06e6cd5ae] jit-backend-dump}
[3e4c1f06e6d06cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b1d5 +0  4D010000
[3e4c1f06e6d137e] jit-backend-dump}
[3e4c1f06e6d43c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b1ec +0  52010000
[3e4c1f06e6d5064] jit-backend-dump}
[3e4c1f06e6d809b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b1fa +0  60010000
[3e4c1f06e6d8d36] jit-backend-dump}
[3e4c1f06e6dbfa5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328978b +0  B1190000
[3e4c1f06e6dcc5f] jit-backend-dump}
[3e4c1f06e6e0a8a] jit-backend}
[3e4c1f06e6e457e] {jit-log-opt-bridge
# bridge out of Guard 0x332dd18 with 27 ops
[p0, p1]
+118: guard_not_invalidated(descr=<Guard0x32fc8c0>) [p0, p1]
+118: guard_class(p1, 16504944, descr=<Guard0x3364c38>) [p0, p1]
+130: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+134: guard_class(p3, 16503888, descr=<Guard0x3364c80>) [p0, p1]
+147: i5 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+151: i6 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+155: i7 = int_add_ovf(i5, i6)
+158: guard_no_overflow(descr=<Guard0x3364cc8>) [p0, p1]
+164: guard_class(p0, 16435920, descr=<Guard0x3364d10>) [p0, p1]
+176: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+187: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3364d58>) [p0, p1]
+196: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+200: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+204: guard_class(p11, 16504944, descr=<Guard0x3364da0>) [p0, p1]
+218: p14 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+222: guard_class(p14, 16505296, descr=<Guard0x3364de8>) [p0, p1]
+236: guard_class(p12, 16435920, descr=<Guard0x3364e30>) [p0, p1]
+249: p17 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+253: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x32fc920>) [p0, p1]
debug_merge_point(0, 0, '(- n 2) from (+ AppRand1 AppRand3)')
+272: i19 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+276: i21 = int_sub_ovf(i19, 2)
+280: guard_no_overflow(descr=<Guard0x3364e78>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+286: jump(i21, p17, p14, i7, p12, descr=TargetToken(53683568))
+320: --end of the loop--
[3e4c1f06e6fd7d9] jit-log-opt-bridge}
[3e4c1f06e7df10b] {jit-backend
[3e4c1f06e8123ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b3d
[3e4c1f06e8164dd] jit-backend-dump}
[3e4c1f06e8227c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b3f4 +0  1E000000
[3e4c1f06e823d47] jit-backend-dump}
[3e4c1f06e827a6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b4c5 +0  1E000000
[3e4c1f06e828847] jit-backend-dump}
[3e4c1f06e82b9da] {jit-backend-addr
bridge out of Guard 0x3364218 has address 0x7f871328b3f0 to 0x7f871328b4c0
       gc table: 0x7f871328b3d0
    jump target: 0x7f871328b3f0
         resops: 0x7f871328b3fe
       failures: 0x7f871328b4c0
            end: 0x7f871328b53b
[3e4c1f06e82dbba] jit-backend-addr}
[3e4c1f06e831141] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b40c +0  0F010000
[3e4c1f06e831f64] jit-backend-dump}
[3e4c1f06e8353a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289ede +0  0E150000
[3e4c1f06e8360c0] jit-backend-dump}
[3e4c1f06e839f4d] jit-backend}
[3e4c1f06e83d9a2] {jit-log-opt-bridge
# bridge out of Guard 0x3364218 with 23 ops
[i0, p1, p2, i3, p4]
+54: guard_not_invalidated(descr=<Guard0x32fc980>) [i0, p1, p2, i3, p4]
+54: i6 = int_lt(i3, 2)
+58: guard_false(i6, descr=<Guard0x3364ec0>) [i0, p1, p2, i3, p4]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1)')
+64: i8 = int_sub(i3, 1)
debug_merge_point(0, 0, '(let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fib AppRand0)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)')
+68: p9 = new_with_vtable(descr=<SizeDescr 24>)
+112: p10 = new_with_vtable(descr=<SizeDescr 40>)
+123: p11 = new_with_vtable(descr=<SizeDescr 32>)
+135: setfield_gc(p11, p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+146: setfield_gc(p11, i0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+150: setfield_gc(p11, i3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+161: setfield_gc(p9, ConstPtr(ptr12), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+165: setfield_gc(p9, i3, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+169: setfield_gc(p10, p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+180: setfield_gc(p10, p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+184: setfield_gc(p10, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+195: setfield_gc(p10, ConstPtr(ptr13), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+199: jump(ConstPtr(ptr14), i8, p4, p9, p10, descr=TargetToken(53170032))
+240: --end of the loop--
[3e4c1f06e8537b9] jit-log-opt-bridge}
[3e4c1f06e9560c2] {jit-backend
[3e4c1f06e98660b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b5f
[3e4c1f06e98bb2a] jit-backend-dump}
[3e4c1f06e9953a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b644 +0  1E000000
[3e4c1f06e996795] jit-backend-dump}
[3e4c1f06e99a296] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b705 +0  1E000000
[3e4c1f06e99b041] jit-backend-dump}
[3e4c1f06e99e208] {jit-backend-addr
bridge out of Guard 0x33642a8 has address 0x7f871328b640 to 0x7f871328b700
       gc table: 0x7f871328b5f0
    jump target: 0x7f871328b640
         resops: 0x7f871328b64e
       failures: 0x7f871328b700
            end: 0x7f871328b822
[3e4c1f06e9a047e] jit-backend-addr}
[3e4c1f06e9a3bbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b65c +0  E2000000
[3e4c1f06e9a495d] jit-backend-dump}
[3e4c1f06e9a7bf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b668 +0  F2000000
[3e4c1f06e9a88cf] jit-backend-dump}
[3e4c1f06e9ab9d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b67c +0  FA000000
[3e4c1f06e9ac6ba] jit-backend-dump}
[3e4c1f06e9af7d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b692 +0  00010000
[3e4c1f06e9b04c9] jit-backend-dump}
[3e4c1f06e9b3571] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b6a4 +0  0A010000
[3e4c1f06e9b426b] jit-backend-dump}
[3e4c1f06e9b7300] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b6b1 +0  19010000
[3e4c1f06e9b7ff4] jit-backend-dump}
[3e4c1f06e9bb0cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b6c8 +0  1E010000
[3e4c1f06e9bbdc0] jit-backend-dump}
[3e4c1f06e9bee61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b6d6 +0  2C010000
[3e4c1f06e9bfb52] jit-backend-dump}
[3e4c1f06e9c2ee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289efe +0  3E170000
[3e4c1f06e9c3bfc] jit-backend-dump}
[3e4c1f06e9c7a7a] jit-backend}
[3e4c1f06e9cb4e5] {jit-log-opt-bridge
# bridge out of Guard 0x33642a8 with 26 ops
[i0, p1, p2, i3, p4]
+102: guard_not_invalidated(descr=<Guard0x32fc9e0>) [i0, p1, p2, i3, p4]
+102: i6 = int_lt(i3, 2)
+106: guard_true(i6, descr=<Guard0x3364f08>) [i0, p1, p2, i3, p4]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2)')
+112: i7 = int_add_ovf(i0, i3)
+118: guard_no_overflow(descr=<Guard0x3364f50>) [i0, p1, p2, i3, p4]
+124: p8 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+135: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3364f98>) [i0, p1, p2, i3, p4]
+144: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+148: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+152: guard_class(p10, 16504944, descr=<Guard0x3364fe0>) [i0, p1, p2, i3, p4]
+166: p13 = getfield_gc_r(p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+170: guard_class(p13, 16505296, descr=<Guard0x3365028>) [i0, p1, p2, i3, p4]
+184: guard_class(p11, 16435920, descr=<Guard0x3365070>) [i0, p1, p2, i3, p4]
+197: p16 = getfield_gc_r(p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+201: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x32fca40>) [i0, p1, p2, i3, p4]
debug_merge_point(0, 0, '(- n 2) from (+ AppRand1 AppRand3)')
+220: i18 = getfield_gc_i(p10, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+224: i20 = int_sub_ovf(i18, 2)
+228: guard_no_overflow(descr=<Guard0x33650b8>) [i0, p1, p2, i3, p4]
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+234: jump(i20, p16, p13, i7, p11, descr=TargetToken(53683568))
+272: --end of the loop--
[3e4c1f06e9e97d7] jit-log-opt-bridge}
[3e4c1f06eaa2c8c] {jit-backend
[3e4c1f06ead4906] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328b8f
[3e4c1f06eadac20] jit-backend-dump}
[3e4c1f06eae42b9] {jit-backend-addr
Loop 13 ((+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)) has address 0x7f871328b9dd to 0x7f871328bac0 (bootstrap 0x7f871328b950)
       gc table: 0x7f871328b8f0
       function: 0x7f871328b950
         resops: 0x7f871328b9dd
       failures: 0x7f871328bac0
            end: 0x7f871328bc06
[3e4c1f06eae6c85] jit-backend-addr}
[3e4c1f06eaeaa02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba07 +0  E3000000
[3e4c1f06eaebb4c] jit-backend-dump}
[3e4c1f06eaeeeb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba17 +0  EF000000
[3e4c1f06eaefcb1] jit-backend-dump}
[3e4c1f06eaf2e4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba28 +0  FA000000
[3e4c1f06eaf3b7b] jit-backend-dump}
[3e4c1f06eaf6c50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba3b +0  03010000
[3e4c1f06eaf790a] jit-backend-dump}
[3e4c1f06eafa9b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba4f +0  0B010000
[3e4c1f06eafb671] jit-backend-dump}
[3e4c1f06eafe768] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba70 +0  22010000
[3e4c1f06eaff43d] jit-backend-dump}
[3e4c1f06eb0260e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba7d +0  31010000
[3e4c1f06eb03314] jit-backend-dump}
[3e4c1f06eb064e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba89 +0  41010000
[3e4c1f06eb071c8] jit-backend-dump}
[3e4c1f06eb0a254] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba9d +0  49010000
[3e4c1f06eb0af30] jit-backend-dump}
[3e4c1f06eb0ea61] jit-backend}
[3e4c1f06eb12607] {jit-log-opt-loop
# Loop 13 ((+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)) : loop with 30 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(53683648))
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+264: guard_not_invalidated(descr=<Guard0x32fcaa0>) [p1, p0]
+264: guard_class(p0, 16504944, descr=<Guard0x3365100>) [p1, p0]
+283: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+287: guard_class(p3, 16503888, descr=<Guard0x3365148>) [p1, p0]
+299: i5 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+303: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+307: i7 = int_add_ovf(i5, i6)
+310: guard_no_overflow(descr=<Guard0x3365190>) [p1, p0]
+316: guard_class(p1, 16435920, descr=<Guard0x33651d8>) [p1, p0]
+335: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+346: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3365220>) [p1, p0]
+355: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+359: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+363: label(p11, i7, p12, descr=TargetToken(53683728))
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+376: guard_not_invalidated(descr=<Guard0x32fcb00>) [p12, i7, p11]
+376: guard_class(p11, 16503888, descr=<Guard0x3365268>) [p12, i7, p11]
+388: i14 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+392: i15 = int_add_ovf(i14, i7)
+395: guard_no_overflow(descr=<Guard0x33652b0>) [p12, i7, p11]
+401: guard_class(p12, 16435920, descr=<Guard0x33652f8>) [p12, i7, p11]
+413: p17 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+424: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3365340>) [p12, i7, p11]
+433: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+437: p20 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+441: jump(p19, i15, p20, descr=TargetToken(53683728))
+464: --end of the loop--
[3e4c1f06eb2ea07] jit-log-opt-loop}
[3e4c1f06ebd78de] {jit-backend
[3e4c1f06ebf96b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bc90 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8200000048FF0425E02DC6028139B01E01000F85000000004C8B790841813F901A01000F85000000004D8B77104C8B79104D01F70F8000000000813A101100000F85000000004C8B72204C8B2D8DFFFFFF4D39EE0F85000000004C8B6A104C8B72184C89EE4C89F84C89F349BB60BA2813877F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BB18BC2813877F00004C895D204D8D9BD8B6FFFF41FFD3E958FFFFFFFF3504FFFFFF49BB28BC2813877F000041534D8D9BD8B3FFFF41FFE3FF35F0FEFFFF49BB38BC2813877F000041534D8D9BC8B3FFFF41FFE3FF35DCFEFFFF49BB48BC2813877F000041534D8D9BB8B3FFFF41FFE3FF35C8FEFFFF49BB58BC2813877F000041534D8D9BA8B3FFFF41FFE3FF35B4FEFFFF49BB68BC2813877F000041534D8D9B98B3FFFF41FFE3FF35A8FEFFFF49BB78BC2813877F000041534D8D9B88B3FFFF41FFE3
[3e4c1f06ebfd785] jit-backend-dump}
[3e4c1f06ec068ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bcd4 +0  1E000000
[3e4c1f06ec07cd7] jit-backend-dump}
[3e4c1f06ec0b6b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bd65 +0  1E000000
[3e4c1f06ec0c3e6] jit-backend-dump}
[3e4c1f06ec0f652] {jit-backend-addr
bridge out of Guard 0x332dbb0 has address 0x7f871328bcd0 to 0x7f871328bd60
       gc table: 0x7f871328bc90
    jump target: 0x7f871328bcd0
         resops: 0x7f871328bcde
       failures: 0x7f871328bd60
            end: 0x7f871328be2e
[3e4c1f06ec11813] jit-backend-addr}
[3e4c1f06ec14c69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bcee +0  B0000000
[3e4c1f06ec159dd] jit-backend-dump}
[3e4c1f06ec18c3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bcff +0  BB000000
[3e4c1f06ec19906] jit-backend-dump}
[3e4c1f06ec1c9d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bd10 +0  C6000000
[3e4c1f06ec1d692] jit-backend-dump}
[3e4c1f06ec2075b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bd1c +0  D6000000
[3e4c1f06ec21405] jit-backend-dump}
[3e4c1f06ec244ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bd30 +0  DE000000
[3e4c1f06ec251a1] jit-backend-dump}
[3e4c1f06ec284ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328972c +0  A0250000
[3e4c1f06ec29190] jit-backend-dump}
[3e4c1f06ec2d1dc] jit-backend}
[3e4c1f06ec30bd5] {jit-log-opt-bridge
# bridge out of Guard 0x332dbb0 with 15 ops
[p0, p1]
+86: guard_not_invalidated(descr=<Guard0x32fcb60>) [p0, p1]
+86: guard_class(p1, 16504944, descr=<Guard0x3365388>) [p0, p1]
+98: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+102: guard_class(p3, 16503888, descr=<Guard0x33653d0>) [p0, p1]
+115: i5 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+119: i6 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+123: i7 = int_add_ovf(i5, i6)
+126: guard_no_overflow(descr=<Guard0x3365418>) [p0, p1]
+132: guard_class(p0, 16435920, descr=<Guard0x3365460>) [p0, p1]
+144: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+155: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x33654a8>) [p0, p1]
+164: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+168: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+172: jump(p11, i7, p12, descr=TargetToken(53683728))
+208: --end of the loop--
[3e4c1f06ec412f1] jit-log-opt-bridge}
[3e4c1f06ed1f46f] {jit-backend
[3e4c1f06ed3f9da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328be90 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C5200000048FF0425302EC6024983F9020F8D000000004D89C74D01C80F80000000004C8B77204C8B2DB1FFFFFF4D39EE0F85000000004C8B6F104C8B77184C89EE4C89C04C89F349BB60BA2813877F000041FFE3669048C7442408FFFFFF0049BB38BE2813877F00004C895D204D8D9BB8B4FFFF41FFD3E988FFFFFFFF3544FFFFFF49BB48BE2813877F000041534D8D9BB8B1FFFF41FFE3FF3530FFFFFF49BB58BE2813877F000041534D8D9BA8B1FFFF41FFE3FF351CFFFFFF49BB68BE2813877F000041534D8D9B98B1FFFF41FFE3FF3510FFFFFF49BB78BE2813877F000041534D8D9B88B1FFFF41FFE3
[3e4c1f06ed433e0] jit-backend-dump}
[3e4c1f06ed4cc0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bec4 +0  1E000000
[3e4c1f06ed4de36] jit-backend-dump}
[3e4c1f06ed5199f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bf25 +0  1E000000
[3e4c1f06ed526fe] jit-backend-dump}
[3e4c1f06ed558fc] {jit-backend-addr
bridge out of Guard 0x33643c8 has address 0x7f871328bec0 to 0x7f871328bf20
       gc table: 0x7f871328be90
    jump target: 0x7f871328bec0
         resops: 0x7f871328bece
       failures: 0x7f871328bf20
            end: 0x7f871328bfb6
[3e4c1f06ed57a6d] jit-backend-addr}
[3e4c1f06ed5af22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bedc +0  82000000
[3e4c1f06ed5bcfe] jit-backend-dump}
[3e4c1f06ed5eee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328bee8 +0  92000000
[3e4c1f06ed5fbe7] jit-backend-dump}
[3e4c1f06ed62c02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328befc +0  9A000000
[3e4c1f06ed638da] jit-backend-dump}
[3e4c1f06ed66b9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289f3f +0  7D1F0000
[3e4c1f06ed67889] jit-backend-dump}
[3e4c1f06ed6b741] jit-backend}
[3e4c1f06ed6f125] {jit-log-opt-bridge
# bridge out of Guard 0x33643c8 with 14 ops
[i0, p1, p2, i3, p4]
+70: guard_not_invalidated(descr=<Guard0x32fcbc0>) [i0, p1, p2, i3, p4]
+70: i6 = int_lt(i3, 2)
+74: guard_true(i6, descr=<Guard0x33654f0>) [i0, p1, p2, i3, p4]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, 'n')
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (< n 2)')
+80: i7 = int_add_ovf(i0, i3)
+86: guard_no_overflow(descr=<Guard0x3365538>) [i0, p1, p2, i3, p4]
+92: p8 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+103: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3365580>) [i0, p1, p2, i3, p4]
+112: p10 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+116: p11 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(+ AppRand1 AppRand3) from (+ AppRand1 AppRand3)')
+120: jump(p10, i7, p11, descr=TargetToken(53683728))
+144: --end of the loop--
[3e4c1f06ed7f39e] jit-log-opt-bridge}
[3e4c1f06ee6983a] {jit-backend
[3e4c1f06ee8e6aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c
[3e4c1f06ee9291f] jit-backend-dump}
[3e4c1f06ee9ba0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c074 +0  1E000000
[3e4c1f06ee9cd73] jit-backend-dump}
[3e4c1f06eea076a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c105 +0  1E000000
[3e4c1f06eea1524] jit-backend-dump}
[3e4c1f06eea47ec] {jit-backend-addr
bridge out of Guard 0x332ddf0 has address 0x7f871328c070 to 0x7f871328c100
       gc table: 0x7f871328c030
    jump target: 0x7f871328c070
         resops: 0x7f871328c07e
       failures: 0x7f871328c100
            end: 0x7f871328c1ce
[3e4c1f06eea68c5] jit-backend-addr}
[3e4c1f06eea9d05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c08e +0  94000000
[3e4c1f06eeaaa89] jit-backend-dump}
[3e4c1f06eeadcfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c0a5 +0  99000000
[3e4c1f06eeae9ca] jit-backend-dump}
[3e4c1f06eeb1c7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c0b1 +0  C5000000
[3e4c1f06eeb294c] jit-backend-dump}
[3e4c1f06eeb5b5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c0bf +0  D3000000
[3e4c1f06eeb67eb] jit-backend-dump}
[3e4c1f06eeb9a45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c0d7 +0  D7000000
[3e4c1f06eeba714] jit-backend-dump}
[3e4c1f06eebdac4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f8713289dce +0  9E220000
[3e4c1f06eebe7f2] jit-backend-dump}
[3e4c1f06eec26b6] jit-backend}
[3e4c1f06eec6066] {jit-log-opt-bridge
# bridge out of Guard 0x332ddf0 with 20 ops
[p0, p1]
+86: guard_class(p1, 16435920, descr=<Guard0x32fcc20>) [p0, p1]
+98: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+102: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x32fcc80>) [p0, p1]
debug_merge_point(0, 0, '(< n 2)')
+121: guard_not_invalidated(descr=<Guard0x33655c8>) [p0, p1]
+121: guard_class(p0, 16504944, descr=<Guard0x3365610>) [p0, p1]
+133: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+137: i8 = int_lt(i6, 2)
+141: guard_false(i8, descr=<Guard0x3365658>) [p0, p1]
debug_merge_point(0, 0, '(if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))')
debug_merge_point(0, 0, '(let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))))')
debug_merge_point(0, 0, '(- n 1)')
+147: i10 = int_sub(i6, 1)
debug_merge_point(0, 0, '(let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))')
debug_merge_point(0, 0, '(fib AppRand0)')
+151: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+162: i13 = instance_ptr_eq(p11, ConstPtr(ptr12))
+165: guard_true(i13, descr=<Guard0x33656a0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand0)')
+171: jump(p11, i10, p3, p0, p1, descr=TargetToken(53170032))
+208: --end of the loop--
[3e4c1f06eedaa3d] jit-log-opt-bridge}
[3e4c1f06efac86f] {jit-backend
[3e4c1f06efd4acf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c
[3e4c1f06efd9ba1] jit-backend-dump}
[3e4c1f06efe317d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c2f4 +0  1E000000
[3e4c1f06efe4427] jit-backend-dump}
[3e4c1f06efe7cae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c3c5 +0  1E000000
[3e4c1f06efe8a69] jit-backend-dump}
[3e4c1f06efebce4] {jit-backend-addr
bridge out of Guard 0x3365340 has address 0x7f871328c2f0 to 0x7f871328c3c0
       gc table: 0x7f871328c290
    jump target: 0x7f871328c2f0
         resops: 0x7f871328c2fe
       failures: 0x7f871328c3c0
            end: 0x7f871328c4fe
[3e4c1f06efee103] jit-backend-addr}
[3e4c1f06eff15e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c30e +0  F0000000
[3e4c1f06eff23ec] jit-backend-dump}
[3e4c1f06eff559b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c31b +0  FF000000
[3e4c1f06eff625e] jit-backend-dump}
[3e4c1f06eff92f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c327 +0  0F010000
[3e4c1f06eff9f9a] jit-backend-dump}
[3e4c1f06effcfd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c33b +0  17010000
[3e4c1f06effdcaf] jit-backend-dump}
[3e4c1f06f000cd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c351 +0  1D010000
[3e4c1f06f00198a] jit-backend-dump}
[3e4c1f06f0049b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c363 +0  27010000
[3e4c1f06f00565b] jit-backend-dump}
[3e4c1f06f0086ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c370 +0  36010000
[3e4c1f06f009351] jit-backend-dump}
[3e4c1f06f00c394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c387 +0  3B010000
[3e4c1f06f00d041] jit-backend-dump}
[3e4c1f06f01009f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328c395 +0  49010000
[3e4c1f06f010d50] jit-backend-dump}
[3e4c1f06f013fc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f871328ba9d +0  4F080000
[3e4c1f06f014cb9] jit-backend-dump}
[3e4c1f06f018c90] jit-backend}
[3e4c1f06f01c830] {jit-log-opt-bridge
# bridge out of Guard 0x3365340 with 24 ops
[p0, i1, p2]
+118: guard_not_invalidated(descr=<Guard0x32fcce0>) [p0, i1, p2]
+118: guard_class(p2, 16503888, descr=<Guard0x33656e8>) [p0, i1, p2]
+130: i4 = getfield_gc_i(p2, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+134: i5 = int_add_ovf(i4, i1)
+137: guard_no_overflow(descr=<Guard0x3365730>) [p0, i1, p2]
+143: guard_class(p0, 16435920, descr=<Guard0x3365778>) [p0, i1, p2]
+155: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+166: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x33657c0>) [p0, i1, p2]
+175: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+179: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+183: guard_class(p9, 16504944, descr=<Guard0x3365808>) [p0, i1, p2]
+197: p12 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+201: guard_class(p12, 16505296, descr=<Guard0x3365850>) [p0, i1, p2]
+215: guard_class(p10, 16435920, descr=<Guard0x3365898>) [p0, i1, p2]
+228: p15 = getfield_gc_r(p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+232: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x32fcd40>) [p0, i1, p2]
debug_merge_point(0, 0, '(- n 2) from (+ AppRand1 AppRand3)')
+251: i17 = getfield_gc_i(p9, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+255: i19 = int_sub_ovf(i17, 2)
+259: guard_no_overflow(descr=<Guard0x33658e0>) [p0, i1, p2]
debug_merge_point(0, 0, '(let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3))')
debug_merge_point(0, 0, '(fib AppRand2)')
debug_merge_point(0, 0, '(let ([if0 (< n 2)]) (if if0 n (let ([AppRand0 (- n 1)]) (let ([AppRand1 (fib AppRand0)][AppRand2 (- n 2)]) (let ([AppRand3 (fib AppRand2)]) (+ AppRand1 AppRand3)))))) from (fib AppRand2)')
+265: jump(i19, p15, p12, i5, p10, descr=TargetToken(53683568))
+304: --end of the loop--
[3e4c1f06f0351bf] jit-log-opt-bridge}
[3e4c208a6118a7a] {jit-summary
Tracing:      	17	0.009315
Backend:      	17	0.003613
TOTAL:      		40.112512
ops:             	6474
recorded ops:    	1584
  calls:         	0
guards:          	397
opt ops:         	558
opt guards:      	190
opt guards shared:	151
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	30
nvholes:         	0
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	7
Total # of bridges:	10
Freed # of loops:	0
Freed # of bridges:	0
[3e4c208a612c397] jit-summary}
[3e4c208a613760a] {jit-backend-counts
entry 1:371
TargetToken(53169952):371
TargetToken(53170032):3732587242
entry 2:109
bridge 53310560:25
entry 4:183
entry 5:395
TargetToken(53683488):395
TargetToken(53683568):3732587051
entry 6:35
entry 7:11
bridge 53310344:1425721595
bridge 53665624:0
bridge 53665048:21
bridge 53887512:1425720998
bridge 53887656:1425721546
entry 13:13
TargetToken(53683648):13
TargetToken(53683728):881144069
bridge 53664688:14
bridge 53887944:336567163
bridge 53665264:258
bridge 53891904:336566882
[3e4c208a613e56d] jit-backend-counts}
