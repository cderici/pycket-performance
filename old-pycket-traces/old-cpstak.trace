[3e4c1960f2b7a25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a11000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c1960f2cd15b] jit-backend-dump}
[3e4c1960f301d0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a110b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c1960f304e9a] jit-backend-dump}
[3e4c1960f310ce5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a11180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c1960f3158af] jit-backend-dump}
[3e4c1960f31ce8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a111f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c1960f31edfe] jit-backend-dump}
[3e4c1960f327088] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a11270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c1960f328b89] jit-backend-dump}
[3e4c1960f331685] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a112f
[3e4c1960f335423] jit-backend-dump}
[3e4c1960f33acb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c1960f33d1a8] jit-backend-dump}
[3e4c1960f342176] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c1960f344555] jit-backend-dump}
[3e4c1960f3cfd66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c1960f3d2c65] jit-backend-dump}
[3e4c1960f3d937f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a118f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B528010000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B528010000C20800
[3e4c1960f3dbd79] jit-backend-dump}
[3e4c1960f3e0afc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a11a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c1960f3e23a5] jit-backend-dump}
[3e4c1960f3f424d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a11af
[3e4c1960f3f7424] jit-backend-dump}
[3e4c1960f3ff1d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a11ce
[3e4c1960f4022e6] jit-backend-dump}
[3e4c1960f40a6d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a11ee0 +0  4889455848895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC084889D741BB80D2720041FFD3488B0C258893F900488B69F8F64504010F85EA0000004883C4084885C00F84CC0000004889C1488B4558488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B52801000048C7452000000000C34883C40849BB701AA162097F000041FFE349BB7012A162097F000041FFD3E904FFFFFF
[3e4c1960f40d7dc] jit-backend-dump}
[3e4c1960f413c86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a120d
[3e4c1960f416bf0] jit-backend-dump}
[3e4c1960f4202eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a122c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB7012A162097F000041FFD3E99CFFFFFF
[3e4c1960f4220c7] jit-backend-dump}
[3e4c1960f427535] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB7012A162097F000041FFD3E9BCFFFFFF
[3e4c1960f428d73] jit-backend-dump}
[3e4c1960f42e0f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c1960f430c8c] jit-backend-dump}
[3e4c1960f4364d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a125c
[3e4c1960f438b24] jit-backend-dump}
[3e4c1960f448246] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB701AA162097F000041FFE3
[3e4c1960f4499f1] jit-backend-dump}
[3e4c1960fa8ba4f] {jit-backend
[3e4c1960fbdd0e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12a
[3e4c1960fbec257] jit-backend-dump}
[3e4c1960fbfbd45] {jit-backend-addr
Loop 1 ((let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))) has address 0x7f0962a12c4d to 0x7f0962a13010 (bootstrap 0x7f0962a12bc0)
       gc table: 0x7f0962a12a80
       function: 0x7f0962a12bc0
         resops: 0x7f0962a12c4d
       failures: 0x7f0962a13010
            end: 0x7f0962a1342f
[3e4c1960fc006f2] jit-backend-addr}
[3e4c1960fc05988] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12c77 +0  C4030000
[3e4c1960fc06e09] jit-backend-dump}
[3e4c1960fc0a35d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12c8d +0  CA030000
[3e4c1960fc0b17f] jit-backend-dump}
[3e4c1960fc0e4ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12ca0 +0  EF030000
[3e4c1960fc0f1e6] jit-backend-dump}
[3e4c1960fc123ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12cb6 +0  F5030000
[3e4c1960fc130aa] jit-backend-dump}
[3e4c1960fc15e86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12ccc +0  FB030000
[3e4c1960fc16be2] jit-backend-dump}
[3e4c1960fc19946] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12cdd +0  06040000
[3e4c1960fc1a684] jit-backend-dump}
[3e4c1960fc1d43b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12cf3 +0  0C040000
[3e4c1960fc1e159] jit-backend-dump}
[3e4c1960fc20eb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12d09 +0  12040000
[3e4c1960fc21bd3] jit-backend-dump}
[3e4c1960fc2494d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12d1d +0  1A040000
[3e4c1960fc25672] jit-backend-dump}
[3e4c1960fc28410] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12d2e +0  25040000
[3e4c1960fc2910d] jit-backend-dump}
[3e4c1960fc2bed4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12d48 +0  27040000
[3e4c1960fc2cc1a] jit-backend-dump}
[3e4c1960fc2f97e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12d56 +0  35040000
[3e4c1960fc30697] jit-backend-dump}
[3e4c1960fc333e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12d6d +0  3A040000
[3e4c1960fc3413f] jit-backend-dump}
[3e4c1960fc36ea6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12d84 +0  3F040000
[3e4c1960fc37bb2] jit-backend-dump}
[3e4c1960fc3a920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12d91 +0  4E040000
[3e4c1960fc3b63f] jit-backend-dump}
[3e4c1960fc3e3b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12da6 +0  55040000
[3e4c1960fc3f0e3] jit-backend-dump}
[3e4c1960fc41e57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12dba +0  5D040000
[3e4c1960fc42b82] jit-backend-dump}
[3e4c1960fc458e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12dcb +0  68040000
[3e4c1960fc465f9] jit-backend-dump}
[3e4c1960fc49351] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12de2 +0  6D040000
[3e4c1960fc4a088] jit-backend-dump}
[3e4c1960fc4cddd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e00 +0  6B040000
[3e4c1960fc4db08] jit-backend-dump}
[3e4c1960fc5087c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e19 +0  6E040000
[3e4c1960fc5158e] jit-backend-dump}
[3e4c1960fc54370] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e2d +0  76040000
[3e4c1960fc55079] jit-backend-dump}
[3e4c1960fc57e52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e41 +0  7E040000
[3e4c1960fc58b77] jit-backend-dump}
[3e4c1960fc5ba9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e5d +0  9A040000
[3e4c1960fc5c802] jit-backend-dump}
[3e4c1960fc5f722] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e71 +0  A2040000
[3e4c1960fc60465] jit-backend-dump}
[3e4c1960fc631e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e7f +0  B0040000
[3e4c1960fc63f0a] jit-backend-dump}
[3e4c1960fc66bf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e8d +0  BE040000
[3e4c1960fc678d5] jit-backend-dump}
[3e4c1960fc6a658] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e96 +0  D1040000
[3e4c1960fc6b355] jit-backend-dump}
[3e4c1960fc6e0c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12ea7 +0  DC040000
[3e4c1960fc6ede8] jit-backend-dump}
[3e4c1960fc71bbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12ec6 +0  D9040000
[3e4c1960fc728e5] jit-backend-dump}
[3e4c1960fc757a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12ede +0  DD040000
[3e4c1960fc764ac] jit-backend-dump}
[3e4c1960fc791c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12efa +0  DD040000
[3e4c1960fc79f08] jit-backend-dump}
[3e4c1960fc7cc41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12f0c +0  E7040000
[3e4c1960fc7d96f] jit-backend-dump}
[3e4c1960fc80760] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12fa9 +0  66040000
[3e4c1960fc81491] jit-backend-dump}
[3e4c1960fc84ecb] jit-backend}
[3e4c1960fc88bfb] {jit-log-opt-loop
# Loop 1 ((let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))) : loop with 121 ops
[p0, p1]
+469: label(p0, p1, descr=TargetToken(63233168))
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+488: guard_class(p1, 16435208, descr=<Guard0x3c48980>) [p0, p1]
+507: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+511: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c489e0>) [p0, p1]
debug_merge_point(0, 0, '(< y4845 x4843)')
+529: guard_not_invalidated(descr=<Guard0x3cbf388>) [p0, p1]
+529: guard_class(p0, 16500720, descr=<Guard0x3cbf3d0>) [p0, p1]
+548: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+552: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3c48a40>) [p0, p1]
+570: p8 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+574: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3c48aa0>) [p0, p1]
+592: i10 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+596: i11 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+600: i12 = int_lt(i10, i11)
+603: guard_false(i12, descr=<Guard0x3cbf418>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+609: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+613: guard_nonnull_class(p13, 16479200, descr=<Guard0x3c48b00>) [p0, p1]
+631: p15 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+635: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3c48b60>) [p0, p1]
+653: p17 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+664: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3cbf460>) [p0, p1]
+673: p19 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+677: guard_class(p19, 16499664, descr=<Guard0x3cbf4a8>) [p0, p1]
+690: p21 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+690: i22 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))) from (k z4847)')
debug_merge_point(0, 0, '(- y4845 1)')
+694: p23 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+698: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x3c48bc0>) [p0, p1]
+716: i25 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+720: i27 = int_sub_ovf(i25, 1)
+724: guard_no_overflow(descr=<Guard0x3cbf4f0>) [p0, p1]
debug_merge_point(0, 0, '(tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
+730: p28 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+734: guard_nonnull_class(p28, 16510992, descr=<Guard0x3c48c20>) [p0, p1]
+753: p30 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+757: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3c48c80>) [p0, p1]
+776: p32 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+780: guard_nonnull(p32, descr=<Guard0x3cbf538>) [p0, p1]
+789: p33 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+793: p34 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+797: guard_class(p34, 16505296, descr=<Guard0x3cbf580>) [p0, p1]
+810: p36 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+821: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x3cbf5c8>) [p0, p1]
+830: p38 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+834: i39 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+838: i40 = int_lt(i39, i27)
+841: guard_true(i40, descr=<Guard0x3cbf610>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
+847: i42 = int_sub(i27, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+858: guard_class(p38, 16499664, descr=<Guard0x3cbf658>) [p0, p1]
+870: p44 = getfield_gc_r(p38, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+881: guard_nonnull_class(p44, 16510992, descr=<Guard0x3c48ce0>) [p0, p1]
+900: p46 = getfield_gc_r(p38, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+911: guard_class(p46, 16505296, descr=<Guard0x3cbf6a0>) [p0, p1]
+925: p48 = getfield_gc_r(p44, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+936: guard_value(p48, ConstPtr(ptr49), descr=<Guard0x3cbf6e8>) [p0, p1]
+945: p50 = getfield_gc_r(p44, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+956: i51 = instance_ptr_eq(p38, p50)
+959: guard_true(i51, descr=<Guard0x3cbf730>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+965: label(p38, i42, p30, p32, p46, p34, p33, p23, i22, p28, i27, p44, p1, p3, i39, p50, descr=TargetToken(63233248))
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+984: guard_not_invalidated(descr=<Guard0x3c48d40>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
+984: i52 = int_lt(i39, i42)
+987: guard_false(i52, descr=<Guard0x3cbf778>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+993: guard_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3cbf7c0>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
+1013: i54 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))) from (k z4847)')
debug_merge_point(0, 0, '(- y4845 1)')
+1017: i56 = int_sub_ovf(i39, 1)
+1021: guard_no_overflow(descr=<Guard0x3cbf808>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
debug_merge_point(0, 0, '(tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
+1027: guard_class(p46, 16505296, descr=<Guard0x3cbf850>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+1041: i58 = int_lt(i54, i56)
+1044: guard_true(i58, descr=<Guard0x3cbf898>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
+1050: i60 = int_sub(i56, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+1054: guard_class(p50, 16499664, descr=<Guard0x3cbf8e0>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
+1067: p62 = getfield_gc_r(p50, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1078: guard_nonnull_class(p62, 16510992, descr=<Guard0x3c48da0>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
+1098: p64 = getfield_gc_r(p50, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1109: guard_class(p64, 16505296, descr=<Guard0x3cbf928>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
+1122: p66 = getfield_gc_r(p62, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+1141: guard_value(p66, ConstPtr(ptr67), descr=<Guard0x3cbf970>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
+1150: p68 = getfield_gc_r(p62, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+1155: i69 = instance_ptr_eq(p50, p68)
+1162: guard_true(i69, descr=<Guard0x3cbf9b8>) [i27, i22, p28, p23, p33, p34, p44, p46, i42, p32, p30, p38, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+1168: p70 = new_with_vtable(descr=<SizeDescr 16>)
+1219: p71 = new_with_vtable(descr=<SizeDescr 72>)
+1230: p72 = new_with_vtable(descr=<SizeDescr 16>)
+1241: setfield_gc(p72, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1245: setfield_gc(p70, i27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1249: setfield_gc(p71, p34, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1260: setfield_gc(p71, ConstPtr(ptr73), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1264: setfield_gc(p71, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+1268: setfield_gc(p71, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+1279: setfield_gc(p71, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+1283: setfield_gc(p71, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+1294: setfield_gc(p71, p72, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+1298: setfield_gc(p71, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+1302: i75 = int_le(i54, 9223372036854775805)
+1319: guard_true(i75, descr=<Guard0x3c48e00>) [p1, i56, i54, p71, p62, p64, i60, p70, p50, None, None, None, None, None, None, p44, p46, None, p32, p30, None, None, None]
+1325: jump(p50, i60, p32, p70, p64, p46, p71, p30, i54, p44, i56, p62, p1, p3, i54, p68, descr=TargetToken(63233248))
+1424: --end of the loop--
[3e4c1960fd2a5b7] jit-log-opt-loop}
[3e4c196102b87a8] {jit-backend
[3e4c196103211e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c1961032be6c] jit-backend-dump}
[3e4c19610336e0b] {jit-backend-addr
Loop 2 ((let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))) from (k z4847)) has address 0x7f0962a137ed to 0x7f0962a13a80 (bootstrap 0x7f0962a13760)
       gc table: 0x7f0962a13650
       function: 0x7f0962a13760
         resops: 0x7f0962a137ed
       failures: 0x7f0962a13a80
            end: 0x7f0962a13e12
[3e4c19610339c39] jit-backend-addr}
[3e4c1961033e2a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13817 +0  77020000
[3e4c1961033f5c7] jit-backend-dump}
[3e4c19610342d10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1382d +0  7D020000
[3e4c19610343b9b] jit-backend-dump}
[3e4c19610346e04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13840 +0  A2020000
[3e4c19610347b50] jit-backend-dump}
[3e4c1961034ac5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13850 +0  AE020000
[3e4c1961034b96c] jit-backend-dump}
[3e4c1961034e833] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13866 +0  B4020000
[3e4c1961034f5c6] jit-backend-dump}
[3e4c196103524f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13874 +0  C2020000
[3e4c1961035324b] jit-backend-dump}
[3e4c1961035617a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1388a +0  C8020000
[3e4c19610356efb] jit-backend-dump}
[3e4c19610359e21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a138a1 +0  CD020000
[3e4c1961035abae] jit-backend-dump}
[3e4c1961035dacb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a138b8 +0  D2020000
[3e4c1961035e848] jit-backend-dump}
[3e4c1961036173a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a138d5 +0  D1020000
[3e4c19610362499] jit-backend-dump}
[3e4c196103653ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a138e9 +0  D9020000
[3e4c1961036610f] jit-backend-dump}
[3e4c19610368fae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a138fa +0  E4020000
[3e4c19610369cdf] jit-backend-dump}
[3e4c1961036cb8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13906 +0  F4020000
[3e4c1961036d8b9] jit-backend-dump}
[3e4c19610370771] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1391e +0  F8020000
[3e4c1961037149f] jit-backend-dump}
[3e4c19610374347] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13931 +0  01030000
[3e4c19610375091] jit-backend-dump}
[3e4c19610377f64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1393e +0  10030000
[3e4c19610378c92] jit-backend-dump}
[3e4c1961037bb41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13952 +0  18030000
[3e4c1961037c863] jit-backend-dump}
[3e4c1961037f8c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1397a +0  28030000
[3e4c196103805fe] jit-backend-dump}
[3e4c196103834c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13988 +0  36030000
[3e4c1961038420c] jit-backend-dump}
[3e4c196103870dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1399e +0  3C030000
[3e4c19610387e04] jit-backend-dump}
[3e4c1961038acda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a139b6 +0  40030000
[3e4c1961038ba0b] jit-backend-dump}
[3e4c1961038e8e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a139cd +0  45030000
[3e4c1961038f616] jit-backend-dump}
[3e4c196103924c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a139e5 +0  49030000
[3e4c196103931e3] jit-backend-dump}
[3e4c1961039607d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a139f9 +0  51030000
[3e4c19610396db4] jit-backend-dump}
[3e4c19610399c53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13a0b +0  5B030000
[3e4c1961039a975] jit-backend-dump}
[3e4c1961039d82d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13a17 +0  6B030000
[3e4c1961039e53f] jit-backend-dump}
[3e4c196103a13d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13a2f +0  6F030000
[3e4c196103a20e8] jit-backend-dump}
[3e4c196103a4fbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13a41 +0  79030000
[3e4c196103a5cdd] jit-backend-dump}
[3e4c196103a8b95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13a4e +0  88030000
[3e4c196103a98b7] jit-backend-dump}
[3e4c196103ac781] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13a62 +0  90030000
[3e4c196103ad4d1] jit-backend-dump}
[3e4c196103b0e59] jit-backend}
[3e4c196103b4aa4] {jit-log-opt-loop
# Loop 2 ((let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))) from (k z4847)) : loop with 98 ops
[p0, p1]
+421: label(p0, p1, descr=TargetToken(63837056))
+440: guard_class(p1, 16435208, descr=<Guard0x3c49040>) [p0, p1]
+459: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+463: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c490a0>) [p0, p1]
debug_merge_point(0, 0, '(- z4847 1)')
+481: guard_not_invalidated(descr=<Guard0x3d13c40>) [p0, p1]
+481: guard_class(p0, 16504944, descr=<Guard0x3d13c88>) [p0, p1]
+500: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+504: guard_class(p6, 16479576, descr=<Guard0x3d13cd0>) [p0, p1]
+516: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+520: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3c49100>) [p0, p1]
+538: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+542: i12 = int_sub_ovf(i10, 1)
+546: guard_no_overflow(descr=<Guard0x3d13d18>) [p0, p1]
debug_merge_point(0, 0, '(tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
+552: p13 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+556: guard_nonnull_class(p13, 16510992, descr=<Guard0x3c49160>) [p0, p1]
+574: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+578: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3c491c0>) [p0, p1]
+597: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+601: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3c49220>) [p0, p1]
+620: p19 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+624: i20 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+628: p21 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+632: p22 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+636: guard_class(p22, 16505296, descr=<Guard0x3d13d60>) [p0, p1]
+649: p24 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+660: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3d13da8>) [p0, p1]
+669: p26 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+673: i27 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+677: i28 = int_lt(i27, i12)
+680: guard_false(i28, descr=<Guard0x3d13df0>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+686: guard_class(p26, 16499664, descr=<Guard0x3d13e38>) [p0, p1]
+698: p30 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+698: i31 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(tak v1 v2 v3 k) from (k z4847)')
+702: guard_nonnull_class(p21, ConstClass(W_Fixnum), descr=<Guard0x3c49280>) [p0, p1]
+722: guard_nonnull_class(p19, 16479576, descr=<Guard0x3c492e0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
debug_merge_point(0, 0, '(< y4845 x4843)')
+741: i34 = getfield_gc_i(p21, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+745: i35 = int_lt(i20, i34)
+748: guard_false(i35, descr=<Guard0x3d13e80>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+754: p36 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+765: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x3d13ec8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))) from (k z4847)')
+774: label(p19, i31, p1, p3, descr=TargetToken(63837136))
debug_merge_point(0, 0, '(- z4847 1)')
+792: guard_not_invalidated(descr=<Guard0x3c49340>) [i31, p19, p1, p3]
+792: p38 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+796: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3c493a0>) [i31, p19, p1, p3]
+814: i40 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+818: i42 = int_sub_ovf(i40, 1)
+822: guard_no_overflow(descr=<Guard0x3d13f10>) [i31, p19, p1, p3]
debug_merge_point(0, 0, '(tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
+828: p43 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+832: guard_nonnull_class(p43, 16510992, descr=<Guard0x3c49400>) [i31, p19, p1, p3]
+850: p45 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+854: guard_nonnull_class(p45, ConstClass(W_Fixnum), descr=<Guard0x3c49460>) [i31, p19, p1, p3]
+874: p47 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+878: guard_nonnull_class(p47, ConstClass(W_Fixnum), descr=<Guard0x3c494c0>) [i31, p19, p1, p3]
+897: p49 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+901: p50 = getfield_gc_r(p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+905: p51 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+909: guard_class(p51, 16505296, descr=<Guard0x3d13f58>) [i31, p19, p1, p3]
+921: p53 = getfield_gc_r(p43, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+932: guard_value(p53, ConstPtr(ptr54), descr=<Guard0x3d13fa0>) [i31, p19, p1, p3]
+941: p55 = getfield_gc_r(p43, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+945: i56 = getfield_gc_i(p45, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+950: i57 = int_lt(i56, i42)
+953: guard_false(i57, descr=<Guard0x3d4c020>) [i31, p19, p1, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+959: guard_class(p55, 16499664, descr=<Guard0x3d4c068>) [i31, p19, p1, p3]
+971: p59 = getfield_gc_r(p55, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+971: i60 = getfield_gc_i(p47, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(tak v1 v2 v3 k) from (k z4847)')
+975: guard_nonnull_class(p50, ConstClass(W_Fixnum), descr=<Guard0x3c49520>) [i31, p19, p1, p3]
+995: guard_nonnull_class(p49, 16479576, descr=<Guard0x3c49580>) [i31, p19, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
debug_merge_point(0, 0, '(< y4845 x4843)')
+1013: i63 = getfield_gc_i(p50, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1017: i64 = int_lt(i31, i63)
+1020: guard_false(i64, descr=<Guard0x3d4c0b0>) [i31, p19, p1, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+1026: p65 = getfield_gc_r(p49, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1037: guard_value(p65, ConstPtr(ptr66), descr=<Guard0x3d4c0f8>) [i31, p19, p1, p3]
debug_merge_point(0, 0, '(let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))) from (k z4847)')
+1046: jump(p49, i60, p1, p3, descr=TargetToken(63837136))
+1072: --end of the loop--
[3e4c19610406502] jit-log-opt-loop}
[3e4c1961055a6ae] {jit-backend
[3e4c196105a504a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13f
[3e4c196105ac26f] jit-backend-dump}
[3e4c196105b5f02] {jit-backend-addr
Loop 3 ((let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))) from (k z4847)) has address 0x7f0962a1403d to 0x7f0962a141d0 (bootstrap 0x7f0962a13fb0)
       gc table: 0x7f0962a13f30
       function: 0x7f0962a13fb0
         resops: 0x7f0962a1403d
       failures: 0x7f0962a141d0
            end: 0x7f0962a14387
[3e4c196105b8d0c] jit-backend-addr}
[3e4c196105bcfcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14054 +0  A7010000
[3e4c196105be0ff] jit-backend-dump}
[3e4c196105c1808] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1406a +0  AD010000
[3e4c196105c2609] jit-backend-dump}
[3e4c196105c57c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1407d +0  D2010000
[3e4c196105c64c7] jit-backend-dump}
[3e4c196105c94cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1408d +0  DE010000
[3e4c196105ca1bd] jit-backend-dump}
[3e4c196105cd17f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a140a3 +0  E4010000
[3e4c196105cde5a] jit-backend-dump}
[3e4c196105d0eda] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a140b1 +0  F2010000
[3e4c196105d1ba6] jit-backend-dump}
[3e4c196105d4bd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a140c8 +0  F7010000
[3e4c196105d58ae] jit-backend-dump}
[3e4c196105d892b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a140df +0  FC010000
[3e4c196105d9600] jit-backend-dump}
[3e4c196105dc4a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a140f6 +0  01020000
[3e4c196105dd187] jit-backend-dump}
[3e4c196105e0070] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1410f +0  04020000
[3e4c196105e0d67] jit-backend-dump}
[3e4c196105e3c2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14123 +0  0C020000
[3e4c196105e48f1] jit-backend-dump}
[3e4c196105e77af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14134 +0  17020000
[3e4c196105e847b] jit-backend-dump}
[3e4c196105eb31b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14141 +0  26020000
[3e4c196105ebfdb] jit-backend-dump}
[3e4c196105ef960] jit-backend}
[3e4c196105f34a4] {jit-log-opt-loop
# Loop 3 ((let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))) from (k z4847)) : entry bridge with 51 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))) from (k z4847)')
+277: guard_class(p1, 16435208, descr=<Guard0x3c495e0>) [p0, p1]
+296: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c49640>) [p0, p1]
debug_merge_point(0, 0, '(- y4845 1)')
+318: guard_not_invalidated(descr=<Guard0x3d4c140>) [p0, p1]
+318: guard_class(p0, 16504944, descr=<Guard0x3d4c188>) [p0, p1]
+337: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+341: guard_class(p6, 16479200, descr=<Guard0x3d4c1d0>) [p0, p1]
+353: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+357: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3c496a0>) [p0, p1]
+375: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+379: i12 = int_sub_ovf(i10, 1)
+383: guard_no_overflow(descr=<Guard0x3d4c218>) [p0, p1]
debug_merge_point(0, 0, '(tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
+389: p13 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+393: guard_nonnull_class(p13, 16510992, descr=<Guard0x3c49700>) [p0, p1]
+412: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+416: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3c49760>) [p0, p1]
+435: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+439: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3c497c0>) [p0, p1]
+458: p19 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+462: i20 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+466: p21 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+470: guard_class(p21, 16505296, descr=<Guard0x3d4c260>) [p0, p1]
+483: p23 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+494: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x3d4c2a8>) [p0, p1]
+503: p25 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+507: i26 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+511: i27 = int_lt(i26, i12)
+514: guard_false(i27, descr=<Guard0x3d4c2f0>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+520: guard_class(p25, 16499664, descr=<Guard0x3d4c338>) [p0, p1]
+533: p29 = getfield_gc_r(p25, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+533: i30 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))) from (k z4847)')
+537: p31 = new_with_vtable(descr=<SizeDescr 72>)
+581: p32 = new_with_vtable(descr=<SizeDescr 16>)
+592: setfield_gc(p32, i20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+596: setfield_gc(p31, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+607: setfield_gc(p31, ConstPtr(ptr33), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+611: setfield_gc(p31, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+615: setfield_gc(p31, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+619: setfield_gc(p31, p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+623: setfield_gc(p31, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+627: setfield_gc(p31, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+631: setfield_gc(p31, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+635: jump(p31, i30, p1, p3, descr=TargetToken(63837136))
+672: --end of the loop--
[3e4c1961061dbce] jit-log-opt-loop}
[3e4c196107766a3] {jit-backend
[3e4c196107cb2de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c196107d468a] jit-backend-dump}
[3e4c196107dea39] {jit-backend-addr
Loop 4 ((tak v1 v2 v3 k) from (k z4847)) has address 0x7f0962a1464d to 0x7f0962a14830 (bootstrap 0x7f0962a145c0)
       gc table: 0x7f0962a14500
       function: 0x7f0962a145c0
         resops: 0x7f0962a1464d
       failures: 0x7f0962a14830
            end: 0x7f0962a14aaa
[3e4c196107e1720] jit-backend-addr}
[3e4c196107e59a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14677 +0  C7010000
[3e4c196107e6b6c] jit-backend-dump}
[3e4c196107ea2b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14687 +0  D3010000
[3e4c196107eb08e] jit-backend-dump}
[3e4c196107ee11d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1469d +0  D9010000
[3e4c196107eedef] jit-backend-dump}
[3e4c196107f20a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a146b3 +0  DF010000
[3e4c196107f2dae] jit-backend-dump}
[3e4c196107f5faf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a146c9 +0  E5010000
[3e4c196107f6cda] jit-backend-dump}
[3e4c196107f9d2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a146e4 +0  E6010000
[3e4c196107fa9be] jit-backend-dump}
[3e4c196107fd8f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a146f8 +0  EE010000
[3e4c196107fe573] jit-backend-dump}
[3e4c19610801453] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1470f +0  F3010000
[3e4c196108020cf] jit-backend-dump}
[3e4c19610804fe9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14725 +0  F9010000
[3e4c19610805c96] jit-backend-dump}
[3e4c19610808e39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14736 +0  20020000
[3e4c19610809aef] jit-backend-dump}
[3e4c1961080cb78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1474a +0  28020000
[3e4c1961080d807] jit-backend-dump}
[3e4c19610810764] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14757 +0  37020000
[3e4c196108113fc] jit-backend-dump}
[3e4c19610814307] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1478a +0  20020000
[3e4c19610814fa2] jit-backend-dump}
[3e4c19610817f9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a147a0 +0  26020000
[3e4c19610818c2a] jit-backend-dump}
[3e4c1961081bb2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a147b7 +0  2B020000
[3e4c1961081c7d0] jit-backend-dump}
[3e4c1961081f69a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a147cd +0  31020000
[3e4c19610820316] jit-backend-dump}
[3e4c1961082321b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a147e1 +0  39020000
[3e4c19610823eaa] jit-backend-dump}
[3e4c19610826e84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a147f6 +0  5C020000
[3e4c19610827b13] jit-backend-dump}
[3e4c1961082aa02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1480a +0  64020000
[3e4c1961082b6b0] jit-backend-dump}
[3e4c1961082e583] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14816 +0  74020000
[3e4c1961082f212] jit-backend-dump}
[3e4c19610832c61] jit-backend}
[3e4c19610836923] {jit-log-opt-loop
# Loop 4 ((tak v1 v2 v3 k) from (k z4847)) : loop with 62 ops
[p0, p1]
+341: label(p0, p1, descr=TargetToken(63837216))
+360: guard_class(p0, 16504944, descr=<Guard0x3c49820>) [p1, p0]
+379: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+383: guard_class(p3, 16478824, descr=<Guard0x3d4c380>) [p1, p0]
+395: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+399: guard_nonnull_class(p5, 16510992, descr=<Guard0x3c49880>) [p1, p0]
+417: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+421: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x3c498e0>) [p1, p0]
+439: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+443: guard_nonnull_class(p9, ConstClass(W_Fixnum), descr=<Guard0x3c49940>) [p1, p0]
+461: i11 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+465: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+469: guard_nonnull_class(p12, 16478824, descr=<Guard0x3c499a0>) [p1, p0]
+488: p14 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+499: guard_value(p14, ConstPtr(ptr15), descr=<Guard0x3d4c3c8>) [p1, p0]
+508: p16 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+512: p17 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
+512: guard_class(p1, 16435208, descr=<Guard0x3d4c410>) [p1, p0]
+531: p19 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+535: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x3c49a00>) [p1, p0]
debug_merge_point(0, 0, '(< y4845 x4843)')
+553: guard_not_invalidated(descr=<Guard0x3d4c458>) [p1, p0]
+553: i21 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+557: i22 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i23 = int_lt(i21, i22)
+564: guard_false(i23, descr=<Guard0x3d4c4a0>) [p1, p0]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+570: p24 = getfield_gc_r(p12, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+581: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3d4c4e8>) [p1, p0]
+590: guard_class(p16, 16499664, descr=<Guard0x3d4c530>) [p1, p0]
+603: p27 = getfield_gc_r(p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(tak v1 v2 v3 k) from (k z4847)')
+603: label(p12, i11, p1, descr=TargetToken(63837296))
+632: p28 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+636: guard_nonnull_class(p28, 16510992, descr=<Guard0x3c49a60>) [p1, p28, i11, p12]
+654: p30 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+658: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3c49ac0>) [p1, p28, i11, p12]
+676: p32 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+680: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3c49b20>) [p1, p28, i11, p12]
+699: p34 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+703: guard_nonnull_class(p34, 16478824, descr=<Guard0x3c49b80>) [p1, p28, i11, p12]
+721: p36 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+732: guard_value(p36, ConstPtr(ptr37), descr=<Guard0x3d4c578>) [p1, p28, i11, p12]
+741: p38 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+745: p39 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
debug_merge_point(0, 0, '(< y4845 x4843)')
+745: guard_not_invalidated(descr=<Guard0x3d4c5c0>) [p1, p28, i11, p12]
+745: i40 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+749: i41 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+753: i42 = int_lt(i40, i41)
+756: guard_false(i42, descr=<Guard0x3d4c608>) [p1, p28, i11, p12]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+762: p43 = getfield_gc_r(p34, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+773: guard_value(p43, ConstPtr(ptr44), descr=<Guard0x3d4c650>) [p1, p28, i11, p12]
+782: guard_class(p38, 16499664, descr=<Guard0x3d4c698>) [p1, p28, i11, p12]
+794: p46 = getfield_gc_r(p38, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(tak v1 v2 v3 k) from (k z4847)')
+794: jump(p34, i11, p1, descr=TargetToken(63837296))
+816: --end of the loop--
[3e4c1961086c124] jit-log-opt-loop}
[3e4c19610a29307] {jit-backend
[3e4c19610a794ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14b
[3e4c19610a7faa8] jit-backend-dump}
[3e4c19610a8a605] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14c04 +0  1E000000
[3e4c19610a8b942] jit-backend-dump}
[3e4c19610a8f6e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14d75 +0  1E000000
[3e4c19610a9053a] jit-backend-dump}
[3e4c19610a93a63] {jit-backend-addr
bridge out of Guard 0x3c49580 has address 0x7f0962a14c00 to 0x7f0962a14d70
       gc table: 0x7f0962a14b90
    jump target: 0x7f0962a14c00
         resops: 0x7f0962a14c0e
       failures: 0x7f0962a14d70
            end: 0x7f0962a14ee7
[3e4c19610a95f7f] jit-backend-addr}
[3e4c19610a9964b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14c29 +0  A2010000
[3e4c19610a9a4ba] jit-backend-dump}
[3e4c19610a9d5cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14c37 +0  B0010000
[3e4c19610a9e290] jit-backend-dump}
[3e4c19610aa1205] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14c4e +0  B5010000
[3e4c19610aa1e8e] jit-backend-dump}
[3e4c19610aa4d52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14c66 +0  B9010000
[3e4c19610aa59d2] jit-backend-dump}
[3e4c19610aa8991] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14c7e +0  BD010000
[3e4c19610aa969a] jit-backend-dump}
[3e4c19610aac797] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14c96 +0  C1010000
[3e4c19610aad491] jit-backend-dump}
[3e4c19610ab046c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14caa +0  C9010000
[3e4c19610ab114a] jit-backend-dump}
[3e4c19610ab4143] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14ccb +0  C4010000
[3e4c19610ab4e40] jit-backend-dump}
[3e4c19610ab7d72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14cd8 +0  D3010000
[3e4c19610ab8a51] jit-backend-dump}
[3e4c19610abb8b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14ce4 +0  E3010000
[3e4c19610abc588] jit-backend-dump}
[3e4c19610ac11df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13a41 +0  BB110000
[3e4c19610ac1fd1] jit-backend-dump}
[3e4c19610ac854e] jit-backend}
[3e4c19610acc23e] {jit-log-opt-bridge
# bridge out of Guard 0x3c49580 with 43 ops
[i0, p1, p2, p3]
+134: guard_not_invalidated(descr=<Guard0x3c49be0>) [i0, p1, p2, p3]
+134: p4 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+138: guard_nonnull_class(p4, ConstClass(W_Fixnum), descr=<Guard0x3c49c40>) [i0, p1, p2, p3]
+157: i6 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+161: i8 = int_sub_ovf(i6, 1)
+165: guard_no_overflow(descr=<Guard0x3d4c6e0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
+171: p9 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+175: guard_nonnull_class(p9, 16510992, descr=<Guard0x3c49ca0>) [i0, p1, p2, p3]
+194: p11 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+198: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3c49d00>) [i0, p1, p2, p3]
+218: p13 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+222: guard_nonnull_class(p13, ConstClass(W_Fixnum), descr=<Guard0x3c49d60>) [i0, p1, p2, p3]
+242: p15 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+246: p16 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+250: p17 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+254: guard_class(p17, 16505296, descr=<Guard0x3d4c728>) [i0, p1, p2, p3]
+266: p19 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+277: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3d4c770>) [i0, p1, p2, p3]
+286: p21 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
+290: p22 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+301: guard_nonnull_class(p22, ConstClass(ForwardLink), descr=<Guard0x3c49dc0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(< y4845 x4843)')
+319: i24 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+323: i25 = int_lt(i24, i8)
+326: guard_false(i25, descr=<Guard0x3d4c7b8>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+332: guard_class(p21, 16499664, descr=<Guard0x3d4c800>) [i0, p1, p2, p3]
+344: p27 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+344: i28 = getfield_gc_i(p13, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(tak v1 v2 v3 k) from (k z4847)')
+349: p29 = new_with_vtable(descr=<SizeDescr 56>)
+393: p30 = new_with_vtable(descr=<SizeDescr 16>)
+404: setfield_gc(p30, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+408: setfield_gc(p29, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+419: setfield_gc(p29, ConstPtr(ptr31), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+423: setfield_gc(p29, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+427: setfield_gc(p29, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+431: setfield_gc(p29, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+435: setfield_gc(p29, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+439: jump(p29, i28, p2, descr=TargetToken(63837296))
+480: --end of the loop--
[3e4c19610af5427] jit-log-opt-bridge}
[3e4c19610c794fe] {jit-backend
[3e4c19610cc98be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14ff0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C9201000048FF0425B0EBD9028139480E00000F85000000004C8B79084983FF01720741813F900F00000F8500000000813A300E01000F85000000004C8B7A184983FF01720741813F601400000F85000000004C8B72104983FE01720741813E601400000F85000000004D8B6F084D8B66084D39E50F8D000000004D8D6C24FF4C8B620841813C24100A01000F85000000004D8B5424104983FA01720741813A503601000F85000000004C8B4A204D85C90F84000000004C8B4228498B7C2408813F102001000F8500000000498B7208488B1DF8FEFFFF4839DE0F8500000000498B5A104939DC0F85000000004889CB488B0C25F091F900488D9180000000483B14251092F9000F87B000000048891425F091F90048C701300E0100488D513048C702601400004C896A084C8D6A1049C7450020BA000049897D08488B3DA5FEFFFF49897D104D8945184D894D204D897D284D8975304D8955384C897918488951104C8961084C8949204C89692848898D3001000048899D3801000049BB602CA162097F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BBF84EA162097F00004C895D204D8D9BF8C3FFFF41FFD3E948FEFFFF49BBD84FA162097F00004C895D204D8D9B18CBFFFF41FFD3E93BFFFFFFFF3597FDFFFF49BB084FA162097F000041534D8D9BF8C0FFFF41FFE3FF3583FDFFFF49BB184FA162097F000041534D8D9BE8C0FFFF41FFE3FF356FFDFFFF49BB284FA162097F000041534D8D9BD8C0FFFF41FFE3FF355BFDFFFF49BB384FA162097F000041534D8D9BC8C0FFFF41FFE3FF3547FDFFFF49BB484FA162097F000041534D8D9BB8C0FFFF41FFE3FF3533FDFFFF49BB584FA162097F000041534D8D9BA8C0FFFF41FFE3FF351FFDFFFF49BB684FA162097F000041534D8D9B98C0FFFF41FFE3FF350BFDFFFF49BB784FA162097F000041534D8D9B88C0FFFF41FFE3FF35F7FCFFFF49BB884FA162097F000041534D8D9B78C0FFFF41FFE3FF35E3FCFFFF49BB984FA162097F000041534D8D9B68C0FFFF41FFE3FF35CFFCFFFF49BBA84FA162097F000041534D8D9B58C0FFFF41FFE3FF35C3FCFFFF49BBB84FA162097F000041534D8D9B48C0FFFF41FFE3FF35AFFCFFFF49BBC84FA162097F000041534D8D9B38C0FFFF41FFE3
[3e4c19610cd08b6] jit-backend-dump}
[3e4c19610cda88c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15074 +0  25000000
[3e4c19610cdbc2e] jit-backend-dump}
[3e4c19610cdf964] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15215 +0  25000000
[3e4c19610ce0a5f] jit-backend-dump}
[3e4c19610ce3bca] {jit-backend-addr
bridge out of Guard 0x3cbf418 has address 0x7f0962a15070 to 0x7f0962a15210
       gc table: 0x7f0962a14ff0
    jump target: 0x7f0962a15070
         resops: 0x7f0962a1507e
       failures: 0x7f0962a15210
            end: 0x7f0962a153bf
[3e4c19610ce5ee2] jit-backend-addr}
[3e4c19610ce91c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1508e +0  C1010000
[3e4c19610ce9fae] jit-backend-dump}
[3e4c19610ced125] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a150a5 +0  C6010000
[3e4c19610cede3b] jit-backend-dump}
[3e4c19610cf0e9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a150b1 +0  F2010000
[3e4c19610cf1b6e] jit-backend-dump}
[3e4c19610cf4ab3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a150c8 +0  F7010000
[3e4c19610cf578e] jit-backend-dump}
[3e4c19610cf8674] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a150df +0  FC010000
[3e4c19610cf931e] jit-backend-dump}
[3e4c19610cfc1e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a150f0 +0  07020000
[3e4c19610cfce90] jit-backend-dump}
[3e4c19610cffd20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15107 +0  0C020000
[3e4c19610d009ca] jit-backend-dump}
[3e4c19610d03903] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1511f +0  10020000
[3e4c19610d045a1] jit-backend-dump}
[3e4c19610d0741f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1512c +0  1F020000
[3e4c19610d080bd] jit-backend-dump}
[3e4c19610d0af4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15141 +0  26020000
[3e4c19610d0bbfb] jit-backend-dump}
[3e4c19610d0eabf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15155 +0  2E020000
[3e4c19610d0f76f] jit-backend-dump}
[3e4c19610d12603] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15162 +0  3D020000
[3e4c19610d132aa] jit-backend-dump}
[3e4c19610d163db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12cdd +0  8F230000
[3e4c19610d17082] jit-backend-dump}
[3e4c19610d1ae3f] jit-backend}
[3e4c19610d1e7e3] {jit-log-opt-bridge
# bridge out of Guard 0x3cbf418 with 51 ops
[p0, p1]
+150: guard_class(p1, 16435208, descr=<Guard0x3c49e20>) [p0, p1]
+162: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+166: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3c49e80>) [p0, p1]
debug_merge_point(0, 0, '(< y4845 x4843)')
+185: guard_not_invalidated(descr=<Guard0x3d4c848>) [p0, p1]
+185: guard_class(p0, 16500720, descr=<Guard0x3d4c890>) [p0, p1]
+197: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+201: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3c49ee0>) [p0, p1]
+220: p8 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+224: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3c49f40>) [p0, p1]
+243: i10 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+247: i11 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+251: i12 = int_lt(i10, i11)
+254: guard_true(i12, descr=<Guard0x3d4c8d8>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
+260: i14 = int_sub(i11, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+265: p15 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+269: guard_class(p15, 16499664, descr=<Guard0x3d4c920>) [p0, p1]
+283: p17 = getfield_gc_r(p15, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+288: guard_nonnull_class(p17, 16510992, descr=<Guard0x3c49fa0>) [p0, p1]
+307: p19 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+311: guard_nonnull(p19, descr=<Guard0x3d4c968>) [p0, p1]
+320: p20 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+324: p21 = getfield_gc_r(p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+329: guard_class(p21, 16505296, descr=<Guard0x3d4c9b0>) [p0, p1]
+341: p23 = getfield_gc_r(p17, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+352: guard_value(p23, ConstPtr(ptr24), descr=<Guard0x3d4c9f8>) [p0, p1]
+361: p25 = getfield_gc_r(p17, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+365: i26 = instance_ptr_eq(p15, p25)
+368: guard_true(i26, descr=<Guard0x3d4ca40>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+374: p27 = new_with_vtable(descr=<SizeDescr 48>)
+421: p28 = new_with_vtable(descr=<SizeDescr 16>)
+432: setfield_gc(p28, i14, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+436: p29 = new_with_vtable(descr=<SizeDescr 64>)
+448: setfield_gc(p29, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+459: setfield_gc(p29, ConstPtr(ptr30), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+463: setfield_gc(p29, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+467: setfield_gc(p29, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+471: setfield_gc(p29, p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+475: setfield_gc(p29, p8, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+479: setfield_gc(p29, p17, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+483: setfield_gc(p27, p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+487: setfield_gc(p27, p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+491: setfield_gc(p27, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+495: setfield_gc(p27, p19, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+499: setfield_gc(p27, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+503: jump(p27, p1, descr=TargetToken(63233168))
+544: --end of the loop--
[3e4c19610d4893f] jit-log-opt-bridge}
[3e4c19610ef9f6f] {jit-backend
[3e4c19610f5d722] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c19610f65e67] jit-backend-dump}
[3e4c19610f701b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a155d4 +0  1E000000
[3e4c19610f71485] jit-backend-dump}
[3e4c19610f75141] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a157e5 +0  1E000000
[3e4c19610f75ef3] jit-backend-dump}
[3e4c19610f792a6] {jit-backend-addr
bridge out of Guard 0x3c49b80 has address 0x7f0962a155d0 to 0x7f0962a157e0
       gc table: 0x7f0962a15520
    jump target: 0x7f0962a155d0
         resops: 0x7f0962a155de
       failures: 0x7f0962a157e0
            end: 0x7f0962a15a37
[3e4c19610f7b6f9] jit-backend-addr}
[3e4c19610f7eca2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a155f4 +0  2B020000
[3e4c19610f7fa9a] jit-backend-dump}
[3e4c19610f82c21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1560b +0  30020000
[3e4c19610f838c2] jit-backend-dump}
[3e4c19610f86a24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15622 +0  35020000
[3e4c19610f87702] jit-backend-dump}
[3e4c19610f8a6d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1563a +0  39020000
[3e4c19610f8b3a3] jit-backend-dump}
[3e4c19610f8e3e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1564e +0  41020000
[3e4c19610f8f0a8] jit-backend-dump}
[3e4c19610f92113] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1566f +0  3C020000
[3e4c19610f92ddc] jit-backend-dump}
[3e4c19610f95ec0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15680 +0  63020000
[3e4c19610f96b68] jit-backend-dump}
[3e4c19610f99ccd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15694 +0  6B020000
[3e4c19610f9a97a] jit-backend-dump}
[3e4c19610f9daa5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a156a2 +0  79020000
[3e4c19610f9e75f] jit-backend-dump}
[3e4c19610fa1746] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a156ba +0  7D020000
[3e4c19610fa2461] jit-backend-dump}
[3e4c19610fa53ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a156c9 +0  8A020000
[3e4c19610fa60a9] jit-backend-dump}
[3e4c19610fa9090] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a156e0 +0  8F020000
[3e4c19610fa9d5c] jit-backend-dump}
[3e4c19610facc0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a156f7 +0  94020000
[3e4c19610fad8c4] jit-backend-dump}
[3e4c19610fb079e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1570d +0  9A020000
[3e4c19610fb1467] jit-backend-dump}
[3e4c19610fb4303] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15721 +0  A2020000
[3e4c19610fb4fc6] jit-backend-dump}
[3e4c19610fb7e6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1572e +0  B1020000
[3e4c19610fb8b3b] jit-backend-dump}
[3e4c19610fbb9fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1573f +0  BC020000
[3e4c19610fbc6da] jit-backend-dump}
[3e4c19610fbf5c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1574c +0  CB020000
[3e4c19610fc027a] jit-backend-dump}
[3e4c19610fc3456] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a147cd +0  FF0D0000
[3e4c19610fc416f] jit-backend-dump}
[3e4c19610fc7fd4] jit-backend}
[3e4c19610fcb959] {jit-log-opt-bridge
# bridge out of Guard 0x3c49b80 with 69 ops
[p0, p1, i2, p3]
+198: guard_nonnull_class(p1, 16510992, descr=<Guard0x3d54020>) [p0, p1, i2, p3]
+216: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+220: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3d54080>) [p0, p1, i2, p3]
+239: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+243: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x3d540e0>) [p0, p1, i2, p3]
+262: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+266: guard_nonnull_class(p9, 16479200, descr=<Guard0x3d54140>) [p0, p1, i2, p3]
+286: p11 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+297: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3d4ca88>) [p0, p1, i2, p3]
+306: p13 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+310: p14 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
+310: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+321: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x3d541a0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(< y4845 x4843)')
+339: guard_not_invalidated(descr=<Guard0x3d4cad0>) [p0, p1, i2, p3]
+339: i17 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+343: i18 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+347: i19 = int_lt(i17, i18)
+350: guard_false(i19, descr=<Guard0x3d4cb18>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+356: p20 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+367: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x3d4cb60>) [p0, p1, i2, p3]
+376: guard_class(p13, 16499664, descr=<Guard0x3d4cba8>) [p0, p1, i2, p3]
+390: p23 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))) from (k z4847)')
debug_merge_point(0, 0, '(- y4845 1)')
+390: p24 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+394: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x3d54200>) [p0, p1, i2, p3]
+414: i26 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+419: i28 = int_sub_ovf(i26, 1)
+423: guard_no_overflow(descr=<Guard0x3d4cbf0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
+429: p29 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+433: guard_nonnull_class(p29, 16510992, descr=<Guard0x3d54260>) [p0, p1, i2, p3]
+452: p31 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+456: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3d542c0>) [p0, p1, i2, p3]
+475: p33 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+479: guard_nonnull_class(p33, ConstClass(W_Fixnum), descr=<Guard0x3d54320>) [p0, p1, i2, p3]
+497: p35 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+501: p36 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+505: guard_class(p36, 16505296, descr=<Guard0x3d4cc38>) [p0, p1, i2, p3]
+517: p38 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+521: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x3d4cc80>) [p0, p1, i2, p3]
+530: p40 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+534: i41 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+538: i42 = int_lt(i41, i28)
+541: guard_false(i42, descr=<Guard0x3d4ccc8>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+547: guard_class(p40, 16499664, descr=<Guard0x3d4cd10>) [p0, p1, i2, p3]
+560: p44 = getfield_gc_r(p40, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+560: i45 = getfield_gc_i(p33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))) from (k z4847)')
+564: p46 = new_with_vtable(descr=<SizeDescr 72>)
+608: p47 = new_with_vtable(descr=<SizeDescr 16>)
+619: setfield_gc(p47, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+630: setfield_gc(p46, p36, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+641: setfield_gc(p46, ConstPtr(ptr48), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+645: setfield_gc(p46, p35, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+649: setfield_gc(p46, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+653: setfield_gc(p46, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+657: setfield_gc(p46, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+661: setfield_gc(p46, p47, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+665: setfield_gc(p46, p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+669: jump(p46, i45, p0, p15, descr=TargetToken(63837136))
+704: --end of the loop--
[3e4c1961100a578] jit-log-opt-bridge}
[3e4c19611189baa] {jit-backend
[3e4c196111eb051] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15ba
[3e4c196111f3c27] jit-backend-dump}
[3e4c196111fe221] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15c64 +0  1E000000
[3e4c196111ff72e] jit-backend-dump}
[3e4c196112034a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15e85 +0  1E000000
[3e4c196112043d8] jit-backend-dump}
[3e4c19611207809] {jit-backend-addr
bridge out of Guard 0x3cbf610 has address 0x7f0962a15c60 to 0x7f0962a15e80
       gc table: 0x7f0962a15ba0
    jump target: 0x7f0962a15c60
         resops: 0x7f0962a15c6e
       failures: 0x7f0962a15e80
            end: 0x7f0962a160f3
[3e4c19611209bb6] jit-backend-addr}
[3e4c1961120d1e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15c86 +0  39020000
[3e4c1961120dfd2] jit-backend-dump}
[3e4c1961121119c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15c9d +0  3E020000
[3e4c19611211ea8] jit-backend-dump}
[3e4c19611214f68] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15ca9 +0  6A020000
[3e4c19611215c37] jit-backend-dump}
[3e4c19611218bce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15cc1 +0  6E020000
[3e4c196112198f9] jit-backend-dump}
[3e4c1961121c860] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15cd9 +0  72020000
[3e4c1961121d52f] jit-backend-dump}
[3e4c19611220470] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15ceb +0  7C020000
[3e4c19611221155] jit-backend-dump}
[3e4c196112240a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15d03 +0  80020000
[3e4c19611224d72] jit-backend-dump}
[3e4c19611227f36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15d1a +0  85020000
[3e4c19611228c1d] jit-backend-dump}
[3e4c1961122bb71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15d2e +0  8D020000
[3e4c1961122c846] jit-backend-dump}
[3e4c1961122f7bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15d3f +0  98020000
[3e4c1961123048b] jit-backend-dump}
[3e4c196112333e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15d5a +0  99020000
[3e4c196112340b4] jit-backend-dump}
[3e4c19611236ff6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15d68 +0  A7020000
[3e4c19611237cb9] jit-backend-dump}
[3e4c1961123ac10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15d7f +0  AC020000
[3e4c1961123b8fa] jit-backend-dump}
[3e4c1961123e87c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15d95 +0  B2020000
[3e4c1961123f570] jit-backend-dump}
[3e4c196112424c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15dab +0  B8020000
[3e4c19611243199] jit-backend-dump}
[3e4c196112460db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15dbf +0  C0020000
[3e4c19611246db9] jit-backend-dump}
[3e4c19611249d13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15dd3 +0  C8020000
[3e4c1961124a9f2] jit-backend-dump}
[3e4c1961124d92a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15de4 +0  D3020000
[3e4c1961124e5ed] jit-backend-dump}
[3e4c1961125151f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15df0 +0  E3020000
[3e4c196112521e2] jit-backend-dump}
[3e4c1961125539a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12dcb +0  912E0000
[3e4c196112560c8] jit-backend-dump}
[3e4c19611259df2] jit-backend}
[3e4c1961125d884] {jit-log-opt-bridge
# bridge out of Guard 0x3cbf610 with 69 ops
[p0, p1]
+214: guard_class(p1, 16435208, descr=<Guard0x3d54380>) [p0, p1]
+234: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+238: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3d543e0>) [p0, p1]
debug_merge_point(0, 0, '(< y4845 x4843)')
+257: guard_not_invalidated(descr=<Guard0x3d4cd58>) [p0, p1]
+257: guard_class(p0, 16500720, descr=<Guard0x3d4cda0>) [p0, p1]
+269: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+273: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3d54440>) [p0, p1]
+293: p8 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+297: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3d544a0>) [p0, p1]
+317: i10 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+321: i11 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+326: i12 = int_lt(i10, i11)
+329: guard_false(i12, descr=<Guard0x3d4cde8>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+335: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+339: guard_nonnull_class(p13, 16479200, descr=<Guard0x3d54500>) [p0, p1]
+359: p15 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+363: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3d54560>) [p0, p1]
+382: p17 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+393: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x3d4ce30>) [p0, p1]
+402: p19 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+406: guard_class(p19, 16499664, descr=<Guard0x3d4ce78>) [p0, p1]
+419: p21 = getfield_gc_r(p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+419: i22 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))) from (k z4847)')
debug_merge_point(0, 0, '(- y4845 1)')
+423: p23 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+427: guard_nonnull_class(p23, ConstClass(W_Fixnum), descr=<Guard0x3d545c0>) [p0, p1]
+446: i25 = getfield_gc_i(p23, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+450: i27 = int_sub_ovf(i25, 1)
+454: guard_no_overflow(descr=<Guard0x3d4cec0>) [p0, p1]
debug_merge_point(0, 0, '(tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
+460: p28 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+464: guard_nonnull_class(p28, 16510992, descr=<Guard0x3d54620>) [p0, p1]
+483: p30 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+487: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3d54680>) [p0, p1]
+505: p32 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+509: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3d546e0>) [p0, p1]
+527: p34 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+531: p35 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+535: guard_class(p35, 16505296, descr=<Guard0x3d4cf08>) [p0, p1]
+547: p37 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+558: guard_value(p37, ConstPtr(ptr38), descr=<Guard0x3d4cf50>) [p0, p1]
+567: p39 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+571: i40 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+575: i41 = int_lt(i40, i27)
+578: guard_false(i41, descr=<Guard0x3d4cf98>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+584: guard_class(p39, 16499664, descr=<Guard0x3d4cfe0>) [p0, p1]
+596: p43 = getfield_gc_r(p39, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+596: i44 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))) from (k z4847)')
+600: p45 = new_with_vtable(descr=<SizeDescr 72>)
+644: p46 = new_with_vtable(descr=<SizeDescr 16>)
+655: setfield_gc(p46, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+666: setfield_gc(p45, ConstPtr(ptr47), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+670: setfield_gc(p45, p35, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+674: setfield_gc(p45, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+678: setfield_gc(p45, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+682: setfield_gc(p45, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+686: setfield_gc(p45, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+690: setfield_gc(p45, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+694: setfield_gc(p45, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+698: jump(p45, i44, p1, p3, descr=TargetToken(63837136))
+736: --end of the loop--
[3e4c1961129ae63] jit-log-opt-bridge}
[3e4c196114cfe7a] {jit-backend
[3e4c1961153ee9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c19611546fbe] jit-backend-dump}
[3e4c19611551b6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a162b4 +0  25000000
[3e4c1961155304e] jit-backend-dump}
[3e4c196115570a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a164e5 +0  25000000
[3e4c19611557f74] jit-backend-dump}
[3e4c1961155b44a] {jit-backend-addr
bridge out of Guard 0x3d4c020 has address 0x7f0962a162b0 to 0x7f0962a164e0
       gc table: 0x7f0962a16220
    jump target: 0x7f0962a162b0
         resops: 0x7f0962a162be
       failures: 0x7f0962a164e0
            end: 0x7f0962a166c7
[3e4c1961155d896] jit-backend-addr}
[3e4c1961156112d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a162d9 +0  62020000
[3e4c19611561f8a] jit-backend-dump}
[3e4c1961156526a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a162e7 +0  70020000
[3e4c19611565f98] jit-backend-dump}
[3e4c1961156909e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a162fe +0  75020000
[3e4c19611569dcf] jit-backend-dump}
[3e4c1961156cfa0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16316 +0  79020000
[3e4c1961156dd3f] jit-backend-dump}
[3e4c19611570cdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16323 +0  88020000
[3e4c19611571974] jit-backend-dump}
[3e4c196115749d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1633b +0  8C020000
[3e4c19611575667] jit-backend-dump}
[3e4c196115786b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1634f +0  94020000
[3e4c19611579360] jit-backend-dump}
[3e4c1961157c3e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16370 +0  8F020000
[3e4c1961157d097] jit-backend-dump}
[3e4c196115800fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1637d +0  9E020000
[3e4c19611580dd6] jit-backend-dump}
[3e4c19611583c8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1638d +0  AA020000
[3e4c19611584920] jit-backend-dump}
[3e4c196115877ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a163a3 +0  B0020000
[3e4c19611588479] jit-backend-dump}
[3e4c1961158b32b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a163bc +0  B3020000
[3e4c1961158bfdc] jit-backend-dump}
[3e4c1961158eea6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a163d0 +0  BB020000
[3e4c1961158fb35] jit-backend-dump}
[3e4c196115929e7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a163dd +0  CA020000
[3e4c1961159366f] jit-backend-dump}
[3e4c19611596849] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13a0b +0  A1280000
[3e4c19611597527] jit-backend-dump}
[3e4c1961159b327] jit-backend}
[3e4c1961159ed67] {jit-log-opt-bridge
# bridge out of Guard 0x3d4c020 with 71 ops
[i0, p1, p2, p3]
+166: guard_not_invalidated(descr=<Guard0x3d54740>) [i0, p1, p2, p3]
+166: p4 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+170: guard_nonnull_class(p4, ConstClass(W_Fixnum), descr=<Guard0x3d547a0>) [i0, p1, p2, p3]
+189: i6 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+193: i8 = int_sub_ovf(i6, 1)
+197: guard_no_overflow(descr=<Guard0x3d4d028>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
+203: p9 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+207: guard_nonnull_class(p9, 16510992, descr=<Guard0x3d54800>) [i0, p1, p2, p3]
+226: p11 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+230: guard_nonnull_class(p11, ConstClass(W_Fixnum), descr=<Guard0x3d54860>) [i0, p1, p2, p3]
+250: p13 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+254: guard_nonnull(p13, descr=<Guard0x3d4d070>) [i0, p1, p2, p3]
+263: p14 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+267: p15 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+271: p16 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+275: guard_class(p16, 16505296, descr=<Guard0x3d4d0b8>) [i0, p1, p2, p3]
+287: p18 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+298: guard_value(p18, ConstPtr(ptr19), descr=<Guard0x3d4d100>) [i0, p1, p2, p3]
+307: p20 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
+311: p21 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+322: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x3d548c0>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(< y4845 x4843)')
+340: i23 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+344: i24 = int_lt(i23, i8)
+347: guard_true(i24, descr=<Guard0x3d4d148>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
+353: i26 = int_sub(i8, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+357: guard_class(p20, 16499664, descr=<Guard0x3d4d190>) [i0, p1, p2, p3]
+369: p28 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+373: guard_nonnull_class(p28, 16510992, descr=<Guard0x3d54920>) [i0, p1, p2, p3]
+391: p30 = getfield_gc_r(p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+402: guard_class(p30, 16505296, descr=<Guard0x3d4d1d8>) [i0, p1, p2, p3]
+416: p32 = getfield_gc_r(p28, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+427: guard_value(p32, ConstPtr(ptr33), descr=<Guard0x3d4d220>) [i0, p1, p2, p3]
+436: p34 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+440: i35 = instance_ptr_eq(p20, p34)
+443: guard_true(i35, descr=<Guard0x3d4d268>) [i0, p1, p2, p3]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+449: p36 = new_with_vtable(descr=<SizeDescr 48>)
+496: p37 = new_with_vtable(descr=<SizeDescr 16>)
+507: setfield_gc(p37, i26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+511: p38 = new_with_vtable(descr=<SizeDescr 64>)
+523: setfield_gc(p38, p30, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+534: setfield_gc(p38, ConstPtr(ptr39), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+538: p40 = new_with_vtable(descr=<SizeDescr 56>)
+550: setfield_gc(p40, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+562: setfield_gc(p40, ConstPtr(ptr41), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+567: setfield_gc(p40, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+572: p42 = new_with_vtable(descr=<SizeDescr 16>)
+584: setfield_gc(p42, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+588: setfield_gc(p40, p42, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+593: setfield_gc(p40, p15, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+598: setfield_gc(p40, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+603: setfield_gc(p38, p40, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+607: setfield_gc(p38, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+618: setfield_gc(p38, p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+629: p43 = new_with_vtable(descr=<SizeDescr 16>)
+640: setfield_gc(p43, i8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+644: setfield_gc(p38, p43, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+648: setfield_gc(p38, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+652: setfield_gc(p36, p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+656: setfield_gc(p36, p37, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+660: setfield_gc(p36, p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+664: setfield_gc(p36, p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+668: setfield_gc(p36, p38, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+672: jump(p36, p2, descr=TargetToken(63233168))
+704: --end of the loop--
[3e4c196115e1c97] jit-log-opt-bridge}
[3e4c196117568d1] {jit-backend
[3e4c19611799850] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a167d
[3e4c196117a0cb1] jit-backend-dump}
[3e4c196117ab6e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16854 +0  1E000000
[3e4c196117acb3f] jit-backend-dump}
[3e4c196117b08a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a169e5 +0  1E000000
[3e4c196117b1768] jit-backend-dump}
[3e4c196117b48f2] {jit-backend-addr
bridge out of Guard 0x3c492e0 has address 0x7f0962a16850 to 0x7f0962a169e0
       gc table: 0x7f0962a167d0
    jump target: 0x7f0962a16850
         resops: 0x7f0962a1685e
       failures: 0x7f0962a169e0
            end: 0x7f0962a16bab
[3e4c196117b6be2] jit-backend-addr}
[3e4c196117b9fab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1686e +0  B1010000
[3e4c196117bad96] jit-backend-dump}
[3e4c196117bdf7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16885 +0  B6010000
[3e4c196117bec88] jit-backend-dump}
[3e4c196117c1faf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16891 +0  E2010000
[3e4c196117c2d0b] jit-backend-dump}
[3e4c196117c5d32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a168a2 +0  ED010000
[3e4c196117c6a3b] jit-backend-dump}
[3e4c196117c9a2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a168b9 +0  F2010000
[3e4c196117ca71c] jit-backend-dump}
[3e4c196117cd78f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a168c7 +0  00020000
[3e4c196117ce46e] jit-backend-dump}
[3e4c196117d13a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a168de +0  05020000
[3e4c196117d208b] jit-backend-dump}
[3e4c196117d4f58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a168f6 +0  09020000
[3e4c196117d5c40] jit-backend-dump}
[3e4c196117d8b7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1690d +0  0E020000
[3e4c196117d9860] jit-backend-dump}
[3e4c196117dc758] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16929 +0  0E020000
[3e4c196117dd43c] jit-backend-dump}
[3e4c196117e038d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1693d +0  16020000
[3e4c196117e10e6] jit-backend-dump}
[3e4c196117e405f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1694f +0  20020000
[3e4c196117e4d62] jit-backend-dump}
[3e4c196117e7d1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1695b +0  30020000
[3e4c196117e8a1e] jit-backend-dump}
[3e4c196117ebc1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a13931 +0  1B2F0000
[3e4c196117ec92b] jit-backend-dump}
[3e4c196117f0713] jit-backend}
[3e4c196117f411f] {jit-log-opt-bridge
# bridge out of Guard 0x3c492e0 with 49 ops
[p0, p1]
+150: guard_class(p1, 16435208, descr=<Guard0x3d54980>) [p0, p1]
+162: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+166: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3d549e0>) [p0, p1]
debug_merge_point(0, 0, '(- z4847 1)')
+185: guard_not_invalidated(descr=<Guard0x3d4d2b0>) [p0, p1]
+185: guard_class(p0, 16504944, descr=<Guard0x3d4d2f8>) [p0, p1]
+197: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+201: guard_class(p6, 16479576, descr=<Guard0x3d4d340>) [p0, p1]
+214: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+218: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3d54a40>) [p0, p1]
+237: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+241: i12 = int_sub_ovf(i10, 1)
+245: guard_no_overflow(descr=<Guard0x3d4d388>) [p0, p1]
debug_merge_point(0, 0, '(tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
+251: p13 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+255: guard_nonnull_class(p13, 16510992, descr=<Guard0x3d54aa0>) [p0, p1]
+274: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+278: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3d54b00>) [p0, p1]
+298: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+302: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3d54b60>) [p0, p1]
+321: p19 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+325: i20 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+329: p21 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+333: p22 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+337: guard_class(p22, 16505296, descr=<Guard0x3d4d3d0>) [p0, p1]
+349: p24 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+360: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3d4d418>) [p0, p1]
+369: p26 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+373: i27 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+378: i28 = int_lt(i27, i12)
+381: guard_false(i28, descr=<Guard0x3d4d460>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+387: guard_class(p26, 16499664, descr=<Guard0x3d4d4a8>) [p0, p1]
+399: p30 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+399: i31 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(tak v1 v2 v3 k) from (k z4847)')
+403: p32 = new_with_vtable(descr=<SizeDescr 56>)
+447: p33 = new_with_vtable(descr=<SizeDescr 16>)
+458: setfield_gc(p33, i20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+462: setfield_gc(p32, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+473: setfield_gc(p32, ConstPtr(ptr34), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+477: setfield_gc(p32, p19, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+481: setfield_gc(p32, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+485: setfield_gc(p32, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+489: setfield_gc(p32, p13, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+493: jump(p32, i31, p1, descr=TargetToken(63837296))
+528: --end of the loop--
[3e4c19611821940] jit-log-opt-bridge}
[3e4c19611ad32c3] {jit-backend
[3e4c19611b2ed72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16cf
[3e4c19611b37635] jit-backend-dump}
[3e4c19611b41314] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16d94 +0  25000000
[3e4c19611b426f3] jit-backend-dump}
[3e4c19611b4657a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16f75 +0  25000000
[3e4c19611b473ec] jit-backend-dump}
[3e4c19611b4a7f2] {jit-backend-addr
bridge out of Guard 0x3d4c2f0 has address 0x7f0962a16d90 to 0x7f0962a16f70
       gc table: 0x7f0962a16cf0
    jump target: 0x7f0962a16d90
         resops: 0x7f0962a16d9e
       failures: 0x7f0962a16f70
            end: 0x7f0962a1718e
[3e4c19611b4cced] jit-backend-addr}
[3e4c19611b5037c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16dae +0  E4010000
[3e4c19611b511e2] jit-backend-dump}
[3e4c19611b543a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16dc5 +0  E9010000
[3e4c19611b550f5] jit-backend-dump}
[3e4c19611b581a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16dd1 +0  15020000
[3e4c19611b58f11] jit-backend-dump}
[3e4c19611b5beca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16de2 +0  20020000
[3e4c19611b5cbf2] jit-backend-dump}
[3e4c19611b5fbc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16dfa +0  24020000
[3e4c19611b608e8] jit-backend-dump}
[3e4c19611b63940] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16e08 +0  32020000
[3e4c19611b6460c] jit-backend-dump}
[3e4c19611b674d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16e1f +0  37020000
[3e4c19611b681ca] jit-backend-dump}
[3e4c19611b6b029] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16e36 +0  3C020000
[3e4c19611b6bd17] jit-backend-dump}
[3e4c19611b6eb45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16e43 +0  4B020000
[3e4c19611b6f842] jit-backend-dump}
[3e4c19611b726ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16e5b +0  4F020000
[3e4c19611b73392] jit-backend-dump}
[3e4c19611b76336] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16e6f +0  57020000
[3e4c19611b77039] jit-backend-dump}
[3e4c19611b79ebd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16e87 +0  5B020000
[3e4c19611b7ab95] jit-backend-dump}
[3e4c19611b7da3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16ea0 +0  5E020000
[3e4c19611b7e728] jit-backend-dump}
[3e4c19611b815c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16ebf +0  5B020000
[3e4c19611b822c5] jit-backend-dump}
[3e4c19611b85177] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16ed8 +0  5E020000
[3e4c19611b85e52] jit-backend-dump}
[3e4c19611b88cdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16eec +0  66020000
[3e4c19611b899ba] jit-backend-dump}
[3e4c19611b8c82c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a16ef9 +0  75020000
[3e4c19611b8d507] jit-backend-dump}
[3e4c19611b906bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a14134 +0  582C0000
[3e4c19611b913d8] jit-backend-dump}
[3e4c19611b951b9] jit-backend}
[3e4c19611b98c5e] {jit-log-opt-bridge
# bridge out of Guard 0x3d4c2f0 with 49 ops
[p0, p1]
+182: guard_class(p1, 16435208, descr=<Guard0x3d54bc0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+198: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3d54c20>) [p0, p1]
debug_merge_point(0, 0, '(- y4845 1)')
+217: guard_not_invalidated(descr=<Guard0x3d4d4f0>) [p0, p1]
+217: guard_class(p0, 16504944, descr=<Guard0x3d4d538>) [p0, p1]
+229: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+233: guard_class(p6, 16479200, descr=<Guard0x3d4d580>) [p0, p1]
+246: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+250: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3d54c80>) [p0, p1]
+270: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+274: i12 = int_sub_ovf(i10, 1)
+278: guard_no_overflow(descr=<Guard0x3d4d5c8>) [p0, p1]
debug_merge_point(0, 0, '(tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
+284: p13 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+288: guard_nonnull_class(p13, 16510992, descr=<Guard0x3d54ce0>) [p0, p1]
+307: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+311: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3d54d40>) [p0, p1]
+330: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+334: guard_nonnull(p17, descr=<Guard0x3d4d610>) [p0, p1]
+343: p18 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+347: i19 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+351: p20 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+355: guard_class(p20, 16505296, descr=<Guard0x3d4d658>) [p0, p1]
+367: p22 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+378: guard_value(p22, ConstPtr(ptr23), descr=<Guard0x3d4d6a0>) [p0, p1]
+387: p24 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+391: i25 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+402: i26 = int_lt(i25, i12)
+405: guard_true(i26, descr=<Guard0x3d4d6e8>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
+411: i28 = int_sub(i12, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+423: guard_class(p24, 16499664, descr=<Guard0x3d4d730>) [p0, p1]
+436: p30 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+447: guard_nonnull_class(p30, 16510992, descr=<Guard0x3d54da0>) [p0, p1]
+467: p32 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+478: guard_class(p32, 16505296, descr=<Guard0x3d4d778>) [p0, p1]
+492: p34 = getfield_gc_r(p30, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+503: guard_value(p34, ConstPtr(ptr35), descr=<Guard0x3d4d7c0>) [p0, p1]
+512: p36 = getfield_gc_r(p30, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+516: i37 = instance_ptr_eq(p24, p36)
+519: guard_true(i37, descr=<Guard0x3d4d808>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+525: jump(p24, i28, p15, p17, p32, p20, p18, p8, i19, p13, i12, p30, p1, p3, i25, p36, descr=TargetToken(63233248))
+640: --end of the loop--
[3e4c19611bc831f] jit-log-opt-bridge}
[3e4c19611cde0e5] {jit-backend
[3e4c19611d367a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c19611d3dc97] jit-backend-dump}
[3e4c19611d47e5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17314 +0  25000000
[3e4c19611d49294] jit-backend-dump}
[3e4c19611d4ce24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a174c5 +0  25000000
[3e4c19611d4dcd0] jit-backend-dump}
[3e4c19611d50ffa] {jit-backend-addr
bridge out of Guard 0x3d54140 has address 0x7f0962a17310 to 0x7f0962a174c0
       gc table: 0x7f0962a17290
    jump target: 0x7f0962a17310
         resops: 0x7f0962a1731e
       failures: 0x7f0962a174c0
            end: 0x7f0962a1766f
[3e4c19611d5346c] jit-backend-addr}
[3e4c19611d56908] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17334 +0  CB010000
[3e4c19611d576ed] jit-backend-dump}
[3e4c19611d5a824] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1734b +0  D0010000
[3e4c19611d5b515] jit-backend-dump}
[3e4c19611d5e5c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17362 +0  D5010000
[3e4c19611d5f27c] jit-backend-dump}
[3e4c19611d6217b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1736f +0  E4010000
[3e4c19611d62e37] jit-backend-dump}
[3e4c19611d65ce9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17383 +0  EC010000
[3e4c19611d669a9] jit-backend-dump}
[3e4c19611d698a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a173a4 +0  E7010000
[3e4c19611d6a5c9] jit-backend-dump}
[3e4c19611d6d588] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a173b5 +0  0E020000
[3e4c19611d6e28e] jit-backend-dump}
[3e4c19611d71260] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a173c7 +0  18020000
[3e4c19611d71f3e] jit-backend-dump}
[3e4c19611d74e36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a173de +0  1D020000
[3e4c19611d75b05] jit-backend-dump}
[3e4c19611d78b42] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a173ef +0  28020000
[3e4c19611d7980b] jit-backend-dump}
[3e4c19611d7c79f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a173fc +0  37020000
[3e4c19611d7d468] jit-backend-dump}
[3e4c19611d80314] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17409 +0  46020000
[3e4c19611d80fe9] jit-backend-dump}
[3e4c19611d8415a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1563a +0  D21C0000
[3e4c19611d84e4b] jit-backend-dump}
[3e4c19611d88b8a] jit-backend}
[3e4c19611d8c5fb] {jit-log-opt-bridge
# bridge out of Guard 0x3d54140 with 55 ops
[p0, p1, i2, p3]
+150: guard_nonnull_class(p1, 16510992, descr=<Guard0x3d54e00>) [p0, p1, i2, p3]
+168: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+172: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3d54e60>) [p0, p1, i2, p3]
+191: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+195: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x3d54ec0>) [p0, p1, i2, p3]
+214: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+218: guard_nonnull(p9, descr=<Guard0x3d4d850>) [p0, p1, i2, p3]
+227: p10 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+238: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3d4d898>) [p0, p1, i2, p3]
+247: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+251: p13 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
+251: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+262: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x3d54f20>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(< y4845 x4843)')
+280: guard_not_invalidated(descr=<Guard0x3d4d8e0>) [p0, p1, i2, p3]
+280: i16 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+284: i17 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+288: i18 = int_lt(i16, i17)
+291: guard_true(i18, descr=<Guard0x3d4d928>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
+297: i20 = int_sub(i17, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+301: guard_class(p12, 16499664, descr=<Guard0x3d4d970>) [p0, p1, i2, p3]
+315: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+320: guard_nonnull_class(p22, 16510992, descr=<Guard0x3d54f80>) [p0, p1, i2, p3]
+338: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+343: guard_class(p24, 16505296, descr=<Guard0x3d4d9b8>) [p0, p1, i2, p3]
+355: p26 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+359: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x3d4da00>) [p0, p1, i2, p3]
+368: p28 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+372: i29 = instance_ptr_eq(p12, p28)
+375: guard_true(i29, descr=<Guard0x3d4da48>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+381: p30 = new_with_vtable(descr=<SizeDescr 48>)
+425: p31 = new_with_vtable(descr=<SizeDescr 16>)
+436: setfield_gc(p31, i20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+440: p32 = new_with_vtable(descr=<SizeDescr 16>)
+451: setfield_gc(p32, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+462: p33 = new_with_vtable(descr=<SizeDescr 64>)
+473: setfield_gc(p33, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+484: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+488: setfield_gc(p33, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+492: setfield_gc(p33, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+496: setfield_gc(p33, p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+500: setfield_gc(p33, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+504: setfield_gc(p33, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+508: setfield_gc(p30, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+512: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+516: setfield_gc(p30, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+520: setfield_gc(p30, p32, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+524: setfield_gc(p30, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+528: jump(p30, p0, descr=TargetToken(63233168))
+560: --end of the loop--
[3e4c19611dbd184] jit-log-opt-bridge}
[3e4c19611edab84] {jit-backend
[3e4c19611f2b528] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c19611f32564] jit-backend-dump}
[3e4c19611f3c73f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a177f4 +0  25000000
[3e4c19611f3da6f] jit-backend-dump}
[3e4c19611f414a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a179a5 +0  25000000
[3e4c19611f422f0] jit-backend-dump}
[3e4c19611f454b1] {jit-backend-addr
bridge out of Guard 0x3d4cb18 has address 0x7f0962a177f0 to 0x7f0962a179a0
       gc table: 0x7f0962a17770
    jump target: 0x7f0962a177f0
         resops: 0x7f0962a177fe
       failures: 0x7f0962a179a0
            end: 0x7f0962a17b4f
[3e4c19611f479cb] jit-backend-addr}
[3e4c19611f4ad56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17814 +0  CB010000
[3e4c19611f4bb67] jit-backend-dump}
[3e4c19611f4ee3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1782b +0  D0010000
[3e4c19611f4fb4d] jit-backend-dump}
[3e4c19611f52cce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17842 +0  D5010000
[3e4c19611f539b2] jit-backend-dump}
[3e4c19611f56a35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1784f +0  E4010000
[3e4c19611f57769] jit-backend-dump}
[3e4c19611f5a6f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17863 +0  EC010000
[3e4c19611f5b3e8] jit-backend-dump}
[3e4c19611f5e480] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1787d +0  EE010000
[3e4c19611f5f171] jit-backend-dump}
[3e4c19611f6257d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1788e +0  15020000
[3e4c19611f6329c] jit-backend-dump}
[3e4c19611f6642f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a178a0 +0  1F020000
[3e4c19611f67129] jit-backend-dump}
[3e4c19611f6a0bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a178b7 +0  24020000
[3e4c19611f6adc6] jit-backend-dump}
[3e4c19611f6ddb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a178c8 +0  2F020000
[3e4c19611f6ead2] jit-backend-dump}
[3e4c19611f71a44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a178d5 +0  3E020000
[3e4c19611f72723] jit-backend-dump}
[3e4c19611f756df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a178e2 +0  4D020000
[3e4c19611f763d2] jit-backend-dump}
[3e4c19611f795e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a15680 +0  6C210000
[3e4c19611f7a317] jit-backend-dump}
[3e4c19611f7e0a6] jit-backend}
[3e4c19611f81b91] {jit-log-opt-bridge
# bridge out of Guard 0x3d4cb18 with 55 ops
[p0, p1, i2, p3]
+150: guard_nonnull_class(p1, 16510992, descr=<Guard0x3d54fe0>) [p0, p1, i2, p3]
+168: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+172: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3d55040>) [p0, p1, i2, p3]
+191: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+195: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x3d550a0>) [p0, p1, i2, p3]
+214: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+218: guard_nonnull(p9, descr=<Guard0x3d4da90>) [p0, p1, i2, p3]
+227: p10 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+238: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3d4dad8>) [p0, p1, i2, p3]
+247: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+251: p13 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
+251: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+255: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x3d55100>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(< y4845 x4843)')
+273: guard_not_invalidated(descr=<Guard0x3d4db20>) [p0, p1, i2, p3]
+273: i16 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+277: i17 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+281: i18 = int_lt(i16, i17)
+284: guard_true(i18, descr=<Guard0x3d4db68>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
+290: i20 = int_sub(i17, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+294: guard_class(p12, 16499664, descr=<Guard0x3d4dbb0>) [p0, p1, i2, p3]
+308: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+313: guard_nonnull_class(p22, 16510992, descr=<Guard0x3d55160>) [p0, p1, i2, p3]
+331: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+336: guard_class(p24, 16505296, descr=<Guard0x3d4dbf8>) [p0, p1, i2, p3]
+348: p26 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+352: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x3d4dc40>) [p0, p1, i2, p3]
+361: p28 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+365: i29 = instance_ptr_eq(p12, p28)
+368: guard_true(i29, descr=<Guard0x3d4dc88>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+374: p30 = new_with_vtable(descr=<SizeDescr 48>)
+418: p31 = new_with_vtable(descr=<SizeDescr 16>)
+429: setfield_gc(p31, i20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+433: p32 = new_with_vtable(descr=<SizeDescr 16>)
+444: setfield_gc(p32, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+455: p33 = new_with_vtable(descr=<SizeDescr 64>)
+466: setfield_gc(p33, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+477: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+481: setfield_gc(p33, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+485: setfield_gc(p33, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+489: setfield_gc(p33, p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+493: setfield_gc(p33, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+497: setfield_gc(p33, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+501: setfield_gc(p30, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+505: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+509: setfield_gc(p30, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+513: setfield_gc(p30, p32, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+517: setfield_gc(p30, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+521: jump(p30, p0, descr=TargetToken(63233168))
+560: --end of the loop--
[3e4c19611fb7adf] jit-log-opt-bridge}
[3e4c196121b0261] {jit-backend
[3e4c1961221a8e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17ce0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C2202000048FF0425D0EFD9024883FA017206813A503601000F85000000004D8B78284983FF01720741813F601400000F85000000004D8B70204983FE01720741813E601400000F85000000004D8B68184983FD01720841817D0020BA00000F85000000004C8B62084C8B15D7FEFFFF4D39D40F85000000004C8B6210498B79084883FF017206813F900F00000F8500000000498B76084D8B77084C39F60F8C000000004D8B7510488B35C0FEFFFF4939F60F850000000041813C24100A01000F85000000004D8B65284983FC01720841813C24601400000F8500000000498B7424084883EE010F80000000004D8B75384983FE01720741813E503601000F85000000004D8B7D204983FF01720741813F601400000F8500000000498B5D304885DB0F8400000000498B4518498B4D088139102001000F85000000004D8B6E084D39D50F85000000004D8B6E104C898D380100004D8B4F084939F10F8D000000004889BD40010000488D7EFF41817D00100A01000F85000000004C89A5480100004D8B65104983FC01720841813C24503601000F85000000004889B550010000498B7508813E102001000F85000000004C89B5580100004D8B7424084D39D60F85000000004D8B5424104D39D50F85000000004989CE4C8B85300100004C89C94C89AD300100004989C54C8B8D580100004C89A5580100004889F84989F4488BBD48010000488BB5500100004C89BD4801000048899D5001000049BB502EA162097F000041FFE348C7442408FFFFFF0049BB607BA162097F00004C895D204D8D9B9097FFFF41FFD3E9B8FDFFFFFF35D4FCFFFF49BB707BA162097F000041534D8D9B9094FFFF41FFE3FF35C0FCFFFF49BB807BA162097F000041534D8D9B8094FFFF41FFE3FF35ACFCFFFF49BB907BA162097F000041534D8D9B7094FFFF41FFE3FF3598FCFFFF49BBA07BA162097F000041534D8D9B6094FFFF41FFE3FF358CFCFFFF49BBB07BA162097F000041534D8D9B5094FFFF41FFE3FF3578FCFFFF49BBC07BA162097F000041534D8D9B4094FFFF41FFE3FF3564FCFFFF49BBD07BA162097F000041534D8D9B3094FFFF41FFE3FF3550FCFFFF49BBE07BA162097F000041534D8D9B2094FFFF41FFE3FF3544FCFFFF49BBF07BA162097F000041534D8D9B1094FFFF41FFE3FF3530FCFFFF49BB007CA162097F000041534D8D9B0094FFFF41FFE3FF351CFCFFFF49BB107CA162097F000041534D8D9BF093FFFF41FFE3FF3508FCFFFF49BB207CA162097F000041534D8D9BE093FFFF41FFE3FF35F4FBFFFF49BB307CA162097F000041534D8D9BD093FFFF41FFE3FF35E0FBFFFF49BB407CA162097F000041534D8D9BC093FFFF41FFE3FF35CCFBFFFF49BB507CA162097F000041534D8D9BB093FFFF41FFE3FF35B8FBFFFF49BB607CA162097F000041534D8D9BA093FFFF41FFE3FF35A4FBFFFF49BB707CA162097F000041534D8D9B9093FFFF41FFE3FF3590FBFFFF49BB807CA162097F000041534D8D9B8093FFFF41FFE3FF357CFBFFFF49BB907CA162097F000041534D8D9B7093FFFF41FFE3FF3568FBFFFF49BBA07CA162097F000041534D8D9B6093FFFF41FFE3FF3554FBFFFF49BBB07CA162097F000041534D8D9B5093FFFF41FFE3FF3540FBFFFF49BBC07CA162097F000041534D8D9B4093FFFF41FFE3FF352CFBFFFF49BBD07CA162097F000041534D8D9B3093FFFF41FFE3
[3e4c19612224cba] jit-backend-dump}
[3e4c1961222f622] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17db4 +0  25000000
[3e4c1961223092b] jit-backend-dump}
[3e4c196122345fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17fe5 +0  25000000
[3e4c19612235446] jit-backend-dump}
[3e4c19612238846] {jit-backend-addr
bridge out of Guard 0x3d4ccc8 has address 0x7f0962a17db0 to 0x7f0962a17fe0
       gc table: 0x7f0962a17ce0
    jump target: 0x7f0962a17db0
         resops: 0x7f0962a17dbe
       failures: 0x7f0962a17fe0
            end: 0x7f0962a1828a
[3e4c1961223aae4] jit-backend-addr}
[3e4c1961223deb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17dd4 +0  2E020000
[3e4c1961223ec6a] jit-backend-dump}
[3e4c19612241df7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17deb +0  33020000
[3e4c19612242af4] jit-backend-dump}
[3e4c19612245c0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17e02 +0  38020000
[3e4c19612246868] jit-backend-dump}
[3e4c19612249818] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17e1a +0  3C020000
[3e4c1961224a472] jit-backend-dump}
[3e4c1961224d3f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17e2e +0  44020000
[3e4c1961224e04c] jit-backend-dump}
[3e4c19612250ff3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17e48 +0  46020000
[3e4c19612251c5a] jit-backend-dump}
[3e4c19612254ce9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17e59 +0  6D020000
[3e4c1961225595c] jit-backend-dump}
[3e4c196122589bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17e6d +0  75020000
[3e4c1961225964c] jit-backend-dump}
[3e4c1961225c5f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17e7b +0  83020000
[3e4c1961225d260] jit-backend-dump}
[3e4c196122601fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17e93 +0  87020000
[3e4c19612260e67] jit-backend-dump}
[3e4c19612263e9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17ea2 +0  94020000
[3e4c19612264b0e] jit-backend-dump}
[3e4c19612267a9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17eb9 +0  99020000
[3e4c196122686fd] jit-backend-dump}
[3e4c1961226b6f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17ed0 +0  9E020000
[3e4c1961226c357] jit-backend-dump}
[3e4c1961226f332] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17edd +0  AD020000
[3e4c1961226ffa5] jit-backend-dump}
[3e4c19612272f39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17ef1 +0  B5020000
[3e4c19612273b97] jit-backend-dump}
[3e4c19612276b1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17efe +0  C4020000
[3e4c1961227777a] jit-backend-dump}
[3e4c1961227a6f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17f16 +0  C8020000
[3e4c1961227b366] jit-backend-dump}
[3e4c1961227e310] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17f2f +0  CB020000
[3e4c1961227ef64] jit-backend-dump}
[3e4c19612281f0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17f4e +0  C8020000
[3e4c19612282b6f] jit-backend-dump}
[3e4c19612285afd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17f65 +0  CD020000
[3e4c19612286755] jit-backend-dump}
[3e4c196122896f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17f7a +0  D4020000
[3e4c1961228a353] jit-backend-dump}
[3e4c1961228d2de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a17f88 +0  E2020000
[3e4c1961228df3c] jit-backend-dump}
[3e4c1961229118d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1573f +0  6D260000
[3e4c19612291e37] jit-backend-dump}
[3e4c19612295d63] jit-backend}
[3e4c1961229989e] {jit-log-opt-bridge
# bridge out of Guard 0x3d4ccc8 with 68 ops
[p0, p1, i2, p3]
+230: guard_nonnull_class(p1, 16510992, descr=<Guard0x3d551c0>) [p0, p1, i2, p3]
+248: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+252: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3d55220>) [p0, p1, i2, p3]
+271: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+275: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x3d55280>) [p0, p1, i2, p3]
+294: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+298: guard_nonnull_class(p9, 16479200, descr=<Guard0x3d552e0>) [p0, p1, i2, p3]
+318: p11 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+329: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3d4dcd0>) [p0, p1, i2, p3]
+338: p13 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+342: p14 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
+342: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+346: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x3d55340>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(< y4845 x4843)')
+364: guard_not_invalidated(descr=<Guard0x3d4dd18>) [p0, p1, i2, p3]
+364: i17 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+368: i18 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+372: i19 = int_lt(i17, i18)
+375: guard_false(i19, descr=<Guard0x3d4dd60>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+381: p20 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+392: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x3d4dda8>) [p0, p1, i2, p3]
+401: guard_class(p13, 16499664, descr=<Guard0x3d4ddf0>) [p0, p1, i2, p3]
+415: p23 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))) from (k z4847)')
debug_merge_point(0, 0, '(- y4845 1)')
+415: p24 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+419: guard_nonnull_class(p24, ConstClass(W_Fixnum), descr=<Guard0x3d553a0>) [p0, p1, i2, p3]
+439: i26 = getfield_gc_i(p24, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+444: i28 = int_sub_ovf(i26, 1)
+448: guard_no_overflow(descr=<Guard0x3d4de38>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
+454: p29 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+458: guard_nonnull_class(p29, 16510992, descr=<Guard0x3d55400>) [p0, p1, i2, p3]
+477: p31 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+481: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3d55460>) [p0, p1, i2, p3]
+500: p33 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+504: guard_nonnull(p33, descr=<Guard0x3d4de80>) [p0, p1, i2, p3]
+513: p34 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+517: p35 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+521: guard_class(p35, 16505296, descr=<Guard0x3d4dec8>) [p0, p1, i2, p3]
+533: p37 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+537: guard_value(p37, ConstPtr(ptr38), descr=<Guard0x3d4df10>) [p0, p1, i2, p3]
+546: p39 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+550: i40 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i41 = int_lt(i40, i28)
+564: guard_true(i41, descr=<Guard0x3d4df58>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
+570: i43 = int_sub(i28, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+581: guard_class(p39, 16499664, descr=<Guard0x3d4dfa0>) [p0, p1, i2, p3]
+595: p45 = getfield_gc_r(p39, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+606: guard_nonnull_class(p45, 16510992, descr=<Guard0x3d554c0>) [p0, p1, i2, p3]
+626: p47 = getfield_gc_r(p39, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+637: guard_class(p47, 16505296, descr=<Guard0x3d62020>) [p0, p1, i2, p3]
+649: p49 = getfield_gc_r(p45, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+661: guard_value(p49, ConstPtr(ptr50), descr=<Guard0x3d62068>) [p0, p1, i2, p3]
+670: p51 = getfield_gc_r(p45, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+675: i52 = instance_ptr_eq(p39, p51)
+678: guard_true(i52, descr=<Guard0x3d620b0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+684: jump(p39, i43, p31, p33, p47, p35, p34, p24, i2, p29, i28, p45, p0, p15, i40, p51, descr=TargetToken(63233248))
+768: --end of the loop--
[3e4c196122db1f3] jit-log-opt-bridge}
[3e4c1961246153f] {jit-backend
[3e4c196124c9d53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18350 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C9201000048FF042550F0D9024C8B9548010000498B5A084839C30F8C000000004983FF01720741813F601400000F8500000000498B5708488B8D380100004889B550010000488B71084883FE017206813E900F00000F85000000004883EB010F800000000041813C24102001000F8500000000488B8D580100004889B560010000488B7108488B0D3AFFFFFF4839CE0F8500000000488B8D58010000488B71104839DA0F8C00000000813E100A01000F85000000004889D3488B0C25F091F900488D91C0000000483B14251092F9000F87E700000048891425F091F90048C70198BB0000488D514848C70298BB00004C8972084C8B35ECFEFFFF4C8972104C896A184C89522048897A284C897A30488D7A4848C707601400004C89470848897A384C894A404C8D4F1049C70160140000488BBD50010000498979084D8D411049C70060140000498958084C8961084C897110488951184C8979204C8951284C8949304C8941384C8B85580100004C8941404989CA4889FB4C8B9D600100004C899D3001000049BB6039A162097F000041FFE30F1F400048C7442408FFFFFF0049BBA082A162097F00004C895D204D8D9B5090FFFF41FFD3E948FEFFFF49BB4083A162097F00004C895D204D8D9BB097FFFF41FFD3E904FFFFFFFF35B7FDFFFF49BBB082A162097F000041534D8D9B508DFFFF41FFE3FF35A3FDFFFF49BBC082A162097F000041534D8D9B408DFFFF41FFE3FF358FFDFFFF49BBD082A162097F000041534D8D9B308DFFFF41FFE3FF357BFDFFFF49BBE082A162097F000041534D8D9B208DFFFF41FFE3FF3567FDFFFF49BBF082A162097F000041534D8D9B108DFFFF41FFE3FF3553FDFFFF49BB0083A162097F000041534D8D9B008DFFFF41FFE3FF3547FDFFFF49BB1083A162097F000041534D8D9BF08CFFFF41FFE3FF3533FDFFFF49BB2083A162097F000041534D8D9BE08CFFFF41FFE3FF351FFDFFFF49BB3083A162097F000041534D8D9BD08CFFFF41FFE3
[3e4c196124d0d0e] jit-backend-dump}
[3e4c196124daf75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a183b4 +0  25000000
[3e4c196124dc26c] jit-backend-dump}
[3e4c196124dffa8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18555 +0  25000000
[3e4c196124e0de0] jit-backend-dump}
[3e4c196124e4248] {jit-backend-addr
bridge out of Guard 0x3cbf898 has address 0x7f0962a183b0 to 0x7f0962a18550
       gc table: 0x7f0962a18350
    jump target: 0x7f0962a183b0
         resops: 0x7f0962a183be
       failures: 0x7f0962a18550
            end: 0x7f0962a1868f
[3e4c196124e65ac] jit-backend-addr}
[3e4c196124e9f04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a183d6 +0  D5010000
[3e4c196124ead0b] jit-backend-dump}
[3e4c196124ee1d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a183e9 +0  DE010000
[3e4c196124eef24] jit-backend-dump}
[3e4c196124f202a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18411 +0  D2010000
[3e4c196124f2d71] jit-backend-dump}
[3e4c196124f5de4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1841b +0  E4010000
[3e4c196124f6b1b] jit-backend-dump}
[3e4c196124f9d60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18429 +0  F2010000
[3e4c196124faa72] jit-backend-dump}
[3e4c196124fdb54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1844b +0  EC010000
[3e4c196124fe87f] jit-backend-dump}
[3e4c19612501853] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1845f +0  F4010000
[3e4c1961250254a] jit-backend-dump}
[3e4c19612505506] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1846b +0  04020000
[3e4c196125061fa] jit-backend-dump}
[3e4c1961250943b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e96 +0  16550000
[3e4c1961250a16f] jit-backend-dump}
[3e4c1961250e073] jit-backend}
[3e4c19612511bb4] {jit-log-opt-bridge
# bridge out of Guard 0x3cbf898 with 54 ops
[i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+118: guard_not_invalidated(descr=<Guard0x3d55520>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+118: i14 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+129: i15 = int_lt(i14, i8)
+132: guard_false(i15, descr=<Guard0x3d620f8>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+138: guard_nonnull_class(p9, ConstClass(W_Fixnum), descr=<Guard0x3d55580>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+157: p17 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+157: i18 = getfield_gc_i(p9, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))) from (k z4847)')
+161: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+179: guard_nonnull_class(p19, ConstClass(ForwardLink), descr=<Guard0x3d555e0>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
debug_merge_point(0, 0, '(- y4845 1)')
+197: i22 = int_sub_ovf(i14, 1)
+201: guard_no_overflow(descr=<Guard0x3d62140>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
debug_merge_point(0, 0, '(tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
+207: guard_class(p7, 16505296, descr=<Guard0x3d62188>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+221: p24 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+246: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3d621d0>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+255: p26 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))')
debug_merge_point(0, 0, '(< y4845 x4843)')
+266: i27 = int_lt(i18, i22)
+269: guard_false(i27, descr=<Guard0x3d62218>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+275: guard_class(p26, 16499664, descr=<Guard0x3d62260>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+287: p29 = getfield_gc_r(p26, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))) from (k z4847)')
+287: p30 = new_with_vtable(descr=<SizeDescr 72>)
+334: p31 = new_with_vtable(descr=<SizeDescr 72>)
+345: setfield_gc(p31, p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+356: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+360: setfield_gc(p31, p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+364: setfield_gc(p31, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+368: setfield_gc(p31, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+372: setfield_gc(p31, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+376: p33 = new_with_vtable(descr=<SizeDescr 16>)
+387: setfield_gc(p33, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+391: setfield_gc(p31, p33, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+395: setfield_gc(p31, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+399: p34 = new_with_vtable(descr=<SizeDescr 16>)
+410: setfield_gc(p34, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+421: p35 = new_with_vtable(descr=<SizeDescr 16>)
+432: setfield_gc(p35, i18, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+436: setfield_gc(p30, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+440: setfield_gc(p30, ConstPtr(ptr36), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+444: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+448: setfield_gc(p30, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+452: setfield_gc(p30, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+456: setfield_gc(p30, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+460: setfield_gc(p30, p35, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+464: setfield_gc(p30, p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+475: jump(p30, i0, p12, p19, descr=TargetToken(63837136))
+512: --end of the loop--
[3e4c19612542128] jit-log-opt-bridge}
[3e4c196126d88eb] {jit-backend
[3e4c1961274e9fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c19612755816] jit-backend-dump}
[3e4c1961275fe9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a187a4 +0  25000000
[3e4c19612761178] jit-backend-dump}
[3e4c19612764ea8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18995 +0  25000000
[3e4c19612765c7e] jit-backend-dump}
[3e4c196127691a4] {jit-backend-addr
bridge out of Guard 0x3cbf778 has address 0x7f0962a187a0 to 0x7f0962a18990
       gc table: 0x7f0962a18740
    jump target: 0x7f0962a187a0
         resops: 0x7f0962a187ae
       failures: 0x7f0962a18990
            end: 0x7f0962a18ab3
[3e4c1961276b555] jit-backend-addr}
[3e4c1961276ec3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a187c6 +0  25020000
[3e4c1961276fa83] jit-backend-dump}
[3e4c19612772bd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a187e3 +0  24020000
[3e4c19612773899] jit-backend-dump}
[3e4c196127769c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18804 +0  1F020000
[3e4c196127776c7] jit-backend-dump}
[3e4c1961277a820] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18812 +0  2D020000
[3e4c1961277b4fe] jit-backend-dump}
[3e4c1961277e587] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18823 +0  38020000
[3e4c1961277f244] jit-backend-dump}
[3e4c1961278220c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18837 +0  40020000
[3e4c19612782ed2] jit-backend-dump}
[3e4c19612785fc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18848 +0  4B020000
[3e4c19612786cb1] jit-backend-dump}
[3e4c1961278a08c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a12e5d +0  3F590000
[3e4c1961278ad21] jit-backend-dump}
[3e4c1961278ec72] jit-backend}
[3e4c196127927e0] {jit-log-opt-bridge
# bridge out of Guard 0x3cbf778 with 62 ops
[i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+118: guard_not_invalidated(descr=<Guard0x3d55640>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+118: i14 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+129: i15 = int_lt(i14, i8)
+132: guard_true(i15, descr=<Guard0x3d622a8>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
+138: p16 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+149: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x3d556a0>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
debug_merge_point(0, 0, '(- x4843 1)')
+167: i19 = int_sub(i8, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+171: p20 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+182: guard_nonnull_class(p20, 16510992, descr=<Guard0x3d55700>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+200: guard_nonnull(p9, descr=<Guard0x3d622f0>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+214: p22 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+218: guard_class(p22, 16505296, descr=<Guard0x3d62338>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+231: p24 = getfield_gc_r(p20, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+242: guard_value(p24, ConstPtr(ptr25), descr=<Guard0x3d62380>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
+251: p26 = getfield_gc_r(p20, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+255: i27 = instance_ptr_eq(p11, p26)
+262: guard_true(i27, descr=<Guard0x3d623c8>) [i0, i1, p2, p3, p4, p5, p6, p7, i8, p9, p10, p11, p12, p13]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+268: p28 = new_with_vtable(descr=<SizeDescr 48>)
+315: p29 = new_with_vtable(descr=<SizeDescr 16>)
+326: setfield_gc(p29, i19, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+330: p30 = new_with_vtable(descr=<SizeDescr 64>)
+341: setfield_gc(p30, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+352: setfield_gc(p30, ConstPtr(ptr31), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+356: p32 = new_with_vtable(descr=<SizeDescr 64>)
+374: setfield_gc(p32, p7, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+378: setfield_gc(p32, ConstPtr(ptr33), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+382: p34 = new_with_vtable(descr=<SizeDescr 72>)
+393: setfield_gc(p34, p5, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+404: setfield_gc(p34, ConstPtr(ptr35), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+408: setfield_gc(p34, p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_0 24 pure>)
+412: setfield_gc(p34, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_1 32 pure>)
+423: setfield_gc(p34, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_2 40 pure>)
+427: setfield_gc(p34, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_3 48 pure>)
+438: p36 = new_with_vtable(descr=<SizeDescr 16>)
+449: setfield_gc(p36, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+453: setfield_gc(p34, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_4 56 pure>)
+457: setfield_gc(p34, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize6.inst__vals_5 64 pure>)
+461: setfield_gc(p32, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+465: setfield_gc(p32, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+469: setfield_gc(p32, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+473: p37 = new_with_vtable(descr=<SizeDescr 16>)
+484: setfield_gc(p37, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+488: setfield_gc(p32, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+492: setfield_gc(p32, p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+503: setfield_gc(p30, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+507: setfield_gc(p30, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+511: setfield_gc(p30, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+515: p38 = new_with_vtable(descr=<SizeDescr 16>)
+526: setfield_gc(p38, i8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+530: setfield_gc(p30, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+534: setfield_gc(p30, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+538: setfield_gc(p28, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+556: setfield_gc(p28, p29, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+560: setfield_gc(p28, p10, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+564: setfield_gc(p28, p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+568: setfield_gc(p28, p30, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+572: jump(p28, p12, descr=TargetToken(63233168))
+592: --end of the loop--
[3e4c196127c7a96] jit-log-opt-bridge}
[3e4c1961291a2c0] {jit-backend
[3e4c19612946f6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18b80 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CF200000048FF042560F1D9024883FA017206813A503601000F85000000004D8B78284983FF01720741813F601400000F85000000004D8B70204983FE01720741813E601400000F85000000004D8B68184983FD01720841817D0098BB00000F85000000004C8B62084C8B1547FFFFFF4D39D40F85000000004C8B52104D8B61084983FC01720841813C24900F00000F8500000000498B7E084D8B77084C39F70F8C000000004D8B7510488B3D2EFFFFFF4939FE0F850000000041813A100A01000F85000000004D89EA488B9D300100004C898D380100004C89A53001000049BB6039A162097F000041FFE366662E0F1F84000000000048C7442408FFFFFF0049BBC88AA162097F00004C895D204D8D9B2888FFFF41FFD3E9E8FEFFFFFF3574FEFFFF49BBD88AA162097F000041534D8D9B2885FFFF41FFE3FF3560FEFFFF49BBE88AA162097F000041534D8D9B1885FFFF41FFE3FF354CFEFFFF49BBF88AA162097F000041534D8D9B0885FFFF41FFE3FF3538FEFFFF49BB088BA162097F000041534D8D9BF884FFFF41FFE3FF352CFEFFFF49BB188BA162097F000041534D8D9BE884FFFF41FFE3FF3518FEFFFF49BB288BA162097F000041534D8D9BD884FFFF41FFE3FF3504FEFFFF49BB388BA162097F000041534D8D9BC884FFFF41FFE3FF35F0FDFFFF49BB488BA162097F000041534D8D9BB884FFFF41FFE3FF35E4FDFFFF49BB588BA162097F000041534D8D9BA884FFFF41FFE3FF35D0FDFFFF49BB688BA162097F000041534D8D9B9884FFFF41FFE3
[3e4c1961294c6d3] jit-backend-dump}
[3e4c19612956993] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18be4 +0  25000000
[3e4c19612957c9f] jit-backend-dump}
[3e4c1961295b927] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18ce5 +0  25000000
[3e4c1961295c716] jit-backend-dump}
[3e4c1961295fb03] {jit-backend-addr
bridge out of Guard 0x3d4d928 has address 0x7f0962a18be0 to 0x7f0962a18ce0
       gc table: 0x7f0962a18b80
    jump target: 0x7f0962a18be0
         resops: 0x7f0962a18bee
       failures: 0x7f0962a18ce0
            end: 0x7f0962a18e1e
[3e4c19612961faf] jit-backend-addr}
[3e4c196129656a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18c04 +0  FE000000
[3e4c196129663f8] jit-backend-dump}
[3e4c196129695e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18c1b +0  03010000
[3e4c1961296a251] jit-backend-dump}
[3e4c1961296d39e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18c32 +0  08010000
[3e4c1961296e039] jit-backend-dump}
[3e4c19612971148] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18c4a +0  0C010000
[3e4c19612971dd1] jit-backend-dump}
[3e4c19612974e88] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18c5e +0  14010000
[3e4c19612975af2] jit-backend-dump}
[3e4c19612978b72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18c7a +0  14010000
[3e4c196129797dc] jit-backend-dump}
[3e4c1961297c92c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18c8b +0  3B010000
[3e4c19612980baa] jit-backend-dump}
[3e4c19612984740] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18c9f +0  43010000
[3e4c19612985477] jit-backend-dump}
[3e4c196129886a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18cac +0  52010000
[3e4c19612989338] jit-backend-dump}
[3e4c1961298c88f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a173b5 +0  27180000
[3e4c1961298d55b] jit-backend-dump}
[3e4c196129915f6] jit-backend}
[3e4c196129950b0] {jit-log-opt-bridge
# bridge out of Guard 0x3d4d928 with 28 ops
[p0, p1, i2, p3]
+118: guard_nonnull_class(p1, 16510992, descr=<Guard0x3d55a00>) [p0, p1, i2, p3]
+136: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+140: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3d55a60>) [p0, p1, i2, p3]
+159: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+163: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x3d55ac0>) [p0, p1, i2, p3]
+182: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+186: guard_nonnull_class(p9, 16479576, descr=<Guard0x3d55b20>) [p0, p1, i2, p3]
+206: p11 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+217: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3d62608>) [p0, p1, i2, p3]
+226: p13 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+230: p14 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
+230: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+234: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x3d55b80>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(< y4845 x4843)')
+254: guard_not_invalidated(descr=<Guard0x3d62650>) [p0, p1, i2, p3]
+254: i17 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+258: i18 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+262: i19 = int_lt(i17, i18)
+265: guard_false(i19, descr=<Guard0x3d62698>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+271: p20 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+282: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x3d626e0>) [p0, p1, i2, p3]
+291: guard_class(p13, 16499664, descr=<Guard0x3d62728>) [p0, p1, i2, p3]
+304: p23 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))) from (k z4847)')
+304: jump(p9, i2, p0, p15, descr=TargetToken(63837136))
+352: --end of the loop--
[3e4c196129b7d90] jit-log-opt-bridge}
[3e4c19612ac842e] {jit-backend
[3e4c19612b1c66f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18f20 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CA201000048FF0425902274034883FA017206813A503601000F85000000004D8B78284983FF01720741813F601400000F85000000004D8B70204983FE01720741813E601400000F85000000004D8B68184D85ED0F84000000004C8B62084C8B1532FFFFFF4D39D40F85000000004C8B62104C8B8D38010000498B79084883FF017206813F900F00000F8500000000498B7E08498B77084839F70F8D00000000488D7EFF41813C24100A01000F8500000000498B7424104883FE017206813E503601000F8500000000498B5C2408813B102001000F8500000000488B46084C39D00F85000000004C8B56104D39D40F8500000000488B0C25F091F900488D9190000000483B14251092F9000F87BC00000048891425F091F90048C701300E0100488D513048C7026014000048897A08488D7A1048C707601400004C8B85300100004C8947084C8D471049C70020BA000049895808488B1D8CFEFFFF498958104D896818498978204D8970284D897830498970384C896108488951104C897118488979204C89412848898D300100004C898D3801000049BB602CA162097F000041FFE30F1F44000048C7442408FFFFFF0049BB288EA162097F00004C895D204D8D9BC884FFFF41FFD3E938FEFFFF49BB088FA162097F00004C895D204D8D9BE88BFFFF41FFD3E92FFFFFFFFF3587FDFFFF49BB388EA162097F000041534D8D9BC881FFFF41FFE3FF3573FDFFFF49BB488EA162097F000041534D8D9BB881FFFF41FFE3FF355FFDFFFF49BB588EA162097F000041534D8D9BA881FFFF41FFE3FF354BFDFFFF49BB688EA162097F000041534D8D9B9881FFFF41FFE3FF353FFDFFFF49BB788EA162097F000041534D8D9B8881FFFF41FFE3FF352BFDFFFF49BB888EA162097F000041534D8D9B7881FFFF41FFE3FF3517FDFFFF49BB988EA162097F000041534D8D9B6881FFFF41FFE3FF3503FDFFFF49BBA88EA162097F000041534D8D9B5881FFFF41FFE3FF35EFFCFFFF49BBB88EA162097F000041534D8D9B4881FFFF41FFE3FF35DBFCFFFF49BBC88EA162097F000041534D8D9B3881FFFF41FFE3FF35C7FCFFFF49BBD88EA162097F000041534D8D9B2881FFFF41FFE3FF35B3FCFFFF49BBE88EA162097F000041534D8D9B1881FFFF41FFE3FF359FFCFFFF49BBF88EA162097F000041534D8D9B0881FFFF41FFE3
[3e4c19612b237be] jit-backend-dump}
[3e4c19612b2da53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18fa4 +0  25000000
[3e4c19612b2ee60] jit-backend-dump}
[3e4c19612b32bfe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19155 +0  25000000
[3e4c19612b33a1e] jit-backend-dump}
[3e4c19612b36ecf] {jit-backend-addr
bridge out of Guard 0x3d4c608 has address 0x7f0962a18fa0 to 0x7f0962a19150
       gc table: 0x7f0962a18f20
    jump target: 0x7f0962a18fa0
         resops: 0x7f0962a18fae
       failures: 0x7f0962a19150
            end: 0x7f0962a192ff
[3e4c19612b392f7] jit-backend-addr}
[3e4c19612b3cc1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18fc4 +0  CB010000
[3e4c19612b3d9cc] jit-backend-dump}
[3e4c19612b40daa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18fdb +0  D0010000
[3e4c19612b41a83] jit-backend-dump}
[3e4c19612b44b7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18ff2 +0  D5010000
[3e4c19612b4584f] jit-backend-dump}
[3e4c19612b48906] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18fff +0  E4010000
[3e4c19612b495e4] jit-backend-dump}
[3e4c19612b4c5e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19013 +0  EC010000
[3e4c19612b4d2a9] jit-backend-dump}
[3e4c19612b50301] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19034 +0  E7010000
[3e4c19612b50ff8] jit-backend-dump}
[3e4c19612b54093] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19045 +0  0E020000
[3e4c19612b54d81] jit-backend-dump}
[3e4c19612b57e8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19057 +0  18020000
[3e4c19612b58b81] jit-backend-dump}
[3e4c19612b5bc41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1906e +0  1D020000
[3e4c19612b5c92f] jit-backend-dump}
[3e4c19612b5fa57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1907f +0  28020000
[3e4c19612b60785] jit-backend-dump}
[3e4c19612b63933] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1908c +0  37020000
[3e4c19612b645f0] jit-backend-dump}
[3e4c19612b67685] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19099 +0  46020000
[3e4c19612b683ed] jit-backend-dump}
[3e4c19612b6b809] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a147f6 +0  A6470000
[3e4c19612b6c53a] jit-backend-dump}
[3e4c19612b70371] jit-backend}
[3e4c19612b73e16] {jit-log-opt-bridge
# bridge out of Guard 0x3d4c608 with 55 ops
[p0, p1, i2, p3]
+150: guard_nonnull_class(p1, 16510992, descr=<Guard0x3d55be0>) [p0, p1, i2, p3]
+168: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+172: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3d55c40>) [p0, p1, i2, p3]
+191: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+195: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x3d55ca0>) [p0, p1, i2, p3]
+214: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+218: guard_nonnull(p9, descr=<Guard0x3d62770>) [p0, p1, i2, p3]
+227: p10 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+238: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3d627b8>) [p0, p1, i2, p3]
+247: p12 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+251: p13 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
+251: p14 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+262: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x3d55d00>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(< y4845 x4843)')
+280: guard_not_invalidated(descr=<Guard0x3d62800>) [p0, p1, i2, p3]
+280: i16 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+284: i17 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+288: i18 = int_lt(i16, i17)
+291: guard_true(i18, descr=<Guard0x3d62848>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
+297: i20 = int_sub(i17, 1)
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+301: guard_class(p12, 16499664, descr=<Guard0x3d62890>) [p0, p1, i2, p3]
+315: p22 = getfield_gc_r(p12, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+320: guard_nonnull_class(p22, 16510992, descr=<Guard0x3d55d60>) [p0, p1, i2, p3]
+338: p24 = getfield_gc_r(p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+343: guard_class(p24, 16505296, descr=<Guard0x3d628d8>) [p0, p1, i2, p3]
+355: p26 = getfield_gc_r(p22, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+359: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x3d62920>) [p0, p1, i2, p3]
+368: p28 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+372: i29 = instance_ptr_eq(p12, p28)
+375: guard_true(i29, descr=<Guard0x3d62968>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+381: p30 = new_with_vtable(descr=<SizeDescr 48>)
+425: p31 = new_with_vtable(descr=<SizeDescr 16>)
+436: setfield_gc(p31, i20, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+440: p32 = new_with_vtable(descr=<SizeDescr 16>)
+451: setfield_gc(p32, i2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+462: p33 = new_with_vtable(descr=<SizeDescr 64>)
+473: setfield_gc(p33, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+484: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+488: setfield_gc(p33, p9, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_0 24 pure>)
+492: setfield_gc(p33, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_1 32 pure>)
+496: setfield_gc(p33, p7, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_2 40 pure>)
+500: setfield_gc(p33, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_3 48 pure>)
+504: setfield_gc(p33, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize5.inst__vals_4 56 pure>)
+508: setfield_gc(p30, p12, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+512: setfield_gc(p30, p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+516: setfield_gc(p30, p7, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+520: setfield_gc(p30, p32, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+524: setfield_gc(p30, p33, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+528: jump(p30, p0, descr=TargetToken(63233168))
+560: --end of the loop--
[3e4c19612ba34e0] jit-log-opt-bridge}
[3e4c19618996034] {jit-backend
[3e4c196189f4bdd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a
[3e4c19618a021f8] jit-backend-dump}
[3e4c19618a0d58e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19524 +0  25000000
[3e4c19618a0eba6] jit-backend-dump}
[3e4c19618a12fbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19705 +0  25000000
[3e4c19618a13f5f] jit-backend-dump}
[3e4c19618a174f3] {jit-backend-addr
bridge out of Guard 0x3d55b20 has address 0x7f0962a19520 to 0x7f0962a19700
       gc table: 0x7f0962a19460
    jump target: 0x7f0962a19520
         resops: 0x7f0962a1952e
       failures: 0x7f0962a19700
            end: 0x7f0962a19957
[3e4c19618a19aa5] jit-backend-addr}
[3e4c19618a1d2cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19544 +0  FB010000
[3e4c19618a1e140] jit-backend-dump}
[3e4c19618a213cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1955b +0  00020000
[3e4c19618a22120] jit-backend-dump}
[3e4c19618a2531e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19572 +0  05020000
[3e4c19618a26049] jit-backend-dump}
[3e4c19618a291d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19586 +0  0D020000
[3e4c19618a29f0a] jit-backend-dump}
[3e4c19618a2cf34] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1959a +0  15020000
[3e4c19618a2dc5f] jit-backend-dump}
[3e4c19618a30c09] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a195b6 +0  15020000
[3e4c19618a31934] jit-backend-dump}
[3e4c19618a34efb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a195c7 +0  3C020000
[3e4c19618a35c82] jit-backend-dump}
[3e4c19618a38ee8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a195d5 +0  4A020000
[3e4c19618a39c44] jit-backend-dump}
[3e4c19618a3cd19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a195e9 +0  52020000
[3e4c19618a3da97] jit-backend-dump}
[3e4c19618a40ac1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a195ff +0  58020000
[3e4c19618a417dc] jit-backend-dump}
[3e4c19618a449d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19610 +0  63020000
[3e4c19618a45708] jit-backend-dump}
[3e4c19618a4888f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19627 +0  68020000
[3e4c19618a495bd] jit-backend-dump}
[3e4c19618a4c75c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19635 +0  76020000
[3e4c19618a4d484] jit-backend-dump}
[3e4c19618a505a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19649 +0  7E020000
[3e4c19618a512ce] jit-backend-dump}
[3e4c19618a54256] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19656 +0  8D020000
[3e4c19618a54f74] jit-backend-dump}
[3e4c19618a57f24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19664 +0  9B020000
[3e4c19618a58c49] jit-backend-dump}
[3e4c19618a5bbe9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a1967b +0  A0020000
[3e4c19618a5c90e] jit-backend-dump}
[3e4c19618a5f8ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a19688 +0  AF020000
[3e4c19618a605d6] jit-backend-dump}
[3e4c19618a6386a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f0962a18c4a +0  D2080000
[3e4c19618a645fa] jit-backend-dump}
[3e4c19618a6852c] jit-backend}
[3e4c19618a6c0f0] {jit-log-opt-bridge
# bridge out of Guard 0x3d55b20 with 73 ops
[p0, p1, i2, p3]
+214: guard_nonnull_class(p1, 16510992, descr=<Guard0x3d55e80>) [p0, p1, i2, p3]
+232: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+236: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3d55ee0>) [p0, p1, i2, p3]
+255: p7 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+259: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x3d55f40>) [p0, p1, i2, p3]
+278: p9 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+289: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3d55fa0>) [p0, p1, i2, p3]
+298: p11 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+309: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3d63a90>) [p0, p1, i2, p3]
+318: p13 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+322: p14 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak v1 v2 v3 k)')
+322: p15 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+326: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x3d82020>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(< y4845 x4843)')
+346: guard_not_invalidated(descr=<Guard0x3d63ad8>) [p0, p1, i2, p3]
+346: i17 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+350: i18 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+354: i19 = int_lt(i17, i18)
+357: guard_false(i19, descr=<Guard0x3d63b20>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(k z4847)')
+363: guard_class(p13, 16499664, descr=<Guard0x3d63b68>) [p0, p1, i2, p3]
+377: p21 = getfield_gc_r(p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, 'a')
+377: p22 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+388: guard_value(p22, ConstPtr(ptr23), descr=<Guard0x3d63bb0>) [p0, p1, i2, p3]
+397: p24 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+401: p25 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4887 (add1 i4889)) from (k z4847)')
+405: guard_class(p24, 16504944, descr=<Guard0x3d63bf8>) [p0, p1, i2, p3]
+419: p27 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+423: guard_class(p27, 16499664, descr=<Guard0x3d63c40>) [p0, p1, i2, p3]
+436: p29 = getfield_gc_r(p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+440: guard_nonnull_class(p29, 16510992, descr=<Guard0x3d82080>) [p0, p1, i2, p3]
+459: i31 = getfield_gc_i(p24, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+463: i33 = int_add_ovf(i31, 1)
+467: guard_no_overflow(descr=<Guard0x3d63c88>) [p0, p1, i2, p3]
+473: p34 = getfield_gc_r(p29, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+484: guard_value(p34, ConstPtr(ptr35), descr=<Guard0x3d63cd0>) [p0, p1, i2, p3]
+493: p36 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+497: i37 = instance_ptr_eq(p27, p36)
+500: guard_true(i37, descr=<Guard0x3d63d18>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(let ([if1 (> i4889 cpstak-iters)]) (if if1 (begin (void) (void)) (begin (cpstak 18 12 6) (doloop4887 (add1 i4889))))) from (doloop4887 (add1 i4889))')
+506: guard_class(p25, 16528368, descr=<Guard0x3d63d60>) [p0, p1, i2, p3]
+520: p39 = getfield_gc_r(p25, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+525: guard_nonnull_class(p39, ConstClass(ForwardLink), descr=<Guard0x3d820e0>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(> i4889 cpstak-iters)')
+543: i42 = int_gt(i33, 9000)
+550: guard_false(i42, descr=<Guard0x3d63da8>) [p0, p1, i2, p3]
debug_merge_point(0, 0, '(if if1 (begin (void) (void)) (begin (cpstak 18 12 6) (doloop4887 (add1 i4889))))')
debug_merge_point(0, 0, '(begin (cpstak 18 12 6) (doloop4887 (add1 i4889)))')
debug_merge_point(0, 0, '(cpstak 18 12 6)')
+556: p43 = getfield_gc_r(p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([tak (lambda (x4843 y4845 z4847 k) (let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))))]) (tak x y z (lambda (a) a)))')
debug_merge_point(0, 0, '(lambda (x4843 y4845 z4847 k) (let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))))')
debug_merge_point(0, 0, '(tak x y z (lambda (a) a))')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak x y z (lambda (a) a))')
debug_merge_point(0, 0, '(< y4845 x4843)')
debug_merge_point(0, 0, '(if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k))))))))))')
debug_merge_point(0, 0, '(- x4843 1)')
debug_merge_point(0, 0, '(tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4845 x4843)]) (if (not AppRand0) (k z4847) (let ([AppRand1 (- x4843 1)]) (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))))) from (tak AppRand1 y4845 z4847 (lambda (v1) (let ([AppRand2 (- y4845 1)]) (tak AppRand2 z4847 x4843 (lambda (v2) (let ([AppRand3 (- z4847 1)]) (tak AppRand3 x4843 y4845 (lambda (v3) (tak v1 v2 v3 k)))))))))')
+556: p44 = new_with_vtable(descr=<SizeDescr 40>)
+597: p45 = new_with_vtable(descr=<SizeDescr 24>)
+608: setfield_gc(p45, p27, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+612: setfield_gc(p45, i33, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+616: setfield_gc(p44, p39, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+620: setfield_gc(p44, ConstPtr(ptr46), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+624: setfield_gc(p44, p45, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+628: setfield_gc(p44, p25, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+639: jump(ConstPtr(ptr47), p44, descr=TargetToken(63233168))
+672: --end of the loop--
[3e4c19618ab4f92] jit-log-opt-bridge}
[3e4c1bcc0682e52] {jit-summary
Tracing:      	19	0.014879
Backend:      	19	0.006101
TOTAL:      		64.070082
ops:             	19224
recorded ops:    	2848
  calls:         	0
guards:          	846
opt ops:         	1297
opt guards:      	442
opt guards shared:	299
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	42
nvholes:         	0
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	4
Total # of bridges:	15
Freed # of loops:	0
Freed # of bridges:	0
[3e4c1bcc0695dcd] jit-summary}
[3e4c1bcc06a09dc] {jit-backend-counts
entry 1:448
TargetToken(63233168):1281869926
TargetToken(63233248):149309933
entry 2:85
TargetToken(63837056):85
TargetToken(63837136):1431179774
entry 3:203
entry 4:37
TargetToken(63837216):37
TargetToken(63837296):1320749827
bridge 63214976:1114199788
bridge 63697944:811619888
bridge 63216512:1091069818
bridge 63698448:417059943
bridge 64274464:206549924
bridge 63214304:64
bridge 64275184:10
bridge 64307520:149489889
bridge 64277272:91079933
bridge 64277704:96119931
bridge 63699096:110429902
bridge 63698808:38879929
bridge 64280872:38969917
bridge 64275976:23129943
bridge 64314144:89949
[3e4c1bcc06a7421] jit-backend-counts}
