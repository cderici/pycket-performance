[3e4c249043fe487] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98434000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c24904413b57] jit-backend-dump}
[3e4c24904453c4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984340b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c24904456d9c] jit-backend-dump}
[3e4c2490446315d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98434180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c24904464eef] jit-backend-dump}
[3e4c2490446b4b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984341f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c2490446cf06] jit-backend-dump}
[3e4c24904474ff3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98434270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c24904476994] jit-backend-dump}
[3e4c2490447f374] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984342f
[3e4c24904482f2c] jit-backend-dump}
[3e4c2490448828c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98434510 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c2490448a992] jit-backend-dump}
[3e4c2490448f550] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf
[3e4c249044918fb] jit-backend-dump}
[3e4c2490451d850] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf
[3e4c24904520525] jit-backend-dump}
[3e4c2490452660c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984348f
[3e4c24904528eca] jit-backend-dump}
[3e4c2490452ddf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98434a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c2490452f63e] jit-backend-dump}
[3e4c24904541211] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98434af
[3e4c24904544724] jit-backend-dump}
[3e4c2490454c047] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98434ce
[3e4c2490454f1c1] jit-backend-dump}
[3e4c24904556b33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98434ee
[3e4c24904559f64] jit-backend-dump}
[3e4c24904560250] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984350d
[3e4c24904563296] jit-backend-dump}
[3e4c2490456c6b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984352c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB70424398BF7F000041FFD3E99CFFFFFF
[3e4c2490456e418] jit-backend-dump}
[3e4c249045732de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB70424398BF7F000041FFD3E9BCFFFFFF
[3e4c249045749cc] jit-backend-dump}
[3e4c249045798ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf
[3e4c2490457c274] jit-backend-dump}
[3e4c249045813fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984355c
[3e4c24904583a9f] jit-backend-dump}
[3e4c24904593190] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB704A4398BF7F000041FFE3
[3e4c249045949af] jit-backend-dump}
[3e4c24904ec9f03] {jit-backend
[3e4c24904fcd3ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984359c
[3e4c24904fd673f] jit-backend-dump}
[3e4c24904fe6763] {jit-backend-addr
Loop 1 ((let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)) has address 0x7fbf98435b1d to 0x7fbf98435d40 (bootstrap 0x7fbf98435a90)
       gc table: 0x7fbf984359c0
       function: 0x7fbf98435a90
         resops: 0x7fbf98435b1d
       failures: 0x7fbf98435d40
            end: 0x7fbf9843600f
[3e4c24904feb7e6] jit-backend-addr}
[3e4c24904ff0ca6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435b47 +0  24020000
[3e4c24904ff20f3] jit-backend-dump}
[3e4c24904ff57fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435b5d +0  2A020000
[3e4c24904ff6699] jit-backend-dump}
[3e4c24904ff9a06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435b70 +0  4F020000
[3e4c24904ffa796] jit-backend-dump}
[3e4c24904ffd7de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435b86 +0  55020000
[3e4c24904ffe4c3] jit-backend-dump}
[3e4c2490500140b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435b94 +0  63020000
[3e4c249050020c4] jit-backend-dump}
[3e4c24905004fcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435ba4 +0  6F020000
[3e4c24905005c70] jit-backend-dump}
[3e4c24905008b50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435bb8 +0  77020000
[3e4c249050097fd] jit-backend-dump}
[3e4c2490500c6ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435bcf +0  7C020000
[3e4c2490500d3a6] jit-backend-dump}
[3e4c24905010273] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435bdc +0  8B020000
[3e4c24905010f30] jit-backend-dump}
[3e4c24905013dfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435bed +0  96020000
[3e4c24905014aba] jit-backend-dump}
[3e4c2490501799a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435c10 +0  8F020000
[3e4c2490501864a] jit-backend-dump}
[3e4c2490501b52d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435c21 +0  9A020000
[3e4c2490501c1e7] jit-backend-dump}
[3e4c2490501f1ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435c39 +0  9E020000
[3e4c2490501fe69] jit-backend-dump}
[3e4c24905022d55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435c47 +0  AC020000
[3e4c249050239fc] jit-backend-dump}
[3e4c24905026907] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435c50 +0  BF020000
[3e4c249050275b1] jit-backend-dump}
[3e4c2490502a47b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435c61 +0  CA020000
[3e4c2490502b132] jit-backend-dump}
[3e4c2490502dfff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435c72 +0  D5020000
[3e4c2490502ecbf] jit-backend-dump}
[3e4c24905031c72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435cae +0  D1020000
[3e4c2490503293e] jit-backend-dump}
[3e4c24905035858] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435cb7 +0  E4020000
[3e4c24905036508] jit-backend-dump}
[3e4c249050393d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435cc8 +0  EF020000
[3e4c2490503a086] jit-backend-dump}
[3e4c2490503cf72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435cd9 +0  FA020000
[3e4c2490503dc88] jit-backend-dump}
[3e4c24905040b58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435d1d +0  D2020000
[3e4c24905041824] jit-backend-dump}
[3e4c24905045567] jit-backend}
[3e4c249050492d1] {jit-log-opt-loop
# Loop 1 ((let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)) : loop with 113 ops
[p0, p1]
+357: label(p0, p1, descr=TargetToken(55487568))
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+376: guard_class(p1, 16435920, descr=<Guard0x3245940>) [p0, p1]
+395: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+399: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3245a60>) [p0, p1]
debug_merge_point(0, 0, '(< i 0)')
+417: guard_not_invalidated(descr=<Guard0x34b1b68>) [p0, p1]
+417: guard_class(p0, 16500368, descr=<Guard0x34b1b20>) [p0, p1]
+436: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+440: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3245a00>) [p0, p1]
+458: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+462: i10 = int_lt(i8, 0)
+466: guard_false(i10, descr=<Guard0x34b1ad8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+472: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+476: guard_class(p11, 16478824, descr=<Guard0x34b1a90>) [p0, p1]
+488: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+499: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x34b1a48>) [p0, p1]
+508: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+512: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x32459a0>) [p0, p1]
+531: i17 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+535: i18 = int_lt(i8, i17)
+538: guard_true(i18, descr=<Guard0x34b1a00>) [p0, p1]
+544: p19 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+548: guard_class(p19, 16623624, descr=<Guard0x34b19b8>) [p0, p1]
+561: p21 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+565: f22 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+572: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+576: guard_nonnull_class(p23, ConstClass(W_Flonum), descr=<Guard0x3245ca0>) [p0, p1]
+596: f25 = getfield_gc_f(p23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+603: i26 = float_gt(f22, f25)
+607: guard_true(i26, descr=<Guard0x3509c88>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+613: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+617: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x3245d00>) [p0, p1]
+637: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+641: i31 = int_ge(i29, 0)
+645: guard_true(i31, descr=<Guard0x3509cd0>) [p0, p1]
+651: i32 = int_lt(i29, i17)
+654: guard_true(i32, descr=<Guard0x3509d18>) [p0, p1]
+660: f33 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+667: i34 = float_gt(f33, f25)
+671: guard_true(i34, descr=<Guard0x3509d60>) [p0, p1]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, 'or-part4864')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+677: i36 = int_sub(i8, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
+681: p37 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+685: guard_nonnull(p37, descr=<Guard0x3509da8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+694: label(p11, p37, i36, p6, p1, p3, p15, i17, p21, p23, f25, i8, descr=TargetToken(55487648))
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
debug_merge_point(0, 0, '(< i 0)')
+744: guard_not_invalidated(descr=<Guard0x3245d60>) [i36, p6, p37, p11, p1, p3]
+744: i39 = int_lt(i36, 0)
+748: guard_false(i39, descr=<Guard0x3509df0>) [i36, p6, p37, p11, p1, p3]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+754: i40 = int_lt(i36, i17)
+757: guard_true(i40, descr=<Guard0x3509e38>) [i36, p6, p37, p11, p1, p3]
+763: f41 = getarrayitem_gc_f(p21, i36, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+770: i42 = float_gt(f41, f25)
+774: guard_true(i42, descr=<Guard0x3509e80>) [i36, p6, p37, p11, p1, p3]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+780: f43 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+787: i44 = float_gt(f43, f25)
+791: guard_true(i44, descr=<Guard0x3509ec8>) [i36, p6, p37, p11, p1, p3]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, 'or-part4864')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+797: i46 = int_sub(i36, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+801: p47 = new_with_vtable(descr=<SizeDescr 16>)
+842: i48 = arraylen_gc(p21, descr=<ArrayF 8>)
+842: setfield_gc(p47, i36, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+846: i50 = int_le(i36, 9223372036854775806)
+859: guard_true(i50, descr=<Guard0x3245dc0>) [p1, i46, p47, None, None, p37, p11, None, None]
+865: jump(p11, p37, i46, p47, p1, p3, p15, i17, p21, p23, f25, i36, descr=TargetToken(55487648))
+896: --end of the loop--
[3e4c249050df194] jit-log-opt-loop}
[3e4c2490541d812] {jit-backend
[3e4c2490547e034] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436170 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB201000048FF0425807EB4018139101100000F85000000004C8B79084983FF01720741813F900F00000F8500000000813AD00C01000F85000000004C8B72184983FE01720741813E601400000F85000000004D8B6E084983FD000F8C000000004C8B620841813C24A8B800000F85000000004D8B5424104C8B0D00FFFFFF4D39CA0F85000000004D8B4C24284983F9017207418139F08C00000F85000000004D8B51084D39D50F8D000000004D8B411841813848EE02000F85000000004D8B4110F2470F1074E810498B7C24304883FF017206813F201200000F8500000000F2440F106F0866450F2EF50F8700000000488B72204883FE017206813E601400000F8500000000488B5E084883FB000F8C000000004C39D30F8D00000000F2450F1074D81066450F2EEE0F8200000000F2450F1074D81066450F2EF50F8700000000F2470F1074E81066450F2EEE0F8200000000498D5DFF488B72104885F60F84000000004C89A5300100004889B5400100004C89B54801000048898D380100004C89BD500100004C898D580100004889BD600100004C89EE4989DE41504D89D0415A66410F28CD49BBA05C4398BF7F000041FFE3669048C7442408FFFFFF0049BB20604398BF7F00004C895D204D8D9BD0E2FFFF41FFD3E928FEFFFFFF3564FDFFFF49BB30604398BF7F000041534D8D9BD0DFFFFF41FFE3FF3550FDFFFF49BB40604398BF7F000041534D8D9BC0DFFFFF41FFE3FF353CFDFFFF49BB50604398BF7F000041534D8D9BB0DFFFFF41FFE3FF3528FDFFFF49BB60604398BF7F000041534D8D9BA0DFFFFF41FFE3FF3514FDFFFF49BB70604398BF7F000041534D8D9B90DFFFFF41FFE3FF3500FDFFFF49BB80604398BF7F000041534D8D9B80DFFFFF41FFE3FF35ECFCFFFF49BB90604398BF7F000041534D8D9B70DFFFFF41FFE3FF35E0FCFFFF49BBA0604398BF7F000041534D8D9B60DFFFFF41FFE3FF35CCFCFFFF49BBB0604398BF7F000041534D8D9B50DFFFFF41FFE3FF35B8FCFFFF49BBC0604398BF7F000041534D8D9B40DFFFFF41FFE3FF35A4FCFFFF49BBD0604398BF7F000041534D8D9B30DFFFFF41FFE3FF3590FCFFFF49BBE0604398BF7F000041534D8D9B20DFFFFF41FFE3FF357CFCFFFF49BBF0604398BF7F000041534D8D9B10DFFFFF41FFE3FF3568FCFFFF49BB00614398BF7F000041534D8D9B00DFFFFF41FFE3FF3554FCFFFF49BB10614398BF7F000041534D8D9BF0DEFFFF41FFE3FF3540FCFFFF49BB20614398BF7F000041534D8D9BE0DEFFFF41FFE3FF352CFCFFFF49BB30614398BF7F000041534D8D9BD0DEFFFF41FFE3FF3518FCFFFF49BB40614398BF7F000041534D8D9BC0DEFFFF41FFE3FF3504FCFFFF49BB50614398BF7F000041534D8D9BB0DEFFFF41FFE3FF35F0FBFFFF49BB60614398BF7F000041534D8D9BA0DEFFFF41FFE3
[3e4c249054864b9] jit-backend-dump}
[3e4c24905490aad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436224 +0  23000000
[3e4c2490549203e] jit-backend-dump}
[3e4c24905495cb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984363e5 +0  23000000
[3e4c24905496afe] jit-backend-dump}
[3e4c24905499cd8] {jit-backend-addr
bridge out of Guard 0x3509c88 has address 0x7fbf98436220 to 0x7fbf984363e0
       gc table: 0x7fbf98436170
    jump target: 0x7fbf98436220
         resops: 0x7fbf9843622e
       failures: 0x7fbf984363e0
            end: 0x7fbf98436636
[3e4c2490549c1d6] jit-backend-addr}
[3e4c2490549f54f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843623e +0  C4010000
[3e4c249054a0381] jit-backend-dump}
[3e4c249054a332b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436255 +0  C9010000
[3e4c249054a40dc] jit-backend-dump}
[3e4c249054a70b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436261 +0  F5010000
[3e4c249054a7e0c] jit-backend-dump}
[3e4c249054aad73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436278 +0  FA010000
[3e4c249054abac2] jit-backend-dump}
[3e4c249054aeaa3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436286 +0  08020000
[3e4c249054af7e0] jit-backend-dump}
[3e4c249054b2676] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436298 +0  12020000
[3e4c249054b33a4] jit-backend-dump}
[3e4c249054b621f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984362ad +0  19020000
[3e4c249054b6f44] jit-backend-dump}
[3e4c249054b9da6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984362c5 +0  1D020000
[3e4c249054baada] jit-backend-dump}
[3e4c249054bd940] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984362d2 +0  2C020000
[3e4c249054be661] jit-backend-dump}
[3e4c249054c1499] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984362e3 +0  37020000
[3e4c249054c21d3] jit-backend-dump}
[3e4c249054c4fd6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436305 +0  31020000
[3e4c249054c5d01] jit-backend-dump}
[3e4c249054c8b08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436316 +0  3C020000
[3e4c249054c9830] jit-backend-dump}
[3e4c249054cc664] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843632c +0  42020000
[3e4c249054cd392] jit-backend-dump}
[3e4c249054d01f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843633a +0  50020000
[3e4c249054d0f3b] jit-backend-dump}
[3e4c249054d3e05] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436343 +0  63020000
[3e4c249054d4b48] jit-backend-dump}
[3e4c249054d7967] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436355 +0  6D020000
[3e4c249054d86ab] jit-backend-dump}
[3e4c249054db4fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436367 +0  77020000
[3e4c249054dc23e] jit-backend-dump}
[3e4c249054df057] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436379 +0  81020000
[3e4c249054dfd97] jit-backend-dump}
[3e4c249054e2c7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843638a +0  8C020000
[3e4c249054e39bd] jit-backend-dump}
[3e4c249054e836d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435c21 +0  FB050000
[3e4c249054e91b7] jit-backend-dump}
[3e4c249054ef8aa] jit-backend}
[3e4c249054f363f] {jit-log-opt-bridge
# bridge out of Guard 0x3509c88 with 78 ops
[p0, p1]
+198: guard_class(p1, 16435920, descr=<Guard0x3245e20>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+214: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3245e80>) [p0, p1]
debug_merge_point(0, 0, '(< i 0)')
+233: guard_not_invalidated(descr=<Guard0x3509f10>) [p0, p1]
+233: guard_class(p0, 16500368, descr=<Guard0x3509f58>) [p0, p1]
+245: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+249: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3245ee0>) [p0, p1]
+268: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+272: i10 = int_lt(i8, 0)
+276: guard_false(i10, descr=<Guard0x3509fa0>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+282: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+286: guard_class(p11, 16478824, descr=<Guard0x3582020>) [p0, p1]
+300: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+312: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x3582068>) [p0, p1]
+321: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+326: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x3245f40>) [p0, p1]
+345: i17 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+349: i18 = int_lt(i8, i17)
+352: guard_true(i18, descr=<Guard0x35820b0>) [p0, p1]
+358: p19 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+362: guard_class(p19, 16623624, descr=<Guard0x35820f8>) [p0, p1]
+375: p21 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+379: f22 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+386: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+391: guard_nonnull_class(p23, ConstClass(W_Flonum), descr=<Guard0x3245fa0>) [p0, p1]
+409: f25 = getfield_gc_f(p23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+415: i26 = float_gt(f22, f25)
+420: guard_false(i26, descr=<Guard0x3582140>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+426: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+430: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x3584020>) [p0, p1]
+448: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+452: i31 = int_ge(i29, 0)
+456: guard_true(i31, descr=<Guard0x3582188>) [p0, p1]
+462: i32 = int_lt(i29, i17)
+465: guard_true(i32, descr=<Guard0x35821d0>) [p0, p1]
+471: f33 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+478: i34 = float_ge(f25, f33)
+483: guard_true(i34, descr=<Guard0x3582218>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+489: f35 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+496: i36 = float_gt(f35, f25)
+501: guard_false(i36, descr=<Guard0x3582260>) [p0, p1]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+507: f37 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+514: i38 = float_ge(f25, f37)
+519: guard_true(i38, descr=<Guard0x35822a8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+525: i40 = int_sub(i8, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
+529: p41 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+533: guard_nonnull(p41, descr=<Guard0x35822f0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+542: i42 = arraylen_gc(p21, descr=<ArrayF 8>)
+542: jump(p11, p41, i40, p6, p1, p3, p15, i17, p21, p23, f25, i8, descr=TargetToken(55487648))
+624: --end of the loop--
[3e4c2490553d2cc] jit-log-opt-bridge}
[3e4c2490585b5f6] {jit-backend
[3e4c249058b3c8c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf
[3e4c249058bb6d4] jit-backend-dump}
[3e4c249058c608b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436804 +0  23000000
[3e4c249058c758a] jit-backend-dump}
[3e4c249058cb3d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984369c5 +0  23000000
[3e4c249058cc23c] jit-backend-dump}
[3e4c249058cf413] {jit-backend-addr
bridge out of Guard 0x3509e80 has address 0x7fbf98436800 to 0x7fbf984369c0
       gc table: 0x7fbf98436770
    jump target: 0x7fbf98436800
         resops: 0x7fbf9843680e
       failures: 0x7fbf984369c0
            end: 0x7fbf98436bc3
[3e4c249058d1a21] jit-backend-addr}
[3e4c249058d4d3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843681c +0  FF010000
[3e4c249058d5b58] jit-backend-dump}
[3e4c249058d8bd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843683b +0  FC010000
[3e4c249058d990c] jit-backend-dump}
[3e4c249058dc7c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436857 +0  FC010000
[3e4c249058dd4f5] jit-backend-dump}
[3e4c249058e032f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843686f +0  00020000
[3e4c249058e104e] jit-backend-dump}
[3e4c249058e3e7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843687c +0  0F020000
[3e4c249058e4b9b] jit-backend-dump}
[3e4c249058e79ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843688d +0  1A020000
[3e4c249058e86c6] jit-backend-dump}
[3e4c249058eb572] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984368af +0  14020000
[3e4c249058ec294] jit-backend-dump}
[3e4c249058ef0a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984368c0 +0  1F020000
[3e4c249058efd9d] jit-backend-dump}
[3e4c249058f2bf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984368d5 +0  26020000
[3e4c249058f38e7] jit-backend-dump}
[3e4c249058f66fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984368de +0  39020000
[3e4c249058f73f7] jit-backend-dump}
[3e4c249058fa238] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984368f0 +0  43020000
[3e4c249058faf28] jit-backend-dump}
[3e4c249058fdd69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436902 +0  4D020000
[3e4c249058fea75] jit-backend-dump}
[3e4c249059018b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436914 +0  57020000
[3e4c249059025c5] jit-backend-dump}
[3e4c24905905468] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436926 +0  61020000
[3e4c24905906152] jit-backend-dump}
[3e4c24905909032] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436966 +0  3D020000
[3e4c24905909d2f] jit-backend-dump}
[3e4c2490590ce1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435cc8 +0  340B0000
[3e4c2490590db60] jit-backend-dump}
[3e4c249059119ad] jit-backend}
[3e4c249059154f4] {jit-log-opt-bridge
# bridge out of Guard 0x3509e80 with 71 ops
[i0, p1, p2, p3, p4, p5]
+166: guard_not_invalidated(descr=<Guard0x3584080>) [i0, p1, p2, p3, p4, p5]
+166: i7 = int_lt(i0, 0)
+170: guard_false(i7, descr=<Guard0x3582338>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
+176: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+187: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x35840e0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-ref yp i)')
+207: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+226: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3582380>) [i0, p1, p2, p3, p4, p5]
+235: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+240: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3584140>) [i0, p1, p2, p3, p4, p5]
+259: i14 = getfield_gc_i(p12, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+263: i15 = int_lt(i0, i14)
+266: guard_true(i15, descr=<Guard0x35823c8>) [i0, p1, p2, p3, p4, p5]
+272: p16 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+276: guard_class(p16, 16623624, descr=<Guard0x3582410>) [i0, p1, p2, p3, p4, p5]
+289: p18 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+293: f19 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+300: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+305: guard_nonnull_class(p20, ConstClass(W_Flonum), descr=<Guard0x35841a0>) [i0, p1, p2, p3, p4, p5]
+323: f22 = getfield_gc_f(p20, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+329: i23 = float_gt(f19, f22)
+334: guard_false(i23, descr=<Guard0x3582458>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+340: i24 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+351: i26 = int_ge(i24, 0)
+355: guard_true(i26, descr=<Guard0x35824a0>) [i0, p1, p2, p3, p4, p5]
+361: i27 = int_lt(i24, i14)
+364: guard_true(i27, descr=<Guard0x35824e8>) [i0, p1, p2, p3, p4, p5]
+370: f28 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+377: i29 = float_ge(f22, f28)
+382: guard_true(i29, descr=<Guard0x3582530>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+388: f30 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+395: i31 = float_gt(f30, f22)
+400: guard_false(i31, descr=<Guard0x3582578>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+406: f32 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+413: i33 = float_ge(f22, f32)
+418: guard_true(i33, descr=<Guard0x35825c0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+424: i35 = int_sub(i0, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
+428: guard_nonnull(p2, descr=<Guard0x3582608>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+442: p36 = new_with_vtable(descr=<SizeDescr 16>)
+483: i37 = arraylen_gc(p18, descr=<ArrayF 8>)
+483: setfield_gc(p36, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+487: i39 = int_le(i0, 9223372036854775806)
+500: guard_true(i39, descr=<Guard0x3584200>) [p4, i35, p36, None, None, p2, p3, None, None]
+506: jump(p3, p2, i35, p36, p4, p8, p12, i14, p18, p20, f22, i0, descr=TargetToken(55487648))
+592: --end of the loop--
[3e4c249059539d8] jit-log-opt-bridge}
[3e4c249060b4d38] {jit-backend
[3e4c249061846ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436dd
[3e4c24906191344] jit-backend-dump}
[3e4c2490619b5a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436ef4 +0  23000000
[3e4c2490619ca8c] jit-backend-dump}
[3e4c249061a0ad1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437275 +0  23000000
[3e4c249061a1b51] jit-backend-dump}
[3e4c249061a4ecb] {jit-backend-addr
bridge out of Guard 0x3509df0 has address 0x7fbf98436ef0 to 0x7fbf98437270
       gc table: 0x7fbf98436dd0
    jump target: 0x7fbf98436ef0
         resops: 0x7fbf98436efe
       failures: 0x7fbf98437270
            end: 0x7fbf984375a1
[3e4c249061a738c] jit-backend-addr}
[3e4c249061aab9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436f0c +0  BF030000
[3e4c249061aba7f] jit-backend-dump}
[3e4c249061aeb98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436f26 +0  C1030000
[3e4c249061af927] jit-backend-dump}
[3e4c249061b293f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436f41 +0  C2030000
[3e4c249061b36ad] jit-backend-dump}
[3e4c249061b6752] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436f59 +0  C6030000
[3e4c249061b74bd] jit-backend-dump}
[3e4c249061ba393] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436f67 +0  D4030000
[3e4c249061bb0e3] jit-backend-dump}
[3e4c249061be20b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436f7f +0  D8030000
[3e4c249061bef4e] jit-backend-dump}
[3e4c249061c20cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436f8c +0  E7030000
[3e4c249061c2e40] jit-backend-dump}
[3e4c249061c5d51] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436fa7 +0  E8030000
[3e4c249061c6aa6] jit-backend-dump}
[3e4c249061c9940] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436fb5 +0  F6030000
[3e4c249061ca68c] jit-backend-dump}
[3e4c249061cd5c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436fce +0  F9030000
[3e4c249061ce2f9] jit-backend-dump}
[3e4c249061d119e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436fe5 +0  FE030000
[3e4c249061d1eba] jit-backend-dump}
[3e4c249061d4d66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436ffc +0  03040000
[3e4c249061d5a9a] jit-backend-dump}
[3e4c249061d89a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437009 +0  12040000
[3e4c249061d96bd] jit-backend-dump}
[3e4c249061dc550] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437020 +0  17040000
[3e4c249061dd278] jit-backend-dump}
[3e4c249061e0139] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437036 +0  1D040000
[3e4c249061e0e45] jit-backend-dump}
[3e4c249061e3c98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437047 +0  28040000
[3e4c249061e49ba] jit-backend-dump}
[3e4c249061e7875] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437051 +0  3A040000
[3e4c249061e857e] jit-backend-dump}
[3e4c249061eb408] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843705e +0  49040000
[3e4c249061ec121] jit-backend-dump}
[3e4c249061ef062] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843706e +0  55040000
[3e4c249061efd62] jit-backend-dump}
[3e4c249061f2bbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843708e +0  51040000
[3e4c249061f38e3] jit-backend-dump}
[3e4c249061f6795] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984370a6 +0  4F040000
[3e4c249061f74b1] jit-backend-dump}
[3e4c249061fe37d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984370af +0  62040000
[3e4c249061ff150] jit-backend-dump}
[3e4c249062021e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984370bf +0  6E040000
[3e4c24906202e99] jit-backend-dump}
[3e4c249062060c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843711a +0  2F040000
[3e4c24906206dc8] jit-backend-dump}
[3e4c24906209cfa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843713f +0  26040000
[3e4c2490620aa2e] jit-backend-dump}
[3e4c2490620d8d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437213 +0  6E030000
[3e4c2490620e5dd] jit-backend-dump}
[3e4c2490621175e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435cae +0  3E120000
[3e4c2490621246a] jit-backend-dump}
[3e4c2490621633a] jit-backend}
[3e4c24906219e41] {jit-log-opt-bridge
# bridge out of Guard 0x3509df0 with 149 ops
[i0, p1, p2, p3, p4, p5]
+310: guard_not_invalidated(descr=<Guard0x3584260>) [i0, p1, p2, p3, p4, p5]
+310: i7 = int_lt(i0, 0)
+314: guard_true(i7, descr=<Guard0x3582650>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+320: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x35842c0>) [i0, p1, p2, p3, p4, p5]
+346: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+364: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3582698>) [i0, p1, p2, p3, p4, p5]
+373: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+377: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if11 (let ([SetBang8 (+ CellRef(count) 1)]) (set! count SetBang8)) (void))')
+388: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+391: guard_false(i14, descr=<Guard0x35826e0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([SetBang8 (+ CellRef(count) 1)]) (set! count SetBang8))')
+397: guard_class(p12, 16435208, descr=<Guard0x3582728>) [i0, p1, p2, p3, p4, p5]
+411: p16 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+416: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x3584320>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(+ CellRef(count) 1)')
+435: guard_class(p11, 16500368, descr=<Guard0x3582770>) [i0, p1, p2, p3, p4, p5]
+448: p19 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+452: p20 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+456: guard_nonnull_class(p20, ConstClass(W_CellIntegerStrategy), descr=<Guard0x3584380>) [i0, p1, p2, p3, p4, p5]
+475: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+479: i24 = int_add_ovf(i22, 1)
+483: guard_no_overflow(descr=<Guard0x35827b8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(set! count SetBang8)')
+489: p25 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+494: setfield_gc(p20, i24, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+505: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x35843e0>) [p25, p12, None, None, None, None, None, None]
+514: p28 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+519: p29 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+524: guard_class(p29, 16435208, descr=<Guard0x3582800>) [p25, p12, None, None, None, None, None, None]
+537: p31 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+541: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x3584440>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if12 (pt-in-poly2 xp4901 yp4903 0.5 -0.25)]) (if if12 (let ([SetBang9 (+ CellRef(count) 1)]) (set! count SetBang9)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 0.5 -0.25)')
+560: guard_class(p28, 16500368, descr=<Guard0x3582848>) [p25, p12, None, None, None, None, None, None]
+573: p34 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+577: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x35844a0>) [p25, p12, None, None, None, None, None, None]
+596: p36 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+600: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x3584500>) [p25, p12, None, None, None, None, None, None]
+618: p38 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+618: i39 = getfield_gc_i(p34, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+622: i41 = int_sub_ovf(i39, 1)
+629: guard_no_overflow(descr=<Guard0x3582890>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+635: i43 = int_lt(i41, 0)
+639: guard_false(i43, descr=<Guard0x35828d8>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+645: i44 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+649: i45 = int_lt(i41, i44)
+652: guard_true(i45, descr=<Guard0x3582920>) [p25, p12, None, None, None, None, None, None]
+658: p46 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+662: guard_class(p46, 16623624, descr=<Guard0x3582968>) [p25, p12, None, None, None, None, None, None]
+674: p48 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+678: f49 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+685: i51 = float_gt(f49, -0.250000)
+700: guard_false(i51, descr=<Guard0x35829b0>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+706: f53 = getarrayitem_gc_f(p48, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+712: i55 = float_ge(-0.250000, f53)
+724: guard_false(i55, descr=<Guard0x35829f8>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+730: i56 = int_lt(i41, i39)
+733: guard_true(i56, descr=<Guard0x3582a40>) [p25, p12, None, None, None, None, None, None]
+739: p57 = getfield_gc_r(p34, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+743: guard_class(p57, 16623624, descr=<Guard0x3582a88>) [p25, p12, None, None, None, None, None, None]
+755: p59 = getfield_gc_r(p34, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+759: f60 = getarrayitem_gc_f(p59, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+766: f61 = getarrayitem_gc_f(p59, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+772: f62 = getarrayitem_gc_f(p59, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+779: f63 = float_sub(f61, f62)
debug_merge_point(0, 0, '(vector-ref yp i)')
+784: f64 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+791: f66 = float_sub(-0.250000, f64)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+811: f67 = float_mul(f63, f66)
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(vector-ref yp i)')
+816: f68 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+823: f69 = float_sub(f53, f68)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+828: i71 = float_eq(f69, 0.000000)
+840: guard_false(i71, descr=<Guard0x3582ad0>) [p25, p12, None, None, None, None, None, None]
+846: f72 = float_truediv(f67, f69)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+851: f73 = float_add(f60, f72)
debug_merge_point(0, 0, '(>= x AppRand15)')
+856: i75 = float_ge(0.500000, f73)
+877: guard_true(i75, descr=<Guard0x3582b18>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+883: i77 = int_sub(i41, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+887: p78 = new_with_vtable(descr=<SizeDescr 56>)
+934: p79 = new_with_vtable(descr=<SizeDescr 16>)
+945: p80 = new_with_vtable(descr=<SizeDescr 40>)
+956: p81 = new_with_vtable(descr=<SizeDescr 40>)
+974: setfield_gc(p81, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+978: setfield_gc(p81, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+982: setfield_gc(p81, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+993: setfield_gc(p81, ConstPtr(ptr82), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+997: i83 = arraylen_gc(p48, descr=<ArrayF 8>)
+1004: setfield_gc(p80, ConstPtr(ptr84), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1008: setfield_gc(p80, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1012: setfield_gc(p80, p81, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1016: setfield_gc(p80, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1027: setfield_gc(p78, ConstPtr(ptr85), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1038: setfield_gc(p78, ConstPtr(ptr86), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1042: setfield_gc(p78, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1053: setfield_gc(p78, ConstPtr(ptr87), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1057: setfield_gc(p78, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1068: setfield_gc(p78, ConstPtr(ptr88), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1072: setfield_gc(p79, i41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1076: i90 = int_le(i41, 9223372036854775806)
+1089: guard_true(i90, descr=<Guard0x3584560>) [p80, i77, p79, p78, None, None, None, None, None, None]
+1095: jump(p78, ConstPtr(ptr91), i77, p79, p80, p31, p36, i44, p48, ConstPtr(ptr88), -0.250000, i41, descr=TargetToken(55487648))
+1184: --end of the loop--
[3e4c249062a1b1e] jit-log-opt-bridge}
[3e4c2490662b147] {jit-backend
[3e4c249066a6962] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf
[3e4c249066b11e5] jit-backend-dump}
[3e4c249066bbe2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437804 +0  23000000
[3e4c249066bd2d4] jit-backend-dump}
[3e4c249066c12ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437a85 +0  23000000
[3e4c249066c224c] jit-backend-dump}
[3e4c249066c548a] {jit-backend-addr
bridge out of Guard 0x3509ec8 has address 0x7fbf98437800 to 0x7fbf98437a80
       gc table: 0x7fbf98437740
    jump target: 0x7fbf98437800
         resops: 0x7fbf9843780e
       failures: 0x7fbf98437a80
            end: 0x7fbf98437d2b
[3e4c249066c77b7] jit-backend-addr}
[3e4c249066cad48] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843781c +0  BF020000
[3e4c249066cbb7d] jit-backend-dump}
[3e4c249066cedac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843783b +0  BC020000
[3e4c249066cfaa6] jit-backend-dump}
[3e4c249066d2b8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437857 +0  BC020000
[3e4c249066d386c] jit-backend-dump}
[3e4c249066d686b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843786f +0  C0020000
[3e4c249066d758a] jit-backend-dump}
[3e4c249066da54c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843787c +0  CF020000
[3e4c249066db249] jit-backend-dump}
[3e4c249066de1c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843788d +0  DA020000
[3e4c249066dee7e] jit-backend-dump}
[3e4c249066e1dba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984378af +0  D4020000
[3e4c249066e2a92] jit-backend-dump}
[3e4c249066e5b52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984378c0 +0  DF020000
[3e4c249066e6815] jit-backend-dump}
[3e4c249066e976f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984378d5 +0  E6020000
[3e4c249066ed995] jit-backend-dump}
[3e4c249066f14b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984378de +0  F9020000
[3e4c249066f222e] jit-backend-dump}
[3e4c249066f5390] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984378f0 +0  03030000
[3e4c249066f60d4] jit-backend-dump}
[3e4c249066f923f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437902 +0  0D030000
[3e4c249066f9f45] jit-backend-dump}
[3e4c249066fd027] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437919 +0  12030000
[3e4c249066fdcf9] jit-backend-dump}
[3e4c24906700cb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437926 +0  21030000
[3e4c2490670195c] jit-backend-dump}
[3e4c249067049c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437936 +0  2D030000
[3e4c24906705680] jit-backend-dump}
[3e4c249067085fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843794a +0  35030000
[3e4c249067092a6] jit-backend-dump}
[3e4c2490670c3ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984379a1 +0  FA020000
[3e4c2490670d085] jit-backend-dump}
[3e4c249067100af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984379c2 +0  F5020000
[3e4c24906710d5f] jit-backend-dump}
[3e4c24906713d15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984379d3 +0  00030000
[3e4c24906714a49] jit-backend-dump}
[3e4c249067179cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984379e5 +0  0A030000
[3e4c2490671867f] jit-backend-dump}
[3e4c2490671b5d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437a25 +0  E6020000
[3e4c2490671c280] jit-backend-dump}
[3e4c2490671f4b5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98435cd9 +0  231B0000
[3e4c24906720194] jit-backend-dump}
[3e4c24906724294] jit-backend}
[3e4c24906727d94] {jit-log-opt-bridge
# bridge out of Guard 0x3509ec8 with 114 ops
[i0, p1, p2, p3, p4, p5]
+214: guard_not_invalidated(descr=<Guard0x35845c0>) [i0, p1, p2, p3, p4, p5]
+214: i7 = int_lt(i0, 0)
+218: guard_false(i7, descr=<Guard0x3582b60>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
+224: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+235: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3584620>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-ref yp i)')
+255: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+274: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3582ba8>) [i0, p1, p2, p3, p4, p5]
+283: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+288: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3584680>) [i0, p1, p2, p3, p4, p5]
+307: i14 = getfield_gc_i(p12, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+311: i15 = int_lt(i0, i14)
+314: guard_true(i15, descr=<Guard0x3582bf0>) [i0, p1, p2, p3, p4, p5]
+320: p16 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+324: guard_class(p16, 16623624, descr=<Guard0x3582c38>) [i0, p1, p2, p3, p4, p5]
+337: p18 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+341: f19 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+348: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+353: guard_nonnull_class(p20, ConstClass(W_Flonum), descr=<Guard0x35846e0>) [i0, p1, p2, p3, p4, p5]
+371: f22 = getfield_gc_f(p20, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+377: i23 = float_gt(f19, f22)
+382: guard_true(i23, descr=<Guard0x3582c80>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+388: i24 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+399: i26 = int_ge(i24, 0)
+403: guard_true(i26, descr=<Guard0x3582cc8>) [i0, p1, p2, p3, p4, p5]
+409: i27 = int_lt(i24, i14)
+412: guard_true(i27, descr=<Guard0x3582d10>) [i0, p1, p2, p3, p4, p5]
+418: f28 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+425: i29 = float_gt(f28, f22)
+430: guard_false(i29, descr=<Guard0x3582d58>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+436: f30 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+443: i31 = float_ge(f22, f30)
+448: guard_false(i31, descr=<Guard0x3582da0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+454: p32 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+459: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x3584740>) [i0, p1, p2, p3, p4, p5]
+477: i34 = getfield_gc_i(p32, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+481: i35 = int_lt(i0, i34)
+484: guard_true(i35, descr=<Guard0x3582de8>) [i0, p1, p2, p3, p4, p5]
+490: p36 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+494: guard_class(p36, 16623624, descr=<Guard0x3582e30>) [i0, p1, p2, p3, p4, p5]
+506: p38 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+510: f39 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+517: i40 = int_lt(i24, i34)
+520: guard_true(i40, descr=<Guard0x3582e78>) [i0, p1, p2, p3, p4, p5]
+526: f41 = getarrayitem_gc_f(p38, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+533: f42 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+540: f43 = float_sub(f41, f42)
debug_merge_point(0, 0, '(vector-ref yp i)')
+545: f44 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+552: f45 = float_sub(f22, f44)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+562: f46 = float_mul(f43, f45)
debug_merge_point(0, 0, '(vector-ref yp j)')
+567: f47 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+574: f48 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+581: f49 = float_sub(f47, f48)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+586: i51 = float_eq(f49, 0.000000)
+607: guard_false(i51, descr=<Guard0x3582ec0>) [i0, p1, p2, p3, p4, p5]
+613: f52 = float_truediv(f46, f49)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+618: f53 = float_add(f39, f52)
debug_merge_point(0, 0, '(>= x AppRand15)')
+623: p54 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+628: guard_nonnull_class(p54, ConstClass(W_Flonum), descr=<Guard0x35847a0>) [i0, p1, p2, p3, p4, p5]
+646: f56 = getfield_gc_f(p54, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+652: i57 = float_ge(f56, f53)
+657: guard_true(i57, descr=<Guard0x3582f08>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+663: i59 = int_sub(i0, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
+667: guard_nonnull(p2, descr=<Guard0x3582f50>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+681: p60 = new_with_vtable(descr=<SizeDescr 16>)
+722: i61 = arraylen_gc(p18, descr=<ArrayF 8>)
+722: setfield_gc(p60, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+726: i63 = int_le(i0, 9223372036854775806)
+739: guard_true(i63, descr=<Guard0x3584800>) [p4, i59, p60, None, None, p2, p3, None, None]
+745: jump(p3, p2, i59, p60, p4, p8, p12, i14, p18, p20, f22, i0, descr=TargetToken(55487648))
+832: --end of the loop--
[3e4c24906782335] jit-log-opt-bridge}
[3e4c24906c7d22b] {jit-backend
[3e4c24906cfcfc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437eb
[3e4c24906d05b78] jit-backend-dump}
[3e4c24906d10300] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437f64 +0  23000000
[3e4c24906d118a6] jit-backend-dump}
[3e4c24906d15896] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984381b5 +0  23000000
[3e4c24906d167aa] jit-backend-dump}
[3e4c24906d19b0b] {jit-backend-addr
bridge out of Guard 0x3582530 has address 0x7fbf98437f60 to 0x7fbf984381b0
       gc table: 0x7fbf98437eb0
    jump target: 0x7fbf98437f60
         resops: 0x7fbf98437f6e
       failures: 0x7fbf984381b0
            end: 0x7fbf9843843f
[3e4c24906d1bf33] jit-backend-addr}
[3e4c24906d1f4af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437f7c +0  8F020000
[3e4c24906d2030e] jit-backend-dump}
[3e4c24906d234c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437f94 +0  93020000
[3e4c24906d241bd] jit-backend-dump}
[3e4c24906d27212] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437fa9 +0  9A020000
[3e4c24906d27ecc] jit-backend-dump}
[3e4c24906d2af98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437fc1 +0  9E020000
[3e4c24906d2bc4b] jit-backend-dump}
[3e4c24906d2eca6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437fce +0  AD020000
[3e4c24906d2f954] jit-backend-dump}
[3e4c24906d329b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98437fdf +0  B8020000
[3e4c24906d3365c] jit-backend-dump}
[3e4c24906d36719] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438001 +0  B2020000
[3e4c24906d373c7] jit-backend-dump}
[3e4c24906d3a47a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438012 +0  BD020000
[3e4c24906d3b125] jit-backend-dump}
[3e4c24906d3e1c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438020 +0  CB020000
[3e4c24906d3ee58] jit-backend-dump}
[3e4c24906d41e85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438029 +0  DE020000
[3e4c24906d42b23] jit-backend-dump}
[3e4c24906d45c70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843803b +0  E8020000
[3e4c24906d46911] jit-backend-dump}
[3e4c24906d499c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438052 +0  ED020000
[3e4c24906d4a672] jit-backend-dump}
[3e4c24906d4d6af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843805f +0  FC020000
[3e4c24906d4e34a] jit-backend-dump}
[3e4c24906d51435] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843806f +0  08030000
[3e4c24906d520d3] jit-backend-dump}
[3e4c24906d55156] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438083 +0  10030000
[3e4c24906d55df4] jit-backend-dump}
[3e4c24906d58e5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984380da +0  D5020000
[3e4c24906d59b0f] jit-backend-dump}
[3e4c24906d5cbc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984380fb +0  D0020000
[3e4c24906d5d86a] jit-backend-dump}
[3e4c24906d6095e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843810c +0  DB020000
[3e4c24906d61605] jit-backend-dump}
[3e4c24906d64733] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843811e +0  E5020000
[3e4c24906d653e4] jit-backend-dump}
[3e4c24906d6840b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843815e +0  C1020000
[3e4c24906d690bb] jit-backend-dump}
[3e4c24906d6c407] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984368f0 +0  6C160000
[3e4c24906d6d0c0] jit-backend-dump}
[3e4c24906d710e7] jit-backend}
[3e4c24906d74d29] {jit-log-opt-bridge
# bridge out of Guard 0x3582530 with 106 ops
[i0, p1, p2, p3, p4, p5]
+198: guard_not_invalidated(descr=<Guard0x3584860>) [i0, p1, p2, p3, p4, p5]
+198: i7 = int_lt(i0, 0)
+202: guard_false(i7, descr=<Guard0x3582f98>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
+208: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+212: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x35848c0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-ref yp i)')
+232: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+244: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3582fe0>) [i0, p1, p2, p3, p4, p5]
+253: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+258: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3584920>) [i0, p1, p2, p3, p4, p5]
+277: i14 = getfield_gc_i(p12, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+281: i15 = int_lt(i0, i14)
+284: guard_true(i15, descr=<Guard0x3583028>) [i0, p1, p2, p3, p4, p5]
+290: p16 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+294: guard_class(p16, 16623624, descr=<Guard0x3583070>) [i0, p1, p2, p3, p4, p5]
+307: p18 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+311: f19 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+318: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+323: guard_nonnull_class(p20, ConstClass(W_Flonum), descr=<Guard0x3584980>) [i0, p1, p2, p3, p4, p5]
+341: f22 = getfield_gc_f(p20, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+347: i23 = float_gt(f19, f22)
+352: guard_false(i23, descr=<Guard0x35830b8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+358: i24 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+362: i26 = int_ge(i24, 0)
+366: guard_true(i26, descr=<Guard0x3583100>) [i0, p1, p2, p3, p4, p5]
+372: i27 = int_lt(i24, i14)
+375: guard_true(i27, descr=<Guard0x3583148>) [i0, p1, p2, p3, p4, p5]
+381: f28 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+388: i29 = float_ge(f22, f28)
+393: guard_false(i29, descr=<Guard0x3583190>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+399: p30 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+404: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x35849e0>) [i0, p1, p2, p3, p4, p5]
+422: i32 = getfield_gc_i(p30, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+426: i33 = int_lt(i0, i32)
+429: guard_true(i33, descr=<Guard0x35831d8>) [i0, p1, p2, p3, p4, p5]
+435: p34 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+439: guard_class(p34, 16623624, descr=<Guard0x3583220>) [i0, p1, p2, p3, p4, p5]
+451: p36 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+455: f37 = getarrayitem_gc_f(p36, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+462: i38 = int_lt(i24, i32)
+465: guard_true(i38, descr=<Guard0x3583268>) [i0, p1, p2, p3, p4, p5]
+471: f39 = getarrayitem_gc_f(p36, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+478: f40 = getarrayitem_gc_f(p36, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+485: f41 = float_sub(f39, f40)
debug_merge_point(0, 0, '(vector-ref yp i)')
+490: f42 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+497: f43 = float_sub(f22, f42)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+507: f44 = float_mul(f41, f43)
debug_merge_point(0, 0, '(vector-ref yp j)')
+512: f45 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+519: f46 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+526: f47 = float_sub(f45, f46)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+531: i49 = float_eq(f47, 0.000000)
+552: guard_false(i49, descr=<Guard0x35832b0>) [i0, p1, p2, p3, p4, p5]
+558: f50 = float_truediv(f44, f47)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+563: f51 = float_add(f37, f50)
debug_merge_point(0, 0, '(>= x AppRand15)')
+568: p52 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+573: guard_nonnull_class(p52, ConstClass(W_Flonum), descr=<Guard0x3584a40>) [i0, p1, p2, p3, p4, p5]
+591: f54 = getfield_gc_f(p52, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+597: i55 = float_ge(f54, f51)
+602: guard_true(i55, descr=<Guard0x35832f8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+608: i57 = int_sub(i0, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
+612: guard_nonnull(p2, descr=<Guard0x3583340>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+626: p58 = new_with_vtable(descr=<SizeDescr 16>)
+667: i59 = arraylen_gc(p18, descr=<ArrayF 8>)
+667: setfield_gc(p58, i0, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+671: i61 = int_le(i0, 9223372036854775806)
+684: guard_true(i61, descr=<Guard0x3584aa0>) [p4, i57, p58, None, None, p2, p3, None, None]
+690: jump(p3, p2, i57, p58, p4, p8, p12, i14, p18, p20, f22, i0, descr=TargetToken(55487648))
+768: --end of the loop--
[3e4c24906dcb0de] jit-log-opt-bridge}
[3e4c249070ab2a4] {jit-backend
[3e4c249070fe1ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984385a
[3e4c24907108652] jit-backend-dump}
[3e4c2490711302b] {jit-backend-addr
Loop 7 ((let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)) has address 0x7fbf984386dd to 0x7fbf98438890 (bootstrap 0x7fbf98438650)
       gc table: 0x7fbf984385a0
       function: 0x7fbf98438650
         resops: 0x7fbf984386dd
       failures: 0x7fbf98438890
            end: 0x7fbf98438ad2
[3e4c249071167e8] jit-backend-addr}
[3e4c2490711aef4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984386f4 +0  AA010000
[3e4c2490711c277] jit-backend-dump}
[3e4c2490711f7bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843870a +0  B0010000
[3e4c249071206f4] jit-backend-dump}
[3e4c24907123cc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843871d +0  D5010000
[3e4c24907124a67] jit-backend-dump}
[3e4c24907127cac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438733 +0  DB010000
[3e4c24907128a11] jit-backend-dump}
[3e4c2490712ba9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438741 +0  E9010000
[3e4c2490712c80b] jit-backend-dump}
[3e4c2490712f841] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438751 +0  F5010000
[3e4c24907130507] jit-backend-dump}
[3e4c249071334f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438765 +0  FD010000
[3e4c2490713418f] jit-backend-dump}
[3e4c2490713724f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843877c +0  02020000
[3e4c24907137eea] jit-backend-dump}
[3e4c2490713af39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438789 +0  11020000
[3e4c2490713bbfc] jit-backend-dump}
[3e4c2490713ebca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843879a +0  1C020000
[3e4c2490713f862] jit-backend-dump}
[3e4c2490714282a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984387bd +0  15020000
[3e4c249071434cf] jit-backend-dump}
[3e4c2490714654b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984387ce +0  20020000
[3e4c249071471fc] jit-backend-dump}
[3e4c2490714a1d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984387e6 +0  24020000
[3e4c2490714ae7b] jit-backend-dump}
[3e4c2490714de4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984387f4 +0  32020000
[3e4c2490714eaf3] jit-backend-dump}
[3e4c24907151aff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984387fd +0  45020000
[3e4c249071527a6] jit-backend-dump}
[3e4c2490715576b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843880e +0  50020000
[3e4c2490715641c] jit-backend-dump}
[3e4c24907159458] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843881f +0  5B020000
[3e4c2490715a0f0] jit-backend-dump}
[3e4c2490715d142] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438830 +0  66020000
[3e4c2490715dde0] jit-backend-dump}
[3e4c24907160dd3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438841 +0  71020000
[3e4c24907161a96] jit-backend-dump}
[3e4c2490716566a] jit-backend}
[3e4c24907169363] {jit-log-opt-loop
# Loop 7 ((let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)) : entry bridge with 79 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
+325: guard_class(p1, 16435920, descr=<Guard0x3584b00>) [p0, p1]
+344: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+348: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3584b60>) [p0, p1]
debug_merge_point(0, 0, '(< i 0)')
+366: guard_not_invalidated(descr=<Guard0x3583388>) [p0, p1]
+366: guard_class(p0, 16500368, descr=<Guard0x35833d0>) [p0, p1]
+385: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+389: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3584bc0>) [p0, p1]
+407: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+411: i10 = int_lt(i8, 0)
+415: guard_false(i10, descr=<Guard0x3583418>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+421: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+425: guard_class(p11, 16478824, descr=<Guard0x3583460>) [p0, p1]
+437: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+448: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x35834a8>) [p0, p1]
+457: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+461: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x3584c20>) [p0, p1]
+480: i17 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+484: i18 = int_lt(i8, i17)
+487: guard_true(i18, descr=<Guard0x35834f0>) [p0, p1]
+493: p19 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+497: guard_class(p19, 16623624, descr=<Guard0x3583538>) [p0, p1]
+510: p21 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+514: f22 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+521: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+525: guard_nonnull_class(p23, ConstClass(W_Flonum), descr=<Guard0x3584c80>) [p0, p1]
+545: f25 = getfield_gc_f(p23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+552: i26 = float_gt(f22, f25)
+556: guard_false(i26, descr=<Guard0x3583580>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+562: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+566: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x3584ce0>) [p0, p1]
+586: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+590: i31 = int_ge(i29, 0)
+594: guard_true(i31, descr=<Guard0x35835c8>) [p0, p1]
+600: i32 = int_lt(i29, i17)
+603: guard_true(i32, descr=<Guard0x3583610>) [p0, p1]
+609: f33 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+616: i34 = float_ge(f25, f33)
+620: guard_true(i34, descr=<Guard0x3583658>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+626: f35 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+633: i36 = float_gt(f35, f25)
+637: guard_false(i36, descr=<Guard0x35836a0>) [p0, p1]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+643: f37 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+650: i38 = float_ge(f25, f37)
+654: guard_true(i38, descr=<Guard0x35836e8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+660: i40 = int_sub(i8, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
+664: p41 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+668: guard_nonnull(p41, descr=<Guard0x3583730>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+677: i42 = arraylen_gc(p21, descr=<ArrayF 8>)
+677: jump(p11, p41, i40, p6, p1, p3, p15, i17, p21, p23, f25, i8, descr=TargetToken(55487648))
+752: --end of the loop--
[3e4c249071adb79] jit-log-opt-loop}
[3e4c249074566a1] {jit-backend
[3e4c249074a7e52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438c
[3e4c249074b10cf] jit-backend-dump}
[3e4c249074bbbf0] {jit-backend-addr
Loop 8 ((let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)) has address 0x7fbf98438d7d to 0x7fbf98438f30 (bootstrap 0x7fbf98438cf0)
       gc table: 0x7fbf98438c40
       function: 0x7fbf98438cf0
         resops: 0x7fbf98438d7d
       failures: 0x7fbf98438f30
            end: 0x7fbf98439172
[3e4c249074bf210] jit-backend-addr}
[3e4c249074c366f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438d94 +0  AA010000
[3e4c249074c4993] jit-backend-dump}
[3e4c249074c7d99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438daa +0  B0010000
[3e4c249074c8ba3] jit-backend-dump}
[3e4c249074cbfed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438dbd +0  D5010000
[3e4c249074ccd2a] jit-backend-dump}
[3e4c249074cff31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438dd3 +0  DB010000
[3e4c249074d0c53] jit-backend-dump}
[3e4c249074d3cdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438de1 +0  E9010000
[3e4c249074d49ab] jit-backend-dump}
[3e4c249074d7b56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438df1 +0  F5010000
[3e4c249074d882c] jit-backend-dump}
[3e4c249074db767] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e05 +0  FD010000
[3e4c249074dc44f] jit-backend-dump}
[3e4c249074df42f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e1c +0  02020000
[3e4c249074e0108] jit-backend-dump}
[3e4c249074e3068] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e29 +0  11020000
[3e4c249074e3d2b] jit-backend-dump}
[3e4c249074e6cbc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e3a +0  1C020000
[3e4c249074e799a] jit-backend-dump}
[3e4c249074ea907] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e5d +0  15020000
[3e4c249074eb5c6] jit-backend-dump}
[3e4c249074ee508] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e6e +0  20020000
[3e4c249074ef1d4] jit-backend-dump}
[3e4c249074f2137] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e86 +0  24020000
[3e4c249074f2e16] jit-backend-dump}
[3e4c249074f5db6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e94 +0  32020000
[3e4c249074f6a82] jit-backend-dump}
[3e4c249074f99bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e9d +0  45020000
[3e4c249074fa687] jit-backend-dump}
[3e4c249074fd5ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438eae +0  50020000
[3e4c249074fe2ce] jit-backend-dump}
[3e4c2490750127e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438ebf +0  5B020000
[3e4c24907501f66] jit-backend-dump}
[3e4c24907504ecc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438ed0 +0  66020000
[3e4c24907505ba1] jit-backend-dump}
[3e4c24907508b3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438ee1 +0  71020000
[3e4c24907509808] jit-backend-dump}
[3e4c2490750d38c] jit-backend}
[3e4c24907511105] {jit-log-opt-loop
# Loop 8 ((let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)) : entry bridge with 79 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
+325: guard_class(p1, 16435920, descr=<Guard0x3584d40>) [p0, p1]
+344: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+348: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3584da0>) [p0, p1]
debug_merge_point(0, 0, '(< i 0)')
+366: guard_not_invalidated(descr=<Guard0x3583778>) [p0, p1]
+366: guard_class(p0, 16500368, descr=<Guard0x35837c0>) [p0, p1]
+385: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+389: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x3584e00>) [p0, p1]
+407: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+411: i10 = int_lt(i8, 0)
+415: guard_false(i10, descr=<Guard0x3583808>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+421: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+425: guard_class(p11, 16478824, descr=<Guard0x3583850>) [p0, p1]
+437: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+448: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x3583898>) [p0, p1]
+457: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+461: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x3584e60>) [p0, p1]
+480: i17 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+484: i18 = int_lt(i8, i17)
+487: guard_true(i18, descr=<Guard0x35838e0>) [p0, p1]
+493: p19 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+497: guard_class(p19, 16623624, descr=<Guard0x3583928>) [p0, p1]
+510: p21 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+514: f22 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+521: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+525: guard_nonnull_class(p23, ConstClass(W_Flonum), descr=<Guard0x3584ec0>) [p0, p1]
+545: f25 = getfield_gc_f(p23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+552: i26 = float_gt(f22, f25)
+556: guard_false(i26, descr=<Guard0x3583970>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+562: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+566: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x3584f20>) [p0, p1]
+586: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+590: i31 = int_ge(i29, 0)
+594: guard_true(i31, descr=<Guard0x35839b8>) [p0, p1]
+600: i32 = int_lt(i29, i17)
+603: guard_true(i32, descr=<Guard0x3583a00>) [p0, p1]
+609: f33 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+616: i34 = float_ge(f25, f33)
+620: guard_true(i34, descr=<Guard0x3583a48>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+626: f35 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+633: i36 = float_gt(f35, f25)
+637: guard_false(i36, descr=<Guard0x3583a90>) [p0, p1]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+643: f37 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+650: i38 = float_ge(f25, f37)
+654: guard_true(i38, descr=<Guard0x3583ad8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+660: i40 = int_sub(i8, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
+664: p41 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+668: guard_nonnull(p41, descr=<Guard0x3583b20>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+677: i42 = arraylen_gc(p21, descr=<ArrayF 8>)
+677: jump(p11, p41, i40, p6, p1, p3, p15, i17, p21, p23, f25, i8, descr=TargetToken(55487648))
+752: --end of the loop--
[3e4c24907551f9c] jit-log-opt-loop}
[3e4c24907dcf830] {jit-backend
[3e4c24907e5ddd4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439370 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CC202000048FF0425D0C29B024983FE000F8C000000004D8B6F084983FD01720841817D00900F00000F85000000004D8B5424104C8B0DE4FEFFFF4D39CA0F85000000004D8B4C24284983F9017207418139F08C00000F85000000004D8B51084D39D60F8D000000004D8B411841813848EE02000F85000000004D8B4110F2470F1074F010498B7C24304883FF017206813F201200000F8500000000F2440F106F0866450F2EF50F8700000000488B5E084883FB000F8C000000004C39D30F8D00000000F2450F1074D81066450F2EEE0F8300000000498B5424184883FA017206813AF08C00000F8500000000488B42084939C60F8D00000000488B4A18813948EE02000F8500000000488B4A10F2460F1074F1104839C30F8D00000000F2440F1064D910F2460F105CF110F2450F5CE3F2470F105CF01066450F28D5F2450F5CEBF2450F59E5F2450F106CD810F2470F105CF010F2450F5CEB49BB90924398BF7F000066450F2E2B7B044883FD000F8400000000F2450F5EE5F2450F58F4498B5C24204883FB017206813B201200000F8500000000F2440F10630866450F2EE60F8300000000498D5EFF4883BD40010000000F8400000000488B0DEFFDFFFF48398D400100000F84000000004883FB000F8C000000004C39D30F8D00000000F2450F1074D81066450F2EF20F8700000000F2470F1074F01066450F2ED60F8200000000F2470F1074F01066450F2EF20F8700000000F2450F1074D81066450F2ED60F8200000000488D73FF4989CE488B0C25F091F900488D5110483B14251092F9000F87A400000048891425F091F90048C701601400004889590849BBFEFFFFFFFFFFFF7F4C39DB0F8F000000004C89A5300100004C89B5400100004989F648898D480100004C89BD380100004C89AD500100004C898D580100004889BD600100004889DE41504D89D0415A66410F28CA49BBA05C4398BF7F000041FFE30F1F84000000000048C7442408FFFFFF0049BB80914398BF7F00004C895D204D8D9B70B1FFFF41FFD3E918FDFFFF49BB48934398BF7F00004C895D204D8D9BA8B7FFFF41FFD3E947FFFFFFFF35F7FBFFFF49BB90914398BF7F000041534D8D9B70AEFFFF41FFE3FF35E3FBFFFF49BBA0914398BF7F000041534D8D9B60AEFFFF41FFE3FF35CFFBFFFF49BBB0914398BF7F000041534D8D9B50AEFFFF41FFE3FF35C3FBFFFF49BBC0914398BF7F000041534D8D9B40AEFFFF41FFE3FF35AFFBFFFF49BBD0914398BF7F000041534D8D9B30AEFFFF41FFE3FF359BFBFFFF49BBE0914398BF7F000041534D8D9B20AEFFFF41FFE3FF3587FBFFFF49BBF0914398BF7F000041534D8D9B10AEFFFF41FFE3FF3573FBFFFF49BB00924398BF7F000041534D8D9B00AEFFFF41FFE3FF355FFBFFFF49BB10924398BF7F000041534D8D9BF0ADFFFF41FFE3FF354BFBFFFF49BB20924398BF7F000041534D8D9BE0ADFFFF41FFE3FF3537FBFFFF49BB30924398BF7F000041534D8D9BD0ADFFFF41FFE3FF3523FBFFFF49BB40924398BF7F000041534D8D9BC0ADFFFF41FFE3FF350FFBFFFF49BB50924398BF7F000041534D8D9BB0ADFFFF41FFE3FF35FBFAFFFF49BB60924398BF7F000041534D8D9BA0ADFFFF41FFE3FF35E7FAFFFF49BB70924398BF7F000041534D8D9B90ADFFFF41FFE3FF35D3FAFFFF49BB80924398BF7F000041534D8D9B80ADFFFF41FFE3FF35BFFAFFFF49BB98924398BF7F000041534D8D9B68ADFFFF41FFE3FF35ABFAFFFF49BBA8924398BF7F000041534D8D9B58ADFFFF41FFE3FF3597FAFFFF49BBB8924398BF7F000041534D8D9B48ADFFFF41FFE3FF3583FAFFFF49BBC8924398BF7F000041534D8D9B38ADFFFF41FFE3FF3577FAFFFF49BBD8924398BF7F000041534D8D9B28ADFFFF41FFE3FF3563FAFFFF49BBE8924398BF7F000041534D8D9B18ADFFFF41FFE3FF354FFAFFFF49BBF8924398BF7F000041534D8D9B08ADFFFF41FFE3FF353BFAFFFF49BB08934398BF7F000041534D8D9BF8ACFFFF41FFE3FF3527FAFFFF49BB18934398BF7F000041534D8D9BE8ACFFFF41FFE3FF3513FAFFFF49BB28934398BF7F000041534D8D9BD8ACFFFF41FFE3FF35FFF9FFFF49BB38934398BF7F000041534D8D9BC8ACFFFF41FFE3FF35EBF9FFFF49BB58934398BF7F000041534D8D9BA8ACFFFF41FFE3
[3e4c24907e6868e] jit-backend-dump}
[3e4c24907e735a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439464 +0  23000000
[3e4c24907e74c38] jit-backend-dump}
[3e4c24907e78b08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439735 +0  23000000
[3e4c24907e79a32] jit-backend-dump}
[3e4c24907e7cab8] {jit-backend-addr
bridge out of Guard 0x35832f8 has address 0x7fbf98439460 to 0x7fbf98439730
       gc table: 0x7fbf98439370
    jump target: 0x7fbf98439460
         resops: 0x7fbf9843946e
       failures: 0x7fbf98439730
            end: 0x7fbf98439a83
[3e4c24907e7ee06] jit-backend-addr}
[3e4c24907e82301] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843947c +0  0F030000
[3e4c24907e83118] jit-backend-dump}
[3e4c24907e8617f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439494 +0  13030000
[3e4c24907e86ea7] jit-backend-dump}
[3e4c24907e89ebb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984394a9 +0  1A030000
[3e4c24907e8ab9a] jit-backend-dump}
[3e4c24907e8db28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984394c1 +0  1E030000
[3e4c24907e8e80c] jit-backend-dump}
[3e4c24907e91779] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984394ce +0  2D030000
[3e4c24907e92448] jit-backend-dump}
[3e4c24907e953a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984394df +0  38030000
[3e4c24907e9607d] jit-backend-dump}
[3e4c24907e98fcb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439501 +0  32030000
[3e4c24907e99cb9] jit-backend-dump}
[3e4c24907e9cc16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439512 +0  3D030000
[3e4c24907e9d92b] jit-backend-dump}
[3e4c24907ea087c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439520 +0  4B030000
[3e4c24907ea155b] jit-backend-dump}
[3e4c24907ea44bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439529 +0  5E030000
[3e4c24907ea5196] jit-backend-dump}
[3e4c24907ea80ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843953b +0  68030000
[3e4c24907ea8ddb] jit-backend-dump}
[3e4c24907eabd2c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439552 +0  6D030000
[3e4c24907eac9fb] jit-backend-dump}
[3e4c24907eaf949] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843955f +0  7C030000
[3e4c24907eb061b] jit-backend-dump}
[3e4c24907eb357b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843956f +0  88030000
[3e4c24907eb4250] jit-backend-dump}
[3e4c24907eb71a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439583 +0  90030000
[3e4c24907eb7e8c] jit-backend-dump}
[3e4c24907ebadf5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984395da +0  55030000
[3e4c24907ebbaf2] jit-backend-dump}
[3e4c24907ebea5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984395fb +0  50030000
[3e4c24907ebf749] jit-backend-dump}
[3e4c24907ec267c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843960c +0  5B030000
[3e4c24907ec334e] jit-backend-dump}
[3e4c24907ec629f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843961e +0  65030000
[3e4c24907ec6f77] jit-backend-dump}
[3e4c24907ec9ed1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439632 +0  6D030000
[3e4c24907ecabaf] jit-backend-dump}
[3e4c24907ecdb13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843963c +0  7F030000
[3e4c24907ece7e8] jit-backend-dump}
[3e4c24907ed1748] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439645 +0  92030000
[3e4c24907ed243c] jit-backend-dump}
[3e4c24907ed53b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439657 +0  9C030000
[3e4c24907ed6093] jit-backend-dump}
[3e4c24907ed8fed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439669 +0  A6030000
[3e4c24907ed9ccb] jit-backend-dump}
[3e4c24907edcce3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843967b +0  B0030000
[3e4c24907edd9b5] jit-backend-dump}
[3e4c24907ee090c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843968d +0  BA030000
[3e4c24907ee15eb] jit-backend-dump}
[3e4c24907ee4573] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984396d4 +0  8F030000
[3e4c24907ee5248] jit-backend-dump}
[3e4c24907ee83a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843810c +0  50130000
[3e4c24907ee9079] jit-backend-dump}
[3e4c24907eecea7] jit-backend}
[3e4c24907ef0a68] {jit-log-opt-bridge
# bridge out of Guard 0x35832f8 with 154 ops
[i0, p1, p2, p3, p4, p5]
+262: guard_not_invalidated(descr=<Guard0x3585040>) [i0, p1, p2, p3, p4, p5]
+262: i7 = int_lt(i0, 0)
+266: guard_false(i7, descr=<Guard0x3583bf8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
+272: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+276: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x35850a0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-ref yp i)')
+296: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+308: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x3583c40>) [i0, p1, p2, p3, p4, p5]
+317: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+322: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3585100>) [i0, p1, p2, p3, p4, p5]
+341: i14 = getfield_gc_i(p12, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+345: i15 = int_lt(i0, i14)
+348: guard_true(i15, descr=<Guard0x3583c88>) [i0, p1, p2, p3, p4, p5]
+354: p16 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+358: guard_class(p16, 16623624, descr=<Guard0x3583cd0>) [i0, p1, p2, p3, p4, p5]
+371: p18 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+375: f19 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+382: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+387: guard_nonnull_class(p20, ConstClass(W_Flonum), descr=<Guard0x3585160>) [i0, p1, p2, p3, p4, p5]
+405: f22 = getfield_gc_f(p20, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+411: i23 = float_gt(f19, f22)
+416: guard_false(i23, descr=<Guard0x3583d18>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+422: i24 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+426: i26 = int_ge(i24, 0)
+430: guard_true(i26, descr=<Guard0x3583d60>) [i0, p1, p2, p3, p4, p5]
+436: i27 = int_lt(i24, i14)
+439: guard_true(i27, descr=<Guard0x3583da8>) [i0, p1, p2, p3, p4, p5]
+445: f28 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+452: i29 = float_ge(f22, f28)
+457: guard_false(i29, descr=<Guard0x3583df0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+463: p30 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+468: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x35851c0>) [i0, p1, p2, p3, p4, p5]
+486: i32 = getfield_gc_i(p30, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+490: i33 = int_lt(i0, i32)
+493: guard_true(i33, descr=<Guard0x3583e38>) [i0, p1, p2, p3, p4, p5]
+499: p34 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+503: guard_class(p34, 16623624, descr=<Guard0x3583e80>) [i0, p1, p2, p3, p4, p5]
+515: p36 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+519: f37 = getarrayitem_gc_f(p36, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+526: i38 = int_lt(i24, i32)
+529: guard_true(i38, descr=<Guard0x3583ec8>) [i0, p1, p2, p3, p4, p5]
+535: f39 = getarrayitem_gc_f(p36, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+542: f40 = getarrayitem_gc_f(p36, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+549: f41 = float_sub(f39, f40)
debug_merge_point(0, 0, '(vector-ref yp i)')
+554: f42 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+561: f43 = float_sub(f22, f42)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+571: f44 = float_mul(f41, f43)
debug_merge_point(0, 0, '(vector-ref yp j)')
+576: f45 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+583: f46 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+590: f47 = float_sub(f45, f46)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+595: i49 = float_eq(f47, 0.000000)
+616: guard_false(i49, descr=<Guard0x3583f10>) [i0, p1, p2, p3, p4, p5]
+622: f50 = float_truediv(f44, f47)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+627: f51 = float_add(f37, f50)
debug_merge_point(0, 0, '(>= x AppRand15)')
+632: p52 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+637: guard_nonnull_class(p52, ConstClass(W_Flonum), descr=<Guard0x3585220>) [i0, p1, p2, p3, p4, p5]
+655: f54 = getfield_gc_f(p52, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+661: i55 = float_ge(f54, f51)
+666: guard_false(i55, descr=<Guard0x3583f58>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+672: i57 = int_sub(i0, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
+676: guard_nonnull(p2, descr=<Guard0x3583fa0>) [i0, p1, p2, p3, p4, p5]
+697: i59 = instance_ptr_eq(p2, ConstPtr(ptr58))
+704: guard_false(i59, descr=<Guard0x35c4020>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+710: i61 = int_lt(i57, 0)
+714: guard_false(i61, descr=<Guard0x35c4068>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+720: i62 = int_lt(i57, i14)
+723: guard_true(i62, descr=<Guard0x35c40b0>) [i0, p1, p2, p3, p4, p5]
+729: f63 = getarrayitem_gc_f(p18, i57, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+736: i64 = float_gt(f63, f22)
+741: guard_false(i64, descr=<Guard0x35c40f8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+747: f65 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+754: i66 = float_ge(f22, f65)
+759: guard_true(i66, descr=<Guard0x35c4140>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+765: f67 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+772: i68 = float_gt(f67, f22)
+777: guard_false(i68, descr=<Guard0x35c4188>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+783: f69 = getarrayitem_gc_f(p18, i57, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+790: i70 = float_ge(f22, f69)
+795: guard_true(i70, descr=<Guard0x35c41d0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+801: i72 = int_sub(i57, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+805: p73 = new_with_vtable(descr=<SizeDescr 16>)
+849: i74 = arraylen_gc(p18, descr=<ArrayF 8>)
+849: setfield_gc(p73, i57, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+853: i76 = int_le(i57, 9223372036854775806)
+866: guard_true(i76, descr=<Guard0x3585280>) [p4, i72, p73, None, None, None, p3, None, None]
+872: jump(p3, ConstPtr(ptr78), i72, p73, p4, p8, p12, i14, p18, p20, f22, i57, descr=TargetToken(55487648))
+960: --end of the loop--
[3e4c24907f666cc] jit-log-opt-bridge}
[3e4c24908503af6] {jit-backend
[3e4c2490859962a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439cd0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C1203000048FF042520C39B028139101100000F85000000004C8B79084983FF01720741813F900F00000F8500000000813AD00C01000F85000000004C8B72184983FE01720741813E601400000F85000000004D8B6E084983FD000F8C000000004C8B720841813EA8B800000F85000000004D8B66104C8B1592FEFFFF4D39D40F85000000004D8B56284983FA01720741813AF08C00000F85000000004D8B62084D39E50F8D000000004D8B4A1841813948EE02000F85000000004D8B4A10F2470F1074E9104D8B46304983F8017207418138201200000F8500000000F2450F10680866450F2EF50F8700000000488B7A204883FF017206813F601400000F8500000000488B77084883FE000F8C000000004C39E60F8D00000000F2450F1074F11066450F2EEE0F8300000000498B7E184883FF017206813FF08C00000F8500000000488B5F084939DD0F8D00000000488B4718813848EE02000F8500000000488B4710F2460F1074E8104839DE0F8D00000000F2440F1064F010F2460F105CE810F2450F5CE3F2470F105CE91066450F28D5F2450F5CEBF2450F59E5F2450F106CF110F2470F105CE910F2450F5CEB49BBF09B4398BF7F000066450F2E2B7B044883FD000F8400000000F2450F5EE5F2450F58F4498B76204883FE017206813E201200000F8500000000F2440F10660866450F2EE60F8300000000498D75FF488B42104885C00F8400000000488B1D93FDFFFF4839D80F85000000004883FE000F8C000000004C39E60F8D00000000F2450F1074F11066450F2EF20F8700000000F2470F1074E91066450F2ED60F8200000000F2470F1074E91066450F2EF20F8700000000F2450F1074F11066450F2ED60F8200000000488D56FF4989CD4889D3488B0C25F091F900488D5110483B14251092F9000F87A100000048891425F091F90048C701601400004889710849BBFEFFFFFFFFFFFF7F4C39DE0F8F00000000488B1526FDFFFF4C89B530010000488995400100004989DE48898D480100004C89AD380100004C89BD500100004C8995580100004D89CA4C8985600100004D89E066410F28CA49BBA05C4398BF7F000041FFE3669048C7442408FFFFFF0049BB909A4398BF7F00004C895D204D8D9B60A8FFFF41FFD3E9C8FCFFFF49BBA89C4398BF7F00004C895D204D8D9B48AEFFFF41FFD3E94AFFFFFFFF3577FBFFFF49BBA09A4398BF7F000041534D8D9B60A5FFFF41FFE3FF3563FBFFFF49BBB09A4398BF7F000041534D8D9B50A5FFFF41FFE3FF354FFBFFFF49BBC09A4398BF7F000041534D8D9B40A5FFFF41FFE3FF353BFBFFFF49BBD09A4398BF7F000041534D8D9B30A5FFFF41FFE3FF3527FBFFFF49BBE09A4398BF7F000041534D8D9B20A5FFFF41FFE3FF3513FBFFFF49BBF09A4398BF7F000041534D8D9B10A5FFFF41FFE3FF35FFFAFFFF49BB009B4398BF7F000041534D8D9B00A5FFFF41FFE3FF35F3FAFFFF49BB109B4398BF7F000041534D8D9BF0A4FFFF41FFE3FF35DFFAFFFF49BB209B4398BF7F000041534D8D9BE0A4FFFF41FFE3FF35CBFAFFFF49BB309B4398BF7F000041534D8D9BD0A4FFFF41FFE3FF35B7FAFFFF49BB409B4398BF7F000041534D8D9BC0A4FFFF41FFE3FF35A3FAFFFF49BB509B4398BF7F000041534D8D9BB0A4FFFF41FFE3FF358FFAFFFF49BB609B4398BF7F000041534D8D9BA0A4FFFF41FFE3FF357BFAFFFF49BB709B4398BF7F000041534D8D9B90A4FFFF41FFE3FF3567FAFFFF49BB809B4398BF7F000041534D8D9B80A4FFFF41FFE3FF3553FAFFFF49BB909B4398BF7F000041534D8D9B70A4FFFF41FFE3FF353FFAFFFF49BBA09B4398BF7F000041534D8D9B60A4FFFF41FFE3FF352BFAFFFF49BBB09B4398BF7F000041534D8D9B50A4FFFF41FFE3FF3517FAFFFF49BBC09B4398BF7F000041534D8D9B40A4FFFF41FFE3FF3503FAFFFF49BBD09B4398BF7F000041534D8D9B30A4FFFF41FFE3FF35EFF9FFFF49BBE09B4398BF7F000041534D8D9B20A4FFFF41FFE3FF35DBF9FFFF49BBF89B4398BF7F000041534D8D9B08A4FFFF41FFE3FF35C7F9FFFF49BB089C4398BF7F000041534D8D9BF8A3FFFF41FFE3FF35B3F9FFFF49BB189C4398BF7F000041534D8D9BE8A3FFFF41FFE3FF359FF9FFFF49BB289C4398BF7F000041534D8D9BD8A3FFFF41FFE3FF3593F9FFFF49BB389C4398BF7F000041534D8D9BC8A3FFFF41FFE3FF357FF9FFFF49BB489C4398BF7F000041534D8D9BB8A3FFFF41FFE3FF356BF9FFFF49BB589C4398BF7F000041534D8D9BA8A3FFFF41FFE3FF3557F9FFFF49BB689C4398BF7F000041534D8D9B98A3FFFF41FFE3FF3543F9FFFF49BB789C4398BF7F000041534D8D9B88A3FFFF41FFE3FF352FF9FFFF49BB889C4398BF7F000041534D8D9B78A3FFFF41FFE3FF351BF9FFFF49BB989C4398BF7F000041534D8D9B68A3FFFF41FFE3FF3507F9FFFF49BBB89C4398BF7F000041534D8D9B48A3FFFF41FFE3
[3e4c249085a4671] jit-backend-dump}
[3e4c249085af2f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439df4 +0  23000000
[3e4c249085b08d5] jit-backend-dump}
[3e4c249085b48e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a115 +0  23000000
[3e4c249085b57d6] jit-backend-dump}
[3e4c249085b8a4b] {jit-backend-addr
bridge out of Guard 0x3582218 has address 0x7fbf98439df0 to 0x7fbf9843a110
       gc table: 0x7fbf98439cd0
    jump target: 0x7fbf98439df0
         resops: 0x7fbf98439dfe
       failures: 0x7fbf9843a110
            end: 0x7fbf9843a4ef
[3e4c249085bae7c] jit-backend-addr}
[3e4c249085be2a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439e0e +0  41030000
[3e4c249085bf0e5] jit-backend-dump}
[3e4c249085c241e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439e25 +0  46030000
[3e4c249085c316e] jit-backend-dump}
[3e4c249085c6726] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439e31 +0  72030000
[3e4c249085c747c] jit-backend-dump}
[3e4c249085ca5fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439e48 +0  77030000
[3e4c249085cb300] jit-backend-dump}
[3e4c249085ce2d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439e56 +0  85030000
[3e4c249085cefcb] jit-backend-dump}
[3e4c249085d212d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439e67 +0  90030000
[3e4c249085d2e24] jit-backend-dump}
[3e4c249085d5e76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439e7b +0  98030000
[3e4c249085d6be7] jit-backend-dump}
[3e4c249085d9c36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439e92 +0  9D030000
[3e4c249085da942] jit-backend-dump}
[3e4c249085dd9b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439e9f +0  AC030000
[3e4c249085de6b9] jit-backend-dump}
[3e4c249085e16e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439eb0 +0  B7030000
[3e4c249085e23c4] jit-backend-dump}
[3e4c249085e53dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439ed2 +0  B1030000
[3e4c249085e60c7] jit-backend-dump}
[3e4c249085e90bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439ee3 +0  BC030000
[3e4c249085e9d9e] jit-backend-dump}
[3e4c249085ecde1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439ef9 +0  C2030000
[3e4c249085edac2] jit-backend-dump}
[3e4c249085f0ab8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439f07 +0  D0030000
[3e4c249085f17a9] jit-backend-dump}
[3e4c249085f47b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439f10 +0  E3030000
[3e4c249085f549c] jit-backend-dump}
[3e4c249085f8495] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439f22 +0  ED030000
[3e4c249085f9183] jit-backend-dump}
[3e4c249085fc1d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439f38 +0  F3030000
[3e4c249085fcede] jit-backend-dump}
[3e4c249085ffef9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439f45 +0  02040000
[3e4c24908600be3] jit-backend-dump}
[3e4c24908603c04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439f55 +0  0E040000
[3e4c249086048ef] jit-backend-dump}
[3e4c24908607916] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439f69 +0  16040000
[3e4c2490860860d] jit-backend-dump}
[3e4c2490860b62e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439fc0 +0  DB030000
[3e4c2490860c318] jit-backend-dump}
[3e4c2490860f34f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439fe0 +0  D7030000
[3e4c24908610036] jit-backend-dump}
[3e4c2490861302c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439ff1 +0  E2030000
[3e4c24908613d1a] jit-backend-dump}
[3e4c24908616d13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a002 +0  ED030000
[3e4c249086179fe] jit-backend-dump}
[3e4c2490861a9fa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a012 +0  F9030000
[3e4c2490861b70f] jit-backend-dump}
[3e4c2490861e752] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a01c +0  0B040000
[3e4c2490861f449] jit-backend-dump}
[3e4c24908622476] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a025 +0  1E040000
[3e4c24908623164] jit-backend-dump}
[3e4c2490862616c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a037 +0  28040000
[3e4c24908626e57] jit-backend-dump}
[3e4c24908629e6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a049 +0  32040000
[3e4c2490862ab5f] jit-backend-dump}
[3e4c2490862db7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a05b +0  3C040000
[3e4c2490862e86b] jit-backend-dump}
[3e4c24908631915] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a06d +0  46040000
[3e4c249086325f7] jit-backend-dump}
[3e4c249086358bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a0b7 +0  18040000
[3e4c24908636658] jit-backend-dump}
[3e4c24908639a3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436355 +0  973A0000
[3e4c2490863a773] jit-backend-dump}
[3e4c2490863e83c] jit-backend}
[3e4c24908642484] {jit-log-opt-bridge
# bridge out of Guard 0x3582218 with 165 ops
[p0, p1]
+310: guard_class(p1, 16435920, descr=<Guard0x35852e0>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+326: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3585340>) [p0, p1]
debug_merge_point(0, 0, '(< i 0)')
+345: guard_not_invalidated(descr=<Guard0x35c4218>) [p0, p1]
+345: guard_class(p0, 16500368, descr=<Guard0x35c4260>) [p0, p1]
+357: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+361: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x35853a0>) [p0, p1]
+380: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+384: i10 = int_lt(i8, 0)
+388: guard_false(i10, descr=<Guard0x35c42a8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+394: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+398: guard_class(p11, 16478824, descr=<Guard0x35c42f0>) [p0, p1]
+411: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+422: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x35c4338>) [p0, p1]
+431: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+435: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x3585400>) [p0, p1]
+454: i17 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+458: i18 = int_lt(i8, i17)
+461: guard_true(i18, descr=<Guard0x35c4380>) [p0, p1]
+467: p19 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+471: guard_class(p19, 16623624, descr=<Guard0x35c43c8>) [p0, p1]
+484: p21 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+488: f22 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+495: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+499: guard_nonnull_class(p23, ConstClass(W_Flonum), descr=<Guard0x3585460>) [p0, p1]
+518: f25 = getfield_gc_f(p23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+524: i26 = float_gt(f22, f25)
+529: guard_false(i26, descr=<Guard0x35c4410>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+535: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+539: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x35854c0>) [p0, p1]
+557: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i31 = int_ge(i29, 0)
+565: guard_true(i31, descr=<Guard0x35c4458>) [p0, p1]
+571: i32 = int_lt(i29, i17)
+574: guard_true(i32, descr=<Guard0x35c44a0>) [p0, p1]
+580: f33 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+587: i34 = float_ge(f25, f33)
+592: guard_false(i34, descr=<Guard0x35c44e8>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+598: p35 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+602: guard_nonnull_class(p35, ConstClass(W_Vector), descr=<Guard0x3585520>) [p0, p1]
+620: i37 = getfield_gc_i(p35, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+624: i38 = int_lt(i8, i37)
+627: guard_true(i38, descr=<Guard0x35c4530>) [p0, p1]
+633: p39 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+637: guard_class(p39, 16623624, descr=<Guard0x35c4578>) [p0, p1]
+649: p41 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+653: f42 = getarrayitem_gc_f(p41, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+660: i43 = int_lt(i29, i37)
+663: guard_true(i43, descr=<Guard0x35c45c0>) [p0, p1]
+669: f44 = getarrayitem_gc_f(p41, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+676: f45 = getarrayitem_gc_f(p41, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+683: f46 = float_sub(f44, f45)
debug_merge_point(0, 0, '(vector-ref yp i)')
+688: f47 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+695: f48 = float_sub(f25, f47)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+705: f49 = float_mul(f46, f48)
debug_merge_point(0, 0, '(vector-ref yp j)')
+710: f50 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+717: f51 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+724: f52 = float_sub(f50, f51)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+729: i54 = float_eq(f52, 0.000000)
+750: guard_false(i54, descr=<Guard0x35c4608>) [p0, p1]
+756: f55 = float_truediv(f49, f52)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+761: f56 = float_add(f42, f55)
debug_merge_point(0, 0, '(>= x AppRand15)')
+766: p57 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+770: guard_nonnull_class(p57, ConstClass(W_Flonum), descr=<Guard0x3585580>) [p0, p1]
+788: f59 = getfield_gc_f(p57, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+794: i60 = float_ge(f59, f56)
+799: guard_false(i60, descr=<Guard0x35c4650>) [p0, p1]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+805: i62 = int_sub(i8, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
+809: p63 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+813: guard_nonnull(p63, descr=<Guard0x35c4698>) [p0, p1]
+829: i65 = instance_ptr_eq(p63, ConstPtr(ptr64))
+832: guard_true(i65, descr=<Guard0x35c46e0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+838: i67 = int_lt(i62, 0)
+842: guard_false(i67, descr=<Guard0x35c4728>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+848: i68 = int_lt(i62, i17)
+851: guard_true(i68, descr=<Guard0x35c4770>) [p0, p1]
+857: f69 = getarrayitem_gc_f(p21, i62, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+864: i70 = float_gt(f69, f25)
+869: guard_false(i70, descr=<Guard0x35c47b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+875: f71 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+882: i72 = float_ge(f25, f71)
+887: guard_true(i72, descr=<Guard0x35c4800>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+893: f73 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+900: i74 = float_gt(f73, f25)
+905: guard_false(i74, descr=<Guard0x35c4848>) [p0, p1]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+911: f75 = getarrayitem_gc_f(p21, i62, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+918: i76 = float_ge(f25, f75)
+923: guard_true(i76, descr=<Guard0x35c4890>) [p0, p1]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+929: i78 = int_sub(i62, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+933: p79 = new_with_vtable(descr=<SizeDescr 16>)
+980: i80 = arraylen_gc(p21, descr=<ArrayF 8>)
+980: setfield_gc(p79, i62, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+984: i82 = int_le(i62, 9223372036854775806)
+997: guard_true(i82, descr=<Guard0x35855e0>) [p1, i78, p79, p11]
+1010: jump(p11, ConstPtr(ptr83), i78, p79, p1, p3, p15, i17, p21, p23, f25, i62, descr=TargetToken(55487648))
+1088: --end of the loop--
[3e4c249086bb0e1] jit-log-opt-bridge}
[3e4c249091e4cde] {jit-backend
[3e4c2490929d076] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a
[3e4c249092a8550] jit-backend-dump}
[3e4c249092b341f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a8a4 +0  23000000
[3e4c249092b4998] jit-backend-dump}
[3e4c249092b8742] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ac45 +0  23000000
[3e4c249092b9604] jit-backend-dump}
[3e4c249092bc7f3] {jit-backend-addr
bridge out of Guard 0x3582f08 has address 0x7fbf9843a8a0 to 0x7fbf9843ac40
       gc table: 0x7fbf9843a770
    jump target: 0x7fbf9843a8a0
         resops: 0x7fbf9843a8ae
       failures: 0x7fbf9843ac40
            end: 0x7fbf9843b073
[3e4c249092becba] jit-backend-addr}
[3e4c249092c2018] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a8bc +0  DF030000
[3e4c249092c2e25] jit-backend-dump}
[3e4c249092c5fb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a8d4 +0  E3030000
[3e4c249092c6d07] jit-backend-dump}
[3e4c249092c9e63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a8e9 +0  EA030000
[3e4c249092cab42] jit-backend-dump}
[3e4c249092cdb50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a901 +0  EE030000
[3e4c249092ce844] jit-backend-dump}
[3e4c249092d1884] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a90e +0  FD030000
[3e4c249092d255c] jit-backend-dump}
[3e4c249092d54ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a91f +0  08040000
[3e4c249092d6185] jit-backend-dump}
[3e4c249092d9080] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a941 +0  02040000
[3e4c249092d9d6b] jit-backend-dump}
[3e4c249092dcc69] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a952 +0  0D040000
[3e4c249092dd96f] jit-backend-dump}
[3e4c249092e08ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a960 +0  1B040000
[3e4c249092e1589] jit-backend-dump}
[3e4c249092e44a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a969 +0  2E040000
[3e4c249092e5175] jit-backend-dump}
[3e4c249092e80bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a97b +0  38040000
[3e4c249092e8db7] jit-backend-dump}
[3e4c249092ebcd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a98d +0  42040000
[3e4c249092ec9b8] jit-backend-dump}
[3e4c249092ef8bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a9a4 +0  47040000
[3e4c249092f0595] jit-backend-dump}
[3e4c249092f34af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a9b1 +0  56040000
[3e4c249092f4181] jit-backend-dump}
[3e4c249092f7146] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a9c1 +0  62040000
[3e4c249092f7e2b] jit-backend-dump}
[3e4c249092fad3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843a9d5 +0  6A040000
[3e4c249092fba17] jit-backend-dump}
[3e4c249092fe955] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aa2c +0  2F040000
[3e4c249092ff683] jit-backend-dump}
[3e4c24909302617] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aa4d +0  2A040000
[3e4c24909303317] jit-backend-dump}
[3e4c24909306247] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aa5e +0  35040000
[3e4c24909306f1f] jit-backend-dump}
[3e4c24909309dd1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aa70 +0  3F040000
[3e4c2490930aaa0] jit-backend-dump}
[3e4c2490930d9c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aa84 +0  47040000
[3e4c2490930e69b] jit-backend-dump}
[3e4c2490931160e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aa8e +0  59040000
[3e4c24909312332] jit-backend-dump}
[3e4c249093152fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aa97 +0  6C040000
[3e4c24909315ffb] jit-backend-dump}
[3e4c24909318f18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aaa9 +0  76040000
[3e4c24909319bf0] jit-backend-dump}
[3e4c2490931cb5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aabb +0  80040000
[3e4c2490931d83b] jit-backend-dump}
[3e4c2490932075b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aac4 +0  93040000
[3e4c24909321439] jit-backend-dump}
[3e4c2490932434d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ab22 +0  51040000
[3e4c24909325031] jit-backend-dump}
[3e4c24909327f45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ab37 +0  58040000
[3e4c24909328c17] jit-backend-dump}
[3e4c2490932bb1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ab45 +0  66040000
[3e4c2490932c7fd] jit-backend-dump}
[3e4c2490932f78e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ab4e +0  79040000
[3e4c24909330466] jit-backend-dump}
[3e4c249093333ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ab60 +0  83040000
[3e4c249093340a5] jit-backend-dump}
[3e4c24909336fb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ab72 +0  8D040000
[3e4c24909337c82] jit-backend-dump}
[3e4c2490933ab7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ab84 +0  97040000
[3e4c2490933b85e] jit-backend-dump}
[3e4c2490933e788] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ab96 +0  A1040000
[3e4c2490933f47b] jit-backend-dump}
[3e4c24909342386] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843abe0 +0  73040000
[3e4c2490934305e] jit-backend-dump}
[3e4c2490934625c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984379d3 +0  C92E0000
[3e4c24909346f59] jit-backend-dump}
[3e4c2490934ae7f] jit-backend}
[3e4c2490934ea00] {jit-log-opt-bridge
# bridge out of Guard 0x3582f08 with 232 ops
[i0, p1, p2, p3, p4, p5]
+326: guard_not_invalidated(descr=<Guard0x3585640>) [i0, p1, p2, p3, p4, p5]
+326: i7 = int_lt(i0, 0)
+330: guard_false(i7, descr=<Guard0x35c48d8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
+336: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+340: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x35856a0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-ref yp i)')
+360: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+372: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x35c4920>) [i0, p1, p2, p3, p4, p5]
+381: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+386: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3585700>) [i0, p1, p2, p3, p4, p5]
+405: i14 = getfield_gc_i(p12, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+409: i15 = int_lt(i0, i14)
+412: guard_true(i15, descr=<Guard0x35c4968>) [i0, p1, p2, p3, p4, p5]
+418: p16 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+422: guard_class(p16, 16623624, descr=<Guard0x35c49b0>) [i0, p1, p2, p3, p4, p5]
+435: p18 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+439: f19 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+446: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+451: guard_nonnull_class(p20, ConstClass(W_Flonum), descr=<Guard0x3585760>) [i0, p1, p2, p3, p4, p5]
+469: f22 = getfield_gc_f(p20, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+475: i23 = float_gt(f19, f22)
+480: guard_true(i23, descr=<Guard0x35c49f8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+486: i24 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+490: i26 = int_ge(i24, 0)
+494: guard_true(i26, descr=<Guard0x35c4a40>) [i0, p1, p2, p3, p4, p5]
+500: i27 = int_lt(i24, i14)
+503: guard_true(i27, descr=<Guard0x35c4a88>) [i0, p1, p2, p3, p4, p5]
+509: f28 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+516: i29 = float_gt(f28, f22)
+521: guard_false(i29, descr=<Guard0x35c4ad0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+527: f30 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+534: i31 = float_ge(f22, f30)
+539: guard_false(i31, descr=<Guard0x35c4b18>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+545: p32 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+550: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x35857c0>) [i0, p1, p2, p3, p4, p5]
+568: i34 = getfield_gc_i(p32, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+572: i35 = int_lt(i0, i34)
+575: guard_true(i35, descr=<Guard0x35c4b60>) [i0, p1, p2, p3, p4, p5]
+581: p36 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+585: guard_class(p36, 16623624, descr=<Guard0x35c4ba8>) [i0, p1, p2, p3, p4, p5]
+597: p38 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+601: f39 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+608: i40 = int_lt(i24, i34)
+611: guard_true(i40, descr=<Guard0x35c4bf0>) [i0, p1, p2, p3, p4, p5]
+617: f41 = getarrayitem_gc_f(p38, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+624: f42 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+631: f43 = float_sub(f41, f42)
debug_merge_point(0, 0, '(vector-ref yp i)')
+636: f44 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+643: f45 = float_sub(f22, f44)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+653: f46 = float_mul(f43, f45)
debug_merge_point(0, 0, '(vector-ref yp j)')
+658: f47 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+665: f48 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+672: f49 = float_sub(f47, f48)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+677: i51 = float_eq(f49, 0.000000)
+698: guard_false(i51, descr=<Guard0x35c4c38>) [i0, p1, p2, p3, p4, p5]
+704: f52 = float_truediv(f46, f49)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+709: f53 = float_add(f39, f52)
debug_merge_point(0, 0, '(>= x AppRand15)')
+714: p54 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+719: guard_nonnull_class(p54, ConstClass(W_Flonum), descr=<Guard0x3585820>) [i0, p1, p2, p3, p4, p5]
+737: f56 = getfield_gc_f(p54, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+743: i57 = float_ge(f56, f53)
+748: guard_false(i57, descr=<Guard0x35c4c80>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+754: i59 = int_sub(i0, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
+758: guard_nonnull(p2, descr=<Guard0x35c4cc8>) [i0, p1, p2, p3, p4, p5]
+779: i61 = instance_ptr_eq(p2, ConstPtr(ptr60))
+786: guard_true(i61, descr=<Guard0x35c4d10>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+792: i63 = int_lt(i59, 0)
+796: guard_false(i63, descr=<Guard0x35c4d58>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+802: i64 = int_lt(i59, i14)
+805: guard_true(i64, descr=<Guard0x35c4da0>) [i0, p1, p2, p3, p4, p5]
+811: f65 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+818: i66 = float_gt(f65, f22)
+823: guard_false(i66, descr=<Guard0x35c4de8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+829: f67 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+836: i68 = float_ge(f22, f67)
+841: guard_false(i68, descr=<Guard0x35c4e30>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+847: i69 = int_lt(i59, i34)
+850: guard_true(i69, descr=<Guard0x35c4e78>) [i0, p1, p2, p3, p4, p5]
+856: f70 = getarrayitem_gc_f(p38, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+863: f71 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+870: f72 = getarrayitem_gc_f(p38, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+877: f73 = float_sub(f71, f72)
debug_merge_point(0, 0, '(vector-ref yp i)')
+882: f74 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+889: f75 = float_sub(f22, f74)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+899: f76 = float_mul(f73, f75)
debug_merge_point(0, 0, '(vector-ref yp j)')
+904: f77 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+911: f78 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+918: f79 = float_sub(f77, f78)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+923: i81 = float_eq(f79, 0.000000)
+944: guard_false(i81, descr=<Guard0x35c4ec0>) [i0, p1, p2, p3, p4, p5]
+950: f82 = float_truediv(f76, f79)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+955: f83 = float_add(f70, f82)
debug_merge_point(0, 0, '(>= x AppRand15)')
+960: i84 = float_ge(f56, f83)
+965: guard_false(i84, descr=<Guard0x35c4f08>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+971: i86 = int_sub(i59, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+975: i88 = int_lt(i86, 0)
+979: guard_false(i88, descr=<Guard0x35c4f50>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+985: i89 = int_lt(i86, i14)
+988: guard_true(i89, descr=<Guard0x35c4f98>) [i0, p1, p2, p3, p4, p5]
+994: f90 = getarrayitem_gc_f(p18, i86, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+1001: i91 = float_gt(f90, f22)
+1006: guard_false(i91, descr=<Guard0x35c4fe0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+1012: f92 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+1019: i93 = float_ge(f22, f92)
+1024: guard_true(i93, descr=<Guard0x35c5028>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+1030: f94 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+1037: i95 = float_gt(f94, f22)
+1042: guard_false(i95, descr=<Guard0x35c5070>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+1048: f96 = getarrayitem_gc_f(p18, i86, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+1055: i97 = float_ge(f22, f96)
+1060: guard_true(i97, descr=<Guard0x35c50b8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+1066: i99 = int_sub(i86, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+1070: p100 = new_with_vtable(descr=<SizeDescr 16>)
+1117: i101 = arraylen_gc(p18, descr=<ArrayF 8>)
+1117: setfield_gc(p100, i86, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1121: i103 = int_le(i86, 9223372036854775806)
+1134: guard_true(i103, descr=<Guard0x3585880>) [p4, i99, p100, None, None, None, p3, None, None]
+1140: jump(p3, ConstPtr(ptr105), i99, p100, p4, p8, p12, i14, p18, p20, f22, i86, descr=TargetToken(55487648))
+1232: --end of the loop--
[3e4c249093fd094] jit-log-opt-bridge}
[3e4c2490967e05c] {jit-backend
[3e4c249096c4bf2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b1b
[3e4c249096cbf68] jit-backend-dump}
[3e4c249096d6800] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b254 +0  23000000
[3e4c249096d7de6] jit-backend-dump}
[3e4c249096dbafe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b3f5 +0  23000000
[3e4c249096dc933] jit-backend-dump}
[3e4c249096dfb93] {jit-backend-addr
bridge out of Guard 0x3583970 has address 0x7fbf9843b250 to 0x7fbf9843b3f0
       gc table: 0x7fbf9843b1b0
    jump target: 0x7fbf9843b250
         resops: 0x7fbf9843b25e
       failures: 0x7fbf9843b3f0
            end: 0x7fbf9843b60e
[3e4c249096e1fbe] jit-backend-addr}
[3e4c249096e5454] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b26e +0  A4010000
[3e4c249096e627d] jit-backend-dump}
[3e4c249096e94f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b285 +0  A9010000
[3e4c249096ea223] jit-backend-dump}
[3e4c249096ed455] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b291 +0  D5010000
[3e4c249096ee118] jit-backend-dump}
[3e4c249096f12dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b2a8 +0  DA010000
[3e4c249096f1f7d] jit-backend-dump}
[3e4c249096f5074] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b2b6 +0  E8010000
[3e4c249096f5d00] jit-backend-dump}
[3e4c249096f8de2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b2c8 +0  F2010000
[3e4c249096f9a7d] jit-backend-dump}
[3e4c249096fcb77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b2dd +0  F9010000
[3e4c249096fd800] jit-backend-dump}
[3e4c24909700912] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b2f5 +0  FD010000
[3e4c249097015a4] jit-backend-dump}
[3e4c24909704692] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b302 +0  0C020000
[3e4c2490970531b] jit-backend-dump}
[3e4c249097083ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b313 +0  17020000
[3e4c249097090b9] jit-backend-dump}
[3e4c2490970c1e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b335 +0  11020000
[3e4c2490970ceb3] jit-backend-dump}
[3e4c2490970ffa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b346 +0  1C020000
[3e4c24909710c61] jit-backend-dump}
[3e4c24909713d3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b35c +0  22020000
[3e4c249097149e7] jit-backend-dump}
[3e4c24909717adb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b36a +0  30020000
[3e4c24909718788] jit-backend-dump}
[3e4c2490971b88b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b373 +0  43020000
[3e4c2490971c554] jit-backend-dump}
[3e4c2490971f611] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b385 +0  4D020000
[3e4c249097202c2] jit-backend-dump}
[3e4c249097233a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b396 +0  58020000
[3e4c2490972402f] jit-backend-dump}
[3e4c2490972738d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438e6e +0  DE230000
[3e4c24909728031] jit-backend-dump}
[3e4c2490972c074] jit-backend}
[3e4c2490972fc07] {jit-log-opt-bridge
# bridge out of Guard 0x3583970 with 68 ops
[p0, p1]
+182: guard_class(p1, 16435920, descr=<Guard0x35858e0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+198: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3585940>) [p0, p1]
debug_merge_point(0, 0, '(< i 0)')
+217: guard_not_invalidated(descr=<Guard0x35c5100>) [p0, p1]
+217: guard_class(p0, 16500368, descr=<Guard0x35c5148>) [p0, p1]
+229: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+233: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x35859a0>) [p0, p1]
+252: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+256: i10 = int_lt(i8, 0)
+260: guard_false(i10, descr=<Guard0x35c5190>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+266: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+270: guard_class(p11, 16478824, descr=<Guard0x35c51d8>) [p0, p1]
+284: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+296: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x35c5220>) [p0, p1]
+305: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+310: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x3585a00>) [p0, p1]
+329: i17 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+333: i18 = int_lt(i8, i17)
+336: guard_true(i18, descr=<Guard0x35c5268>) [p0, p1]
+342: p19 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+346: guard_class(p19, 16623624, descr=<Guard0x35c52b0>) [p0, p1]
+359: p21 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+363: f22 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+370: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+375: guard_nonnull_class(p23, ConstClass(W_Flonum), descr=<Guard0x3585a60>) [p0, p1]
+393: f25 = getfield_gc_f(p23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+399: i26 = float_gt(f22, f25)
+404: guard_true(i26, descr=<Guard0x35c52f8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+410: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+414: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x3585ac0>) [p0, p1]
+432: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+436: i31 = int_ge(i29, 0)
+440: guard_true(i31, descr=<Guard0x35c5340>) [p0, p1]
+446: i32 = int_lt(i29, i17)
+449: guard_true(i32, descr=<Guard0x35c5388>) [p0, p1]
+455: f33 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+462: i34 = float_gt(f33, f25)
+467: guard_true(i34, descr=<Guard0x35c53d0>) [p0, p1]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, 'or-part4864')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+473: i36 = int_sub(i8, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
+477: p37 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+481: guard_nonnull(p37, descr=<Guard0x35c5418>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+490: i38 = arraylen_gc(p21, descr=<ArrayF 8>)
+490: jump(p11, p37, i36, p6, p1, p3, p15, i17, p21, p23, f25, i8, descr=TargetToken(55487648))
+576: --end of the loop--
[3e4c2490976a034] jit-log-opt-bridge}
[3e4c24909cc2380] {jit-backend
[3e4c24909d59117] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b
[3e4c24909d633c2] jit-backend-dump}
[3e4c24909d6e452] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b914 +0  23000000
[3e4c24909d6fa6a] jit-backend-dump}
[3e4c24909d73be4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843bbe5 +0  23000000
[3e4c24909d74af5] jit-backend-dump}
[3e4c24909d77ea9] {jit-backend-addr
bridge out of Guard 0x35c4020 has address 0x7fbf9843b910 to 0x7fbf9843bbe0
       gc table: 0x7fbf9843b810
    jump target: 0x7fbf9843b910
         resops: 0x7fbf9843b91e
       failures: 0x7fbf9843bbe0
            end: 0x7fbf9843bf33
[3e4c24909d7a4dc] jit-backend-addr}
[3e4c24909d7db40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b92c +0  0F030000
[3e4c24909d7e9c1] jit-backend-dump}
[3e4c24909d81c15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b944 +0  13030000
[3e4c24909d82946] jit-backend-dump}
[3e4c24909d85a7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b959 +0  1A030000
[3e4c24909d86792] jit-backend-dump}
[3e4c24909d89883] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b971 +0  1E030000
[3e4c24909d8a5ba] jit-backend-dump}
[3e4c24909d8d6cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b97e +0  2D030000
[3e4c24909d8e3a8] jit-backend-dump}
[3e4c24909d91468] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b98f +0  38030000
[3e4c24909d92150] jit-backend-dump}
[3e4c24909d9523e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b9b1 +0  32030000
[3e4c24909d95f07] jit-backend-dump}
[3e4c24909d98fcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b9c2 +0  3D030000
[3e4c24909d99c99] jit-backend-dump}
[3e4c24909d9ceac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b9d0 +0  4B030000
[3e4c24909d9db78] jit-backend-dump}
[3e4c24909da0cb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b9d9 +0  5E030000
[3e4c24909da1972] jit-backend-dump}
[3e4c24909da4ac5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843b9eb +0  68030000
[3e4c24909da578b] jit-backend-dump}
[3e4c24909da8879] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ba02 +0  6D030000
[3e4c24909da953c] jit-backend-dump}
[3e4c24909dac62a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ba0f +0  7C030000
[3e4c24909dad2e3] jit-backend-dump}
[3e4c24909db0394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ba1f +0  88030000
[3e4c24909db1063] jit-backend-dump}
[3e4c24909db4185] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ba33 +0  90030000
[3e4c24909db4e42] jit-backend-dump}
[3e4c24909db7ed7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ba8a +0  55030000
[3e4c24909db8bb8] jit-backend-dump}
[3e4c24909dbbcac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843baab +0  50030000
[3e4c24909dbc978] jit-backend-dump}
[3e4c24909dbfa72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843babc +0  5B030000
[3e4c24909dc073b] jit-backend-dump}
[3e4c24909dc3851] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843bace +0  65030000
[3e4c24909dc4514] jit-backend-dump}
[3e4c24909dc7608] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843bae2 +0  6D030000
[3e4c24909dc82dd] jit-backend-dump}
[3e4c24909dcb3fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843baec +0  7F030000
[3e4c24909dcc0c8] jit-backend-dump}
[3e4c24909dcf1a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843baf5 +0  92030000
[3e4c24909dcfe7c] jit-backend-dump}
[3e4c24909dd2f73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843bb07 +0  9C030000
[3e4c24909dd3c42] jit-backend-dump}
[3e4c24909dd6d02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843bb19 +0  A6030000
[3e4c24909dd79e6] jit-backend-dump}
[3e4c24909ddaad7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843bb2b +0  B0030000
[3e4c24909ddb7cb] jit-backend-dump}
[3e4c24909dde8b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843bb3d +0  BA030000
[3e4c24909ddf57f] jit-backend-dump}
[3e4c24909de26b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843bb81 +0  92030000
[3e4c24909de3397] jit-backend-dump}
[3e4c24909de6714] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98439632 +0  DA220000
[3e4c24909de7414] jit-backend-dump}
[3e4c24909deb4bb] jit-backend}
[3e4c24909def1e2] {jit-log-opt-bridge
# bridge out of Guard 0x35c4020 with 154 ops
[i0, p1, p2, p3, p4, p5]
+278: guard_not_invalidated(descr=<Guard0x3585b20>) [i0, p1, p2, p3, p4, p5]
+278: i7 = int_lt(i0, 0)
+282: guard_false(i7, descr=<Guard0x35c5460>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
+288: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+292: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3585b80>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-ref yp i)')
+312: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+324: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x35c54a8>) [i0, p1, p2, p3, p4, p5]
+333: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+338: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x3585be0>) [i0, p1, p2, p3, p4, p5]
+357: i14 = getfield_gc_i(p12, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+361: i15 = int_lt(i0, i14)
+364: guard_true(i15, descr=<Guard0x35c54f0>) [i0, p1, p2, p3, p4, p5]
+370: p16 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+374: guard_class(p16, 16623624, descr=<Guard0x35c5538>) [i0, p1, p2, p3, p4, p5]
+387: p18 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+391: f19 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+398: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+403: guard_nonnull_class(p20, ConstClass(W_Flonum), descr=<Guard0x3585c40>) [i0, p1, p2, p3, p4, p5]
+421: f22 = getfield_gc_f(p20, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+427: i23 = float_gt(f19, f22)
+432: guard_false(i23, descr=<Guard0x35c5580>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+438: i24 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+442: i26 = int_ge(i24, 0)
+446: guard_true(i26, descr=<Guard0x35c55c8>) [i0, p1, p2, p3, p4, p5]
+452: i27 = int_lt(i24, i14)
+455: guard_true(i27, descr=<Guard0x35c5610>) [i0, p1, p2, p3, p4, p5]
+461: f28 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+468: i29 = float_ge(f22, f28)
+473: guard_false(i29, descr=<Guard0x35c5658>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+479: p30 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+484: guard_nonnull_class(p30, ConstClass(W_Vector), descr=<Guard0x3585ca0>) [i0, p1, p2, p3, p4, p5]
+502: i32 = getfield_gc_i(p30, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+506: i33 = int_lt(i0, i32)
+509: guard_true(i33, descr=<Guard0x35c56a0>) [i0, p1, p2, p3, p4, p5]
+515: p34 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+519: guard_class(p34, 16623624, descr=<Guard0x35c56e8>) [i0, p1, p2, p3, p4, p5]
+531: p36 = getfield_gc_r(p30, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+535: f37 = getarrayitem_gc_f(p36, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+542: i38 = int_lt(i24, i32)
+545: guard_true(i38, descr=<Guard0x35c5730>) [i0, p1, p2, p3, p4, p5]
+551: f39 = getarrayitem_gc_f(p36, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+558: f40 = getarrayitem_gc_f(p36, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+565: f41 = float_sub(f39, f40)
debug_merge_point(0, 0, '(vector-ref yp i)')
+570: f42 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+577: f43 = float_sub(f22, f42)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+587: f44 = float_mul(f41, f43)
debug_merge_point(0, 0, '(vector-ref yp j)')
+592: f45 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+599: f46 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+606: f47 = float_sub(f45, f46)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+611: i49 = float_eq(f47, 0.000000)
+632: guard_false(i49, descr=<Guard0x35c5778>) [i0, p1, p2, p3, p4, p5]
+638: f50 = float_truediv(f44, f47)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+643: f51 = float_add(f37, f50)
debug_merge_point(0, 0, '(>= x AppRand15)')
+648: p52 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+653: guard_nonnull_class(p52, ConstClass(W_Flonum), descr=<Guard0x3585d00>) [i0, p1, p2, p3, p4, p5]
+671: f54 = getfield_gc_f(p52, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+677: i55 = float_ge(f54, f51)
+682: guard_false(i55, descr=<Guard0x35c57c0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+688: i57 = int_sub(i0, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
+692: guard_nonnull(p2, descr=<Guard0x35c5808>) [i0, p1, p2, p3, p4, p5]
+713: i59 = instance_ptr_eq(p2, ConstPtr(ptr58))
+720: guard_true(i59, descr=<Guard0x35c5850>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+726: i61 = int_lt(i57, 0)
+730: guard_false(i61, descr=<Guard0x35c5898>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+736: i62 = int_lt(i57, i14)
+739: guard_true(i62, descr=<Guard0x35c58e0>) [i0, p1, p2, p3, p4, p5]
+745: f63 = getarrayitem_gc_f(p18, i57, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+752: i64 = float_gt(f63, f22)
+757: guard_false(i64, descr=<Guard0x35c5928>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+763: f65 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+770: i66 = float_ge(f22, f65)
+775: guard_true(i66, descr=<Guard0x35c5970>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+781: f67 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+788: i68 = float_gt(f67, f22)
+793: guard_false(i68, descr=<Guard0x35c59b8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+799: f69 = getarrayitem_gc_f(p18, i57, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+806: i70 = float_ge(f22, f69)
+811: guard_true(i70, descr=<Guard0x35c5a00>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+817: i72 = int_sub(i57, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+821: p73 = new_with_vtable(descr=<SizeDescr 16>)
+862: i74 = arraylen_gc(p18, descr=<ArrayF 8>)
+862: setfield_gc(p73, i57, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+866: i76 = int_le(i57, 9223372036854775806)
+879: guard_true(i76, descr=<Guard0x3585d60>) [p4, i72, p73, None, None, None, p3, None, None]
+892: jump(p3, ConstPtr(ptr78), i72, p73, p4, p8, p12, i14, p18, p20, f22, i57, descr=TargetToken(55487648))
+976: --end of the loop--
[3e4c24909e63c54] jit-log-opt-bridge}
[3e4c2490a6a20b2] {jit-backend
[3e4c2490a802a44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c
[3e4c2490a80dc5c] jit-backend-dump}
[3e4c2490a818d9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c2a4 +0  23000000
[3e4c2490a81a2e2] jit-backend-dump}
[3e4c2490a81e3d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c5c5 +0  23000000
[3e4c2490a81f2cf] jit-backend-dump}
[3e4c2490a8226fd] {jit-backend-addr
bridge out of Guard 0x3583658 has address 0x7fbf9843c2a0 to 0x7fbf9843c5c0
       gc table: 0x7fbf9843c180
    jump target: 0x7fbf9843c2a0
         resops: 0x7fbf9843c2ae
       failures: 0x7fbf9843c5c0
            end: 0x7fbf9843c99f
[3e4c2490a824ccb] jit-backend-addr}
[3e4c2490a8282ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c2be +0  41030000
[3e4c2490a829145] jit-backend-dump}
[3e4c2490a82c3ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c2d5 +0  46030000
[3e4c2490a82d0d0] jit-backend-dump}
[3e4c2490a8302c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c2e1 +0  72030000
[3e4c2490a830fdd] jit-backend-dump}
[3e4c2490a8341c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c2f8 +0  77030000
[3e4c2490a834ecf] jit-backend-dump}
[3e4c2490a837f7d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c306 +0  85030000
[3e4c2490a838c55] jit-backend-dump}
[3e4c2490a83bcf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c317 +0  90030000
[3e4c2490a83c9d8] jit-backend-dump}
[3e4c2490a83fa4e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c32b +0  98030000
[3e4c2490a840736] jit-backend-dump}
[3e4c2490a84385b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c342 +0  9D030000
[3e4c2490a844558] jit-backend-dump}
[3e4c2490a8475fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c34f +0  AC030000
[3e4c2490a8482de] jit-backend-dump}
[3e4c2490a84b348] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c360 +0  B7030000
[3e4c2490a84c033] jit-backend-dump}
[3e4c2490a84f0a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c382 +0  B1030000
[3e4c2490a84fd8e] jit-backend-dump}
[3e4c2490a852e04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c393 +0  BC030000
[3e4c2490a853b04] jit-backend-dump}
[3e4c2490a856b7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c3a9 +0  C2030000
[3e4c2490a8578ac] jit-backend-dump}
[3e4c2490a85a941] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c3b7 +0  D0030000
[3e4c2490a85b63e] jit-backend-dump}
[3e4c2490a85e6a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c3c0 +0  E3030000
[3e4c2490a85f3a2] jit-backend-dump}
[3e4c2490a86247b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c3d2 +0  ED030000
[3e4c2490a863159] jit-backend-dump}
[3e4c2490a866219] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c3e8 +0  F3030000
[3e4c2490a866ef1] jit-backend-dump}
[3e4c2490a869f83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c3f5 +0  02040000
[3e4c2490a86ac6b] jit-backend-dump}
[3e4c2490a86dd06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c405 +0  0E040000
[3e4c2490a86e9eb] jit-backend-dump}
[3e4c2490a871ab1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c419 +0  16040000
[3e4c2490a872795] jit-backend-dump}
[3e4c2490a875827] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c470 +0  DB030000
[3e4c2490a8764e1] jit-backend-dump}
[3e4c2490a879576] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c490 +0  D7030000
[3e4c2490a87a214] jit-backend-dump}
[3e4c2490a87d29a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c4a1 +0  E2030000
[3e4c2490a87df3e] jit-backend-dump}
[3e4c2490a880fef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c4b2 +0  ED030000
[3e4c2490a881ca0] jit-backend-dump}
[3e4c2490a884d3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c4c2 +0  F9030000
[3e4c2490a8859dc] jit-backend-dump}
[3e4c2490a888a6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c4cc +0  0B040000
[3e4c2490a889706] jit-backend-dump}
[3e4c2490a88c789] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c4d5 +0  1E040000
[3e4c2490a88d427] jit-backend-dump}
[3e4c2490a8904bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c4e7 +0  28040000
[3e4c2490a891157] jit-backend-dump}
[3e4c2490a894267] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c4f9 +0  32040000
[3e4c2490a894f0b] jit-backend-dump}
[3e4c2490a89802a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c50b +0  3C040000
[3e4c2490a898ced] jit-backend-dump}
[3e4c2490a89be43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c51d +0  46040000
[3e4c2490a89caf9] jit-backend-dump}
[3e4c2490a89fc74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843c567 +0  18040000
[3e4c2490a8a0924] jit-backend-dump}
[3e4c2490a8a3cc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843880e +0  8E3A0000
[3e4c2490a8a4998] jit-backend-dump}
[3e4c2490a8a8b89] jit-backend}
[3e4c2490a8ac9df] {jit-log-opt-bridge
# bridge out of Guard 0x3583658 with 165 ops
[p0, p1]
+310: guard_class(p1, 16435920, descr=<Guard0x3585f40>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+326: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x35ea200>) [p0, p1]
debug_merge_point(0, 0, '(< i 0)')
+345: guard_not_invalidated(descr=<Guard0x35ec0f8>) [p0, p1]
+345: guard_class(p0, 16500368, descr=<Guard0x35ec0b0>) [p0, p1]
+357: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+361: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x35ea1a0>) [p0, p1]
+380: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+384: i10 = int_lt(i8, 0)
+388: guard_false(i10, descr=<Guard0x35ec068>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+394: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+398: guard_class(p11, 16478824, descr=<Guard0x35ec020>) [p0, p1]
+411: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+422: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x35c5fa0>) [p0, p1]
+431: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+435: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x35ea140>) [p0, p1]
+454: i17 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+458: i18 = int_lt(i8, i17)
+461: guard_true(i18, descr=<Guard0x35c5f58>) [p0, p1]
+467: p19 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+471: guard_class(p19, 16623624, descr=<Guard0x35c5f10>) [p0, p1]
+484: p21 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+488: f22 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+495: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+499: guard_nonnull_class(p23, ConstClass(W_Flonum), descr=<Guard0x35ea0e0>) [p0, p1]
+518: f25 = getfield_gc_f(p23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+524: i26 = float_gt(f22, f25)
+529: guard_false(i26, descr=<Guard0x35c5ec8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+535: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+539: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x35ea080>) [p0, p1]
+557: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i31 = int_ge(i29, 0)
+565: guard_true(i31, descr=<Guard0x35c5e80>) [p0, p1]
+571: i32 = int_lt(i29, i17)
+574: guard_true(i32, descr=<Guard0x35c5a48>) [p0, p1]
+580: f33 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+587: i34 = float_ge(f25, f33)
+592: guard_false(i34, descr=<Guard0x35c5e38>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+598: p35 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+602: guard_nonnull_class(p35, ConstClass(W_Vector), descr=<Guard0x35ea020>) [p0, p1]
+620: i37 = getfield_gc_i(p35, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+624: i38 = int_lt(i8, i37)
+627: guard_true(i38, descr=<Guard0x35c5df0>) [p0, p1]
+633: p39 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+637: guard_class(p39, 16623624, descr=<Guard0x35c5da8>) [p0, p1]
+649: p41 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+653: f42 = getarrayitem_gc_f(p41, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+660: i43 = int_lt(i29, i37)
+663: guard_true(i43, descr=<Guard0x35c5d60>) [p0, p1]
+669: f44 = getarrayitem_gc_f(p41, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+676: f45 = getarrayitem_gc_f(p41, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+683: f46 = float_sub(f44, f45)
debug_merge_point(0, 0, '(vector-ref yp i)')
+688: f47 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+695: f48 = float_sub(f25, f47)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+705: f49 = float_mul(f46, f48)
debug_merge_point(0, 0, '(vector-ref yp j)')
+710: f50 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+717: f51 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+724: f52 = float_sub(f50, f51)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+729: i54 = float_eq(f52, 0.000000)
+750: guard_false(i54, descr=<Guard0x35c5d18>) [p0, p1]
+756: f55 = float_truediv(f49, f52)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+761: f56 = float_add(f42, f55)
debug_merge_point(0, 0, '(>= x AppRand15)')
+766: p57 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+770: guard_nonnull_class(p57, ConstClass(W_Flonum), descr=<Guard0x3585fa0>) [p0, p1]
+788: f59 = getfield_gc_f(p57, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+794: i60 = float_ge(f59, f56)
+799: guard_false(i60, descr=<Guard0x35c5cd0>) [p0, p1]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+805: i62 = int_sub(i8, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
+809: p63 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+813: guard_nonnull(p63, descr=<Guard0x35c5c88>) [p0, p1]
+829: i65 = instance_ptr_eq(p63, ConstPtr(ptr64))
+832: guard_true(i65, descr=<Guard0x35c5c40>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+838: i67 = int_lt(i62, 0)
+842: guard_false(i67, descr=<Guard0x35c5bf8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+848: i68 = int_lt(i62, i17)
+851: guard_true(i68, descr=<Guard0x35c5bb0>) [p0, p1]
+857: f69 = getarrayitem_gc_f(p21, i62, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+864: i70 = float_gt(f69, f25)
+869: guard_false(i70, descr=<Guard0x35c5b68>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+875: f71 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+882: i72 = float_ge(f25, f71)
+887: guard_true(i72, descr=<Guard0x35c5b20>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+893: f73 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+900: i74 = float_gt(f73, f25)
+905: guard_false(i74, descr=<Guard0x35c5ad8>) [p0, p1]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+911: f75 = getarrayitem_gc_f(p21, i62, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+918: i76 = float_ge(f25, f75)
+923: guard_true(i76, descr=<Guard0x35c5a90>) [p0, p1]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+929: i78 = int_sub(i62, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+933: p79 = new_with_vtable(descr=<SizeDescr 16>)
+980: i80 = arraylen_gc(p21, descr=<ArrayF 8>)
+980: setfield_gc(p79, i62, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+984: i82 = int_le(i62, 9223372036854775806)
+997: guard_true(i82, descr=<Guard0x3585ee0>) [p1, i78, p79, p11]
+1010: jump(p11, ConstPtr(ptr83), i78, p79, p1, p3, p15, i17, p21, p23, f25, i62, descr=TargetToken(55487648))
+1088: --end of the loop--
[3e4c2490a9195d1] jit-log-opt-bridge}
[3e4c2490b0f4848] {jit-backend
[3e4c2490b18805e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cbe
[3e4c2490b1930f4] jit-backend-dump}
[3e4c2490b19e62a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cd04 +0  23000000
[3e4c2490b19fdcd] jit-backend-dump}
[3e4c2490b1a4082] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d025 +0  23000000
[3e4c2490b1a4fe6] jit-backend-dump}
[3e4c2490b1a84e4] {jit-backend-addr
bridge out of Guard 0x3583a48 has address 0x7fbf9843cd00 to 0x7fbf9843d020
       gc table: 0x7fbf9843cbe0
    jump target: 0x7fbf9843cd00
         resops: 0x7fbf9843cd0e
       failures: 0x7fbf9843d020
            end: 0x7fbf9843d3ff
[3e4c2490b1aa958] jit-backend-addr}
[3e4c2490b1ade6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cd1e +0  41030000
[3e4c2490b1aecfc] jit-backend-dump}
[3e4c2490b1b1f59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cd35 +0  46030000
[3e4c2490b1b2c4d] jit-backend-dump}
[3e4c2490b1b5ea7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cd41 +0  72030000
[3e4c2490b1b6b76] jit-backend-dump}
[3e4c2490b1b9d00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cd58 +0  77030000
[3e4c2490b1ba9c0] jit-backend-dump}
[3e4c2490b1bda8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cd66 +0  85030000
[3e4c2490b1be75b] jit-backend-dump}
[3e4c2490b1c18bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cd77 +0  90030000
[3e4c2490b1c2592] jit-backend-dump}
[3e4c2490b1c56df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cd8b +0  98030000
[3e4c2490b1c63ae] jit-backend-dump}
[3e4c2490b1c9547] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cda2 +0  9D030000
[3e4c2490b1ca204] jit-backend-dump}
[3e4c2490b1cd313] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cdaf +0  AC030000
[3e4c2490b1cdfca] jit-backend-dump}
[3e4c2490b1d10ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cdc0 +0  B7030000
[3e4c2490b1d1d9f] jit-backend-dump}
[3e4c2490b1d4e8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cde2 +0  B1030000
[3e4c2490b1d5b78] jit-backend-dump}
[3e4c2490b1d8ccb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cdf3 +0  BC030000
[3e4c2490b1d9997] jit-backend-dump}
[3e4c2490b1dcaf9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ce09 +0  C2030000
[3e4c2490b1dd7a9] jit-backend-dump}
[3e4c2490b1e08bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ce17 +0  D0030000
[3e4c2490b1e1569] jit-backend-dump}
[3e4c2490b1e4645] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ce20 +0  E3030000
[3e4c2490b1e52f8] jit-backend-dump}
[3e4c2490b1e8482] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ce32 +0  ED030000
[3e4c2490b1e9154] jit-backend-dump}
[3e4c2490b1ec214] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ce48 +0  F3030000
[3e4c2490b1ecf08] jit-backend-dump}
[3e4c2490b1f0055] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ce55 +0  02040000
[3e4c2490b1f0d27] jit-backend-dump}
[3e4c2490b1f3e5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ce65 +0  0E040000
[3e4c2490b1f4b21] jit-backend-dump}
[3e4c2490b1f7c74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ce79 +0  16040000
[3e4c2490b1f8937] jit-backend-dump}
[3e4c2490b1fba12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ced0 +0  DB030000
[3e4c2490b1fc6de] jit-backend-dump}
[3e4c2490b1ff812] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cef0 +0  D7030000
[3e4c2490b2004de] jit-backend-dump}
[3e4c2490b2035d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cf01 +0  E2030000
[3e4c2490b20429e] jit-backend-dump}
[3e4c2490b207392] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cf12 +0  ED030000
[3e4c2490b208071] jit-backend-dump}
[3e4c2490b20b12e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cf22 +0  F9030000
[3e4c2490b20bde7] jit-backend-dump}
[3e4c2490b20ee8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cf2c +0  0B040000
[3e4c2490b20fb5b] jit-backend-dump}
[3e4c2490b212cd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cf35 +0  1E040000
[3e4c2490b213992] jit-backend-dump}
[3e4c2490b216a3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cf47 +0  28040000
[3e4c2490b2176f0] jit-backend-dump}
[3e4c2490b21a7b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cf59 +0  32040000
[3e4c2490b21b473] jit-backend-dump}
[3e4c2490b21e51b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cf6b +0  3C040000
[3e4c2490b21f1d7] jit-backend-dump}
[3e4c2490b222285] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cf7d +0  46040000
[3e4c2490b222f3c] jit-backend-dump}
[3e4c2490b226088] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843cfc7 +0  18040000
[3e4c2490b226d3c] jit-backend-dump}
[3e4c2490b22a07e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98438eae +0  4E3E0000
[3e4c2490b22ad4a] jit-backend-dump}
[3e4c2490b22ed9f] jit-backend}
[3e4c2490b232ae8] {jit-log-opt-bridge
# bridge out of Guard 0x3583a48 with 165 ops
[p0, p1]
+310: guard_class(p1, 16435920, descr=<Guard0x35ea260>) [p0, p1]
+322: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+326: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x35ea2c0>) [p0, p1]
debug_merge_point(0, 0, '(< i 0)')
+345: guard_not_invalidated(descr=<Guard0x35ec140>) [p0, p1]
+345: guard_class(p0, 16500368, descr=<Guard0x35ec188>) [p0, p1]
+357: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+361: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x35ea320>) [p0, p1]
+380: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+384: i10 = int_lt(i8, 0)
+388: guard_false(i10, descr=<Guard0x35ec1d0>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+394: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+398: guard_class(p11, 16478824, descr=<Guard0x35ec218>) [p0, p1]
+411: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+422: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x35ec260>) [p0, p1]
+431: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+435: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x35ea380>) [p0, p1]
+454: i17 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+458: i18 = int_lt(i8, i17)
+461: guard_true(i18, descr=<Guard0x35ec2a8>) [p0, p1]
+467: p19 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+471: guard_class(p19, 16623624, descr=<Guard0x35ec2f0>) [p0, p1]
+484: p21 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+488: f22 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+495: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+499: guard_nonnull_class(p23, ConstClass(W_Flonum), descr=<Guard0x35ea3e0>) [p0, p1]
+518: f25 = getfield_gc_f(p23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+524: i26 = float_gt(f22, f25)
+529: guard_false(i26, descr=<Guard0x35ec338>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+535: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+539: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x35ea440>) [p0, p1]
+557: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i31 = int_ge(i29, 0)
+565: guard_true(i31, descr=<Guard0x35ec380>) [p0, p1]
+571: i32 = int_lt(i29, i17)
+574: guard_true(i32, descr=<Guard0x35ec3c8>) [p0, p1]
+580: f33 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+587: i34 = float_ge(f25, f33)
+592: guard_false(i34, descr=<Guard0x35ec410>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+598: p35 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+602: guard_nonnull_class(p35, ConstClass(W_Vector), descr=<Guard0x35ea4a0>) [p0, p1]
+620: i37 = getfield_gc_i(p35, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+624: i38 = int_lt(i8, i37)
+627: guard_true(i38, descr=<Guard0x35ec458>) [p0, p1]
+633: p39 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+637: guard_class(p39, 16623624, descr=<Guard0x35ec4a0>) [p0, p1]
+649: p41 = getfield_gc_r(p35, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+653: f42 = getarrayitem_gc_f(p41, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+660: i43 = int_lt(i29, i37)
+663: guard_true(i43, descr=<Guard0x35ec4e8>) [p0, p1]
+669: f44 = getarrayitem_gc_f(p41, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+676: f45 = getarrayitem_gc_f(p41, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+683: f46 = float_sub(f44, f45)
debug_merge_point(0, 0, '(vector-ref yp i)')
+688: f47 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+695: f48 = float_sub(f25, f47)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+705: f49 = float_mul(f46, f48)
debug_merge_point(0, 0, '(vector-ref yp j)')
+710: f50 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+717: f51 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+724: f52 = float_sub(f50, f51)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+729: i54 = float_eq(f52, 0.000000)
+750: guard_false(i54, descr=<Guard0x35ec530>) [p0, p1]
+756: f55 = float_truediv(f49, f52)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+761: f56 = float_add(f42, f55)
debug_merge_point(0, 0, '(>= x AppRand15)')
+766: p57 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+770: guard_nonnull_class(p57, ConstClass(W_Flonum), descr=<Guard0x35ea500>) [p0, p1]
+788: f59 = getfield_gc_f(p57, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+794: i60 = float_ge(f59, f56)
+799: guard_false(i60, descr=<Guard0x35ec578>) [p0, p1]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+805: i62 = int_sub(i8, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
+809: p63 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+813: guard_nonnull(p63, descr=<Guard0x35ec5c0>) [p0, p1]
+829: i65 = instance_ptr_eq(p63, ConstPtr(ptr64))
+832: guard_true(i65, descr=<Guard0x35ec608>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+838: i67 = int_lt(i62, 0)
+842: guard_false(i67, descr=<Guard0x35ec650>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+848: i68 = int_lt(i62, i17)
+851: guard_true(i68, descr=<Guard0x35ec698>) [p0, p1]
+857: f69 = getarrayitem_gc_f(p21, i62, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+864: i70 = float_gt(f69, f25)
+869: guard_false(i70, descr=<Guard0x35ec6e0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+875: f71 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+882: i72 = float_ge(f25, f71)
+887: guard_true(i72, descr=<Guard0x35ec728>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+893: f73 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+900: i74 = float_gt(f73, f25)
+905: guard_false(i74, descr=<Guard0x35ec770>) [p0, p1]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+911: f75 = getarrayitem_gc_f(p21, i62, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+918: i76 = float_ge(f25, f75)
+923: guard_true(i76, descr=<Guard0x35ec7b8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+929: i78 = int_sub(i62, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+933: p79 = new_with_vtable(descr=<SizeDescr 16>)
+980: i80 = arraylen_gc(p21, descr=<ArrayF 8>)
+980: setfield_gc(p79, i62, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+984: i82 = int_le(i62, 9223372036854775806)
+997: guard_true(i82, descr=<Guard0x35ea560>) [p1, i78, p79, p11]
+1010: jump(p11, ConstPtr(ptr83), i78, p79, p1, p3, p15, i17, p21, p23, f25, i62, descr=TargetToken(55487648))
+1088: --end of the loop--
[3e4c2490b2a9017] jit-log-opt-bridge}
[3e4c2490b4680ef] {jit-backend
[3e4c2490b4b4e8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d
[3e4c2490b4bc014] jit-backend-dump}
[3e4c2490b4c6930] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d5e4 +0  23000000
[3e4c2490b4c7d6a] jit-backend-dump}
[3e4c2490b4cbcac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d785 +0  23000000
[3e4c2490b4ccb0c] jit-backend-dump}
[3e4c2490b4d0022] {jit-backend-addr
bridge out of Guard 0x3583580 has address 0x7fbf9843d5e0 to 0x7fbf9843d780
       gc table: 0x7fbf9843d540
    jump target: 0x7fbf9843d5e0
         resops: 0x7fbf9843d5ee
       failures: 0x7fbf9843d780
            end: 0x7fbf9843d99e
[3e4c2490b4d2529] jit-backend-addr}
[3e4c2490b4d5bcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d5fe +0  A4010000
[3e4c2490b4d69d7] jit-backend-dump}
[3e4c2490b4d9cbb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d615 +0  A9010000
[3e4c2490b4da9fe] jit-backend-dump}
[3e4c2490b4dde7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d621 +0  D5010000
[3e4c2490b4deb69] jit-backend-dump}
[3e4c2490b4e1dcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d638 +0  DA010000
[3e4c2490b4e2a7a] jit-backend-dump}
[3e4c2490b4e5c78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d646 +0  E8010000
[3e4c2490b4e6962] jit-backend-dump}
[3e4c2490b4e9a84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d658 +0  F2010000
[3e4c2490b4ea753] jit-backend-dump}
[3e4c2490b4ed838] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d66d +0  F9010000
[3e4c2490b4ee4d0] jit-backend-dump}
[3e4c2490b4f15e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d685 +0  FD010000
[3e4c2490b4f2284] jit-backend-dump}
[3e4c2490b4f536f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d692 +0  0C020000
[3e4c2490b4f600d] jit-backend-dump}
[3e4c2490b4f90e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d6a3 +0  17020000
[3e4c2490b4f9d83] jit-backend-dump}
[3e4c2490b4fce62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d6c5 +0  11020000
[3e4c2490b4fdb1c] jit-backend-dump}
[3e4c2490b500bf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d6d6 +0  1C020000
[3e4c2490b5018ba] jit-backend-dump}
[3e4c2490b5049b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d6ec +0  22020000
[3e4c2490b505649] jit-backend-dump}
[3e4c2490b50873a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d6fa +0  30020000
[3e4c2490b5093d5] jit-backend-dump}
[3e4c2490b50c4a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d703 +0  43020000
[3e4c2490b50d13c] jit-backend-dump}
[3e4c2490b51024f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d715 +0  4D020000
[3e4c2490b510ee7] jit-backend-dump}
[3e4c2490b513fa7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843d726 +0  58020000
[3e4c2490b514c3c] jit-backend-dump}
[3e4c2490b517fce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984387ce +0  0E4E0000
[3e4c2490b518cbb] jit-backend-dump}
[3e4c2490b51cd56] jit-backend}
[3e4c2490b520a1c] {jit-log-opt-bridge
# bridge out of Guard 0x3583580 with 68 ops
[p0, p1]
+182: guard_class(p1, 16435920, descr=<Guard0x35ea5c0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+198: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x35ea620>) [p0, p1]
debug_merge_point(0, 0, '(< i 0)')
+217: guard_not_invalidated(descr=<Guard0x35ec800>) [p0, p1]
+217: guard_class(p0, 16500368, descr=<Guard0x35ec848>) [p0, p1]
+229: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+233: guard_nonnull_class(p6, ConstClass(W_Fixnum), descr=<Guard0x35ea680>) [p0, p1]
+252: i8 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+256: i10 = int_lt(i8, 0)
+260: guard_false(i10, descr=<Guard0x35ec890>) [p0, p1]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+266: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+270: guard_class(p11, 16478824, descr=<Guard0x35ec8d8>) [p0, p1]
+284: p13 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+296: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x35ec920>) [p0, p1]
+305: p15 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+310: guard_nonnull_class(p15, ConstClass(W_Vector), descr=<Guard0x35ea6e0>) [p0, p1]
+329: i17 = getfield_gc_i(p15, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+333: i18 = int_lt(i8, i17)
+336: guard_true(i18, descr=<Guard0x35ec968>) [p0, p1]
+342: p19 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+346: guard_class(p19, 16623624, descr=<Guard0x35ec9b0>) [p0, p1]
+359: p21 = getfield_gc_r(p15, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+363: f22 = getarrayitem_gc_f(p21, i8, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+370: p23 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+375: guard_nonnull_class(p23, ConstClass(W_Flonum), descr=<Guard0x35ea740>) [p0, p1]
+393: f25 = getfield_gc_f(p23, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+399: i26 = float_gt(f22, f25)
+404: guard_true(i26, descr=<Guard0x35ec9f8>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+410: p27 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+414: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x35ea7a0>) [p0, p1]
+432: i29 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+436: i31 = int_ge(i29, 0)
+440: guard_true(i31, descr=<Guard0x35eca40>) [p0, p1]
+446: i32 = int_lt(i29, i17)
+449: guard_true(i32, descr=<Guard0x35eca88>) [p0, p1]
+455: f33 = getarrayitem_gc_f(p21, i29, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+462: i34 = float_gt(f33, f25)
+467: guard_true(i34, descr=<Guard0x35ecad0>) [p0, p1]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, 'or-part4864')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+473: i36 = int_sub(i8, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
+477: p37 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+481: guard_nonnull(p37, descr=<Guard0x35ecb18>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+490: i38 = arraylen_gc(p21, descr=<ArrayF 8>)
+490: jump(p11, p37, i36, p6, p1, p3, p15, i17, p21, p23, f25, i8, descr=TargetToken(55487648))
+576: --end of the loop--
[3e4c2490b55b46d] jit-log-opt-bridge}
[3e4c2490b928e7d] {jit-backend
[3e4c2490b9ae4f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843db20 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C6202000048FF0425D01865034983FE000F8D000000004983FF01720741813F88AD02000F85000000004D8B65204C8B15FAFEFFFF4D39D40F85000000004D8B55184C8B25F6FEFFFF4D39E70F850000000041813A480E00000F85000000004D8B4A204C8B05EDFEFFFF4D39C10F85000000004D8B42104D8B4A18418139480E00000F85000000004D8B51084983FA01720741813A900F00000F8500000000418138D00C01000F8500000000498B78184883FF017206813FF08C00000F8500000000498B70204883FE017206813EF08C00000F8500000000488B5F084883EB010F80000000004883FB000F8C00000000488B56084839D30F8D00000000488B4618813848EE02000F8500000000488B4610F2440F1074D81049BBC0DA4398BF7F000066450F2E330F8600000000F2440F10701066450F2E73180F86000000004C8D6BFF4989D7488B0C25F091F900488D9198000000483B14251092F9000F872A01000048891425F091F90048C701A8B80000488D513848C702601400004C8D721049C706101100004C89A5400100004D8D662849C70424480E00004D895424084D894424104D894C24184C8B0D0EFEFFFF4D894C24204C8B0D0AFEFFFF4D894E204D8946104D8966184D8956084C8B25FBFDFFFF4C8961084C8B25F8FDFFFF4C89611048897918488B3DF1FDFFFF4889792048897128488B3DEAFDFFFF4889793048895A0849BBFEFFFFFFFFFFFF7F4C39DB0F8F0000000048898D30010000488995480100004C89B5380100004C8995500100004889B5580100004D89F84989C24889BD600100004889DE4D89EE49BB10DB4398BF7F0000F2410F100B4D8D9B9081FFFF41FFE348C7442408FFFFFF0049BBB0D94398BF7F00004C895D204D8D9B4069FFFF41FFD3E978FDFFFF4D8D5B304C895D204D8D9B0070FFFF41FFD349BBC0DA4398BF7F0000E9BDFEFFFFFF3563FCFFFF49BBC0D94398BF7F000041534D8D9B4066FFFF41FFE3FF354FFCFFFF49BBD0D94398BF7F000041534D8D9B3066FFFF41FFE3FF353BFCFFFF49BBE0D94398BF7F000041534D8D9B2066FFFF41FFE3FF352FFCFFFF49BBF0D94398BF7F000041534D8D9B1066FFFF41FFE3FF3523FCFFFF49BB00DA4398BF7F000041534D8D9B0066FFFF41FFE3FF350FFCFFFF49BB10DA4398BF7F000041534D8D9BF065FFFF41FFE3FF3503FCFFFF49BB20DA4398BF7F000041534D8D9BE065FFFF41FFE3FF35EFFBFFFF49BB30DA4398BF7F000041534D8D9BD065FFFF41FFE3FF35DBFBFFFF49BB40DA4398BF7F000041534D8D9BC065FFFF41FFE3FF35C7FBFFFF49BB50DA4398BF7F000041534D8D9BB065FFFF41FFE3FF35B3FBFFFF49BB60DA4398BF7F000041534D8D9BA065FFFF41FFE3FF359FFBFFFF49BB70DA4398BF7F000041534D8D9B9065FFFF41FFE3FF358BFBFFFF49BB80DA4398BF7F000041534D8D9B8065FFFF41FFE3FF3577FBFFFF49BB90DA4398BF7F000041534D8D9B7065FFFF41FFE3FF3563FBFFFF49BBA0DA4398BF7F000041534D8D9B6065FFFF41FFE3FF354FFBFFFF49BBB0DA4398BF7F000041534D8D9B5065FFFF41FFE3FF353BFBFFFF4D8D5B0841534D8D9B3865FFFF41FFE3FF352DFBFFFF4D8D5B2041534D8D9B2065FFFF41FFE3FF354FFBFFFF49BB00DB4398BF7F000041534D8D9B0065FFFF41FFE3
[3e4c2490b9b720a] jit-backend-dump}
[3e4c2490b9c21d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dc04 +0  23000000
[3e4c2490b9c3733] jit-backend-dump}
[3e4c2490b9c7791] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843de75 +0  23000000
[3e4c2490b9c8699] jit-backend-dump}
[3e4c2490b9cb9fd] {jit-backend-addr
bridge out of Guard 0x3582698 has address 0x7fbf9843dc00 to 0x7fbf9843de70
       gc table: 0x7fbf9843db20
    jump target: 0x7fbf9843dc00
         resops: 0x7fbf9843dc0e
       failures: 0x7fbf9843de70
            end: 0x7fbf9843e0bf
[3e4c2490b9ce100] jit-backend-addr}
[3e4c2490b9d176a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dc1c +0  B3020000
[3e4c2490b9d25f8] jit-backend-dump}
[3e4c2490b9d57f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dc2f +0  BC020000
[3e4c2490b9d6539] jit-backend-dump}
[3e4c2490b9d9615] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dc43 +0  C4020000
[3e4c2490b9da2cb] jit-backend-dump}
[3e4c2490b9dd373] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dc57 +0  CC020000
[3e4c2490b9de036] jit-backend-dump}
[3e4c2490b9e1176] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dc64 +0  DB020000
[3e4c2490b9e1e36] jit-backend-dump}
[3e4c2490b9e4efc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dc78 +0  E3020000
[3e4c2490b9e5bce] jit-backend-dump}
[3e4c2490b9e8c7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dc8d +0  EA020000
[3e4c2490b9e992f] jit-backend-dump}
[3e4c2490b9ec987] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dca4 +0  EF020000
[3e4c2490b9ed647] jit-backend-dump}
[3e4c2490b9f0687] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dcb1 +0  FE020000
[3e4c2490b9f1346] jit-backend-dump}
[3e4c2490b9f43bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dcc7 +0  04030000
[3e4c2490b9f5080] jit-backend-dump}
[3e4c2490b9f80bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dcdd +0  0A030000
[3e4c2490b9f8d79] jit-backend-dump}
[3e4c2490b9fbdc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dceb +0  18030000
[3e4c2490b9fca7e] jit-backend-dump}
[3e4c2490b9ffa6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dcf5 +0  2A030000
[3e4c2490ba00734] jit-backend-dump}
[3e4c2490ba0376e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dd02 +0  39030000
[3e4c2490ba04437] jit-backend-dump}
[3e4c2490ba07448] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dd12 +0  45030000
[3e4c2490ba0812d] jit-backend-dump}
[3e4c2490ba0b16c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dd32 +0  41030000
[3e4c2490ba0be2c] jit-backend-dump}
[3e4c2490ba0ee5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dd44 +0  45030000
[3e4c2490ba0fb19] jit-backend-dump}
[3e4c2490ba12b62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843de1d +0  82020000
[3e4c2490ba13815] jit-backend-dump}
[3e4c2490ba16ac5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98436f41 +0  BB6C0000
[3e4c2490ba1779a] jit-backend-dump}
[3e4c2490ba1b771] jit-backend}
[3e4c2490ba1f46a] {jit-log-opt-bridge
# bridge out of Guard 0x3582698 with 101 ops
[i0, p1, p2, p3, p4, p5]
+246: guard_not_invalidated(descr=<Guard0x35ea800>) [i0, p1, p2, p3, p4, p5]
+246: i7 = int_lt(i0, 0)
+250: guard_true(i7, descr=<Guard0x35ecb60>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+256: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x35ea860>) [i0, p1, p2, p3, p4, p5]
+275: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+286: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x35ecba8>) [i0, p1, p2, p3, p4, p5]
+295: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+295: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if12 (let ([SetBang9 (+ CellRef(count) 1)]) (set! count SetBang9)) (void))')
+306: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+309: guard_true(i14, descr=<Guard0x35ecbf0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(void)')
+315: guard_class(p12, 16435208, descr=<Guard0x35ecc38>) [i0, p1, p2, p3, p4, p5]
+328: p16 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+339: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x35ecc80>) [i0, p1, p2, p3, p4, p5]
+348: p18 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+352: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+356: guard_class(p19, 16435208, descr=<Guard0x35eccc8>) [i0, p1, p2, p3, p4, p5]
+369: p21 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+373: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x35ea8c0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if13 (pt-in-poly2 xp4901 yp4903 0.5 -1.25)]) (if if13 (let ([SetBang10 (+ CellRef(count) 1)]) (set! count SetBang10)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 0.5 -1.25)')
+392: guard_class(p18, 16500368, descr=<Guard0x35ecd10>) [i0, p1, p2, p3, p4, p5]
+405: p24 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+409: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x35ea920>) [i0, p1, p2, p3, p4, p5]
+427: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+431: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x35ea980>) [i0, p1, p2, p3, p4, p5]
+449: p28 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+449: i29 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+453: i31 = int_sub_ovf(i29, 1)
+457: guard_no_overflow(descr=<Guard0x35ecd58>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+463: i33 = int_lt(i31, 0)
+467: guard_false(i33, descr=<Guard0x35ecda0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+473: i34 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+477: i35 = int_lt(i31, i34)
+480: guard_true(i35, descr=<Guard0x35ecde8>) [i0, p1, p2, p3, p4, p5]
+486: p36 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+490: guard_class(p36, 16623624, descr=<Guard0x35ece30>) [i0, p1, p2, p3, p4, p5]
+502: p38 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+506: f39 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+513: i41 = float_gt(f39, -1.250000)
+528: guard_true(i41, descr=<Guard0x35ece78>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+534: f43 = getarrayitem_gc_f(p38, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+540: i45 = float_gt(f43, -1.250000)
+546: guard_true(i45, descr=<Guard0x35ecec0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, 'or-part4864')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+552: i47 = int_sub(i31, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+556: p48 = new_with_vtable(descr=<SizeDescr 56>)
+603: p49 = new_with_vtable(descr=<SizeDescr 16>)
+614: p50 = new_with_vtable(descr=<SizeDescr 40>)
+625: p51 = new_with_vtable(descr=<SizeDescr 40>)
+644: setfield_gc(p51, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+649: setfield_gc(p51, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+654: setfield_gc(p51, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+666: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+671: i53 = arraylen_gc(p38, descr=<ArrayF 8>)
+678: setfield_gc(p50, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+682: setfield_gc(p50, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+686: setfield_gc(p50, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+690: setfield_gc(p50, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+701: setfield_gc(p48, ConstPtr(ptr55), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+712: setfield_gc(p48, ConstPtr(ptr56), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+716: setfield_gc(p48, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+727: setfield_gc(p48, ConstPtr(ptr57), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+731: setfield_gc(p48, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+742: setfield_gc(p48, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+746: setfield_gc(p49, i31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+750: i60 = int_le(i31, 9223372036854775806)
+763: guard_true(i60, descr=<Guard0x35ea9e0>) [p50, i47, p49, p48, None, None, None, None, None, None]
+769: jump(p48, ConstPtr(ptr62), i47, p49, p50, p21, p26, i34, p38, ConstPtr(ptr58), -1.250000, i31, descr=TargetToken(55487648))
+848: --end of the loop--
[3e4c2490ba7c26b] jit-log-opt-bridge}
[3e4c2490c01a819] {jit-backend
[3e4c2490c0da42c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e2a0 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB202000048FF0425F01965034983FE000F8C000000004D8B6F084983FD01720841817D00900F00000F85000000004D8B5424104C8B0DE4FEFFFF4D39CA0F85000000004D8B4C24284983F9017207418139F08C00000F85000000004D8B51084D39D60F8D000000004D8B411841813848EE02000F85000000004D8B4110F2470F1074F010498B7C24304883FF017206813F201200000F8500000000F2440F106F0866450F2EF50F8600000000488B5E084883FB000F8C000000004C39D30F8D00000000F2450F1074D81066450F2EF50F8700000000F2470F1074F01066450F2EEE0F8300000000498B5424184883FA017206813AF08C00000F8500000000488B42084939C60F8D00000000488B4A18813948EE02000F8500000000488B4A10F2460F1074F1104839C30F8D00000000F2440F1064D910F2460F105CF110F2450F5CE3F2470F105CF01066450F28D5F2450F5CEBF2450F59E5F2450F106CD810F2470F105CF010F2450F5CEB49BBE8E14398BF7F000066450F2E2B7B044883FD000F8400000000F2450F5EE5F2450F58F4498B5C24204883FB017206813B201200000F8500000000F2440F10630866450F2EE60F8300000000498D5EFF4883BD40010000000F8400000000488B0DE5FDFFFF48398D400100000F85000000004883FB000F8C000000004C39D30F8D00000000F2450F1074D81066450F2EF20F8600000000F2470F1074F01066450F2EF20F8600000000488D73FF488B0C25F091F900488D5110483B14251092F9000F87A900000048891425F091F90048C701601400004889590849BBFEFFFFFFFFFFFF7F4C39DB0F8F00000000488B158EFDFFFF4C89A530010000488995400100004989F648898D480100004C89BD380100004C89AD500100004C898D580100004889BD600100004889DE41504D89D0415A66410F28CA49BBA05C4398BF7F000041FFE3660F1F44000048C7442408FFFFFF0049BBC8E04398BF7F00004C895D204D8D9B2862FFFF41FFD3E928FDFFFF49BB80E24398BF7F00004C895D204D8D9B7068FFFF41FFD3E942FFFFFFFF3507FCFFFF49BBD8E04398BF7F000041534D8D9B285FFFFF41FFE3FF35F3FBFFFF49BBE8E04398BF7F000041534D8D9B185FFFFF41FFE3FF35DFFBFFFF49BBF8E04398BF7F000041534D8D9B085FFFFF41FFE3FF35D3FBFFFF49BB08E14398BF7F000041534D8D9BF85EFFFF41FFE3FF35BFFBFFFF49BB18E14398BF7F000041534D8D9BE85EFFFF41FFE3FF35ABFBFFFF49BB28E14398BF7F000041534D8D9BD85EFFFF41FFE3FF3597FBFFFF49BB38E14398BF7F000041534D8D9BC85EFFFF41FFE3FF3583FBFFFF49BB48E14398BF7F000041534D8D9BB85EFFFF41FFE3FF356FFBFFFF49BB58E14398BF7F000041534D8D9BA85EFFFF41FFE3FF355BFBFFFF49BB68E14398BF7F000041534D8D9B985EFFFF41FFE3FF3547FBFFFF49BB78E14398BF7F000041534D8D9B885EFFFF41FFE3FF3533FBFFFF49BB88E14398BF7F000041534D8D9B785EFFFF41FFE3FF351FFBFFFF49BB98E14398BF7F000041534D8D9B685EFFFF41FFE3FF350BFBFFFF49BBA8E14398BF7F000041534D8D9B585EFFFF41FFE3FF35F7FAFFFF49BBB8E14398BF7F000041534D8D9B485EFFFF41FFE3FF35E3FAFFFF49BBC8E14398BF7F000041534D8D9B385EFFFF41FFE3FF35CFFAFFFF49BBD8E14398BF7F000041534D8D9B285EFFFF41FFE3FF35BBFAFFFF49BBF0E14398BF7F000041534D8D9B105EFFFF41FFE3FF35A7FAFFFF49BB00E24398BF7F000041534D8D9B005EFFFF41FFE3FF3593FAFFFF49BB10E24398BF7F000041534D8D9BF05DFFFF41FFE3FF357FFAFFFF49BB20E24398BF7F000041534D8D9BE05DFFFF41FFE3FF3573FAFFFF49BB30E24398BF7F000041534D8D9BD05DFFFF41FFE3FF355FFAFFFF49BB40E24398BF7F000041534D8D9BC05DFFFF41FFE3FF354BFAFFFF49BB50E24398BF7F000041534D8D9BB05DFFFF41FFE3FF3537FAFFFF49BB60E24398BF7F000041534D8D9BA05DFFFF41FFE3FF3523FAFFFF49BB70E24398BF7F000041534D8D9B905DFFFF41FFE3FF350FFAFFFF49BB90E24398BF7F000041534D8D9B705DFFFF41FFE3
[3e4c2490c0e3cc4] jit-backend-dump}
[3e4c2490c0eed57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e394 +0  23000000
[3e4c2490c0f0366] jit-backend-dump}
[3e4c2490c0f41c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e655 +0  23000000
[3e4c2490c0f505f] jit-backend-dump}
[3e4c2490c0f82e0] {jit-backend-addr
bridge out of Guard 0x35c4de8 has address 0x7fbf9843e390 to 0x7fbf9843e650
       gc table: 0x7fbf9843e2a0
    jump target: 0x7fbf9843e390
         resops: 0x7fbf9843e39e
       failures: 0x7fbf9843e650
            end: 0x7fbf9843e987
[3e4c2490c0fa859] jit-backend-addr}
[3e4c2490c0fde79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e3ac +0  FF020000
[3e4c2490c0fec93] jit-backend-dump}
[3e4c2490c101f7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e3c4 +0  03030000
[3e4c2490c102c73] jit-backend-dump}
[3e4c2490c105e74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e3d9 +0  0A030000
[3e4c2490c106b93] jit-backend-dump}
[3e4c2490c109cf8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e3f1 +0  0E030000
[3e4c2490c10a9c1] jit-backend-dump}
[3e4c2490c10daa0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e3fe +0  1D030000
[3e4c2490c10e762] jit-backend-dump}
[3e4c2490c111897] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e40f +0  28030000
[3e4c2490c112522] jit-backend-dump}
[3e4c2490c1155d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e431 +0  22030000
[3e4c2490c11629f] jit-backend-dump}
[3e4c2490c1193c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e442 +0  2D030000
[3e4c2490c11a05c] jit-backend-dump}
[3e4c2490c11d159] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e450 +0  3B030000
[3e4c2490c11de1f] jit-backend-dump}
[3e4c2490c120f47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e459 +0  4E030000
[3e4c2490c121bd9] jit-backend-dump}
[3e4c2490c124c43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e46b +0  58030000
[3e4c2490c125953] jit-backend-dump}
[3e4c2490c128a78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e47d +0  62030000
[3e4c2490c1296fd] jit-backend-dump}
[3e4c2490c12c792] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e494 +0  67030000
[3e4c2490c12d452] jit-backend-dump}
[3e4c2490c13056b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e4a1 +0  76030000
[3e4c2490c131212] jit-backend-dump}
[3e4c2490c1342a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e4b1 +0  82030000
[3e4c2490c134f73] jit-backend-dump}
[3e4c2490c1380c3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e4c5 +0  8A030000
[3e4c2490c138d52] jit-backend-dump}
[3e4c2490c13be3a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e51c +0  4F030000
[3e4c2490c13cb92] jit-backend-dump}
[3e4c2490c13fd01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e53d +0  4A030000
[3e4c2490c140983] jit-backend-dump}
[3e4c2490c143a46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e54e +0  55030000
[3e4c2490c1446f7] jit-backend-dump}
[3e4c2490c14781c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e560 +0  5F030000
[3e4c2490c1484ab] jit-backend-dump}
[3e4c2490c14b5d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e574 +0  67030000
[3e4c2490c14c271] jit-backend-dump}
[3e4c2490c14f3a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e57e +0  79030000
[3e4c2490c150040] jit-backend-dump}
[3e4c2490c15311f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e587 +0  8C030000
[3e4c2490c153dcc] jit-backend-dump}
[3e4c2490c156f03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e599 +0  96030000
[3e4c2490c157b8f] jit-backend-dump}
[3e4c2490c15ac2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e5ab +0  A0030000
[3e4c2490c15b8cc] jit-backend-dump}
[3e4c2490c15ea46] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843e5ef +0  78030000
[3e4c2490c15f6d2] jit-backend-dump}
[3e4c2490c1629dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aaa9 +0  E3380000
[3e4c2490c16367e] jit-backend-dump}
[3e4c2490c16768a] jit-backend}
[3e4c2490c16b3bd] {jit-log-opt-bridge
# bridge out of Guard 0x35c4de8 with 152 ops
[i0, p1, p2, p3, p4, p5]
+262: guard_not_invalidated(descr=<Guard0x35eaa40>) [i0, p1, p2, p3, p4, p5]
+262: i7 = int_lt(i0, 0)
+266: guard_false(i7, descr=<Guard0x35ecf08>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
+272: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+276: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x35eaaa0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-ref yp i)')
+296: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+308: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x35ecf50>) [i0, p1, p2, p3, p4, p5]
+317: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+322: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x35eab00>) [i0, p1, p2, p3, p4, p5]
+341: i14 = getfield_gc_i(p12, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+345: i15 = int_lt(i0, i14)
+348: guard_true(i15, descr=<Guard0x35ecf98>) [i0, p1, p2, p3, p4, p5]
+354: p16 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+358: guard_class(p16, 16623624, descr=<Guard0x35ecfe0>) [i0, p1, p2, p3, p4, p5]
+371: p18 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+375: f19 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+382: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+387: guard_nonnull_class(p20, ConstClass(W_Flonum), descr=<Guard0x35eab60>) [i0, p1, p2, p3, p4, p5]
+405: f22 = getfield_gc_f(p20, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+411: i23 = float_gt(f19, f22)
+416: guard_true(i23, descr=<Guard0x35ed028>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+422: i24 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+426: i26 = int_ge(i24, 0)
+430: guard_true(i26, descr=<Guard0x35ed070>) [i0, p1, p2, p3, p4, p5]
+436: i27 = int_lt(i24, i14)
+439: guard_true(i27, descr=<Guard0x35ed0b8>) [i0, p1, p2, p3, p4, p5]
+445: f28 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+452: i29 = float_gt(f28, f22)
+457: guard_false(i29, descr=<Guard0x35ed100>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+463: f30 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+470: i31 = float_ge(f22, f30)
+475: guard_false(i31, descr=<Guard0x35ed148>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+481: p32 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+486: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x35eabc0>) [i0, p1, p2, p3, p4, p5]
+504: i34 = getfield_gc_i(p32, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+508: i35 = int_lt(i0, i34)
+511: guard_true(i35, descr=<Guard0x35ed190>) [i0, p1, p2, p3, p4, p5]
+517: p36 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+521: guard_class(p36, 16623624, descr=<Guard0x35ed1d8>) [i0, p1, p2, p3, p4, p5]
+533: p38 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+537: f39 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+544: i40 = int_lt(i24, i34)
+547: guard_true(i40, descr=<Guard0x35ed220>) [i0, p1, p2, p3, p4, p5]
+553: f41 = getarrayitem_gc_f(p38, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+560: f42 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+567: f43 = float_sub(f41, f42)
debug_merge_point(0, 0, '(vector-ref yp i)')
+572: f44 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+579: f45 = float_sub(f22, f44)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+589: f46 = float_mul(f43, f45)
debug_merge_point(0, 0, '(vector-ref yp j)')
+594: f47 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+601: f48 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+608: f49 = float_sub(f47, f48)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+613: i51 = float_eq(f49, 0.000000)
+634: guard_false(i51, descr=<Guard0x35ed268>) [i0, p1, p2, p3, p4, p5]
+640: f52 = float_truediv(f46, f49)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+645: f53 = float_add(f39, f52)
debug_merge_point(0, 0, '(>= x AppRand15)')
+650: p54 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+655: guard_nonnull_class(p54, ConstClass(W_Flonum), descr=<Guard0x35eac20>) [i0, p1, p2, p3, p4, p5]
+673: f56 = getfield_gc_f(p54, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+679: i57 = float_ge(f56, f53)
+684: guard_false(i57, descr=<Guard0x35ed2b0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+690: i59 = int_sub(i0, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
+694: guard_nonnull(p2, descr=<Guard0x35ed2f8>) [i0, p1, p2, p3, p4, p5]
+715: i61 = instance_ptr_eq(p2, ConstPtr(ptr60))
+722: guard_true(i61, descr=<Guard0x35ed340>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+728: i63 = int_lt(i59, 0)
+732: guard_false(i63, descr=<Guard0x35ed388>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+738: i64 = int_lt(i59, i14)
+741: guard_true(i64, descr=<Guard0x35ed3d0>) [i0, p1, p2, p3, p4, p5]
+747: f65 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+754: i66 = float_gt(f65, f22)
+759: guard_true(i66, descr=<Guard0x35ed418>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+765: f67 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+772: i68 = float_gt(f67, f22)
+777: guard_true(i68, descr=<Guard0x35ed460>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, 'or-part4864')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+783: i70 = int_sub(i59, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+787: p71 = new_with_vtable(descr=<SizeDescr 16>)
+828: i72 = arraylen_gc(p18, descr=<ArrayF 8>)
+828: setfield_gc(p71, i59, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+832: i74 = int_le(i59, 9223372036854775806)
+845: guard_true(i74, descr=<Guard0x35eac80>) [p4, i70, p71, None, None, None, p3, None, None]
+858: jump(p3, ConstPtr(ptr76), i70, p71, p4, p8, p12, i14, p18, p20, f22, i59, descr=TargetToken(55487648))
+944: --end of the loop--
[3e4c2490c1e28af] jit-log-opt-bridge}
[3e4c2490cb1bd65] {jit-backend
[3e4c2490cbd5248] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ec
[3e4c2490cbe104c] jit-backend-dump}
[3e4c2490cbec2e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ed54 +0  23000000
[3e4c2490cbed8f9] jit-backend-dump}
[3e4c2490cbf197f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f0f5 +0  23000000
[3e4c2490cbf287a] jit-backend-dump}
[3e4c2490cbf5c99] {jit-backend-addr
bridge out of Guard 0x35c4d10 has address 0x7fbf9843ed50 to 0x7fbf9843f0f0
       gc table: 0x7fbf9843ec10
    jump target: 0x7fbf9843ed50
         resops: 0x7fbf9843ed5e
       failures: 0x7fbf9843f0f0
            end: 0x7fbf9843f523
[3e4c2490cbf8053] jit-backend-addr}
[3e4c2490cbfb636] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ed6c +0  DF030000
[3e4c2490cbfc443] jit-backend-dump}
[3e4c2490cbff6ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ed84 +0  E3030000
[3e4c2490cc003ea] jit-backend-dump}
[3e4c2490cc0359b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ed99 +0  EA030000
[3e4c2490cc0425e] jit-backend-dump}
[3e4c2490cc073c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843edb1 +0  EE030000
[3e4c2490cc0806e] jit-backend-dump}
[3e4c2490cc0b183] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843edbe +0  FD030000
[3e4c2490cc0be43] jit-backend-dump}
[3e4c2490cc0ef0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843edcf +0  08040000
[3e4c2490cc0fbb7] jit-backend-dump}
[3e4c2490cc12c74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843edf1 +0  02040000
[3e4c2490cc13930] jit-backend-dump}
[3e4c2490cc169ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ee02 +0  0D040000
[3e4c2490cc1768b] jit-backend-dump}
[3e4c2490cc1a798] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ee10 +0  1B040000
[3e4c2490cc1b439] jit-backend-dump}
[3e4c2490cc1e56a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ee19 +0  2E040000
[3e4c2490cc1f208] jit-backend-dump}
[3e4c2490cc22321] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ee2b +0  38040000
[3e4c2490cc22fc2] jit-backend-dump}
[3e4c2490cc260de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ee3d +0  42040000
[3e4c2490cc26d82] jit-backend-dump}
[3e4c2490cc29e64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ee54 +0  47040000
[3e4c2490cc2aaff] jit-backend-dump}
[3e4c2490cc2dbfc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ee61 +0  56040000
[3e4c2490cc2e89a] jit-backend-dump}
[3e4c2490cc31963] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ee71 +0  62040000
[3e4c2490cc32608] jit-backend-dump}
[3e4c2490cc35785] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ee85 +0  6A040000
[3e4c2490cc36430] jit-backend-dump}
[3e4c2490cc395cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843eedc +0  2F040000
[3e4c2490cc3a273] jit-backend-dump}
[3e4c2490cc3d367] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843eefd +0  2A040000
[3e4c2490cc3e00e] jit-backend-dump}
[3e4c2490cc41097] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ef0e +0  35040000
[3e4c2490cc41d26] jit-backend-dump}
[3e4c2490cc44d9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ef20 +0  3F040000
[3e4c2490cc45a13] jit-backend-dump}
[3e4c2490cc48a9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ef34 +0  47040000
[3e4c2490cc49722] jit-backend-dump}
[3e4c2490cc4c7a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ef3e +0  59040000
[3e4c2490cc4d427] jit-backend-dump}
[3e4c2490cc50476] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ef47 +0  6C040000
[3e4c2490cc510f2] jit-backend-dump}
[3e4c2490cc54157] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ef59 +0  76040000
[3e4c2490cc58294] jit-backend-dump}
[3e4c2490cc5bdf0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ef6b +0  80040000
[3e4c2490cc5cb4c] jit-backend-dump}
[3e4c2490cc5fefc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ef74 +0  93040000
[3e4c2490cc60c6a] jit-backend-dump}
[3e4c2490cc63edd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843efd2 +0  51040000
[3e4c2490cc64c17] jit-backend-dump}
[3e4c2490cc67edc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843efe7 +0  58040000
[3e4c2490cc68be5] jit-backend-dump}
[3e4c2490cc6bd1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843eff5 +0  66040000
[3e4c2490cc6ca07] jit-backend-dump}
[3e4c2490cc6fadf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843effe +0  79040000
[3e4c2490cc707a5] jit-backend-dump}
[3e4c2490cc7383a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f010 +0  83040000
[3e4c2490cc74513] jit-backend-dump}
[3e4c2490cc7755b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f022 +0  8D040000
[3e4c2490cc78280] jit-backend-dump}
[3e4c2490cc7b292] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f034 +0  97040000
[3e4c2490cc7bf58] jit-backend-dump}
[3e4c2490cc7ef35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f046 +0  A1040000
[3e4c2490cc7fc01] jit-backend-dump}
[3e4c2490cc82cca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f08d +0  76040000
[3e4c2490cc839e0] jit-backend-dump}
[3e4c2490cc86c80] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843aa84 +0  C8420000
[3e4c2490cc87974] jit-backend-dump}
[3e4c2490cc8b99b] jit-backend}
[3e4c2490cc8f678] {jit-log-opt-bridge
# bridge out of Guard 0x35c4d10 with 232 ops
[i0, p1, p2, p3, p4, p5]
+342: guard_not_invalidated(descr=<Guard0x35eace0>) [i0, p1, p2, p3, p4, p5]
+342: i7 = int_lt(i0, 0)
+346: guard_false(i7, descr=<Guard0x35ed4a8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
+352: p8 = getfield_gc_r(p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+356: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x35ead40>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(vector-ref yp i)')
+376: p10 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+388: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x35ed4f0>) [i0, p1, p2, p3, p4, p5]
+397: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+402: guard_nonnull_class(p12, ConstClass(W_Vector), descr=<Guard0x35eada0>) [i0, p1, p2, p3, p4, p5]
+421: i14 = getfield_gc_i(p12, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+425: i15 = int_lt(i0, i14)
+428: guard_true(i15, descr=<Guard0x35ed538>) [i0, p1, p2, p3, p4, p5]
+434: p16 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+438: guard_class(p16, 16623624, descr=<Guard0x35ed580>) [i0, p1, p2, p3, p4, p5]
+451: p18 = getfield_gc_r(p12, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+455: f19 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+462: p20 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+467: guard_nonnull_class(p20, ConstClass(W_Flonum), descr=<Guard0x35eae00>) [i0, p1, p2, p3, p4, p5]
+485: f22 = getfield_gc_f(p20, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+491: i23 = float_gt(f19, f22)
+496: guard_true(i23, descr=<Guard0x35ed5c8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+502: i24 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+506: i26 = int_ge(i24, 0)
+510: guard_true(i26, descr=<Guard0x35ed610>) [i0, p1, p2, p3, p4, p5]
+516: i27 = int_lt(i24, i14)
+519: guard_true(i27, descr=<Guard0x35ed658>) [i0, p1, p2, p3, p4, p5]
+525: f28 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+532: i29 = float_gt(f28, f22)
+537: guard_false(i29, descr=<Guard0x35ed6a0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+543: f30 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+550: i31 = float_ge(f22, f30)
+555: guard_false(i31, descr=<Guard0x35ed6e8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+561: p32 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+566: guard_nonnull_class(p32, ConstClass(W_Vector), descr=<Guard0x35eae60>) [i0, p1, p2, p3, p4, p5]
+584: i34 = getfield_gc_i(p32, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+588: i35 = int_lt(i0, i34)
+591: guard_true(i35, descr=<Guard0x35ed730>) [i0, p1, p2, p3, p4, p5]
+597: p36 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+601: guard_class(p36, 16623624, descr=<Guard0x35ed778>) [i0, p1, p2, p3, p4, p5]
+613: p38 = getfield_gc_r(p32, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+617: f39 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+624: i40 = int_lt(i24, i34)
+627: guard_true(i40, descr=<Guard0x35ed7c0>) [i0, p1, p2, p3, p4, p5]
+633: f41 = getarrayitem_gc_f(p38, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+640: f42 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+647: f43 = float_sub(f41, f42)
debug_merge_point(0, 0, '(vector-ref yp i)')
+652: f44 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+659: f45 = float_sub(f22, f44)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+669: f46 = float_mul(f43, f45)
debug_merge_point(0, 0, '(vector-ref yp j)')
+674: f47 = getarrayitem_gc_f(p18, i24, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+681: f48 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+688: f49 = float_sub(f47, f48)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+693: i51 = float_eq(f49, 0.000000)
+714: guard_false(i51, descr=<Guard0x35ed808>) [i0, p1, p2, p3, p4, p5]
+720: f52 = float_truediv(f46, f49)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+725: f53 = float_add(f39, f52)
debug_merge_point(0, 0, '(>= x AppRand15)')
+730: p54 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+735: guard_nonnull_class(p54, ConstClass(W_Flonum), descr=<Guard0x35eaec0>) [i0, p1, p2, p3, p4, p5]
+753: f56 = getfield_gc_f(p54, descr=<FieldF pycket.values.W_Flonum.inst_value 8 pure>)
+759: i57 = float_ge(f56, f53)
+764: guard_false(i57, descr=<Guard0x35ed850>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+770: i59 = int_sub(i0, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
+774: guard_nonnull(p2, descr=<Guard0x35ed898>) [i0, p1, p2, p3, p4, p5]
+795: i61 = instance_ptr_eq(p2, ConstPtr(ptr60))
+802: guard_false(i61, descr=<Guard0x35ed8e0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+808: i63 = int_lt(i59, 0)
+812: guard_false(i63, descr=<Guard0x35ed928>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+818: i64 = int_lt(i59, i14)
+821: guard_true(i64, descr=<Guard0x35ed970>) [i0, p1, p2, p3, p4, p5]
+827: f65 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+834: i66 = float_gt(f65, f22)
+839: guard_false(i66, descr=<Guard0x35ed9b8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+845: f67 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+852: i68 = float_ge(f22, f67)
+857: guard_false(i68, descr=<Guard0x35eda00>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+863: i69 = int_lt(i59, i34)
+866: guard_true(i69, descr=<Guard0x35eda48>) [i0, p1, p2, p3, p4, p5]
+872: f70 = getarrayitem_gc_f(p38, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+879: f71 = getarrayitem_gc_f(p38, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+886: f72 = getarrayitem_gc_f(p38, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+893: f73 = float_sub(f71, f72)
debug_merge_point(0, 0, '(vector-ref yp i)')
+898: f74 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+905: f75 = float_sub(f22, f74)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+915: f76 = float_mul(f73, f75)
debug_merge_point(0, 0, '(vector-ref yp j)')
+920: f77 = getarrayitem_gc_f(p18, i0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref yp i)')
+927: f78 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+934: f79 = float_sub(f77, f78)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+939: i81 = float_eq(f79, 0.000000)
+960: guard_false(i81, descr=<Guard0x35eda90>) [i0, p1, p2, p3, p4, p5]
+966: f82 = float_truediv(f76, f79)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+971: f83 = float_add(f70, f82)
debug_merge_point(0, 0, '(>= x AppRand15)')
+976: i84 = float_ge(f56, f83)
+981: guard_false(i84, descr=<Guard0x35edad8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+987: i86 = int_sub(i59, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+991: i88 = int_lt(i86, 0)
+995: guard_false(i88, descr=<Guard0x35edb20>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+1001: i89 = int_lt(i86, i14)
+1004: guard_true(i89, descr=<Guard0x35edb68>) [i0, p1, p2, p3, p4, p5]
+1010: f90 = getarrayitem_gc_f(p18, i86, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+1017: i91 = float_gt(f90, f22)
+1022: guard_false(i91, descr=<Guard0x35edbb0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+1028: f92 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+1035: i93 = float_ge(f22, f92)
+1040: guard_true(i93, descr=<Guard0x35edbf8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+1046: f94 = getarrayitem_gc_f(p18, i59, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+1053: i95 = float_gt(f94, f22)
+1058: guard_false(i95, descr=<Guard0x35edc40>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+1064: f96 = getarrayitem_gc_f(p18, i86, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+1071: i97 = float_ge(f22, f96)
+1076: guard_true(i97, descr=<Guard0x35edc88>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+1082: i99 = int_sub(i86, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+1086: p100 = new_with_vtable(descr=<SizeDescr 16>)
+1130: i101 = arraylen_gc(p18, descr=<ArrayF 8>)
+1130: setfield_gc(p100, i86, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1134: i103 = int_le(i86, 9223372036854775806)
+1147: guard_true(i103, descr=<Guard0x35eaf20>) [p4, i99, p100, None, None, None, p3, None, None]
+1160: jump(p3, ConstPtr(ptr105), i99, p100, p4, p8, p12, i14, p18, p20, f22, i86, descr=TargetToken(55487648))
+1248: --end of the loop--
[3e4c2490cd2f903] jit-log-opt-bridge}
[3e4c2490d5cd2ac] {jit-backend
[3e4c2490d6560d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f6e
[3e4c2490d65f873] jit-backend-dump}
[3e4c2490d66b1f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f7e4 +0  23000000
[3e4c2490d66c5f1] jit-backend-dump}
[3e4c2490d6707af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843fab5 +0  23000000
[3e4c2490d671700] jit-backend-dump}
[3e4c2490d674c4a] {jit-backend-addr
bridge out of Guard 0x35ecba8 has address 0x7fbf9843f7e0 to 0x7fbf9843fab0
       gc table: 0x7fbf9843f6e0
    jump target: 0x7fbf9843f7e0
         resops: 0x7fbf9843f7ee
       failures: 0x7fbf9843fab0
            end: 0x7fbf9843fd6f
[3e4c2490d67702c] jit-backend-addr}
[3e4c2490d67a79d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f7fc +0  13030000
[3e4c2490d67b5e4] jit-backend-dump}
[3e4c2490d67e94e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f80f +0  1C030000
[3e4c2490d67f67c] jit-backend-dump}
[3e4c2490d682865] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f823 +0  24030000
[3e4c2490d6834eb] jit-backend-dump}
[3e4c2490d686665] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f83b +0  28030000
[3e4c2490d687300] jit-backend-dump}
[3e4c2490d68a453] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f849 +0  36030000
[3e4c2490d68b125] jit-backend-dump}
[3e4c2490d68e367] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f861 +0  3A030000
[3e4c2490d68f014] jit-backend-dump}
[3e4c2490d69214b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f86e +0  49030000
[3e4c2490d692e02] jit-backend-dump}
[3e4c2490d695f33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f889 +0  4A030000
[3e4c2490d696c0b] jit-backend-dump}
[3e4c2490d699d98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f897 +0  58030000
[3e4c2490d69aa27] jit-backend-dump}
[3e4c2490d69db58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f8b0 +0  5B030000
[3e4c2490d69e7e1] jit-backend-dump}
[3e4c2490d6a1909] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f8c7 +0  60030000
[3e4c2490d6a2598] jit-backend-dump}
[3e4c2490d6a5652] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f8de +0  65030000
[3e4c2490d6a62d7] jit-backend-dump}
[3e4c2490d6a949e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f8eb +0  74030000
[3e4c2490d6aa124] jit-backend-dump}
[3e4c2490d6ad2b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f902 +0  79030000
[3e4c2490d6adf3a] jit-backend-dump}
[3e4c2490d6b1090] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f918 +0  7F030000
[3e4c2490d6b1d09] jit-backend-dump}
[3e4c2490d6b4dc6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f926 +0  8D030000
[3e4c2490d6b5a52] jit-backend-dump}
[3e4c2490d6b8bae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f930 +0  9F030000
[3e4c2490d6b982d] jit-backend-dump}
[3e4c2490d6bc8de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f93d +0  AE030000
[3e4c2490d6bd56a] jit-backend-dump}
[3e4c2490d6c069b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f94d +0  BA030000
[3e4c2490d6c132a] jit-backend-dump}
[3e4c2490d6c4461] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f96d +0  B6030000
[3e4c2490d6c50ea] jit-backend-dump}
[3e4c2490d6c8236] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f97f +0  BA030000
[3e4c2490d6c8ec5] jit-backend-dump}
[3e4c2490d6cc000] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843fa53 +0  FC020000
[3e4c2490d6ccc9e] jit-backend-dump}
[3e4c2490d6d0067] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843dc43 +0  991B0000
[3e4c2490d6d0d02] jit-backend-dump}
[3e4c2490d6d4c99] jit-backend}
[3e4c2490d6d891b] {jit-log-opt-bridge
# bridge out of Guard 0x35ecba8 with 113 ops
[i0, p1, p2, p3, p4, p5]
+278: guard_not_invalidated(descr=<Guard0x35eafe0>) [i0, p1, p2, p3, p4, p5]
+278: i7 = int_lt(i0, 0)
+282: guard_true(i7, descr=<Guard0x35edd60>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+288: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x35eb040>) [i0, p1, p2, p3, p4, p5]
+307: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+318: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x35edda8>) [i0, p1, p2, p3, p4, p5]
+327: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+331: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if13 (let ([SetBang10 (+ CellRef(count) 1)]) (set! count SetBang10)) (void))')
+342: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+345: guard_false(i14, descr=<Guard0x35eddf0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([SetBang10 (+ CellRef(count) 1)]) (set! count SetBang10))')
+351: guard_class(p12, 16435208, descr=<Guard0x35ede38>) [i0, p1, p2, p3, p4, p5]
+365: p16 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+370: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x35eb0a0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(+ CellRef(count) 1)')
+389: guard_class(p11, 16500368, descr=<Guard0x35ede80>) [i0, p1, p2, p3, p4, p5]
+402: p19 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+406: p20 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+410: guard_nonnull_class(p20, ConstClass(W_CellIntegerStrategy), descr=<Guard0x35eb100>) [i0, p1, p2, p3, p4, p5]
+429: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+433: i24 = int_add_ovf(i22, 1)
+437: guard_no_overflow(descr=<Guard0x35edec8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(set! count SetBang10)')
+443: p25 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+448: setfield_gc(p20, i24, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+459: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x35eb160>) [p25, p12, None, None, None, None, None, None]
+468: p28 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+473: p29 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+478: guard_class(p29, 16435208, descr=<Guard0x35edf10>) [p25, p12, None, None, None, None, None, None]
+491: p31 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+495: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x35eb1c0>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if14 (pt-in-poly2 xp4901 yp4903 -0.5 -2.5)]) (if if14 (let ([SetBang11 (+ CellRef(count) 1)]) (set! count SetBang11)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 -0.5 -2.5)')
+514: guard_class(p28, 16500368, descr=<Guard0x35edf58>) [p25, p12, None, None, None, None, None, None]
+527: p34 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+531: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x35eb220>) [p25, p12, None, None, None, None, None, None]
+550: p36 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+554: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x35eb280>) [p25, p12, None, None, None, None, None, None]
+572: p38 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+572: i39 = getfield_gc_i(p34, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+576: i41 = int_sub_ovf(i39, 1)
+580: guard_no_overflow(descr=<Guard0x35edfa0>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+586: i43 = int_lt(i41, 0)
+590: guard_false(i43, descr=<Guard0x361e020>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+596: i44 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+600: i45 = int_lt(i41, i44)
+603: guard_true(i45, descr=<Guard0x361e068>) [p25, p12, None, None, None, None, None, None]
+609: p46 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+613: guard_class(p46, 16623624, descr=<Guard0x361e0b0>) [p25, p12, None, None, None, None, None, None]
+625: p48 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+629: f49 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+636: i51 = float_gt(f49, -2.500000)
+651: guard_true(i51, descr=<Guard0x361e0f8>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+657: f53 = getarrayitem_gc_f(p48, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+663: i55 = float_gt(f53, -2.500000)
+669: guard_true(i55, descr=<Guard0x361e140>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, 'or-part4864')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+675: i57 = int_sub(i41, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+679: p58 = new_with_vtable(descr=<SizeDescr 56>)
+726: p59 = new_with_vtable(descr=<SizeDescr 16>)
+737: p60 = new_with_vtable(descr=<SizeDescr 40>)
+748: p61 = new_with_vtable(descr=<SizeDescr 40>)
+766: setfield_gc(p61, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+770: setfield_gc(p61, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+774: setfield_gc(p61, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+785: setfield_gc(p61, ConstPtr(ptr62), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+789: i63 = arraylen_gc(p48, descr=<ArrayF 8>)
+796: setfield_gc(p60, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+800: setfield_gc(p60, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+804: setfield_gc(p60, p61, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+808: setfield_gc(p60, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+819: setfield_gc(p58, ConstPtr(ptr65), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+830: setfield_gc(p58, ConstPtr(ptr66), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+834: setfield_gc(p58, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+845: setfield_gc(p58, ConstPtr(ptr67), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+849: setfield_gc(p58, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+860: setfield_gc(p58, ConstPtr(ptr68), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+864: setfield_gc(p59, i41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+868: i70 = int_le(i41, 9223372036854775806)
+881: guard_true(i70, descr=<Guard0x35eb2e0>) [p60, i57, p59, p58, None, None, None, None, None, None]
+887: jump(p58, ConstPtr(ptr71), i57, p59, p60, p31, p36, i44, p48, ConstPtr(ptr68), -2.500000, i41, descr=TargetToken(55487648))
+976: --end of the loop--
[3e4c2490d743630] jit-log-opt-bridge}
[3e4c2490dc0e619] {jit-backend
[3e4c2490dc65f9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843fe
[3e4c2490dc6d034] jit-backend-dump}
[3e4c2490dc77e76] {jit-backend-addr
Loop 23 ((let ([if16 (> i4964 pnpoly-iters)]) (if if16 (begin (void) (void)) (begin (run) (doloop4962 (add1 i4964))))) from (doloop4962 (add1 i4964))) has address 0x7fbf9843ff5d to 0x7fbf98440150 (bootstrap 0x7fbf9843fed0)
       gc table: 0x7fbf9843fe40
       function: 0x7fbf9843fed0
         resops: 0x7fbf9843ff5d
       failures: 0x7fbf98440150
            end: 0x7fbf98440275
[3e4c2490dc7ac08] jit-backend-addr}
[3e4c2490dc7f547] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ff74 +0  07020000
[3e4c2490dc807c3] jit-backend-dump}
[3e4c2490dc83fd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ff8a +0  0D020000
[3e4c2490dc84db2] jit-backend-dump}
[3e4c2490dc88312] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ff9d +0  32020000
[3e4c2490dc8905e] jit-backend-dump}
[3e4c2490dc8c4f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ffae +0  3D020000
[3e4c2490dc8d228] jit-backend-dump}
[3e4c2490dc9058c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ffbe +0  49020000
[3e4c2490dc9130a] jit-backend-dump}
[3e4c2490dc94530] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843ffd5 +0  4E020000
[3e4c2490dc95285] jit-backend-dump}
[3e4c2490dc98575] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843fff6 +0  49020000
[3e4c2490dc9929d] jit-backend-dump}
[3e4c2490dc9c4ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844000d +0  48020000
[3e4c2490dc9d1d5] jit-backend-dump}
[3e4c2490dca0e5a] jit-backend}
[3e4c2490dca4e50] {jit-log-opt-loop
# Loop 23 ((let ([if16 (> i4964 pnpoly-iters)]) (if if16 (begin (void) (void)) (begin (run) (doloop4962 (add1 i4964))))) from (doloop4962 (add1 i4964))) : entry bridge with 86 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([if16 (> i4964 pnpoly-iters)]) (if if16 (begin (void) (void)) (begin (run) (doloop4962 (add1 i4964))))) from (doloop4962 (add1 i4964))')
+293: guard_class(p1, 16528368, descr=<Guard0x35eb340>) [p0, p1]
+312: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+316: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x35eb3a0>) [p0, p1]
debug_merge_point(0, 0, '(> i4964 pnpoly-iters)')
+334: guard_not_invalidated(descr=<Guard0x361e188>) [p0, p1]
+334: guard_class(p0, 16504944, descr=<Guard0x361e1d0>) [p0, p1]
+353: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+357: i8 = int_gt(i6, 2000000)
+364: guard_false(i8, descr=<Guard0x361e218>) [p0, p1]
debug_merge_point(0, 0, '(if if16 (begin (void) (void)) (begin (run) (doloop4962 (add1 i4964))))')
debug_merge_point(0, 0, '(begin (run) (doloop4962 (add1 i4964)))')
debug_merge_point(0, 0, '(run)')
+370: p9 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+374: guard_class(p9, 16499664, descr=<Guard0x361e260>) [p0, p1]
+386: p11 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([count 0][xp4901 '#(0.0 1.0 1.0 0.0 0.0 1.0 -0.5 -1.0 -1.0 -2.0 -2.5 -2.0 -1.5 -0.5 1.0 1.0 0.0 -0.5 -1.0 -0.5)][yp4903 '#(0.0 0.0 1.0 1.0 2.0 3.0 2.0 3.0 0.0 -0.5 -1.0 -1.5 -2.0 -2.0 -1.5 -1.0 -0.5 -1.0 -1.0 -0.5)]) (let ([if3 (pt-in-poly2 xp4901 yp4903 0.5 0.5)]) (if if3 (let ([SetBang0 (+ CellRef(count) 1)]) (set! count SetBang0)) (void)) (let ([if4 (pt-in-poly2 xp4901 yp4903 0.5 1.5)]) (if if4 (let ([SetBang1 (+ CellRef(count) 1)]) (set! count SetBang1)) (void))) (let ([if5 (pt-in-poly2 xp4901 yp4903 -0.5 1.5)]) (if if5 (let ([SetBang2 (+ CellRef(count) 1)]) (set! count SetBang2)) (void))) (let ([if6 (pt-in-poly2 xp4901 yp4903 0.75 2.25)]) (if if6 (let ([SetBang3 (+ CellRef(count) 1)]) (set! count SetBang3)) (void))) (let ([if7 (pt-in-poly2 xp4901 yp4903 0.0 2.01)]) (if if7 (let ([SetBang4 (+ CellRef(count) 1)]) (set! count SetBang4)) (void))) (let ([if8 (pt-in-poly2 xp4901 yp4903 -0.5 2.5)]) (if if8 (let ([SetBang5 (+ CellRef(count) 1)]) (set! count SetBang5)) (void))) (let ([if9 (pt-in-poly2 xp4901 yp4903 -1.0 -0.5)]) (if if9 (let ([SetBang6 (+ CellRef(count) 1)]) (set! count SetBang6)) (void))) (let ([if10 (pt-in-poly2 xp4901 yp4903 -1.5 0.5)]) (if if10 (let ([SetBang7 (+ CellRef(count) 1)]) (set! count SetBang7)) (void))) (let ([if11 (pt-in-poly2 xp4901 yp4903 -2.25 -1.0)]) (if if11 (let ([SetBang8 (+ CellRef(count) 1)]) (set! count SetBang8)) (void))) (let ([if12 (pt-in-poly2 xp4901 yp4903 0.5 -0.25)]) (if if12 (let ([SetBang9 (+ CellRef(count) 1)]) (set! count SetBang9)) (void))) (let ([if13 (pt-in-poly2 xp4901 yp4903 0.5 -1.25)]) (if if13 (let ([SetBang10 (+ CellRef(count) 1)]) (set! count SetBang10)) (void))) (let ([if14 (pt-in-poly2 xp4901 yp4903 -0.5 -2.5)]) (if if14 (let ([SetBang11 (+ CellRef(count) 1)]) (set! count SetBang11)) (void))) CellRef(count)))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, ''#(0.0 1.0 1.0 0.0 0.0 1.0 -0.5 -1.0 -1.0 -2.0 -2.5 -2.0 -1.5 -0.5 1.0 1.0 0.0 -0.5 -1.0 -0.5)')
debug_merge_point(0, 0, ''#(0.0 0.0 1.0 1.0 2.0 3.0 2.0 3.0 0.0 -0.5 -1.0 -1.5 -2.0 -2.0 -1.5 -1.0 -0.5 -1.0 -1.0 -0.5)')
debug_merge_point(0, 0, '(let ([if3 (pt-in-poly2 xp4901 yp4903 0.5 0.5)]) (if if3 (let ([SetBang0 (+ CellRef(count) 1)]) (set! count SetBang0)) (void)) (let ([if4 (pt-in-poly2 xp4901 yp4903 0.5 1.5)]) (if if4 (let ([SetBang1 (+ CellRef(count) 1)]) (set! count SetBang1)) (void))) (let ([if5 (pt-in-poly2 xp4901 yp4903 -0.5 1.5)]) (if if5 (let ([SetBang2 (+ CellRef(count) 1)]) (set! count SetBang2)) (void))) (let ([if6 (pt-in-poly2 xp4901 yp4903 0.75 2.25)]) (if if6 (let ([SetBang3 (+ CellRef(count) 1)]) (set! count SetBang3)) (void))) (let ([if7 (pt-in-poly2 xp4901 yp4903 0.0 2.01)]) (if if7 (let ([SetBang4 (+ CellRef(count) 1)]) (set! count SetBang4)) (void))) (let ([if8 (pt-in-poly2 xp4901 yp4903 -0.5 2.5)]) (if if8 (let ([SetBang5 (+ CellRef(count) 1)]) (set! count SetBang5)) (void))) (let ([if9 (pt-in-poly2 xp4901 yp4903 -1.0 -0.5)]) (if if9 (let ([SetBang6 (+ CellRef(count) 1)]) (set! count SetBang6)) (void))) (let ([if10 (pt-in-poly2 xp4901 yp4903 -1.5 0.5)]) (if if10 (let ([SetBang7 (+ CellRef(count) 1)]) (set! count SetBang7)) (void))) (let ([if11 (pt-in-poly2 xp4901 yp4903 -2.25 -1.0)]) (if if11 (let ([SetBang8 (+ CellRef(count) 1)]) (set! count SetBang8)) (void))) (let ([if12 (pt-in-poly2 xp4901 yp4903 0.5 -0.25)]) (if if12 (let ([SetBang9 (+ CellRef(count) 1)]) (set! count SetBang9)) (void))) (let ([if13 (pt-in-poly2 xp4901 yp4903 0.5 -1.25)]) (if if13 (let ([SetBang10 (+ CellRef(count) 1)]) (set! count SetBang10)) (void))) (let ([if14 (pt-in-poly2 xp4901 yp4903 -0.5 -2.5)]) (if if14 (let ([SetBang11 (+ CellRef(count) 1)]) (set! count SetBang11)) (void))) CellRef(count))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 0.5 0.5)')
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+393: p13 = getfield_gc_r(ConstPtr(ptr12), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+397: guard_class(p13, 16623624, descr=<Guard0x361e2a8>) [p0, p1]
+409: p15 = getfield_gc_r(ConstPtr(ptr12), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+413: f17 = getarrayitem_gc_f(p15, 19, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+421: i19 = float_gt(f17, 0.500000)
+436: guard_false(i19, descr=<Guard0x361e2f0>) [p0, p1]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+442: f21 = getarrayitem_gc_f(p15, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+447: i23 = float_ge(0.500000, f21)
+459: guard_true(i23, descr=<Guard0x361e338>) [p0, p1]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
debug_merge_point(0, 0, '(>= y AppRand3)')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+465: p24 = new_with_vtable(descr=<SizeDescr 40>)
+515: p25 = new_with_vtable(descr=<SizeDescr 40>)
+533: setfield_gc(p25, ConstPtr(ptr26), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+537: p27 = new_with_vtable(descr=<SizeDescr 16>)
+548: p28 = new_with_vtable(descr=<SizeDescr 16>)
+559: setfield_gc(p28, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+567: setfield_gc(p27, p28, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+571: setfield_gc(p25, p27, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+582: setfield_gc(p25, ConstPtr(ptr30), descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+586: setfield_gc(p25, ConstPtr(ptr31), descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+590: p32 = new_with_vtable(descr=<SizeDescr 40>)
+601: setfield_gc(p32, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+605: setfield_gc(p32, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+609: setfield_gc(p32, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+620: setfield_gc(p32, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+624: i34 = arraylen_gc(p15, descr=<ArrayF 8>)
+624: setfield_gc(p24, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+628: setfield_gc(p24, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+632: setfield_gc(p24, p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+643: setfield_gc(p24, ConstPtr(ptr35), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+675: jump(ConstPtr(ptr36), ConstPtr(ptr37), 18, ConstPtr(ptr39), p24, p3, ConstPtr(ptr40), 20, p15, ConstPtr(ptr42), 0.500000, 19, descr=TargetToken(55487648))
+784: --end of the loop--
[3e4c2490dd01746] jit-log-opt-loop}
[3e4c2490e0c5d9a] {jit-backend
[3e4c2490e135ba0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf
[3e4c2490e13da0a] jit-backend-dump}
[3e4c2490e1488e8] {jit-backend-addr
Loop 24 ((doloop4962 (add1 i4964)) from (void)) has address 0x7fbf984404dd to 0x7fbf98440720 (bootstrap 0x7fbf98440450)
       gc table: 0x7fbf98440390
       function: 0x7fbf98440450
         resops: 0x7fbf984404dd
       failures: 0x7fbf98440720
            end: 0x7fbf984408b5
[3e4c2490e14b713] jit-backend-addr}
[3e4c2490e150036] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984404f4 +0  57020000
[3e4c2490e1512af] jit-backend-dump}
[3e4c2490e154af3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440504 +0  63020000
[3e4c2490e155984] jit-backend-dump}
[3e4c2490e158e0e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844051a +0  69020000
[3e4c2490e159b45] jit-backend-dump}
[3e4c2490e15cda2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440528 +0  77020000
[3e4c2490e15da74] jit-backend-dump}
[3e4c2490e160be2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844053c +0  7F020000
[3e4c2490e1618fb] jit-backend-dump}
[3e4c2490e164ae0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440549 +0  8E020000
[3e4c2490e1657a0] jit-backend-dump}
[3e4c2490e16890e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844055c +0  97020000
[3e4c2490e1695f6] jit-backend-dump}
[3e4c2490e16c712] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440572 +0  9D020000
[3e4c2490e16d3e1] jit-backend-dump}
[3e4c2490e1706bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844057f +0  C8020000
[3e4c2490e171393] jit-backend-dump}
[3e4c2490e1745bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440597 +0  CC020000
[3e4c2490e1752cf] jit-backend-dump}
[3e4c2490e178471] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984405b9 +0  C6020000
[3e4c2490e179137] jit-backend-dump}
[3e4c2490e17c271] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984405d1 +0  C4020000
[3e4c2490e17cf34] jit-backend-dump}
[3e4c2490e180b42] jit-backend}
[3e4c2490e1848ef] {jit-log-opt-loop
# Loop 24 ((doloop4962 (add1 i4964)) from (void)) : entry bridge with 99 ops
[p0, p1]
debug_merge_point(0, 0, '(doloop4962 (add1 i4964)) from (void)')
+341: guard_class(p0, 16504944, descr=<Guard0x35eb400>) [p1, p0]
+360: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+364: guard_class(p3, 16499664, descr=<Guard0x361e380>) [p1, p0]
+376: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+380: guard_nonnull_class(p5, 16510992, descr=<Guard0x35eb460>) [p1, p0]
+398: i7 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+402: i9 = int_add_ovf(i7, 1)
+406: guard_no_overflow(descr=<Guard0x361e3c8>) [p1, p0]
+412: p10 = getfield_gc_r(p5, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+423: guard_value(p10, ConstPtr(ptr11), descr=<Guard0x361e410>) [p1, p0]
+432: p12 = getfield_gc_r(p5, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+436: i13 = instance_ptr_eq(p3, p12)
+439: guard_true(i13, descr=<Guard0x361e458>) [p1, p0]
debug_merge_point(0, 0, '(let ([if16 (> i4964 pnpoly-iters)]) (if if16 (begin (void) (void)) (begin (run) (doloop4962 (add1 i4964))))) from (doloop4962 (add1 i4964))')
+445: guard_class(p1, 16528368, descr=<Guard0x361e4a0>) [p1, p0]
+464: p15 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+468: guard_nonnull_class(p15, ConstClass(ForwardLink), descr=<Guard0x35eb4c0>) [p1, p0]
debug_merge_point(0, 0, '(> i4964 pnpoly-iters)')
+486: guard_not_invalidated(descr=<Guard0x361e4e8>) [p1, p0]
+486: i18 = int_gt(i9, 2000000)
+493: guard_false(i18, descr=<Guard0x361e530>) [p1, p0]
debug_merge_point(0, 0, '(if if16 (begin (void) (void)) (begin (run) (doloop4962 (add1 i4964))))')
debug_merge_point(0, 0, '(begin (run) (doloop4962 (add1 i4964)))')
debug_merge_point(0, 0, '(run)')
+499: p19 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([count 0][xp4901 '#(0.0 1.0 1.0 0.0 0.0 1.0 -0.5 -1.0 -1.0 -2.0 -2.5 -2.0 -1.5 -0.5 1.0 1.0 0.0 -0.5 -1.0 -0.5)][yp4903 '#(0.0 0.0 1.0 1.0 2.0 3.0 2.0 3.0 0.0 -0.5 -1.0 -1.5 -2.0 -2.0 -1.5 -1.0 -0.5 -1.0 -1.0 -0.5)]) (let ([if3 (pt-in-poly2 xp4901 yp4903 0.5 0.5)]) (if if3 (let ([SetBang0 (+ CellRef(count) 1)]) (set! count SetBang0)) (void)) (let ([if4 (pt-in-poly2 xp4901 yp4903 0.5 1.5)]) (if if4 (let ([SetBang1 (+ CellRef(count) 1)]) (set! count SetBang1)) (void))) (let ([if5 (pt-in-poly2 xp4901 yp4903 -0.5 1.5)]) (if if5 (let ([SetBang2 (+ CellRef(count) 1)]) (set! count SetBang2)) (void))) (let ([if6 (pt-in-poly2 xp4901 yp4903 0.75 2.25)]) (if if6 (let ([SetBang3 (+ CellRef(count) 1)]) (set! count SetBang3)) (void))) (let ([if7 (pt-in-poly2 xp4901 yp4903 0.0 2.01)]) (if if7 (let ([SetBang4 (+ CellRef(count) 1)]) (set! count SetBang4)) (void))) (let ([if8 (pt-in-poly2 xp4901 yp4903 -0.5 2.5)]) (if if8 (let ([SetBang5 (+ CellRef(count) 1)]) (set! count SetBang5)) (void))) (let ([if9 (pt-in-poly2 xp4901 yp4903 -1.0 -0.5)]) (if if9 (let ([SetBang6 (+ CellRef(count) 1)]) (set! count SetBang6)) (void))) (let ([if10 (pt-in-poly2 xp4901 yp4903 -1.5 0.5)]) (if if10 (let ([SetBang7 (+ CellRef(count) 1)]) (set! count SetBang7)) (void))) (let ([if11 (pt-in-poly2 xp4901 yp4903 -2.25 -1.0)]) (if if11 (let ([SetBang8 (+ CellRef(count) 1)]) (set! count SetBang8)) (void))) (let ([if12 (pt-in-poly2 xp4901 yp4903 0.5 -0.25)]) (if if12 (let ([SetBang9 (+ CellRef(count) 1)]) (set! count SetBang9)) (void))) (let ([if13 (pt-in-poly2 xp4901 yp4903 0.5 -1.25)]) (if if13 (let ([SetBang10 (+ CellRef(count) 1)]) (set! count SetBang10)) (void))) (let ([if14 (pt-in-poly2 xp4901 yp4903 -0.5 -2.5)]) (if if14 (let ([SetBang11 (+ CellRef(count) 1)]) (set! count SetBang11)) (void))) CellRef(count)))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, ''#(0.0 1.0 1.0 0.0 0.0 1.0 -0.5 -1.0 -1.0 -2.0 -2.5 -2.0 -1.5 -0.5 1.0 1.0 0.0 -0.5 -1.0 -0.5)')
debug_merge_point(0, 0, ''#(0.0 0.0 1.0 1.0 2.0 3.0 2.0 3.0 0.0 -0.5 -1.0 -1.5 -2.0 -2.0 -1.5 -1.0 -0.5 -1.0 -1.0 -0.5)')
debug_merge_point(0, 0, '(let ([if3 (pt-in-poly2 xp4901 yp4903 0.5 0.5)]) (if if3 (let ([SetBang0 (+ CellRef(count) 1)]) (set! count SetBang0)) (void)) (let ([if4 (pt-in-poly2 xp4901 yp4903 0.5 1.5)]) (if if4 (let ([SetBang1 (+ CellRef(count) 1)]) (set! count SetBang1)) (void))) (let ([if5 (pt-in-poly2 xp4901 yp4903 -0.5 1.5)]) (if if5 (let ([SetBang2 (+ CellRef(count) 1)]) (set! count SetBang2)) (void))) (let ([if6 (pt-in-poly2 xp4901 yp4903 0.75 2.25)]) (if if6 (let ([SetBang3 (+ CellRef(count) 1)]) (set! count SetBang3)) (void))) (let ([if7 (pt-in-poly2 xp4901 yp4903 0.0 2.01)]) (if if7 (let ([SetBang4 (+ CellRef(count) 1)]) (set! count SetBang4)) (void))) (let ([if8 (pt-in-poly2 xp4901 yp4903 -0.5 2.5)]) (if if8 (let ([SetBang5 (+ CellRef(count) 1)]) (set! count SetBang5)) (void))) (let ([if9 (pt-in-poly2 xp4901 yp4903 -1.0 -0.5)]) (if if9 (let ([SetBang6 (+ CellRef(count) 1)]) (set! count SetBang6)) (void))) (let ([if10 (pt-in-poly2 xp4901 yp4903 -1.5 0.5)]) (if if10 (let ([SetBang7 (+ CellRef(count) 1)]) (set! count SetBang7)) (void))) (let ([if11 (pt-in-poly2 xp4901 yp4903 -2.25 -1.0)]) (if if11 (let ([SetBang8 (+ CellRef(count) 1)]) (set! count SetBang8)) (void))) (let ([if12 (pt-in-poly2 xp4901 yp4903 0.5 -0.25)]) (if if12 (let ([SetBang9 (+ CellRef(count) 1)]) (set! count SetBang9)) (void))) (let ([if13 (pt-in-poly2 xp4901 yp4903 0.5 -1.25)]) (if if13 (let ([SetBang10 (+ CellRef(count) 1)]) (set! count SetBang10)) (void))) (let ([if14 (pt-in-poly2 xp4901 yp4903 -0.5 -2.5)]) (if if14 (let ([SetBang11 (+ CellRef(count) 1)]) (set! count SetBang11)) (void))) CellRef(count))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 0.5 0.5)')
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+506: p21 = getfield_gc_r(ConstPtr(ptr20), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+510: guard_class(p21, 16623624, descr=<Guard0x361e578>) [p1, p0]
+523: p23 = getfield_gc_r(ConstPtr(ptr20), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+527: f25 = getarrayitem_gc_f(p23, 19, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+536: i27 = float_gt(f25, 0.500000)
+551: guard_false(i27, descr=<Guard0x361e5c0>) [p1, p0]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+557: f29 = getarrayitem_gc_f(p23, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+563: i31 = float_ge(0.500000, f29)
+575: guard_true(i31, descr=<Guard0x361e608>) [p1, p0]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
debug_merge_point(0, 0, '(>= y AppRand3)')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+581: p32 = new_with_vtable(descr=<SizeDescr 40>)
+628: p33 = new_with_vtable(descr=<SizeDescr 40>)
+646: setfield_gc(p33, ConstPtr(ptr34), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+650: p35 = new_with_vtable(descr=<SizeDescr 16>)
+661: p36 = new_with_vtable(descr=<SizeDescr 16>)
+672: setfield_gc(p36, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+680: setfield_gc(p35, p36, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+684: setfield_gc(p33, p35, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+695: setfield_gc(p33, ConstPtr(ptr38), descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+699: setfield_gc(p33, ConstPtr(ptr39), descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+703: p40 = new_with_vtable(descr=<SizeDescr 40>)
+714: setfield_gc(p40, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+718: p41 = new_with_vtable(descr=<SizeDescr 24>)
+729: setfield_gc(p41, p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+733: setfield_gc(p41, i9, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+737: setfield_gc(p40, p41, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+741: setfield_gc(p40, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+752: setfield_gc(p40, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+756: i43 = arraylen_gc(p23, descr=<ArrayF 8>)
+756: setfield_gc(p32, p15, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+760: setfield_gc(p32, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+764: setfield_gc(p32, p40, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+775: setfield_gc(p32, ConstPtr(ptr44), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+807: jump(ConstPtr(ptr45), ConstPtr(ptr46), 18, ConstPtr(ptr48), p32, p15, ConstPtr(ptr49), 20, p23, ConstPtr(ptr51), 0.500000, 19, descr=TargetToken(55487648))
+912: --end of the loop--
[3e4c2490e1d2168] jit-log-opt-loop}
[3e4c2490e886be9] {jit-backend
[3e4c2490e919714] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440a
[3e4c2490e923e59] jit-backend-dump}
[3e4c2490e92f220] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440b94 +0  23000000
[3e4c2490e930700] jit-backend-dump}
[3e4c2490e934b1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440e85 +0  23000000
[3e4c2490e935a94] jit-backend-dump}
[3e4c2490e939096] {jit-backend-addr
bridge out of Guard 0x35edda8 has address 0x7fbf98440b90 to 0x7fbf98440e80
       gc table: 0x7fbf98440a70
    jump target: 0x7fbf98440b90
         resops: 0x7fbf98440b9e
       failures: 0x7fbf98440e80
            end: 0x7fbf98441141
[3e4c2490e93b5e4] jit-backend-addr}
[3e4c2490e93ed9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440bac +0  2F030000
[3e4c2490e93fba5] jit-backend-dump}
[3e4c2490e942f5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440bbf +0  38030000
[3e4c2490e943cba] jit-backend-dump}
[3e4c2490e946ee3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440bd3 +0  40030000
[3e4c2490e947bdd] jit-backend-dump}
[3e4c2490e94acff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440be7 +0  48030000
[3e4c2490e94b9e7] jit-backend-dump}
[3e4c2490e94ec56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440bf4 +0  57030000
[3e4c2490e94f92e] jit-backend-dump}
[3e4c2490e952baa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440c08 +0  5F030000
[3e4c2490e95388b] jit-backend-dump}
[3e4c2490e956ab7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440c1d +0  66030000
[3e4c2490e9577a5] jit-backend-dump}
[3e4c2490e95aade] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440c38 +0  67030000
[3e4c2490e95b7db] jit-backend-dump}
[3e4c2490e95e900] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440c45 +0  76030000
[3e4c2490e95f603] jit-backend-dump}
[3e4c2490e962774] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440c59 +0  7E030000
[3e4c2490e96345f] jit-backend-dump}
[3e4c2490e966593] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440c6e +0  85030000
[3e4c2490e96727b] jit-backend-dump}
[3e4c2490e96a3be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440c7f +0  90030000
[3e4c2490e96b0a3] jit-backend-dump}
[3e4c2490e96e1da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440c95 +0  96030000
[3e4c2490e96eeaf] jit-backend-dump}
[3e4c2490e971ff6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440ca3 +0  A4030000
[3e4c2490e972ccb] jit-backend-dump}
[3e4c2490e975e27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440cb7 +0  AC030000
[3e4c2490e976b05] jit-backend-dump}
[3e4c2490e979c40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440cc4 +0  BB030000
[3e4c2490e97a91b] jit-backend-dump}
[3e4c2490e97da77] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440cd0 +0  CB030000
[3e4c2490e97e755] jit-backend-dump}
[3e4c2490e9818d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440ce6 +0  D1030000
[3e4c2490e9825cd] jit-backend-dump}
[3e4c2490e985839] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440cf3 +0  E0030000
[3e4c2490e9864f0] jit-backend-dump}
[3e4c2490e9896d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440d0b +0  E4030000
[3e4c2490e98a389] jit-backend-dump}
[3e4c2490e98d5b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440d2d +0  DE030000
[3e4c2490e98e259] jit-backend-dump}
[3e4c2490e991384] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440d45 +0  DC030000
[3e4c2490e99202b] jit-backend-dump}
[3e4c2490e99543b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9843f823 +0  69130000
[3e4c2490e9960eb] jit-backend-dump}
[3e4c2490e99a296] jit-backend}
[3e4c2490e99dffe] {jit-log-opt-bridge
# bridge out of Guard 0x35edda8 with 128 ops
[i0, p1, p2, p3, p4, p5]
+310: guard_not_invalidated(descr=<Guard0x35eb520>) [i0, p1, p2, p3, p4, p5]
+310: i7 = int_lt(i0, 0)
+314: guard_true(i7, descr=<Guard0x361e650>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+320: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x35eb580>) [i0, p1, p2, p3, p4, p5]
+339: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+350: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x361e698>) [i0, p1, p2, p3, p4, p5]
+359: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+359: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if14 (let ([SetBang11 (+ CellRef(count) 1)]) (set! count SetBang11)) (void))')
+370: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+373: guard_true(i14, descr=<Guard0x361e6e0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(void)')
+379: guard_class(p12, 16435208, descr=<Guard0x361e728>) [i0, p1, p2, p3, p4, p5]
+392: p16 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+403: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x361e770>) [i0, p1, p2, p3, p4, p5]
+412: p18 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+416: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, 'CellRef(count)')
+420: guard_class(p18, 16500368, descr=<Guard0x361e7b8>) [i0, p1, p2, p3, p4, p5]
+433: p21 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+437: p22 = getfield_gc_r(p21, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+441: guard_nonnull_class(p22, ConstClass(W_CellIntegerStrategy), descr=<Guard0x35eb5e0>) [i0, p1, p2, p3, p4, p5]
+460: i24 = getfield_gc_i(p22, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+460: guard_class(p19, 16435208, descr=<Guard0x361e800>) [i0, p1, p2, p3, p4, p5]
+473: p26 = getfield_gc_r(p19, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+484: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x361e848>) [i0, p1, p2, p3, p4, p5]
+493: p28 = getfield_gc_r(p19, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+497: p29 = getfield_gc_r(p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4962 (add1 i4964)) from (void)')
+501: guard_class(p28, 16504944, descr=<Guard0x361e890>) [i0, p1, p2, p3, p4, p5]
+514: p31 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+518: guard_class(p31, 16499664, descr=<Guard0x361e8d8>) [i0, p1, p2, p3, p4, p5]
+531: p33 = getfield_gc_r(p31, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+535: guard_nonnull_class(p33, 16510992, descr=<Guard0x35eb640>) [i0, p1, p2, p3, p4, p5]
+553: i35 = getfield_gc_i(p28, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+557: i37 = int_add_ovf(i35, 1)
+561: guard_no_overflow(descr=<Guard0x361e920>) [i0, p1, p2, p3, p4, p5]
+567: p38 = getfield_gc_r(p33, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+578: guard_value(p38, ConstPtr(ptr39), descr=<Guard0x361e968>) [i0, p1, p2, p3, p4, p5]
+587: p40 = getfield_gc_r(p33, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+591: i41 = instance_ptr_eq(p31, p40)
+594: guard_true(i41, descr=<Guard0x361e9b0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if16 (> i4964 pnpoly-iters)]) (if if16 (begin (void) (void)) (begin (run) (doloop4962 (add1 i4964))))) from (doloop4962 (add1 i4964))')
+600: guard_class(p29, 16528368, descr=<Guard0x361e9f8>) [i0, p1, p2, p3, p4, p5]
+612: p43 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+616: guard_nonnull_class(p43, ConstClass(ForwardLink), descr=<Guard0x35eb6a0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(> i4964 pnpoly-iters)')
+634: i46 = int_gt(i37, 2000000)
+641: guard_false(i46, descr=<Guard0x361ea40>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if16 (begin (void) (void)) (begin (run) (doloop4962 (add1 i4964))))')
debug_merge_point(0, 0, '(begin (run) (doloop4962 (add1 i4964)))')
debug_merge_point(0, 0, '(run)')
+647: p47 = getfield_gc_r(p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([count 0][xp4901 '#(0.0 1.0 1.0 0.0 0.0 1.0 -0.5 -1.0 -1.0 -2.0 -2.5 -2.0 -1.5 -0.5 1.0 1.0 0.0 -0.5 -1.0 -0.5)][yp4903 '#(0.0 0.0 1.0 1.0 2.0 3.0 2.0 3.0 0.0 -0.5 -1.0 -1.5 -2.0 -2.0 -1.5 -1.0 -0.5 -1.0 -1.0 -0.5)]) (let ([if3 (pt-in-poly2 xp4901 yp4903 0.5 0.5)]) (if if3 (let ([SetBang0 (+ CellRef(count) 1)]) (set! count SetBang0)) (void)) (let ([if4 (pt-in-poly2 xp4901 yp4903 0.5 1.5)]) (if if4 (let ([SetBang1 (+ CellRef(count) 1)]) (set! count SetBang1)) (void))) (let ([if5 (pt-in-poly2 xp4901 yp4903 -0.5 1.5)]) (if if5 (let ([SetBang2 (+ CellRef(count) 1)]) (set! count SetBang2)) (void))) (let ([if6 (pt-in-poly2 xp4901 yp4903 0.75 2.25)]) (if if6 (let ([SetBang3 (+ CellRef(count) 1)]) (set! count SetBang3)) (void))) (let ([if7 (pt-in-poly2 xp4901 yp4903 0.0 2.01)]) (if if7 (let ([SetBang4 (+ CellRef(count) 1)]) (set! count SetBang4)) (void))) (let ([if8 (pt-in-poly2 xp4901 yp4903 -0.5 2.5)]) (if if8 (let ([SetBang5 (+ CellRef(count) 1)]) (set! count SetBang5)) (void))) (let ([if9 (pt-in-poly2 xp4901 yp4903 -1.0 -0.5)]) (if if9 (let ([SetBang6 (+ CellRef(count) 1)]) (set! count SetBang6)) (void))) (let ([if10 (pt-in-poly2 xp4901 yp4903 -1.5 0.5)]) (if if10 (let ([SetBang7 (+ CellRef(count) 1)]) (set! count SetBang7)) (void))) (let ([if11 (pt-in-poly2 xp4901 yp4903 -2.25 -1.0)]) (if if11 (let ([SetBang8 (+ CellRef(count) 1)]) (set! count SetBang8)) (void))) (let ([if12 (pt-in-poly2 xp4901 yp4903 0.5 -0.25)]) (if if12 (let ([SetBang9 (+ CellRef(count) 1)]) (set! count SetBang9)) (void))) (let ([if13 (pt-in-poly2 xp4901 yp4903 0.5 -1.25)]) (if if13 (let ([SetBang10 (+ CellRef(count) 1)]) (set! count SetBang10)) (void))) (let ([if14 (pt-in-poly2 xp4901 yp4903 -0.5 -2.5)]) (if if14 (let ([SetBang11 (+ CellRef(count) 1)]) (set! count SetBang11)) (void))) CellRef(count)))')
debug_merge_point(0, 0, '0')
debug_merge_point(0, 0, ''#(0.0 1.0 1.0 0.0 0.0 1.0 -0.5 -1.0 -1.0 -2.0 -2.5 -2.0 -1.5 -0.5 1.0 1.0 0.0 -0.5 -1.0 -0.5)')
debug_merge_point(0, 0, ''#(0.0 0.0 1.0 1.0 2.0 3.0 2.0 3.0 0.0 -0.5 -1.0 -1.5 -2.0 -2.0 -1.5 -1.0 -0.5 -1.0 -1.0 -0.5)')
debug_merge_point(0, 0, '(let ([if3 (pt-in-poly2 xp4901 yp4903 0.5 0.5)]) (if if3 (let ([SetBang0 (+ CellRef(count) 1)]) (set! count SetBang0)) (void)) (let ([if4 (pt-in-poly2 xp4901 yp4903 0.5 1.5)]) (if if4 (let ([SetBang1 (+ CellRef(count) 1)]) (set! count SetBang1)) (void))) (let ([if5 (pt-in-poly2 xp4901 yp4903 -0.5 1.5)]) (if if5 (let ([SetBang2 (+ CellRef(count) 1)]) (set! count SetBang2)) (void))) (let ([if6 (pt-in-poly2 xp4901 yp4903 0.75 2.25)]) (if if6 (let ([SetBang3 (+ CellRef(count) 1)]) (set! count SetBang3)) (void))) (let ([if7 (pt-in-poly2 xp4901 yp4903 0.0 2.01)]) (if if7 (let ([SetBang4 (+ CellRef(count) 1)]) (set! count SetBang4)) (void))) (let ([if8 (pt-in-poly2 xp4901 yp4903 -0.5 2.5)]) (if if8 (let ([SetBang5 (+ CellRef(count) 1)]) (set! count SetBang5)) (void))) (let ([if9 (pt-in-poly2 xp4901 yp4903 -1.0 -0.5)]) (if if9 (let ([SetBang6 (+ CellRef(count) 1)]) (set! count SetBang6)) (void))) (let ([if10 (pt-in-poly2 xp4901 yp4903 -1.5 0.5)]) (if if10 (let ([SetBang7 (+ CellRef(count) 1)]) (set! count SetBang7)) (void))) (let ([if11 (pt-in-poly2 xp4901 yp4903 -2.25 -1.0)]) (if if11 (let ([SetBang8 (+ CellRef(count) 1)]) (set! count SetBang8)) (void))) (let ([if12 (pt-in-poly2 xp4901 yp4903 0.5 -0.25)]) (if if12 (let ([SetBang9 (+ CellRef(count) 1)]) (set! count SetBang9)) (void))) (let ([if13 (pt-in-poly2 xp4901 yp4903 0.5 -1.25)]) (if if13 (let ([SetBang10 (+ CellRef(count) 1)]) (set! count SetBang10)) (void))) (let ([if14 (pt-in-poly2 xp4901 yp4903 -0.5 -2.5)]) (if if14 (let ([SetBang11 (+ CellRef(count) 1)]) (set! count SetBang11)) (void))) CellRef(count))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 0.5 0.5)')
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+654: p49 = getfield_gc_r(ConstPtr(ptr48), descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+658: guard_class(p49, 16623624, descr=<Guard0x361ea88>) [i0, p1, p2, p3, p4, p5]
+671: p51 = getfield_gc_r(ConstPtr(ptr48), descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+675: f53 = getarrayitem_gc_f(p51, 19, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+684: i55 = float_gt(f53, 0.500000)
+699: guard_false(i55, descr=<Guard0x361ead0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+705: f57 = getarrayitem_gc_f(p51, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+711: i59 = float_ge(0.500000, f57)
+723: guard_true(i59, descr=<Guard0x361eb18>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
debug_merge_point(0, 0, '(>= y AppRand3)')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+729: p60 = new_with_vtable(descr=<SizeDescr 40>)
+776: p61 = new_with_vtable(descr=<SizeDescr 40>)
+794: setfield_gc(p61, ConstPtr(ptr62), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+798: p63 = new_with_vtable(descr=<SizeDescr 16>)
+809: p64 = new_with_vtable(descr=<SizeDescr 16>)
+820: setfield_gc(p64, 0, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+828: setfield_gc(p63, p64, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+832: setfield_gc(p61, p63, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+843: setfield_gc(p61, ConstPtr(ptr66), descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+847: setfield_gc(p61, ConstPtr(ptr67), descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+851: p68 = new_with_vtable(descr=<SizeDescr 40>)
+862: setfield_gc(p68, p43, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+866: p69 = new_with_vtable(descr=<SizeDescr 24>)
+877: setfield_gc(p69, p31, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+881: setfield_gc(p69, i37, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+885: setfield_gc(p68, p69, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+889: setfield_gc(p68, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+893: setfield_gc(p68, ConstPtr(ptr70), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+897: i71 = arraylen_gc(p51, descr=<ArrayF 8>)
+904: setfield_gc(p60, ConstPtr(ptr72), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+908: setfield_gc(p60, p61, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+912: setfield_gc(p60, p68, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+916: setfield_gc(p60, p43, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+941: jump(ConstPtr(ptr73), ConstPtr(ptr74), 18, ConstPtr(ptr76), p60, p43, ConstPtr(ptr77), 20, p51, ConstPtr(ptr79), 0.500000, 19, descr=TargetToken(55487648))
+1040: --end of the loop--
[3e4c2490ea0bfb0] jit-log-opt-bridge}
[3e4c2490f22a7ac] {jit-backend
[3e4c2490f2aa3d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984412d0 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CA202000048FF0425302966034983FE000F8D000000004983FF01720741813F88AD02000F85000000004D8B65204C8B15FAFEFFFF4D39D40F85000000004D8B55104D8B651841813C24480E00000F85000000004D8B4C24084983F9017207418139900F00000F85000000004C8B05DCFEFFFF4D39C70F840000000041813AD00C01000F8500000000498B7A10488B77084883FE017206813EF08900000F8500000000488B7E084883C7010F80000000004D8B6A1848897E084983FD01720841817D00F08C00000F8500000000498B7A204883FF017206813FF08C00000F8500000000498B75084883EE010F80000000004883FE000F8C000000004C8B7F084C39FE0F8D000000004C8B771841813E48EE02000F85000000004C8B7710F2450F1074F61049BB60124498BF7F000066450F2E330F8700000000F2450F10761066450F2E73187B044883FD000F8700000000F2450F1074F61049BB90124498BF7F000066450F2E337B044883FD000F8700000000488D5EFF488B0C25F091F900488D9198000000483B14251092F9000F873901000048891425F091F90048C701A8B80000488D513848C70260140000488D421048C700101100004C898D500100004C8D482849C701480E00004C8985400100004C8B85500100004D8941084D8951104D8961184C8B25D3FDFFFF4D8961204C8B25D0FDFFFF4C8960204C8950104C8948184C8940084C8B0DC1FDFFFF4C8949084C8B0DBEFDFFFF4C8949104C8969184C8B2DB7FDFFFF4C896920488979284C8B2DB0FDFFFF4C8969304889720849BBFEFFFFFFFFFFFF7F4C39DE0F8F0000000048898D3001000048899548010000488985380100004C8985500100004889BD580100004D89F84D89F24C89AD600100004989DE49BBC8124498BF7F0000F2410F100B4D8D9BD849FFFF41FFE3660F1F84000000000048C7442408FFFFFF0049BB50114498BF7F00004C895D204D8D9BA031FFFF41FFD3E938FDFFFF49BBA8124498BF7F00004C895D204D8D9B4838FFFF41FFD3E9B2FEFFFFFF3527FCFFFF49BB60114498BF7F000041534D8D9BA02EFFFF41FFE3FF3513FCFFFF49BB70114498BF7F000041534D8D9B902EFFFF41FFE3FF35FFFBFFFF49BB80114498BF7F000041534D8D9B802EFFFF41FFE3FF35F3FBFFFF49BB90114498BF7F000041534D8D9B702EFFFF41FFE3FF35DFFBFFFF49BBA0114498BF7F000041534D8D9B602EFFFF41FFE3FF35CBFBFFFF49BBB0114498BF7F000041534D8D9B502EFFFF41FFE3FF35BFFBFFFF49BBC0114498BF7F000041534D8D9B402EFFFF41FFE3FF35ABFBFFFF49BBD0114498BF7F000041534D8D9B302EFFFF41FFE3FF3597FBFFFF49BBE0114498BF7F000041534D8D9B202EFFFF41FFE3FF3583FBFFFF49BBF0114498BF7F000041534D8D9B102EFFFF41FFE3FF356FFBFFFF49BB00124498BF7F000041534D8D9B002EFFFF41FFE3FF355BFBFFFF49BB10124498BF7F000041534D8D9BF02DFFFF41FFE3FF3547FBFFFF49BB20124498BF7F000041534D8D9BE02DFFFF41FFE3FF3533FBFFFF49BB30124498BF7F000041534D8D9BD02DFFFF41FFE3FF351FFBFFFF49BB40124498BF7F000041534D8D9BC02DFFFF41FFE3FF350BFBFFFF49BB50124498BF7F000041534D8D9BB02DFFFF41FFE3FF35F7FAFFFF4D8D5B0841534D8D9B982DFFFF41FFE3FF35E9FAFFFF49BB80124498BF7F000041534D8D9B802DFFFF41FFE3FF35D5FAFFFF49BB98124498BF7F000041534D8D9B682DFFFF41FFE3FF35F1FAFFFF49BBB8124498BF7F000041534D8D9B482DFFFF41FFE3
[3e4c2490f2b2d2c] jit-backend-dump}
[3e4c2490f2be4c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984413b4 +0  23000000
[3e4c2490f2bfa11] jit-backend-dump}
[3e4c2490f2c3986] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441665 +0  23000000
[3e4c2490f2c4a56] jit-backend-dump}
[3e4c2490f2c801b] {jit-backend-addr
bridge out of Guard 0x361e698 has address 0x7fbf984413b0 to 0x7fbf98441660
       gc table: 0x7fbf984412d0
    jump target: 0x7fbf984413b0
         resops: 0x7fbf984413be
       failures: 0x7fbf98441660
            end: 0x7fbf984418cd
[3e4c2490f2ca398] jit-backend-addr}
[3e4c2490f2cde6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984413cc +0  EF020000
[3e4c2490f2cecc7] jit-backend-dump}
[3e4c2490f2d2034] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984413df +0  F8020000
[3e4c2490f2d2d2b] jit-backend-dump}
[3e4c2490f2d5fc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984413f3 +0  00030000
[3e4c2490f2d6c60] jit-backend-dump}
[3e4c2490f2d9d5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441409 +0  06030000
[3e4c2490f2daa14] jit-backend-dump}
[3e4c2490f2ddbf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441421 +0  0A030000
[3e4c2490f2de8a4] jit-backend-dump}
[3e4c2490f2e1a71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441431 +0  16030000
[3e4c2490f2e2706] jit-backend-dump}
[3e4c2490f2e57de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844143e +0  25030000
[3e4c2490f2e6483] jit-backend-dump}
[3e4c2490f2e9546] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441458 +0  27030000
[3e4c2490f2ea1e7] jit-backend-dump}
[3e4c2490f2ed288] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441466 +0  35030000
[3e4c2490f2edf23] jit-backend-dump}
[3e4c2490f2f0fd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441482 +0  35030000
[3e4c2490f2f1c72] jit-backend-dump}
[3e4c2490f2f4d1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441498 +0  3B030000
[3e4c2490f2f59be] jit-backend-dump}
[3e4c2490f2f8a84] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984414a6 +0  49030000
[3e4c2490f2f9725] jit-backend-dump}
[3e4c2490f2fc7d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984414b0 +0  5B030000
[3e4c2490f2fd474] jit-backend-dump}
[3e4c2490f300565] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984414bd +0  6A030000
[3e4c2490f30123d] jit-backend-dump}
[3e4c2490f3042fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984414ce +0  75030000
[3e4c2490f304f89] jit-backend-dump}
[3e4c2490f30806b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984414ee +0  71030000
[3e4c2490f308d18] jit-backend-dump}
[3e4c2490f30bdf4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441506 +0  6F030000
[3e4c2490f30ca95] jit-backend-dump}
[3e4c2490f30fbcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441528 +0  69030000
[3e4c2490f31086a] jit-backend-dump}
[3e4c2490f31396a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441607 +0  A6020000
[3e4c2490f3145ff] jit-backend-dump}
[3e4c2490f317a0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98440bd3 +0  D9070000
[3e4c2490f31870f] jit-backend-dump}
[3e4c2490f31c9e3] jit-backend}
[3e4c2490f3206a5] {jit-log-opt-bridge
# bridge out of Guard 0x361e698 with 112 ops
[i0, p1, p2, p3, p4, p5]
+246: guard_not_invalidated(descr=<Guard0x35eb700>) [i0, p1, p2, p3, p4, p5]
+246: i7 = int_lt(i0, 0)
+250: guard_true(i7, descr=<Guard0x361eb60>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+256: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x35eb760>) [i0, p1, p2, p3, p4, p5]
+275: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+286: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x361eba8>) [i0, p1, p2, p3, p4, p5]
+295: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+299: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+303: guard_class(p12, 16435208, descr=<Guard0x361ebf0>) [i0, p1, p2, p3, p4, p5]
+317: p14 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+322: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x35eb7c0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if3 (let ([SetBang0 (+ CellRef(count) 1)]) (set! count SetBang0)) (void))')
+348: i17 = instance_ptr_eq(p2, ConstPtr(ptr16))
+351: guard_false(i17, descr=<Guard0x361ec38>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([SetBang0 (+ CellRef(count) 1)]) (set! count SetBang0))')
debug_merge_point(0, 0, '(+ CellRef(count) 1)')
+357: guard_class(p11, 16500368, descr=<Guard0x361ec80>) [i0, p1, p2, p3, p4, p5]
+370: p19 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+374: p20 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+378: guard_nonnull_class(p20, ConstClass(W_CellIntegerStrategy), descr=<Guard0x35eb820>) [i0, p1, p2, p3, p4, p5]
+396: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+400: i24 = int_add_ovf(i22, 1)
+404: guard_no_overflow(descr=<Guard0x361ecc8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(set! count SetBang0)')
debug_merge_point(0, 0, '(let ([if4 (pt-in-poly2 xp4901 yp4903 0.5 1.5)]) (if if4 (let ([SetBang1 (+ CellRef(count) 1)]) (set! count SetBang1)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 0.5 1.5)')
+410: p25 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+414: setfield_gc(p20, i24, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+418: guard_nonnull_class(p25, ConstClass(W_Vector), descr=<Guard0x35eb880>) [p11, p25, p12, p14, None, None, None, None, None, None]
+438: p28 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+442: guard_nonnull_class(p28, ConstClass(W_Vector), descr=<Guard0x35eb8e0>) [p11, p25, p12, p14, None, None, None, None, None, None]
+460: p30 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+460: i31 = getfield_gc_i(p25, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+464: i33 = int_sub_ovf(i31, 1)
+468: guard_no_overflow(descr=<Guard0x361ed10>) [p11, p25, p12, p14, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+474: i35 = int_lt(i33, 0)
+478: guard_false(i35, descr=<Guard0x361ed58>) [p11, p25, p12, p14, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+484: i36 = getfield_gc_i(p28, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+488: i37 = int_lt(i33, i36)
+491: guard_true(i37, descr=<Guard0x361eda0>) [p11, p25, p12, p14, None, None, None, None, None, None]
+497: p38 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+501: guard_class(p38, 16623624, descr=<Guard0x361ede8>) [p11, p25, p12, p14, None, None, None, None, None, None]
+514: p40 = getfield_gc_r(p28, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+518: f41 = getarrayitem_gc_f(p40, i33, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+525: i43 = float_gt(f41, 1.500000)
+540: guard_false(i43, descr=<Guard0x361ee30>) [p11, p25, p12, p14, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+546: f45 = getarrayitem_gc_f(p40, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+552: i47 = float_ge(1.500000, f45)
+564: guard_true(i47, descr=<Guard0x361ee78>) [p11, p25, p12, p14, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+570: f48 = getarrayitem_gc_f(p40, i33, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+577: i50 = float_ge(1.500000, f48)
+598: guard_true(i50, descr=<Guard0x361eec0>) [p11, p25, p12, p14, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+604: i52 = int_sub(i33, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+608: p53 = new_with_vtable(descr=<SizeDescr 56>)
+652: p54 = new_with_vtable(descr=<SizeDescr 16>)
+663: p55 = new_with_vtable(descr=<SizeDescr 40>)
+674: p56 = new_with_vtable(descr=<SizeDescr 40>)
+692: setfield_gc(p56, p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+710: setfield_gc(p56, p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+714: setfield_gc(p56, p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+725: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+729: i58 = arraylen_gc(p40, descr=<ArrayF 8>)
+736: setfield_gc(p55, ConstPtr(ptr59), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+740: setfield_gc(p55, p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+744: setfield_gc(p55, p56, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+748: setfield_gc(p55, p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+759: setfield_gc(p53, ConstPtr(ptr60), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+770: setfield_gc(p53, ConstPtr(ptr61), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+774: setfield_gc(p53, p25, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+785: setfield_gc(p53, ConstPtr(ptr62), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+789: setfield_gc(p53, p28, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+800: setfield_gc(p53, ConstPtr(ptr63), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+804: setfield_gc(p54, i33, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+808: i65 = int_le(i33, 9223372036854775806)
+821: guard_true(i65, descr=<Guard0x35eb940>) [p55, i52, p54, p53, None, None, None, None, None, None, None, None]
+827: jump(p53, ConstPtr(ptr66), i52, p54, p55, p14, p28, i36, p40, ConstPtr(ptr63), 1.500000, i33, descr=TargetToken(55487648))
+912: --end of the loop--
[3e4c2490f37d5b6] jit-log-opt-bridge}
[3e4c2490fabda93] {jit-backend
[3e4c2490fb3c3d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441a
[3e4c2490fb45f38] jit-backend-dump}
[3e4c2490fb518e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441b54 +0  23000000
[3e4c2490fb52e4f] jit-backend-dump}
[3e4c2490fb5adab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441df5 +0  23000000
[3e4c2490fb5be19] jit-backend-dump}
[3e4c2490fb5f70c] {jit-backend-addr
bridge out of Guard 0x361eba8 has address 0x7fbf98441b50 to 0x7fbf98441df0
       gc table: 0x7fbf98441a60
    jump target: 0x7fbf98441b50
         resops: 0x7fbf98441b5e
       failures: 0x7fbf98441df0
            end: 0x7fbf9844205d
[3e4c2490fb61b1e] jit-backend-addr}
[3e4c2490fb653cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441b6c +0  DF020000
[3e4c2490fb66242] jit-backend-dump}
[3e4c2490fb6961e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441b7f +0  E8020000
[3e4c2490fb6a358] jit-backend-dump}
[3e4c2490fb6d599] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441b93 +0  F0020000
[3e4c2490fb6e2d6] jit-backend-dump}
[3e4c2490fb71628] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441ba7 +0  F8020000
[3e4c2490fb72300] jit-backend-dump}
[3e4c2490fb755de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441bb4 +0  07030000
[3e4c2490fb762bf] jit-backend-dump}
[3e4c2490fb79421] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441bc8 +0  0F030000
[3e4c2490fb7a13a] jit-backend-dump}
[3e4c2490fb7d2d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441bdd +0  16030000
[3e4c2490fb7dfe2] jit-backend-dump}
[3e4c2490fb81141] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441bf4 +0  1B030000
[3e4c2490fb81e35] jit-backend-dump}
[3e4c2490fb84f7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441c01 +0  2A030000
[3e4c2490fb85c69] jit-backend-dump}
[3e4c2490fb88dc2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441c17 +0  30030000
[3e4c2490fb89aaa] jit-backend-dump}
[3e4c2490fb8cbaa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441c2d +0  36030000
[3e4c2490fb8d89b] jit-backend-dump}
[3e4c2490fb90a37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441c3b +0  44030000
[3e4c2490fb9175c] jit-backend-dump}
[3e4c2490fb948a5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441c45 +0  56030000
[3e4c2490fb955a8] jit-backend-dump}
[3e4c2490fb98707] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441c52 +0  65030000
[3e4c2490fb993e9] jit-backend-dump}
[3e4c2490fb9c54e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441c62 +0  71030000
[3e4c2490fb9d251] jit-backend-dump}
[3e4c2490fba0357] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441c82 +0  6D030000
[3e4c2490fba1042] jit-backend-dump}
[3e4c2490fba4145] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441c9a +0  6B030000
[3e4c2490fba4e30] jit-backend-dump}
[3e4c2490fba7f83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441cbc +0  65030000
[3e4c2490fba8c67] jit-backend-dump}
[3e4c2490fbabe1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441d95 +0  A8020000
[3e4c2490fbacb22] jit-backend-dump}
[3e4c2490fbafef4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984413f3 +0  59070000
[3e4c2490fbb0bf7] jit-backend-dump}
[3e4c2490fbb4e3e] jit-backend}
[3e4c2490fbb8c14] {jit-log-opt-bridge
# bridge out of Guard 0x361eba8 with 108 ops
[i0, p1, p2, p3, p4, p5]
+262: guard_not_invalidated(descr=<Guard0x35eb9a0>) [i0, p1, p2, p3, p4, p5]
+262: i7 = int_lt(i0, 0)
+266: guard_true(i7, descr=<Guard0x361ef08>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+272: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x35eba00>) [i0, p1, p2, p3, p4, p5]
+291: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+302: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x361ef50>) [i0, p1, p2, p3, p4, p5]
+311: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+311: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if4 (let ([SetBang1 (+ CellRef(count) 1)]) (set! count SetBang1)) (void))')
+322: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+325: guard_true(i14, descr=<Guard0x361ef98>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(void)')
+331: guard_class(p12, 16435208, descr=<Guard0x361efe0>) [i0, p1, p2, p3, p4, p5]
+344: p16 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+355: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x361f028>) [i0, p1, p2, p3, p4, p5]
+364: p18 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+368: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+372: guard_class(p19, 16435208, descr=<Guard0x361f070>) [i0, p1, p2, p3, p4, p5]
+385: p21 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+389: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x35eba60>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if5 (pt-in-poly2 xp4901 yp4903 -0.5 1.5)]) (if if5 (let ([SetBang2 (+ CellRef(count) 1)]) (set! count SetBang2)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 -0.5 1.5)')
+408: guard_class(p18, 16500368, descr=<Guard0x361f0b8>) [i0, p1, p2, p3, p4, p5]
+421: p24 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+425: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x35ebac0>) [i0, p1, p2, p3, p4, p5]
+443: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+447: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x35ebb20>) [i0, p1, p2, p3, p4, p5]
+465: p28 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+465: i29 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+469: i31 = int_sub_ovf(i29, 1)
+473: guard_no_overflow(descr=<Guard0x361f100>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+479: i33 = int_lt(i31, 0)
+483: guard_false(i33, descr=<Guard0x361f148>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+489: i34 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+493: i35 = int_lt(i31, i34)
+496: guard_true(i35, descr=<Guard0x361f190>) [i0, p1, p2, p3, p4, p5]
+502: p36 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+506: guard_class(p36, 16623624, descr=<Guard0x361f1d8>) [i0, p1, p2, p3, p4, p5]
+518: p38 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+522: f39 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+529: i41 = float_gt(f39, 1.500000)
+544: guard_false(i41, descr=<Guard0x361f220>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+550: f43 = getarrayitem_gc_f(p38, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+556: i45 = float_ge(1.500000, f43)
+568: guard_true(i45, descr=<Guard0x361f268>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+574: f46 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+581: i48 = float_ge(1.500000, f46)
+602: guard_true(i48, descr=<Guard0x361f2b0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+608: i50 = int_sub(i31, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+612: p51 = new_with_vtable(descr=<SizeDescr 56>)
+659: p52 = new_with_vtable(descr=<SizeDescr 16>)
+670: p53 = new_with_vtable(descr=<SizeDescr 40>)
+681: p54 = new_with_vtable(descr=<SizeDescr 40>)
+700: setfield_gc(p54, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+705: setfield_gc(p54, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+710: setfield_gc(p54, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+722: setfield_gc(p54, ConstPtr(ptr55), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+727: i56 = arraylen_gc(p38, descr=<ArrayF 8>)
+734: setfield_gc(p53, ConstPtr(ptr57), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+738: setfield_gc(p53, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+742: setfield_gc(p53, p54, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+746: setfield_gc(p53, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+757: setfield_gc(p51, ConstPtr(ptr58), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+768: setfield_gc(p51, ConstPtr(ptr59), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+772: setfield_gc(p51, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+783: setfield_gc(p51, ConstPtr(ptr60), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+787: setfield_gc(p51, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+798: setfield_gc(p51, ConstPtr(ptr61), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+802: setfield_gc(p52, i31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+806: i63 = int_le(i31, 9223372036854775806)
+819: guard_true(i63, descr=<Guard0x35ebb80>) [p53, i50, p52, p51, None, None, None, None, None, None]
+825: jump(p51, ConstPtr(ptr65), i50, p52, p53, p21, p26, i34, p38, ConstPtr(ptr61), 1.500000, i31, descr=TargetToken(55487648))
+912: --end of the loop--
[3e4c2490fc18922] jit-log-opt-bridge}
[3e4c24910399174] {jit-backend
[3e4c2491042327c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf
[3e4c2491042d102] jit-backend-dump}
[3e4c2491043881e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442344 +0  23000000
[3e4c24910439d6c] jit-backend-dump}
[3e4c2491043dee3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442635 +0  23000000
[3e4c2491043ed34] jit-backend-dump}
[3e4c249104422ec] {jit-backend-addr
bridge out of Guard 0x361ef50 has address 0x7fbf98442340 to 0x7fbf98442630
       gc table: 0x7fbf98442230
    jump target: 0x7fbf98442340
         resops: 0x7fbf9844234e
       failures: 0x7fbf98442630
            end: 0x7fbf9844290d
[3e4c2491044476d] jit-backend-addr}
[3e4c2491044815d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844235c +0  2F030000
[3e4c24910448f46] jit-backend-dump}
[3e4c2491044c585] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844236f +0  38030000
[3e4c2491044d2f3] jit-backend-dump}
[3e4c249104506e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442383 +0  40030000
[3e4c249104513d7] jit-backend-dump}
[3e4c2491045474e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844239b +0  44030000
[3e4c2491045543e] jit-backend-dump}
[3e4c24910458713] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984423a9 +0  52030000
[3e4c249104593c0] jit-backend-dump}
[3e4c2491045c663] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984423c1 +0  56030000
[3e4c2491045d31d] jit-backend-dump}
[3e4c24910460540] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984423ce +0  65030000
[3e4c249104611e7] jit-backend-dump}
[3e4c249104643e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984423e9 +0  66030000
[3e4c24910465083] jit-backend-dump}
[3e4c2491046827b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984423f7 +0  74030000
[3e4c24910468f2c] jit-backend-dump}
[3e4c2491046c0e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442410 +0  77030000
[3e4c2491046cd88] jit-backend-dump}
[3e4c2491046ff64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442427 +0  7C030000
[3e4c24910470c0f] jit-backend-dump}
[3e4c24910473e19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844243e +0  81030000
[3e4c24910474aba] jit-backend-dump}
[3e4c24910477c60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844244b +0  90030000
[3e4c249104788fb] jit-backend-dump}
[3e4c2491047ba72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442462 +0  95030000
[3e4c2491047c70d] jit-backend-dump}
[3e4c2491047f8b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442478 +0  9B030000
[3e4c2491048058b] jit-backend-dump}
[3e4c24910483746] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442486 +0  A9030000
[3e4c24910484402] jit-backend-dump}
[3e4c249104875dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442490 +0  BB030000
[3e4c24910488277] jit-backend-dump}
[3e4c2491048b484] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844249d +0  CA030000
[3e4c2491048c12c] jit-backend-dump}
[3e4c2491048f2ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984424ad +0  D6030000
[3e4c2491048ffa6] jit-backend-dump}
[3e4c2491049316d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984424cd +0  D2030000
[3e4c24910493e30] jit-backend-dump}
[3e4c24910497078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984424e5 +0  D0030000
[3e4c24910497d28] jit-backend-dump}
[3e4c2491049af29] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442507 +0  CA030000
[3e4c2491049bbe0] jit-backend-dump}
[3e4c2491049edcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984425db +0  12030000
[3e4c2491049fa6d] jit-backend-dump}
[3e4c249104a2f1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98441b93 +0  A9070000
[3e4c249104a3bea] jit-backend-dump}
[3e4c249104a7c7f] jit-backend}
[3e4c249104ab907] {jit-log-opt-bridge
# bridge out of Guard 0x361ef50 with 120 ops
[i0, p1, p2, p3, p4, p5]
+294: guard_not_invalidated(descr=<Guard0x35ebca0>) [i0, p1, p2, p3, p4, p5]
+294: i7 = int_lt(i0, 0)
+298: guard_true(i7, descr=<Guard0x361f2f8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+304: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x35ebd00>) [i0, p1, p2, p3, p4, p5]
+323: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+334: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x361f340>) [i0, p1, p2, p3, p4, p5]
+343: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+347: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if5 (let ([SetBang2 (+ CellRef(count) 1)]) (set! count SetBang2)) (void))')
+358: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+361: guard_false(i14, descr=<Guard0x361f388>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([SetBang2 (+ CellRef(count) 1)]) (set! count SetBang2))')
+367: guard_class(p12, 16435208, descr=<Guard0x361f3d0>) [i0, p1, p2, p3, p4, p5]
+381: p16 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+386: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x35ebd60>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(+ CellRef(count) 1)')
+405: guard_class(p11, 16500368, descr=<Guard0x361f418>) [i0, p1, p2, p3, p4, p5]
+418: p19 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+422: p20 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+426: guard_nonnull_class(p20, ConstClass(W_CellIntegerStrategy), descr=<Guard0x35ebdc0>) [i0, p1, p2, p3, p4, p5]
+445: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+449: i24 = int_add_ovf(i22, 1)
+453: guard_no_overflow(descr=<Guard0x361f460>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(set! count SetBang2)')
+459: p25 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+464: setfield_gc(p20, i24, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+475: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x35ebe20>) [p25, p12, None, None, None, None, None, None]
+484: p28 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+489: p29 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+494: guard_class(p29, 16435208, descr=<Guard0x361f4a8>) [p25, p12, None, None, None, None, None, None]
+507: p31 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+511: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x35ebe80>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if6 (pt-in-poly2 xp4901 yp4903 0.75 2.25)]) (if if6 (let ([SetBang3 (+ CellRef(count) 1)]) (set! count SetBang3)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 0.75 2.25)')
+530: guard_class(p28, 16500368, descr=<Guard0x361f4f0>) [p25, p12, None, None, None, None, None, None]
+543: p34 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+547: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x35ebee0>) [p25, p12, None, None, None, None, None, None]
+566: p36 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+570: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x35ebf40>) [p25, p12, None, None, None, None, None, None]
+588: p38 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+588: i39 = getfield_gc_i(p34, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+592: i41 = int_sub_ovf(i39, 1)
+596: guard_no_overflow(descr=<Guard0x361f538>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+602: i43 = int_lt(i41, 0)
+606: guard_false(i43, descr=<Guard0x361f580>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+612: i44 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+616: i45 = int_lt(i41, i44)
+619: guard_true(i45, descr=<Guard0x361f5c8>) [p25, p12, None, None, None, None, None, None]
+625: p46 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+629: guard_class(p46, 16623624, descr=<Guard0x361f610>) [p25, p12, None, None, None, None, None, None]
+641: p48 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+645: f49 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+652: i51 = float_gt(f49, 2.250000)
+667: guard_false(i51, descr=<Guard0x361f658>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+673: f53 = getarrayitem_gc_f(p48, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+679: i55 = float_ge(2.250000, f53)
+691: guard_true(i55, descr=<Guard0x361f6a0>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+697: f56 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+704: i58 = float_ge(2.250000, f56)
+725: guard_true(i58, descr=<Guard0x361f6e8>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+731: i60 = int_sub(i41, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+735: p61 = new_with_vtable(descr=<SizeDescr 56>)
+782: p62 = new_with_vtable(descr=<SizeDescr 16>)
+793: p63 = new_with_vtable(descr=<SizeDescr 40>)
+804: p64 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p64, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: setfield_gc(p64, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+830: setfield_gc(p64, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+841: setfield_gc(p64, ConstPtr(ptr65), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+845: i66 = arraylen_gc(p48, descr=<ArrayF 8>)
+852: setfield_gc(p63, ConstPtr(ptr67), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+856: setfield_gc(p63, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+860: setfield_gc(p63, p64, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+864: setfield_gc(p63, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+875: setfield_gc(p61, ConstPtr(ptr68), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+886: setfield_gc(p61, ConstPtr(ptr69), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+890: setfield_gc(p61, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+901: setfield_gc(p61, ConstPtr(ptr70), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+905: setfield_gc(p61, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+916: setfield_gc(p61, ConstPtr(ptr71), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+920: setfield_gc(p62, i41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+924: i73 = int_le(i41, 9223372036854775806)
+937: guard_true(i73, descr=<Guard0x35ebfa0>) [p63, i60, p62, p61, None, None, None, None, None, None]
+943: jump(p61, ConstPtr(ptr74), i60, p62, p63, p31, p36, i44, p48, ConstPtr(ptr71), 2.250000, i41, descr=TargetToken(55487648))
+1024: --end of the loop--
[3e4c24910515f3a] jit-log-opt-bridge}
[3e4c24910b3cef6] {jit-backend
[3e4c24910bbc414] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442aa
[3e4c24910bc56d8] jit-backend-dump}
[3e4c24910bd09cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442b94 +0  23000000
[3e4c24910bd20e8] jit-backend-dump}
[3e4c24910bd63d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442e35 +0  23000000
[3e4c24910bd72b7] jit-backend-dump}
[3e4c24910bda879] {jit-backend-addr
bridge out of Guard 0x361f340 has address 0x7fbf98442b90 to 0x7fbf98442e30
       gc table: 0x7fbf98442aa0
    jump target: 0x7fbf98442b90
         resops: 0x7fbf98442b9e
       failures: 0x7fbf98442e30
            end: 0x7fbf9844309d
[3e4c24910bdcd06] jit-backend-addr}
[3e4c24910be06de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442bac +0  DF020000
[3e4c24910be152b] jit-backend-dump}
[3e4c24910be4981] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442bbf +0  E8020000
[3e4c24910be56c7] jit-backend-dump}
[3e4c24910be8946] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442bd3 +0  F0020000
[3e4c24910be969e] jit-backend-dump}
[3e4c24910bec911] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442be7 +0  F8020000
[3e4c24910bed67f] jit-backend-dump}
[3e4c24910bf089c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442bf4 +0  07030000
[3e4c24910bf15c3] jit-backend-dump}
[3e4c24910bf481a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442c08 +0  0F030000
[3e4c24910bf550b] jit-backend-dump}
[3e4c24910bf87d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442c1d +0  16030000
[3e4c24910bf94e2] jit-backend-dump}
[3e4c24910bfc6e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442c34 +0  1B030000
[3e4c24910bfd411] jit-backend-dump}
[3e4c24910c00656] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442c41 +0  2A030000
[3e4c24910c0133a] jit-backend-dump}
[3e4c24910c045c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442c57 +0  30030000
[3e4c24910c052e7] jit-backend-dump}
[3e4c24910c0853a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442c6d +0  36030000
[3e4c24910c09237] jit-backend-dump}
[3e4c24910c0c473] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442c7b +0  44030000
[3e4c24910c0d18b] jit-backend-dump}
[3e4c24910c103e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442c85 +0  56030000
[3e4c24910c11110] jit-backend-dump}
[3e4c24910c14345] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442c92 +0  65030000
[3e4c24910c15082] jit-backend-dump}
[3e4c24910c182ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442ca2 +0  71030000
[3e4c24910c18fd6] jit-backend-dump}
[3e4c24910c1c224] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442cc2 +0  6D030000
[3e4c24910c1cf2d] jit-backend-dump}
[3e4c24910c20153] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442cda +0  6B030000
[3e4c24910c20e71] jit-backend-dump}
[3e4c24910c24127] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442cfc +0  65030000
[3e4c24910c24e55] jit-backend-dump}
[3e4c24910c28081] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442dd5 +0  A8020000
[3e4c24910c28daf] jit-backend-dump}
[3e4c24910c2c2a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442383 +0  09080000
[3e4c24910c2cfda] jit-backend-dump}
[3e4c24910c3126b] jit-backend}
[3e4c24910c350ef] {jit-log-opt-bridge
# bridge out of Guard 0x361f340 with 108 ops
[i0, p1, p2, p3, p4, p5]
+262: guard_not_invalidated(descr=<Guard0x36dc020>) [i0, p1, p2, p3, p4, p5]
+262: i7 = int_lt(i0, 0)
+266: guard_true(i7, descr=<Guard0x361f730>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+272: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x36dc080>) [i0, p1, p2, p3, p4, p5]
+291: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+302: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x361f778>) [i0, p1, p2, p3, p4, p5]
+311: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+311: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if6 (let ([SetBang3 (+ CellRef(count) 1)]) (set! count SetBang3)) (void))')
+322: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+325: guard_true(i14, descr=<Guard0x361f7c0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(void)')
+331: guard_class(p12, 16435208, descr=<Guard0x361f808>) [i0, p1, p2, p3, p4, p5]
+344: p16 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+355: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x361f850>) [i0, p1, p2, p3, p4, p5]
+364: p18 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+368: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+372: guard_class(p19, 16435208, descr=<Guard0x361f898>) [i0, p1, p2, p3, p4, p5]
+385: p21 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+389: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x36dc0e0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if7 (pt-in-poly2 xp4901 yp4903 0.0 2.01)]) (if if7 (let ([SetBang4 (+ CellRef(count) 1)]) (set! count SetBang4)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 0.0 2.01)')
+408: guard_class(p18, 16500368, descr=<Guard0x361f8e0>) [i0, p1, p2, p3, p4, p5]
+421: p24 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+425: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x36dc140>) [i0, p1, p2, p3, p4, p5]
+443: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+447: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x36dc1a0>) [i0, p1, p2, p3, p4, p5]
+465: p28 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+465: i29 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+469: i31 = int_sub_ovf(i29, 1)
+473: guard_no_overflow(descr=<Guard0x361f928>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+479: i33 = int_lt(i31, 0)
+483: guard_false(i33, descr=<Guard0x361f970>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+489: i34 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+493: i35 = int_lt(i31, i34)
+496: guard_true(i35, descr=<Guard0x361f9b8>) [i0, p1, p2, p3, p4, p5]
+502: p36 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+506: guard_class(p36, 16623624, descr=<Guard0x361fa00>) [i0, p1, p2, p3, p4, p5]
+518: p38 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+522: f39 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+529: i41 = float_gt(f39, 2.010000)
+544: guard_false(i41, descr=<Guard0x361fa48>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+550: f43 = getarrayitem_gc_f(p38, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+556: i45 = float_ge(2.010000, f43)
+568: guard_true(i45, descr=<Guard0x361fa90>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+574: f46 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+581: i48 = float_ge(2.010000, f46)
+602: guard_true(i48, descr=<Guard0x361fad8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+608: i50 = int_sub(i31, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+612: p51 = new_with_vtable(descr=<SizeDescr 56>)
+659: p52 = new_with_vtable(descr=<SizeDescr 16>)
+670: p53 = new_with_vtable(descr=<SizeDescr 40>)
+681: p54 = new_with_vtable(descr=<SizeDescr 40>)
+700: setfield_gc(p54, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+705: setfield_gc(p54, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+710: setfield_gc(p54, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+722: setfield_gc(p54, ConstPtr(ptr55), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+727: i56 = arraylen_gc(p38, descr=<ArrayF 8>)
+734: setfield_gc(p53, ConstPtr(ptr57), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+738: setfield_gc(p53, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+742: setfield_gc(p53, p54, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+746: setfield_gc(p53, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+757: setfield_gc(p51, ConstPtr(ptr58), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+768: setfield_gc(p51, ConstPtr(ptr59), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+772: setfield_gc(p51, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+783: setfield_gc(p51, ConstPtr(ptr60), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+787: setfield_gc(p51, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+798: setfield_gc(p51, ConstPtr(ptr61), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+802: setfield_gc(p52, i31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+806: i63 = int_le(i31, 9223372036854775806)
+819: guard_true(i63, descr=<Guard0x36dc200>) [p53, i50, p52, p51, None, None, None, None, None, None]
+825: jump(p51, ConstPtr(ptr65), i50, p52, p53, p21, p26, i34, p38, ConstPtr(ptr61), 2.010000, i31, descr=TargetToken(55487648))
+912: --end of the loop--
[3e4c24910c91059] jit-log-opt-bridge}
[3e4c2491125cccf] {jit-backend
[3e4c249112e7f06] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf
[3e4c249112f1803] jit-backend-dump}
[3e4c249112fcbdf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443384 +0  23000000
[3e4c249112fe073] jit-backend-dump}
[3e4c249113022f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443675 +0  23000000
[3e4c24911303197] jit-backend-dump}
[3e4c249113066a1] {jit-backend-addr
bridge out of Guard 0x361f778 has address 0x7fbf98443380 to 0x7fbf98443670
       gc table: 0x7fbf98443270
    jump target: 0x7fbf98443380
         resops: 0x7fbf9844338e
       failures: 0x7fbf98443670
            end: 0x7fbf9844394d
[3e4c24911308a92] jit-backend-addr}
[3e4c2491130c22b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844339c +0  2F030000
[3e4c2491130d054] jit-backend-dump}
[3e4c249113104bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984433af +0  38030000
[3e4c249113111d7] jit-backend-dump}
[3e4c2491131457e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984433c3 +0  40030000
[3e4c249113152a3] jit-backend-dump}
[3e4c24911318613] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984433db +0  44030000
[3e4c24911319316] jit-backend-dump}
[3e4c2491131c684] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984433e9 +0  52030000
[3e4c2491131d3b8] jit-backend-dump}
[3e4c24911320695] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443401 +0  56030000
[3e4c249113213b7] jit-backend-dump}
[3e4c2491132464b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844340e +0  65030000
[3e4c24911325348] jit-backend-dump}
[3e4c249113287a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443429 +0  66030000
[3e4c2491132949a] jit-backend-dump}
[3e4c2491132c6c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443437 +0  74030000
[3e4c2491132d3ba] jit-backend-dump}
[3e4c249113305e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443450 +0  77030000
[3e4c249113312c7] jit-backend-dump}
[3e4c24911334589] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443467 +0  7C030000
[3e4c2491133526e] jit-backend-dump}
[3e4c2491133847b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844347e +0  81030000
[3e4c2491133916f] jit-backend-dump}
[3e4c2491133c3b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844348b +0  90030000
[3e4c2491133d0cf] jit-backend-dump}
[3e4c24911340341] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984434a2 +0  95030000
[3e4c2491134106c] jit-backend-dump}
[3e4c24911344280] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984434b8 +0  9B030000
[3e4c24911344f89] jit-backend-dump}
[3e4c24911348294] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984434c6 +0  A9030000
[3e4c24911348f9a] jit-backend-dump}
[3e4c2491134c222] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984434d0 +0  BB030000
[3e4c2491134cf2e] jit-backend-dump}
[3e4c249113501aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984434dd +0  CA030000
[3e4c24911350e9a] jit-backend-dump}
[3e4c2491135415f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984434ed +0  D6030000
[3e4c24911354ea0] jit-backend-dump}
[3e4c24911358140] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844350d +0  D2030000
[3e4c24911358e43] jit-backend-dump}
[3e4c2491135c09d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443525 +0  D0030000
[3e4c2491135cda3] jit-backend-dump}
[3e4c2491136000f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443547 +0  CA030000
[3e4c24911360d0f] jit-backend-dump}
[3e4c24911363f91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844361b +0  12030000
[3e4c24911364c91] jit-backend-dump}
[3e4c249113681cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98442bd3 +0  A9070000
[3e4c24911368ec3] jit-backend-dump}
[3e4c2491136d0c4] jit-backend}
[3e4c24911370fe3] {jit-log-opt-bridge
# bridge out of Guard 0x361f778 with 120 ops
[i0, p1, p2, p3, p4, p5]
+294: guard_not_invalidated(descr=<Guard0x36dc260>) [i0, p1, p2, p3, p4, p5]
+294: i7 = int_lt(i0, 0)
+298: guard_true(i7, descr=<Guard0x361fb20>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+304: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x36dc2c0>) [i0, p1, p2, p3, p4, p5]
+323: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+334: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x361fb68>) [i0, p1, p2, p3, p4, p5]
+343: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+347: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if7 (let ([SetBang4 (+ CellRef(count) 1)]) (set! count SetBang4)) (void))')
+358: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+361: guard_false(i14, descr=<Guard0x361fbb0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([SetBang4 (+ CellRef(count) 1)]) (set! count SetBang4))')
+367: guard_class(p12, 16435208, descr=<Guard0x361fbf8>) [i0, p1, p2, p3, p4, p5]
+381: p16 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+386: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x36dc320>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(+ CellRef(count) 1)')
+405: guard_class(p11, 16500368, descr=<Guard0x361fc40>) [i0, p1, p2, p3, p4, p5]
+418: p19 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+422: p20 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+426: guard_nonnull_class(p20, ConstClass(W_CellIntegerStrategy), descr=<Guard0x36dc380>) [i0, p1, p2, p3, p4, p5]
+445: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+449: i24 = int_add_ovf(i22, 1)
+453: guard_no_overflow(descr=<Guard0x361fc88>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(set! count SetBang4)')
+459: p25 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+464: setfield_gc(p20, i24, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+475: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x36dc3e0>) [p25, p12, None, None, None, None, None, None]
+484: p28 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+489: p29 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+494: guard_class(p29, 16435208, descr=<Guard0x361fcd0>) [p25, p12, None, None, None, None, None, None]
+507: p31 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+511: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x36dc440>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if8 (pt-in-poly2 xp4901 yp4903 -0.5 2.5)]) (if if8 (let ([SetBang5 (+ CellRef(count) 1)]) (set! count SetBang5)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 -0.5 2.5)')
+530: guard_class(p28, 16500368, descr=<Guard0x361fd18>) [p25, p12, None, None, None, None, None, None]
+543: p34 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+547: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x36dc4a0>) [p25, p12, None, None, None, None, None, None]
+566: p36 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+570: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x36dc500>) [p25, p12, None, None, None, None, None, None]
+588: p38 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+588: i39 = getfield_gc_i(p34, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+592: i41 = int_sub_ovf(i39, 1)
+596: guard_no_overflow(descr=<Guard0x361fd60>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+602: i43 = int_lt(i41, 0)
+606: guard_false(i43, descr=<Guard0x361fda8>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+612: i44 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+616: i45 = int_lt(i41, i44)
+619: guard_true(i45, descr=<Guard0x361fdf0>) [p25, p12, None, None, None, None, None, None]
+625: p46 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+629: guard_class(p46, 16623624, descr=<Guard0x361fe38>) [p25, p12, None, None, None, None, None, None]
+641: p48 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+645: f49 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+652: i51 = float_gt(f49, 2.500000)
+667: guard_false(i51, descr=<Guard0x361fe80>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+673: f53 = getarrayitem_gc_f(p48, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+679: i55 = float_ge(2.500000, f53)
+691: guard_true(i55, descr=<Guard0x361fec8>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+697: f56 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+704: i58 = float_ge(2.500000, f56)
+725: guard_true(i58, descr=<Guard0x361ff10>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+731: i60 = int_sub(i41, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+735: p61 = new_with_vtable(descr=<SizeDescr 56>)
+782: p62 = new_with_vtable(descr=<SizeDescr 16>)
+793: p63 = new_with_vtable(descr=<SizeDescr 40>)
+804: p64 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p64, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: setfield_gc(p64, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+830: setfield_gc(p64, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+841: setfield_gc(p64, ConstPtr(ptr65), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+845: i66 = arraylen_gc(p48, descr=<ArrayF 8>)
+852: setfield_gc(p63, ConstPtr(ptr67), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+856: setfield_gc(p63, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+860: setfield_gc(p63, p64, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+864: setfield_gc(p63, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+875: setfield_gc(p61, ConstPtr(ptr68), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+886: setfield_gc(p61, ConstPtr(ptr69), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+890: setfield_gc(p61, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+901: setfield_gc(p61, ConstPtr(ptr70), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+905: setfield_gc(p61, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+916: setfield_gc(p61, ConstPtr(ptr71), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+920: setfield_gc(p62, i41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+924: i73 = int_le(i41, 9223372036854775806)
+937: guard_true(i73, descr=<Guard0x36dc560>) [p63, i60, p62, p61, None, None, None, None, None, None]
+943: jump(p61, ConstPtr(ptr74), i60, p62, p63, p31, p36, i44, p48, ConstPtr(ptr71), 2.500000, i41, descr=TargetToken(55487648))
+1024: --end of the loop--
[3e4c249113d4ee0] jit-log-opt-bridge}
[3e4c24911bbd48e] {jit-backend
[3e4c24911c649ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443ba
[3e4c24911c6f822] jit-backend-dump}
[3e4c24911c7b2d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443ce4 +0  23000000
[3e4c24911c7c7a7] jit-backend-dump}
[3e4c24911c80e85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444085 +0  23000000
[3e4c24911c81e3f] jit-backend-dump}
[3e4c24911c8539b] {jit-backend-addr
bridge out of Guard 0x361fb68 has address 0x7fbf98443ce0 to 0x7fbf98444080
       gc table: 0x7fbf98443ba0
    jump target: 0x7fbf98443ce0
         resops: 0x7fbf98443cee
       failures: 0x7fbf98444080
            end: 0x7fbf984443dd
[3e4c24911c877d6] jit-backend-addr}
[3e4c24911c8b066] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443cfc +0  DF030000
[3e4c24911c8bec0] jit-backend-dump}
[3e4c24911c8f325] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443d0f +0  E8030000
[3e4c24911c90037] jit-backend-dump}
[3e4c24911c933a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443d23 +0  F0030000
[3e4c24911c940c0] jit-backend-dump}
[3e4c24911c97458] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443d37 +0  F8030000
[3e4c24911c98170] jit-backend-dump}
[3e4c24911c9b4ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443d44 +0  07040000
[3e4c24911c9c1da] jit-backend-dump}
[3e4c24911c9f51d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443d58 +0  0F040000
[3e4c24911ca0229] jit-backend-dump}
[3e4c24911ca3500] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443d6e +0  15040000
[3e4c24911ca41fd] jit-backend-dump}
[3e4c24911ca74b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443d86 +0  19040000
[3e4c24911ca8185] jit-backend-dump}
[3e4c24911cab48d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443d93 +0  28040000
[3e4c24911cac150] jit-backend-dump}
[3e4c24911caf412] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443daa +0  2D040000
[3e4c24911cb00ea] jit-backend-dump}
[3e4c24911cb3408] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443dc0 +0  33040000
[3e4c24911cb40ce] jit-backend-dump}
[3e4c24911cb7346] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443dd1 +0  3E040000
[3e4c24911cb8012] jit-backend-dump}
[3e4c24911cbb2e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443ddb +0  50040000
[3e4c24911cbbfce] jit-backend-dump}
[3e4c24911cbf256] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443de8 +0  5F040000
[3e4c24911cbff1f] jit-backend-dump}
[3e4c24911cc32c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443df8 +0  6B040000
[3e4c24911cc3fd5] jit-backend-dump}
[3e4c24911cc72f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443e18 +0  67040000
[3e4c24911cc7fd7] jit-backend-dump}
[3e4c24911ccb2b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443e30 +0  65040000
[3e4c24911ccbf87] jit-backend-dump}
[3e4c24911ccf240] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443e39 +0  78040000
[3e4c24911ccff0f] jit-backend-dump}
[3e4c24911cd31dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443e49 +0  84040000
[3e4c24911cd3e96] jit-backend-dump}
[3e4c24911cd70de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443ea4 +0  45040000
[3e4c24911cd7db6] jit-backend-dump}
[3e4c24911cdb03e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443ec9 +0  3C040000
[3e4c24911cdbcfe] jit-backend-dump}
[3e4c24911cdefd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443ed7 +0  4A040000
[3e4c24911cdfcb6] jit-backend-dump}
[3e4c24911ce2eef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443ee0 +0  5D040000
[3e4c24911ce3ba8] jit-backend-dump}
[3e4c24911ce6e21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443efc +0  5D040000
[3e4c24911ce7af3] jit-backend-dump}
[3e4c24911cead25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443f15 +0  5A040000
[3e4c24911ceb9fd] jit-backend-dump}
[3e4c24911ceec82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443f31 +0  5A040000
[3e4c24911cef95a] jit-backend-dump}
[3e4c24911cf2bee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443f4a +0  57040000
[3e4c24911cf38ae] jit-backend-dump}
[3e4c24911cf6bad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444017 +0  A6030000
[3e4c24911cf7882] jit-backend-dump}
[3e4c24911cfadab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984433c3 +0  19090000
[3e4c24911cfba7a] jit-backend-dump}
[3e4c24911cffe5b] jit-backend}
[3e4c24911d03dec] {jit-log-opt-bridge
# bridge out of Guard 0x361fb68 with 183 ops
[i0, p1, p2, p3, p4, p5]
+342: guard_not_invalidated(descr=<Guard0x36dc5c0>) [i0, p1, p2, p3, p4, p5]
+342: i7 = int_lt(i0, 0)
+346: guard_true(i7, descr=<Guard0x361ff58>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+352: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x36dc620>) [i0, p1, p2, p3, p4, p5]
+371: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+382: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x361ffa0>) [i0, p1, p2, p3, p4, p5]
+391: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+391: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if8 (let ([SetBang5 (+ CellRef(count) 1)]) (set! count SetBang5)) (void))')
+402: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+405: guard_true(i14, descr=<Guard0x36e6020>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(void)')
+411: guard_class(p12, 16435208, descr=<Guard0x36e6068>) [i0, p1, p2, p3, p4, p5]
+424: p16 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+435: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x36e60b0>) [i0, p1, p2, p3, p4, p5]
+444: p18 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+448: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+452: guard_class(p19, 16435208, descr=<Guard0x36e60f8>) [i0, p1, p2, p3, p4, p5]
+466: p21 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+471: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x36dc680>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if9 (pt-in-poly2 xp4901 yp4903 -1.0 -0.5)]) (if if9 (let ([SetBang6 (+ CellRef(count) 1)]) (set! count SetBang6)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 -1.0 -0.5)')
+490: guard_class(p18, 16500368, descr=<Guard0x36e6140>) [i0, p1, p2, p3, p4, p5]
+503: p24 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+507: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x36dc6e0>) [i0, p1, p2, p3, p4, p5]
+526: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+530: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x36dc740>) [i0, p1, p2, p3, p4, p5]
+548: p28 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+548: i29 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+552: i31 = int_sub_ovf(i29, 1)
+559: guard_no_overflow(descr=<Guard0x36e6188>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+565: i33 = int_lt(i31, 0)
+569: guard_false(i33, descr=<Guard0x36e61d0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+575: i34 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+579: i35 = int_lt(i31, i34)
+582: guard_true(i35, descr=<Guard0x36e6218>) [i0, p1, p2, p3, p4, p5]
+588: p36 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+592: guard_class(p36, 16623624, descr=<Guard0x36e6260>) [i0, p1, p2, p3, p4, p5]
+604: p38 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+608: f39 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+615: i41 = float_gt(f39, -0.500000)
+630: guard_false(i41, descr=<Guard0x36e62a8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+636: f43 = getarrayitem_gc_f(p38, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+642: i45 = float_ge(-0.500000, f43)
+654: guard_false(i45, descr=<Guard0x36e62f0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '#f')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, '(let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))))')
debug_merge_point(0, 0, '(vector-ref xp i)')
+660: i46 = int_lt(i31, i29)
+663: guard_true(i46, descr=<Guard0x36e6338>) [i0, p1, p2, p3, p4, p5]
+669: p47 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+673: guard_class(p47, 16623624, descr=<Guard0x36e6380>) [i0, p1, p2, p3, p4, p5]
+685: p49 = getfield_gc_r(p24, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+689: f50 = getarrayitem_gc_f(p49, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp j)')
+696: f51 = getarrayitem_gc_f(p49, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(vector-ref xp i)')
+702: f52 = getarrayitem_gc_f(p49, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))')
debug_merge_point(0, 0, '(- AppRand5 AppRand6)')
+709: f53 = float_sub(f51, f52)
debug_merge_point(0, 0, '(vector-ref yp i)')
+714: f54 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))))')
debug_merge_point(0, 0, '(- y AppRand8)')
+721: f56 = float_sub(-0.500000, f54)
debug_merge_point(0, 0, '(let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))')
debug_merge_point(0, 0, '(* AppRand7 AppRand9)')
+741: f57 = float_mul(f53, f56)
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(vector-ref yp i)')
+746: f58 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))))')
debug_merge_point(0, 0, '(- AppRand11 AppRand12)')
+753: f59 = float_sub(f43, f58)
debug_merge_point(0, 0, '(let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))')
debug_merge_point(0, 0, '(/ AppRand10 AppRand13)')
+758: i61 = float_eq(f59, 0.000000)
+770: guard_false(i61, descr=<Guard0x36e63c8>) [i0, p1, p2, p3, p4, p5]
+776: f62 = float_truediv(f57, f59)
debug_merge_point(0, 0, '(let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15))')
debug_merge_point(0, 0, '(+ AppRand4 AppRand14)')
+781: f63 = float_add(f50, f62)
debug_merge_point(0, 0, '(>= x AppRand15)')
+786: i65 = float_ge(-1.000000, f63)
+807: guard_false(i65, descr=<Guard0x36e6410>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))')
debug_merge_point(0, 0, '(- i 1)')
+813: i67 = int_sub(i31, 1)
debug_merge_point(0, 0, '(loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop (not c) AppRand17 i)')
debug_merge_point(0, 0, '(< i 0)')
+817: i69 = int_lt(i67, 0)
+821: guard_false(i69, descr=<Guard0x36e6458>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+827: i70 = int_lt(i67, i34)
+830: guard_true(i70, descr=<Guard0x36e64a0>) [i0, p1, p2, p3, p4, p5]
+836: f71 = getarrayitem_gc_f(p38, i67, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+843: i73 = float_gt(f71, -0.500000)
+858: guard_false(i73, descr=<Guard0x36e64e8>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+864: f74 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+871: i76 = float_ge(-0.500000, f74)
+883: guard_true(i76, descr=<Guard0x36e6530>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+889: f77 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+896: i79 = float_gt(f77, -0.500000)
+911: guard_false(i79, descr=<Guard0x36e6578>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+917: f80 = getarrayitem_gc_f(p38, i67, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+924: i82 = float_ge(-0.500000, f80)
+936: guard_true(i82, descr=<Guard0x36e65c0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+942: i84 = int_sub(i67, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+946: p85 = new_with_vtable(descr=<SizeDescr 56>)
+993: p86 = new_with_vtable(descr=<SizeDescr 16>)
+1004: p87 = new_with_vtable(descr=<SizeDescr 40>)
+1015: p88 = new_with_vtable(descr=<SizeDescr 40>)
+1026: setfield_gc(p88, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1030: setfield_gc(p88, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1034: setfield_gc(p88, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1045: setfield_gc(p88, ConstPtr(ptr89), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+1049: i90 = arraylen_gc(p38, descr=<ArrayF 8>)
+1056: setfield_gc(p87, ConstPtr(ptr91), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+1060: setfield_gc(p87, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+1064: setfield_gc(p87, p88, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+1068: setfield_gc(p87, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+1079: setfield_gc(p85, ConstPtr(ptr92), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1090: setfield_gc(p85, ConstPtr(ptr93), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+1094: setfield_gc(p85, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+1105: setfield_gc(p85, ConstPtr(ptr94), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+1109: setfield_gc(p85, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+1120: setfield_gc(p85, ConstPtr(ptr95), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+1124: setfield_gc(p86, i67, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+1128: i97 = int_le(i67, 9223372036854775806)
+1141: guard_true(i97, descr=<Guard0x36dc7a0>) [p87, i84, p86, p85, None, None, None, None, None, None]
+1154: jump(p85, ConstPtr(ptr99), i84, p86, p87, p21, p26, i34, p38, ConstPtr(ptr95), -0.500000, i67, descr=TargetToken(55487648))
+1248: --end of the loop--
[3e4c24911d8d99d] jit-log-opt-bridge}
[3e4c2491222bd6a] {jit-backend
[3e4c249122b306c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984445b
[3e4c249122bccef] jit-backend-dump}
[3e4c249122c801a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984446c4 +0  23000000
[3e4c249122c9506] jit-backend-dump}
[3e4c249122cd772] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984449b5 +0  23000000
[3e4c249122ce5b6] jit-backend-dump}
[3e4c249122d1ab4] {jit-backend-addr
bridge out of Guard 0x361ffa0 has address 0x7fbf984446c0 to 0x7fbf984449b0
       gc table: 0x7fbf984445b0
    jump target: 0x7fbf984446c0
         resops: 0x7fbf984446ce
       failures: 0x7fbf984449b0
            end: 0x7fbf98444c8d
[3e4c249122d40cf] jit-backend-addr}
[3e4c249122d7827] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984446dc +0  2F030000
[3e4c249122d8675] jit-backend-dump}
[3e4c249122dbc2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984446ef +0  38030000
[3e4c249122dc98f] jit-backend-dump}
[3e4c249122dfe4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444703 +0  40030000
[3e4c249122e0b28] jit-backend-dump}
[3e4c249122e3eb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844471b +0  44030000
[3e4c249122e4b4f] jit-backend-dump}
[3e4c249122eb0ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444729 +0  52030000
[3e4c249122ebf26] jit-backend-dump}
[3e4c249122efb83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444741 +0  56030000
[3e4c249122f090a] jit-backend-dump}
[3e4c249122f3cfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844474e +0  65030000
[3e4c249122f4a66] jit-backend-dump}
[3e4c249122f7eb2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444769 +0  66030000
[3e4c249122f8bb5] jit-backend-dump}
[3e4c249122fbf78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444777 +0  74030000
[3e4c249122fcc53] jit-backend-dump}
[3e4c249122ffec6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444790 +0  77030000
[3e4c24912300b6d] jit-backend-dump}
[3e4c24912303dd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984447a7 +0  7C030000
[3e4c24912304a65] jit-backend-dump}
[3e4c24912307c97] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984447be +0  81030000
[3e4c24912308938] jit-backend-dump}
[3e4c2491230bbf7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984447cb +0  90030000
[3e4c2491230c898] jit-backend-dump}
[3e4c2491230fb7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984447e2 +0  95030000
[3e4c2491231082f] jit-backend-dump}
[3e4c24912313b0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf984447f8 +0  9B030000
[3e4c249123147b1] jit-backend-dump}
[3e4c249123179e6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444806 +0  A9030000
[3e4c24912318697] jit-backend-dump}
[3e4c2491231b8e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444810 +0  BB030000
[3e4c2491231c58f] jit-backend-dump}
[3e4c2491231f875] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844481d +0  CA030000
[3e4c24912320526] jit-backend-dump}
[3e4c249123237db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844482d +0  D6030000
[3e4c24912324483] jit-backend-dump}
[3e4c24912327720] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844484d +0  D2030000
[3e4c249123283ca] jit-backend-dump}
[3e4c2491232b692] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444865 +0  D0030000
[3e4c2491232c361] jit-backend-dump}
[3e4c2491232f5f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444887 +0  CA030000
[3e4c249123302a3] jit-backend-dump}
[3e4c24912333540] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844495b +0  12030000
[3e4c249123341e7] jit-backend-dump}
[3e4c2491233778a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98443d23 +0  99090000
[3e4c249123384a6] jit-backend-dump}
[3e4c2491233c7f7] jit-backend}
[3e4c24912340659] {jit-log-opt-bridge
# bridge out of Guard 0x361ffa0 with 120 ops
[i0, p1, p2, p3, p4, p5]
+294: guard_not_invalidated(descr=<Guard0x36dc800>) [i0, p1, p2, p3, p4, p5]
+294: i7 = int_lt(i0, 0)
+298: guard_true(i7, descr=<Guard0x36e6608>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+304: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x36dc860>) [i0, p1, p2, p3, p4, p5]
+323: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+334: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x36e6650>) [i0, p1, p2, p3, p4, p5]
+343: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+347: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if9 (let ([SetBang6 (+ CellRef(count) 1)]) (set! count SetBang6)) (void))')
+358: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+361: guard_false(i14, descr=<Guard0x36e6698>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([SetBang6 (+ CellRef(count) 1)]) (set! count SetBang6))')
+367: guard_class(p12, 16435208, descr=<Guard0x36e66e0>) [i0, p1, p2, p3, p4, p5]
+381: p16 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+386: guard_nonnull_class(p16, ConstClass(ForwardLink), descr=<Guard0x36dc8c0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(+ CellRef(count) 1)')
+405: guard_class(p11, 16500368, descr=<Guard0x36e6728>) [i0, p1, p2, p3, p4, p5]
+418: p19 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_0 16 pure>)
+422: p20 = getfield_gc_r(p19, descr=<FieldP pycket.values.W_Cell.inst_w_value 8>)
+426: guard_nonnull_class(p20, ConstClass(W_CellIntegerStrategy), descr=<Guard0x36dc920>) [i0, p1, p2, p3, p4, p5]
+445: i22 = getfield_gc_i(p20, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+449: i24 = int_add_ovf(i22, 1)
+453: guard_no_overflow(descr=<Guard0x36e6770>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(set! count SetBang6)')
+459: p25 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+464: setfield_gc(p20, i24, descr=<FieldS pycket.values.W_CellIntegerStrategy.inst_value 8>)
+475: guard_value(p25, ConstPtr(ptr26), descr=<Guard0x36dc980>) [p25, p12, None, None, None, None, None, None]
+484: p28 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+489: p29 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+494: guard_class(p29, 16435208, descr=<Guard0x36e67b8>) [p25, p12, None, None, None, None, None, None]
+507: p31 = getfield_gc_r(p29, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+511: guard_nonnull_class(p31, ConstClass(ForwardLink), descr=<Guard0x36dc9e0>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if10 (pt-in-poly2 xp4901 yp4903 -1.5 0.5)]) (if if10 (let ([SetBang7 (+ CellRef(count) 1)]) (set! count SetBang7)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 -1.5 0.5)')
+530: guard_class(p28, 16500368, descr=<Guard0x36e6800>) [p25, p12, None, None, None, None, None, None]
+543: p34 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+547: guard_nonnull_class(p34, ConstClass(W_Vector), descr=<Guard0x36dca40>) [p25, p12, None, None, None, None, None, None]
+566: p36 = getfield_gc_r(p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+570: guard_nonnull_class(p36, ConstClass(W_Vector), descr=<Guard0x36dcaa0>) [p25, p12, None, None, None, None, None, None]
+588: p38 = getfield_gc_r(p28, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+588: i39 = getfield_gc_i(p34, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+592: i41 = int_sub_ovf(i39, 1)
+596: guard_no_overflow(descr=<Guard0x36e6848>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+602: i43 = int_lt(i41, 0)
+606: guard_false(i43, descr=<Guard0x36e6890>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+612: i44 = getfield_gc_i(p36, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+616: i45 = int_lt(i41, i44)
+619: guard_true(i45, descr=<Guard0x36e68d8>) [p25, p12, None, None, None, None, None, None]
+625: p46 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+629: guard_class(p46, 16623624, descr=<Guard0x36e6920>) [p25, p12, None, None, None, None, None, None]
+641: p48 = getfield_gc_r(p36, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+645: f49 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+652: i51 = float_gt(f49, 0.500000)
+667: guard_false(i51, descr=<Guard0x36e6968>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, '(let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+673: f53 = getarrayitem_gc_f(p48, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand1)')
+679: i55 = float_ge(0.500000, f53)
+691: guard_true(i55, descr=<Guard0x36e69b0>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, '(let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+697: f56 = getarrayitem_gc_f(p48, i41, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(>= y AppRand3)')
+704: i58 = float_ge(0.500000, f56)
+725: guard_true(i58, descr=<Guard0x36e69f8>) [p25, p12, None, None, None, None, None, None]
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+731: i60 = int_sub(i41, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+735: p61 = new_with_vtable(descr=<SizeDescr 56>)
+782: p62 = new_with_vtable(descr=<SizeDescr 16>)
+793: p63 = new_with_vtable(descr=<SizeDescr 40>)
+804: p64 = new_with_vtable(descr=<SizeDescr 40>)
+822: setfield_gc(p64, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+826: setfield_gc(p64, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+830: setfield_gc(p64, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+841: setfield_gc(p64, ConstPtr(ptr65), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+845: i66 = arraylen_gc(p48, descr=<ArrayF 8>)
+852: setfield_gc(p63, ConstPtr(ptr67), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+856: setfield_gc(p63, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+860: setfield_gc(p63, p64, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+864: setfield_gc(p63, p31, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+875: setfield_gc(p61, ConstPtr(ptr68), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+886: setfield_gc(p61, ConstPtr(ptr69), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+890: setfield_gc(p61, p34, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+901: setfield_gc(p61, ConstPtr(ptr70), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+905: setfield_gc(p61, p36, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+916: setfield_gc(p61, ConstPtr(ptr71), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+920: setfield_gc(p62, i41, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+924: i73 = int_le(i41, 9223372036854775806)
+937: guard_true(i73, descr=<Guard0x36dcb00>) [p63, i60, p62, p61, None, None, None, None, None, None]
+943: jump(p61, ConstPtr(ptr74), i60, p62, p63, p31, p36, i44, p48, ConstPtr(ptr71), 0.500000, i41, descr=TargetToken(55487648))
+1024: --end of the loop--
[3e4c249123a358a] jit-log-opt-bridge}
[3e4c249127050cd] {jit-backend
[3e4c24912786004] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444e10 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C6202000048FF0425A00D67034983FE000F8D000000004983FF01720741813F88AD02000F85000000004D8B65204C8B15FAFEFFFF4D39D40F85000000004D8B55184C8B25F6FEFFFF4D39E70F850000000041813A480E00000F85000000004D8B4A204C8B05EDFEFFFF4D39C10F85000000004D8B42104D8B4A18418139480E00000F85000000004D8B51084983FA01720741813A900F00000F8500000000418138D00C01000F8500000000498B78184883FF017206813FF08C00000F8500000000498B70204883FE017206813EF08C00000F8500000000488B5F084883EB010F80000000004883FB000F8C00000000488B56084839D30F8D00000000488B4618813848EE02000F8500000000488B4610F2440F1074D81049BBB04D4498BF7F000066450F2E330F8600000000F2440F10701066450F2E73180F86000000004C8D6BFF4989D7488B0C25F091F900488D9198000000483B14251092F9000F872A01000048891425F091F90048C701A8B80000488D513848C702601400004C8D721049C706101100004C89A5400100004D8D662849C70424480E00004D895424084D894424104D894C24184C8B0D0EFEFFFF4D894C24204C8B0D0AFEFFFF4D894E204D8946104D8966184D8956084C8B25FBFDFFFF4C8961084C8B25F8FDFFFF4C89611048897918488B3DF1FDFFFF4889792048897128488B3DEAFDFFFF4889793048895A0849BBFEFFFFFFFFFFFF7F4C39DB0F8F0000000048898D30010000488995480100004C89B5380100004C8995500100004889B5580100004D89F84989C24889BD600100004889DE4D89EE49BB004E4498BF7F0000F2410F100B4D8D9BA00EFFFF41FFE348C7442408FFFFFF0049BBA04C4498BF7F00004C895D204D8D9B50F6FEFF41FFD3E978FDFFFF4D8D5B304C895D204D8D9B10FDFEFF41FFD349BBB04D4498BF7F0000E9BDFEFFFFFF3563FCFFFF49BBB04C4498BF7F000041534D8D9B50F3FEFF41FFE3FF354FFCFFFF49BBC04C4498BF7F000041534D8D9B40F3FEFF41FFE3FF353BFCFFFF49BBD04C4498BF7F000041534D8D9B30F3FEFF41FFE3FF352FFCFFFF49BBE04C4498BF7F000041534D8D9B20F3FEFF41FFE3FF3523FCFFFF49BBF04C4498BF7F000041534D8D9B10F3FEFF41FFE3FF350FFCFFFF49BB004D4498BF7F000041534D8D9B00F3FEFF41FFE3FF3503FCFFFF49BB104D4498BF7F000041534D8D9BF0F2FEFF41FFE3FF35EFFBFFFF49BB204D4498BF7F000041534D8D9BE0F2FEFF41FFE3FF35DBFBFFFF49BB304D4498BF7F000041534D8D9BD0F2FEFF41FFE3FF35C7FBFFFF49BB404D4498BF7F000041534D8D9BC0F2FEFF41FFE3FF35B3FBFFFF49BB504D4498BF7F000041534D8D9BB0F2FEFF41FFE3FF359FFBFFFF49BB604D4498BF7F000041534D8D9BA0F2FEFF41FFE3FF358BFBFFFF49BB704D4498BF7F000041534D8D9B90F2FEFF41FFE3FF3577FBFFFF49BB804D4498BF7F000041534D8D9B80F2FEFF41FFE3FF3563FBFFFF49BB904D4498BF7F000041534D8D9B70F2FEFF41FFE3FF354FFBFFFF49BBA04D4498BF7F000041534D8D9B60F2FEFF41FFE3FF353BFBFFFF4D8D5B0841534D8D9B48F2FEFF41FFE3FF352DFBFFFF4D8D5B2041534D8D9B30F2FEFF41FFE3FF354FFBFFFF49BBF04D4498BF7F000041534D8D9B10F2FEFF41FFE3
[3e4c2491278f6ff] jit-backend-dump}
[3e4c2491279aa67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444ef4 +0  23000000
[3e4c2491279c01a] jit-backend-dump}
[3e4c249127a00ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98445165 +0  23000000
[3e4c249127a117f] jit-backend-dump}
[3e4c249127a4712] {jit-backend-addr
bridge out of Guard 0x36e6650 has address 0x7fbf98444ef0 to 0x7fbf98445160
       gc table: 0x7fbf98444e10
    jump target: 0x7fbf98444ef0
         resops: 0x7fbf98444efe
       failures: 0x7fbf98445160
            end: 0x7fbf984453af
[3e4c249127a69db] jit-backend-addr}
[3e4c249127aa1db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444f0c +0  B3020000
[3e4c249127aaffe] jit-backend-dump}
[3e4c249127ae5de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444f1f +0  BC020000
[3e4c249127af2d5] jit-backend-dump}
[3e4c249127b26aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444f33 +0  C4020000
[3e4c249127b33b6] jit-backend-dump}
[3e4c249127b6782] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444f47 +0  CC020000
[3e4c249127b749b] jit-backend-dump}
[3e4c249127ba80e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444f54 +0  DB020000
[3e4c249127bb4ff] jit-backend-dump}
[3e4c249127be7f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444f68 +0  E3020000
[3e4c249127bf4dc] jit-backend-dump}
[3e4c249127c2780] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444f7d +0  EA020000
[3e4c249127c3464] jit-backend-dump}
[3e4c249127c673e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444f94 +0  EF020000
[3e4c249127c7429] jit-backend-dump}
[3e4c249127ca6e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444fa1 +0  FE020000
[3e4c249127cb400] jit-backend-dump}
[3e4c249127ce6f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444fb7 +0  04030000
[3e4c249127cf3ea] jit-backend-dump}
[3e4c249127d26a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444fcd +0  0A030000
[3e4c249127d33af] jit-backend-dump}
[3e4c249127d6643] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444fdb +0  18030000
[3e4c249127d7340] jit-backend-dump}
[3e4c249127dd7f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444fe5 +0  2A030000
[3e4c249127de7db] jit-backend-dump}
[3e4c249127e26d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444ff2 +0  39030000
[3e4c249127e347b] jit-backend-dump}
[3e4c249127e6982] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98445002 +0  45030000
[3e4c249127e7718] jit-backend-dump}
[3e4c249127eab86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98445022 +0  41030000
[3e4c249127eb8b7] jit-backend-dump}
[3e4c249127eece2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98445034 +0  45030000
[3e4c249127efa8d] jit-backend-dump}
[3e4c249127f2e2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf9844510d +0  82020000
[3e4c249127f3b62] jit-backend-dump}
[3e4c249127f71cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7fbf98444703 +0  E9070000
[3e4c249127f7f03] jit-backend-dump}
[3e4c249127fc1ff] jit-backend}
[3e4c249128001af] {jit-log-opt-bridge
# bridge out of Guard 0x36e6650 with 101 ops
[i0, p1, p2, p3, p4, p5]
+246: guard_not_invalidated(descr=<Guard0x36dcb60>) [i0, p1, p2, p3, p4, p5]
+246: i7 = int_lt(i0, 0)
+250: guard_true(i7, descr=<Guard0x36e6a40>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, 'c')
+256: guard_nonnull_class(p2, ConstClass(W_Bool), descr=<Guard0x36dcbc0>) [i0, p1, p2, p3, p4, p5]
+275: p9 = getfield_gc_r(p4, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+286: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x36e6a88>) [i0, p1, p2, p3, p4, p5]
+295: p11 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+295: p12 = getfield_gc_r(p4, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(if if10 (let ([SetBang7 (+ CellRef(count) 1)]) (set! count SetBang7)) (void))')
+306: i14 = instance_ptr_eq(p2, ConstPtr(ptr13))
+309: guard_true(i14, descr=<Guard0x36e6ad0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(void)')
+315: guard_class(p12, 16435208, descr=<Guard0x36e6b18>) [i0, p1, p2, p3, p4, p5]
+328: p16 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+339: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x36e6b60>) [i0, p1, p2, p3, p4, p5]
+348: p18 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+352: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+356: guard_class(p19, 16435208, descr=<Guard0x36e6ba8>) [i0, p1, p2, p3, p4, p5]
+369: p21 = getfield_gc_r(p19, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+373: guard_nonnull_class(p21, ConstClass(ForwardLink), descr=<Guard0x36dcc20>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if11 (pt-in-poly2 xp4901 yp4903 -2.25 -1.0)]) (if if11 (let ([SetBang8 (+ CellRef(count) 1)]) (set! count SetBang8)) (void)))')
debug_merge_point(0, 0, '(pt-in-poly2 xp4901 yp4903 -2.25 -1.0)')
+392: guard_class(p18, 16500368, descr=<Guard0x36e6bf0>) [i0, p1, p2, p3, p4, p5]
+405: p24 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_1 24 pure>)
+409: guard_nonnull_class(p24, ConstClass(W_Vector), descr=<Guard0x36dcc80>) [i0, p1, p2, p3, p4, p5]
+427: p26 = getfield_gc_r(p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize3.inst__vals_2 32 pure>)
+431: guard_nonnull_class(p26, ConstClass(W_Vector), descr=<Guard0x36dcce0>) [i0, p1, p2, p3, p4, p5]
+449: p28 = getfield_gc_r(p18, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([loop (lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))][AppRand18 (- (vector-length xp) 1)]) (loop #f AppRand18 0))')
debug_merge_point(0, 0, '(lambda (c i j) (let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))))')
debug_merge_point(0, 0, '(- (vector-length xp) 1)')
+449: i29 = getfield_gc_i(p24, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+453: i31 = int_sub_ovf(i29, 1)
+457: guard_no_overflow(descr=<Guard0x36e6c38>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(loop #f AppRand18 0)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop #f AppRand18 0)')
debug_merge_point(0, 0, '(< i 0)')
+463: i33 = int_lt(i31, 0)
+467: guard_false(i33, descr=<Guard0x36e6c80>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))')
debug_merge_point(0, 0, '(let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))))')
debug_merge_point(0, 0, '(vector-ref yp i)')
+473: i34 = getfield_gc_i(p26, descr=<FieldS pycket.vector.W_Vector.inst_len 8 pure>)
+477: i35 = int_lt(i31, i34)
+480: guard_true(i35, descr=<Guard0x36e6cc8>) [i0, p1, p2, p3, p4, p5]
+486: p36 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_strategy 24>)
+490: guard_class(p36, 16623624, descr=<Guard0x36e6d10>) [i0, p1, p2, p3, p4, p5]
+502: p38 = getfield_gc_r(p26, descr=<FieldP pycket.vector.W_Vector.inst_storage 16>)
+506: f39 = getarrayitem_gc_f(p38, i31, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))')
debug_merge_point(0, 0, '(> AppRand0 y)')
+513: i41 = float_gt(f39, -1.000000)
+528: guard_true(i41, descr=<Guard0x36e6d58>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))))')
debug_merge_point(0, 0, '(if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))')
debug_merge_point(0, 0, 'or-part4854')
debug_merge_point(0, 0, '(let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))')
debug_merge_point(0, 0, '(if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)')
debug_merge_point(0, 0, '(let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))))')
debug_merge_point(0, 0, '(vector-ref yp j)')
+534: f43 = getarrayitem_gc_f(p38, 0, descr=<ArrayF 8>)
debug_merge_point(0, 0, '(let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))')
debug_merge_point(0, 0, '(> AppRand2 y)')
+540: i45 = float_gt(f43, -1.000000)
+546: guard_true(i45, descr=<Guard0x36e6da0>) [i0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3)))')
debug_merge_point(0, 0, 'or-part4864')
debug_merge_point(0, 0, '(let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i))))')
debug_merge_point(0, 0, '(if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))')
debug_merge_point(0, 0, 'or-part')
debug_merge_point(0, 0, '(if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))')
debug_merge_point(0, 0, '(let ([AppRand16 (- i 1)]) (loop c AppRand16 i))')
debug_merge_point(0, 0, '(- i 1)')
+552: i47 = int_sub(i31, 1)
debug_merge_point(0, 0, '(loop c AppRand16 i)')
debug_merge_point(0, 0, '(let ([if0 (< i 0)]) (if if0 c (let ([AppRand0 (vector-ref yp i)]) (let ([or-part4854 (> AppRand0 y)]) (let ([if1 (if or-part4854 or-part4854 (let ([AppRand1 (vector-ref yp j)]) (>= y AppRand1)))]) (let ([or-part (if if1 (let ([AppRand2 (vector-ref yp j)]) (let ([or-part4864 (> AppRand2 y)]) (if or-part4864 or-part4864 (let ([AppRand3 (vector-ref yp i)]) (>= y AppRand3))))) #f)]) (let ([if2 (if or-part or-part (let ([AppRand4 (vector-ref xp i)][AppRand5 (vector-ref xp j)][AppRand6 (vector-ref xp i)]) (let ([AppRand7 (- AppRand5 AppRand6)][AppRand8 (vector-ref yp i)]) (let ([AppRand9 (- y AppRand8)]) (let ([AppRand10 (* AppRand7 AppRand9)][AppRand11 (vector-ref yp j)][AppRand12 (vector-ref yp i)]) (let ([AppRand13 (- AppRand11 AppRand12)]) (let ([AppRand14 (/ AppRand10 AppRand13)]) (let ([AppRand15 (+ AppRand4 AppRand14)]) (>= x AppRand15)))))))))]) (if if2 (let ([AppRand16 (- i 1)]) (loop c AppRand16 i)) (let ([AppRand17 (- i 1)]) (loop (not c) AppRand17 i)))))))))) from (loop c AppRand16 i)')
+556: p48 = new_with_vtable(descr=<SizeDescr 56>)
+603: p49 = new_with_vtable(descr=<SizeDescr 16>)
+614: p50 = new_with_vtable(descr=<SizeDescr 40>)
+625: p51 = new_with_vtable(descr=<SizeDescr 40>)
+644: setfield_gc(p51, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+649: setfield_gc(p51, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+654: setfield_gc(p51, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+666: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+671: i53 = arraylen_gc(p38, descr=<ArrayF 8>)
+678: setfield_gc(p50, ConstPtr(ptr54), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+682: setfield_gc(p50, p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+686: setfield_gc(p50, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+690: setfield_gc(p50, p21, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+701: setfield_gc(p48, ConstPtr(ptr55), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+712: setfield_gc(p48, ConstPtr(ptr56), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+716: setfield_gc(p48, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_0 24 pure>)
+727: setfield_gc(p48, ConstPtr(ptr57), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_1 32 pure>)
+731: setfield_gc(p48, p26, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_2 40 pure>)
+742: setfield_gc(p48, ConstPtr(ptr58), descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize4.inst__vals_3 48 pure>)
+746: setfield_gc(p49, i31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+750: i60 = int_le(i31, 9223372036854775806)
+763: guard_true(i60, descr=<Guard0x36dcd40>) [p50, i47, p49, p48, None, None, None, None, None, None]
+769: jump(p48, ConstPtr(ptr62), i47, p49, p50, p21, p26, i34, p38, ConstPtr(ptr58), -1.000000, i31, descr=TargetToken(55487648))
+848: --end of the loop--
[3e4c2491285a257] jit-log-opt-bridge}
[3e4c265da402a70] {jit-summary
Tracing:      	31	0.053725
Backend:      	31	0.013402
TOTAL:      		47.748850
ops:             	106373
recorded ops:    	16657
  calls:         	0
guards:          	4231
opt ops:         	4372
opt guards:      	960
opt guards shared:	730
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	79
nvholes:         	1
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	5
Total # of bridges:	26
Freed # of loops:	0
Freed # of bridges:	0
[3e4c265da410568] jit-summary}
[3e4c265da41adf1] {jit-backend-counts
entry 1:551
TargetToken(55487568):551
TargetToken(55487648):4559999287
bridge 55614600:273
bridge 55615104:2559999510
bridge 55614960:239999920
bridge 55615176:299999892
bridge 56108336:219999872
entry 7:346
entry 8:3309
bridge 56111864:119999871
bridge 56107544:7
bridge 56110856:59999921
bridge 56113520:660
bridge 56377376:99999841
bridge 56112728:28
bridge 56113736:401
bridge 56112512:13
bridge 56108696:219999243
bridge 56380904:19999924
bridge 56380688:19999924
bridge 56544168:199998821
entry 23:5
entry 24:40
bridge 56548776:179998479
bridge 56747672:159998255
bridge 56748968:139998130
bridge 56749904:119998103
bridge 56750912:99998174
bridge 56751992:79998343
bridge 56753000:59998610
bridge 56754080:39998975
bridge 57566800:19999438
[3e4c265da422b26] jit-backend-counts}
