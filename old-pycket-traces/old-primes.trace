[3e4c097ea4a97bf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59751000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c097ea4bc444] jit-backend-dump}
[3e4c097ea501f19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597510b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c097ea504df9] jit-backend-dump}
[3e4c097ea5122dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59751180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c097ea513f68] jit-backend-dump}
[3e4c097ea51b05b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597511f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4c097ea51c988] jit-backend-dump}
[3e4c097ea525872] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59751270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4c097ea52720d] jit-backend-dump}
[3e4c097ea5311cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597512f
[3e4c097ea534fd7] jit-backend-dump}
[3e4c097ea53a518] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097ea53c8ea] jit-backend-dump}
[3e4c097ea5415bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097ea543a0b] jit-backend-dump}
[3e4c097ea5f9a9b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097ea5fc6e9] jit-backend-dump}
[3e4c097ea602c85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597518f
[3e4c097ea6052cb] jit-backend-dump}
[3e4c097ea60a2e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59751a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4c097ea60babb] jit-backend-dump}
[3e4c097ea620192] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59751af0 +0  4889455848895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC084829CA4889D741BB60F0730041FFD3488B0C258893F900488B69F8F64504010F85EA0000004883C4084885C00F84CC0000004889C1488B4558488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B52801000048C7452000000000C34883C40849BB701A75591C7F000041FFE349BB701275591C7F000041FFD3E904FFFFFF
[3e4c097ea623394] jit-backend-dump}
[3e4c097ea62b03f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59751ce
[3e4c097ea62e048] jit-backend-dump}
[3e4c097ea636000] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59751ee
[3e4c097ea6390a7] jit-backend-dump}
[3e4c097ea63efa5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597520d
[3e4c097ea641c1b] jit-backend-dump}
[3e4c097ea64baaf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597522c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB701275591C7F000041FFD3E99CFFFFFF
[3e4c097ea64d7a3] jit-backend-dump}
[3e4c097ea652bac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB701275591C7F000041FFD3E9BCFFFFFF
[3e4c097ea6543b3] jit-backend-dump}
[3e4c097ea659879] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097ea65c35b] jit-backend-dump}
[3e4c097ea661920] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597525c
[3e4c097ea663f90] jit-backend-dump}
[3e4c097ea675ea9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB701A75591C7F000041FFE3
[3e4c097ea6777c1] jit-backend-dump}
[3e4c097eac4e602] {jit-backend
[3e4c097ead7b703] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097ead84cfd] jit-backend-dump}
[3e4c097ead94e68] {jit-backend-addr
Loop 1 ((if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))) has address 0x7f1c59752a9d to 0x7f1c59752d00 (bootstrap 0x7f1c59752a10)
       gc table: 0x7f1c59752960
       function: 0x7f1c59752a10
         resops: 0x7f1c59752a9d
       failures: 0x7f1c59752d00
            end: 0x7f1c59752f27
[3e4c097ead99947] jit-backend-addr}
[3e4c097ead9e918] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752ac7 +0  64020000
[3e4c097ead9fdab] jit-backend-dump}
[3e4c097eada3376] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752add +0  6A020000
[3e4c097eada426c] jit-backend-dump}
[3e4c097eada7534] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752aed +0  76020000
[3e4c097eada82ae] jit-backend-dump}
[3e4c097eadab1a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752b00 +0  7F020000
[3e4c097eadabee3] jit-backend-dump}
[3e4c097eadaee96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752b16 +0  85020000
[3e4c097eadafbaf] jit-backend-dump}
[3e4c097eadb2c3e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752b27 +0  AC020000
[3e4c097eadb397b] jit-backend-dump}
[3e4c097eadb6912] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752b58 +0  97020000
[3e4c097eadb764c] jit-backend-dump}
[3e4c097eadba59d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752b95 +0  76020000
[3e4c097eadbb2c2] jit-backend-dump}
[3e4c097eadbe177] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752ba6 +0  81020000
[3e4c097eadbee9c] jit-backend-dump}
[3e4c097eadc1d78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752bc1 +0  82020000
[3e4c097eadc2a91] jit-backend-dump}
[3e4c097eadc5961] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752bd7 +0  88020000
[3e4c097eadc66b1] jit-backend-dump}
[3e4c097eadc9594] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752beb +0  90020000
[3e4c097eadca330] jit-backend-dump}
[3e4c097eadcd259] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752bf8 +0  9F020000
[3e4c097eadce026] jit-backend-dump}
[3e4c097eadd0f98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752c4f +0  80020000
[3e4c097eadd1cc9] jit-backend-dump}
[3e4c097eadd4b75] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752c85 +0  66020000
[3e4c097eadd5894] jit-backend-dump}
[3e4c097eadd8702] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752ca2 +0  65020000
[3e4c097eadd943f] jit-backend-dump}
[3e4c097eaddcf0c] jit-backend}
[3e4c097eade0bcb] {jit-log-opt-loop
# Loop 1 ((if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))) : loop with 68 ops
[p0, p1]
+325: label(p0, p1, descr=TargetToken(50073296))
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+344: guard_class(p0, 16504240, descr=<Guard0x2f629e0>) [p1, p0]
+363: p3 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+367: guard_nonnull_class(p3, 16471056, descr=<Guard0x2f62a40>) [p1, p0]
+392: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+395: guard_false(i6, descr=<Guard0x2fe1bb0>) [p1, p0]
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
+401: guard_class(p1, 16437352, descr=<Guard0x2fe1bf8>) [p1, p0]
+420: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+424: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x2f62aa0>) [p1, p0]
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+442: guard_not_invalidated(descr=<Guard0x2fe1c40>) [p1, p0]
+442: i10 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+446: i11 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+450: i12 = int_is_zero(i11)
+453: guard_false(i12, descr=<Guard0x2fe1c88>) [p1, p0]
+459: i14 = int_eq(i10, -9223372036854775808)
+482: i16 = int_eq(i11, -1)
+496: i17 = int_and(i14, i16)
+499: guard_false(i17, descr=<Guard0x2fe1cd0>) [p1, p0]
+508: i19 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i10, i11, descr=<Calli 8 ii EF=0 OS=14>)
+546: i21 = int_eq(i19, 0)
guard_false(i21, descr=<Guard0x2f62b00>) [p0, i21, p1, p8]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
+569: p22 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+574: guard_class(p22, 16499664, descr=<Guard0x2fe1d18>) [p0, i21, p1, p8]
+586: p24 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+590: p25 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+594: guard_nonnull_class(p25, 16510992, descr=<Guard0x2f62b60>) [p0, i21, p1, p8]
+613: p27 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+617: guard_nonnull_class(p27, 16471056, descr=<Guard0x2f62bc0>) [p0, i21, p1, p8]
+635: p29 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+646: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x2fe1d60>) [p0, i21, p1, p8]
+655: p31 = getfield_gc_r(p25, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+659: i32 = instance_ptr_eq(p22, p31)
+662: guard_true(i32, descr=<Guard0x2fe1da8>) [p0, i21, p1, p8]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+668: p33 = same_as_r(p24)
+671: label(p22, i11, p27, p8, p24, p1, p3, i16, p25, p33, descr=TargetToken(50073376))
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+712: guard_not_invalidated(descr=<Guard0x2f62c20>) [p3, p1, p24, p27, i11, p22, p8]
+712: i34 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+716: i36 = int_eq(i34, -9223372036854775808)
+739: i37 = int_and(i36, i16)
+746: guard_false(i37, descr=<Guard0x2fe1df0>) [p3, p1, p24, p27, i11, p22, p8]
+755: i39 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i34, i11, descr=<Calli 8 ii EF=0 OS=14>)
+786: i41 = int_eq(i39, 0)
guard_false(i41, descr=<Guard0x2f62c80>) [i41, p3, p1, p24, p27, i11, p22, p8]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+809: p42 = getfield_gc_r(p27, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+820: guard_nonnull_class(p42, 16471056, descr=<Guard0x2f62ce0>) [i41, p3, p1, p24, p27, i11, p22, p8]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+838: p44 = new_with_vtable(descr=<SizeDescr 48>)
+879: setfield_gc(p44, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+883: setfield_gc(p44, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+887: setfield_gc(p44, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+898: setfield_gc(p44, ConstPtr(ptr45), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+902: setfield_gc(p44, p3, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+906: jump(p22, i11, p42, p8, p33, p44, p27, i16, p25, p33, descr=TargetToken(50073376))
+928: --end of the loop--
[3e4c097eae60722] jit-log-opt-loop}
[3e4c097eaf48ac5] {jit-backend
[3e4c097eaf904d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097eaf97243] jit-backend-dump}
[3e4c097eafa093e] {jit-backend-addr
Loop 2 ((cons (car l4840) AppRand2) from (cons (car l4840) AppRand2)) has address 0x7f1c597530fd to 0x7f1c59753250 (bootstrap 0x7f1c59753070)
       gc table: 0x7f1c59753010
       function: 0x7f1c59753070
         resops: 0x7f1c597530fd
       failures: 0x7f1c59753250
            end: 0x7f1c597533b3
[3e4c097eafa3310] jit-backend-addr}
[3e4c097eafa7012] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753127 +0  54010000
[3e4c097eafa81c1] jit-backend-dump}
[3e4c097eafab4e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975313d +0  5A010000
[3e4c097eafac278] jit-backend-dump}
[3e4c097eafaf234] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753157 +0  5C010000
[3e4c097eafaff77] jit-backend-dump}
[3e4c097eafb2f86] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975316a +0  65010000
[3e4c097eafb3cba] jit-backend-dump}
[3e4c097eafb6d12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975317e +0  6D010000
[3e4c097eafb7a58] jit-backend-dump}
[3e4c097eafbaab9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753198 +0  8B010000
[3e4c097eafbb7bf] jit-backend-dump}
[3e4c097eafbe788] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597531c4 +0  7B010000
[3e4c097eafbf4b2] jit-backend-dump}
[3e4c097eafc23dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597531d8 +0  83010000
[3e4c097eafc30e2] jit-backend-dump}
[3e4c097eafc606a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597531f2 +0  A1010000
[3e4c097eafc6d9e] jit-backend-dump}
[3e4c097eafca78b] jit-backend}
[3e4c097eafce26a] {jit-log-opt-loop
# Loop 2 ((cons (car l4840) AppRand2) from (cons (car l4840) AppRand2)) : loop with 33 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(50073456))
debug_merge_point(0, 0, '(cons (car l4840) AppRand2) from (cons (car l4840) AppRand2)')
+264: guard_class(p0, 16500016, descr=<Guard0x2f62d40>) [p1, p0]
+283: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+287: guard_nonnull_class(p3, 16471056, descr=<Guard0x2f62da0>) [p1, p0]
+305: i5 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+309: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+313: guard_nonnull_class(p6, 16471056, descr=<Guard0x2f62e00>) [p1, p0]
+331: guard_class(p1, 16437352, descr=<Guard0x2fe1e38>) [p1, p0]
+350: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+361: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x2fe1e80>) [p1, p0]
+370: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+374: guard_not_invalidated(descr=<Guard0x2fe1ec8>) [p1, p0]
+374: p12 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+378: guard_nonnull_class(p12, 16471056, descr=<Guard0x2f62e60>) [p1, p0]
+396: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l4840) AppRand2) from (cons (car l4840) AppRand2)')
+400: label(p11, p12, i5, p6, p14, descr=TargetToken(50073536))
debug_merge_point(0, 0, '(cons (car l4840) AppRand2) from (cons (car l4840) AppRand2)')
+424: i15 = getfield_gc_i(p12, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+428: guard_class(p14, 16437352, descr=<Guard0x2f62ec0>) [p14, i15, p6, i5, p12, p11]
+440: p17 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+451: guard_value(p17, ConstPtr(ptr18), descr=<Guard0x2fe1f10>) [p14, i15, p6, i5, p12, p11]
+460: p19 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+464: guard_not_invalidated(descr=<Guard0x2fe1f58>) [p14, i15, p6, i5, p12, p11]
+464: p20 = getfield_gc_r(p14, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+468: guard_nonnull_class(p20, 16471056, descr=<Guard0x2f62f20>) [p14, i15, p6, i5, p12, p11]
+486: p22 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l4840) AppRand2) from (cons (car l4840) AppRand2)')
+490: p23 = new_with_vtable(descr=<SizeDescr 24>)
+534: setfield_gc(p23, i5, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+538: setfield_gc(p23, p6, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+542: jump(p19, p20, i15, p23, p22, descr=TargetToken(50073536))
+576: --end of the loop--
[3e4c097eafef225] jit-log-opt-loop}
[3e4c097eb4f9ae9] {jit-backend
[3e4c097eb54864f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097eb54e887] jit-backend-dump}
[3e4c097eb558f73] {jit-backend-addr
Loop 3 ((let ([if0 (> m n)]) (if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))) from (interval-list AppRand0 n)) has address 0x7f1c5975356d to 0x7f1c59753690 (bootstrap 0x7f1c597534e0)
       gc table: 0x7f1c59753480
       function: 0x7f1c597534e0
         resops: 0x7f1c5975356d
       failures: 0x7f1c59753690
            end: 0x7f1c597537d7
[3e4c097eb55bd45] jit-backend-addr}
[3e4c097eb55fe36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753597 +0  24010000
[3e4c097eb5611aa] jit-backend-dump}
[3e4c097eb564602] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597535ad +0  2A010000
[3e4c097eb565450] jit-backend-dump}
[3e4c097eb56bd8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597535c0 +0  4F010000
[3e4c097eb56cd4a] jit-backend-dump}
[3e4c097eb57054b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597535d1 +0  5A010000
[3e4c097eb5712b0] jit-backend-dump}
[3e4c097eb5744e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597535db +0  6C010000
[3e4c097eb575219] jit-backend-dump}
[3e4c097eb5784aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597535ef +0  74010000
[3e4c097eb5791fa] jit-backend-dump}
[3e4c097eb57c3fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975360d +0  8E010000
[3e4c097eb57d101] jit-backend-dump}
[3e4c097eb5801f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975361c +0  9B010000
[3e4c097eb580f04] jit-backend-dump}
[3e4c097eb584c1f] jit-backend}
[3e4c097eb5888a7] {jit-log-opt-loop
# Loop 3 ((let ([if0 (> m n)]) (if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))) from (interval-list AppRand0 n)) : loop with 47 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(50538320))
debug_merge_point(0, 0, '(let ([if0 (> m n)]) (if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))) from (interval-list AppRand0 n)')
+264: guard_class(p1, 16435920, descr=<Guard0x2f631c0>) [p0, p1]
+283: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+287: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x2f63220>) [p0, p1]
debug_merge_point(0, 0, '(> m n)')
+305: guard_not_invalidated(descr=<Guard0x3048068>) [p0, p1]
+305: guard_class(p0, 16503888, descr=<Guard0x30480b0>) [p0, p1]
+324: i6 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+328: i7 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+332: i8 = int_gt(i6, i7)
+335: guard_false(i8, descr=<Guard0x30480f8>) [p0, p1]
debug_merge_point(0, 0, '(if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1)))')
debug_merge_point(0, 0, '(+ 1 m)')
+341: i10 = int_add_ovf(1, i6)
+345: guard_no_overflow(descr=<Guard0x3048140>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))')
debug_merge_point(0, 0, '(interval-list AppRand0 n)')
+351: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+362: i13 = instance_ptr_eq(p11, ConstPtr(ptr12))
+365: guard_true(i13, descr=<Guard0x3048188>) [p0, p1]
debug_merge_point(0, 0, '(let ([if0 (> m n)]) (if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))) from (interval-list AppRand0 n)')
+371: label(p11, i10, i7, p3, p0, p1, descr=TargetToken(50538400))
debug_merge_point(0, 0, '(let ([if0 (> m n)]) (if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))) from (interval-list AppRand0 n)')
debug_merge_point(0, 0, '(> m n)')
+392: guard_not_invalidated(descr=<Guard0x2f63280>) [p1, p0, i7, i10, p11, p3]
+392: i14 = int_gt(i10, i7)
+395: guard_false(i14, descr=<Guard0x30481d0>) [p1, p0, i7, i10, p11, p3]
debug_merge_point(0, 0, '(if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1)))')
debug_merge_point(0, 0, '(+ 1 m)')
+401: i16 = int_add_ovf(1, i10)
+410: guard_no_overflow(descr=<Guard0x3048218>) [p1, p0, i7, i10, p11, p3]
debug_merge_point(0, 0, '(let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))')
debug_merge_point(0, 0, '(interval-list AppRand0 n)')
debug_merge_point(0, 0, '(let ([if0 (> m n)]) (if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))) from (interval-list AppRand0 n)')
+416: p17 = new_with_vtable(descr=<SizeDescr 32>)
+463: p18 = new_with_vtable(descr=<SizeDescr 40>)
+474: setfield_gc(p17, p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+478: setfield_gc(p17, i10, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+482: setfield_gc(p17, i7, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_1 24 pure>)
+486: setfield_gc(p18, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+490: setfield_gc(p18, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+494: setfield_gc(p18, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+505: setfield_gc(p18, ConstPtr(ptr19), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+509: jump(p11, i16, i7, p3, p17, p18, descr=TargetToken(50538400))
+528: --end of the loop--
[3e4c097eb5afbc2] jit-log-opt-loop}
[3e4c097eb64afdc] {jit-backend
[3e4c097eb683709] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597538b
[3e4c097eb689a82] jit-backend-dump}
[3e4c097eb6931fb] {jit-backend-addr
Loop 4 ((cons m AppRand1) from (cons m AppRand1)) has address 0x7f1c5975399d to 0x7f1c59753ac0 (bootstrap 0x7f1c59753910)
       gc table: 0x7f1c597538b0
       function: 0x7f1c59753910
         resops: 0x7f1c5975399d
       failures: 0x7f1c59753ac0
            end: 0x7f1c59753c07
[3e4c097eb695c6f] jit-backend-addr}
[3e4c097eb699a4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597539c7 +0  24010000
[3e4c097eb69ab54] jit-backend-dump}
[3e4c097eb69de47] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597539d7 +0  30010000
[3e4c097eb69ebe9] jit-backend-dump}
[3e4c097eb6a1c19] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597539f1 +0  32010000
[3e4c097eb6a29b8] jit-backend-dump}
[3e4c097eb6a5946] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753a04 +0  3B010000
[3e4c097eb6a66d0] jit-backend-dump}
[3e4c097eb6a96c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753a18 +0  43010000
[3e4c097eb6aa45f] jit-backend-dump}
[3e4c097eb6ad53e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753a40 +0  53010000
[3e4c097eb6ae2a6] jit-backend-dump}
[3e4c097eb6b1286] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753a50 +0  5F010000
[3e4c097eb6b1fe5] jit-backend-dump}
[3e4c097eb6b50ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753a64 +0  67010000
[3e4c097eb6b5e91] jit-backend-dump}
[3e4c097eb6b9a74] jit-backend}
[3e4c097eb6bd4cc] {jit-log-opt-loop
# Loop 4 ((cons m AppRand1) from (cons m AppRand1)) : loop with 30 ops
[p0, p1]
+245: label(p0, p1, descr=TargetToken(50538480))
debug_merge_point(0, 0, '(cons m AppRand1) from (cons m AppRand1)')
+264: guard_class(p0, 16499664, descr=<Guard0x2f632e0>) [p1, p0]
+283: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+287: guard_class(p3, 16503888, descr=<Guard0x3048260>) [p1, p0]
+299: i5 = getfield_gc_i(p3, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+303: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+307: guard_nonnull_class(p6, 16471056, descr=<Guard0x2f63340>) [p1, p0]
+325: guard_class(p1, 16435920, descr=<Guard0x30482a8>) [p1, p0]
+344: p9 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+355: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x30482f0>) [p1, p0]
+364: p11 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+368: guard_not_invalidated(descr=<Guard0x3048338>) [p1, p0]
+368: p12 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons m AppRand1) from (cons m AppRand1)')
+372: label(p11, i5, p6, p12, descr=TargetToken(50538560))
debug_merge_point(0, 0, '(cons m AppRand1) from (cons m AppRand1)')
+392: guard_class(p11, 16503888, descr=<Guard0x2f633a0>) [p12, p11, p6, i5]
+404: i14 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+408: guard_class(p12, 16435920, descr=<Guard0x3048380>) [p12, p11, p6, i5]
+420: p16 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+431: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x30483c8>) [p12, p11, p6, i5]
+440: p18 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+444: guard_not_invalidated(descr=<Guard0x3048410>) [p12, p11, p6, i5]
+444: p19 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons m AppRand1) from (cons m AppRand1)')
+448: p20 = new_with_vtable(descr=<SizeDescr 24>)
+492: setfield_gc(p20, i5, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+496: setfield_gc(p20, p6, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+500: jump(p18, i14, p20, p19, descr=TargetToken(50538560))
+528: --end of the loop--
[3e4c097eb6db258] jit-log-opt-loop}
[3e4c097eb847671] {jit-backend
[3e4c097eb891bba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753d
[3e4c097eb899036] jit-backend-dump}
[3e4c097eb8a2c8c] {jit-backend-addr
Loop 5 ((if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))) has address 0x7f1c59753e0d to 0x7f1c59753f90 (bootstrap 0x7f1c59753d80)
       gc table: 0x7f1c59753d00
       function: 0x7f1c59753d80
         resops: 0x7f1c59753e0d
       failures: 0x7f1c59753f90
            end: 0x7f1c5975412a
[3e4c097eb8a58a6] jit-backend-addr}
[3e4c097eb8a96f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753e24 +0  7A010000
[3e4c097eb8aa880] jit-backend-dump}
[3e4c097eb8adac8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753e3a +0  80010000
[3e4c097eb8ae91b] jit-backend-dump}
[3e4c097eb8b1a7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753e4a +0  8C010000
[3e4c097eb8b2807] jit-backend-dump}
[3e4c097eb8b58e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753e5d +0  95010000
[3e4c097eb8b664e] jit-backend-dump}
[3e4c097eb8b970b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753e73 +0  9B010000
[3e4c097eb8ba494] jit-backend-dump}
[3e4c097eb8bd554] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753e84 +0  C2010000
[3e4c097eb8be2c2] jit-backend-dump}
[3e4c097eb8c12b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753eb5 +0  AD010000
[3e4c097eb8c200b] jit-backend-dump}
[3e4c097eb8c4fc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753ef2 +0  8C010000
[3e4c097eb8c5d14] jit-backend-dump}
[3e4c097eb8c8cbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753f03 +0  97010000
[3e4c097eb8c9a50] jit-backend-dump}
[3e4c097eb8cca43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753f1e +0  98010000
[3e4c097eb8cd793] jit-backend-dump}
[3e4c097eb8d0752] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753f34 +0  9E010000
[3e4c097eb8d149e] jit-backend-dump}
[3e4c097eb8d445a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753f48 +0  A6010000
[3e4c097eb8d5191] jit-backend-dump}
[3e4c097eb8d817b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753f55 +0  B5010000
[3e4c097eb8d8eaf] jit-backend-dump}
[3e4c097eb8dc954] jit-backend}
[3e4c097eb8e046a] {jit-log-opt-loop
# Loop 5 ((if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))) : entry bridge with 41 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+277: guard_class(p0, 16504240, descr=<Guard0x2f63400>) [p1, p0]
+296: p3 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+300: guard_nonnull_class(p3, 16471056, descr=<Guard0x2f63460>) [p1, p0]
+325: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+328: guard_false(i6, descr=<Guard0x3048458>) [p1, p0]
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
+334: guard_class(p1, 16437352, descr=<Guard0x30484a0>) [p1, p0]
+353: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+357: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x2f634c0>) [p1, p0]
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+375: guard_not_invalidated(descr=<Guard0x30484e8>) [p1, p0]
+375: i10 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+379: i11 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+383: i12 = int_is_zero(i11)
+386: guard_false(i12, descr=<Guard0x3048530>) [p1, p0]
+392: i14 = int_eq(i10, -9223372036854775808)
+415: i16 = int_eq(i11, -1)
+429: i17 = int_and(i14, i16)
+432: guard_false(i17, descr=<Guard0x3048578>) [p1, p0]
+441: i19 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i10, i11, descr=<Calli 8 ii EF=0 OS=14>)
+479: i21 = int_eq(i19, 0)
guard_false(i21, descr=<Guard0x2f63520>) [p0, i21, p1, p8]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
+502: p22 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+507: guard_class(p22, 16499664, descr=<Guard0x30485c0>) [p0, i21, p1, p8]
+519: p24 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+523: p25 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+527: guard_nonnull_class(p25, 16510992, descr=<Guard0x2f63580>) [p0, i21, p1, p8]
+546: p27 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+550: guard_nonnull_class(p27, 16471056, descr=<Guard0x2f635e0>) [p0, i21, p1, p8]
+568: p29 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+579: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x3048608>) [p0, i21, p1, p8]
+588: p31 = getfield_gc_r(p25, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+592: i32 = instance_ptr_eq(p22, p31)
+595: guard_true(i32, descr=<Guard0x3048650>) [p0, i21, p1, p8]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+601: jump(p22, i11, p27, p8, p24, p1, p3, i16, p25, p24, descr=TargetToken(50073376))
+656: --end of the loop--
[3e4c097eb908ee1] jit-log-opt-loop}
[3e4c097eb9d732f] {jit-backend
[3e4c097eba17d35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097eba1d8c2] jit-backend-dump}
[3e4c097eba26f5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754264 +0  1E000000
[3e4c097eba2825e] jit-backend-dump}
[3e4c097eba2bbe6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754395 +0  1E000000
[3e4c097eba2c99b] jit-backend-dump}
[3e4c097eba2fc97] {jit-backend-addr
bridge out of Guard 0x2f62a40 has address 0x7f1c59754260 to 0x7f1c59754390
       gc table: 0x7f1c59754200
    jump target: 0x7f1c59754260
         resops: 0x7f1c5975426e
       failures: 0x7f1c59754390
            end: 0x7f1c597544eb
[3e4c097eba31f46] jit-backend-addr}
[3e4c097eba352a7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975427e +0  51010000
[3e4c097eba36084] jit-backend-dump}
[3e4c097eba391ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975428b +0  60010000
[3e4c097eba39eef] jit-backend-dump}
[3e4c097eba3cf93] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975429b +0  6C010000
[3e4c097eba3dc5f] jit-backend-dump}
[3e4c097eba40ceb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597542af +0  74010000
[3e4c097eba419b4] jit-backend-dump}
[3e4c097eba44a6b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597542c3 +0  7C010000
[3e4c097eba45777] jit-backend-dump}
[3e4c097eba48917] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597542db +0  9C010000
[3e4c097eba49617] jit-backend-dump}
[3e4c097eba4c714] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597542f0 +0  A3010000
[3e4c097eba4d3f8] jit-backend-dump}
[3e4c097eba504e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597542fd +0  B2010000
[3e4c097eba511a0] jit-backend-dump}
[3e4c097eba5422f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754319 +0  B2010000
[3e4c097eba54eec] jit-backend-dump}
[3e4c097eba59da9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752add +0  7F170000
[3e4c097eba5df05] jit-backend-dump}
[3e4c097eba657de] jit-backend}
[3e4c097eba6957f] {jit-log-opt-bridge
# bridge out of Guard 0x2f62a40 with 32 ops
[p0, p1]
+118: guard_class(p1, 16504240, descr=<Guard0x2f63640>) [p0, p1]
+130: p3 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+134: guard_nonnull(p3, descr=<Guard0x3048698>) [p0, p1]
+150: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+153: guard_true(i5, descr=<Guard0x30486e0>) [p0, p1]
debug_merge_point(0, 0, ''()')
+159: guard_class(p0, 16437352, descr=<Guard0x3048728>) [p0, p1]
+179: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+190: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3048770>) [p0, p1]
+199: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+199: guard_not_invalidated(descr=<Guard0x30487b8>) [p0, p1]
+199: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+203: guard_nonnull_class(p10, 16471056, descr=<Guard0x2f636a0>) [p0, p1]
+223: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l4840) AppRand2) from (remove-multiples n4838 (cdr l4840))')
+227: i13 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+231: guard_class(p12, 16437352, descr=<Guard0x3048800>) [p0, p1]
+244: p15 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+248: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x3048848>) [p0, p1]
+257: p17 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+261: p18 = getfield_gc_r(p12, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+265: guard_nonnull_class(p18, 16471056, descr=<Guard0x2f63700>) [p0, p1]
+285: p20 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l4840) AppRand2) from (cons (car l4840) AppRand2)')
+289: p21 = new_with_vtable(descr=<SizeDescr 32>)
+333: p22 = new_with_vtable(descr=<SizeDescr 24>)
+344: setfield_gc(p22, i13, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+348: setfield_gc(p22, ConstPtr(ptr23), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+352: setfield_gc(p21, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+356: setfield_gc(p21, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+360: setfield_gc(p21, p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+364: jump(p21, p20, descr=TargetToken(50073456))
+400: --end of the loop--
[3e4c097eba8784d] jit-log-opt-bridge}
[3e4c097ebc0dcaa] {jit-backend
[3e4c097ebc5fe98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597545c
[3e4c097ebc665db] jit-backend-dump}
[3e4c097ebc70533] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754624 +0  21000000
[3e4c097ebc7192a] jit-backend-dump}
[3e4c097ebc7538f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597547c5 +0  21000000
[3e4c097ebc76257] jit-backend-dump}
[3e4c097ebc794b4] {jit-backend-addr
bridge out of Guard 0x2f62c80 has address 0x7f1c59754620 to 0x7f1c597547c0
       gc table: 0x7f1c597545c0
    jump target: 0x7f1c59754620
         resops: 0x7f1c5975462e
       failures: 0x7f1c597547c0
            end: 0x7f1c5975491b
[3e4c097ebc7b849] jit-backend-addr}
[3e4c097ebc7ec40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975463b +0  C4010000
[3e4c097ebc7faaf] jit-backend-dump}
[3e4c097ebc82d95] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754659 +0  DE010000
[3e4c097ebc83b10] jit-backend-dump}
[3e4c097ebc86d0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754676 +0  DD010000
[3e4c097ebc87a4b] jit-backend-dump}
[3e4c097ebc8ab6d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975468a +0  E5010000
[3e4c097ebc8b882] jit-backend-dump}
[3e4c097ebc8e98f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754697 +0  F4010000
[3e4c097ebc8f6d5] jit-backend-dump}
[3e4c097ebc9283a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597546a4 +0  03020000
[3e4c097ebc93562] jit-backend-dump}
[3e4c097ebc96613] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597546d3 +0  F0010000
[3e4c097ebc97356] jit-backend-dump}
[3e4c097ebc9a47b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754712 +0  CD010000
[3e4c097ebc9b18d] jit-backend-dump}
[3e4c097ebc9e5ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975473b +0  C0010000
[3e4c097ebc9f2ec] jit-backend-dump}
[3e4c097ebca26f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752c85 +0  97190000
[3e4c097ebca343c] jit-backend-dump}
[3e4c097ebca73ae] jit-backend}
[3e4c097ebcaad33] {jit-log-opt-bridge
# bridge out of Guard 0x2f62c80 with 41 ops
[i0, p1, p2, p3, p4, i5, p6, p7]
+118: guard_true(i0, descr=<Guard0x2f63760>) [i0, p1, p2, p3, p4, i5, p6, p7]
+127: guard_not_invalidated(descr=<Guard0x3048890>) [i0, p1, p2, p3, p4, i5, p6, p7]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+127: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+138: guard_nonnull_class(p8, 16510992, descr=<Guard0x2f637c0>) [i0, p1, p2, p3, p4, i5, p6, p7]
+157: p10 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+168: guard_nonnull_class(p10, 16471056, descr=<Guard0x2f63820>) [i0, p1, p2, p3, p4, i5, p6, p7]
+186: p12 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+197: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x30488d8>) [i0, p1, p2, p3, p4, i5, p6, p7]
+206: p14 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+210: i15 = instance_ptr_eq(p6, p14)
+213: guard_true(i15, descr=<Guard0x3048920>) [i0, p1, p2, p3, p4, i5, p6, p7]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+219: i16 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+223: i17 = int_is_zero(i5)
+226: guard_false(i17, descr=<Guard0x3048968>) [i0, p1, p2, p3, p4, i5, p6, p7]
+232: i19 = int_eq(i16, -9223372036854775808)
+254: i21 = int_eq(i5, -1)
+267: i22 = int_and(i19, i21)
+270: guard_false(i22, descr=<Guard0x30489b0>) [i0, p1, p2, p3, p4, i5, p6, p7]
+279: i24 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i16, i5, descr=<Calli 8 ii EF=0 OS=14>)
+320: i26 = int_eq(i24, 0)
guard_false(i26, descr=<Guard0x2f63880>) [i26, p10, p1, p2, p3, None, i5, p6, p7]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
+342: p28 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+353: p29 = getfield_gc_r(p10, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+364: guard_nonnull_class(p29, 16471056, descr=<Guard0x2f638e0>) [i26, p10, p1, p2, p3, None, i5, p6, p7]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+383: p31 = new_with_vtable(descr=<SizeDescr 48>)
+424: setfield_gc(p31, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+428: setfield_gc(p31, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+432: setfield_gc(p31, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+443: setfield_gc(p31, ConstPtr(ptr32), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+447: setfield_gc(p31, p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+451: jump(p6, i5, p29, p7, p28, p31, p10, i21, p8, p28, descr=TargetToken(50073376))
+512: --end of the loop--
[3e4c097ebcd3831] jit-log-opt-bridge}
[3e4c097ebe771ea] {jit-backend
[3e4c097ebedc52e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754a
[3e4c097ebee3fb3] jit-backend-dump}
[3e4c097ebeee062] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754aa4 +0  21000000
[3e4c097ebeef39c] jit-backend-dump}
[3e4c097ebef2fce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754ce5 +0  21000000
[3e4c097ebef3e5c] jit-backend-dump}
[3e4c097ebef7082] {jit-backend-addr
bridge out of Guard 0x2f62ec0 has address 0x7f1c59754aa0 to 0x7f1c59754ce0
       gc table: 0x7f1c59754a10
    jump target: 0x7f1c59754aa0
         resops: 0x7f1c59754aae
       failures: 0x7f1c59754ce0
            end: 0x7f1c59754e73
[3e4c097ebef92d9] jit-backend-addr}
[3e4c097ebefc719] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754abe +0  61020000
[3e4c097ebefd59a] jit-backend-dump}
[3e4c097ebf00768] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754ad2 +0  69020000
[3e4c097ebf014df] jit-backend-dump}
[3e4c097ebf047a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754ae8 +0  8B020000
[3e4c097ebf05552] jit-backend-dump}
[3e4c097ebf0867d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754b00 +0  8F020000
[3e4c097ebf093a2] jit-backend-dump}
[3e4c097ebf0c532] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754b0d +0  9E020000
[3e4c097ebf0d29a] jit-backend-dump}
[3e4c097ebf1034e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754b21 +0  A6020000
[3e4c097ebf1109d] jit-backend-dump}
[3e4c097ebf1427d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754b2e +0  B5020000
[3e4c097ebf14fe8] jit-backend-dump}
[3e4c097ebf18055] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754b37 +0  C8020000
[3e4c097ebf18db4] jit-backend-dump}
[3e4c097ebf1be0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754b67 +0  B4020000
[3e4c097ebf1cb80] jit-backend-dump}
[3e4c097ebf1fbee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754bb1 +0  86020000
[3e4c097ebf20993] jit-backend-dump}
[3e4c097ebf239ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754bcb +0  88020000
[3e4c097ebf2474a] jit-backend-dump}
[3e4c097ebf279b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597531c4 +0  D8180000
[3e4c097ebf28752] jit-backend-dump}
[3e4c097ebf2c70b] jit-backend}
[3e4c097ebf30242] {jit-log-opt-bridge
# bridge out of Guard 0x2f62ec0 with 69 ops
[p0, i1, p2, i3, p4, p5]
+166: guard_class(p0, 16435920, descr=<Guard0x2f63940>) [p0, i1, p2, i3, p4, p5]
+178: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+189: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x30489f8>) [p0, i1, p2, i3, p4, p5]
+198: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+202: guard_not_invalidated(descr=<Guard0x3048a40>) [p0, i1, p2, i3, p4, p5]
+202: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)) from (cons (car l4840) AppRand2)')
+206: guard_class(p10, 16435920, descr=<Guard0x3048a88>) [p0, i1, p2, i3, p4, p5]
+220: p12 = getfield_gc_r(p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+224: guard_nonnull_class(p12, ConstClass(ForwardLink), descr=<Guard0x2f639a0>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(sieve AppRand3)')
+244: guard_class(p9, 16499664, descr=<Guard0x3048ad0>) [p0, i1, p2, i3, p4, p5]
+257: p15 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+268: i17 = instance_ptr_eq(p15, ConstPtr(ptr16))
+271: guard_true(i17, descr=<Guard0x3048b18>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)')
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
debug_merge_point(0, 0, '(let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)))')
debug_merge_point(0, 0, '(remove-multiples (car l) (cdr l))')
+277: guard_class(p15, 16505296, descr=<Guard0x3048b60>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))')
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+290: i19 = int_is_zero(i1)
+293: guard_false(i19, descr=<Guard0x3048ba8>) [p0, i1, p2, i3, p4, p5]
+299: i21 = int_eq(i3, -9223372036854775808)
+322: i23 = int_eq(i1, -1)
+335: i24 = int_and(i21, i23)
+338: guard_false(i24, descr=<Guard0x3048bf0>) [p0, i1, p2, i3, p4, p5]
+347: i26 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i3, i1, descr=<Calli 8 ii EF=0 OS=14>)
+399: i28 = int_eq(i26, 0)
guard_false(i28, descr=<Guard0x2f63a00>) [i28, p10, p9, p15, p12, i1, p2, i3, None, None]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+421: guard_nonnull_class(p2, 16471056, descr=<Guard0x2f63a60>) [i28, p10, p9, p15, p12, i1, p2, i3, None, None]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+447: p31 = new_with_vtable(descr=<SizeDescr 32>)
+491: p32 = new_with_vtable(descr=<SizeDescr 48>)
+502: p33 = new_with_vtable(descr=<SizeDescr 40>)
+513: setfield_gc(p33, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+517: p34 = new_with_vtable(descr=<SizeDescr 24>)
+528: setfield_gc(p34, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+532: p35 = new_with_vtable(descr=<SizeDescr 24>)
+543: setfield_gc(p35, i1, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+554: p36 = new_with_vtable(descr=<SizeDescr 24>)
+565: setfield_gc(p36, i3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+576: setfield_gc(p36, p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+580: setfield_gc(p35, p36, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+584: setfield_gc(p34, p35, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+588: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+592: p37 = new_with_vtable(descr=<SizeDescr 40>)
+603: setfield_gc(p37, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+607: setfield_gc(p37, p9, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+611: setfield_gc(p37, p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+622: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+626: setfield_gc(p33, p37, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+630: setfield_gc(p33, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+641: setfield_gc(p32, ConstPtr(ptr40), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+645: setfield_gc(p32, ConstPtr(ptr41), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+656: setfield_gc(p32, p33, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+660: setfield_gc(p32, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+671: setfield_gc(p31, ConstPtr(ptr42), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+675: setfield_gc(p31, i1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+679: setfield_gc(p31, p2, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+683: setfield_gc(p32, p36, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+687: jump(p31, p32, descr=TargetToken(50073296))
+720: --end of the loop--
[3e4c097ebf7281a] jit-log-opt-bridge}
[3e4c097ec052ef5] {jit-backend
[3e4c097ec09413a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754f
[3e4c097ec09950c] jit-backend-dump}
[3e4c097ec0a290a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754f54 +0  21000000
[3e4c097ec0a3aea] jit-backend-dump}
[3e4c097ec0a73af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755075 +0  21000000
[3e4c097ec0a817c] jit-backend-dump}
[3e4c097ec0ab3f7] {jit-backend-addr
bridge out of Guard 0x2f62ce0 has address 0x7f1c59754f50 to 0x7f1c59755070
       gc table: 0x7f1c59754f10
    jump target: 0x7f1c59754f50
         resops: 0x7f1c59754f5e
       failures: 0x7f1c59755070
            end: 0x7f1c5975515b
[3e4c097ec0ad657] jit-backend-addr}
[3e4c097ec0b0b7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754f6b +0  44010000
[3e4c097ec0b1959] jit-backend-dump}
[3e4c097ec0b5090] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754f8c +0  5B010000
[3e4c097ec0b5e4e] jit-backend-dump}
[3e4c097ec0b90b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754fa2 +0  61010000
[3e4c097ec0b9dc9] jit-backend-dump}
[3e4c097ec0bced0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754fb6 +0  69010000
[3e4c097ec0bdbee] jit-backend-dump}
[3e4c097ec0c0d44] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754fc3 +0  78010000
[3e4c097ec0c1a75] jit-backend-dump}
[3e4c097ec0c4ee9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752ca2 +0  AA220000
[3e4c097ec0c5c26] jit-backend-dump}
[3e4c097ec0c9b40] jit-backend}
[3e4c097ec0cd583] {jit-log-opt-bridge
# bridge out of Guard 0x2f62ce0 with 34 ops
[i0, p1, p2, p3, p4, i5, p6, p7]
+86: guard_false(i0, descr=<Guard0x2f63ac0>) [i0, p1, p2, p3, p4, i5, p6, p7]
+95: guard_not_invalidated(descr=<Guard0x3048c38>) [i0, p1, p2, p3, p4, i5, p6, p7]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
+95: p8 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+106: p9 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+110: guard_nonnull_class(p9, 16510992, descr=<Guard0x2f63b20>) [i0, p1, p2, p3, p4, i5, p6, p7]
+128: p11 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+132: guard_nonnull_class(p11, 16616448, descr=<Guard0x2f63b80>) [i0, p1, p2, p3, p4, i5, p6, p7]
+150: p13 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+161: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x3048c80>) [i0, p1, p2, p3, p4, i5, p6, p7]
+170: p15 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+174: i16 = instance_ptr_eq(p6, p15)
+177: guard_true(i16, descr=<Guard0x3048cc8>) [i0, p1, p2, p3, p4, i5, p6, p7]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+183: p17 = new_with_vtable(descr=<SizeDescr 32>)
+234: p18 = new_with_vtable(descr=<SizeDescr 48>)
+245: p19 = new_with_vtable(descr=<SizeDescr 48>)
+256: setfield_gc(p19, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+260: setfield_gc(p19, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+264: setfield_gc(p19, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+275: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+279: setfield_gc(p19, p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+283: setfield_gc(p17, p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+287: setfield_gc(p17, i5, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+291: setfield_gc(p17, p11, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+302: setfield_gc(p18, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+306: setfield_gc(p18, p8, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+310: setfield_gc(p18, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+314: setfield_gc(p18, ConstPtr(ptr21), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+318: setfield_gc(p18, p4, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+322: jump(p17, p18, descr=TargetToken(50073296))
+352: --end of the loop--
[3e4c097ec0ecaab] jit-log-opt-bridge}
[3e4c097ec227f94] {jit-backend
[3e4c097ec272e78] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755250 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C8201000048FF042520BA9B024885F60F84000000004D8B7C240841813F100A01000F85000000004D8B77104983FE01720741813E503601000F85000000004D8B5424104D8B4C24184983F9017207418139509A00000F85000000004D8B41104983F8017207418138509A00000F85000000004D8B4E08488B3D39FFFFFF4939F90F8500000000498B7E104939FF0F8500000000498B7D084883FF017206813F900F00000F85000000004D8B48084D85D20F840000000049BB00000000000000804D39D9BA00000000400F94C24983FAFFB800000000400F94C04821C24885D20F85000000004C89D34D89C44889BD30010000488985380100004C89CF4C89D641BBB0CBAE0041FFD341B9010000004883F800BA00000000400F94C24885D20F85000000004D8B4F08498B4424104883F80172068138509A00000F85000000004889C14C89C84C8B9D380100004C899D400100004C89B5480100004C898D500100004D89E6FFB5300100004C89BD300100004989DF5B49BB202C75591C7F000041FFE30F1F400048C7442408FFFFFF0049BB685175591C7F00004C895D204D8D9B88C1FFFF41FFD3E958FEFFFFFF35D4FDFFFF49BB785175591C7F000041534D8D9B88BEFFFF41FFE3FF35C0FDFFFF49BB885175591C7F000041534D8D9B78BEFFFF41FFE3FF35ACFDFFFF49BB985175591C7F000041534D8D9B68BEFFFF41FFE3FF3598FDFFFF49BBA85175591C7F000041534D8D9B58BEFFFF41FFE3FF3584FDFFFF49BBB85175591C7F000041534D8D9B48BEFFFF41FFE3FF3570FDFFFF49BBC85175591C7F000041534D8D9B38BEFFFF41FFE3FF3564FDFFFF49BBD85175591C7F000041534D8D9B28BEFFFF41FFE3FF3550FDFFFF49BBE85175591C7F000041534D8D9B18BEFFFF41FFE3FF353CFDFFFF49BBF85175591C7F000041534D8D9B08BEFFFF41FFE3FF3528FDFFFF49BB085275591C7F000041534D8D9BF8BDFFFF41FFE3FF3514FDFFFF49BB185275591C7F000041534D8D9BE8BDFFFF41FFE3FF3500FDFFFF49BB285275591C7F000041534D8D9BD8BDFFFF41FFE3FF35ECFCFFFF49BB385275591C7F000041534D8D9BC8BDFFFF41FFE3
[3e4c097ec2799e9] jit-backend-dump}
[3e4c097ec283907] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597552c4 +0  21000000
[3e4c097ec284c56] jit-backend-dump}
[3e4c097ec288965] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755455 +0  21000000
[3e4c097ec289820] jit-backend-dump}
[3e4c097ec28cb2f] {jit-backend-addr
bridge out of Guard 0x2f62b00 has address 0x7f1c597552c0 to 0x7f1c59755450
       gc table: 0x7f1c59755250
    jump target: 0x7f1c597552c0
         resops: 0x7f1c597552ce
       failures: 0x7f1c59755450
            end: 0x7f1c597555e2
[3e4c097ec28f033] jit-backend-addr}
[3e4c097ec29267b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597552db +0  97010000
[3e4c097ec29347c] jit-backend-dump}
[3e4c097ec2967d7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597552ed +0  BD010000
[3e4c097ec297514] jit-backend-dump}
[3e4c097ec29a6a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755304 +0  C2010000
[3e4c097ec29b3aa] jit-backend-dump}
[3e4c097ec29e4aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755321 +0  C1010000
[3e4c097ec29f180] jit-backend-dump}
[3e4c097ec2a228f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755338 +0  C6010000
[3e4c097ec2a2f43] jit-backend-dump}
[3e4c097ec2a6034] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975534c +0  CE010000
[3e4c097ec2a6cd5] jit-backend-dump}
[3e4c097ec2a9e31] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755359 +0  DD010000
[3e4c097ec2aaade] jit-backend-dump}
[3e4c097ec2adbc0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975536f +0  E3010000
[3e4c097ec2ae85e] jit-backend-dump}
[3e4c097ec2b198c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975537c +0  F2010000
[3e4c097ec2b2640] jit-backend-dump}
[3e4c097ec2b5724] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597553ab +0  DF010000
[3e4c097ec2b63d2] jit-backend-dump}
[3e4c097ec2b9500] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597553ea +0  BC010000
[3e4c097ec2ba1aa] jit-backend-dump}
[3e4c097ec2bd26d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755405 +0  BD010000
[3e4c097ec2bdf18] jit-backend-dump}
[3e4c097ec2c123e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752b95 +0  27270000
[3e4c097ec2c1f2f] jit-backend-dump}
[3e4c097ec2c5e21] jit-backend}
[3e4c097ec2c976f] {jit-log-opt-bridge
# bridge out of Guard 0x2f62b00 with 42 ops
[p0, i1, p2, p3]
+134: guard_true(i1, descr=<Guard0x2f63be0>) [p0, i1, p2, p3]
+143: guard_not_invalidated(descr=<Guard0x3048d10>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+143: p4 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+148: guard_class(p4, 16499664, descr=<Guard0x3048d58>) [p0, i1, p2, p3]
+161: p6 = getfield_gc_r(p4, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+165: guard_nonnull_class(p6, 16510992, descr=<Guard0x2f63c40>) [p0, i1, p2, p3]
+184: i8 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+189: p9 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+194: guard_nonnull_class(p9, 16471056, descr=<Guard0x2f63ca0>) [p0, i1, p2, p3]
+213: p11 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+217: guard_nonnull_class(p11, 16471056, descr=<Guard0x2f63d00>) [p0, i1, p2, p3]
+236: p13 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+247: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x3048da0>) [p0, i1, p2, p3]
+256: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+260: i16 = instance_ptr_eq(p4, p15)
+263: guard_true(i16, descr=<Guard0x3048de8>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
+269: p17 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+273: guard_nonnull_class(p17, ConstClass(ForwardLink), descr=<Guard0x2f63d60>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+291: i19 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+295: i20 = int_is_zero(i8)
+298: guard_false(i20, descr=<Guard0x3048e30>) [p0, i1, p2, p3]
+304: i22 = int_eq(i19, -9223372036854775808)
+326: i24 = int_eq(i8, -1)
+339: i25 = int_and(i22, i24)
+342: guard_false(i25, descr=<Guard0x3048e78>) [p0, i1, p2, p3]
+351: i27 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i19, i8, descr=<Calli 8 ii EF=0 OS=14>)
+392: i29 = int_eq(i27, 0)
guard_false(i29, descr=<Guard0x2f63dc0>) [i29, p11, i8, p4, p17, p2, None]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
+414: p31 = getfield_gc_r(p4, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+418: p32 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+423: guard_nonnull_class(p32, 16471056, descr=<Guard0x2f63e20>) [i29, p11, i8, p4, p17, p2, None]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+441: jump(p4, i8, p32, p17, p31, p2, p11, i24, p6, p31, descr=TargetToken(50073376))
+512: --end of the loop--
[3e4c097ec2f07d4] jit-log-opt-bridge}
[3e4c097ec3c14ac] {jit-backend
[3e4c097ec3fe913] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597556d
[3e4c097ec405c0b] jit-backend-dump}
[3e4c097ec40f298] {jit-backend-addr
Loop 11 ((cons (car l) AppRand4) from (cons (car l) AppRand4)) has address 0x7f1c597557cd to 0x7f1c59755910 (bootstrap 0x7f1c59755740)
       gc table: 0x7f1c597556d0
       function: 0x7f1c59755740
         resops: 0x7f1c597557cd
       failures: 0x7f1c59755910
            end: 0x7f1c59755a8f
[3e4c097ec411dae] jit-backend-addr}
[3e4c097ec415dcf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597557f7 +0  44010000
[3e4c097ec416e80] jit-backend-dump}
[3e4c097ec41a310] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755807 +0  50010000
[3e4c097ec41b0e9] jit-backend-dump}
[3e4c097ec41e2a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975581d +0  56010000
[3e4c097ec41efbf] jit-backend-dump}
[3e4c097ec4221fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755837 +0  58010000
[3e4c097ec422f60] jit-backend-dump}
[3e4c097ec4260b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975584a +0  61010000
[3e4c097ec426e0e] jit-backend-dump}
[3e4c097ec429eea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975585e +0  69010000
[3e4c097ec42ac24] jit-backend-dump}
[3e4c097ec42de96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755880 +0  7F010000
[3e4c097ec42ebe9] jit-backend-dump}
[3e4c097ec431cec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755896 +0  85010000
[3e4c097ec432a66] jit-backend-dump}
[3e4c097ec435b45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597558a6 +0  91010000
[3e4c097ec43686a] jit-backend-dump}
[3e4c097ec439958] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597558ba +0  99010000
[3e4c097ec43a6aa] jit-backend-dump}
[3e4c097ec43e3b9] jit-backend}
[3e4c097ec44572b] {jit-log-opt-loop
# Loop 11 ((cons (car l) AppRand4) from (cons (car l) AppRand4)) : loop with 34 ops
[p0, p1]
+261: label(p0, p1, descr=TargetToken(50538640))
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (cons (car l) AppRand4)')
+280: guard_class(p0, 16499664, descr=<Guard0x2f63e80>) [p1, p0]
+299: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+303: guard_class(p3, 16499664, descr=<Guard0x3048ec0>) [p1, p0]
+315: p5 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+319: guard_nonnull_class(p5, 16471056, descr=<Guard0x2f63ee0>) [p1, p0]
+337: i7 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+341: p8 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+345: guard_nonnull_class(p8, 16471056, descr=<Guard0x2f63f40>) [p1, p0]
+363: guard_class(p1, 16435920, descr=<Guard0x3048f08>) [p1, p0]
+382: p11 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+393: guard_value(p11, ConstPtr(ptr12), descr=<Guard0x3048f50>) [p1, p0]
+402: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+406: guard_not_invalidated(descr=<Guard0x3048f98>) [p1, p0]
+406: p14 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (cons (car l) AppRand4)')
+410: label(p13, i7, p8, p14, descr=TargetToken(50538720))
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (cons (car l) AppRand4)')
+424: guard_class(p13, 16499664, descr=<Guard0x2f63fa0>) [p14, p13, p8, i7]
+436: p16 = getfield_gc_r(p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+440: guard_nonnull_class(p16, 16471056, descr=<Guard0x3078020>) [p14, p13, p8, i7]
+458: i18 = getfield_gc_i(p16, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+462: guard_class(p14, 16435920, descr=<Guard0x3048fe0>) [p14, p13, p8, i7]
+474: p20 = getfield_gc_r(p14, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+485: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x3049028>) [p14, p13, p8, i7]
+494: p22 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+498: guard_not_invalidated(descr=<Guard0x3049070>) [p14, p13, p8, i7]
+498: p23 = getfield_gc_r(p14, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (cons (car l) AppRand4)')
+502: p24 = new_with_vtable(descr=<SizeDescr 24>)
+546: setfield_gc(p24, i7, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+550: setfield_gc(p24, p8, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+554: jump(p22, i18, p24, p23, descr=TargetToken(50538720))
+576: --end of the loop--
[3e4c097ec46c560] jit-log-opt-loop}
[3e4c097ec5ef2e8] {jit-backend
[3e4c097ec635a18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755b
[3e4c097ec63bd7b] jit-backend-dump}
[3e4c097ec645c04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755bb4 +0  21000000
[3e4c097ec646f06] jit-backend-dump}
[3e4c097ec64a91b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755cd5 +0  21000000
[3e4c097ec64b7e3] jit-backend-dump}
[3e4c097ec64eab7] {jit-backend-addr
bridge out of Guard 0x2f63820 has address 0x7f1c59755bb0 to 0x7f1c59755cd0
       gc table: 0x7f1c59755b50
    jump target: 0x7f1c59755bb0
         resops: 0x7f1c59755bbe
       failures: 0x7f1c59755cd0
            end: 0x7f1c59755e0f
[3e4c097ec650d67] jit-backend-addr}
[3e4c097ec654130] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755bcb +0  44010000
[3e4c097ec654f22] jit-backend-dump}
[3e4c097ec6580f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755be2 +0  65010000
[3e4c097ec658e1a] jit-backend-dump}
[3e4c097ec65bea6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755bf8 +0  6B010000
[3e4c097ec65cbc7] jit-backend-dump}
[3e4c097ec65fc16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755c0c +0  73010000
[3e4c097ec660935] jit-backend-dump}
[3e4c097ec663965] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755c19 +0  82010000
[3e4c097ec664687] jit-backend-dump}
[3e4c097ec667698] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755c29 +0  8E010000
[3e4c097ec66846b] jit-backend-dump}
[3e4c097ec66b5ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755c41 +0  92010000
[3e4c097ec66c32c] jit-backend-dump}
[3e4c097ec66f3d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755c5c +0  93010000
[3e4c097ec670133] jit-backend-dump}
[3e4c097ec673422] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754676 +0  36150000
[3e4c097ec6741a0] jit-backend-dump}
[3e4c097ec6782ff] jit-backend}
[3e4c097ec67bd07] {jit-log-opt-bridge
# bridge out of Guard 0x2f63820 with 34 ops
[i0, p1, p2, p3, p4, i5, p6, p7]
+118: guard_true(i0, descr=<Guard0x3078080>) [i0, p1, p2, p3, p4, i5, p6, p7]
+127: guard_not_invalidated(descr=<Guard0x30490b8>) [i0, p1, p2, p3, p4, i5, p6, p7]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+127: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+131: guard_nonnull_class(p8, 16510992, descr=<Guard0x30780e0>) [i0, p1, p2, p3, p4, i5, p6, p7]
+150: p10 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+154: guard_nonnull_class(p10, 16616448, descr=<Guard0x3078140>) [i0, p1, p2, p3, p4, i5, p6, p7]
+172: p12 = getfield_gc_r(p8, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+183: guard_value(p12, ConstPtr(ptr13), descr=<Guard0x3049100>) [i0, p1, p2, p3, p4, i5, p6, p7]
+192: p14 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+196: i15 = instance_ptr_eq(p6, p14)
+199: guard_true(i15, descr=<Guard0x3049148>) [i0, p1, p2, p3, p4, i5, p6, p7]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+212: i17 = instance_ptr_eq(p10, ConstPtr(ptr16))
+215: guard_true(i17, descr=<Guard0x3049190>) [i0, p1, p2, p3, p4, i5, p6, p7]
debug_merge_point(0, 0, ''()')
debug_merge_point(0, 0, '(cons (car l4840) AppRand2) from (remove-multiples n4838 (cdr l4840))')
+221: i18 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+225: p19 = getfield_gc_r(p2, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+236: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x30491d8>) [i0, p1, p2, p3, p4, i5, p6, p7]
+245: p21 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+249: p22 = getfield_gc_r(p2, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+253: guard_nonnull_class(p22, 16471056, descr=<Guard0x30781a0>) [i0, p1, p2, p3, p4, i5, p6, p7]
+272: p24 = getfield_gc_r(p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l4840) AppRand2) from (cons (car l4840) AppRand2)')
+276: p25 = new_with_vtable(descr=<SizeDescr 32>)
+320: p26 = new_with_vtable(descr=<SizeDescr 24>)
+331: setfield_gc(p26, i18, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+335: setfield_gc(p26, ConstPtr(ptr27), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+339: setfield_gc(p25, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+343: setfield_gc(p25, p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+347: setfield_gc(p25, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+351: jump(p25, p24, descr=TargetToken(50073456))
+384: --end of the loop--
[3e4c097ec69f3e7] jit-log-opt-bridge}
[3e4c097ec8e23ef] {jit-backend
[3e4c097ec946720] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59755f
[3e4c097ec94e19f] jit-backend-dump}
[3e4c097ec957f98] {jit-backend-addr
Loop 13 ((let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)) has address 0x7f1c5975601d to 0x7f1c597561f0 (bootstrap 0x7f1c59755f90)
       gc table: 0x7f1c59755f00
       function: 0x7f1c59755f90
         resops: 0x7f1c5975601d
       failures: 0x7f1c597561f0
            end: 0x7f1c5975636f
[3e4c097ec95adf7] jit-backend-addr}
[3e4c097ec95ef1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756034 +0  E7010000
[3e4c097ec96013c] jit-backend-dump}
[3e4c097ec9635f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975604a +0  ED010000
[3e4c097ec964420] jit-backend-dump}
[3e4c097ec9679c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975605d +0  12020000
[3e4c097ec9687ab] jit-backend-dump}
[3e4c097ec96b97e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756073 +0  18020000
[3e4c097ec96c70e] jit-backend-dump}
[3e4c097ec96fa5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756083 +0  24020000
[3e4c097ec9707e0] jit-backend-dump}
[3e4c097ec97383e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975609d +0  26020000
[3e4c097ec97458b] jit-backend-dump}
[3e4c097ec97761a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597560ad +0  32020000
[3e4c097ec978329] jit-backend-dump}
[3e4c097ec97b366] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597560ba +0  41020000
[3e4c097ec97c09a] jit-backend-dump}
[3e4c097ec97f0dc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597560eb +0  2C020000
[3e4c097ec97fe01] jit-backend-dump}
[3e4c097ec982e59] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756126 +0  0D020000
[3e4c097ec983b87] jit-backend-dump}
[3e4c097ec986c0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756143 +0  0C020000
[3e4c097ec987950] jit-backend-dump}
[3e4c097ec98b491] jit-backend}
[3e4c097ec98eedd] {jit-log-opt-loop
# Loop 13 ((let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)) : entry bridge with 55 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)')
+293: guard_class(p1, 16435920, descr=<Guard0x3078200>) [p0, p1]
+312: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+316: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3078260>) [p0, p1]
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
+334: guard_not_invalidated(descr=<Guard0x3049220>) [p0, p1]
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
+334: guard_class(p0, 16499664, descr=<Guard0x3049268>) [p0, p1]
+353: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+357: guard_nonnull_class(p6, 16471056, descr=<Guard0x30782c0>) [p0, p1]
+382: i9 = instance_ptr_eq(p6, ConstPtr(ptr8))
+385: guard_false(i9, descr=<Guard0x30492b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)))')
debug_merge_point(0, 0, '(remove-multiples (car l) (cdr l))')
+391: i10 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+395: p11 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+399: guard_nonnull_class(p11, 16471056, descr=<Guard0x3078320>) [p0, p1]
+417: p13 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+421: guard_class(p13, 16505296, descr=<Guard0x30492f8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))')
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+433: i15 = getfield_gc_i(p11, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+437: i16 = int_is_zero(i10)
+440: guard_false(i16, descr=<Guard0x3049340>) [p0, p1]
+446: i18 = int_eq(i15, -9223372036854775808)
+469: i20 = int_eq(i10, -1)
+483: i21 = int_and(i18, i20)
+486: guard_false(i21, descr=<Guard0x3049388>) [p0, p1]
+495: i23 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i15, i10, descr=<Calli 8 ii EF=0 OS=14>)
+531: i25 = int_eq(i23, 0)
guard_false(i25, descr=<Guard0x3078380>) [i25, p1, p0, p11, i10, p3]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+554: p26 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+565: guard_nonnull_class(p26, 16471056, descr=<Guard0x30783e0>) [i25, p1, p0, p11, i10, p3]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+583: p28 = new_with_vtable(descr=<SizeDescr 32>)
+624: p29 = new_with_vtable(descr=<SizeDescr 48>)
+635: p30 = new_with_vtable(descr=<SizeDescr 40>)
+646: setfield_gc(p30, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+650: setfield_gc(p30, p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+654: setfield_gc(p30, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+665: setfield_gc(p30, ConstPtr(ptr31), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+669: setfield_gc(p29, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+680: setfield_gc(p28, ConstPtr(ptr32), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+684: setfield_gc(p28, i10, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+688: setfield_gc(p28, p26, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+699: setfield_gc(p29, ConstPtr(ptr33), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+703: setfield_gc(p29, p30, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+714: setfield_gc(p29, ConstPtr(ptr34), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+718: setfield_gc(p29, p11, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+722: jump(p28, p29, descr=TargetToken(50073296))
+752: --end of the loop--
[3e4c097ec9c0107] jit-log-opt-loop}
[3e4c097ecb129e2] {jit-backend
[3e4c097ecb63ef2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097ecb6bc6b] jit-backend-dump}
[3e4c097ecb759c1] {jit-backend-addr
Loop 14 ((if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))) has address 0x7f1c5975659d to 0x7f1c59756760 (bootstrap 0x7f1c59756510)
       gc table: 0x7f1c59756480
       function: 0x7f1c59756510
         resops: 0x7f1c5975659d
       failures: 0x7f1c59756760
            end: 0x7f1c59756917
[3e4c097ecb7866e] jit-backend-addr}
[3e4c097ecb7c514] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597565b4 +0  D7010000
[3e4c097ecb7d67c] jit-backend-dump}
[3e4c097ecb8092c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597565ca +0  DD010000
[3e4c097ecb8170e] jit-backend-dump}
[3e4c097ecb8489e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597565da +0  E9010000
[3e4c097ecb855f1] jit-backend-dump}
[3e4c097ecb8875c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597565ed +0  F2010000
[3e4c097ecb894c4] jit-backend-dump}
[3e4c097ecb8c53e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756603 +0  F8010000
[3e4c097ecb8d284] jit-backend-dump}
[3e4c097ecb9043f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756614 +0  1F020000
[3e4c097ecb9117c] jit-backend-dump}
[3e4c097ecb94172] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756645 +0  0A020000
[3e4c097ecb94ea0] jit-backend-dump}
[3e4c097ecb97ee9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975667b +0  F0010000
[3e4c097ecb98c26] jit-backend-dump}
[3e4c097ecb9bbe2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975668c +0  FB010000
[3e4c097ecb9c8d6] jit-backend-dump}
[3e4c097ecb9f876] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597566a7 +0  FC010000
[3e4c097ecba059e] jit-backend-dump}
[3e4c097ecba3582] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597566be +0  01020000
[3e4c097ecba426f] jit-backend-dump}
[3e4c097ecba71f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597566d2 +0  09020000
[3e4c097ecba7f13] jit-backend-dump}
[3e4c097ecbaaef4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597566df +0  18020000
[3e4c097ecbaf17b] jit-backend-dump}
[3e4c097ecbb36ff] jit-backend}
[3e4c097ecbb7290] {jit-log-opt-loop
# Loop 14 ((if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))) : entry bridge with 51 ops
[p0, p1]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))')
+293: guard_class(p0, 16504240, descr=<Guard0x3078440>) [p1, p0]
+312: p3 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+316: guard_nonnull_class(p3, 16471056, descr=<Guard0x30784a0>) [p1, p0]
+341: i6 = instance_ptr_eq(p3, ConstPtr(ptr5))
+344: guard_false(i6, descr=<Guard0x30493d0>) [p1, p0]
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
+350: guard_class(p1, 16435920, descr=<Guard0x3049418>) [p1, p0]
+369: p8 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+373: guard_nonnull_class(p8, ConstClass(ForwardLink), descr=<Guard0x3078500>) [p1, p0]
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+391: guard_not_invalidated(descr=<Guard0x3049460>) [p1, p0]
+391: i10 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+395: i11 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+399: i12 = int_is_zero(i11)
+402: guard_false(i12, descr=<Guard0x30494a8>) [p1, p0]
+408: i14 = int_eq(i10, -9223372036854775808)
+431: i16 = int_eq(i11, -1)
+445: i17 = int_and(i14, i16)
+448: guard_false(i17, descr=<Guard0x30494f0>) [p1, p0]
+457: i19 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i10, i11, descr=<Calli 8 ii EF=0 OS=14>)
+488: i21 = int_eq(i19, 0)
guard_false(i21, descr=<Guard0x3078560>) [p0, i21, p1, p8]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
+511: p22 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+516: guard_class(p22, 16499664, descr=<Guard0x3049538>) [p0, i21, p1, p8]
+528: p24 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+532: p25 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+536: guard_nonnull_class(p25, 16510992, descr=<Guard0x30785c0>) [p0, i21, p1, p8]
+555: p27 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+559: guard_nonnull_class(p27, 16471056, descr=<Guard0x3078620>) [p0, i21, p1, p8]
+578: p29 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+589: guard_value(p29, ConstPtr(ptr30), descr=<Guard0x3049580>) [p0, i21, p1, p8]
+598: p31 = getfield_gc_r(p25, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+602: i32 = instance_ptr_eq(p22, p31)
+605: guard_true(i32, descr=<Guard0x30495c8>) [p0, i21, p1, p8]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+611: p33 = new_with_vtable(descr=<SizeDescr 32>)
+652: p34 = new_with_vtable(descr=<SizeDescr 48>)
+663: setfield_gc(p33, p27, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+667: setfield_gc(p34, p8, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+671: setfield_gc(p33, i11, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+675: setfield_gc(p33, p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+679: setfield_gc(p34, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+683: setfield_gc(p34, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+694: setfield_gc(p34, ConstPtr(ptr35), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+698: setfield_gc(p34, p3, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+702: jump(p33, p34, descr=TargetToken(50073296))
+736: --end of the loop--
[3e4c097ecbe5ce4] jit-log-opt-loop}
[3e4c097eccd3293] {jit-backend
[3e4c097ecd0ede8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756a10 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C4201000048FF042560B59B028139F01B01000F85000000004C8B79184D85FF0F84000000004C8B355AFFFFFF4D39F70F85000000004C8BBD3801000041813F101100000F85000000004D8B6F204C8B254AFFFFFF4D39E50F85000000004D8B67104D8B6F1841817D00101100000F85000000004D8B55084983FA01720741813A900F00000F850000000041813C24100A01000F85000000004D8B5424084C8B0D2AFFFFFF4D39CA0F85000000004D8B4C24104983F9017207418139509A00000F85000000004D8B61084D8B4D204C8B1512FFFFFF4D39D10F85000000004D8B55104D8B4D18488B0C25F091F900488D5130483B14251092F9000F876D00000048891425F091F90048C701100A0100488D511848C702509A00004C8962084C8972104C8951084889511048898D300100004C898D3801000049BBE05775591C7F000041FFE3669048C7442408FFFFFF0049BB286975591C7F00004C895D204D8D9BC8A9FFFF41FFD3E998FEFFFF49BBF86975591C7F00004C895D204D8D9BF8B0FFFF41FFD3E97EFFFFFFFF35E7FDFFFF49BB386975591C7F000041534D8D9BC8A6FFFF41FFE3FF35D3FDFFFF49BB486975591C7F000041534D8D9BB8A6FFFF41FFE3FF35C7FDFFFF49BB586975591C7F000041534D8D9BA8A6FFFF41FFE3FF35B3FDFFFF49BB686975591C7F000041534D8D9B98A6FFFF41FFE3FF35A7FDFFFF49BB786975591C7F000041534D8D9B88A6FFFF41FFE3FF3593FDFFFF49BB886975591C7F000041534D8D9B78A6FFFF41FFE3FF357FFDFFFF49BB986975591C7F000041534D8D9B68A6FFFF41FFE3FF356BFDFFFF49BBA86975591C7F000041534D8D9B58A6FFFF41FFE3FF3557FDFFFF49BBB86975591C7F000041534D8D9B48A6FFFF41FFE3FF354BFDFFFF49BBC86975591C7F000041534D8D9B38A6FFFF41FFE3FF3537FDFFFF49BBD86975591C7F000041534D8D9B28A6FFFF41FFE3FF352BFDFFFF49BBE86975591C7F000041534D8D9B18A6FFFF41FFE3
[3e4c097ecd15f71] jit-backend-dump}
[3e4c097ecd1fc7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756a94 +0  1E000000
[3e4c097ecd20f84] jit-backend-dump}
[3e4c097ecd24a6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756be5 +0  1E000000
[3e4c097ecd258d5] jit-backend-dump}
[3e4c097ecd28a62] {jit-backend-addr
bridge out of Guard 0x30784a0 has address 0x7f1c59756a90 to 0x7f1c59756be0
       gc table: 0x7f1c59756a10
    jump target: 0x7f1c59756a90
         resops: 0x7f1c59756a9e
       failures: 0x7f1c59756be0
            end: 0x7f1c59756d73
[3e4c097ecd2ac91] jit-backend-addr}
[3e4c097ecd2e057] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756aae +0  71010000
[3e4c097ecd2ee98] jit-backend-dump}
[3e4c097ecd32047] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756abb +0  80010000
[3e4c097ecd32d62] jit-backend-dump}
[3e4c097ecd35dca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756acb +0  8C010000
[3e4c097ecd36adc] jit-backend-dump}
[3e4c097ecd39afa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756adf +0  94010000
[3e4c097ecd3a822] jit-backend-dump}
[3e4c097ecd3d7f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756af3 +0  9C010000
[3e4c097ecd3e502] jit-backend-dump}
[3e4c097ecd415d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756b09 +0  BE010000
[3e4c097ecd42315] jit-backend-dump}
[3e4c097ecd45317] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756b20 +0  C3010000
[3e4c097ecd46064] jit-backend-dump}
[3e4c097ecd49072] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756b2e +0  D1010000
[3e4c097ecd49db6] jit-backend-dump}
[3e4c097ecd4cd5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756b43 +0  D8010000
[3e4c097ecd4daa6] jit-backend-dump}
[3e4c097ecd50a52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756b5b +0  DC010000
[3e4c097ecd5176e] jit-backend-dump}
[3e4c097ecd5472a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756b73 +0  E0010000
[3e4c097ecd55464] jit-backend-dump}
[3e4c097ecd58665] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597565ca +0  C2040000
[3e4c097ecd5939c] jit-backend-dump}
[3e4c097ecd5d330] jit-backend}
[3e4c097ecd60cc2] {jit-log-opt-bridge
# bridge out of Guard 0x30784a0 with 41 ops
[p0, p1]
+150: guard_class(p1, 16504240, descr=<Guard0x3078680>) [p0, p1]
+162: p3 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+166: guard_nonnull(p3, descr=<Guard0x3049610>) [p0, p1]
+182: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+185: guard_true(i5, descr=<Guard0x3049658>) [p0, p1]
debug_merge_point(0, 0, ''()')
+191: guard_class(p0, 16435920, descr=<Guard0x30496a0>) [p0, p1]
+211: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+222: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x30496e8>) [p0, p1]
+231: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+235: guard_not_invalidated(descr=<Guard0x3049730>) [p0, p1]
+235: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)) from (remove-multiples (car l) (cdr l))')
+239: guard_class(p10, 16435920, descr=<Guard0x3049778>) [p0, p1]
+253: p12 = getfield_gc_r(p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+257: guard_nonnull_class(p12, ConstClass(ForwardLink), descr=<Guard0x30786e0>) [p0, p1]
debug_merge_point(0, 0, '(sieve AppRand3)')
+276: guard_class(p9, 16499664, descr=<Guard0x30497c0>) [p0, p1]
+290: p15 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+302: i17 = instance_ptr_eq(p15, ConstPtr(ptr16))
+305: guard_true(i17, descr=<Guard0x3049808>) [p0, p1]
debug_merge_point(0, 0, '(let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)')
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
debug_merge_point(0, 0, ''()')
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (sieve AppRand3)')
+311: p18 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+316: guard_nonnull_class(p18, 16471056, descr=<Guard0x3078740>) [p0, p1]
+335: i20 = getfield_gc_i(p18, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+339: p21 = getfield_gc_r(p10, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+350: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x3049850>) [p0, p1]
+359: p23 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+363: p24 = getfield_gc_r(p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (cons (car l) AppRand4)')
+367: p25 = new_with_vtable(descr=<SizeDescr 24>)
+408: p26 = new_with_vtable(descr=<SizeDescr 24>)
+419: setfield_gc(p26, i20, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+423: setfield_gc(p26, ConstPtr(ptr27), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+427: setfield_gc(p25, p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+431: setfield_gc(p25, p26, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+435: jump(p25, p24, descr=TargetToken(50538640))
+464: --end of the loop--
[3e4c097ecd867ae] jit-log-opt-bridge}
[3e4c097ecfbcbcc] {jit-backend
[3e4c097ecff8ab3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756e
[3e4c097ecffede6] jit-backend-dump}
[3e4c097ed008d16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756ec4 +0  1E000000
[3e4c097ed00a114] jit-backend-dump}
[3e4c097ed00def2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756ff5 +0  1E000000
[3e4c097ed00ed7d] jit-backend-dump}
[3e4c097ed0121d0] {jit-backend-addr
bridge out of Guard 0x3078320 has address 0x7f1c59756ec0 to 0x7f1c59756ff0
       gc table: 0x7f1c59756e50
    jump target: 0x7f1c59756ec0
         resops: 0x7f1c59756ece
       failures: 0x7f1c59756ff0
            end: 0x7f1c59757167
[3e4c097ed01449e] jit-backend-addr}
[3e4c097ed0179e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756ede +0  51010000
[3e4c097ed018808] jit-backend-dump}
[3e4c097ed01b995] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756ef5 +0  56010000
[3e4c097ed01c70c] jit-backend-dump}
[3e4c097ed01f7f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756f01 +0  82010000
[3e4c097ed020540] jit-backend-dump}
[3e4c097ed023622] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756f18 +0  87010000
[3e4c097ed024347] jit-backend-dump}
[3e4c097ed02739c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756f28 +0  93010000
[3e4c097ed0280b7] jit-backend-dump}
[3e4c097ed02b134] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756f44 +0  93010000
[3e4c097ed02be74] jit-backend-dump}
[3e4c097ed02ee98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756f55 +0  9E010000
[3e4c097ed02fbd5] jit-backend-dump}
[3e4c097ed032cc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756f5e +0  B1010000
[3e4c097ed0339f4] jit-backend-dump}
[3e4c097ed036a0c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756f6e +0  BD010000
[3e4c097ed037749] jit-backend-dump}
[3e4c097ed03a792] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59756f82 +0  C5010000
[3e4c097ed03b4b6] jit-backend-dump}
[3e4c097ed03e77e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975609d +0  1F0E0000
[3e4c097ed03f517] jit-backend-dump}
[3e4c097ed043734] jit-backend}
[3e4c097ed047174] {jit-log-opt-bridge
# bridge out of Guard 0x3078320 with 43 ops
[p0, p1]
+134: guard_class(p1, 16435920, descr=<Guard0x30787a0>) [p0, p1]
+146: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+150: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3078800>) [p0, p1]
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
+169: guard_not_invalidated(descr=<Guard0x3049898>) [p0, p1]
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
+169: guard_class(p0, 16499664, descr=<Guard0x30498e0>) [p0, p1]
+181: p6 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+185: guard_nonnull_class(p6, 16471056, descr=<Guard0x3078860>) [p0, p1]
+211: i9 = instance_ptr_eq(p6, ConstPtr(ptr8))
+214: guard_false(i9, descr=<Guard0x3049928>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)))')
debug_merge_point(0, 0, '(remove-multiples (car l) (cdr l))')
+220: i10 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+224: p11 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+228: guard_nonnull_class(p11, 16616448, descr=<Guard0x30788c0>) [p0, p1]
+248: p13 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+252: guard_class(p13, 16505296, descr=<Guard0x3049970>) [p0, p1]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))')
+265: i16 = instance_ptr_eq(p11, ConstPtr(ptr15))
+268: guard_true(i16, descr=<Guard0x30499b8>) [p0, p1]
debug_merge_point(0, 0, ''()')
debug_merge_point(0, 0, '(let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)) from (remove-multiples (car l) (cdr l))')
debug_merge_point(0, 0, '(sieve AppRand3)')
+281: i18 = instance_ptr_eq(p13, ConstPtr(ptr17))
+284: guard_true(i18, descr=<Guard0x3049a00>) [p0, p1]
debug_merge_point(0, 0, '(let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)')
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
debug_merge_point(0, 0, ''()')
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (sieve AppRand3)')
+290: p19 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+301: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3049a48>) [p0, p1]
+310: p21 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+314: p22 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (cons (car l) AppRand4)')
+318: p23 = new_with_vtable(descr=<SizeDescr 24>)
+359: p24 = new_with_vtable(descr=<SizeDescr 24>)
+370: setfield_gc(p24, i10, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+374: setfield_gc(p24, ConstPtr(ptr25), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+378: setfield_gc(p23, p24, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+382: setfield_gc(p23, p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+386: jump(p23, p22, descr=TargetToken(50538640))
+416: --end of the loop--
[3e4c097ed06b3e4] jit-log-opt-bridge}
[3e4c097ed259cf6] {jit-backend
[3e4c097ed298dbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097ed29e3b2] jit-backend-dump}
[3e4c097ed2a8373] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757244 +0  21000000
[3e4c097ed2a9663] jit-backend-dump}
[3e4c097ed2ad26b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757365 +0  21000000
[3e4c097ed2ae0fb] jit-backend-dump}
[3e4c097ed2b14bb] {jit-backend-addr
bridge out of Guard 0x2f638e0 has address 0x7f1c59757240 to 0x7f1c59757360
       gc table: 0x7f1c59757200
    jump target: 0x7f1c59757240
         resops: 0x7f1c5975724e
       failures: 0x7f1c59757360
            end: 0x7f1c5975744b
[3e4c097ed2b382c] jit-backend-addr}
[3e4c097ed2b6c01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975725b +0  44010000
[3e4c097ed2b7a88] jit-backend-dump}
[3e4c097ed2bad56] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757276 +0  61010000
[3e4c097ed2bbada] jit-backend-dump}
[3e4c097ed2bed3d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975728c +0  67010000
[3e4c097ed2bfa15] jit-backend-dump}
[3e4c097ed2c2c26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597572a0 +0  6F010000
[3e4c097ed2c3938] jit-backend-dump}
[3e4c097ed2c6b2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597572ad +0  7E010000
[3e4c097ed2c7833] jit-backend-dump}
[3e4c097ed2cac9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975473b +0  012B0000
[3e4c097ed2cba09] jit-backend-dump}
[3e4c097ed2cfc66] jit-backend}
[3e4c097ed2d3521] {jit-log-opt-bridge
# bridge out of Guard 0x2f638e0 with 34 ops
[i0, p1, p2, p3, p4, i5, p6, p7]
+86: guard_false(i0, descr=<Guard0x3078920>) [i0, p2, p3, p4, p1, i5, p6, p7]
+95: guard_not_invalidated(descr=<Guard0x3049a90>) [i0, p2, p3, p4, p1, i5, p6, p7]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
+95: p8 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+99: p9 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+103: guard_nonnull_class(p9, 16510992, descr=<Guard0x3078980>) [i0, p2, p3, p4, p1, i5, p6, p7]
+122: p11 = getfield_gc_r(p1, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+126: guard_nonnull_class(p11, 16616448, descr=<Guard0x30789e0>) [i0, p2, p3, p4, p1, i5, p6, p7]
+144: p13 = getfield_gc_r(p9, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+155: guard_value(p13, ConstPtr(ptr14), descr=<Guard0x3049ad8>) [i0, p2, p3, p4, p1, i5, p6, p7]
+164: p15 = getfield_gc_r(p9, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+168: i16 = instance_ptr_eq(p6, p15)
+171: guard_true(i16, descr=<Guard0x3049b20>) [i0, p2, p3, p4, p1, i5, p6, p7]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+177: p17 = new_with_vtable(descr=<SizeDescr 32>)
+228: p18 = new_with_vtable(descr=<SizeDescr 48>)
+239: p19 = new_with_vtable(descr=<SizeDescr 48>)
+250: setfield_gc(p19, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+254: setfield_gc(p19, p4, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+258: setfield_gc(p19, p3, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+269: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+273: setfield_gc(p19, p2, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+277: setfield_gc(p17, p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: setfield_gc(p17, i5, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+292: setfield_gc(p17, p11, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+296: setfield_gc(p18, p7, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: setfield_gc(p18, p8, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+304: setfield_gc(p18, p19, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+308: setfield_gc(p18, ConstPtr(ptr21), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+312: setfield_gc(p18, p1, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+316: jump(p17, p18, descr=TargetToken(50073296))
+352: --end of the loop--
[3e4c097ed2f3ad3] jit-log-opt-bridge}
[3e4c097ed4ad25a] {jit-backend
[3e4c097ed506bd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097ed50d3f9] jit-backend-dump}
[3e4c097ed516e99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597575a4 +0  21000000
[3e4c097ed5181a2] jit-backend-dump}
[3e4c097ed51be2d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757775 +0  21000000
[3e4c097ed51cc25] jit-backend-dump}
[3e4c097ed51ff89] {jit-backend-addr
bridge out of Guard 0x30483c8 has address 0x7f1c597575a0 to 0x7f1c59757770
       gc table: 0x7f1c59757520
    jump target: 0x7f1c597575a0
         resops: 0x7f1c597575ae
       failures: 0x7f1c59757770
            end: 0x7f1c597578cb
[3e4c097ed522333] jit-backend-addr}
[3e4c097ed525a52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597575be +0  F1010000
[3e4c097ed526853] jit-backend-dump}
[3e4c097ed529c0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597575ce +0  FD010000
[3e4c097ed52a990] jit-backend-dump}
[3e4c097ed52db7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597575e2 +0  05020000
[3e4c097ed52e8c2] jit-backend-dump}
[3e4c097ed531c6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597575f4 +0  2B020000
[3e4c097ed5329b9] jit-backend-dump}
[3e4c097ed535b67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975760b +0  30020000
[3e4c097ed53685b] jit-backend-dump}
[3e4c097ed539980] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757614 +0  43020000
[3e4c097ed53a658] jit-backend-dump}
[3e4c097ed53d780] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757645 +0  2E020000
[3e4c097ed53e465] jit-backend-dump}
[3e4c097ed54168e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757676 +0  19020000
[3e4c097ed542378] jit-backend-dump}
[3e4c097ed5455a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757688 +0  23020000
[3e4c097ed5462a1] jit-backend-dump}
[3e4c097ed549608] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59753a64 +0  383B0000
[3e4c097ed54a321] jit-backend-dump}
[3e4c097ed54e42a] jit-backend}
[3e4c097ed551e67] {jit-log-opt-bridge
# bridge out of Guard 0x30483c8 with 60 ops
[p0, p1, p2, i3]
+150: guard_class(p1, 16503888, descr=<Guard0x3078a40>) [p0, p1, p2, i3]
+162: i5 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+166: guard_class(p0, 16435920, descr=<Guard0x3049b68>) [p0, p1, p2, i3]
+178: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+189: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x3049bb0>) [p0, p1, p2, i3]
+198: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+198: guard_not_invalidated(descr=<Guard0x3049bf8>) [p0, p1, p2, i3]
+198: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(sieve AppRand5)')
debug_merge_point(0, 0, '(let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand5)')
+202: guard_class(p10, 16435208, descr=<Guard0x3049c40>) [p0, p1, p2, i3]
+216: p12 = getfield_gc_r(p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+220: guard_nonnull_class(p12, ConstClass(ForwardLink), descr=<Guard0x3078aa0>) [p0, p1, p2, i3]
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
debug_merge_point(0, 0, '(let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)))')
debug_merge_point(0, 0, '(remove-multiples (car l) (cdr l))')
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))')
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+239: i14 = int_is_zero(i5)
+242: guard_false(i14, descr=<Guard0x3049c88>) [p0, p1, p2, i3]
+248: i16 = int_eq(i3, -9223372036854775808)
+271: i18 = int_eq(i5, -1)
+285: i19 = int_and(i16, i18)
+288: guard_false(i19, descr=<Guard0x3049cd0>) [p0, p1, p2, i3]
+297: i21 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i3, i5, descr=<Calli 8 ii EF=0 OS=14>)
+324: i23 = int_eq(i21, 0)
guard_false(i23, descr=<Guard0x3078b00>) [i23, p10, i5, p12, p2, i3]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+346: guard_nonnull_class(p2, 16471056, descr=<Guard0x3078b60>) [i23, p10, i5, p12, p2, i3]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+364: p25 = new_with_vtable(descr=<SizeDescr 32>)
+408: p26 = new_with_vtable(descr=<SizeDescr 48>)
+419: p27 = new_with_vtable(descr=<SizeDescr 40>)
+430: setfield_gc(p27, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+434: p28 = new_with_vtable(descr=<SizeDescr 24>)
+452: setfield_gc(p28, ConstPtr(ptr29), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+456: p30 = new_with_vtable(descr=<SizeDescr 24>)
+467: setfield_gc(p30, i5, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+471: p31 = new_with_vtable(descr=<SizeDescr 24>)
+482: setfield_gc(p31, i3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+486: setfield_gc(p31, p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+490: setfield_gc(p30, p31, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+494: setfield_gc(p28, p30, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+498: setfield_gc(p27, p28, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+502: setfield_gc(p27, p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+513: setfield_gc(p27, ConstPtr(ptr32), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+524: setfield_gc(p26, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+528: setfield_gc(p26, ConstPtr(ptr34), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+532: setfield_gc(p26, p27, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+536: setfield_gc(p26, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+547: setfield_gc(p25, ConstPtr(ptr35), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+551: setfield_gc(p25, i5, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+555: setfield_gc(p25, p2, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+559: setfield_gc(p26, p31, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+563: jump(p25, p26, descr=TargetToken(50073296))
+592: --end of the loop--
[3e4c097ed582a51] jit-log-opt-bridge}
[3e4c097ed6f051e] {jit-backend
[3e4c097ed756574] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597579f
[3e4c097ed75e21a] jit-backend-dump}
[3e4c097ed767e85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757a94 +0  21000000
[3e4c097ed76922a] jit-backend-dump}
[3e4c097ed76cc32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757cf5 +0  21000000
[3e4c097ed76daf1] jit-backend-dump}
[3e4c097ed770eae] {jit-backend-addr
bridge out of Guard 0x2fe1e38 has address 0x7f1c59757a90 to 0x7f1c59757cf0
       gc table: 0x7f1c597579f0
    jump target: 0x7f1c59757a90
         resops: 0x7f1c59757a9e
       failures: 0x7f1c59757cf0
            end: 0x7f1c59757ed7
[3e4c097ed7730dd] jit-backend-addr}
[3e4c097ed776517] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757aae +0  81020000
[3e4c097ed7773ae] jit-backend-dump}
[3e4c097ed77a6f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757ac5 +0  86020000
[3e4c097ed77b4a5] jit-backend-dump}
[3e4c097ed77e78b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757ae0 +0  87020000
[3e4c097ed77f540] jit-backend-dump}
[3e4c097ed782769] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757aec +0  97020000
[3e4c097ed7834d4] jit-backend-dump}
[3e4c097ed78666a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757b00 +0  9F020000
[3e4c097ed787431] jit-backend-dump}
[3e4c097ed78a70e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757b15 +0  C2020000
[3e4c097ed78b4d5] jit-backend-dump}
[3e4c097ed78e6ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757b2c +0  C7020000
[3e4c097ed78f447] jit-backend-dump}
[3e4c097ed7925ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757b3a +0  D5020000
[3e4c097ed793383] jit-backend-dump}
[3e4c097ed7964f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757b4e +0  DD020000
[3e4c097ed797296] jit-backend-dump}
[3e4c097ed79a43f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757b5b +0  EC020000
[3e4c097ed79b1bc] jit-backend-dump}
[3e4c097ed79e3bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757b68 +0  FB020000
[3e4c097ed79f162] jit-backend-dump}
[3e4c097ed7a230e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757b97 +0  E8020000
[3e4c097ed7a30b9] jit-backend-dump}
[3e4c097ed7a62b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757bd9 +0  C2020000
[3e4c097ed7a7019] jit-backend-dump}
[3e4c097ed7aa1a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757bef +0  C8020000
[3e4c097ed7aaef9] jit-backend-dump}
[3e4c097ed7ae37c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975316a +0  22490000
[3e4c097ed7af1d3] jit-backend-dump}
[3e4c097ed7b3397] jit-backend}
[3e4c097ed7b6f52] {jit-log-opt-bridge
# bridge out of Guard 0x2fe1e38 with 74 ops
[p0, p1]
+182: guard_class(p1, 16500016, descr=<Guard0x3078bc0>) [p0, p1]
+194: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p3, 16471056, descr=<Guard0x3078c20>) [p0, p1]
+217: i5 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+221: p6 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize2.inst__vals_1 24 pure>)
+225: guard_nonnull_class(p6, 16471056, descr=<Guard0x3078c80>) [p0, p1]
+244: guard_class(p0, 16435920, descr=<Guard0x3049d18>) [p0, p1]
+256: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+267: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3049d60>) [p0, p1]
+276: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+280: guard_not_invalidated(descr=<Guard0x3049da8>) [p0, p1]
+280: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)) from (cons (car l4840) AppRand2)')
+284: guard_class(p12, 16435920, descr=<Guard0x3049df0>) [p0, p1]
+297: p14 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+301: guard_nonnull_class(p14, ConstClass(ForwardLink), descr=<Guard0x3078ce0>) [p0, p1]
debug_merge_point(0, 0, '(sieve AppRand3)')
+320: guard_class(p11, 16499664, descr=<Guard0x3049e38>) [p0, p1]
+334: p17 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+345: i19 = instance_ptr_eq(p17, ConstPtr(ptr18))
+348: guard_true(i19, descr=<Guard0x3049e80>) [p0, p1]
debug_merge_point(0, 0, '(let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)')
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
debug_merge_point(0, 0, '(let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)))')
debug_merge_point(0, 0, '(remove-multiples (car l) (cdr l))')
+354: guard_class(p17, 16505296, descr=<Guard0x3049ec8>) [p0, p1]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))')
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+367: i21 = getfield_gc_i(p6, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+371: i22 = int_is_zero(i5)
+374: guard_false(i22, descr=<Guard0x3090068>) [p0, p1]
+380: i24 = int_eq(i21, -9223372036854775808)
+402: i26 = int_eq(i5, -1)
+415: i27 = int_and(i24, i26)
+418: guard_false(i27, descr=<Guard0x3090020>) [p0, p1]
+427: i29 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i21, i5, descr=<Calli 8 ii EF=0 OS=14>)
+471: i31 = int_eq(i29, 0)
guard_false(i31, descr=<Guard0x3078e00>) [i31, p12, p11, p17, p6, i5, p14]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+493: p32 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+497: guard_nonnull_class(p32, 16616448, descr=<Guard0x3078da0>) [i31, p12, p11, p17, p6, i5, p14]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+515: p34 = new_with_vtable(descr=<SizeDescr 32>)
+559: p35 = new_with_vtable(descr=<SizeDescr 48>)
+570: p36 = new_with_vtable(descr=<SizeDescr 40>)
+581: setfield_gc(p36, p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+592: p37 = new_with_vtable(descr=<SizeDescr 24>)
+603: setfield_gc(p37, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+607: p38 = new_with_vtable(descr=<SizeDescr 24>)
+618: setfield_gc(p38, i5, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+622: setfield_gc(p38, p6, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+626: setfield_gc(p37, p38, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+630: setfield_gc(p36, p37, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+634: p39 = new_with_vtable(descr=<SizeDescr 40>)
+645: setfield_gc(p39, p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+649: setfield_gc(p39, p11, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+653: setfield_gc(p39, p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+671: setfield_gc(p39, ConstPtr(ptr40), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+675: setfield_gc(p36, p39, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+679: setfield_gc(p36, ConstPtr(ptr41), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+690: setfield_gc(p35, ConstPtr(ptr42), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+694: setfield_gc(p35, ConstPtr(ptr43), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+705: setfield_gc(p35, p36, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+709: setfield_gc(p35, p14, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+720: setfield_gc(p34, ConstPtr(ptr44), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+724: setfield_gc(p34, i5, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+728: setfield_gc(p34, p32, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+732: setfield_gc(p35, p6, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+736: jump(p34, p35, descr=TargetToken(50073296))
+768: --end of the loop--
[3e4c097ed8b1a7d] jit-log-opt-bridge}
[3e4c097ed94e1a2] {jit-backend
[3e4c097ed97b019] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757f
[3e4c097ed97f298] jit-backend-dump}
[3e4c097ed988ce8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757f64 +0  21000000
[3e4c097ed98a05c] jit-backend-dump}
[3e4c097ed98dc67] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758015 +0  21000000
[3e4c097ed98eb4d] jit-backend-dump}
[3e4c097ed991e21] {jit-backend-addr
bridge out of Guard 0x30481d0 has address 0x7f1c59757f60 to 0x7f1c59758010
       gc table: 0x7f1c59757f30
    jump target: 0x7f1c59757f60
         resops: 0x7f1c59757f6e
       failures: 0x7f1c59758010
            end: 0x7f1c597580a7
[3e4c097ed994133] jit-backend-addr}
[3e4c097ed9976ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757f7b +0  F0000000
[3e4c097ed99853c] jit-backend-dump}
[3e4c097ed99b884] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59757f93 +0  F4000000
[3e4c097ed99c5b8] jit-backend-dump}
[3e4c097ed99fa0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975360d +0  4F490000
[3e4c097ed9a073f] jit-backend-dump}
[3e4c097ed9a4820] jit-backend}
[3e4c097ed9a81e3] {jit-log-opt-bridge
# bridge out of Guard 0x30481d0 with 19 ops
[p0, p1, i2, i3, p4, p5]
+70: guard_not_invalidated(descr=<Guard0x3078e60>) [p0, p1, i2, i3, p4, p5]
+70: i6 = int_gt(i3, i2)
+73: guard_true(i6, descr=<Guard0x3090140>) [p0, p1, i2, i3, p4, p5]
debug_merge_point(0, 0, '(if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))')
debug_merge_point(0, 0, ''()')
debug_merge_point(0, 0, '(cons m AppRand1) from (> m n)')
+79: i7 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed11.inst_vals_fixed_0 16 pure>)
+83: p8 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+94: guard_value(p8, ConstPtr(ptr9), descr=<Guard0x3090188>) [p0, p1, i2, i3, p4, p5]
+103: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+107: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons m AppRand1) from (cons m AppRand1)')
+111: p12 = new_with_vtable(descr=<SizeDescr 24>)
+152: p13 = new_with_vtable(descr=<SizeDescr 24>)
+163: setfield_gc(p13, i7, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+174: setfield_gc(p13, ConstPtr(ptr14), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+178: setfield_gc(p12, p10, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+182: setfield_gc(p12, p13, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+186: jump(p12, p11, descr=TargetToken(50538480))
+224: --end of the loop--
[3e4c097ed9bb5c0] jit-log-opt-bridge}
[3e4c097edb917bc] {jit-backend
[3e4c097edbcdd6a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597581c
[3e4c097edbd43c4] jit-backend-dump}
[3e4c097edbde662] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758254 +0  1E000000
[3e4c097edbdf903] jit-backend-dump}
[3e4c097edbe34c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597583b5 +0  1E000000
[3e4c097edbe4336] jit-backend-dump}
[3e4c097edbe75b2] {jit-backend-addr
bridge out of Guard 0x3048800 has address 0x7f1c59758250 to 0x7f1c597583b0
       gc table: 0x7f1c597581c0
    jump target: 0x7f1c59758250
         resops: 0x7f1c5975825e
       failures: 0x7f1c597583b0
            end: 0x7f1c5975857b
[3e4c097edbe9815] jit-backend-addr}
[3e4c097edbecb82] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975826e +0  81010000
[3e4c097edbed955] jit-backend-dump}
[3e4c097edbf0b6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975827b +0  90010000
[3e4c097edbf1884] jit-backend-dump}
[3e4c097edbf48f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975828b +0  9C010000
[3e4c097edbf55dc] jit-backend-dump}
[3e4c097edbf8634] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758298 +0  AB010000
[3e4c097edbf92ee] jit-backend-dump}
[3e4c097edbfc312] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597582ac +0  B3010000
[3e4c097edbfcfc2] jit-backend-dump}
[3e4c097edc004ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597582c4 +0  D3010000
[3e4c097edc011c3] jit-backend-dump}
[3e4c097edc042b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597582da +0  D9010000
[3e4c097edc04f93] jit-backend-dump}
[3e4c097edc07faa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597582ee +0  E1010000
[3e4c097edc08c73] jit-backend-dump}
[3e4c097edc0bc85] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758304 +0  E7010000
[3e4c097edc0c942] jit-backend-dump}
[3e4c097edc0f969] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975831c +0  EB010000
[3e4c097edc10619] jit-backend-dump}
[3e4c097edc13628] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758329 +0  FA010000
[3e4c097edc142d8] jit-backend-dump}
[3e4c097edc172f3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975833d +0  02020000
[3e4c097edc17fb0] jit-backend-dump}
[3e4c097edc1afe9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975834a +0  11020000
[3e4c097edc1bcaf] jit-backend-dump}
[3e4c097edc1ef2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597542f0 +0  5C3F0000
[3e4c097edc1fc0c] jit-backend-dump}
[3e4c097edc23af2] jit-backend}
[3e4c097edc27403] {jit-log-opt-bridge
# bridge out of Guard 0x3048800 with 53 ops
[p0, p1]
+166: guard_class(p1, 16504240, descr=<Guard0x3078ec0>) [p0, p1]
+178: p3 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+182: guard_nonnull(p3, descr=<Guard0x30901d0>) [p0, p1]
+198: i5 = instance_ptr_eq(p3, ConstPtr(ptr4))
+201: guard_true(i5, descr=<Guard0x3090218>) [p0, p1]
debug_merge_point(0, 0, ''()')
+207: guard_class(p0, 16437352, descr=<Guard0x3090260>) [p0, p1]
+220: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+231: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x30902a8>) [p0, p1]
+240: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+240: guard_not_invalidated(descr=<Guard0x30902f0>) [p0, p1]
+240: p10 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+244: guard_nonnull_class(p10, 16471056, descr=<Guard0x3078f20>) [p0, p1]
+264: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(cons (car l4840) AppRand2) from (remove-multiples n4838 (cdr l4840))')
+268: i13 = getfield_gc_i(p10, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+273: guard_class(p12, 16435920, descr=<Guard0x3090338>) [p0, p1]
+286: p15 = getfield_gc_r(p12, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+297: guard_value(p15, ConstPtr(ptr16), descr=<Guard0x3090380>) [p0, p1]
+306: p17 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+310: p18 = getfield_gc_r(p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)) from (cons (car l4840) AppRand2)')
+314: guard_class(p18, 16435920, descr=<Guard0x30903c8>) [p0, p1]
+328: p20 = getfield_gc_r(p18, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+333: guard_nonnull_class(p20, ConstClass(ForwardLink), descr=<Guard0x3078f80>) [p0, p1]
debug_merge_point(0, 0, '(sieve AppRand3)')
+352: guard_class(p17, 16499664, descr=<Guard0x3090410>) [p0, p1]
+365: p23 = getfield_gc_r(p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+376: i25 = instance_ptr_eq(p23, ConstPtr(ptr24))
+379: guard_true(i25, descr=<Guard0x3090458>) [p0, p1]
debug_merge_point(0, 0, '(let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)')
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
debug_merge_point(0, 0, '(let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)))')
debug_merge_point(0, 0, '(remove-multiples (car l) (cdr l))')
+385: guard_class(p23, 16505296, descr=<Guard0x30904a0>) [p0, p1]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))')
debug_merge_point(0, 0, ''()')
debug_merge_point(0, 0, '(let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)) from (remove-multiples (car l) (cdr l))')
debug_merge_point(0, 0, '(sieve AppRand3)')
debug_merge_point(0, 0, '(let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)')
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
debug_merge_point(0, 0, ''()')
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (sieve AppRand3)')
debug_merge_point(0, 0, '(cons (car l) AppRand4) from (cons (car l) AppRand4)')
+398: p27 = new_with_vtable(descr=<SizeDescr 24>)
+439: p28 = new_with_vtable(descr=<SizeDescr 24>)
+450: setfield_gc(p28, i13, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+454: setfield_gc(p28, ConstPtr(ptr29), descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+458: setfield_gc(p27, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+462: setfield_gc(p27, p28, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+466: jump(p27, p18, descr=TargetToken(50538640))
+496: --end of the loop--
[3e4c097edc50ec9] jit-log-opt-bridge}
[3e4c097eddb574d] {jit-backend
[3e4c097ede19c6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c
[3e4c097ede20b5c] jit-backend-dump}
[3e4c097ede2a6ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758704 +0  21000000
[3e4c097ede2b9f1] jit-backend-dump}
[3e4c097ede2f45e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758945 +0  21000000
[3e4c097ede302ac] jit-backend-dump}
[3e4c097ede334db] {jit-backend-addr
bridge out of Guard 0x3048a88 has address 0x7f1c59758700 to 0x7f1c59758940
       gc table: 0x7f1c59758670
    jump target: 0x7f1c59758700
         resops: 0x7f1c5975870e
       failures: 0x7f1c59758940
            end: 0x7f1c59758ad3
[3e4c097ede3576f] jit-backend-addr}
[3e4c097ede38b3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975871e +0  61020000
[3e4c097ede39945] jit-backend-dump}
[3e4c097ede3cb2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758732 +0  69020000
[3e4c097ede3d85c] jit-backend-dump}
[3e4c097ede40d57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758748 +0  8B020000
[3e4c097ede41b0b] jit-backend-dump}
[3e4c097ede44d40] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758760 +0  8F020000
[3e4c097ede45a34] jit-backend-dump}
[3e4c097ede48c72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975876d +0  9E020000
[3e4c097ede4995a] jit-backend-dump}
[3e4c097ede4ca9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758781 +0  A6020000
[3e4c097ede4d788] jit-backend-dump}
[3e4c097ede50814] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975878e +0  B5020000
[3e4c097ede514fc] jit-backend-dump}
[3e4c097ede54547] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758797 +0  C8020000
[3e4c097ede55210] jit-backend-dump}
[3e4c097ede582c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597587c7 +0  B4020000
[3e4c097ede58fa2] jit-backend-dump}
[3e4c097ede5c03e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758811 +0  86020000
[3e4c097ede5cd0a] jit-backend-dump}
[3e4c097ede5fddf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975882b +0  88020000
[3e4c097ede60aa8] jit-backend-dump}
[3e4c097ede63daa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59754ae8 +0  143C0000
[3e4c097ede64a9b] jit-backend-dump}
[3e4c097ede689f2] jit-backend}
[3e4c097ede6c257] {jit-log-opt-bridge
# bridge out of Guard 0x3048a88 with 69 ops
[p0, i1, p2, i3, p4, p5]
+166: guard_class(p0, 16435920, descr=<Guard0x3078fe0>) [p0, i1, p2, i3, p4, p5]
+178: p7 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+189: guard_value(p7, ConstPtr(ptr8), descr=<Guard0x30904e8>) [p0, i1, p2, i3, p4, p5]
+198: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+202: guard_not_invalidated(descr=<Guard0x3090530>) [p0, i1, p2, i3, p4, p5]
+202: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)) from (cons (car l4840) AppRand2)')
+206: guard_class(p10, 16435208, descr=<Guard0x3090578>) [p0, i1, p2, i3, p4, p5]
+220: p12 = getfield_gc_r(p10, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+224: guard_nonnull_class(p12, ConstClass(ForwardLink), descr=<Guard0x3079040>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(sieve AppRand3)')
+244: guard_class(p9, 16499664, descr=<Guard0x30905c0>) [p0, i1, p2, i3, p4, p5]
+257: p15 = getfield_gc_r(p9, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+268: i17 = instance_ptr_eq(p15, ConstPtr(ptr16))
+271: guard_true(i17, descr=<Guard0x3090608>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(let ([remove-multiples (lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))]) (if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))) from (sieve AppRand3)')
debug_merge_point(0, 0, '(lambda (n4838 l4840) (if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))))')
debug_merge_point(0, 0, '(if (null? l) '() (let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4))))')
debug_merge_point(0, 0, '(let ([AppRand3 (remove-multiples (car l) (cdr l))]) (let ([AppRand4 (sieve AppRand3)]) (cons (car l) AppRand4)))')
debug_merge_point(0, 0, '(remove-multiples (car l) (cdr l))')
+277: guard_class(p15, 16505296, descr=<Guard0x3090650>) [p0, i1, p2, i3, p4, p5]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples (car l) (cdr l))')
debug_merge_point(0, 0, '(let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))')
debug_merge_point(0, 0, '(= (modulo (car l4840) n4838) 0)')
+290: i19 = int_is_zero(i1)
+293: guard_false(i19, descr=<Guard0x3090698>) [p0, i1, p2, i3, p4, p5]
+299: i21 = int_eq(i3, -9223372036854775808)
+322: i23 = int_eq(i1, -1)
+335: i24 = int_and(i21, i23)
+338: guard_false(i24, descr=<Guard0x30906e0>) [p0, i1, p2, i3, p4, p5]
+347: i26 = call_i(ConstClass(ll_int_py_mod__Signed_Signed), i3, i1, descr=<Calli 8 ii EF=0 OS=14>)
+399: i28 = int_eq(i26, 0)
guard_false(i28, descr=<Guard0x30790a0>) [i28, p10, p9, p15, p12, i1, p2, i3, None, None]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
debug_merge_point(0, 0, 'l4840')
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+421: guard_nonnull_class(p2, 16471056, descr=<Guard0x3079100>) [i28, p10, p9, p15, p12, i1, p2, i3, None, None]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+447: p31 = new_with_vtable(descr=<SizeDescr 32>)
+491: p32 = new_with_vtable(descr=<SizeDescr 48>)
+502: p33 = new_with_vtable(descr=<SizeDescr 40>)
+513: setfield_gc(p33, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+517: p34 = new_with_vtable(descr=<SizeDescr 24>)
+528: setfield_gc(p34, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+532: p35 = new_with_vtable(descr=<SizeDescr 24>)
+543: setfield_gc(p35, i1, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+554: p36 = new_with_vtable(descr=<SizeDescr 24>)
+565: setfield_gc(p36, i3, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+576: setfield_gc(p36, p2, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+580: setfield_gc(p35, p36, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+584: setfield_gc(p34, p35, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+588: setfield_gc(p33, p34, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+592: p37 = new_with_vtable(descr=<SizeDescr 40>)
+603: setfield_gc(p37, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+607: setfield_gc(p37, p9, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+611: setfield_gc(p37, p10, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+622: setfield_gc(p37, ConstPtr(ptr38), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+626: setfield_gc(p33, p37, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+630: setfield_gc(p33, ConstPtr(ptr39), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+641: setfield_gc(p32, ConstPtr(ptr40), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+645: setfield_gc(p32, ConstPtr(ptr41), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+656: setfield_gc(p32, p33, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+660: setfield_gc(p32, p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+671: setfield_gc(p31, ConstPtr(ptr42), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+675: setfield_gc(p31, i1, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+679: setfield_gc(p31, p2, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+683: setfield_gc(p32, p36, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+687: jump(p31, p32, descr=TargetToken(50073296))
+720: --end of the loop--
[3e4c097edea5e1b] jit-log-opt-bridge}
[3e4c097ee04ba87] {jit-backend
[3e4c097ee0a006a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758be0 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C9201000048FF0425A0A09C02813F100A01000F85000000004C8B7F104983FF01720741813F509A00000F85000000008139480E00000F85000000004C8B79204C8B3528FFFFFF4D39F70F85000000004C8B79104C8B691841813FB01E01000F85000000004D8B670841813C24100A01000F85000000004D8B5424104983FA01720741813A503601000F85000000004D8B4F104983C1010F80000000004D8B7A084C8B05F7FEFFFF4D39C70F85000000004D8B42104D39C40F850000000041817D00307A01000F85000000004D8B45084983F8017207418138900F00000F85000000004981F9305705000F8F00000000488B0C25F091F900488D5168483B14251092F9000F87B300000048891425F091F90048C70110110000488D512848C702480E00004C894208488D422848C700B01E01004C8960084C894810488942104C896A184C8972204C8B3589FEFFFF4C897110488951184C894108488B157EFEFFFF48895120488B157BFEFFFF4C89F7BB03000000BE640000004C89C049BB003675591C7F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BBE08A75591C7F00004C895D204D8D9B1088FFFF41FFD3E948FEFFFF49BBD08B75591C7F00004C895D204D8D9B208FFFFF41FFD3E938FFFFFFFF3577FDFFFF49BBF08A75591C7F000041534D8D9B1085FFFF41FFE3FF3563FDFFFF49BB008B75591C7F000041534D8D9B0085FFFF41FFE3FF354FFDFFFF49BB108B75591C7F000041534D8D9BF084FFFF41FFE3FF3543FDFFFF49BB208B75591C7F000041534D8D9BE084FFFF41FFE3FF352FFDFFFF49BB308B75591C7F000041534D8D9BD084FFFF41FFE3FF351BFDFFFF49BB408B75591C7F000041534D8D9BC084FFFF41FFE3FF3507FDFFFF49BB508B75591C7F000041534D8D9BB084FFFF41FFE3FF35F3FCFFFF49BB608B75591C7F000041534D8D9BA084FFFF41FFE3FF35E7FCFFFF49BB708B75591C7F000041534D8D9B9084FFFF41FFE3FF35D3FCFFFF49BB808B75591C7F000041534D8D9B8084FFFF41FFE3FF35BFFCFFFF49BB908B75591C7F000041534D8D9B7084FFFF41FFE3FF35ABFCFFFF49BBA08B75591C7F000041534D8D9B6084FFFF41FFE3FF3597FCFFFF49BBB08B75591C7F000041534D8D9B5084FFFF41FFE3FF3583FCFFFF49BBC08B75591C7F000041534D8D9B4084FFFF41FFE3
[3e4c097ee0a77b5] jit-backend-dump}
[3e4c097ee0b1c28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758c84 +0  21000000
[3e4c097ee0b2f74] jit-backend-dump}
[3e4c097ee0b6d55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758e25 +0  21000000
[3e4c097ee0b7b7b] jit-backend-dump}
[3e4c097ee0baea2] {jit-backend-addr
bridge out of Guard 0x3048fe0 has address 0x7f1c59758c80 to 0x7f1c59758e20
       gc table: 0x7f1c59758be0
    jump target: 0x7f1c59758c80
         resops: 0x7f1c59758c8e
       failures: 0x7f1c59758e20
            end: 0x7f1c59758feb
[3e4c097ee0bd0a3] jit-backend-addr}
[3e4c097ee0c0407] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758c9e +0  C1010000
[3e4c097ee0c11cb] jit-backend-dump}
[3e4c097ee0c445f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758cb5 +0  C6010000
[3e4c097ee0c518d] jit-backend-dump}
[3e4c097ee0c83c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758cc1 +0  D6010000
[3e4c097ee0c904e] jit-backend-dump}
[3e4c097ee0cc20f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758cd5 +0  DE010000
[3e4c097ee0ccec8] jit-backend-dump}
[3e4c097ee0d003a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758cea +0  E5010000
[3e4c097ee0d0d77] jit-backend-dump}
[3e4c097ee0d3ec7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758cfc +0  EF010000
[3e4c097ee0d4bc4] jit-backend-dump}
[3e4c097ee0d7d0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758d14 +0  F3010000
[3e4c097ee0d8a41] jit-backend-dump}
[3e4c097ee0dbb35] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758d22 +0  01020000
[3e4c097ee0dc81d] jit-backend-dump}
[3e4c097ee0df91d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758d36 +0  09020000
[3e4c097ee0e0657] jit-backend-dump}
[3e4c097ee0e3730] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758d43 +0  18020000
[3e4c097ee0e4417] jit-backend-dump}
[3e4c097ee0e75de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758d51 +0  26020000
[3e4c097ee0e82d5] jit-backend-dump}
[3e4c097ee0eb3bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758d68 +0  2B020000
[3e4c097ee0ec08f] jit-backend-dump}
[3e4c097ee0ef3a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59758d75 +0  56020000
[3e4c097ee0f0094] jit-backend-dump}
[3e4c097ee0f346c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597558a6 +0  D6330000
[3e4c097ee0f4185] jit-backend-dump}
[3e4c097ee0f8181] jit-backend}
[3e4c097ee0fbb7a] {jit-log-opt-bridge
# bridge out of Guard 0x3048fe0 with 59 ops
[p0, p1, p2, i3]
+182: guard_class(p1, 16499664, descr=<Guard0x3079160>) [p0, p1, p2, i3]
+194: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+198: guard_nonnull_class(p5, 16471056, descr=<Guard0x30791c0>) [p0, p1, p2, i3]
+217: i7 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_UnwrappedFixnumCons.inst__car 8 pure>)
+217: guard_class(p0, 16435208, descr=<Guard0x3090728>) [p0, p1, p2, i3]
+229: p9 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+240: guard_value(p9, ConstPtr(ptr10), descr=<Guard0x3090770>) [p0, p1, p2, i3]
+249: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+253: p12 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4867 (add1 i4869)) from (cons (car l) AppRand4)')
+257: guard_class(p11, 16504944, descr=<Guard0x30907b8>) [p0, p1, p2, i3]
+270: p14 = getfield_gc_r(p11, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+274: guard_class(p14, 16499664, descr=<Guard0x3090800>) [p0, p1, p2, i3]
+288: p16 = getfield_gc_r(p14, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+293: guard_nonnull_class(p16, 16510992, descr=<Guard0x3079220>) [p0, p1, p2, i3]
+312: i18 = getfield_gc_i(p11, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+316: i20 = int_add_ovf(i18, 1)
+320: guard_no_overflow(descr=<Guard0x3090848>) [p0, p1, p2, i3]
+326: p21 = getfield_gc_r(p16, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+337: guard_value(p21, ConstPtr(ptr22), descr=<Guard0x3090890>) [p0, p1, p2, i3]
+346: p23 = getfield_gc_r(p16, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+350: i24 = instance_ptr_eq(p14, p23)
+353: guard_true(i24, descr=<Guard0x30908d8>) [p0, p1, p2, i3]
debug_merge_point(0, 0, '(let ([if3 (> i4869 primes-iters)]) (if if3 (begin (void) (void)) (begin (primes<= 100) (doloop4867 (add1 i4869))))) from (doloop4867 (add1 i4869))')
+359: guard_class(p12, 16528368, descr=<Guard0x3090920>) [p0, p1, p2, i3]
+373: p26 = getfield_gc_r(p12, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+377: guard_nonnull_class(p26, ConstClass(ForwardLink), descr=<Guard0x3079280>) [p0, p1, p2, i3]
debug_merge_point(0, 0, '(> i4869 primes-iters)')
+396: guard_not_invalidated(descr=<Guard0x3090968>) [p0, p1, p2, i3]
+396: i29 = int_gt(i20, 350000)
+403: guard_false(i29, descr=<Guard0x30909b0>) [p0, p1, p2, i3]
debug_merge_point(0, 0, '(if if3 (begin (void) (void)) (begin (primes<= 100) (doloop4867 (add1 i4869))))')
debug_merge_point(0, 0, '(begin (primes<= 100) (doloop4867 (add1 i4869)))')
debug_merge_point(0, 0, '(primes<= 100)')
+409: p30 = getfield_gc_r(p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand5 (interval-list 2 n4857)]) (sieve AppRand5))')
debug_merge_point(0, 0, '(interval-list 2 n4857)')
debug_merge_point(0, 0, '(let ([if0 (> m n)]) (if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))) from (interval-list 2 n4857)')
debug_merge_point(0, 0, '(> m n)')
debug_merge_point(0, 0, '(if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))')
debug_merge_point(0, 0, '(let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1)))')
debug_merge_point(0, 0, '(+ 1 m)')
debug_merge_point(0, 0, '(let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))')
debug_merge_point(0, 0, '(interval-list AppRand0 n)')
debug_merge_point(0, 0, '(let ([if0 (> m n)]) (if if0 '() (let ([AppRand0 (+ 1 m)]) (let ([AppRand1 (interval-list AppRand0 n)]) (cons m AppRand1))))) from (interval-list AppRand0 n)')
+409: p31 = new_with_vtable(descr=<SizeDescr 40>)
+450: p32 = new_with_vtable(descr=<SizeDescr 40>)
+461: setfield_gc(p32, p26, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+465: p33 = new_with_vtable(descr=<SizeDescr 24>)
+476: setfield_gc(p33, p14, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+480: setfield_gc(p33, i20, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+484: setfield_gc(p32, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+488: setfield_gc(p32, p12, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+492: setfield_gc(p32, ConstPtr(ptr34), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+503: setfield_gc(p31, ConstPtr(ptr35), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+507: setfield_gc(p31, p32, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+511: setfield_gc(p31, p26, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+522: setfield_gc(p31, ConstPtr(ptr36), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+533: jump(ConstPtr(ptr37), 3, 100, p26, ConstPtr(ptr40), p31, descr=TargetToken(50538400))
+576: --end of the loop--
[3e4c097ee130253] jit-log-opt-bridge}
[3e4c097ee3023bf] {jit-backend
[3e4c097ee344f6c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597590b
[3e4c097ee34abaa] jit-backend-dump}
[3e4c097ee354baa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59759114 +0  21000000
[3e4c097ee355fa8] jit-backend-dump}
[3e4c097ee359baf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59759245 +0  21000000
[3e4c097ee35aa03] jit-backend-dump}
[3e4c097ee35dc63] {jit-backend-addr
bridge out of Guard 0x2f62bc0 has address 0x7f1c59759110 to 0x7f1c59759240
       gc table: 0x7f1c597590b0
    jump target: 0x7f1c59759110
         resops: 0x7f1c5975911e
       failures: 0x7f1c59759240
            end: 0x7f1c5975937f
[3e4c097ee35ff53] jit-backend-addr}
[3e4c097ee36348e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975912b +0  54010000
[3e4c097ee364300] jit-backend-dump}
[3e4c097ee367695] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59759142 +0  75010000
[3e4c097ee3683c9] jit-backend-dump}
[3e4c097ee36b5bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975915a +0  79010000
[3e4c097ee36c2cd] jit-backend-dump}
[3e4c097ee36f561] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c5975916c +0  83010000
[3e4c097ee370280] jit-backend-dump}
[3e4c097ee3733d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59759186 +0  85010000
[3e4c097ee374110] jit-backend-dump}
[3e4c097ee3771fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597591a1 +0  86010000
[3e4c097ee377f41] jit-backend-dump}
[3e4c097ee37b016] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597591b5 +0  8E010000
[3e4c097ee37bd32] jit-backend-dump}
[3e4c097ee37ee20] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c597591c2 +0  9D010000
[3e4c097ee37fb4b] jit-backend-dump}
[3e4c097ee382e5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f1c59752bd7 +0  35650000
[3e4c097ee383c0a] jit-backend-dump}
[3e4c097ee387ac8] jit-backend}
[3e4c097ee38b4ff] {jit-log-opt-bridge
# bridge out of Guard 0x2f62bc0 with 35 ops
[p0, i1, p2, p3]
+118: guard_false(i1, descr=<Guard0x30792e0>) [p0, i1, p2, p3]
+127: guard_not_invalidated(descr=<Guard0x30909f8>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2)))')
debug_merge_point(0, 0, '(let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))')
+127: p4 = getfield_gc_r(p2, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+131: guard_nonnull_class(p4, ConstClass(ForwardLink), descr=<Guard0x3079340>) [p0, i1, p2, p3]
debug_merge_point(0, 0, 'l4840')
+150: p6 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+155: guard_nonnull_class(p6, 16471056, descr=<Guard0x30793a0>) [p0, i1, p2, p3]
+174: p8 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+179: guard_class(p8, 16499664, descr=<Guard0x3090a40>) [p0, i1, p2, p3]
+192: p10 = getfield_gc_r(p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(remove-multiples n4838 (cdr l4840))')
+196: p11 = getfield_gc_r(p8, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+200: guard_nonnull_class(p11, 16510992, descr=<Guard0x3079400>) [p0, i1, p2, p3]
+218: i13 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+223: p14 = getfield_gc_r(p6, descr=<FieldP pycket.values.W_UnwrappedFixnumCons.inst__cdr 16 pure>)
+227: guard_nonnull_class(p14, 16616448, descr=<Guard0x3079460>) [p0, i1, p2, p3]
+245: p16 = getfield_gc_r(p11, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+256: guard_value(p16, ConstPtr(ptr17), descr=<Guard0x3090a88>) [p0, i1, p2, p3]
+265: p18 = getfield_gc_r(p11, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+269: i19 = instance_ptr_eq(p8, p18)
+272: guard_true(i19, descr=<Guard0x3090ad0>) [p0, i1, p2, p3]
debug_merge_point(0, 0, '(if (null? l4840) '() (let ([if1 (= (modulo (car l4840) n4838) 0)]) (if if1 (remove-multiples n4838 (cdr l4840)) (let ([l4840 l4840][AppRand2 (remove-multiples n4838 (cdr l4840))]) (cons (car l4840) AppRand2))))) from (remove-multiples n4838 (cdr l4840))')
+278: p20 = new_with_vtable(descr=<SizeDescr 32>)
+322: p21 = new_with_vtable(descr=<SizeDescr 48>)
+333: setfield_gc(p21, p4, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+337: setfield_gc(p20, p14, descr=<FieldP pycket.small_list.ConsEnvSize2Fixed10.inst_w_val1 24 pure>)
+341: setfield_gc(p20, p8, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+345: setfield_gc(p20, i13, descr=<FieldS pycket.small_list.ConsEnvSize2Fixed10.inst_vals_fixed_0 16 pure>)
+349: setfield_gc(p21, p10, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+353: setfield_gc(p21, p2, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+364: setfield_gc(p21, ConstPtr(ptr22), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+368: setfield_gc(p21, p6, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+372: jump(p20, p21, descr=TargetToken(50073296))
+400: --end of the loop--
[3e4c097ee3ac935] jit-log-opt-bridge}
[3e4c0ae6e65e87d] {jit-summary
Tracing:      	24	0.014622
Backend:      	24	0.006049
TOTAL:      		37.283354
ops:             	11468
recorded ops:    	2326
  calls:         	10
guards:          	777
opt ops:         	1187
opt guards:      	348
opt guards shared:	236
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	84
nvholes:         	0
nvreused:        	9
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	8
Total # of bridges:	16
Freed # of loops:	0
Freed # of bridges:	0
[3e4c0ae6e67235e] jit-summary}
[3e4c0ae6e67cafb] {jit-backend-counts
entry 1:459
TargetToken(50073296):157500055
TargetToken(50073376):1021999801
entry 2:51
TargetToken(50073456):80499996
TargetToken(50073536):1014999865
entry 3:66
TargetToken(50538320):66
TargetToken(50538400):346499793
entry 4:53
TargetToken(50538480):3499999
TargetToken(50538560):339499856
entry 5:54
bridge 49687104:76999966
bridge 49687680:255499824
bridge 49688256:76999943
bridge 49687776:62999940
bridge 49687296:3499995
entry 11:22
TargetToken(50538640):3499995
TargetToken(50538720):80499867
bridge 49690656:6999977
entry 13:98
entry 14:37
bridge 50824352:9
bridge 50823968:18
bridge 49690848:6999904
bridge 50627528:3499947
bridge 50208312:3499947
bridge 50627024:3499946
bridge 50628608:3499946
bridge 50629256:3499945
bridge 50630624:3499943
bridge 49687488:3499908
[3e4c0ae6e6853c5] jit-backend-counts}
